---

title: Systems, methods, and computer-readable media for manipulating and mapping tiles of graphical object data
abstract: Systems, methods, and computer-readable media for manipulating and/or mapping tiles of graphical object data are provided. For example, a method for manipulating an original tile of graphical data may include generating a mirrored copy of the original tile by mirroring the original tile with respect to a first side of the original tile, superimposing the mirrored copy on the original tile, erasing a first portion of the superimposed mirrored copy of the original tile, and blending at least some of the remaining portion of the superimposed mirrored copy of the original tile with the original tile to create a manipulated tile. The manipulated version of the original tile may be patterned (e.g., in an extensible manner) along a layer of a virtual canvas that may have various aspect ratios, while maintaining a seamless or fluid transition between adjacent tiles.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09524573&OS=09524573&RS=09524573
owner: Apple Inc.
number: 09524573
owner_city: Cupertino
owner_country: US
publication_date: 20120126
---
This application claims the benefit of U.S. Provisional Patent Application No. 61 493 509 filed Jun. 5 2011 which is hereby incorporated by reference herein in its entirety.

This can relate to systems methods and computer readable media for generating graphical object data and more particularly to systems methods and computer readable media for manipulating and mapping tiles of graphical object data using an electronic device.

Some electronic devices include a graphical display system for generating and presenting graphical objects such as free form drawing strokes images strings of text and drawing shapes on a display. A user of such devices may interact with the graphical display system via a user interface to create different graphical objects in a tile that may be mapped in a pattern across a background layer. However noise often occurs at the boundary of two adjacent tiles.

Systems methods and computer readable media for manipulating and mapping tiles of graphical object data are provided.

Rather than simply mapping a pattern of an original single tile of graphical object data in a layer on a virtual canvas or workspace a graphical display system of an electronic device may be configured to manipulate the graphical object content of the original tile to generate a manipulated version of that original tile. The manipulated version of the original tile may be patterned more smoothly than the original tile along a layer of a virtual canvas. For example the manipulated version of the original tile may be patterned extensibly along a virtual canvas layer that may have various aspect ratios while a seamless or fluid transition between adjacent tiles may be maintained.

In some embodiments there is provided a method for manipulating an original tile of graphical data. The method may include generating a mirrored copy of the original tile by mirroring the original tile with respect to a first side of the original tile. The method may also include superimposing the mirrored copy on the original tile and then erasing a first portion of the superimposed mirrored copy. The method may also include blending at least some of the remaining portion of the superimposed mirrored copy with the original tile to create a manipulated tile.

For example in some embodiments the first portion of the superimposed mirrored copy may be a portion of the superimposed mirrored copy that is not within a threshold distance of the first side of the original tile. In some embodiments the blending may include altering the opaqueness of at least some of the remaining portion of the superimposed mirrored copy. In some embodiments the method may also include pinning the manipulated tile to the bottom center of a layer of a canvas and then patterning a copy of the manipulated tile adjacent the first side of the pinned manipulated tile and or patterning a copy of the manipulated tile away from the pinned manipulated tile in a first direction that is perpendicular to the first side.

In some embodiments the method may also include generating a mirrored copy of the manipulated tile by mirroring the manipulated tile with respect to a second side of the manipulated tile. Next the method may include superimposing the mirrored copy of the manipulate tile on the manipulated tile and erasing a first portion of the superimposed mirrored copy of the manipulated tile. Then the method may include blending at least some of the remaining portion of the superimposed mirrored copy of the manipulated tile with the manipulated tile to create an additionally manipulated tile. For example in some embodiments the second portion of the superimposed mirrored copy of the manipulated tile may include a portion of the superimposed mirrored copy of the manipulated tile that is not within a threshold distance of the second side of the manipulated tile. The blending of at least some of the remaining portion of the superimposed mirrored copy of the manipulated tile may include altering the opaqueness of at least some of the remaining portion of the superimposed mirrored copy of the manipulated tile. Next the method may include pinning the additionally manipulated tile to the bottom center of a layer of a canvas and then patterning a copy of the additionally manipulated tile adjacent the first side of the pinned additionally manipulated tile and or patterning a copy of the additionally manipulated tile away from the pinned additionally manipulated tile in a first direction that is perpendicular to the second side.

In other embodiments there is provided a computer readable media for controlling an electronic device. The computer readable media may include computer readable code recorded thereon for generating a mirrored copy of the original tile by mirroring the original tile with respect to a first side of the original tile superimposing the mirrored copy on the original tile erasing a first portion of the superimposed mirrored copy and blending at least some of the remaining portion of the superimposed mirrored copy with the original tile to create a manipulated tile.

In yet other embodiments there is provided a graphical display system that may include a graphical object manipulating module that generates a mirrored copy of an original tile by mirroring the original tile with respect to a first side of the original tile superimposes the mirrored copy on the original tile erases a first portion of the superimposed mirrored copy and blends at least some of the remaining portion of the superimposed mirrored copy with the original tile to create a manipulated tile.

In still yet other embodiments there is provided a machine implemented method in an environment which uses an application programming interface API . The method may include transferring a manipulation call through the API to cause a mirrored copy of an original tile to be generated by mirroring the original tile with respect to a first side of the original tile the mirrored copy to be superimposed on the original tile a first portion of the superimposed mirrored copy to be erased and at least some of the remaining portion of the superimposed mirrored copy to be blended with the original tile to create a manipulated tile.

In still yet other embodiments there is provided a machine readable storage medium storing executable instructions that when executed by a data processing system cause the data processing system to perform a method in an environment that uses an application programming interface API . The method may include calling through the API to obtain an original tile of graphical data and receiving a return through the API the return being generated by an API implementing component that generates a mirrored copy of the original tile by mirroring the original tile with respect to a first side of the original tile superimposes the mirrored copy on the original tile erases a first portion of the superimposed mirrored copy and blends at least some of the remaining portion of the superimposed mirrored copy with the original tile to create a manipulated tile.

In still yet other embodiments there is provided a data processing system that may include a processor to execute instructions and a memory coupled with the processor to store instructions which when executed by the processor cause the processor to perform operations to generate an application programming interface API that allows an API calling component to perform operations. The operations may be to generate a mirrored copy of the original tile by mirroring the original tile with respect to a first side of the original tile superimpose the mirrored copy on the original tile erase a first portion of the superimposed mirrored copy and blend at least some of the remaining portion of the superimposed mirrored copy with the original tile to create a manipulated tile.

In still yet other embodiments there is provided a machine readable storage medium that provides instructions that if executed by a processor will cause the processor to generate an application programming interface API that allows an API implementing component to perform operations. The operations include generating a mirrored copy of the original tile by mirroring the original tile with respect to a first side of the original tile superimposing the mirrored copy on the original tile erasing a first portion of the superimposed mirrored copy and blending at least some of the remaining portion of the superimposed mirrored copy with the original tile to create a manipulated tile.

In still yet other embodiments there is provided a data processing system that may include a memory to store program code and a processor to execute the program code to generate an application programming interface API which may include means for generating a mirrored copy of the original tile by mirroring the original tile with respect to a first side of the original tile means for superimposing the mirrored copy on the original tile means for erasing a first portion of the superimposed mirrored copy and means for blending at least some of the remaining portion of the superimposed mirrored copy with the original tile to create a manipulated tile.

In still yet other embodiments there is provided a data processing system that may include an application programming interface API implementing component and an API to interface the API implementing component with an API calling component. The API may include means for generating a mirrored copy of the original tile by mirroring the original tile with respect to a first side of the original tile means for superimposing the mirrored copy on the original tile means for erasing a first portion of the superimposed mirrored copy and means for blending at least some of the remaining portion of the superimposed mirrored copy with the original tile to create a manipulated tile.

In still yet other embodiments there is provided a data processing system that may include a processor to execute instructions and a memory coupled with the processor to store instructions which when executed by the processor cause the processor to perform operations to generate an application programming interface API implementing component that implements an API. The API exposes one or more functions to an API calling component. The API may include a function to generate a mirrored copy of an original tile by mirroring the original tile with respect to a first side of the original tile a function to superimpose the mirrored copy on the original tile a function to erase a first portion of the superimposed mirrored copy and a function to blend at least some of the remaining portion of the superimposed mirrored copy with the original tile to create a manipulated tile.

In still yet other embodiments there is provided a data processing system that may include a processor to execute instructions and a memory coupled with the processor to store instructions which when executed by the processor cause the processor to interface a component of the data processing system with an application programming interface API calling component and to perform operations. The operations may include generating a mirrored copy of the original tile by mirroring the original tile with respect to a first side of the original tile superimposing the mirrored copy on the original tile erasing a first portion of the superimposed mirrored copy and blending at least some of the remaining portion of the superimposed mirrored copy with the original tile to create a manipulated tile.

In still yet other embodiments there is provided an apparatus that may include a machine readable storage medium that provides instructions that when executed by a machine will cause the machine to allow an application programming interface API calling component to perform operations. The operations may include generating a mirrored copy of the original tile by mirroring the original tile with respect to a first side of the original tile superimposing the mirrored copy on the original tile erasing a first portion of the superimposed mirrored copy and blending at least some of the remaining portion of the superimposed mirrored copy with the original tile to create a manipulated tile.

Systems methods and computer readable media for manipulating and mapping tiles of graphical object data are provided and described with reference to .

Electronic device may include a processor or control circuitry memory communications circuitry power supply input component and display . Electronic device may also include a bus that may provide one or more wired or wireless communication links or paths for transferring data and or power to from or between various other components of device . In some embodiments one or more components of electronic device may be combined or omitted. Moreover electronic device may include other components not combined or included in . For example electronic device may include motion sensing circuitry a compass positioning circuitry or several instances of the components shown in . For the sake of simplicity only one of each of the components is shown in .

Memory may include one or more storage mediums including for example a hard drive flash memory permanent memory such as read only memory ROM semi permanent memory such as random access memory RAM any other suitable type of storage component or any combination thereof. Memory may include cache memory which may be one or more different types of memory used for temporarily storing data for electronic device applications. Memory may store media data e.g. music and image files software e.g. for implementing functions on device firmware preference information e.g. media playback preferences lifestyle information e.g. food preferences exercise information e.g. information obtained by exercise monitoring equipment transaction information e.g. information such as credit card information wireless connection information e.g. information that may enable device to establish a wireless connection subscription information e.g. information that keeps track of podcasts or television shows or other media a user subscribes to contact information e.g. telephone numbers and e mail addresses calendar information any other suitable data or any combination thereof.

Communications circuitry may be provided to allow device to communicate with one or more other electronic devices or servers using any suitable communications protocol. For example communications circuitry may support Wi Fi e.g. an 802.11 protocol Ethernet Bluetooth high frequency systems e.g. 900 MHz 2.4 GHz and 5.6 GHz communication systems infrared transmission control protocol internet protocol TCP IP e.g. any of the protocols used in each of the TCP IP layers hypertext transfer protocol HTTP BitTorrent file transfer protocol FTP real time transport protocol RTP real time streaming protocol RTSP secure shell protocol SSH any other communications protocol or any combination thereof. Communications circuitry may also include circuitry that can enable device to be electrically coupled to another device e.g. a host computer or an accessory device and communicate with that other device either wirelessly or via a wired connection.

Power supply may provide power to one or more of the components of device . In some embodiments power supply can be coupled to a power grid e.g. when device is not a portable device such as a desktop computer . In some embodiments power supply can include one or more batteries for providing power e.g. when device is a portable device such as a cellular telephone . As another example power supply can be configured to generate power from a natural source e.g. solar power using solar cells .

One or more input components may be provided to permit a user to interact or interface with device . For example input component can take a variety of forms including but not limited to a touch pad dial click wheel scroll wheel touch screen one or more buttons e.g. a keyboard mouse joy stick track ball microphone camera proximity sensor light detector motion sensors and combinations thereof. Each input component can be configured to provide one or more dedicated control functions for making selections or issuing commands associated with operating device .

Electronic device may also include one or more output components that may present information e.g. graphical audible and or tactile information to a user of device . An output component of electronic device may take various forms including but not limited to audio speakers headphones audio line outs visual displays antennas infrared ports rumblers vibrators or combinations thereof.

For example electronic device may include display as an output component. Display may include any suitable type of display or interface for presenting visual data to a user. In some embodiments display may include a display embedded in device or coupled to device e.g. a removable display . Display may include for example a liquid crystal display LCD a light emitting diode LED display an organic light emitting diode OLED display a surface conduction electron emitter display SED a carbon nanotube display a nanocrystal display any other suitable type of display or combination thereof. Alternatively display can include a movable display or a projecting system for providing a display of content on a surface remote from electronic device such as for example a video projector a head up display or a three dimensional e.g. holographic display. As another example display may include a digital or mechanical viewfinder such as a viewfinder of the type found in compact digital cameras reflex cameras or any other suitable still or video camera.

In some embodiments display may include display driver circuitry circuitry for driving display drivers or both. Display can be operative to display content e.g. media playback information application screens for applications implemented on electronic device information regarding ongoing communications operations information regarding incoming communications requests device operation screens etc. that may be under the direction of processor . Display can be associated with any suitable characteristic dimensions defining the size and shape of the display. For example the display can be rectangular or have any other polygonal shape or alternatively can be defined by a curved or other non polygonal shape e.g. a circular display . Display can have one or more primary orientations for which an interface can be displayed or can instead or in addition be operative to display an interface along any orientation selected by a user.

It should be noted that one or more input components and one or more output components may sometimes be referred to collectively herein as an input output I O component or I O interface e.g. input component and display as I O component or I O interface . For example input component and display may sometimes be a single I O component such as a touch screen that may receive input information through a user s touch of a display screen and that may also provide visual information to a user via that same display screen.

Processor of device may include any processing circuitry operative to control the operations and performance of one or more components of electronic device . For example processor may be used to run operating system applications firmware applications graphics editing applications media playback applications media editing applications or any other application. In some embodiments processor may receive input signals from input component and or drive output signals through display . Processor may load a user interface program e.g. a program stored in memory or another device or server to determine how instructions or data received via an input component may manipulate the way in which information is stored and or provided to the user via an output component e.g. display . Electronic device e.g. processor memory or any other components available to device may be configured to process graphical data at various resolutions frequencies intensities and various other characteristics as may be appropriate for the capabilities and resources of device .

Electronic device may also be provided with a housing that may at least partially enclose one or more of the components of device for protection from debris and other degrading forces external to device . In some embodiments one or more of the components may be provided within its own housing e.g. input component may be an independent keyboard or mouse within its own housing that may wirelessly or through a wire communicate with processor which may be provided within its own housing .

As shown in for example graphical display system may include a graphical object generating module that may define and generate at least a portion of the graphical contents of each of the screens to be rendered for display. Such graphical screen contents may be based on the one or more applications being run by electronic device as well as any input instructions being received by device e.g. via input component . The graphical screen contents can include any suitable graphical data including but not limited to free form drawing strokes image content e.g. photographic images textual information e.g. one or more alphanumeric characters in a text string drawing shape objects video data based on images of a video program and combinations thereof. For example an application run by electronic device may be any suitable application that may provide a virtual canvas or workspace on which a user may create and manipulate graphical objects such as free form drawing strokes images drawing shapes and text strings e.g. Photoshop or Illustrator by Adobe Systems Incorporated or Microsoft Paint by Microsoft Corporation . Graphical object generating module may define and generate at least some of these types of graphical objects to be rendered or otherwise processed for display by graphical display system . For example graphical object generating module may define and generate drawing stroke graphical objects image graphical objects drawing shape graphical objects and or text string graphical objects to be processed for display by graphical display system on display of electronic device .

Graphical object data may generally be represented in two ways or as two types of data i.e. pixel data and analytical graphic objects or vector objects . Graphical object data of the pixel data type may be collections of one or more pixels e.g. samples of color and or other information including transparency and the like that may be provided in various raster or bitmap layers on a canvas or workspace. On the other hand graphical object data of the vector object type may be an abstract graphic entity e.g. such that its appearance position and orientation in a canvas or workspace may be defined analytically through geometrical formulas coordinates and the like . Some pixel data may be provided with additional position and orientation information that can specify the spatial relationship of its pixels relative to a canvas or workspace containing the pixel data which may be considered a bitmap vector graphic object when placed in a vector graphics document. Before the application of any additional transformation or deformation such a bitmap vector object may be equivalent to a rectangular vector object texture mapped to the pixel data. While at least some of the embodiments herein may be specifically described with reference to graphical object data of the pixel data type it is to be understood that at least some of the systems methods and computer readable media described herein may additionally or alternatively manipulate and or map tiles of graphical object data of the vector object type and or of some combination of the pixel data type and the vector object type.

Graphical object generating module may define and generate various types of graphical objects of an application document or work such as drawing stroke graphical objects image graphical objects drawing shape graphical objects and or text string graphical objects which may be processed for display by graphical display system on display of electronic device . In some embodiments a layer of graphical object data may be generated and presented on a virtual canvas or workspace by system that may include a single tile of graphical object data mapped out in a repeating pattern of multiple instances of that single tile. Such a layer of graphical object data may then be used in any suitable way including but not limited to as a background for any suitable application e.g. Photo Booth by Apple Inc. of Cupertino Calif. or any other suitable application that may utilize a layer of graphical object data provided by a pattern of multiple instances of a single tile of graphical object data .

Therefore graphical object generating module may be configured to define edit and or generate an original single tile of graphical object data to be patterned. Such an original single tile may be an individual bitmap pixmap or raster layer of pixels and may be independently rendered for display. Graphical object generating module may receive graphical object input information from various input sources for defining one or more graphical object properties of an original single tile of graphical object data to be patterned. For example such input sources may be the one or more applications being run by electronic device and or any user input instructions being received by device e.g. via input component as shown in . In some embodiments based on at least a portion of the received graphical object input information graphical object generating module may be configured to define and generate at least a portion of one or more graphical objects in an original single tile. For example as shown in graphical object generating module may generate original tile graphical object content which may define the graphical object content of the single original tile to be patterned. The content of a graphical object defined by original tile graphical object content may be any suitable type of graphical content such as a drawing stroke an image a string of text a drawing shape and the like. In some embodiments original tile graphical object content may be at least partially based on one or more graphical object properties defined by graphical object input information .

For example when graphical object generating module is generating a drawing stroke graphical object as at least a portion of the graphical object content of a single original tile to be patterned graphical object input information may define one or more drawing stroke properties of that drawing stroke graphical object. A drawing stroke graphical object may be considered a path along which a drawing stroke input tool e.g. a stamp may be applied. Such a drawing stroke input tool may define a particular set of pixel data to be applied on a display when the stamp is used for creating a drawing stroke graphical object along a defined trail. For example such a trail may define a path on the display along which an associated drawing stroke input tool may repeatedly apply its pixel data for generating a drawing stroke graphical object on the display. Therefore graphical object input information may define one or more drawing stroke input tool properties and or one or more trail properties for a particular drawing stroke graphical object of a single original tile to be patterned. A stamp drawing stroke input tool may be defined by any suitable stamp property or set of stamp properties including but not limited to shape size pattern orientation hardness color transparency spacing and the like. A drawing stroke trail may be defined by any suitable trail property or set of trail properties including but not limited to length path and the like. Once drawing stroke graphical object input information has been received graphical object generating module may generate appropriate original tile drawing stroke graphical object content such as a particular pixel data set for a stamp applied along a particular trail in the original tile.

As another example when graphical object generating module is generating an image graphical object as at least a portion of the graphical object content of a single original tile to be patterned graphical object input information may define one or more images of that image graphical object. An image may be any suitable image file that can be imported into a single original tile to be patterned. Such an image may be defined by an address at which image data is stored e.g. in memory of device . An image file may be in any suitable format for providing image content to system including but not limited to a JPEG file a TIFF file a PNG file a GIF file and the like. Once image graphical object input information has been received graphical object generating module may generate appropriate original tile image graphical object content such as an image file in the original tile.

As another example when graphical object generating module is generating a text string graphical object as at least a portion of the graphical object content of a single original tile to be patterned graphical object input information may define one or more characters as well as a selection of one or more properties that may be used to define various characteristics of the selected characters of that text string graphical object. For example a text string character may be a letter number punctuation or other symbol that may be used in the written form of one or more languages. Symbol characters may include but are not limited to representations from a variety of categories such as mathematics astrology astronomy chess dice ideology musicology economics politics religion warning signs meteorology and the like. A property that may be used to define a characteristic of a text string character may include but is not limited to a font type e.g. Arial or Courier a character size a style type e.g. bold or italic a color and the like. Once text string graphical object input information has been received graphical object generating module may generate appropriate original tile text string graphical object content such as a string of one or more particular character glyphs in the original tile.

As another example when graphical object generating module is generating a drawing shape graphical object as at least a portion of the graphical object content of a single original tile to be patterned graphical object input information may define a pre defined shape e.g. a box a star a heart etc. or a free form drawing input indicative of a user defined shape of that drawing shape graphical object. Once drawing shape graphical object input information has been received graphical object generating module may generate appropriate original tile drawing shape graphical object content such as an appropriate boundary representation of the defined drawing shape in the original tile.

Regardless of the type of graphical object to be created a user may interact with one or more graphics editing applications or drawing applications running on device via input component to generate graphical object input information for defining one or more of the graphical object properties of original tile graphical object content which may define an original single tile of graphical object data to be patterned. Alternatively or additionally in other embodiments an application running on device may be configured to automatically generate at least a portion of graphical object input information for defining one or more of the graphical object properties of original tile graphical object content which may define an original single tile of graphical object data to be patterned.

As shown in for example graphical display system may also include a graphical object processing module that may process the graphical object content generated by graphical object generating module e.g. original tile graphical object content such that a single original tile of graphical object content may be presented to a user on display of device . In some embodiments graphical object processing module may be configured to render or otherwise process any received graphical object content e.g. original tile graphical object content and may therefore be configured to provide processed graphical object data for presentation on display e.g. processed graphical object data based on the graphical object content provided to graphical object processing module .

For example graphical object processing module may be configured to perform various types of graphics computations or processing techniques and or implement various rendering algorithms on the received graphical object content so that graphical object processing module may process the graphical data necessary to define at least a portion of the graphical object layer to be displayed on display e.g. the graphical object portion of the layer on a virtual canvas . Such processing may include but is not limited to matrix transformations scan conversions various rasterization techniques various techniques for three dimensional vertices and or three dimensional primitives texture blending and the like.

Processed graphical object data generated by graphical object processing module may include one or more sets of pixel data each of which may be associated with a respective pixel to be displayed by display when presenting a graphical object portion of that particular screen s virtual canvas to a user of device . For example each of the sets of pixel data included in processed graphical object data generated by graphical object processing module may be correlated with coordinate values that may identify a particular one of the pixels to be displayed by display and each pixel data set may include a color value for its particular pixel as well as any additional information that may be used to appropriately shade or provide other cosmetic features for its particular pixel. A portion of this pixel data for processed graphical object data may represent at least a portion of the original tile graphical object content for an original tile to be patterned. Graphical object processing module may be configured to transmit the pixel data sets of processed graphical object data for a particular screen to display via any suitable process for presentation to a user.

As shown in for example graphical display system may also include a graphical object orienting module that may be utilized to determine in which direction or directions the tile is to be patterned along a layer of a virtual canvas. Generally a tile may be a parallelogram or any two dimensional shape having any suitable number of sides and the tile may be patterned in any suitable number of directions out away from an initial instance of the tile along the layer. For example an original tile may be square shaped with a top side a bottom side opposite the top side a left side and a right side opposite the left side. In some embodiments such a tile may be patterned in at least a first vertical direction such as one above the other e.g. such that the bottom side of a second instance of the tile may be placed adjacent the top side of a first instance of the tile . In other embodiments such a tile may be patterned in at least a first horizontal direction such as one next to the other e.g. such that the left side of a second instance of the tile may be placed adjacent the right side of a first instance of the tile . In yet other embodiments such a tile may be patterned in both a horizontal direction and a vertical direction.

Graphical object orienting module may receive graphical object orientation information from various input sources for defining one or more directions in which the original tile defined by original tile graphical object content may be patterned along a layer of a virtual canvas. For example such input sources may be the one or more applications being run by electronic device and or any user input instructions being received by device e.g. via input component as shown in . In some embodiments based on at least a portion of the received graphical object orientation information graphical object orienting module may be configured to define at least one direction along which the original tile defined by original tile graphical object content may be patterned along a layer of a virtual canvas. For example as shown in graphical object orienting module may generate oriented original tile graphical object content which may define not only the graphical object content of the single original tile to be patterned e.g. the same or substantially similar content as original tile graphical object content but also orientation content for indicating the one or more directions along which the original tile defined by that graphical object content may be patterned.

Therefore the graphical object content of an original defined by oriented original tile graphical object content may be any suitable type of graphical content such as a drawing stroke an image a string of text a drawing shape and combinations thereof. The orientation content defined by oriented original tile graphical object content that may indicate the one or more directions along which the original tile defined by that graphical object content may be patterned may be any suitable type of orientation content. For example orientation content of oriented original tile graphical object content may define at least one such direction by identifying a particular side of the original tile. Such an identified side of the original tile may be the side of the tile against which another instance of the tile is to be positioned for patterning the original tile. For example following the above example of a square original tile orientation content of oriented original tile graphical object content may be defined to identify a top side of the original tile. Such orientation content may indicate that the original tile is to be patterned in a first vertical direction by positioning the bottom side of a second instance of the tile adjacent the identified top side of an initial instance of the tile. Additionally or alternatively orientation content of oriented original tile graphical object content may be defined to identify a right side of such an original tile. Such orientation content may indicate that the original tile is to be patterned in a first horizontal direction by positioning the left side of a second instance of the tile adjacent the identified right side of an initial instance of the tile.

In some embodiments orientation content of oriented original tile graphical object content may be at least partially based on one or more orientation properties defined by graphical object orientation information . A user may interact with one or more applications running on device via input component to generate graphical object orientation information for defining one or more of the directions along which the original tile defined by oriented original tile graphical object content may be patterned. Alternatively or additionally in other embodiments an application running on device may be configured to automatically generate at least a portion of graphical object orientation information for defining one or more of the directions along which the original tile defined by oriented original tile graphical object content may be patterned.

As shown in for example graphical object processing module may be configured to receive and process the graphical object content generated by graphical object generating module e.g. oriented original tile graphical object content such that the graphical object content of an oriented original tile may be presented to a user on display of device . In some embodiments graphical object processing module may be configured to render or otherwise process any received graphical object content e.g. oriented original tile graphical object content and may therefore be configured to provide processed graphical object data for presentation on display e.g. processed graphical object data based on the graphical object content provided to graphical object processing module by graphical object orienting module .

Rather than simply mapping a pattern of an original single tile of graphical object data that may be defined by oriented original tile graphical object content in a layer on a virtual canvas or workspace system may be configured to manipulate oriented original tile graphical object content of the original tile to generate a manipulated version of that original tile. The manipulated version of the original tile may be patterned extensibly along a layer that may have various aspect ratios while maintaining a seamless or fluid transition between adjacent tiles.

As shown in for example graphical display system may also include a graphical object manipulating module that may be utilized to manipulate an original tile into a manipulated original tile that may be patterned more smoothly than the original tile along a layer of a virtual canvas. For example graphical object manipulating module may receive oriented original tile graphical object content and may manipulate oriented original tile graphical object content to generate manipulated original tile graphical object content . Such manipulated original tile graphical object content may define the graphical object content of a single manipulated original tile to be patterned on a layer of a virtual canvas rather than the graphical object content of the single original tile defined by original tile graphical object content and or oriented original tile graphical object content .

As also shown in graphical object manipulating module may receive graphical object manipulation information from various input sources for defining one or more characteristics with which oriented original tile graphical object content may be manipulated. For example such input sources may be the one or more applications being run by electronic device and or any user input instructions being received by device e.g. via input component as shown in . In some embodiments based on at least a portion of the received graphical object manipulation information graphical object manipulating module may be configured to manipulate the oriented original tile defined by oriented original tile graphical object content in one or more particular ways.

Graphical object manipulating module may be configured to manipulate received oriented original tile graphical object content in any suitable way for generating manipulated original tile graphical object content . For example graphical object manipulating module may be configured to superimpose overlay or otherwise place a mirrored copy of the original tile onto the original tile erase a portion of the superimposed mirrored copy and then blend a remaining portion of the superimposed mirrored copy with a portion of the original tile to create a manipulated original tile for patterning. The manner in which the original tile may be mirrored may be based on the orientation content of oriented original tile graphical object content . The portion of the superimposed mirrored copy of the original tile that may be erased may be based on the orientation content of oriented original tile graphical object content and or based on the graphical object content of oriented original tile graphical object content and or based on graphical object manipulation information provided by a user or an application of device . The manner in which a remaining portion of the superimposed mirrored copy may be blended with a portion of the original tile to create a manipulated original tile for patterning may be based on graphical object manipulation information provided by a user or an application of device .

For example as shown in graphical object manipulating module may include a mirror generating module a mirror overlaying module a mirror erasing module a blending module and a finalizing module . Mirror generating module may be configured to receive oriented original tile graphical object content and to generate a mirrored copy of the graphical object content of oriented original tile graphical object content . Mirror generating module may be configured to generate a mirrored copy of the original tile graphical object content about or across any suitable mirror axis. In some embodiments the mirror axis may be along any suitable side of the original tile. For example the mirror axis utilized by mirror generating module to generate a mirrored copy of the graphical object content of oriented original tile graphical object content may be an axis that runs along at least a portion of a side of the original tile identified by the orientation content of oriented original tile graphical object content e.g. the orientation content that may identify at least one direction along which the original tile may be patterned . Mirror generating module may also be configured to pass oriented original tile graphical object content and the mirrored copy of the graphical object content of oriented original tile graphical object content on to any other portion of graphical display system as mirrored original tile graphical object content .

Mirror overlaying module may be configured to receive mirrored original tile graphical object content and to overlay superimpose or otherwise place the mirrored copy of the graphical object content of oriented original tile graphical object content onto the graphical object content of oriented original tile graphical object content . Mirror overlaying module may be configured to overlay the mirrored copy of the original tile onto the original tile by aligning similar sides of the two tiles. Mirror overlaying module may also be configured to pass the original tile with the superimposed mirrored copy of the original tile on to any other portion of graphical display system as superimposed mirrored original tile graphical object content .

Mirror erasing module may be configured to receive superimposed mirrored original tile graphical object content and to erase a portion of the graphical object content of the superimposed mirrored copy of the original tile while maintaining the remaining portion of the graphical object content of the superimposed mirrored copy of the original tile as well as maintaining all of the graphical object content of the original tile. Mirror erasing module may also be configured to pass the original tile with the remaining portion of the partially erased superimposed mirrored copy of the original tile on to any other portion of graphical display system as partially erased superimposed mirrored original tile graphical object content .

Mirror erasing module may be configured to determine which portion of the superimposed mirrored copy of the original tile to erase based on any suitable information such as the orientation content of oriented original tile graphical object content the graphical object content of oriented original tile graphical object content and or graphical object manipulation information provided by a user or an application of device . For example the portion of the superimposed mirrored copy to be erased by mirror erasing module may be the portion not within a threshold distance or range of at least a portion of a side of the original tile identified by the orientation content of oriented original tile graphical object content e.g. the orientation content that may identify at least one direction along which the original tile may be patterned . Additionally or alternatively the portion of the superimposed mirrored copy to be erased by mirror erasing module may be determined based on the graphical object content of the original tile the graphical object content of the mirrored copy and or the relationship between the graphical object content of the original tile and the graphical object content of the mirrored copy when superimposed on the graphical object content of the original tile. Additionally or alternatively the portion of the superimposed mirrored copy to be erased by mirror erasing module may be determined based on graphical object manipulation information provided by a user or an application of device .

In some embodiments the graphical object content of the original tile may dictate which portion of the mirrored copy is to be erased. For example if the graphical object content of the original tile is a texture of a more organic or natural design then some randomness may be introduced into the determination of what portion of the mirrored copy is to be erased. However if the graphical object content of the original tile is a more streamlined or harmonious texture then a simpler or straight lined erasing may be employed to determine what portion of the mirrored copy is to be erased. Generally if a mirrored copy was generated by mirroring the original tile about a first side of the original tile e.g. about a mirror axis that may at least partially align with that first side then the portion of the superimposed mirrored copy to be erased may generally fall outside a specific threshold distance of that first side of the original tile.

It is to be understood that the number configuration functionality and interconnection of the modules of graphical display system are merely illustrative and that the number configuration functionality and interconnection of existing modules may be modified or omitted additional modules may be added and the interconnection of certain modules may be altered. As just one example rather than mirror overlaying module being interconnected between mirror generating module and mirror erasing module mirror erasing module may be interconnected between mirror generating module and mirror overlaying module . In such embodiments a mirrored copy of an original tile may be passed from mirror generating module on to mirror erasing module which may erase a portion of the graphical object content of the mirrored copy of the original tile before passing a partially erased mirrored copy of the original tile on to mirror overlaying module for superimposing the partially erased mirrored copy of the original tile onto the original tile.

Blending module may be configured to receive partially erased superimposed mirrored original tile graphical object content and to blend at least a portion of the graphical object content of the original tile with at least some of the graphical object content of the remaining portion of the superimposed mirrored copy of the original tile. Blending module may also be configured to pass the original tile blended with the partially erased superimposed mirrored copy of the original tile on to any other portion of graphical display system as blended partially erased superimposed mirrored original tile graphical object content .

Blending module may be configured to determine which portion of the graphical object content of the original tile and which portion of the graphical object content of the partially erased superimposed mirrored copy of the original tile are to be blended together based on any suitable information such as the graphical object content of partially erased superimposed mirrored original tile graphical object content and or the graphical object manipulation information provided by a user or an application of device . For example the portion of the graphical object content of the original tile and or the portion of the graphical object content of the partially erased superimposed mirrored copy of the original tile to be blended may be determined based on the graphical object content of the original tile the graphical object content of the remaining portion of the partially erased mirrored copy and or the relationship between the graphical object content of the original tile and the remaining portion of the partially erased mirrored copy when superimposed on the graphical object content of the original tile. Additionally or alternatively the portion of the graphical object content of the original tile and or the portion of the graphical object content of the partially erased superimposed mirrored copy of the original tile to be blended may be determined based on graphical object manipulation information provided by a user or an application of device .

Blending module may be configured to blend a particular portion of the graphical object content of the original tile with a particular portion of the graphical object content of the partially erased superimposed mirrored copy of the original tile using any suitable blending technique including but not limited to blending with a soft eraser blending with a soft eraser transitioning the remaining portion of the superimposed mirrored copy from translucent at a first side to opaque at a second side e.g. where the second side aligns with the side of the original tile used to generate the mirrored copy or any combination thereof. Blending with a soft eraser brush may generally allow varying levels of opacity to be applied such that the mirrored copy may be slowly blended with the original tile positioned under the mirrored copy. Blending with a hard eraser may generally be more effectively used on heavily textured graphical object content e.g. a wood texture in which the graphical object content may have natural imperfections crevices knots or noticeable markings that may be easily identifiable in the mirrored copy such that portions of the mirrored copy may be entirely erased to fully expose the underlying original tile.

Moreover blending module may be configured to determine which one or more blending techniques are to be used for blending a particular portion of the original tile with a particular portion of the partially erased superimposed mirrored copy of the original tile based on any suitable information such as the graphical object content of partially erased superimposed mirrored original tile graphical object content and or based on graphical object manipulation information provided by a user or an application of device . For example each blending technique to be used for blending a particular portion of the original tile with a particular portion of the partially erased superimposed mirrored copy of the original tile may be determined by blending module based on the graphical object content of the original tile the graphical object content of the remaining portion of the partially erased mirrored copy and or the relationship between the graphical object content of the original tile and the remaining portion of the partially erased mirrored copy when superimposed on the graphical object content of the original tile. Additionally or alternatively each blending technique to be used for blending a particular portion of the original tile with a particular portion of the partially erased superimposed mirrored copy of the original tile may be determined by blending module based on graphical object manipulation information provided by a user or an application of device .

In some embodiments the blending technique to be used may depend on the size of the partially erased mirrored copy. For example if it is large mirror then a soft fade to 0 opacity may work well. However if the size of the remaining superimposed mirrored copy is relatively small e.g. as compared to the original tile a hard edge eraser brush with a small amount of randomness to the angle and direction may work well. Typically however a combination of the two may produce the best results.

Finalizing module may be configured to receive blended partially erased superimposed mirrored original tile graphical object content and then either to finalize received graphical object content as manipulated original tile graphical object content for patterning or to pass received graphical object content as partially manipulated original tile graphical object content on to mirror generating module for additional manipulation. In some embodiments finalizing module may be configured to determine whether to finalize received graphical object content as manipulated original tile graphical object content for patterning or whether to pass received graphical object content as partially manipulated original tile graphical object content on to mirror generating module for additional manipulation based on the orientation content of oriented original tile graphical object content .

For example as mentioned above the orientation content of oriented original tile graphical object content may identify one or more directions along which the tile may be patterned. Therefore if the orientation content of oriented original tile graphical object content only identifies one single direction along which the tile may be patterned then finalizing module may determine that blended graphical object content may include graphical object content that was mirrored by mirror generating module based on that single identified direction and thus that blended graphical object content may be finalized and passed on to any other suitable component of graphical display system as manipulated original tile graphical object content . However if the orientation content of oriented original tile graphical object content identifies multiple directions along which the tile may be patterned then finalizing module may determine that blended graphical object content may only include graphical object content that was mirrored by mirror generating module based on only one identified direction of those multiple directions and thus that blended graphical object content may be passed on to mirror generating module for additional manipulation as partially manipulated original tile graphical object content .

If the orientation content of oriented original tile graphical object content identifies multiple directions along which the tile may be patterned such that finalizing module may pass received graphical object content as partially manipulated original tile graphical object content on to mirror generating module for additional manipulation mirror generating module may be configured to manipulate partially manipulated original tile graphical object content . For example mirror generating module may be configured to manipulate partially manipulated original tile graphical object content similarly to how mirror generating module may be configured to manipulate the graphical object content of oriented original tile graphical object content as described above. However instead of using a first one of the multiple directions identified by the orientation content of oriented original tile graphical object content to mirror partially manipulated original tile graphical object content mirror generating module may be configured to mirror partially manipulated original tile graphical object content using a second one of the multiple directions identified by the orientation content of oriented original tile graphical object content . Mirror generating module mirror overlaying module mirror erasing module and blending module may each be configured to manipulate partially manipulated original tile graphical object content as described above with respect to oriented original tile graphical object content but with respect to a second one of the multiple directions identified by the orientation content of oriented original tile graphical object content so as to eventually provide additionally manipulated blended graphical object content to finalizing module .

Finalizing module may be configured to determine whether additionally manipulated blended graphical object content may be manipulated once again with respect to yet another one of the multiple directions identified by the orientation content of oriented original tile graphical object content . If so finalizing module may pass additionally manipulated blended graphical object content on to mirror generating module as partially manipulated original tile graphical object content to begin the manipulation process once again but this time with respect to yet another one of the multiple directions identified by the orientation content of oriented original tile graphical object content . However if finalizing module determines that additionally blended graphical object content may not be manipulated once again with respect to yet another one of the multiple directions identified by the orientation content of oriented original tile graphical object content finalizing module may finalize additionally blended graphical object content as manipulated original tile graphical object content for patterning.

In other embodiments rather than manipulating oriented original tile graphical object content with respect to a single direction identified by the orientation content of oriented original tile graphical object content before repeating the process for another direction mirror generating module mirror overlaying module mirror erasing module and blending module may each be configured to manipulate oriented original tile graphical object content with respect to some or all of the directions identified by the orientation content of oriented original tile graphical object content at the same time. This may ensure that finalizing module may finalize received graphical object content as manipulated original tile graphical object content without having to pass received graphical object content as partially manipulated original tile graphical object content on to mirror generating module for additional manipulation.

As shown in for example graphical object processing module may be configured to receive and process any of the graphical object content generated by graphical object manipulating module e.g. mirrored original tile graphical object content superimposed mirrored original tile graphical object content partially erased superimposed mirrored original tile graphical object content blended graphical object content and or manipulated original tile graphical object content such that graphical object content may be presented to a user on display of device during any phase of the manipulation process. In some embodiments graphical object processing module may be configured to render or otherwise process any received graphical object content e.g. manipulated original tile graphical object content and may therefore be configured to provide processed graphical object data for presentation on display e.g. processed graphical object data based on the graphical object content provided to graphical object processing module by graphical object manipulating module .

As shown in for example graphical display system may also include a graphical object mapping module that may be utilized to map a manipulated original tile in a pattern along a layer of a virtual canvas. For example graphical object mapping module may receive manipulated original tile graphical object content and may map manipulated original tile graphical object content to generate mapped manipulated original tile graphical object content . Such mapped manipulated original tile graphical object content may define the graphical object content of a single manipulated original tile patterned on a layer of a virtual canvas.

As also shown in graphical object mapping module may receive graphical object mapping information from various input sources for defining one or more characteristics with which manipulated original tile graphical object content may be mapped. For example such input sources may be the one or more applications being run by electronic device and or any user input instructions being received by device e.g. via input component as shown in . In some embodiments based on at least a portion of the received graphical object mapping information graphical object mapping module may be configured to map the manipulated original tile defined by manipulated original tile graphical object content in one or more particular ways.

Graphical object mapping module may be configured to map received manipulated original tile graphical object content in any suitable way for generating mapped manipulated original tile graphical object content . For example graphical object mapping module may be configured to pin an initial manipulated tile defined by manipulated original tile graphical object content at a particular initial position on a layer of a virtual canvas and then to pattern a copy of that initial manipulated tile in one or more directions away from the initial manipulated tile along the layer of the virtual canvas. The particular initial position at which the initial manipulated tile may be pinned by graphical object mapping module may be based on graphical object mapping information provided by a user or an application of device . The one or more directions in which a copy of the initial manipulated tile may be patterned by graphical object mapping module may be based on graphical object mapping information provided by a user or an application of device and or based on the orientation content of oriented original tile graphical object content .

For example as shown in graphical object mapping module may include a pinning module and a patterning module . Pinning module may be configured to receive manipulated original tile graphical object content and to pin or otherwise position an initial manipulated tile defined by manipulated original tile graphical object content at a particular initial position on a layer of a virtual canvas. Pinning module may be configured to pin the initial manipulated tile at any suitable initial position on a layer of a virtual canvas. In some embodiments the particular initial position at which the initial manipulated tile may be pinned by pinning module may be based on graphical object mapping information provided by a user or an application of device . For example a user may choose the initial position by moving the initial manipulated tile to a desired position on the layer of a virtual canvas. Alternatively an application of device may determine the initial position on the layer of a virtual canvas based on any suitable criteria such as the type or current settings of the application that may be provided with the layer as a background e.g. Photo Booth by Apple Inc. or any other suitable application that may utilize a layer of graphical object data provided by a pattern of multiple instances of a single tile of graphical object data . Pinning module may also be configured to pass the manipulated original tile graphical object content of the initial manipulated tile along with the particular initial position at which the initial manipulated tile may be pinned on to any other portion of graphical display system as pinned initial manipulated original tile graphical object content .

Patterning module may be configured to receive pinned initial manipulated original tile graphical object content and to pattern a copy of the initial manipulated tile defined by pinned initial manipulated original tile graphical object content in one or more directions away from the initial manipulated tile along the layer of the virtual canvas. Patterning module may be configured to pattern the initial manipulated tile in one or more suitable directions along the layer of the virtual canvas. In some embodiments one or more directions in which a copy of the initial manipulated tile may be patterned by patterning module may be based on graphical object mapping information provided by a user or an application of device . For example a user may choose such a direction by dragging a copy of the initial manipulated tile away from the pinned initial manipulated tile in a desired direction across the layer of a virtual canvas. Alternatively or additionally an application of device may determine at least one such direction based on any suitable criteria such as the type or current settings of the application that may be provided with the layer as a background e.g. Photo Booth by Apple Inc. or any other suitable application that may utilize a layer of graphical object data provided by a pattern of multiple instances of a single tile of graphical object data . Alternatively or additionally one or more directions in which a copy of the initial manipulated tile may be patterned by patterning module may be based on the orientation content of oriented original tile graphical object content . Patterning module may also be configured to pass manipulated original tile graphical object content of the initial manipulated tile and the particular initial position at which the initial manipulated tile may be pinned as defined by pinned initial manipulated original tile graphical object content along with the copy of the initial manipulated tile and the one or more directions in which the copy is to be mapped along the layer of the virtual canvas on to any other portion of graphical display system as mapped manipulated original tile graphical object content .

As shown in for example graphical object processing module may be configured to receive and process any of the graphical object content generated by graphical object mapping module e.g. pinned initial manipulated original tile graphical object content and or mapped manipulated original tile graphical object content such that graphical object content of an initial manipulated tile and or of a patterned copy of an initial manipulated tile may be presented to a user on display of device during any phase of the mapping process. In some embodiments graphical object processing module may be configured to render or otherwise process any received graphical object content e.g. mapped manipulated original tile graphical object content and may therefore be configured to provide processed graphical object data for presentation on display e.g. processed graphical object data based on the graphical object content provided to graphical object processing module by graphical object mapping module .

In some embodiments the graphical object content provided to one or more of the modules of system may not be generated by another module of system but instead that graphical object content may be accessible to system from any other suitable source. For example certain graphical object content that may be utilized by one or more of the various modules of system may be pre stored in memory or otherwise accessible to an application running on device . As shown in for example rather than generating content with module system may access content from any suitable content source . Similarly rather than generating content with module system may access content from any suitable content source . Likewise rather than generating content with module system may access content from any suitable content source . For example content source may be application data that may have been previously generated by a developer of an application that may currently be running on device e.g. a graphics editing application or any other application mentioned herein . Therefore while one some or all of the modules of system may be utilized as an authoring tool for creating editing and or manipulating a tile of graphical object content for mapping in a pattern system may additionally or alternatively be used as an automatic tile manipulating and or mapping system that can access pre defined tile content for manipulation and or pre defined tile content for mapping.

An illustrative example of how graphical display system may generate and or display tiles of graphical object content to a user may be described with reference to .

For example as shown in a virtual drawing space application may provide a canvas area on a portion of the screen in which various graphical objects may be presented. Canvas may be a virtual drawing workspace portion of the screen in which pixel data may be created and manipulated for creating and or manipulating a tile to be patterned. In some embodiments canvas may include an initial canvas background layer . For example whenever a virtual drawing space application of device is initially loaded for creating editing and or manipulating a tile of graphical object content canvas background layer may be automatically defined and generated. The size of canvas background layer may be configured to span the entire area of canvas . In some embodiments the size of canvas and thus canvas background layer may dynamically change in response to various graphical objects that may be positioned on canvas such that canvas may always be large enough to contain whatever is created on canvas . The color of the pixels of canvas back ground layer may all be defined as white e.g. such that canvas may appear as a blank slate although any other suitable color or pattern of colors may be used to define the pixels of canvas background layer .

A virtual drawing space application may provide a blank tile outline on background layer within which one or more various graphical objects may be created edited and or manipulated. For example whenever a virtual drawing space application of device is initially loaded for creating editing and or manipulating a tile of graphical object content blank tile outline may be automatically defined and generated. The initial size and shape of blank tile outline may be configured in any suitable way but may be dynamically changed in response to various user inputs. For example as shown in blank tile outline may be provided as a square with a top side a bottom side opposite top side a right side and a left side opposite right side . A user may interact with the application to adjust the size of any one or more of the sides of blank tile outline and or to adjust the shape of blank tile outline .

The virtual drawing space application may also provide on a portion of the screen at least one artist menu . Menu may include one or more graphical input options that a user may choose from to access various tools and functionalities of the application that may then be utilized by the user to create various types of graphical objects within tile outline . Menu may provide one or more toolbars toolboxes palettes buttons or any other suitable user interface menus.

As shown in for example artist menu may include a free form drawing stroke or drawing tool input option which a user may select for creating free form drawing strokes within tile outline e.g. by repeatedly applying a stamp of a user controlled virtual input drawing tool along a stroke trail within tile outline . Artist menu may also include a text string input option which a user may select for creating strings of characters within tile outline . Artist menu may also include a drawing shape input option which a user may select for creating various drawing shapes within tile outline . Moreover artist menu may also include an image input option which a user may select for importing video based or photographic images into tile outline . In some embodiments artist menu may also include a content selection option which a user may select for identifying a particular portion of displayed content in canvas that the user may wish to manipulate in some way e.g. to manipulate the size or shape of tile outline . It is to be understood however that options of artist menu are merely exemplary and a virtual drawing space application may provide various other types of options that a user may work with for creating editing and or manipulating content within tile outline .

As shown by screen of for example a user may select drawing tool input option of artist menu for creating one or more free form drawing strokes within tile outline . In some embodiments when a user selects drawing tool input option menu may reveal one or more sub menus not shown that can provide the user with one or more different types of pre defined drawing stroke input tools or various other drawing stroke properties that may be selected for helping the user define a particular drawing stroke graphical object to be presented within tile outline . When drawing tool input option is selected device may be configured to allow a user to selectively generate one or more drawing strokes within tile outline using any suitable sub menus provided by menu and or using any other suitable input gestures with any suitable input component available to the user such as a mouse input component or a touch input component e.g. touch screen .

Once a user has indicated he or she wants to generate a drawing stroke graphical object e.g. once drawing tool input option has been selected certain menu selections or other input gestures made by the user may be received by graphical display system for generating and displaying a drawing stroke graphical object within tile outline . For example such menu selections and other input gestures made by the user may be received by graphical object generating module as drawing stroke graphical object input information for creating a new drawing stroke graphical object.

Based on any appropriate drawing stroke graphical object input information which may be generated by a user or any application running on device graphical object generating module may be configured to define and generate at least one new drawing stroke graphical object. For example graphical object generating module may generate original tile drawing stroke graphical object content . This original tile drawing stroke graphical object content may then be processed by graphical object processing module as processed graphical object data e.g. processed original tile drawing stroke graphical object data and presented on display .

For example as shown in this processed original tile drawing stroke graphical object data may be presented on canvas within tile outline of screen as an original tile drawing stroke graphical object . Original tile drawing stroke graphical object may be any suitable collection of one or more suitable drawing strokes within tile outline . For example as shown in original tile drawing stroke graphical object may include a diagonal line extending from the top left corner to the bottom right corner of tile outline .

At some point graphical display system may receive new graphical object input information that may be indicative of another type of graphical object i.e. a graphical object type other than a drawing stroke graphical object . For example as shown by screen of a user may select image input option of artist menu for creating one or more image graphical objects within tile outline . In some embodiments when a user selects image input option menu may reveal one or more sub menus not shown that can provide the user with one or more ways in which a user can identify a particular image file of image content to be added within tile outline . When image input option is selected device may be configured to allow a user to selectively generate an image graphical object within tile outline using any suitable sub menus provided by menu and or using any other suitable input gestures with any suitable input component available to the user such as a mouse input component or a touch input component e.g. touch screen .

Once a user has indicated he or she wants to generate an image graphical object e.g. once image input option has been selected certain menu selections or other input gestures made by the user may be received by graphical display system for generating and displaying an image graphical object within tile outline . For example such menu selections and other input gestures made by the user may be received by graphical object generating module as image graphical object input information for creating a new image graphical object.

Based on any appropriate image graphical object input information which may be generated by a user or any application running on device graphical object generating module may be configured to define and generate at least one new image graphical object. For example graphical object generating module may generate original tile image graphical object content . This original tile image graphical object content may then be processed by graphical object processing module as processed graphical object data e.g. processed original tile image graphical object data and presented on display .

For example as shown in this processed original tile image graphical object data may be presented on canvas within tile outline of screen as an original tile image graphical object . Original tile image graphical object may be any suitable collection of one or more images within tile outline . For example as shown in original tile image graphical object may include an image of half a baseball. Original tile image graphical object may be positioned within tile outline to have any suitable relationship with any other graphical objects positioned within tile outline . For example as shown in original tile image graphical object may be positioned at left side of tile outline e.g. the original image graphical object may have been a complete baseball that was positioned so as to be intersected by left side such that only the right half of the complete baseball may be provided within tile outline . In other embodiments original tile image graphical object may be positioned to have any other suitable relationship with any side of tile outline and or original tile drawing stroke graphical object including overlapping drawing stroke graphical object .

At some point graphical display system may receive new graphical object input information that may be indicative of another type of graphical object i.e. a graphical object type other than a drawing stroke graphical object or an image graphical object . For example as shown by screen of a user may select drawing shape input option of artist menu for creating one or more drawing shape graphical objects within tile outline . In some embodiments when a user selects drawing shape input option menu may reveal one or more sub menus not shown that can provide the user with one or more ways in which a user can identify a particular shape to be added within tile outline . When drawing shape input option is selected device may be configured to allow a user to selectively generate a drawing shape graphical object within tile outline using any suitable sub menus provided by menu and or using any other suitable input gestures with any suitable input component available to the user such as a mouse input component or a touch input component e.g. touch screen .

Once a user has indicated he or she wants to generate a drawing shape graphical object e.g. once drawing shape input option has been selected certain menu selections or other input gestures made by the user may be received by graphical display system for generating and displaying a drawing shape graphical object within tile outline . For example such menu selections and other input gestures made by the user may be received by graphical object generating module as drawing shape graphical object input information for creating a new drawing shape graphical object.

Based on any appropriate drawing shape graphical object input information which may be generated by a user or any application running on device graphical object generating module may be configured to define and generate at least one new drawing shape graphical object. For example graphical object generating module may generate original tile drawing shape graphical object content . This original tile drawing shape graphical object content may then be processed by graphical object processing module as processed graphical object data e.g. processed original tile drawing shape graphical object data and presented on display .

For example as shown in this processed original tile drawing shape graphical object data may be presented on canvas within tile outline of screen as an original tile drawing shape graphical object . Original tile drawing shape graphical object may be any suitable collection of one or more drawing shapes within tile outline . For example as shown in original tile drawing shape graphical object may include a triangle shape. Original tile drawing shape graphical object may be positioned within tile outline to have any suitable relationship with any other graphical objects positioned within tile outline . For example as shown in original tile drawing shape graphical object may be positioned against right side . In other embodiments original tile drawing shape graphical object may be positioned to have any other suitable relationship with any side of tile outline and or with original tile drawing stroke graphical object and or with original tile image graphical object including overlapping drawing stroke graphical object and or image graphical object .

At some point graphical display system may receive new graphical object input information that may be indicative of another type of graphical object i.e. a graphical object type other than a drawing stroke graphical object an image graphical object or a drawing shape graphical object . For example as shown by screen of a user may select text string input option of artist menu for creating one or more text string graphical objects within tile outline . In some embodiments when a user selects text string input option menu may reveal one or more sub menus not shown that can provide the user with one or more ways in which a user can identify a particular text string to be added within tile outline . When text string input option is selected device may be configured to allow a user to selectively generate a text string graphical object within tile outline using any suitable sub menus provided by menu and or using any other suitable input gestures with any suitable input component available to the user such as a mouse input component or a touch input component e.g. touch screen .

Once a user has indicated he or she wants to generate a text string graphical object e.g. once text string input option has been selected certain menu selections or other input gestures made by the user may be received by graphical display system for generating and displaying a text string graphical object within tile outline . For example such menu selections and other input gestures made by the user may be received by graphical object generating module as text string graphical object input information for creating a new text string graphical object.

Based on any appropriate text string graphical object input information which may be generated by a user or any application running on device graphical object generating module may be configured to define and generate at least one new text string graphical object. For example graphical object generating module may generate original tile text string graphical object content . This original tile text string graphical object content may then be processed by graphical object processing module as processed graphical object data e.g. processed original tile text string graphical object data and presented on display .

For example as shown in this processed original tile text string graphical object data may be presented on canvas within tile outline of screen as an original tile text string graphical object . Original tile text string graphical object may be any suitable collection of one or more text strings within tile outline . For example as shown in original tile text string graphical object may include an F character. Original tile text string graphical object may be positioned within tile outline to have any suitable relationship with any other graphical objects positioned within tile outline . For example as shown in original tile text string graphical object may be positioned between top side and drawing stroke graphical object . In other embodiments original tile text string graphical object may be positioned to have any other suitable relationship with original tile drawing stroke graphical object with original tile image graphical object and or with drawing shape graphical object including overlapping.

At some point graphical display system may receive new graphical object input information that may be indicative of the fact that no additional graphical object content is to be added or edited within tile outline and that the graphical object content of the original tile is complete. For example as shown by screen of each graphical object input option of artist menu may be unselected but content selection option may remain selected which may be indicative of the fact that the original tile is complete. Therefore graphical object generating module may finalize original tile graphical object content for processing and presentation by processing module on display as processed finalized original tile graphical object data for example such that the existing graphical object content provided within tile outline e.g. graphical objects and may be presented as a complete original tile on canvas .

In some embodiments when original tile graphical object content is finalized and complete original tile is presented on canvas menu may reveal one or more sub menus not shown that can provide the user with one or more ways in which a user can define one or more directions in which complete original tile is to be patterned. For example device may be configured to allow a user to selectively define one or more directions in which complete original tile is to be patterned using any suitable sub menus provided by menu and or using any other suitable input gestures with any suitable input component available to the user such as a mouse input component or a touch input component e.g. touch screen .

Once a user has indicated that no additional graphical object content is to be added or edited within tile outline and that the existing graphical object content is complete original tile certain menu selections or other input gestures made by the user may be received by graphical display system for defining one or more directions in which complete original tile is to be patterned. For example such menu selections and other input gestures made by the user may be received by graphical object orienting module as graphical object orientation information for defining one or more directions in which complete original tile is to be patterned.

Based on any appropriate graphical object orientation information which may be generated by a user or any application running on device graphical object orienting module may be configured to identify one or more sides of complete original tile against which a copy of original tile may be positioned for patterning original tile . Each one of such identified sides may be indicative of a respective direction along which original tile may be patterned. For example graphical object orienting module may generate oriented original tile text string graphical object content . This oriented original tile text string graphical object content may then be processed by graphical object processing module as processed graphical object data e.g. processed oriented original tile graphical object data and presented on display .

For example as shown in this processed oriented original tile graphical object data may be presented on canvas of screen as a first highlighted identification of right side of complete original tile . Highlighted identification may be any suitable graphic or type of information generated by device that may identify a first particular side of original tile e.g. right side and thus a first particular direction along which original tile may be patterned e.g. in a horizontal direction . For example as shown in highlighted identification may be a highlighted outline of right side of complete original tile . This may be indicative of the orientation content of oriented original tile graphical object content defining a first horizontal direction in which original tile may be patterned e.g. the horizontal direction of arrow H of . This direction of arrow H may be a direction that is perpendicular or normal to the identified right side of original tile .

Additionally or alternatively as also shown in this processed oriented original tile graphical object data may be presented on canvas of screen as a second highlighted identification of top side of complete original tile . Highlighted identification may be any suitable graphic or type of information generated by device that may identify a second particular side of original tile e.g. top side and thus a second particular direction along which original tile may be patterned e.g. in a vertical direction . For example as shown in highlighted identification may be a highlighted outline of top side of complete original tile . This may be indicative of the orientation content of oriented original tile graphical object content defining a first vertical direction in which original tile may be patterned e.g. the vertical direction of arrow V of . This direction of arrow V may be a direction that is perpendicular or normal to the identified top side of original tile .

At some point once suitable orientation content of oriented original tile graphical object content has been generated by graphical object orienting module graphical object orienting module may provide finalized oriented original tile graphical object content to graphical object manipulating module for manipulating the graphical object content of a finalized and oriented original tile. For example mirror generating module of graphical object manipulating module may be configured to receive oriented original tile graphical object content and to generate mirrored original tile graphical object content .

As mentioned mirror generating module may be configured to generate a mirrored copy of the graphical object content of the original tile about or across any suitable mirror axis. In some embodiments the mirror axis may be along any suitable side of the original tile. Therefore for example the mirror axis utilized by mirror generating module to generate a mirrored copy of the graphical object content of oriented original tile graphical object content may be an axis that runs along at least a portion of a side of the original tile identified by the orientation content of oriented original tile graphical object content i.e. one of right side identified by highlighted identification and top side identified by highlighted identification . Mirror generating module may also be configured to pass oriented original tile graphical object content and the mirrored copy of the graphical object content of oriented original tile graphical object content on to any other portion of graphical display system as mirrored original tile graphical object content .

As shown by screen of mirror generating module may generate mirrored original tile graphical object content about a mirror axis along identified right side of original tile . Then mirror generating module may pass this mirrored original tile graphical object content on to processing module for processing and presentation on display as processed mirrored original tile graphical object content data for example such that a mirrored copy of original tile may be generated about right side and presented on canvas . It is to be noted that when oriented original tile graphical object content identifies more than one side of original tile that may be used by mirror generating module to define a mirror axis system may be configured such that menu may provide a user with one or more ways in which he or she can choose which of the identified sides of original tile should define the mirror axis. For example a mirror axis MA may be presented and moved by a user on screen such that it may be positioned along one of identified sides and of original tile e.g. mirror axis MA may be positioned along identified right side such that mirrored copy may be generated and presented about right side in the direction of arrow M as shown in .

In some embodiments when mirrored original tile graphical object content is generated about identified right side and mirrored copy of complete original tile is presented on canvas original tile may continue to be presented on canvas e.g. as shown in . In other embodiments when mirrored original tile graphical object content is generated about identified right side and mirrored copy of complete original tile is presented on canvas only mirrored copy may be presented on canvas and original tile may be removed from canvas . As shown in mirrored copy may include mirrored graphical objects and that may be mirrored copies of respective graphical objects and of original tile . Mirrored graphical objects and may be provided within a mirrored tile outline and mirrored tile outline may be provided with a mirrored top side a mirrored bottom side opposite mirrored top side a mirrored right side and a mirrored left side opposite mirrored right side

Once suitable mirrored original tile graphical object content has been generated about a first mirror axis by mirror generating module mirror generating module may provide mirrored original tile graphical object content to mirror overlaying module for superimposing the graphical object content of the mirrored copy onto the original tile. For example mirror overlaying module of graphical object manipulating module may be configured to receive mirrored original tile graphical object content and to generate superimposed mirrored original tile graphical object content . As mentioned mirror overlaying module may be configured to overlay superimpose or otherwise place the mirrored copy of the original tile onto the original tile by aligning similar sides of the two tiles.

As shown by screen of for example mirror overlaying module may generate superimposed mirrored original tile graphical object content . Then mirror overlaying module may pass this superimposed mirrored original tile graphical object content on to processing module for processing and presentation on display as processed superimposed mirrored original tile graphical object content data for example such that mirrored copy may be superimposed on original tile as a superimposed mirrored tile that may be generated and presented on canvas . As shown in superimposed mirrored tile may include mirrored copy superimposed on original tile by aligning tile outline and mirrored tile outline e.g. such that top side may align with mirrored top side bottom side may align with mirrored bottom side right side may align with mirrored right side and or left side may align with mirrored left side . Although superimposed mirrored tile may include mirrored copy may be superimposed over original tile device may be configured in some embodiments such that superimposed mirrored tile may present at least portions of original tile on screen display . For example as shown in device may be configured such that superimposed mirrored tile may present at least a portion of the graphical object content of original tile underneath mirrored copy see e.g. graphical objects and in dashed lines in . This may allow for a user to distinguish the relationship between the graphical object content of original tile and the graphical object content of mirrored copy .

Once suitable superimposed mirrored original tile graphical object content has been generated by mirror overlaying module mirror overlaying module may provide superimposed mirrored original tile graphical object content to mirror erasing module for erasing a portion of the graphical object content of the superimposed mirrored copy of superimposed mirrored tile while maintaining the remaining portion of the graphical object content of the superimposed mirrored copy of superimposed mirrored tile as well as maintaining all of the graphical object content of original tile of superimposed mirrored tile . For example mirror erasing module of graphical object manipulating module may be configured to receive superimposed mirrored original tile graphical object content and to generate partially erased superimposed mirrored original tile graphical object content .

As mentioned mirror erasing module may be configured to determine which portion of the superimposed mirrored copy of the original tile to erase based on any suitable information such as the orientation content of oriented original tile graphical object content the graphical object content of oriented original tile graphical object content and or graphical object manipulation information provided by a user or an application of device . For example the portion of the superimposed mirrored copy to be erased by mirror erasing module may be the portion outside of a threshold distance or range of at least a portion of a side of the original tile identified by the orientation content of oriented original tile graphical object content e.g. the graphical object content of the superimposed mirrored copy that is not within a threshold distance or range of at least a portion of right side of original tile and thus not within a threshold distance or range of at least a portion of mirrored right side of mirrored copy . Additionally or alternatively the portion of the superimposed mirrored copy to be erased by mirror erasing module may be determined based on the graphical object content of the original tile e.g. graphical objects and of original tile the graphical object content of the mirrored copy e.g. graphical objects and of mirrored copy and or the relationship between the graphical object content of the original tile and the graphical object content of the mirrored copy when superimposed on the graphical object content of the original tile e.g. the relationship between graphical objects and or of superimposed mirrored tile .

System may be configured such that menu may provide a user with one or more ways in which he or she can choose which portion or portions of the graphical object content of the superimposed mirrored copy of superimposed mirrored tile to erase. A selection tool may be presented to and moved by a user on screen such that tool may be positioned over any suitable portion or portions of the graphical object content of superimposed mirrored copy of superimposed mirrored tile to be erased. For example as shown in selection tool may be positioned over the portion of the graphical object content of superimposed mirrored copy of superimposed mirrored tile that is not within a threshold distance d of identified right side . The amount of superimposed mirrored copy that may be maintained or not selected by tool may depend on the intricacy of the graphical object content or texture of original tile . A medium detailed original tile may have a smaller portion of the mirrored copy maintained while a fairly simple original tile may maintain a large portion of the mirrored copy and while a heavily textured or complicated original tile may maintain a medium sized portion of the mirrored copy. As shown in the portion of mirrored copy that may not be erased by tool may be based on the content of mirrored copy e.g. distance d may be such that all of mirrored graphical object content may be maintained and not erased by tool .

As shown by screen of for example mirror erasing module may generate partially erased superimposed mirrored original tile graphical object content . Then mirror erasing module may pass this partially erased superimposed mirrored original tile graphical object content on to processing module for processing and presentation on display as processed partially erased superimposed mirrored original tile graphical object content data for example such that a portion of the graphical object content of mirrored copy of superimposed mirrored tile may be erased to provide a now partially erased superimposed mirrored tile that may be generated and presented on canvas . As shown in partially erased superimposed mirrored tile may include all of original tile of superimposed mirrored tile as well as a partially erased mirrored copy . Partially erased mirrored copy of partially erased superimposed mirrored tile of may be the portion of mirrored copy of superimposed mirrored tile of that was not erased e.g. the graphical object content of mirrored copy of superimposed mirrored tile not covered by selection tool in . As shown in for example partially erased mirrored copy of partially erased superimposed mirrored tile may include a portion of mirrored graphical object e.g. partially erased mirrored copy graphical object and all of mirrored graphical object e.g. partially erased mirrored copy graphical object .

Once suitable partially erased superimposed mirrored original tile graphical object content has been generated by mirror erasing module mirror erasing module may provide partially erased superimposed mirrored original tile graphical object content to blending module for blending at least a portion of the graphical object content of original tile of partially erased superimposed mirrored tile with at least some of the graphical object content of partially erased mirrored copy of partially erased superimposed mirrored tile . For example blending module of graphical object manipulating module may be configured to receive partially erased superimposed mirrored original tile graphical object content and to generate blended partially erased superimposed mirrored original tile graphical object content .

As mentioned blending module may be configured to determine which portion of the graphical object content of the original tile and which portion of the graphical object content of the partially erased superimposed mirrored copy of the original tile are to be blended together as well as what blending techniques to use based on any suitable information. For example all the graphical object content of the partially erased superimposed mirrored copy may be blended with the portion of the graphical object content of the original tile within the same threshold distance d that was used to erase a portion of the superimposed mirrored copy see e.g. . In other embodiments some of the graphical object content of the partially erased superimposed mirrored copy may be completely erased and or some of the graphical object content of the partially erased superimposed mirrored copy may not be blended at all but may be maintained to be the same as it is in the mirrored copy.

System may be configured such that menu may provide a user with one or more ways in which he or she can blend a specific portion of the graphical object content of original tile of partially erased superimposed mirrored tile with a specific portion of the graphical object content of partially erased mirrored copy of partially erased superimposed mirrored tile . For example as shown in a blending tool may be presented to and moved by a user on screen such that blending tool may be manipulated over specific portions of the graphical object content of partially erased superimposed mirrored tile . For example in some embodiments blending tool may be manipulated over all of the graphical object content of partially erased mirrored copy of partially erased superimposed mirrored tile as well as over the portion of graphical object content of original tile of partially erased superimposed mirrored tile that is within threshold distance d of identified right side as shown in .

In some embodiments blending tool may be configured to make the graphical object content of partially erased mirrored copy more translucent the closer it is to identified right side and more opaque the farther it is from identified right side . In other embodiments blending tool may be utilized differently at different portions of the graphical object content of partially erased mirrored copy and or at different portions of original tile of partially erased superimposed mirrored tile . For example the portions of partially erased mirrored copy to be erased blended or maintained may depend on the graphical object content of original tile and or the graphical object content of partially erased mirrored copy . A user may examine partially erased superimposed mirrored tile to discover any artifacts of partially erased mirrored copy that may make a side of partially erased superimposed mirrored tile look obvious as a patterned tile when patterned across a layer of canvas . Alternatively or additionally device may be configured to analyze the contents of partially erased superimposed mirrored tile and detect such artifacts automatically.

For example partially erased mirrored copy graphical object may be an artifact that may be inappropriate or cause side and or side of partially erased superimposed mirrored tile to look obviously patterned if partially erased superimposed mirrored tile were patterned. As shown in blending tool may be positioned at blending tool position over partially erased mirrored copy graphical object of partially erased superimposed mirrored tile and blending tool at position may erase all or at least a portion of partially erased mirrored copy graphical object . Similarly blending tool may be positioned at blending tool position over the portion of graphical object of original tile that may be overlaid by partially erased mirrored copy of partially erased superimposed mirrored tile and blending tool at position may erase all or at least a portion of partially erased mirrored copy so as to expose at least an additional portion or all of graphical object of original tile . As also shown in blending tool may be positioned at blending tool position over an intersection of partially erased mirrored copy graphical object of partially erased superimposed mirrored tile and graphical object of original tile and blending tool at position may blend this content in one or more ways to produce graphical object content that may allow such a tile to be patterned with a less obvious boundary at right side . The content may be partially erased smudged or otherwise blended to create appropriate content of a tile to be patterned.

As shown by screen of for example blending module may generate blended partially erased superimposed mirrored original tile graphical object content . Then blending module may pass this blended partially erased superimposed mirrored original tile graphical object content on to processing module for processing and presentation on display as processed blended partially erased superimposed mirrored original tile graphical object content data for example such that a portion of the graphical object content of partially erased mirrored copy of partially erased superimposed mirrored tile may be blended with a portion of graphical object content of original tile of partially erased superimposed mirrored tile to provide a now blended partially erased superimposed mirrored tile that may be generated and presented on canvas . As shown in blended partially erased superimposed mirrored tile may include the graphical object content of original tile and the graphical object content of an at least partially blended partially erased mirrored copy . For example original tile of blended partially erased superimposed mirrored tile may include unblended graphical object unblended graphical object unblended graphical object an unblended portion of graphical object and a blended portion of graphical object . At least partially blended partially erased mirrored copy of blended partially erased superimposed mirrored tile may include blended partially erased mirrored graphical object portion . For example the right side of the triangle drawing shape of graphical object of original tile may be completely obscured by an opaque portion of partially blended partially erased mirrored copy while the left side e.g. the tip of the triangle drawing shape of graphical object of original tile may be completely presented and not obscured by partially blended partially erased mirrored copy and while a middle portion of the triangle drawing shape of graphical object of original tile may be blended in some way with a portion of blended partially erased mirrored graphical object portion of partially blended partially erased mirrored copy

Once suitable blended partially erased superimposed mirrored original tile graphical object content has been generated by blending module blending module may pass blended partially erased superimposed mirrored original tile graphical object content on to finalizing module . Finalizing module may then finalize received graphical object content as manipulated original tile graphical object content for patterning blended partially erased superimposed mirrored tile . Alternatively finalizing module may pass received graphical object content as partially manipulated original tile graphical object content on to mirror generating module for additional manipulation of blended partially erased superimposed mirrored tile e.g. based on the orientation content of oriented original tile graphical object content . For example finalizing module of graphical object manipulating module may be configured to receive graphical object content and to generate manipulated original tile graphical object content or partially manipulated original tile graphical object content .

As mentioned finalizing module may determine which type of content to generate based on the orientation content of oriented original tile graphical object content . For example if the orientation content of oriented original tile graphical object content only identified a single side of original tile e.g. only highlighted identification of right side of complete original tile was generated then finalizing module may determine that blended partially erased superimposed mirrored tile has been sufficiently manipulated and that blended graphical object content may be finalized and passed on to any other suitable component of graphical display system as manipulated original tile graphical object content . However if the orientation content of oriented original tile graphical object content identified more than a single side of original tile e.g. both highlighted identification of right side and highlighted identification of top side were generated as described above with respect to then finalizing module may determine that blended partially erased superimposed mirrored tile has not been sufficiently manipulated and that blended graphical object content may be passed on as partially manipulated original tile graphical object content to mirror generating module for additional manipulation.

If finalizing module does indeed determine that that blended partially erased superimposed mirrored tile has not been sufficiently manipulated and that blended graphical object content may be passed on as partially manipulated original tile graphical object content to mirror generating module for additional manipulation the manipulation of original tile described above with respect to may be repeated for blended partially erased superimposed mirrored tile . However instead of using highlighted identification of right side to mirror blended partially erased superimposed mirrored tile mirror generating module may be configured to mirror blended partially erased superimposed mirrored tile using highlighted identification of top side .

As shown by screen of for example mirror generating module may generate additional mirrored graphical object content about a mirror axis along identified top side of blended partially erased superimposed mirrored tile . Then mirror generating module may pass this additional mirrored original tile graphical object content on to processing module for processing and presentation on display as processed additional mirrored original tile graphical object content data for example such that a mirrored copy of blended partially erased superimposed mirrored tile may be generated about top side and presented on canvas . Mirror axis MA may be presented and moved by a user on screen such that it may positioned along identified top side such that mirrored copy of blended partially erased superimposed mirrored tile may be generated and presented about top side in the direction of arrow M as shown in .

Next although not shown mirrored copy of blended partially erased superimposed mirrored tile may be superimposed on blended partially erased superimposed mirrored tile e.g. just as mirrored copy was superimposed on original tile in . Then although not shown a portion of mirrored copy of blended partially erased superimposed mirrored tile as superimposed on blended partially erased superimposed mirrored tile may be erased e.g. just as a portion of mirrored copy was erased in . For example a portion of the graphical object content of mirrored copy that is not within a threshold distance b of identified top side as shown in may be erased. Next although not shown the remaining portion of mirrored copy of blended partially erased superimposed mirrored tile as partially erased and superimposed on blended partially erased superimposed mirrored tile may be blended with a portion of blended partially erased superimposed mirrored tile e.g. just as a portion of partially erased mirrored copy was blended with a portion of original tile in . Finally blending module may pass this resulting graphical object content as additionally blended partially erased superimposed mirrored original tile graphical object content on to finalizing module .

Once finalizing module determines that its received graphical object content i.e. either received graphical object content or does not need to be manipulated any further finalizing module may then finalize its received graphical object content or as manipulated original tile graphical object content for patterning blended partially erased superimposed mirrored tile of or the tile that may result from appropriately overlaying erasing and blending tiles and of . Either one of those tiles that may be defined by manipulated original tile graphical object content may be referred to herein as a finalized manipulated original tile . For example as shown in finalized manipulated original tile may be presented in screen . As shown finalized manipulated original tile may include blended and unblended graphical object content of one or more various types of graphical objects positioned within a finalized manipulated tile outline and manipulated tile outline may include a top side a bottom side a right side and a left side .

At some point once suitable manipulated original tile graphical object content has been generated by finalizing module of graphical object manipulating module graphical object manipulating module may provide finalized manipulated original tile graphical object content to graphical object mapping module for mapping the graphical object content of a finalized and manipulated original tile. For example pinning module of graphical object mapping module may be configured to receive finalized manipulated original tile graphical object content and to pin or otherwise position an initial copy of finalized manipulated tile defined by manipulated original tile graphical object content at a particular initial position on a layer of a virtual canvas.

As mentioned pinning module may be configured to pin the initial copy of a finalized manipulated tile at any suitable initial position on a layer of a virtual canvas. In some embodiments the particular initial position at which the initial copy of the finalized manipulated tile may be pinned by pinning module may be based on graphical object mapping information provided by a user or an application of device . For example when manipulated original tile graphical object content is finalized and finalized manipulated original tile is presented on canvas as shown in menu may reveal one or more sub menus not shown that can provide the user with one or more ways in which he or she can define an initial position on layer of canvas that manipulated original tile is to be pinned. For example device may be configured to allow a user to actively select and move manipulated original tile of to any desired position on layer at which manipulated original tile is to be pinned using any suitable sub menus provided by menu and or using any other suitable input gestures with any suitable input component available to the user such as a mouse input component or a touch input component e.g. touch screen . Such menu selections and or other input gestures made by the user may be received by pinning module of graphical object mapping module as graphical object mapping information for defining an initial position at which manipulated original tile is to be pinned on layer of canvas for eventual patterning.

Based on any appropriate graphical object mapping information which may be generated by a user or any application running on device pinning module may be configured to identify an initial position on layer of canvas at which manipulated original tile is to be pinned. For example as shown in pinning module may be configured to pin manipulated original tile at an initial pinning position . In some embodiments as shown in initial pinning position may align bottom side of tile with the bottom of layer and centered about center point of bottom of layer in screen . In other embodiments initial pinning position may be any other suitable position other than the bottom center of layer such as the upper left corner of layer in screen

Once initial pinning position has been identified pinning module may be configured to pass the manipulated original tile graphical object content of the initial manipulated tile along with the particular initial position at which the initial manipulated tile may be pinned on to any other portion of graphical display system as pinned initial manipulated original tile graphical object content . For example pinning module may generate pinned initial manipulated original tile graphical object content . This pinned initial manipulated original tile graphical object content may then be processed by graphical object processing module as processed graphical object data e.g. processed pinned initial manipulated original tile graphical object data and presented on display .

Once suitable pinned initial manipulated original tile graphical object content has been generated by pinning module pinning module may provide pinned initial manipulated original tile graphical object content to patterning module for patterning a copy of manipulated original tile in one or more directions away from the initially pinned manipulated original tile at initial pinning position along layer of virtual canvas . For example patterning module of graphical object mapping module may be configured to receive pinned initial manipulated original tile graphical object content and to pattern the initially pinned manipulated tile in one or more suitable directions along the layer of the virtual canvas.

As mentioned patterning module may be configured to pattern the initial copy of a finalized manipulated tile in any suitable direction or directions along a layer of a virtual canvas. In some embodiments one or more such directions in which initially pinned manipulated original tile may be patterned by patterning module may be based on graphical object mapping information provided by a user or an application of device . For example a user may choose such a direction by dragging a copy of initially pinned manipulated original tile away from initial pinning position in a desired direction across layer . Alternatively or additionally an application of device may determine at least one such direction based on any suitable criteria such as the type or current settings of the application that may be provided with layer as a background e.g. Photo Booth by Apple Inc. or any other suitable application that may utilize layer containing graphical object data provided by a pattern of multiple instances of a single manipulated tile of graphical object data . Alternatively or additionally one or more directions in which a copy of initially pinned manipulated original tile may be patterned by patterning module may be based on the orientation content of oriented original tile graphical object content .

For example as shown in orientation content of oriented original tile graphical object content may be presented on canvas of screen as a first highlighted identification of right side of complete original tile which may define a first horizontal direction in which original tile may be patterned e.g. the horizontal direction of arrow H of . Patterning module may be configured to determine this first horizontal direction of arrow H from oriented original tile graphical object content and then pattern one or more copies of initially pinned manipulated original tile in this first horizontal direction away from initial pinning position across layer of canvas as shown in . This patterning in the first horizontal direction of arrow H may position the left side of a copy of initially pinned manipulated original tile e.g. left side of copied manipulated original tile adjacent to right side of initially pinned manipulated original tile . Additional copies of initially pinned manipulated original tile may likewise be positioned adjacent other copied manipulated original tiles in the first horizontal direction of arrow H as shown in such that screen may only present a portion of one or more copied manipulated original tiles e.g. the right most copied manipulated original tiles of may be cropped by layer of screen .

As also shown in orientation content of oriented original tile graphical object content may be presented on canvas of screen as a second highlighted identification of top side of complete original tile which may define a first vertical direction in which original tile may be patterned e.g. the vertical direction of arrow V of . Patterning module may be configured to determine this first vertical direction of arrow V from oriented original tile graphical object content and then pattern one or more copies of initially pinned manipulated original tile in this first vertical direction away from initial pinning position across layer of canvas as shown in . This patterning in the first vertical direction of arrow V may position the bottom side of a copy of initially pinned manipulated original tile e.g. bottom side of a copied manipulated original tile adjacent to top side of initially pinned manipulated original tile . Copies of initially pinned manipulated original tile may likewise be positioned adjacent other copied manipulated original tiles in the first vertical direction of arrow V as shown in such that screen may present a complete copy of the copied manipulated original tile directly above initially pinned manipulated original tile .

As shown in this patterning in the first horizontal direction of arrow H and this patterning in the first vertical direction of arrow V may be repeated away from each copied manipulated original tile such that the portion of layer above and to the right of initially pinned manipulated original tile in screen may be patterned with a copied manipulated original tile . Moreover in some embodiments as also shown in this patterning may also be repeated in directions opposite to the first horizontal direction of arrow H and the first vertical direction of arrow V. For example this patterning may also be performed in a second horizontal direction of arrow H that may be opposite to that of arrow H along layer and or in a second vertical direction of arrow V that may be opposite to that of arrow V along layer .

Therefore a copied manipulated original tile may be patterned away from initially pinned manipulated original tile in any suitable direction e.g. each direction identified by the orientation content of oriented original tile graphical object content and or any direction opposite to each one of such directions . The patterning of copied manipulated original tile may fill layer and layer may be utilized by any suitable application. Copied manipulated original tile may be patterned additional times depending on the aspect ratio or size of the screen to be displaying the patterned tiles which may be different than screen of layer of .

In some embodiments the first portion of the superimposed mirrored copy may include a portion of the superimposed mirrored copy that is not within a threshold distance of the first side of the original tile. In some embodiments the blending of step may include altering the opaqueness of at least some of the remaining portion of the superimposed mirrored copy. In some embodiments process may also include pinning the manipulated tile to the bottom center of a layer of a canvas. Next process may include patterning a copy of the manipulated tile adjacent the first side of the pinned manipulated tile and or patterning a copy of the manipulated tile away from the pinned manipulated tile in a first direction that is perpendicular to the first side.

In some embodiments process may also include generating a mirrored copy of the manipulated tile by mirroring the manipulated tile with respect to a second side of the manipulated tile superimposing the mirrored copy of the manipulated tile on the manipulated tile erasing a first portion of the superimposed mirrored copy of the manipulated tile and blending at least some of the remaining portion of the superimposed mirrored copy of the manipulated tile with the manipulated tile to create an additionally manipulated tile. For example the first portion of the superimposed mirrored copy of the manipulated tile may be a portion of the superimposed mirrored copy of the manipulated tile that is not within a threshold distance of the second side of the manipulated tile. Process may include blending at least some of the remaining portion of the superimposed mirrored copy of the manipulated tile by altering the opaqueness of at least some of the remaining portion of the superimposed mirrored copy of the manipulated tile. Then process may also include pinning the additionally manipulated tile to the bottom center of a layer of a canvas. In some embodiments process may also include patterning a copy of the additionally manipulated tile adjacent the first side of the pinned additionally manipulated tile and or patterning a copy of the additionally manipulated tile away from the pinned additionally manipulated tile in a first direction that is perpendicular to the second side.

It is to be understood that the steps shown in process of is merely illustrative and that existing steps may be modified or omitted additional steps may be added and the order of certain steps may be altered. For example in some embodiments at least one portion of the superimposed mirrored copy of the original tile may be blended with the original tile before another portion of the superimposed mirrored copy of the original tile may be erased.

Moreover the processes described with respect to as well as any other aspects of the invention may each be implemented by software but may also be implemented in hardware firmware or any combination of software hardware and firmware. They each may also be embodied as machine or computer readable code recorded on a machine or computer readable medium. The computer readable medium may be any data storage device that can store data or instructions which can thereafter be read by a computer system. Examples of the computer readable medium may include but are not limited to read only memory random access memory flash memory CD ROMs DVDs magnetic tape and optical data storage devices e.g. memory of . The computer readable medium can also be distributed over network coupled computer systems so that the computer readable code is stored and executed in a distributed fashion. For example the computer readable medium may be communicated from one electronic device to another electronic device using any suitable communications protocol e.g. the computer readable medium may be communicated to electronic device via communications circuitry . The computer readable medium may embody computer readable code instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and may include any information delivery media. A modulated data signal may be a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

It is to be understood that each module of graphical display system may be provided as a software construct firmware construct one or more hardware components or a combination thereof. For example graphical display system may be described in the general context of computer executable instructions such as program modules that may be executed by one or more computers or other devices. Generally a program module may include one or more routines programs objects components and or data structures that may perform one or more particular tasks or that may implement one or more particular abstract data types. It is also to be understood that the number configuration functionality and interconnection of the modules of graphical display system are merely illustrative and that the number configuration functionality and interconnection of existing modules may be modified or omitted additional modules may be added and the interconnection of certain modules may be altered.

At least a portion of one or more of the modules of system may be stored in or otherwise accessible to device in any suitable manner e.g. in memory of device or via communications circuitry of device . Each module of system may be implemented using any suitable technologies e.g. as one or more integrated circuit devices and different modules may or may not be identical in structure capabilities and operation. Any or all of the modules or other components of system may be mounted on an expansion card mounted directly on a system motherboard or integrated into a system chipset component e.g. into a north bridge chip . System may include any amount of dedicated graphics memory may include no dedicated graphics memory and may rely on device memory of device or may use any combination thereof.

Graphical display system may be a dedicated system implemented using one or more expansion cards adapted for various bus standards. For example all of the modules may be mounted on different interconnected expansion cards or all of the modules may be mounted on one expansion card. The modules of system may interface with a motherboard or processor of device through an expansion slot e.g. a peripheral component interconnect PCI slot or a PCI express slot . Alternatively system need not be removable but may include one or more dedicated modules that may include memory e.g. RAM dedicated to the utilization of the module. In other embodiments system may be a graphics system integrated into device . For example a module of system may utilize a portion of device memory of device . One or more of the modules of graphical display system may include its own processing circuitry and or memory. Alternatively each module of graphical display system may share processing circuitry and or memory with any other module of graphical display system and or processor and or memory of device .

One or more Application Programming Interfaces APIs may be used in some embodiments e.g. with respect to graphical object manipulating module or any other suitable module or any other suitable portion of any suitable module of graphical display system of . An API may be an interface implemented by a program code component or hardware component hereinafter API implementing component that may allow a different program code component or hardware component hereinafter API calling component to access and use one or more functions methods procedures data structures classes and or other services provided by the API implementing component. An API can define one or more parameters that may be passed between the API calling component and the API implementing component.

An API may allow a developer of an API calling component which may be a third party developer to leverage specified features provided by an API implementing component. There may be one API calling component or there may be more than one such component. An API can be a source code interface that a computer system or program library may provide in order to support requests for services from an application. An operating system OS can have multiple APIs to allow applications running on the OS to call one or more of those APIs and a service e.g. a program library can have multiple APIs to allow an application that uses the service to call one or more of those APIs. An API can be specified in terms of a programming language that can be interpreted or compiled when an application is built.

In some embodiments the API implementing component may provide more than one API each providing a different view of or with different aspects that access different aspects of the functionality implemented by the API implementing component. For example one API of an API implementing component can provide a first set of functions and can be exposed to third party developers and another API of the API implementing component can be hidden e.g. not exposed and can provide a subset of the first set of functions and can also provide another set of functions such as testing or debugging functions which are not in the first set of functions. In other embodiments the API implementing component may itself call one or more other components via an underlying API and may thus be both an API calling component and an API implementing component.

An API may define the language and parameters that API calling components may use when accessing and using specified features of the API implementing component. For example an API calling component may access the specified features of the API implementing component through one or more API calls or invocations e.g. embodied by function or method calls exposed by the API and may pass data and control information using parameters via the API calls or invocations. The API implementing component may return a value through the API in response to an API call from an API calling component. While the API may defines the syntax and result of an API call e.g. how to invoke the API call and what the API call does the API may not reveal how the API call accomplishes the function specified by the API call. Various API calls may be transferred via the one or more application programming interfaces between the calling component e.g. API calling component and an API implementing component. Transferring the API calls may include issuing initiating invoking calling receiving returning or responding to the function calls or messages. Thus transferring can describe actions by either of the API calling component or the API implementing component. The function calls or other invocations of the API may send or receive one or more parameters through a parameter list or other structure. A parameter can be a constant key data structure object object class variable data type pointer array list or a pointer to a function or method or another way to reference a data or other item to be passed via the API.

Furthermore data types or classes may be provided by the API and implemented by the API implementing component. Thus the API calling component may declare variables use pointers to use or instantiate constant values of such types or classes by using definitions provided in the API.

Generally an API can be used to access a service or data provided by the API implementing component or to initiate performance of an operation or computation provided by the API implementing component. By way of example the API implementing component and the API calling component may each be any one of an operating system a library a device driver an API an application program or other module. It should be understood that the API implementing component and the API calling component may be the same or different type of module from each other. API implementing components may in some cases be embodied at least in part in firmware microcode or other hardware logic. In some embodiments an API may allow a client program to use the services provided by a Software Development Kit SDK library. In other embodiments an application or other client program may use an API provided by an Application Framework. In such embodiments the application or client program may incorporate calls to functions or methods provided by the SDK and provided by the API or may use data types or objects defined in the SDK and provided by the API. An Application Framework may in these embodiments provide a main event loop for a program that responds to various events defined by the Framework. The API may allow the application to specify the events and the responses to the events using the Application Framework. In some implementations an API call can report to an application the capabilities or state of a hardware device including those related to aspects such as input capabilities and state output capabilities and state processing capability power state storage capacity and state communications capability and the like and the API may be implemented in part by firmware microcode or other low level logic that may execute in part on the hardware component.

The API calling component may be a local component i.e. on the same data processing system as the API implementing component or a remote component i.e. on a different data processing system from the API implementing component that may communicate with the API implementing component through the API over a network. It should be understood that an API implementing component may also act as an API calling component i.e. it may make API calls to an API exposed by a different API implementing component and an API calling component may also act as an API implementing component by implementing an API that may be exposed to a different API calling component.

The API may allow multiple API calling components written in different programming languages to communicate with the API implementing component such that the API may include features for translating calls and returns between the API implementing component and the API calling component. However the API may be implemented in terms of a specific programming language. An API calling component can in some embodiments call APIs from different providers such as a set of APIs from an OS provider and another set of APIs from a plug in provider and another set of APIs from another provider e.g. the provider of a software library or creator of the another set of APIs.

It is to be appreciated that API implementing component may include additional functions methods classes data structures and or other features that may not be specified through API and that may not be available to API calling component . It is to be understood that API calling component may be on the same system as API implementing component or may be located remotely and may access API implementing component using API over a network. While illustrates a single API calling component interacting with API it is to be understood that other API calling components which may be written in different languages than or the same language as API calling component may use API .

API implementing component API and API calling component may each be implemented by software but may also be implemented in hardware firmware or any combination of software hardware and firmware. They each may also be embodied as machine or computer readable code recorded on a machine or computer readable medium. The computer readable medium may be any data storage device that can store data or instructions which can thereafter be read by a computer system. Examples of the computer readable medium may include but are not limited to read only memory random access memory flash memory CD ROMs DVDs magnetic tape and optical data storage devices e.g. memory of . The computer readable medium can also be distributed over network coupled computer systems so that the computer readable code is stored and executed in a distributed fashion. For example the computer readable medium may be communicated from one electronic device to another electronic device using any suitable communications protocol e.g. the computer readable medium may be communicated to electronic device via communications circuitry . The computer readable medium may embody computer readable code instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and may include any information delivery media. A modulated data signal may be a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

For example as shown in Service B may include two APIs one of which i.e. Service B API may receive calls from and return values to Application A and the other of which i.e. Service B API may receive calls from and return values to Application B . Service A which can be for example a software library may make calls to and receive returned values from OS API and Service B which can be for example a software library may make calls to and receive returned values from both OS API and OS API . Application B may make calls to and receive returned values from OS API .

While there have been described systems methods and computer readable media for manipulating and or mapping tiles of graphical object data it is to be understood that many changes may be made therein without departing from the spirit and scope of the invention. Insubstantial changes from the claimed subject matter as viewed by a person with ordinary skill in the art now known or later devised are expressly contemplated as being equivalently within the scope of the claims. Therefore obvious substitutions now or later known to one with ordinary skill in the art are defined to be within the scope of the defined elements. It is also to be understood that various directional and orientational terms such as up and down top and bottom left and right length and width horizontal and vertical and the like are used herein only for convenience and that no fixed or absolute directional or orientational limitations are intended by the use of these words. For example the devices of this invention can have any desired orientation. If reoriented different directional or orientational terms may need to be used in their description but that will not alter their fundamental nature as within the scope and spirit of this invention.

Therefore those skilled in the art will appreciate that the invention can be practiced by other than the described embodiments which are presented for purposes of illustration rather than of limitation.

