---

title: Power control for an external device based on device identification information
abstract: In an embodiment, an information processing apparatus has a low power mode. The information processing apparatus includes: a communication control unit; a table that stores identification information identifying an external device in association with an operation need/no-need information representing an operation need/no-need of the external device in the low power mode; a power supply control unit that acquires identification information from an external device at a time of transition to the low power mode, and performs control such that supply of electric power to the communication control unit is to be restricted when determined that the operation need/no-need information corresponding to the identification information represents the operation no-need based on the table, and such that supply of electric power to the communication control unit is continued when determined that the operation need/no-need information represents the operation need based on the table.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09086867&OS=09086867&RS=09086867
owner: RICOH COMPANY, LIMITED
number: 09086867
owner_city: Tokyo
owner_country: JP
publication_date: 20120203
---
The present application claims priority to and incorporates by reference the entire contents of Japanese Patent Application No. 2011 026556 filed in Japan on Feb. 9 2011.

The present invention relates to an information processing apparatus method of controlling information processing apparatus and computer program product.

Conventionally a universal serial bus USB connection which connects a host machine with a plurality of peripherals devices by serial communication has been widely used as a method of connecting electronic devices to each other. The USB is an interface standard that provides a hot plugging function and can be removed or connected during operation of a device.

With the use of the USB USB host interfaces have been increasingly mounted in image forming apparatuses having a single function such as a laser printer or image forming apparatuses called multi function printers MFPs that implement a plurality of functions including such as scanner function copying function print function and facsimile function in one housing. Various external devices are connected to these image forming apparatuses as external devices through the USB including optional devices connected at all times to be used such as integrated circuit IC card readers and devices temporarily connected to be used such as flash memories.

Meanwhile in recent years demands for image forming apparatus having low power consumption have increased. Generally in an image forming apparatus low power mode for suppressing power consumption is implemented in such a manner that supply of power to various devices in the image forming apparatus are stopped during a standby state in which an image forming operation such as a print operation is not performed.

In the low power mode it is desirable to suppress power consumption by stopping supply of power even to a USB host controller mounted in the image forming apparatus when an operation needs not be performed. Japanese Patent Application Laid open No. 2000 010907 discloses a technique which determines whether or not a USB host controller is to stop depending on whether or not a USB device remains connected to the USB host controller. According to Japanese Patent Application Laid open No. 2000 010907 power saving can be implemented because the USB host controller can be stopped when the USB device does not remain connected.

Meanwhile there are various kinds of USB devices that can be connected to the USB host controller. For example as the USB devices to connect to the USB host controller of the image forming apparatus there are IC card readers for performing personal authentication flash memories for storing image data or the like and the like.

When many kinds of USB devices are connectable as described above it is considered that whether or not an operation needs to be performed during the low power mode may depend on a kind of a connected USB device. For example the IC card reader needs to be operating during the low power mode. However the flash memory needs not be operating during the low power mode.

However in the past there was a problem in that it was difficult to determine for each USB device whether or not the operation thereof is necessary during the low power mode. For example in Japanese Patent Application Laid open No. 2000 010907 when even any one of the USB devices remains connected to the USB host controller a function of the USB host controller is caused to be effective. However according to this related art a determination was not made about whether the function of the USB host controller is caused to be effective or ineffective for each USB device.

There is a need to more efficiently perform power saving of an apparatus in which a USB host controller is mounted.

It is an object of the present invention to at least partially solve the problems in the conventional technology.

According to an embodiment there is provided an information processing apparatus that has a low power mode in which supply of electric power to a component that needs not operate is restricted as an operation mode. The information processing apparatus includes a communication control unit that controls communication with an external device a table that in advance stores identification information identifying an external device in association with an operation need no need information representing an operation need no need of the external device in the low power mode a power supply control unit that acquires identification information from an external device connected to the communication control unit at a time of transition to the low power mode and performs control such that supply of electric power to the communication control unit is to be restricted when it is determined that the operation need no need information corresponding to the identification information represents the operation no need based on the table and such that supply of electric power to the communication control unit is continued when it is determined that the operation need no need information represents the operation need based on the table.

According to another embodiment there is provided a method of controlling an information processing apparatus having a low power mode in which supply of electric power to a component that needs not operate is restricted as an operation mode the information processing apparatus including a communication control unit that controls communication with an external device and a table that in advance stores identification information identifying an external device in association with an operation need no need information representing an operation need no need of the external device in the low power mode. The method includes acquiring identification information from an external device connected to the communication control unit at the time of transition to the low power mode by a power control unit and performing control such that supply of electric power to the communication control unit is restricted by the power control unit when it is determined that the operation need no need information corresponding to the identification information acquired at the acquiring of the identification information represents the operation no need based on the table and such that supply of electric power to the communication control unit is continued by the power control unit when it is determined that the operation need no need information represents the operation need.

According to still another embodiment there is provided a computer program product including a non transitory computer usable medium having computer readable program codes embedded in the medium for controlling an information processing apparatus having a low power mode in which supply of electric power to a component that needs not operate is restricted as an operation mode the information processing apparatus including a communication control unit that controls communication with an external device and a table that in advance stores identification information identifying an external device in association with an operation need no need information representing an operation need no need of the external device in the low power mode. The program codes when executed causes a computer to execute acquiring identification information from an external device connected to the communication control unit at the time of transition to the low power mode by a power control unit and performing control such that supply of electric power to the communication control unit is restricted by the power control unit when it is determined that the operation need no need information corresponding to the identification information acquired at the acquiring of the identification information represents the operation no need based on the table and such that supply of electric power to the communication control unit is continued by the power control unit when it is determined that the operation need no need information represents the operation need.

The above and other objects features advantages and technical and industrial significance of this invention will be better understood by reading the following detailed description of presently preferred embodiments of the invention when considered in connection with the accompanying drawings.

Hereinafter exemplary embodiments of an image forming apparatus will be described in detail as an information processing apparatus according to a first embodiment with reference to the accompanying drawings. The information processing apparatus according to the embodiment stores information for setting an operation need no need of each USB device in a low power mode as a setting table in advance. Then when transition to the low power mode is made the information processing apparatus acquires identification information of a connected USB device and refers to the setting table. At this time when at least one of connected USB devices has been set to the operation need in the low power mode electric power is continuously supplied to a USB host controller. However when all of connected USB devices have been set to the operation no need in the low power mode power supply to the USB host controller is restricted. In the low power mode electric power is continuously supplied to the USB host controller only when a USB device that needs to be operating in the low power mode is connected and thus power saving can be efficiently implemented.

For example a serial I F a network interface card NIC a USB device a USB host controller and other hardware H W are connected to the PCI bus .

The ASIC mediates communication between the CPU the RAM the HDD and the PCI bus . The HDD stores various kinds of data or a program for operating the CPU in advance. The CPU controls an overall operation of the image forming apparatus according to the program stored in the HDD using the RAM as a work memory. At this time interim data generated with the operation of the program may be temporarily stored in the HDD . In addition the HDD stores image data or the like supplied via the PCI bus which will be described later. Further a control signal generated from an operating unit in response to a user s operation is supplied to the CPU via the ASIC . Thus the image forming apparatus can be controlled in response to the user s operation.

For example the serial I F is an interface for serial communication such as RS 232C. The NIC controls communication via the Internet or a local area network LAN . The USB device is built in the image forming apparatus and fixedly used. In the following a USB device which is internally connected and fixedly used in the image forming apparatus is referred to as the USB device and is distinguished from USB devices and which are externally connected to the image forming apparatus through the USB host controller which will be described later.

The USB host controller manages a bus by a USB. The USB host controller can be connected with a plurality of USB devices and . When the USB devices and are connected the USB host controller dynamically allocates bus addresses to the connected USB devices and performs communication with the USB devices and and acquires information called descriptors from the USB devices and

An enhanced host controller interface EHCI or an open host controller interface OHCI may be used as hardware applicable as the USB host controller of the first embodiment. However hardware applicable as the USB host controller of the first embodiment is not particularly limited thereto.

A scanner device a plotter device and a facsimile control unit are connected to the PCI bus . The scanner device scans a document image outputs the scanned document image as image data supplies the image data to the CPU via the PCI bus and the ASIC and stores the image data in the HDD . The plotter device is supplied with the image data read for example from the HDD via the ASIC and the PCI bus and performs a printing process on a sheet based on the image data. The facsimile control unit is connected for example to a public telephone line and transmits the document image scanned by the scanner device to a designated transmission destination.

A power supply unit is further connected to the PCI bus . The power supply unit supplies the respective components of the image forming apparatus with electric power according to control of the CPU . At this time when the operation mode of the image forming apparatus is the low power mode in which the power saving operation is performed the power supply unit restricts supply of electric power to a component which is set not to perform an operation in the low power mode among the respective components of the image forming apparatus according to an instruction from the CPU . For example the image forming apparatus transitions to the low power mode in response to a user s operation for instructing the operating unit to transition to the low power mode a previously designated time when a predetermined time operation is not made on the image forming apparatus and the like.

A platform is configured to include the OS which is a general purpose OS a control service that analyzes a processing request from an application which will be described later and generates a hardware resource acquisition request and a system resource manager not illustrated that performs management of one or more hardware resources and mediates the acquisition request from the control service.

In the example of the control service includes a system control service that provides control of an entire system a facsimile control service that provides control of the facsimile control unit an engine control service that provides control of the scanner device and the plotter device a memory control service that provides control of a memory the RAM and the HDD an operating unit control service that provides control of the operating unit and a network control service that provides control of the NIC . The platform further includes an application programming interface API that allows a processing request from each application to be received by a predefined function.

In the first embodiment the control service further includes a USB device control service and a USB device management service . The USB device control service and the USB device management service perform control and management of a USB device connected to the USB host controller . For example the USB device management service detects a USB device connected to the USB host controller .

Here the OS includes a USB driver that performs relay between software and hardware of a USB device as part of a function. The control and management of the USB device by the USB device control service and the USB device management service are performed through the USB driver . For example the OS controls the USB host controller through the USB driver in response to instructions of the USB device control service and the USB device management service according to a request from an application which will be described later. A PCI I F is an interface of the PCI buses and illustrated in .

In the example of the application includes a copying application functioning as an application for a copying process a printer application functioning as an application for a printing process a scanner application functioning as an application for a scanner process a facsimile application functioning as an application for facsimile transmission and reception and a web application that performs a data transfer process when Internet communication is performed through the NIC .

The processes of the applications and the processes of the control services implement a user service related to an image forming process such as the copying process the printing process the image scanning process and the facsimile process while performing inter process communication by function calling return value transmission and transmission and reception of a message.

For example the power supply unit supplies the respective components of the image forming apparatus with electric power according to control of the OS when the operation mode of the image forming apparatus is of a normal mode. However when the operation mode of the image forming apparatus is of the low power mode electric power is supplied only to a previously decided component of the image forming apparatus and thus power consumption is suppressed.

The programs such as the control services the applications and the OS which are illustrated in are stored in the HDD in advance and provided. However the embodiment is not limited thereto and part or all of the programs may be provided in a form stored in a storage medium such as a compact disk CD a digital versatile disk DVD a flexible disk FD and a removable non volatile memory. In this case a driver device that can read the storage medium is connected to the image forming apparatus . The program stored in the storage medium is read by the driver device and then stored in the HDD or the like. In addition the program may be acquired from a network via the NIC .

Next a description will be schematically made in connection with a procedure until communication when the USB devices and are connected the USB host controller . First when the USB device is connected to a USB device connection port of the USB host controller and then the USB host controller recognizes the USB device the USB host controller allocates an address to the connected USB device

When the address is allocated to the connected USB device the USB host controller starts acquiring a descriptor of the USB device . In USB communication the USB host controller acquires a descriptor by control transfer from the target USB device in a communication sequence between the USB host controller and the USB device . The descriptor includes information such as a character and an attribute of the target and there are 4 kinds of descriptors a device descriptor a configuration descriptor an interface descriptor and an end point descriptor.

In the following the four descriptors of the device descriptor the configuration descriptor the interface descriptor and the end point descriptor are collectively referred to as a standard descriptor.

The 4 kinds of descriptors will be schematically described with reference to . In an offset represents the number of bytes from the beginning. In each field has a data length indicated on the right of a field name and a specified field in each descriptor can be accessed using an offset and a data length.

Of these fields the field bLength and the field bDescriptorType represent a byte length and the type of descriptor respectively. The field bLength and the field bDescriptorType are provided in each descriptor.

In the device descriptor the field bDeviceClass the field bDeviceSubclass and the field bDeviceProtocol represent a function of a USB device that has transmitted the descriptor. The field idVendor is a vendor ID identifying a vendor of a USB device that has transmitted the descriptor. Similarly the field idProduct represents a product of a USB device that has transmitted the descriptor. A model of a USB device can be identified using the field idVendor and the field idProduct.

In the configuration descriptor a sixth bit of the field bmAttributes represents which of self power and bus power a USB device which has transmitted the descriptor supports. A fifth bit of the field bmAttributes represents whether or not a remote wake up function is supported in the USB device.

Specifically the USB host controller sets a parameter designating the device descriptor to a command GET DESCRIPTOR which is a standard request and issues the command GET DESCRIPTOR to the USB device SEQ . The USB device transmits the device descriptor to the USB host controller in response to the command SEQ .

Thereafter in the same way the USB host controller sets a parameter designating the configuration descriptor to a command GET DESCRIPTOR and issues the command GET DESCRIPTOR to the USB device and acquires the configuration descriptor SEQ and SEQ . Thereafter in the same way the USB host controller repetitively performs the processes of SEQ and SEQ and acquires the interface descriptor and the end point descriptor from the USB device

Next a description will be made in connection with a setting table according to the first embodiment. As described above in the embodiment a setting table in which whether or not an operation needs to be performed in the low power mode hereinafter referred to as operation need no need in the low power mode is set to the USB device is stored in the image forming apparatus in advance. In the first embodiment information that represents models of the USB devices and is stored in the setting table in association with information for setting the operation need no need in the low power mode. The setting table is generated in advance and stored in a non volatile storage medium such as the HDD included in the image forming apparatus .

In this example an operation need no need flag having a value of either 1 or 0 is used as the operation need no need information. For example the operation need no need flag having a value of 1 represents operation need represents that a USB device identified by the field idVendor and the field idProduct needs to be operating even in the low power mode. The operation need no need flag having a value of 0 represents no need represents that a USB device identified by the field idVendor and the field idProduct needs not be operating in the low power mode.

In the example of in a USB device an IC card reader represented by the field idVendor having a value of 0x05CA and the field idProduct having a value of 0x2218 and a USB device represented by the field idVendor having a value of 0x05CA and the field idProduct having a value of 0x0105 a value of the operation need no need flag is set to 1 and represents that an operation needs to be performed in the low power mode. In a USB device a USB hub represented by the field idVendor having a value of 0xFFFF and the field idProduct having a value of 0x0001 a value of the operation need no need flag is set to 0 and represents that an operation needs not be performed in the low power mode. Further 0x in the value of each field represents that a subsequent character string is a number of a hexadecimal notation.

First in step S the CPU requests the USB host controller to acquire the standard descriptor from the USB devices and connected to the USB host controller . The USB host controller acquires the standard descriptor of one for example the USB device of the USB devices and connected to the USB host controller in response to the request through the procedure described with reference to . The acquired standard descriptor is transferred to the CPU .

Next in step S the CPU extracts the field idVendor and the field idProduct used as the identification information from the device descriptor of the standard descriptor which has been acquired in step S transferred from the USB host controller . Then in step S by comparing the extracted field idVendor and the field idProduct with the setting table previously stored in the HDD it is determined whether or not the setting table has an entry matching with the extracted field idVendor and the field idProduct. When it is determined in step S that the setting table has no entry matching with the extracted field idVendor and the field idProduct the CPU causes the process to proceed to step S which will be described later.

However when it is determined in step S that the setting table has an entry matching with the extracted field idVendor and the field idProduct the CPU causes the process to proceed to step S. In step S the CPU checks a value of the operation need no need flag in the corresponding entry. Then in step S determined is which of the operation need and the operation no need the value of the operation need no need flag represents. When it is determined that the value of the operation need no need flag is 1 that is represents that the target USB device for example the USB device needs to be operating even in the low power mode operation need the process proceeds to step S which will be described later.

However when it is determined in step S that the value of the operation need no need flag is 0 that is represents that the target USB device needs not be operating in the low power mode no need the CPU causes the process to proceed to step S.

In step S the CPU determines whether the process has been completed on all of the USB devices and connected to the USB host controller . When it is determined that the process has not been completed yet the process returns to step S and the same process is performed on the next USB device for example the USB device connected to the USB host controller . However when it is determined that the process has been completed on all of the USB devices and the process proceeds to step S.

At a point in time of step S it is determined that all of the USB devices and connected to the USB host controller need not be operating in the low power mode. Thus in step S the CPU performs control such that power supply to the USB host controller is restricted. For example the CPU controls the power supply unit such that power supply to the USB host controller is stopped. Then the process proceeds to step S.

In step S the CPU shifts the process onto other operations in the low power mode that is shifts the process onto an operation other than power supply control on the USB host controller . For example other operations in the low power mode may be an operation of stopping power supply to a display device provided in the operating unit or a process of stopping the HDD .

Here when it is determined in step S that the target USB device whose value of the operation need no need flag is 1 needs to be operating even in the low power mode the process proceeds to step S. This means that when even one of USB devices connected to the USB host controller needs to be operating even in the low power mode power supply to the USB host controller is not restricted and power supply is performed as usual.

A description will be made in connection with power supply control on each hardware in the image forming apparatus when transition to the low power mode is made according to the setting table of and the flowchart of with reference to .

In this case in step S in the flowchart of the standard descriptor including identification information is acquired from the USB device . In the setting table illustrated in an entry matching with the acquired identification information is present steps S and S . Thus the CPU checks the value of the operation need no need flag in the corresponding entry step S . In the example of the value of the operation need no need flag is set to 1 and so it is determined that the USB device needs to be operating even in the low power mode operation need step S .

The CPU controls supply of electric power to the respective components of the image forming apparatus according to the determination result of step S. In this example in which the USB device needs to be operating even in the low power mode when transition to the low power mode is made restricted is supply of electric power for example to the scanner device the plotter device the operating unit and the HDD which are indicated by hatching in . However supply of electric power to the USB host controller is not restricted but continuously performed. As an example the CPU controls the power supply unit such that supply of electric power to the scanner device the plotter device the operating unit and the HDD is stopped.

By controlling power supply in the above described way it is possible to operate the USB host controller and the USB device connected to the USB host controller in the low power mode and thus power saving can be implemented. In the example in which the USB device is the IC card reader the USB device which is the IC card reader can read the IC card for performing user authentication and the like even in the low power mode.

In this example in the setting table illustrated in present is an entry matching with identification information included in the standard descriptor acquired from the USB device in step S of the flowchart of steps S and S . Thus the CPU checks the value of the operation need no need flag in the corresponding entry step S . In the example of the value of the operation need no need flag is set to 0 and so it is determined that the USB device needs not be operating in the low power mode operation no need step S .

The CPU controls supply of electric power to the respective components of the image forming apparatus according to the determination result of step S. In this example in which the USB device needs not be operating in the low power mode when transition to the low power mode is made restricted is supply of electric power for example to the scanner device the plotter device the operating unit the HDD and the USB host controller which are indicated by hatching in . As an example the CPU controls the power supply unit such that supply of electric power to the scanner device the plotter device the operating unit the HDD and the USB host controller is stopped.

In this case by stopping supply of electric power to the USB host controller supply of electric power to the USB device connected to the USB host controller is also stopped when electric power of the USB device is bus power . As a result effective power saving can be implemented.

Since a USB device supports a hot plugging function a USB device may be newly connected to the USB host controller during a process of transitioning to the low power mode. In the first embodiment when transition to the low power mode is set a process of recognizing a newly connected USB device by the USB host controller is put on hold. Then depending on a result of a determination as to whether or not a USB device already connected to the USB host controller needs to be operating even in the low power mode it is determined whether or not the process of recognizing the newly connected USB device which is put on hold is to resume.

For example the OS commands the USB host controller to hold the process for detecting a USB device to be newly connected in response to the request made in SEQ. In response to the command even though an interruption is generated due to a new connection of a USB device after SEQ SEQ the USB host controller does not perform the recognition process on the USB device for example a process of allocating an address to the USB device and acquiring the standard descriptor.

The USB device management service causes the process to proceed to step S when the process proceeds to step S of the flowchart of and it is determined that a USB device of a processing target needs to be operating even in the low power mode. At the same time the USB device management service requests the OS to resume the process for detecting a connection of a USB device SEQ . In response to the request the OS resumes the process for detecting a connection of the newly connected USB device which was put on hold in SEQ.

In addition the USB device management service notifies the system control service of the intent that the USB host controller needs to be operating in the low power mode SEQ . In response to the notice the system control service requests the OS to transition to the low power mode SEQ . In response to the request the OS restricts supply of electric power to previously decided components excluding the USB host controller . For example the OS controls the power supply unit such that supply of electric power to the scanner device the plotter device the operating unit and the HDD in the image forming apparatus is stopped as described above with reference to .

The USB device management service causes the process to proceed to step S when the process proceeds to step S of the flowchart of and it is determined that a USB device of a processing target needs not be operating in the low power mode. At the present point in time when the process of steps S to S has not been finished on all of USB devices whose connection to the USB host controller has been recognized the process returns to step S and the process is performed on a next USB device.

Meanwhile when it is determined that none of USB devices recognized by the USB host controller needs to be operating in the low power mode the USB device management service notifies the system control service of the fact SEQ . Unlike the example of performed is not a resume request for requesting the OS to resume the process for detecting a connection of a USB device.

In response to the notice from the USB device management service the system control service requests the USB host controller to stop power supply SEQ . In response to the request for example the OS controls the power supply unit such that power supply to the USB host controller is stopped. In addition the system control service requests the OS to transition to the low power mode SEQ . That is in this case the process of detecting a connection of a USB is put on hold and transition to the low power mode is made. In response to the request the OS restricts supply of electric power to previously decided parts including the USB host controller . For example the OS controls the power supply unit such that supply of electric power to the scanner device the plotter device the operating unit the HDD and the like in the image forming apparatus is stopped as described above with reference to .

As described above in the first embodiment by controlling power supply when transition to the low power mode is made depending on whether or not a connected USB device needs to operate in the low power mode it is possible to effectively implement power saving while causing a function required by a USB device to be effective.

Next a description will be made in connection with a modification of the first embodiment. In the first embodiment information representing a model of a USB device connected to the USB host controller is used as identification information for identifying the corresponding USB device. On the other hand in the modification of the first embodiment information representing a kind of a USB device is used as identification information for identifying the corresponding USB device.

Further when the field bDeviceClass the field bDeviceSubclass and the field bDeviceProtocol are used as the identification information a so called wild card meaning that an arbitrary value is allowed may be used as an entry value.

In the example of in an entry of a first row the field bDeviceClass the field bDeviceSubclass and the field bDeviceProtocol have a value of 0x0B a value of and a value of respectively and are associated with the operation need no need flag having a value of 1 . The field bDeviceSubclass and the field bDeviceProtocol have arbitrary values. For example the entry of the first row represents a smart card. Similarly in an entry of a second row the field bDeviceClass the field bDeviceSubclass and the field bDeviceProtocol have a value of 0x03 a value of and a value of 0x01 respectively and are associated with the operation need no need flag having a value of 1 . The field bDeviceSubclass has an arbitrary value. For example the entry of the second row represents a USB keyboard. Further in an entry of a third row the field bDeviceClass the field bDeviceSubclass and the field bDeviceProtocol have a value of 0x09 a value of 0x00 and a value of respectively and are associated with the operation need no need flag having a value of 0 . The field bDeviceProtocol has an arbitrary value. For example the entry of the third row represents a USB hub.

Using the setting table in which the entries are provided as described above power supply can be controlled when transition to the low power mode is made depending on whether or not a connected USB device needs to operate in the low power mode through the same process as in the first embodiment. Thus it is possible to effectively implement power saving while causing a function required by a USB device to be effective.

In addition since the setting table is configured using information representing a kind of a USB device the process in the low power mode can be applied depending on a function of a USB device or the like regardless of the manufacturer or model of the USB device.

Furthermore as a combination of the first embodiment and the present modification the setting table may be configured using both information representing a model of a USB device and information representing a kind of a USB device. In this case the field idVendor the field idProduct the field bDeviceClass the field bDeviceSubclass and the field bDeviceProtocol are acquired as the identification information of the USB device and values of all of the fields are compared with values of the setting table.

Next a second embodiment will be described. The second embodiment will be described in connection with an example in which a USB device supports a remote wake up function. Here the remote wake up function according to the USB standard will be schematically described.

In the USB a bus has two states of an operation state and a suspension state. The operation state refers to a state in which a bus is active. In the operation state a start of frame SOF representing the start of a frame is transmitted to a USB device at predetermined intervals. Further in the operation state electric power is supplied from a USB host controller to a USB device through a USB cable. The suspension state refers to a state in which a bus is idle. For example in the suspension state the USB host controller stops transmitting the SOF to the USB device and restricts supply of electric power to the USB device. As a result power consumption in the USB host controller is reduced.

The remote wake up function refers to a function that allows a USB device in the suspension state to release the suspension state by itself. For example when a predetermined time elapses from a point in time at which transition to the suspension state has been made a USB device transmits a remote wake up signal to a USB host controller by a predetermined trigger such as a timer process. When the remote wake up signal is received the USB host controller causes a bus to transition from the idle state to the active state.

In the second embodiment when it is recognized that a connected USB device needs to be operating in the low power mode the USB host controller checks whether or not the USB device has the remote wake up function. When it is determined that the USB device has the remote wake up function a USB device connection port connected to the USB device is caused to enter the suspension state and the process on a next USB device is performed.

In the second embodiment the image forming apparatus described with reference to in the first embodiment can be applied as an information processing apparatus as it is. Further the setting table described with reference to or in the first embodiment or the modification of the first embodiment can be applied as is as the setting table for determining the operation need no need of the USB devices and in the low power mode.

First in step S the CPU initializes a value of a flag FLAG to 0 . Next in step S the CPU requests the USB host controller to acquire the standard descriptor from the USB devices and connected to the USB host controller . In response to the request the USB host controller acquires the standard descriptor of for example the USB device connected to the USB host controller and transfers the acquired standard descriptor to the CPU .

Next in step S the CPU extracts a field which has been previously set to the setting table as identification information from the standard descriptor transferred from the USB host controller through the process of step S. Then in step S by comparing the extracted field with the setting table previously stored in the HDD it is determined whether or not the setting table has an entry matching with a value of the extracted field. When it is determined in step S that the setting table has no entry matching with the value of the extracted field the CPU causes the process to transition to step S which will be described later.

However when it is determined in step S that the setting table has an entry matching with the value of the extracted field the CPU causes the process to transition to step S and checks a value of the operation need no need flag in the corresponding entry. Then in step S determined is which of the operation need and the operation no need the value of the operation need no need flag represents. When it is determined that the value of the operation need no need flag is 1 and represents that the target USB device for example the USB device needs to be operating even in the low power mode need the process proceeds to step S.

However when it is determined that the value of the operation need no need flag is 0 that is represents that the target USB device needs not be operating in the low power mode no need the CPU causes the process to transition to step S which will be described later.

In step S the CPU sets the value of the flag FLAG to 1 and the process proceeds to step S. In step S the CPU determines whether or not the target USB device for example the USB device has the remote wake up function. For example the CPU extracts a value of a fifth bit of the field bmAttributes representing the presence and absence of the remote wake up function from the configuration descriptor in the standard descriptor acquired in step S and determines whether or not the value represents the remote wake up function is supported . When it is determined that the remote wake up function is not supported the process proceeds to step S which will be described later.

However when it is determined in step S that the value of the fifth bit of the field bmAttributes represents that the remote wake up function is supported the process proceeds to step S. In step S the CPU commands the USB host controller to cause a USB device connection port to which the target USB device is connected to enter the suspension state. In response to the command the USB host controller causes the USB device connection port to enter the suspension state. The CPU causes the process to proceed to step S.

In step S the CPU determines whether or not the process has been completed on all of the USB devices and connected to the USB host controller . When it is determined that the process has not been completed yet the process returns to step S and the same process is performed on the next USB device for example the USB device connected to the USB host controller . However when it is determined that the process has been completed on all of the USB devices and the process proceeds to step S.

In step S the CPU determines whether or not the value of the flag FLAG is 0 . When it is determined that the value of the flag FLAG is 0 the process proceeds to step S. In this case it can be determined that any of the USB devices and connected to the USB host controller needs not be operating in the low power mode. For this reason for example the CPU controls the power supply unit such that supply of electric power to the USB host controller is restricted.

Then the CPU causes the process to proceed to step S and shifts the process onto other processing in the low power mode that is shifts the process onto an operation other than power supply control on the USB host controller .

However when it is determined in step S that the value of the flag FLAG is 1 the CPU causes the process to proceed to step S. That is in this case it can be determined that at least one of the USB devices and connected to the USB host controller needs to be operating in the low power mode. For this reason electrical power is continuously supplied to the USB host controller .

As described above according to the second embodiment when a connection of a USB device that needs to be operating in the low power mode is detected the detection of the USB device is stored using the flag FLAG and it is determined whether or not the USB device has the remote wake up function. For this reason when transition to the low power mode is made the connection port of the USB device that needs to be operating in the low power mode and has the remote wake up function can be caused to enter the suspension state and thus more effective power saving can be implemented.

According to the embodiment there is an effect capable of more efficiently performing power saving of an apparatus in which a USB host controller is mounted.

Although the invention has been described with respect to specific embodiments for a complete and clear disclosure the appended claims are not to be thus limited but are to be construed as embodying all modifications and alternative constructions that may occur to one skilled in the art that fairly fall within the basic teaching herein set forth.

