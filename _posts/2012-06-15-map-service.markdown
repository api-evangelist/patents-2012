---

title: Map service
abstract: Map service techniques are described. In an implementation, text is received from an application for processing by one or more linguistic services. Based on service properties of respective linguistic services that are relevant to the application, particular linguistic services are designated to be available for use by the application and one or more other linguistic services are obscured from the application. A communication is formed to communication the text to a designated linguistic service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09384292&OS=09384292&RS=09384292
owner: Microsoft Technology Licensing, LLC
number: 09384292
owner_city: Redmond
owner_country: US
publication_date: 20120615
---
This application is a continuation of and claims priority to U.S. patent application Ser. No. 12 147 443 filed on Jun. 26 2008 the entire disclosure of which is incorporated by reference herein.

A uniform resource locator URL includes an address that points to a webpage that may perform an action. For example the URL http www.msn.com may direct a web browser to a webpage on the MSN website Microsoft Corporation Redmond Wash. . When the URL is selected such as by clicking on a text representation of the URL the web browser may be invoked and the browser may use the Internet to go to the webpage indicated by the URL. However URLs point to a single webpage and if the URL is incorrect or changes the web browser will not be able to open the webpage.

In addition developing code to link the URL and provide the webpage may be time consuming and tedious as numerous instructions are included in one or more files that tell the webpage how to perform an action. For example a webpage may include a file in which text from an article is incorporated with extensible markup language XML tags that tells the web browser how to present the text. As a result developing applications and webpages linked by URLs is may be inefficient.

Map service techniques are described. In an implementation one or more computer readable media comprise instructions that are executable by a computer to recognize from text an action that is performable by a particular one of a plurality of webpages and to parse a set of parameters from the text to be passed to the particular said webpage to cause the webpage to perform the action.

In an implementation a recognition is made from text received from an application of an action that is performable by a webpage. A set of parameters for the action is parsed from the text and the set of parameters is customized in accordance with one or more criteria specified by the application.

In an implementation a system comprises a map service to recognize an action from a text that is performable by a webpage and pass a set of parameters parsed from the text to cause the webpage to perform the action.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter. The terms service and or module for instance may refer to system s computer readable instructions e.g. one or more computer readable storage media having executable instructions and or procedure s as permitted by the context above and throughout the document.

Traditionally a uniform resource locator URL is used to point to a webpage that may provide additional information or perform a task. For example a URL may be included in a word processing document to open a webpage that corresponds to the URL. Since the URL corresponds to a particular webpage when the address of the webpage changes or the address is incorrect a web browser used to open the webpage will be unable to do so.

In addition developing webpages and incorporating URLs to link applications with webpages may be tedious and inefficient. For example developing a webpage and the corresponding URL to perform a task for an application may involve accounting for numerous files and ensuring that the application and webpage interact in a seamless manner.

Map service techniques are described. In an implementation one or more computer readable media comprise instructions that are executable by a computer to recognize from text an action that is performable by a particular one of a plurality of webpages and to parse a set of parameters from the text to be passed to the particular said webpage to cause the webpage to perform the action. Consequently an application providing the text and the webpage may operate in a data driven manner to minimize the complexity associated with the webpage performing the action for the application.

In an implementation a recognition is made from text received from an application of an action that is performable by a webpage. A set of parameters for the action is parsed from the text and the set of parameters is customized in accordance with one or more criteria specified by the application.

In an implementation a system comprises a map service to recognize an action from a text that is performable by a webpage and pass a set of parameters parsed from the text to cause the webpage to perform the action. For example the map service may recognize that an electronic message may be sent to an email address from text characters included in the email address.

In the following discussion an Example Environment is first described that may employ map service techniques. The Example Environment is discussed with respect to interacting with an application through a platform. While example techniques systems and approaches are generally described in in other implementations the map services may be implemented in other environments and configurations. Discussions related to other linguistic services are included to highlight interactions between a map service the platform one or more applications other linguistic services and so on. Example Procedures are also described that may be employed in the example environments as well as in other environments. Although these systems and techniques are described as employed in a computing environment in the following discussion it should be readily apparent that these structures modules techniques and approaches may be incorporated in a variety of environments without departing from the spirit and scope thereof. In addition while text and text data are discussed the methods techniques approaches service modules and so on may be configured to implement other encoded information. For example a service may be configured to recognize property information for a video file.

The linguistic services may include modules e.g. subservices to perform specific functions for a linguistic service. For example the proofing service may include a spelling module and a grammar module and so on.

While the computer is illustrated as including a processor and memory the processor and or the memory may be representative of one or more devices e.g. the processor may be representative of a plurality of central processing units. Processor s are not limited by the materials from which they are formed or the processing mechanisms employed therein. For example processor s may be comprised of semiconductor s and or transistors e.g. electronic integrated circuits ICs that execute instructions to provide the application and or linguistic services . Sample processor mechanisms may include but are not limited to quantum computing optical computing mechanical computing e.g. using nanotechnology and so on.

Although one memory is illustrated a wide variety of types and combinations of memory may be employed such as random access memory RAM read only memory ROM hard disk memory removable medium memory and other types of computer readable media. The memory for example may be used to store instructions used by the processor s to provide the application and or linguistic services .

The computer is illustrated as executing an operating system on the processor s which is also storable in the memory . The operating system may be representative of functionality to abstract underlying functionality of the computer . The operating system may for example provide a foundation for the application and or linguistic services to be executed on the computer without having to know the specific configuration of the computer e.g. which particular kind processor is employed by the computer amounts of memory and so on.

The platform may broker communication between the application and the linguistic services . For example the platform may be configured to broker communications passing through the platform such that the linguistic services are obscured from the application . By obscuring the linguistic services from the application the linguistic services may be changed or added without encoding the change or the addition into the application s code. In this manner the linguistic services may be independent from the application . For example instead of configuring a first linguistic service to function for a specific application the first linguistic service may be formed so that multiple applications may implement the first linguistic service e.g. individual instances of the first linguistic service. Additional aspects of the platform and associated benefits are discussed with respect to sample communication sessions between the application and the linguistic services .

In one or more embodiments a service manager may be included in the computer . The service manager may be representative of functionality to expose a way for users to manage the platform and or the linguistic services . For example when a user installs a new linguistic service the service manager may be used to manage a plugin process to override a previously installed service. Thus for example when a new proofing service is installed the service manager may be used to manage the platform and or the linguistic services so that text data for proofing is communicated to the new proofing service rather than a previous proofing service.

Referring to when initiating communication the platform may designate which linguistic services in system are available for use by the application e.g. a communication application based on a property of the linguistic service e.g. a service property. For example during an enumeration phase the platform may designate that the spelling property and a phone lookup property are available through the platform rather than designating that the proofing service and the communication service are available for use by the application . By designating linguistic services based on service properties the platform may obscure e.g. conceal the linguistic service providing the function to the application and vice versa . As a result the application may not be configured for a particular service in order to implement the functionality provided by the particular linguistic service. Although a service property is discussed in one or more instances multiple service properties may be implemented.

For example in response to receiving an application program interface API call the platform may designate the linguistic services available for use by the application . The platform may designate that a particular linguistic service is available based on a service property of the particular linguistic service. In this way the application may not be tied to the particular linguistic service e.g. the linguistic services may be decoupled from the application and the platform may designate the available linguistic services without the application issuing an API call specifying the particular linguistic service e.g. an API call for the communication service . Moreover the application may use a limited number of API calls in comparison to issuing API calls tied to linguistic services.

In one or more embodiments the application may specify that linguistic services are to be designated based on a service property specified in the API call. The application may prescreen e.g. filter which linguistic services are to be designated by specifying which service properties are relevant to the application . For example a word processing application may specify that a spelling functionality is to be designated by issuing an API call specifying a spelling property. Accordingly the platform may not designate the communication service because a phone lookup property was not specified in the API call. Having described designating linguistic services communication and recognizing linguistic property information are now discussed.

Referring to once the linguistic services are designated the application in a system may send a text to a designated linguistic service for recognition. For example the platform may broker communication of the text to the designated linguistic services. The platform for example may route or direct the text to the proofing service .

The designated linguistic services may recognize linguistic property information associated with text data in the text . For example one of the linguistic services may associate linguistic property information with text data within range of the text e.g. 8 bytes of data that start at a position 20 bytes into the text .

Consider for example a session occurring between the application e.g. communication application having the text the proofing service and the communication service . As illustrated the text may include a telephone number 5558675309 and the word cel. The platform may for example broker communication of the text by directing the text to the proofing service .

Upon receiving the text the proofing service may recognize linguistic property information associated with text data within a range of the text and return linguistic property information to the application . For example the proofing service may recognize that the word cel is misspelled e.g. cel is not in a dictionary and that the word cel is an improper spelling of the word cell. As a result the proofing service may populate the memory e.g. property bag with the linguistic property information indicating that the text data is misspelled and the text data is the word cell. The proofing service may associate the foregoing linguistic property information with a range occupied by the word cel in the email message. For example the word cel may start at position and go for three units in the text .

In the case of the communication service upon receiving the text e.g. an email message the communication service may recognize that text data 5558675309 is a telephone number e.g. the text data within the range occupied by 5558675309 corresponds to a telephone number. The range for the telephone number may for example start at position in the text and have a length of 10 units. In response to recognizing the text data as a telephone number a phone lookup module may populate the memory with caller identification information associated with the telephone number e.g. Jenny and associate a range starting at position with the term Jenny .

With the linguistic property information in the memory the platform may communicate the text data property information. For example the proofing service may store the linguistic property information cell in memory until the communication service has recognized the telephone number at which time the word cell and the caller identification information Jenny may be communicated to the application .

When the text data within the range has been altered e.g. the text has been deleted or modified since the associated linguistic property information was stored in memory the platform may release the memory storing the linguistic property information. For example the platform may permit deletion or overwriting of a portion of the memory storing the linguistic property information when the associated text data has been altered.

In one or more embodiments the linguistic services may be configured to interact with other linguistic services through the platform . For example the language detection service may be used to designate the text data as for example German before requesting that a German proofing service spell check the text data. In the foregoing situation the language detection service may return the recognized linguistic property information e.g. the text data is German through the platform to the German proofing service. In another example the proofing service may request that the language detection service identify which human language is associated with the text data and return the linguistic property information result to the proofing service .

In some implementations the linguistic services may be configured to form a callback to the application upon recognizing the linguistic property information. For example the proofing service may form and send the application a callback that indicates that the memory has been populated with linguistic property information. In response the application may instruct the platform to communicate the linguistic property information.

In another implementation the linguistic services output the linguistic property information in a format indicated by the application . For example as part of initiating a session the application may indicate that the proofing service is to return the linguistic property information in hypertext markup language HTML format. In other implementations the linguistic service may return multiple versions of the linguistic property information e.g. as Unicode text and HTML. In further embodiments the linguistic services may output linguistic property information in a format specific to one or more applications to accommodate interrelated applications.

In one or more embodiments the linguistic services may indicate that an action is associated with the text data within a range of the text. For example the communication service may indicate that text data 5558675309 is a telephone number and or prompt the user via a user interface to initiate the communication service to dial the telephone number . Having discussed techniques approaches interactions and functions associated with linguistic services and the platform the map service will be discussed in depth.

Referring to as illustrated an environment includes the computer with the map service . As described with respect to the map service may be independent from the application implementing the actions supported by the map service .

The map service is representative of functionality to access a webpage to pass content that is usable to perform an action recognized from a text . For example upon recognizing an action associated with content in the text the map service may invoke a web browser that opens the webpage specified by the map service. For example the map service may specify which of a plurality of webpages is to perform the action. Thus the webpage may not be specified in the text by a URL pointing to the webpage.

The map service may access the webpage to pass the content for use in performing the action. For example when a telephone number can be dialed the map service may invoke the web browser to pass a telephone number for use in dialing the telephone number. By configuring the map service in this manner additional webpage supported actions may be provided in a straight forward manner as the map service may interact with the webpage based on data rather than accounting for the webpage s design.

The map service may recognize the action from the content by identifying features associated with the content. For example the map service may recognize that caller identification information may be obtained for the content 555 867 5309 by parsing the text characters 555 867 and 5309 from the text e.g. an email. The map service may recognize the action e.g. obtain caller ID information because the content 555 867 5309 has features associated with obtaining caller ID information e.g. 10 digits the digits are arranged in two three digit sets followed by a four digit set the first three digits match an area code and so on. As a result the map service may access a phone webpage to obtain caller ID information.

As illustrated the map service includes a dictionary subservice a direction subservice and a phone subservice . Subservices are representative of functionality to access a corresponding webpage and to pass content in a format useable by the webpage. For example the direction subservice may access the webpage www.driving directions.org and format the content for the www.driving directions.org webpage .

As illustrated the webpage www.driving directions.org is available via a network such as the Internet. For example the webpage www.driving directions.org may be communicatively coupled via wired or a wireless network to the computer .

In some implementations the map service recognizes actions that are supported by included subservices. For example when the map service includes a phone subservice that corresponds to the phone webpage the map service may recognize actions associated with the phone webpage such as dial call waiting and so on.

When the webpage subservices are configured as plugins to the map service the webpage may inform the map service as to which actions the corresponding webpages support. For example the phone subservice phone webpage may inform the map service that caller ID information may be obtained and call dialing is available.

The map service may use the subservices to format the content to correspond to a format used by the webpage. For example when accessing the webpage www.driving directions.org the map service may implement the direction subservice to format the content into a form that is useable by the www.driving directions.org webpage . In an example of the foregoing the map service may parse a starting physical address and an ending physical address from the content I am at 2741 Vicky Drive do you want to meet at Bill s Burgers for inclusion in a set of parameters passed to the www.driving directions.org webpage .

While the map service may recognize the action by examining the text e.g. a string the map service may be configured to pass a set of parameters parsed from the text to cause the webpage to perform the action. Thus in the driving direction example while map service may recognize the action obtain driving directions from the phrase Do you want to meet at . . . the parameter 2741 Vicky Drive may be included in the set of parameters.

In examples in which a parameter is missing or not provided the map service may request that the application provide additional text so that the webpage may perform the action. For example when text is associated with obtaining driving directions e.g. a starting physical address of 2741 Vicky Drive and an ending physical address of Bill s Burgers the map service may callback to the application for the ending physical address. In response the application may provide the physical address for Bill s Burgers e.g. 521 Highway 2 that is included in the set of parameters.

When the application does not have a parameter the map service may form a communication to cause the application to present a user prompt. For example the map service may send the application a callback that informs the application of the missing content. In response when the application does not have the parameter the application may present a popup window that asks a user if he she wants driving directions and to provide the end physical address.

In other instances in which a parameter is missing the map service may be configured to use a search engine in the web browser to obtain the parameter e.g. a physical address for Bill s Burgers.

In one or more embodiments the map service populates a file format that includes one or more name entities that are filled in with the parameters from the text content. In one or more embodiments the name entity may be a tokenized information unit that may be filled in with a parameter that is used to perform the action. For example a file format for the www.driving directions.org webpage may include a name entity for a starting physical address and a name entity for an end physical address. The name entity starting physical location may be a tokenized information unit that when filled in with a physical address is used to perform the action e.g. to generate driving directions. In this way the map service may populate the name entities with the content from the text and pass the content as a set of parameters that may be used to perform the action. Although the file format and name entities may be specific to a particular webpage since a data driven approach is employed webpages may be added and changed without writing code for the webpage.

In one or more embodiments subservices may be added or changed as part of configuring the map service . For example the service manager may be used to pick which subservices webpages the map service can use. Thus when a physical address is recognized the map service may access the webpage www.driving directions.org to provide driving direction rather than using another driving direction webpage. As a result instead of accessing a webpage corresponding to the URL address the map service may specify which webpage of a plurality of webpages is to be accessed from the content itself. By configuring the map service to specify which webpage is to be accessed errors resulting from missing or changed addresses may be avoided and the text may not include a URL corresponding to the webpage being accessed.

Referring now to as illustrated an environment includes a computer having a customization webpage . The customization webpage may be configured and operate as a subservice webpage discussed with respect to . As illustrated the customization webpage is included in the computer . In other implementations customization webpage may be communicatively coupled to the computer via the network e.g. the Internet or a private network.

The customization webpage is representative of functionality to customize content actions and or results for interactions between the map service and one or more webpages in accordance with one or more criteria. For example the customization webpage may be used to specify one or more characteristics of a result of the action. For example the application may specify which criteria are to be applied by the customization web page to customize the action and or results from the action. For example the customization webpage may specify that the text is to be in German in response to receiving a German criteria from the application . Thus if the phone webpage uses the English language but the application is using a German language interface the map service may access the customization webpage to customize content and or the results of the action into the German language. As a result interactions with the map service and or text resulting from the action may be provided in German.

In one or more embodiments the criteria specified by the application may be included in the set of parameters. For example the application may specify that text data is to be provided in German when sending the text to the map service .

For example when the map service recognizes the action dial from a telephone number in a word processing document instead of inserting the text identifier dial the customization webpage may be accessed to translate the English word dial into the German version wh len. Continuing the previous example when the action includes the phone webpage providing caller ID information the customization webpage may be accessed to translate the content and or the action s results e.g. caller ID information into German.

Moreover by configuring the map service and or the customization webpage in this manner the application may avoid repeating text in multiple languages. Instead of inserting for example the text identifier dial wh len marcar quadrante the map service may form a communication that is used insert the text identifier wh len the German word for dial in the prompt used to trigger the dial action. The communication for example may be a callback to the application to inform the application to provide the prompt .

In one or more embodiments the application may designate a one or more criteria used to customize the content and or the results of the action. For example the application may issue an application program interface API call that designates that the content and or text results are to be provided in the German language.

In one or more embodiments the webpage that is to perform the action may provide a reference that corresponds to the action. For example when the action to be performed is to provide an object e.g. a national flag instead of providing the object the webpage that is originally to perform the action e.g. provide the national flag may provide a reference for the object e.g. object 12. In addition the webpage may indicate which resource is available to perform the action e.g. provide the object . An example of the foregoing is an encyclopedic webpage indicating that object 12 is available at www.flagsofthenations.org. In other instances the map service and or the customization webpage may designate which webpage is to perform the action e.g. provide object 12. In response to receiving the reference the map service may be configured to access the resource e.g. www.flagsofthenations.org that performs the action in a customized manner. Thus if object 12 references a flag and the criterion Japanese is provided the indicated webpage e.g. www.flagsofthenations.org may provide the Japanese flag. In contrast if the criterion That was provided the webpage www.flagsofthenations.org may provide the flag of Thailand.

In some implementations as part of accessing another webpage e.g. a web page that performs an action the map service may access the customization webpage to cause the customization web page to notify the webpage performing the action how to provide the results of the action and so on. When accessing a dictionary webpage for instance the map service may have the customization webpage notify the dictionary webpage which human language is to be used for text result of the action.

While translating has been discussed the customization webpage may be used to modify one or more characteristics of a result of the action e.g. settings configurations and so on. The map service for example may use the customization webpage to indicate how the action is to be performed when the action is to be performed how to provide results of the action and so on.

The components service modules functions and techniques discussed above may be implemented singly or in combination based on design preference. Generally any of the modules services and functions described herein can be implemented using software firmware hardware e.g. fixed logic circuitry manual processing or a combination of these implementations. The terms module functionality and logic as used herein generally represent software firmware hardware or a combination thereof. Additionally functions can be embodied as executable instructions that are included in one or more computer readable storage media.

The following discussion describes transformation procedures that may be implemented utilizing the previously described structures modules approaches and techniques. Aspects of the procedures may be implemented in hardware firmware software or a combination thereof. The procedures are shown as a set of blocks that specify operations performed by one or more devices and are not necessarily limited to the orders shown for performing the operations by the respective blocks. In portions of the following discussion reference will be made to the environment computer discussed with respect to .

An API call requesting one or more linguistic services based on a property of the linguistic services is issued block . In one or more embodiments the API call specifies which service properties the application wants to use. In other instances the API call may be a general request to interact with the linguistic services available through the platform .

Responsive to the API call the linguistic services that are available are designated block . For example the platform may designate the linguistic services that have a service property specified in the API call e.g. a spelling property are available to recognize linguistic property information associated with text data. The designation of the linguistic service based on one or more service properties may obscure the linguistic services from the application and vice versa . In the foregoing manner the application may not be specifically configured for the linguistic service . For example instead of designating the proofing service the platform may designate the proofing service based on a spelling property and a grammar property. In addition this approach may minimize the number of different APIs used by the application in comparison to issuing API calls for a linguistic service.

In some embodiments the platform may obtain the property of the linguistic service from the linguistic service in response to receiving the API call block . In other embodiments the platform may have the property of the linguistic service as the linguistic service may be a plugin to the platform .

In one or more embodiments the API call may indicate that the linguistic service is to output linguistic property information in a particular format. For example the application may request that linguistic property information is to be output in HTML format.

Once a session is initiated the text including text data may be communicated through the platform block . For example the platform may broker communication of text e.g. the email message block passing through the platform. The platform may for example direct communications between the application and or linguistic services . In some embodiments the platform may broker communications between linguistic services performing functions for the application . For example the grammar service and the language detection service may communicate through the platform .

Linguistic property information associated with text data in a text is recognized block . For example the communication service may recognize linguistic property information associated with text data within a range of text communicated from the application through the platform .

Upon recognizing linguistic property information associated with text data the linguistic property information may be communicated to the application block . For example the linguistic service may populate the memory with the linguistic property information associated with text data. The text data information may be stored in the memory until the platform communicates block the linguistic property information to the application.

In one or more embodiments a callback may be formed block for communication to the application block . For example when the application is configured for a synchronic communication the linguistic service may form the callback to inform the application that recognition is complete.

In some embodiments when an action is associated with the text data the recognized linguistic property information may include an indication e.g. an actionID that the linguistic service may perform the action block . For example if an email address is recognized in a word processing document the communication service may indicate that the linguistic service can send an email message to the email address.

With the linguistic property information block the application may initiate the action block for performance by the service block . In the previous word processing document example the application may display a user interface that permits initiation of the action e.g. create an email message targeting the email address.

A recognition is performed to identify an action that can be performed from content in a text block . Thus when a telephone number is parsed from an email the recognized actions may include dialing the telephone number and or providing caller ID information using the telephone number. In the previous example a webpage configured to perform phone functions may be capable of using the telephone number to obtain the caller ID information and or to dial the telephone number.

In some implementations a communication may be formed that is usable to inject an identifier in the text to trigger the action block . For example upon recognizing that a telephone number can be dialed the text identifier Dial may be inserted into visual display of the text. Thus the telephone number may be dialed by clicking on the text identifier Dial in a visual representation of the text. In some implementations this communication is a callback to the application providing the text.

When content that is to be used to perform the action is missing or not supplied a request for additional content may be made block . For example when driving directions are to be provided but an end physical address is not in the content a request may be made to provide the missing data e.g. the end physical address. In some implementations a callback to the application is used to request additional content in order to perform the action.

The content may be used to populate a file format block . A file format may include one or more name entities that are filled in with content that corresponds to the name entity. For example when a file name entity is included in the file format the file name entity may be filled with the name of the file providing the text e.g. report. In this way the content may be passed as a set of parameters that can be used to perform the action.

A webpage may be accessed to pass the content that is to be used to perform the action block . For example a web browser may be invoked to open the webpage that is to perform the action. By applying a data type approach e.g. passing content in the file format webpage specific issues and issues associated with using a URL may be avoided. In addition by implementing a data driven approach an application can add or change actions without changing the application.

With the webpage accessed the map service may pass the content to the webpage block . For example the file format that includes the content is passed via the web browser to the webpage. The action may be performed by the webpage block and results of the action are provided for use by the application. For example when the action is to perform a mortgage calculation the result of the mortgage calculation may be communicated such as via the map service and the platform to the application that presents a monthly payment.

A recognition is performed to identify an action from content that is usable to perform the action block . For example a dial action is recognized for a telephone number parsed from an email message.

When customization of the content is to be employed a customization webpage may be accessed and the content may be customized according to one or more criteria specified for the action block . For example a customization webpage may include a criterion that specifies that upon recognition that a telephone number can be dialed a telephone icon and the word wh len are to be provided in a visual display of the text. In some instances the criteria are specified by the application. For example the criteria may be included with the set of parameters and so on. Thus the content and or actions may be customized as specified by the application and or in accordance with a user s personal preferences.

In some implementations the application providing the text may designate a criterion that is to be applied. For example when an application is using a German language interface the application may designate that the content and or the results of the actions are to be provided in German. In some instances the application may provide the criteria with text.

When a customized identifier of the action is to be provided a communication may be formed that is usable to insert the customized identifier in the text block . For example a callback to the application may be used to so that the application presents a popup with a telephone icon and the word wh len. 

The customized content may be used to populate a file format block . For example the file format may include one or more name entities that are filled in with the customized content that corresponds to the name entity. In other instances the text content may be passed without customization.

A webpage that is to perform the action may be accessed block and the customized content may be passed to the webpage block .

In some implementations a notification may be provided to inform the webpage that is to perform the action of one or more of the criterion. For example the customization webpage may notify the webpage that is to perform the action that included text is to be provided in German.

The action may be performed by the webpage block and a customization may be performed for the action and or the results of the action block . For example as part of providing the results of the action the customization web page may be accessed and the text result of the action may be translated into German in accordance with a criterion as specified by the application. In some instances the customization may be dynamically performed as data becomes available from the web page performing the action. For example the customization web page may translate the text in accordance with the criteria specified by the application as the text becomes available from the web page performing the action.

While translation has been discussed with respect to customizing it is to be appreciated that customization may include but is not limited to designating a font size designating a display size designating a layout customizing settings configurations and so on.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

