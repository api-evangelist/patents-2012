---

title: Graphically displaying a file system
abstract: The contents of a computer file system are displayed on a graphical user interface. File system metadata descriptive of the computer file system and file metadata descriptive of each of a plurality of files are gathered. A file selection is received indicating a file accessed by the user. A user context is determined by the file metadata. The files are clustered using the file system metadata, a set of file metadata, and the user context. The set of file clusters are mapped onto a visualization model and graphically displayed on the graphical user interface using the visualization model.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08423553&OS=08423553&RS=08423553
owner: International Business Machines Corporation
number: 08423553
owner_city: Armonk
owner_country: US
publication_date: 20120309
---
The present application is a continuation of U.S. patent application Ser. No. 12 910 259 filed on Oct. 22 2010 and entitled Graphically Displaying a File System which is incorporated herein by reference.

The invention relates to computer file systems and in particular to the display of computer file systems using a visualization model.

Computer file systems are typically arranged as hierarchical folder structures. Users manage the data and files in the file system by creating and managing folders and files. Information and files can be organized into a folder hierarchy by sorting them into folders and sub folders.

This method of sorting data works well for a small number of files. As the number of files increases it can become increasingly difficult to locate files which contain important information. Additionally if the projects that a user is working on changes the arrangement of files in the folder hierarchy may not be optimal. For example a particular file may contain information relevant to several different projects or tasks which a user may need to complete. Placing files into a folder hierarchy may not provide the flexibility needed for optimal productivity by a user.

According to one embodiment of the present invention a method graphically displays content of a computer file system on a graphical user interface. File system metadata is gathered using a processor wherein the file system metadata is descriptive of the computer file system and the computer file system comprises a plurality of files. A set of file metadata is gathered using the processor wherein the file metadata is descriptive of each of the plurality of files.

A file selection is received from a user wherein the file selection indicates a file accessed by the user. A user context is determined using the processor wherein the user context is determined by the file metadata of the file. The plurality of files are clustered into file clusters using the file system metadata the set of file metadata and the user context. The set of file clusters is mapped with the processor onto a visualization model. The contents of the computer file system are graphically displayed on the graphical user interface using the visualization model.

According to one embodiment of the present invention a computer program product graphically displays contents of a computer file system on a graphical user interface. The computer program product comprises a computer readable storage medium having computer readable program code embodied therewith. Computer readable program code is configured to gather file system metadata wherein the file system metadata is descriptive of the computer file system and wherein the computer file system comprises a plurality of files. Computer readable program code is configured to gather a set of file metadata wherein the file metadata is descriptive of each of the plurality of files. Computer readable program code is configured to receive a file selection from a user wherein the file selection indicates a file accessed by the user. Computer readable program code is configured to determine a user context wherein the user context is determined by the file metadata of the file. Computer readable program code is configured to cluster the plurality of files into file clusters using the file system metadata the set of file metadata and the user context. Computer readable program code is configured to map the set of file clusters onto a visualization model. Computer readable program code is configured to graphically display the contents of the computer file system on the graphical user interface using the visualization model.

According to one embodiment of the present invention a computer system displays contents of a computer file system on a graphical user interface. A processor is programmed to gather file system metadata wherein the file system metadata is descriptive of the computer file system and wherein the computer file system comprises a plurality of files. The processor is programmed to gather a set of file metadata wherein the file metadata is descriptive of each of the plurality of files. The processor is programmed to receive a file selection from a user wherein the file selection indicates a file accessed by the user. The processor is programmed to determine a user context wherein the user context is determined by the file metadata of the file. The processor is programmed to cluster the plurality of files into file clusters using the file system metadata the set of file metadata and the user context. The processor is programmed to map the set of file clusters onto a visualization model. The processor is programmed to graphically display the contents of the computer file system on the graphical user interface using the visualization model.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

In the following like numbered elements in these figures are either similar elements or perform an equivalent function. Elements which have been discussed previously will not necessarily be discussed in later figures if the function is equivalent.

For example information about when files are accessed could be recorded and used to calculate a correlation between files to indicate a relevance or connection between the files. In step a file selection is received from the user. A file selection occurs when a user selects a file to open or when a file is selected through an application program. In step a user context is determined. The user context is descriptive of the current use or tasks that a user is performing while using the computer or computer system.

A user context can be determined in several different ways. For example the file selected by the user has certain metadata that may be associated with it and that can be used to determine the user context. A user profile may also be used to determine or partially determine a user context. The user profile may contain information about the user or a historical record determined from past use of files applications or a computer. The user context may also be determined or partially determined by an application program in use by the user. In step the plurality of files which are contained in the file system and are described by the set of file metadata are gathered into file clusters. This would be performed by a clustering algorithm. In step the file clusters and any relationships between the file clusters which have been identified are mapped onto a visualization model. Then finally in step the visualization model is graphically displayed on a graphical user interface.

Within the graphical user interface there is a graphical representation of a file system . In this example there is a file cluster which has a dropdown box associated with it. With the dropdown box a user is able to select an element from a set of similarities . The computational appliance comprises a hardware interface and a user interface . The hardware interface is adapted for connecting the computational appliance to a display apparatus .

In some computational appliances such as a laptop or a cellular telephone the display apparatus is integrated into a single unit with the computational appliance . In other examples of a computational appliance the display apparatus may be separate from the computational appliance for instance if the computational appliance is a computer the display apparatus may be a separate computer screen. The user interface allows an operator to interact with the computational appliance . In some instances the user interface may be a separate device such as a computer mouse or keyboard. In other instances the user interface may be integrated into the display apparatus . For instance the display apparatus may comprise a touch screen or a light sensitive pen for the user to interact with the graphical user interface .

The computational appliance also comprises a central processing unit CPU . The CPU is adapted for executing machine executable instructions. The CPU is connected to the hardware interface and the user interface . The computational appliance also has storage . This may be physical storage such as a floppy or hard drive but it may also be stored in the form of computer memory such as flash or random access memory. The computer storage has a file system . Within the file system are located files and . These represent files. Also located within the file system is a database . The database may be used to store data used by a computer program product for implementing an embodiment of the invention.

The use of a database is beneficial because file system metadata and a set of file metadata do not need to be gathered each time the computer system is used. The file system may also contain a profile of the user. The computational appliance also comprises computer memory which is accessible by the CPU . The memory may represent memory that is physically separate from the CPU or it may also be memory which is located as part of the CPU . The computer memory is adapted for storing a computer program product according to an embodiment of the invention. In this embodiment the computer program product comprises a clustering module for clustering the plurality of files.

The computer program product also comprises a visualization module . The visualization module is adapted for mapping the set of file clusters onto a visualization model. The computer program product may also comprise a text analytic component or module . The text analytic component or module is adapted for examining files such as file and file to obtain file metadata from text comprising a file. The computer program product may also comprise a programming interface hook which will be subsequently explained in greater detail. The memory may also comprise an operating system a set of file metadata and file system metadata .

The computer memory may also hold a file system programming interface . The file system programming interface allows the operating system or application programs to manipulate files in the file system or also to display file system information on the graphical user interface . The programming interface hook is computer executable code used to replace a portion of the functionality of the file system programming interface . Many computer operating systems and file systems use object oriented or functions which can be referenced by a pointer to call functions. By overloading a function or by replacing its pointer an alternative function or set of code can be used to replace the original code. In this way the programming interface hook can be reused to replace some or all of the functionality of the file system programming interface . In this way the computer program product can use the programming interface hook to replace a normal hierarchical display of a file system with a graphical representation of a file system.

The planets may also be optionally located on orbits . The orbits may be used to connect planets and may be labeled or use symbols to indicate common elements or context between the planets and . Line indicates the distance between the center and planet . The distance may be taken as a measure of the relevance of a particular file cluster to a particular user context. In addition to using orbital lines to show connections between planets and the distance between planets may also indicate a relationship therebetween. This may be an absolute distance or it may also be an angular distance. The line indicates a distance along an arc between planet and . An angular measure a distance along an arc or an absolute distance between planets or the planet centers may indicate a relationship between file clusters.

An application may go through the file system or crawl through it and pick up relevant files such as documents textual content source code and other files. It may extract information such as metadata and attributes of the file such as the title the keywords author access dates and times and links within the file. The crawled and analyzed data may also involve indexing and storing this metadata in a search collection or a database. The data may be stored in a database or it may be simply stored in an index or in a file.

The corresponding structures materials acts and equivalents of all elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

Having thus described the invention of the present application in detail and by reference to embodiments thereof it will be apparent that modifications and variations are possible without departing from the scope of the invention defined in the appended claims.

