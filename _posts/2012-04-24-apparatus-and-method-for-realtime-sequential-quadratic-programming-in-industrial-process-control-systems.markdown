---

title: Apparatus and method for real-time sequential quadratic programming in industrial process control systems
abstract: A method includes identifying a nonlinear model used by an optimizer to perform optimization operations associated with an industrial process to be controlled. The method also includes generating a Hessian matrix associated with the nonlinear model. The method further includes providing the Hessian matrix to an advanced process controller that uses the Hessian matrix to perform both process control and optimization operations. The Hessian matrix can approximate a nonlinear objective function. The method can also include providing one or more approximated nonlinear constraints, a solution of a quadratic sub-problem that approximates the nonlinear model, or a combination of multiple solutions of the quadratic sub-problem to the advanced process controller. The Hessian matrix can be updated and provided to the advanced process controller during each of multiple iterations. During each iteration, the industrial process can be adjusted to move an operating point of the industrial process towards an optimal ending position.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09122261&OS=09122261&RS=09122261
owner: Honeywell International Inc.
number: 09122261
owner_city: Morristown
owner_country: US
publication_date: 20120424
---
This disclosure relates generally to industrial process control systems. More specifically this disclosure relates to an apparatus and method for real time sequential quadratic programming in industrial process control systems.

Processing facilities are often managed using process control systems. Example processing facilities include manufacturing plants chemical plants crude oil refineries and ore processing plants. Among other operations process control systems typically manage the use of motors valves pumps and other actuators or industrial equipment in the processing facilities.

Many industrial process control systems include multiple hierarchical layers that perform different functions. For example lower layers could include devices that perform advanced process control APC and optimization operations while higher layers could include devices that perform planning and or scheduling operations. Unfortunately different hierarchical layers often include different types of models and use different constraints on an industrial process. It is therefore often not easy and sometimes extremely difficult to keep models and constraints consistent between different layers of an industrial process control system. Inconsistent models or constraints can often prevent an optimal control solution from being implemented in a processing facility. This can have various disadvantages including monetary losses.

This disclosure provides an apparatus and method for real time sequential quadratic programming in industrial process control systems.

In a first embodiment a method includes identifying a nonlinear model used by an optimizer to perform optimization operations associated with an industrial process to be controlled. The method also includes generating a Hessian matrix associated with the nonlinear model. The method further includes providing the Hessian matrix to an advanced process controller that uses the Hessian matrix to perform both process control and optimization operations.

In a second embodiment an apparatus includes at least one memory configured to store a nonlinear model used by an optimizer to perform optimization operations associated with an industrial process to be controlled. The apparatus also includes at least one processing device configured to generate a Hessian matrix associated with the nonlinear model and provide the Hessian matrix to an advanced process controller that uses the Hessian matrix to perform both process control and optimization operations.

In a third embodiment a computer readable medium embodies a computer program. The computer program includes computer readable program code for identifying a nonlinear model used by an optimizer to perform optimization operations associated with an industrial process to be controlled. The computer program also includes computer readable program code for generating a Hessian matrix associated with the nonlinear model. The computer program further includes computer readable program code for providing the Hessian matrix to an advanced process controller that uses the Hessian matrix to perform both process control and optimization operations.

Other technical features may be readily apparent to one skilled in the art from the following figures descriptions and claims.

In the process control system is implemented using the Purdue model of process control. In the Purdue model Level 0 may include one or more sensors and one or more actuators . The sensors and actuators represent components in a process system that may perform any of a wide variety of functions. For example the sensors could measure a wide variety of characteristics in the process system such as temperature pressure or flow rate. Also the actuators such as heaters motors or valves could alter a wide variety of characteristics in the process system. The sensors and actuators could represent any other or additional components in any suitable process system. Each of the sensors includes any suitable structure for measuring one or more characteristics in a process system. Each of the actuators includes any suitable structure for operating on or affecting one or more conditions in a process system.

At least one network is coupled to the sensors and actuators . The network facilitates interaction with the sensors and actuators . For example the network could transport measurement data from the sensors and provide control signals to the actuators . The network could represent any suitable network or combination of networks. As particular examples the network could represent an Ethernet network an electrical signal network such as a HART or FOUNDATION FIELDBUS network a pneumatic control signal network or any other or additional type s of network s .

In the Purdue model Level 1 may include one or more controllers which are coupled to the network . Among other things each controller may use the measurements from one or more sensors to control the operation of one or more actuators . For example a controller could receive measurement data from one or more sensors and use the measurement data to generate control signals for one or more actuators . Each controller includes any suitable structure for interacting with one or more sensors and controlling one or more actuators . Each controller could for example represent a multivariable controller such as a Robust Multivariable Predictive Control Technology RMPCT controller or other type of controller implementing model predictive control MPC or other advanced predictive control APC . As a particular example each controller could represent a computing device running a MICROSOFT WINDOWS operating system.

Two networks are coupled to the controllers . The networks facilitate interaction with the controllers such as by transporting data to and from the controllers . The networks could represent any suitable networks or combination of networks. As particular examples the networks could represent a pair of Ethernet networks or a redundant pair of Ethernet networks such as a FAULT TOLERANT ETHERNET FTE network from HONEYWELL INTERNATIONAL INC.

At least one switch firewall couples the networks to two networks . The switch firewall may transport traffic from one network to another. The switch firewall may also block traffic on one network from reaching another network. The switch firewall includes any suitable structure for providing communication between networks such as a HONEYWELL CONTROL FIREWALL CF9 device. The networks could represent any suitable networks such as a pair of Ethernet networks or an FTE network.

In the Purdue model Level 2 may include one or more machine level controllers coupled to the networks . The machine level controllers perform various functions to support the operation and control of the controllers sensors and actuators which could be associated with a particular piece of industrial equipment such as a boiler or other machine . For example the machine level controllers could log information collected or generated by the controllers such as measurement data from the sensors or control signals for the actuators . The machine level controllers could also execute applications that control the operation of the controllers thereby controlling the operation of the actuators . In addition the machine level controllers could provide secure access to the controllers . Each of the machine level controllers includes any suitable structure for providing access to control of or operations related to a machine or other individual piece of equipment. Each of the machine level controllers could for example represent a server computing device running a MICROSOFT WINDOWS operating system. Although not shown different machine level controllers could be used to control different pieces of equipment in a process system where each piece of equipment is associated with one or more controllers sensors and actuators .

One or more operator stations are coupled to the networks . The operator stations represent computing or communication devices providing user access to the machine level controllers which could then provide user access to the controllers and possibly the sensors and actuators . As particular examples the operator stations could allow users to review the operational history of the sensors and actuators using information collected by the controllers and or the machine level controllers . The operator stations could also allow the users to adjust the operation of the sensors actuators controllers or machine level controllers . In addition the operator stations could receive and display warnings alerts or other messages or displays generated by the controllers or the machine level controllers . Each of the operator stations includes any suitable structure for supporting user access and control of one or more components in the system . Each of the operator stations could for example represent a computing device running a MICROSOFT WINDOWS operating system.

At least one router firewall couples the networks to two networks . The router firewall includes any suitable structure for providing communication between networks such as a secure router or combination router firewall. The networks could represent any suitable networks such as a pair of Ethernet networks or an FTE network.

In the Purdue model Level 3 may include one or more unit level controllers coupled to the networks . Each unit level controller is typically associated with a unit in a process system which represents a collection of different machines operating together to implement at least part of a process. The unit level controllers perform various functions to support the operation and control of components in the lower levels. For example the unit level controllers could log information collected or generated by the components in the lower levels execute applications that control the components in the lower levels and provide secure access to the components in the lower levels. Each of the unit level controllers includes any suitable structure for providing access to control of or operations related to one or more machines or other pieces of equipment in a process unit. Each of the unit level controllers could for example represent a server computing device running a MICROSOFT WINDOWS operating system. Although not shown different unit level controllers could be used to control different units in a process system where each unit is associated with one or more machine level controllers controllers sensors and actuators .

Access to the unit level controllers may be provided by one or more operator stations . Each of the operator stations includes any suitable structure for supporting user access and control of one or more components in the system . Each of the operator stations could for example represent a computing device running a MICROSOFT WINDOWS operating system.

At least one router firewall couples the networks to two networks . The router firewall includes any suitable structure for providing communication between networks such as a secure router or combination router firewall. The networks could represent any suitable networks such as a pair of Ethernet networks or an FTE network.

In the Purdue model Level 4 may include one or more plant level controllers coupled to the networks . Each plant level controller is typically associated with one of the plants which may include one or more process units that implement the same similar or different processes. The plant level controllers perform various functions to support the operation and control of components in the lower levels. As particular examples the plant level controller could execute one or more manufacturing execution system MES applications scheduling applications or other or additional plant or process control applications. Each of the plant level controllers includes any suitable structure for providing access to control of or operations related to one or more process units in a process plant. Each of the plant level controllers could for example represent a server computing device running a MICROSOFT WINDOWS operating system.

Access to the plant level controllers may be provided by one or more operator stations . Each of the operator stations includes any suitable structure for supporting user access and control of one or more components in the system . Each of the operator stations could for example represent a computing device running a MICROSOFT WINDOWS operating system.

At least one router firewall couples the networks to one or more networks . The router firewall includes any suitable structure for providing communication between networks such as a secure router or combination router firewall. The network could represent any suitable network such as an enterprise wide Ethernet or other network or all or a portion of a larger network such as the Internet .

In the Purdue model Level 5 may include one or more enterprise level controllers coupled to the network . Each enterprise level controller is typically able to perform planning operations for multiple plants and to control various aspects of the plants . The enterprise level controllers can also perform various functions to support the operation and control of components in the plants . As particular examples the enterprise level controller could execute one or more order processing applications enterprise resource planning ERP applications advanced planning and scheduling APS applications or any other or additional enterprise control applications. Each of the enterprise level controllers includes any suitable structure for providing access to control of or operations related to the control of one or more plants. Each of the enterprise level controllers could for example represent a server computing device running a MICROSOFT WINDOWS operating system. In this document the term enterprise refers to an organization having one or more plants or other processing facilities to be managed. Note that if a single plant is to be managed the functionality of the enterprise level controller could be incorporated into the plant level controller .

Access to the enterprise level controllers may be provided by one or more operator stations . Each of the operator stations includes any suitable structure for supporting user access and control of one or more components in the system . Each of the operator stations could for example represent a computing device running a MICROSOFT WINDOWS operating system.

A historian is also coupled to the network in this example. The historian could represent a component that stores various information about the process control system . The historian could for example store information used during production scheduling and optimization. The historian represents any suitable structure for storing and facilitating retrieval of information. Although shown as a single centralized component coupled to the network the historian could be located elsewhere in the system or multiple historians could be distributed in different locations in the system .

In particular embodiments the various controllers and operator stations in may represent computing devices. For example each of the controllers could include one or more processing devices and one or more memories for storing instructions and data used generated or collected by the processing device s . Each of the controllers could also include at least one network interface such as one or more Ethernet interfaces. Also each of the operator stations could include one or more processing devices and one or more memories for storing instructions and data used generated or collected by the processing device s . Each of the operator stations could also include at least one network interface such as one or more Ethernet interfaces.

As described above different components in the process control system may use different types of models or constraints for controlling an industrial process. For example controllers that implement MPC or other APC techniques in lower levels could use linear dynamic models with constraints defined on controlled variables variables whose values are typically controlled to be within specified ranges of values or at or near specific values . Controllers that perform real time optimization RTO operations in lower levels could use nonlinear steady state models with constraints defined within the models.

These different models and constraints raise various technical challenges in multi unit or plant wide dynamic optimization. For example it is often difficult to estimate the current feasible region for optimization meaning it is difficult to identify how much different process variables can be moved during optimization without violating any new or existing constraints dynamically. Also it is often difficult to handle non convexity in an objective function or the constraints. Further transient and not so transient infeasibilities can arise which can cause a feasible steady state optimization solution to be dynamically infeasible to lower level controllers.

In one aspect of operation at least one component of the system implements or otherwise provides an integration bridge . The integration bridge allows both control and optimization operations to occur within at least one MPC or other APC controller such as controllers . The integration bridge can be implemented in one or more components of the process control system . For example the integration bridge could be implemented on any of the controllers or any of the operator stations . In general the integration bridge could be implemented on any server real time workstation application or execution platform distributed control system DCS real time controller or other suitable device or system.

Additional details regarding the integration bridge are provided below. The integration bridge includes any suitable structure supporting the integration of optimization operations into process controllers. The integration bridge could for example represent a computing device having at least one processor at least one memory and at least one network interface note that the processor memory and network interface could be the same components in an operator station or controller or different components . The integration bridge could also represent a stand alone component or a component integrated into another component such as into a computer.

Although illustrates one example of an industrial process control system various changes may be made to . For example a control system could include any number of sensors actuators controllers servers operator stations networks and integration bridges. Also the makeup and arrangement of the process control system in is for illustration only. Components could be added omitted combined or placed in any other suitable configuration according to particular needs. Further particular functions have been described as being performed by particular components of the system . This is for illustration only. In general process control systems are highly configurable and can be configured in any suitable manner according to particular needs. In addition illustrates an example environment in which an integration bridge can be used. This functionality can be used in any other suitable device or system.

Each controller includes any suitable structure for controlling a process or portion thereof. For example each controller could represent an RMPCT controller or other MPC or APC controller. The RMPCT control technology is described in the following U.S. patents which are hereby incorporated by reference U.S. Pat. No. 5 351 184 U.S. Pat. No. 5 561 599 U.S. Pat. No. 5 572 420 U.S. Pat. No. 5 574 638 and U.S. Pat. No. 5 758 047. The controllers could for example represent the controllers or in .

The dynamic optimizer includes any suitable structure supporting local dynamic optimization of process controllers. The dynamic optimizer could for example implement the technology described in the following U.S. patents which are hereby incorporated by reference U.S. Pat. No. 6 055 483 and U.S. Pat. No. 6 122 555. The dynamic optimizer could for example represent the controllers or in .

In the integration bridge communicates with the APC controllers and with the optimizer . The integration bridge also has access to at least one nonlinear model . The nonlinear model represents any suitable steady state nonlinear model usable by an outside optimizer which may employ forms such as 

Among other things if an outside optimizer not depicted in is used it typically performs optimization operations and then provides optimized process variable setpoints to the controllers bypassing the integration bridge . However because of different models or constraints used in the multi layer system it is possible that process variable setpoints provided to the APC controllers are infeasible. This means that the APC controllers are unable to satisfy the process variable setpoints given their own models or process variable constraints.

The integration bridge helps to alleviate this type of problem. In general rather than merely providing setpoints from an outside optimizer to an APC controller the integration bridge provides information that allows at least one MPC or other APC controller such as one or more of the controllers to perform both control and the equivalent optimization. For example the integration bridge can provide to an APC controller information defining an essential or other portion s of the model . The portion of the model that is provided to the APC controller captures the nonlinearity of the controlled process and how that process should be optimized.

In some embodiments the information provided by the integration bridge to an APC controller can include a quadratic approximation of one or more nonlinear constraints from the model . The information provided by the integration bridge to the APC controller can also include an approximation of a nonlinear objective function used by the optimizer. The approximation of the objective function could be provided in the form of a Hessian matrix.

An APC controller uses this information while performing its control operations. This allows the APC controller to generate control solutions that are feasible since the APC controller can consider both a nonlinear objective function and optimization constraints. In particular embodiments each APC controller can support frequency zero quadratic programming QP operations. Moreover optimization solution collars a default option in DQP optimizers can be used to resolve dynamic conflicts between optimizers and APC controllers thereby helping to manage any transient infeasibilities. In addition a Quasi Newton method can be employed with Hessian and constraint updates from the integration bridge to lower level components to achieve real time sequential quadratic programming SQP optimization for multi unit or plant wide optimization.

Although illustrates one example of the integration of different industrial process control layers various changes may be made to . For example the integration bridge could operate in conjunction with any number of optimizers and any number of controllers.

A nonlinear optimization model is approximated with a quadratic sub problem at step . This could include for example the integration bridge using a quasi Newton method to approximate the steady state nonlinear optimization model . Example quasi Newton methods are described below. Optimization only constraints are provided to an optimizer at step . This could include for example the integration bridge providing the constraints needed by a DQP optimizer to that optimizer. The provided constraints could represent all or a subset of the constraints.

The quadratic sub problem is solved in an online manner at step and a step is taken towards the quadratic sub problem s optimal solution at step . This could include for example the integration bridge solving the quadratic sub problem while honoring all control and optimization constraints. This could also include the integration bridge passing various information to an APC controller which uses the information to calculate a controller move a change to at least one variable . The information could include a Hessian matrix or an update to a Hessian matrix. The information could also include constraints associated with the nonlinear model or an optimization solution calculated by a DQP optimizer. Various options available in step are described below.

Feedback is used to compensate for model error at step . This could include for example the one or more APC controllers identifying the process variable s actual value and comparing it to a prior predicted value. This could also include the one or more APC controllers correcting any dynamic model prediction errors such as in one or more models used by the one or more APC controllers for bias. This could further include the integration bridge correcting any steady state models such as one or more models used by one or more DQP optimizers for bias or re estimating parameters for those models. The process can then be repeated during another iteration of the method .

As shown in a method is used to pass values associated with a nonlinear model to an optimizer or controller. Values associated with a nonlinear model are identified at step . This could include for example the integration bridge identifying an input value x an output value y a Jacobian matrix J and constraint values h and g associated with the nonlinear model . These values can be tracked by the integration bridge over time.

A Hessian matrix B is estimated at step . This could include for example the integration bridge estimating the Hessian matrix of a Lagrangian Function of the system being controlled. The Lagrangian Function models the dynamic behavior of the system. The estimated Hessian matrix could be determined in any suitable manner such as by using a Quasi Newton approximation or a reduced Quasi Newton approximation. The Lagrangian Function may or may not be augmented.

Any remaining constraints are converted if necessary at step . This could include for example the integration bridge converting constraints h g or other values into suitable form. As a particular example this could include the integration bridge converting any nonlinear constraints into estimated approximations of those constraints.

Various information is provided to an optimizer and a controller at step . This could include for example the integration bridge providing the Hessian matrix B the Jacobian matrix J and the converted constraints to at least one APC controller. The same information or different information could be provided to the DQP optimizer.

In this way the integration bridge is able to inform an APC controller of optimization nonlinearities and the APC controller can use this information during control calculations. This approach can provide various benefits depending on the implementation. For example this approach can solve the three problems noted above namely 

Various quasi Newton methods are known for approximating a nonlinear system with a quadratic sub problem. Some quasi Newton methods can be expressed as follows 

As noted above there are also different options for providing information to an optimizer and controller in step of . For example a first option could include providing a Hessian matrix or an update to a Hessian matrix along with additional constraints from the nonlinear model . The Hessian matrix provides an approximation of a local objective function. The additional constraints can be used to provide a trust region mechanism to improve robustness and to transfer modeling information constraints to a real time control optimization scheme.

A second option could include providing a Hessian matrix or an update to a Hessian matrix along with the actual optimization solution from an outside optimizer when that solution is available. The Hessian matrix provides an approximation of a local short term objective function such as on a minute to minute basis. The outside optimization solution can be obtained when steady state of the processes is established and can be used to provide directional guidance in how to modify the solution path to a final optimal position.

A third option could calculate the optimal solution to be implemented as a combination of the SQP solution calculated by the integration bridge and the steady state or offline optimization solution calculated by an outside optimizer. For example the integration bridge could identify a conjugate vector of the SQP solution calculated by the integration bridge and the steady state or offline optimization solution calculated by an outside optimizer. Conjugate weights can be used as a parameter to provide vision tuning to the process.

These different options could be used in different circumstances. For example when the current control solution is close to an optimal solution the first option could be selected. If the current control solution is far away from an optimal solution the second option could be selected. The third option could be used if it is unclear whether the SQP solution from the integration bridge or the optimization solution from the outside optimizer is correct. As another example when performing continuous optimization the first option may be preferred. When starting a process such as during a cold start the second or third option could be selected depending on whether the SQP solution and the optimization solution show solutions in different directions. In particular embodiments heuristics or other techniques could be used for automatically selecting one of the options.

Although illustrate examples of methods for real time sequential quadratic programming in an industrial process control system various changes could be made to . For example while shown as a series of steps various steps in each figure could overlap occur in parallel occur in a different order or occur multiple times.

As shown in these variables have associated high and low limits. For example lines are associated with the high and low limits of the CV variable and lines are associated with the high and low limits of the CV variable. Similarly lines are associated with the high and low limits of the MV variable and lines are associated with the high and low limits of the MV variable.

In this example a surface represents an approximation of the nonlinear system being controlled. The surface can be defined by the Hessian matrix and can be updated during each iteration of the method . The components of the control system generally function to adjust an operating point from a starting position to an optimal ending position . This is accomplished by moving the operating point to multiple intermediate points between the starting position and the ending position . The process of moving the operating point in sequence like this gives rise to the name sequential quadratic programming. Each intermediate point can be identified using the method of . That is in each iteration of the method the surface can be updated and a change to one or more manipulated variables can be identified to move the operating point towards the ending position .

As can be seen here there are virtually an unlimited number of possible paths that could be followed between the starting position and the ending position . The specific path taken could depend for example on which option is used during step . That is the specific path can depend on whether the APC controller receives 

However the path is calculated this approach helps to keep the control solution within a feasibility region defined by the various lines . That is the operating point moves into the feasibility region quickly and remains there even as the operating point changes over numerous iterations. This illustrates the benefits of performing both control and optimization operations within an APC controller.

As shown in time is divided into two periods at a time T 0. Period represents prior time for which actual process variable values are known and period represents future time for which process variable values are predicted.

In a feasibility region resides within various lines associated with high and low limits of variables CV CV MV and MV. Note that these limits are different from those shown in . Within the feasibility region a prediction is made at five mean time constants in the future at five tau . Using this prediction an estimate 608 can be made identifying the potential room between the predicted process variable value and a high limit.

Note that in the system being controlled is not in steady state since a process variable is oscillating around a setpoint. However the system can still make predictions about future process variable values and use those predictions during optimization operations.

Although illustrate one example use of real time sequential quadratic programming in an industrial process control system various changes may be made to . For example the graphical representation shown in is for illustration only and can have any other suitable shape depending on the nonlinearity of the system being controlled. Also the graphical representation shown in is for illustration only and other control moves could be used to change the operating point of a process. In addition illustrates one example of identifying potential room for optimization for a specific set of circumstances.

In some embodiments various functions described above are implemented or supported by a computer program that is formed from computer readable program code and that is embodied in a computer readable medium. The phrase computer readable program code includes any type of computer code including source code object code and executable code. The phrase computer readable medium includes any type of medium capable of being accessed by a computer such as read only memory ROM random access memory RAM a hard disk drive a compact disc CD a digital video disc DVD or any other type of memory.

It may be advantageous to set forth definitions of certain words and phrases used throughout this patent document. The term couple and its derivatives refer to any direct or indirect communication between two or more elements whether or not those elements are in physical contact with one another. The terms application and program refer to one or more computer programs software components sets of instructions procedures functions objects classes instances related data or a portion thereof adapted for implementation in a suitable computer code including source code object code or executable code . The terms receive and communicate as well as derivatives thereof encompass both direct and indirect communication. The terms include and comprise as well as derivatives thereof mean inclusion without limitation. The term or is inclusive meaning and or. The phrase associated with as well as derivatives thereof may mean to include be included within interconnect with contain be contained within connect to or with couple to or with be communicable with cooperate with interleave juxtapose be proximate to be bound to or with have have a property of have a relationship to or with or the like.

While this disclosure has described certain embodiments and generally associated methods alterations and permutations of these embodiments and methods will be apparent to those skilled in the art. Accordingly the above description of example embodiments does not define or constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure as defined by the following claims.

