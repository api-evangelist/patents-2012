---

title: Activities duplication via recorded video
abstract: A method, system, and computer program product for activities duplication via recorded video are provided in the illustrative embodiments. A playback is performed of a video with control and input data, which includes a recording of video data of a set of activities performed on a second computer, a recording of a set of control data corresponding to the set of activities, and a recording of a set of input data corresponding to the set of activities. Control data from the set of control data is applied to the computer. Applying the control data to the computer changes a state of a process in the computer. Input data from the set of input data is applied to the computer. Applying the input data provides an attribute of the input data to the process in the computer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09088767&OS=09088767&RS=09088767
owner: International Business Machines Corporation
number: 09088767
owner_city: Armonk
owner_country: US
publication_date: 20121008
---
The present invention relates generally to a method system and computer program product for communicating activities performed on a data processing system. More particularly the present invention relates to a method system and computer program product for activities duplication via recorded video.

Video capture technology enables the recording of activities performed on a data processing system and subsequent playback of such recording at a future time. Presently available video capture applications perform continuous recording of computer operations e.g. recording a particular region of the desktop display or recording the graphical user interface GUI of a particular application. The presently available video capture applications digitally store the recordings as compressed video in any of the several common formats such as MPEG AVI or 3GP. The digital recordings are then sharable with other users or systems.

Presently available video formats allow for additional metadata. Presently such metadata is used for storing information such as a location of the video capture a time of the video capture the specifications of the hardware device used to perform the video capture and other such informative data.

Recorded video of activities performed on a data processing system is useful in many ways. For example a video recording of steps of installing a software product can be useful to those who may be new to installing the software. As another example providing help in troubleshooting a problem applying a software patch and providing training on new applications or systems also benefit from video recording of activities that may be performed on a sample data processing system.

The illustrative embodiments provide a method system and computer program product for activities duplication via recorded video. In at least one embodiment a method for activities duplication via recorded video is provided. The method includes a computer performing a playback of a video with control and input data the video with control and input data including a recording of video data of a set of activities performed on a second computer a recording of a set of control data corresponding to the set of activities and a recording of a set of input data corresponding to the set of activities. The method further includes the computer applying control data from the set of control data to the computer wherein the applying the control data to the computer changes a state of a process in the computer. The method further includes the computer applying input data from the set of input data to the computer wherein the applying the input data provides an attribute of the input data to the process in the computer.

In at least one embodiment a method for activities duplication via recorded video is provided. The method includes a computer creating a video with control and input data the video with control and input data including a recording of video data of a set of activities performed on a second computer a recording of a set of control data corresponding to the set of activities and a recording of a set of input data corresponding to the set of activities wherein applying control data from the set of control data when applied to a second computer changes a state of a process in the second computer and wherein applying input data from the set of input data to the second computer provides an attribute of the input data to the process in the second computer.

In at least one embodiment a computer program product for activities duplication via recorded video is provided. The computer program product includes one or more computer readable tangible storage devices. The computer program product further includes program instructions stored on at least one of the one or more storage devices to perform a playback of a video with control and input data the video with control and input data including a recording of a video data of a set of activities performed on a first computer a recording of a set of control data corresponding to the set of activities and a recording of a set of input data corresponding to the set of activities. The computer program product further includes program instructions stored on at least one of the one or more storage devices to apply control data from the set of control data to a second computer wherein applying the control data to the second computer changes a state of a process in the second computer. The computer program product further includes program instructions stored on at least one of the one or more storage devices to apply input data from the set of input data to the second computer wherein applying the input data to the second computer provides an attribute of the input data to the process in the second computer.

In at least one embodiment a computer system for activities duplication via recorded video. The computer system includes one or more processors one or more computer readable memories and one or more computer readable tangible storage devices. The computer system further includes program instructions stored on at least one of the one or more storage devices for execution by at least one of the one or more processors via at least one of the one or more memories to perform a playback of a video with control and input data the video with control and input data including a recording of video data of a set of activities performed on a first computer a recording of a set of control data corresponding to the set of activities and a recording of a set of input data corresponding to the set of activities. The computer system further includes program instructions stored on at least one of the one or more storage devices for execution by at least one of the one or more processors via at least one of the one or more memories to apply control data from the set of control data to the second computer wherein applying the control data to the second computer changes a state of a process in the second computer. The computer system further includes program instructions stored on at least one of the one or more storage devices for execution by at least one of the one or more processors via at least one of the one or more memories to apply input data from the set of input data to the second computer wherein applying the input data to the second computer provides an attribute of the input data to the process in the second computer.

The illustrative embodiments recognize that simply recording a video of the activities occurring on a data processing system is insufficient to duplicate the same activities on another data processing system in association with which the video may be played back later. Presently video capture technologies create a static continuous recording of a data processing system s operation but include neither the commands being performed nor the inputs being provided at that data processing system such that those commands or inputs can be extracted and reproduced at another data processing system.

For example when a user is recording interactions with a wizard style form interface no information related to the data they entered or the various actions they performed on the interface is saved. The captured video may be replayed the actions the user performed may be shown in the video but the actions the user performed are not available for extraction and reuse at another data processing system.

For example an installation video recorded using presently available technologies may depict a video footage of a sample display as the installation is performed on that sample data processing system. The video footage however does not provide the sequence of commands timing between commands or operations or background tasks in a manner that those same commands can be re executed in the same sequence and with similar timing and background operations at another data processing system when the video is played back.

As another example the illustrative embodiments recognize that if the video is provided as a part of an automation tool the video information itself is insufficient to actually automate the operations depicted therein. For example if a video recording shows that an application is launched on the system where the video was recorded playback of that video does not cause the same or similar application to be launched at another data processing system associated with the video playback.

Furthermore many applications accept inputs to perform their operations. Some examples of the inputs are text entered by a user in a form field a pointer movement a button click a menu selection or a gesture. Again the illustrative embodiments recognize that playback of a video might show that the inputs are being made or received at the application in the video but the playback of the video cannot itself cause the inputs to be duplicated or reproduced at another data processing system associated with the video playback.

The metadata presently available in video recordings is nothing more than information about the video and is not usable for performing an operation depicted in the video. Thus the illustrative embodiments recognize that presently methods do not exist to include control data and input data with a video recording in a manner that allows the control data and input data to be applied at another data processing system by playing the video.

The illustrative embodiments used to describe the invention generally address and solve the above described problems and other problems related to the limitations of presently available video recordings of activities on a data processing system. The illustrative embodiments provide a method system and computer program product for activities duplication via recorded video.

Control data is any data that identifies an operation enables an application to performs an operation enables an application to cause an operation to be performed or a combination thereof at a data processing system. Some examples of control data include but are not limited to data identifying a command to launch an application data identifying a method call to launch another instance of a GUI of an application data identifying an operation to open a tab in a browser data identifying an application programming interface API call to establish a communication link over a data network data identifying an instruction to send a code to a remote system and data identifying many other such operations to be performed with respect to an application or a component of a data processing system.

Input data is any data that is provided to an application or a component of a data processing system to further a certain function or operation performed by that application or component. Some examples of input data include but are not limited to keystroke input typed or pasted form field input pointer movement gestures button clicks menu selections physical movement of a component of a data processing system audio input redirection to data stored elsewhere and data in any other suitable form provided to an application or a component of a data processing system.

Control data and input data can each include a set of one or more attributes. For example some control data attributes of a command to launch an application are the application s executable filename file path and launch mode switches. As another example some control data attributes of an instruction to open a communication link with a website are the website s uniform resource locator URL and authentication credentials to access the website.

Similarly for example some input data attributes of a form field input are the text of the input the timing between the keystrokes and the dependency of the form field on the status of another form field. As another example some input data attributes of a pointer movement input are timing of the movements scale of the area where the movements occur a reference location in the area and an origin and destination of the movement relative to the reference.

The illustrative embodiments are described with respect to certain control data and input data only as examples. Such control data and input data or their example attributes are not intended to be limiting to the invention. For example an illustrative embodiment described with respect to an example application launch command control data and its corresponding example attributes can be implemented with respect to an API call control data and its corresponding attributes in a similar manner within the scope of the illustrative embodiments.

Furthermore the illustrative embodiments may be implemented with respect to any type of data data source or access to a data source over a data network. Any type of data storage device may provide the data to an embodiment of the invention either locally at a data processing system or over a data network within the scope of the invention.

The illustrative embodiments are described using specific code designs architectures protocols layouts schematics and tools only as examples and are not limiting to the illustrative embodiments. Furthermore the illustrative embodiments are described in some instances using particular software tools and data processing environments only as an example for the clarity of the description. The illustrative embodiments may be used in conjunction with other comparable or similarly purposed structures systems applications or architectures. An illustrative embodiment may be implemented in hardware software or a combination thereof.

The examples in this disclosure are used only for the clarity of the description and are not limiting to the illustrative embodiments. Additional data operations actions tasks activities and manipulations will be conceivable from this disclosure and the same are contemplated within the scope of the illustrative embodiments.

Any advantages listed herein are only examples and are not intended to be limiting to the illustrative embodiments. Additional or different advantages may be realized by specific illustrative embodiments. Furthermore a particular illustrative embodiment may have some all or none of the advantages listed above.

With reference to the figures and in particular with reference to these figures are example diagrams of data processing environments in which illustrative embodiments may be implemented. are only examples and are not intended to assert or imply any limitation with regard to the environments in which different embodiments may be implemented. A particular implementation may make many modifications to the depicted environments based on the following description.

In addition clients and couple to network . A data processing system such as server or or client or may contain data and may have software applications or software tools executing thereon.

Only as an example and without implying any limitation to such architecture depicts certain components that are usable in an example implementation of an embodiment. For example server may include video capture application . Video capture application may be for example an existing application capable of capturing video of activities on a data processing system and may be modified or configured to operate in conjunction with data recorder application to perform an operation according to an embodiment described herein. Data in storage may be the data of a video recording that includes control data and input data according to an embodiment. Client may include video playback application . Video playback application may be for example an existing application capable of playing back video of activities on a data processing system and may be modified or configured to operate in conjunction with data applicator application to perform an operation according to an embodiment described herein.

Servers and storage unit and clients and may couple to network using wired connections wireless communication protocols or other suitable data connectivity. Clients and may be for example personal computers or network computers.

In the depicted example server may provide data such as boot files operating system images and applications to clients and . Clients and may be clients to server in this example. Clients or some combination thereof may include their own data boot files operating system images and applications. Data processing environment may include additional servers clients and other devices that are not shown.

In the depicted example data processing environment may be the Internet. Network may represent a collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP and other protocols to communicate with one another. At the heart of the Internet is a backbone of data communication links between major nodes or host computers including thousands of commercial governmental educational and other computer systems that route data and messages. Of course data processing environment also may be implemented as a number of different types of networks such as for example an intranet a local area network LAN or a wide area network WAN . is intended as an example and not as an architectural limitation for the different illustrative embodiments.

Among other uses data processing environment may be used for implementing a client server environment in which the illustrative embodiments may be implemented. A client server environment enables software applications and data to be distributed across a network such that an application functions by using the interactivity between a client data processing system and a server data processing system. Data processing environment may also employ a service oriented architecture where interoperable software components distributed across a network may be packaged together as coherent business applications.

With reference to this figure depicts a block diagram of a data processing system in which illustrative embodiments may be implemented. Data processing system is an example of a computer such as server or client in or another type of device in which computer usable program code or instructions implementing the processes may be located for the illustrative embodiments.

In the depicted example data processing system employs a hub architecture including North Bridge and memory controller hub NB MCH and South Bridge and input output I O controller hub SB ICH . Processing unit main memory and graphics processor are coupled to North Bridge and memory controller hub NB MCH . Processing unit may contain one or more processors and may be implemented using one or more heterogeneous processor systems. Processing unit may be a multi core processor. Graphics processor may be coupled to NB MCH through an accelerated graphics port AGP in certain implementations.

In the depicted example local area network LAN adapter is coupled to South Bridge and I O controller hub SB ICH . Audio adapter keyboard and mouse adapter modem read only memory ROM universal serial bus USB and other ports and PCl PCIe devices are coupled to South Bridge and I O controller hub through bus . Hard disk drive HDD and CD ROM are coupled to South Bridge and I O controller hub through bus . PCI PCIe devices may include for example Ethernet adapters add in cards and PC cards for notebook computers. PCI uses a card bus controller while PCIe does not. ROM may be for example a flash binary input output system BIOS . Hard disk drive and CD ROM may use for example an integrated drive electronics IDE or serial advanced technology attachment SATA interface. A super I O SIO device may be coupled to South Bridge and I O controller hub SB ICH through bus .

Memories such as main memory ROM or flash memory not shown are some examples of computer usable storage devices. Hard disk drive CD ROM and other similarly usable devices are some examples of computer usable storage devices including computer usable storage medium.

An operating system runs on processing unit . The operating system coordinates and provides control of various components within data processing system in . The operating system may be a commercially available operating system such as AIX AIX is a trademark of International Business Machines Corporation in the United States and other countries Microsoft Windows Microsoft and Windows are trademarks of Microsoft Corporation in the United States and other countries or Linux Linux is a trademark of Linus Torvalds in the United States and other countries . An object oriented programming system such as the Java programming system may run in conjunction with the operating system and provides calls to the operating system from Java programs or applications executing on data processing system Java and all Java based trademarks and logos are trademarks or registered trademarks of Oracle Corporation and or its affiliates .

Instructions for the operating system the object oriented programming system and applications or programs such as data recorder application and data applicator application in are located on at least one of one or more storage devices such as hard disk drive and may be loaded into at least one of one or more memories such as main memory for execution by processing unit . The processes of the illustrative embodiments may be performed by processing unit using computer implemented instructions which may be located in a memory such as for example main memory read only memory or in one or more peripheral devices.

The hardware in may vary depending on the implementation. Other internal hardware or peripheral devices such as flash memory equivalent non volatile memory or optical disk drives and the like may be used in addition to or in place of the hardware depicted in . In addition the processes of the illustrative embodiments may be applied to a multiprocessor data processing system.

In some illustrative examples data processing system may be a personal digital assistant PDA which is generally configured with flash memory to provide non volatile memory for storing operating system files and or user generated data. A bus system may comprise one or more buses such as a system bus an I O bus and a PCI bus. Of course the bus system may be implemented using any type of communications fabric or architecture that provides for a transfer of data between different components or devices attached to the fabric or architecture.

A communications unit may include one or more devices used to transmit and receive data such as a modem or a network adapter. A memory may be for example main memory or a cache such as the cache found in North Bridge and memory controller hub . A processing unit may include one or more processors or CPUs.

The depicted examples in and above described examples are not meant to imply architectural limitations. For example data processing system also may be a tablet computer laptop computer or telephone device in addition to taking the form of a PDA.

With reference to this figure depicts a block diagram of an example configuration for activities duplication via recorded video in accordance with an illustrative embodiment. As an example recording workstation is an example of server in . Video capture application is an example of video capture application in and has been further modified to include additional features as described herein.

As an example playback workstation is an example of client in . Video playback application is an example of video playback application in and has been further modified to include additional features as described herein.

Data recorder application which is an example of data recorder application in operates in conjunction with video capture application which is an example of video capture application in . Data recorder application includes control data recorder component to capture and record control data that corresponds to the activities being video recorded by video capture application . Input data recorder component captures and records input data being provided to applications and system components corresponding to the activities being video recorded by video capture application . Video encoder component operates in conjunction with video capture application control data recorder and input data recorder . Video encoder component receives and encodes the video data from video capture application control data from control data recorder and input data from input data recorder according to a timeline of the activities on recording workstation .

Video encoder component outputs video with control and input data . Video with control and input data is an example of data in and may be stored in any suitable repository such as storage in .

Sometime after video with control and input data is available playback workstation accesses video with control and input data using video playback application and data applicator application . Data applicator application is an example of data applicator application of . Video decoder of data applicator application sends the video data from video with control and input data to video playback application . Video playback application plays back the video data from video with control and input data . Video playback application operates in conjunction with certain components of data applicator application . Control data applicator applies control data attributes or a variation thereof suitable for playback workstation to applications components or both in playback workstation . Input data applicator applies input data attributes or a variation thereof suitable for playback workstation to applications components or both in playback workstation .

In one example embodiment control data recorder identifies the control data and corresponding attributes to be recorded by analyzing the video that is being captured at recording workstation . For example control data recorder may perform analysis of changes between frames of video optical character recognition OCR of portions of a video frame screen scraping for translating image information into text or other form or object recognition in video frames. By identifying the changes in the video control data recorder detects state changes in an application a component of recording workstation or a combination thereof.

In another embodiment control data recorder identifies the control data and corresponding attributes to be recorded by monitoring certain aspects of recording workstation . For example control data recorder may monitor recording workstation for changes in memory pages call stacks or instruction queues. As another example control data recorder may monitor recording workstation for function calls API invocations commands passed on a certain bus or a state change or activity of a component in a device driver.

By identifying a change in the video or change in a monitored aspect of recording workstation control data recorder detects state changes in an application a component of recording workstation or a combination thereof. In response to determining a state change control data recorder identifies the control data that causes that change.

In one embodiment data recorder application may prompt a user an application or a system to provide an attribute of the control data that causes the change. In response to receiving the requested attribute data recorder application provides the control data attribute to control data recorder .

Data recorder application relies on knowledge available to data recorder application for identifying the control data and the corresponding attributes. For example a registry or a library of function calls interface parameters command paths command switches APIs etc. may be available or accessible to data recorder application . Data recorder application can select from such a library one or more entries that can cause the state change and compose control data and its attributes corresponding to the change.

Input data recorder can capture and record input data in a similar manner as control data recorder . For example an embodiment of input data recorder may also receive input data or an attribute thereof responsive to a prompt from data recorder application . Another embodiment of input data recorder may receive the input data or an attribute thereof by analysis of video data lookup of a repository or a library or a combination thereof.

In one example embodiment control data applicator identifies the control data and corresponding attributes that are to be applied to an application a component or a combination thereof at playback workstation . The control data attribute may be applicable to playback workstation in the form available from video decoder component .

Under certain circumstances the control data attribute may not be directly applicable to playback workstation in the form available from video decoder component . For example control data applicator may detect an attribute of certain control data e.g. a file path of an application launch command. Control data applicator may find that the file path recorded in recording workstation does not exist in playback workstation .

In one embodiment data applicator application prompts a user or an application at playback workstation to provide a substitute attribute suitable for applying the control data in playback workstation s environment. In another embodiment data applicator application looks up a knowledge source such as a registry or a library to find a substitute attribute suitable for applying the control data in playback workstation s environment. Control data applicator receives the control data attribute responsive to the prompt or lookup and applies to an application component or a combination thereof in playback workstation .

Input data applicator applies input data in a similar manner as control data applicator . For example an embodiment of input data applicator may also receive substitute input data or an attribute thereof responsive to a prompt from data applicator application . Another embodiment of input data applicator may receive the input data or an attribute thereof by performing an analysis of video data lookup of a repository or a library or a combination thereof.

With reference to this figure depicts a block diagram of timeline synchronization for activities duplication via recorded video in accordance with an illustrative embodiment. Timeline is an example timeline of recording video with control and input data . Video with control and input data is an example of video with control and input data in and recorded in the manner described with respect to .

Video with control and input data includes control data input data and video data that is recorded as time progresses along timeline . Discrete times T T T T T T T and Tn are depicted on timeline as an example guide for understanding the sequence of control data C C C C C C and C in control data and input data I I I I I I I I I I I and I in input data as they occur during the operation of a recording data processing system such as recoding workstation in . For example discrete time T may map to 10 00 AM one morning when video with control and input data is recorded and may map to 3 00 PM the next afternoon when video with control and input data is played back.

Assume that recording of video with control and input data begins at time T and a data recorder application according to an embodiment identifies that control data C is to be recorded. Further assume that a state change corresponding to control data C e.g. a browser launch has either already occurred at T or is occurring at T. As an example assume that the data recorder application cannot identify an attribute of control data C e.g. a file path of the browser s executable file. According to an embodiment the data recorder application prompts a user or an application for providing the attribute of C. Responsive to the prompt the data recorder application receives the attribute and records C along recording timeline .

The data recorder application of an embodiment similarly identifies C C. In some cases the data recorder application is able to identify the attributes of a particular control data e.g. C and C and records that control data along recording timeline by recording those control data attributes. In some other cases the data recorder application may be unable to identify an attribute of a particular control data e.g. C. In such cases the data recorder application prompts and receives P R the attribute of that control data as described with respect to C and records that control data along recording timeline .

The data recorder application according to an embodiment also records input data I I as they occur over timeline . For example I may be a menu selection that causes C a new GUI launch to occur. As an example I and I may be form field entries e.g. user ID and password on the new GUI launched as a result of C. In this example C may be a command to establish a secure http based on the information in I and I which may present a challenge question and input data I may be a response thereto.

The examples of control data and input data are described only for illustrating the recording operation of video with control and input data and are not intended to be limiting on the illustrative embodiments. Using this disclosure those of ordinary skill in the art will be able to create numerous other combinations of control data input data and video data to create variations of video with control and input data and the same are contemplated within the scope of the illustrative embodiments.

At playback time video with control and input data is played back with control data and input data being applied according to timeline . Depending on the playback operations performed on video data such as PLAY REWIND FAST FORWARD or PAUSE depicted in by the well known icons for those functions .

Assume that the playback begins at time T with the PLAY function activation on video data . A data applicator application according to an embodiment attempts to apply control data C to the data processing system associated with the playback such as playback workstation in .

The data applicator application determines that an attribute of C does not match the environment of the data processing system associated with the playback. For example the file path for the browser may be different in the data processing system associated with the playback as compared to the file path in the data processing system associated with the recording. Or as another example the data processing system associated with the playback may have a preference to launch a different browser than the browser in the recording.

Accordingly the data applicator application prompts and receives a substitute attribute for C during playback and applies A control data C that is modified with the substitute attribute to suit the data processing system associated with the playback. The data applicator application applies A input data I I I and I and control data C to the data processing system associated with the playback.

Generally the data applicator application may perform the apply operation in a manner that is specific to the control data or input data being applied. The apply operation results in either causing an execution on the data processing system using the control data or input data causing an effect of the control data or input data to be created on the data processing system performing an operation on the data processing system that corresponds to the application or effect of the control data or input data as depicted in the recording of video data or a combination thereof.

Assume that at some point between times T and T along timeline time TA a user or a system activates the FAST FORWARD function on video data as shown. The user or the system resumes the PLAY function at some point between times T and T along timeline time TA. The data applicator application applies control data C and C and input data I as a background apply operation to maintain synchronization of the duplication of the recorded activities on the data processing system associated with the playback. In other words not only is video data advanced as a result of the FAST FORWARD function up to the time the PLAY function is resumed but the intervening control data and input data that were skipped over as a result of the FAST FORWARD operation are also applied to the activities occurring on the data processing system associated with the playback so that when the user or the system resumes the playback at time TA the data processing system is also in a state that matches the state depicted in video data at time TA.

When playback resumes the data applicator application of an embodiment attempts to apply control data C. As described earlier the data applicator application may prompt and receive a substitute attribute for control data C for system specific application of C to the data processing system associated with the playback. The data applicator application applies control data C and input data I and I as playback time progresses along timeline as described earlier.

Assume that at some point between times T and T along timeline time TA a user or a system activates the PAUSE function on video data as shown. The playback resumes at time some point after time T along timeline time TA when the PLAY function is reactivated. When the playback resumes the data applicator application identifies those control data and input data that were present in video with control and input data during the time that elapsed between the pausing and resumption of playback.

In the depicted example input data I and I should have been applied to the data processing system associated with the playback had the playback of video with control and input data not paused at time TA and resumed at time TA. Accordingly the data applicator application applies input data I and I upon resuming of the PLAY function and then continues to apply other control data and input data that would normally be applied along timeline after time TA.

The data applicator application applies I C and I until time TB when a user or a system activates a REWIND function on video data to resume playback at time TA. The data applicator application performs an undo U operation to back out those control data and input data that were applied between times TA and TB so that when the video data resumes at time TA in timeline the data processing system associated with the playback is also in a state that corresponds to the state the data processing system depicted in the recording was at time TA. The undo operation removes the effects of I C I I and I to place the data processing system associated with the playback in the state existing at time TA.

The data applicator application performs the undo operation according to the control data or the input data that has to be undone. For example if an effect of C was to close a browser window the data applicator application reopens the browser window and populates the window with content up to the time before the closing during the undo operation. As another example if an effect of C were to establish a network connection the data applicator application terminates the network connection during the undo operation. As another example if an effect of I were to populate a form field the data applicator application reverts the form field during the undo operation to its prior state for example to a default value a previous value or null value. As another example if an effect of I were to highlight a portion of a display the data applicator application removes the highlighting during the undo operation. When playback resumes at time TA the data applicator application resumes applying the control data and input data as described earlier.

One example embodiment of the data recorder application may record and present the previously supplied inputs as a selection choice to reduce effort. For example a user may have gone through significant effort to supply values in a form. The user may then rewind especially accidentally. In such an example scenario the user may want to be able to apply the previous inputs to save time. In another example scenario the user may be rewinding to correct only one of several forms the user filled out in which case the user may want to fill the other forms with the previously supplied inputs.

Generally the data applicator application may perform the undo operation in a manner that is specific to the control data or input data being undone. The undo operation results in either removing the control data or input data removing an effect of the control data or input data performing a different operation that counters the application or effect of the control data or input data or a combination thereof.

With reference to this figure depicts a flowchart of an example process for creating a video with control and input data for activities duplication via recorded video in accordance with an illustrative embodiment. Process can be implemented in a data recorder application such as data recorder application in .

A data recorder application according to an embodiment begins a recording session such as to record video with control and input data in block . The data recorder application records or causes a video capture application to record video data portion of the video with control and input data of an embodiment block .

In the manner of an embodiment described earlier the data recorder application detects a state change in the video block a state change in the system where the video is being recorded block or a combination thereof. The data recorder application determines whether the state change corresponds to control data or input data block .

If the data recorder application determines that the state change corresponds to control data that should be recorded in the video with control and input data Control path of block the data recorder application further determines whether the attributes of the control data are known or discoverable in the manner of an embodiment described earlier block . If an attribute of the control data is not known not discoverable or both No path of block the data recorder application prompts a user or a system for the control data attribute block . The data recorder application receives the control data attribute from the user or the system in response to the prompt of block block . The data recorder application records the control data including the received attribute in the video with control and input data block and proceeds to block in process .

If the attributes of the control data are known discoverable or both Yes path of block the data recorder application proceeds to block in process . If the data recorder application determines that the state change corresponds to input data that should be recorded in the video with control and input data Input path of block the data recorder application records the input attributes block and proceeds to block in process .

The data recorder application encodes the control data or input data into the recording to with in the video with control and input data block .

The data recorder application stores the encoded video with control and input data such that the video with control and input data is accessible for playback at another data processing system block . The data recorder application determines whether to end the recording session block . If the session is to continue No path of block the data recorder application returns to block of process . If the session is to end Yes path of block the data recorder application closes the recording session in any suitable manner block and ends process thereafter.

With reference to this figure depicts a flowchart of an example process for playing back a video with control and input data for activities duplication via recorded video in accordance with an illustrative embodiment. Process can be implemented in a data applicator application such as data applicator application in .

A data applicator application according to an embodiment begins a playback session such as a playback of the video data of a video with control and input data produced as a result of process in via a video playback application block . The data applicator application maintains time synchronization of the various aspects of the playback as described with respect to the example depicted in block . Particularly the data applicator application maintains the time synchronization of video data playback according to a timeline of the video with control and input data block applies an attribute of a control data according to the timeline of the video with control and input data block applies an attribute of an input data according to the timeline of the video with control and input data block or a combination thereof. The data applicator application maintains the time synchronization of video data playback in part by undoing not shown an attribute of a control data according to the timeline of the video with control and input data undoing not shown an attribute of an input data according to the timeline of the video with control and input data or a combination thereof depending on the particular playback operation being performed at any given time in the timeline.

The data applicator application determines whether to end the playback session block . If the session is to continue No path of block the data applicator application returns to block of process . If the session is to end Yes path of block the data applicator application ends playback process thereafter.

With reference to this figure depicts a flowchart of an example process for maintaining time synchronization during playback of a video with control and input data in accordance with an illustrative embodiment. Process can be implemented in a data applicator application such as data applicator application in as a part of block in .

A data applicator application according to an embodiment receives a playback command such as to PAUSE FAST FORWARD or REWIND a video playback block . The data applicator application determines a type of the playback command block .

If the command is a PAUSE command Pause path of block the data applicator application defers or time shifts applying the control and input data of the video with control and input data until the time the play operation is resumed block . If the command is a command to advance the playback such as a FAST FORWARD command FF path of block the data applicator application applies the control and input data of the video with control and input data as a background operation up to the time the play operation is resumed block . If the command is a REWIND command Rev path of block the data applicator application undoes the applied control and input data of the video with control and input data up to the time the play operation is resumed block . The data applicator application ends process thereafter.

With reference to this figure depicts a flowchart of an example process of applying control data in a playback environment in accordance with an illustrative embodiment. Process can be implemented in a data applicator application such as data applicator application in as a part of block in .

The data applicator application begins applying control data from the video with control and input data block . The data applicator application determines whether an attribute of the control data is valid for the playback environment to with valid for the data processing system associated with the playback block . If the attribute is not valid for the playback environment No path of block the data applicator application prompts a user or a system for a substitute attribute block .

The data applicator application receives the substitute attribute block . The data applicator application applies the control data using the substitute attribute by causing an execution of an instruction causing an operation or a combination thereof at the data processing system associated with the playback block . The data applicator application ends process thereafter.

In one example embodiment if the video playback stops or a request is received to exit the video playback prior to the application of the last control or input data the user may be given a choice to undo all controls and inputs that were applied during the video playback. In another example embodiment the ability to skip to or go to a point in time in a video may either be blocked by the video playback application or may be translated into the equivalent fast forward or rewind commands depending on whether the skip to time is before or after the skip from time.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

Thus a computer implemented method system and computer program product are provided in the illustrative embodiments for activities duplication via recorded video. Using an embodiment an activity performed on a data processing system during a video recording of the activity can be performed on another data processing system while playing the video recording. An instruction executed on the recording data processing system can be executed on a playback data processing system. An input provided on an application on the recording data processing system can be automatically provided in a corresponding application on the playback data processing system. An embodiment maintains time synchronization of state changes at the playback data processing system responsive to the playback operations performed during the playback.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable storage device s or computer readable media having computer readable program code embodied thereon.

Any combination of one or more computer readable storage device s or computer readable media may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage device may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage device would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage device may be any tangible device or medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable storage device or computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to one or more processors of one or more general purpose computers special purpose computers or other programmable data processing apparatuses to produce a machine such that the instructions which execute via the one or more processors of the computers or other programmable data processing apparatuses create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in one or more computer readable storage devices or computer readable media that can direct one or more computers one or more other programmable data processing apparatuses or one or more other devices to function in a particular manner such that the instructions stored in the one or more computer readable storage devices or computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto one or more computers one or more other programmable data processing apparatuses or one or more other devices to cause a series of operational steps to be performed on the one or more computers one or more other programmable data processing apparatuses or one or more other devices to produce a computer implemented process such that the instructions which execute on the one or more computers one or more other programmable data processing apparatuses or one or more other devices provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiments were chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

