---

title: Methods and apparatus to distribute network IP traffic
abstract: Example methods disclosed herein include, in response to receiving, at a server, a first control packet from a first router, selecting a first auxiliary router to forward the first control packet, and updating a forwarding table in the first router to associate a destination address of the first control packet with a first control path from the first router to the first auxiliary router, the forwarding table initially causing the first control packet to be routed from the physical router to the server, the first control path being determined by routing the first control packet from the first router to the first auxiliary router through the server, the updating of the forwarding table to cause subsequent data packets associated with the first control packet to be forwarded from the first router to the first auxiliary router via the first control path without being routed through the server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08687638&OS=08687638&RS=08687638
owner: AT&T Intellectual Property I, L.P.
number: 08687638
owner_city: Atlanta
owner_country: US
publication_date: 20121130
---
This patent arises from a continuation of U.S. application Ser. No. 12 343 719 entitled METHODS AND APPARATUS TO DISTRIBUTE NETWORK IP TRAFFIC and filed on Dec. 24 2008 which claims the benefit of U.S. Provisional Application Ser. No. 61 079 764 filed on Jul. 10 2008. U.S. application Ser. No. 11 781 002 and U.S. Provisional Application Ser. No. 61 079 764 are incorporated herein by reference in their respective entireties.

This disclosure relates generally to packet switched networks and more particularly to methods and apparatus to distribute network Internet Protocol IP traffic.

As the Internet permeates further into the functions of society including leisure e.g. Internet Protocol television IPTV and business e.g. e commerce the capacity and reliability required of routers is steadily increasing. An increase in bandwidth requirements is driving changes in the forwarding hardware and software which are currently tailored towards IP. Such changes may necessitate modification to existing protocols and or introduction of new protocols. Such new and or modified protocols have traditionally been tested in labs on a small scale.

Methods and apparatus to distribute network IP traffic are disclosed. An example disclosed method includes receiving a first Internet Protocol IP control packet at an input of a first server the first IP control packet being received from a first router and selecting a second router within a router array associated with the first router to send the first IP control packet the first server selecting the second router by matching a destination IP address of the first IP control packet to a first IP address subspace associated with the second router. The example method further includes transmitting the first IP control packet to the second router and updating a forwarding table in the first router by associating the destination IP address of the first IP control packet with a first control path from the first router to the second router.

An example disclosed apparatus includes a receiver to receive a first Internet Protocol IP control packet from a first router and a route selector to select a second router within a router array associated with the first router to send the first IP control packet by matching a destination IP address within the first IP control packet to a first IP address subspace associated with the second router and update a forwarding table in the first router by associating the destination IP address of the first IP control packet with a first control path from the first router to the second router. Additionally the example apparatus includes a transmitter to transmit the first IP control packet to the second router.

The example methods and apparatus described herein are implemented by a Trochilus server that functions as an assistant to a network router by enabling a network provider to quickly deploy in network services protocols and applications without assistance from router vendors. In the past deploying in network services involved virtualization at the router level or exposing the relevant application programming interfaces of the production router e.g. off the shelf routers sold by router venders to potential issues to enable the extension. Untested changes to production routers can lead to network inefficiencies router downtime un routable network traffic or unanticipated router functionality. The Trochilus server enables additional functionality to be tested on a network scale level without impact on production level traffic thereby ensuring live network level instructions will not increase the likelihood of production router failure and or reduce network reliability. Functions in network services protocols and applications are implemented in the Trochilus server independent of the production router. This reduces interactions between the Trochilus server and the production router thereby reducing strain on production router resources such as for example memory and processor cycles.

As the Internet permeates further into the functions of society including leisure e.g. Internet Protocol television IPTV and business e.g. e commerce the capacity and reliability required of routers is steadily increasing. An increase in bandwidth requirements is driving changes in the forwarding hardware and software currently used in IP networks. Such changes may necessitate modification to existing protocols and or introduction of new protocols. Such new and or modified protocols can be tested in labs on a small scale. However it is unclear if such new and or modified protocols will preserve desirable properties such as traffic engineering capabilities when implemented in a large scale live network. Furthermore with the increasing number of roles already taken on by the Internet new and or more complex services have arisen. For example the introduction and acceptable operation of IPTV requires network reconvergence of IPTV IP packets to occur within tens of milliseconds. Again small scale tests of such new services may not accurately predict behavior in a live network.

Given the significant monetary and time investments in the current network infrastructure already made by network providers and vendors the possible benefits of any new and or different network architecture or protocol is typically outweighed by its deployment cost. Moreover research on new protocols often focuses on altering or even isolating a single variable in a simulated network laboratory environment or limited testing using production level equipment. Thus it can be unclear how for example multiple new variables protocols and or services will interact with one another and or the existing network when they are deployed in network wide production routers and servers. Consequently there is increased risk associated with simultaneous deployments. These increased risks often slow the adoption rate of new technologies.

A key to network reliability is the ease of troubleshooting and network management. If the network is highly visible thereby making it easier to detect problematic areas down times are more likely to be reduced. While there has been an abundance of new routing protocols much less work has been done on the ease of network recoveries and or the duration of network recoveries. The work on new protocols has prompted the growth of overlay networks such as Distributed Hash Tables. At the same time there has been less emphasis on improving the IP and or network layer. There is a hard limit to the impact of upper layer solutions on issues caused by lower layers. For example even though end to end retransmissions are necessary for complete correctness of packet reception a wireless multi hop system can be made much more efficient if link level retransmissions are used.

Production router vendors and network providers have common and overlapping interests in the functionalities and capabilities required of networking elements. For router vendors the priority is on the correct implementation of existing protocols based on governing standards to ensure interoperability and to optimize router performance while minimizing failure rates. However in addition to these objectives network providers are interested in performance of the network as a whole. Network performance is directly dependent upon the ease of troubleshooting and management. Based on the requirements of network providers which may change quickly in response to customer needs or introduction of new services additional functionalities may need to be rapidly implemented and prototyped in the form of protocols functions applications etc.

Network providers are impeded from directly modifying router code in production routers due to proprietary and reliability reasons. The reliability efficiency and time scales at which functionalities need to be deployed require a separation into different logical components under control of either the vendor or network provider. One such component is the router which is maintained by the vendor and implemented using standardized protocols. Other components of which there can be several consequently fall under the domain of the network provider.

To enable the deployment of new internet protocols while maintaining network reliability the Trochilus server disclosed herein uses current router technology to separate the network into logically different networks in the IP address space. Such separation enables the deployment of potential production router functionalities away from the production router to an external neighboring server i.e. the Trochilus server which in turn allows rapid prototyping of protocols without sacrificing router stability or reliability. Generally the Trochilus server includes functionality for routing and or distributing IP traffic separate from a production router. Alternatively in some applications the Trochilus server updates routing tables within a router for static forwarding by the router. Additionally the Trochilus server enables deployment of new protocols requiring changes to the control and or data planes enables high resolution auditing of the control plane and enables the logical splitting of production router forwarding information bases into different routers. A packet interface between the production router and the Trochilus server is sufficient to implement additional functionality. Furthermore mechanisms such as fair queuing is already in place in production routers and can serve as a means of regulating communication between the Trochilus server and the production router.

The Trochilus server provides operational network stability while enabling network provider administrator control of the server. This approach leverages production router capabilities and minimizes packet processing rates. Since network stability directly impacts customer satisfaction and hence network provider revenue it should not as far as possible be compromised. This stability requirement reduces the ability for providers to incorporate new and experimental functionalities within a production router. Since the Trochilus framework is ultimately communicatively coupled to production routers network administrators have sufficient control over non production traffic to enable introduction and or testing of new functionalities without compromising network stability. For example the Trochilus server isolates production traffic i.e. network traffic associated with current network traffic functionality and or service provision of existing services to existing customers from non production traffic i.e. traffic related to research experimentation and or other functionality not yet offered to customers . Because the Trochilus server does not affect and or interfere with production network traffic the administrator can deactivate the Trochilus server without creating adverse network functionality. Additionally the Trochilus server utilizes its static forwarding capabilities for seamless integration into production routing networks.

Safe prototyping experimentation and or deployment of network layer functionalities for example next generation route tracing tools are accomplished by explicitly allocating IP address space to one or more Trochilus servers and reusing the current network control planes. This address space separation also enables load balancing of routing and forwarding table entries across multiple auxiliary routers instead of a single large one. Auxiliary routers may include sub routers small routers or supplementary routers. The IP address space associated with a single router can be partitioned into multiple auxiliary routers responsible for IP address subspaces. Furthermore by connecting to current network infrastructure Trochilus servers simplify the creation of a large network testbed for protocols services and applications in and or above the network layer.

The processing by the Trochilus server includes filtering IP packets based on source address destination address and or application data information contained within the IP packet. The Trochilus server filters and or processes non production test traffic without any impact on production traffic. Furthermore the Trochilus server may modify production and or non production IP packets for network protocol prototyping and or for routing IP packets according to forwarding tables within the Trochilus server. Since the Trochilus server is under the complete control of the network provider as opposed to the router vendor the network provider may change the filters or modify IP packet parameters within the Trochilus server anytime. Furthermore the Trochilus server may use measurement tools to test prototype network protocols or other functionality across a network in real time without affecting production traffic. This enables a network provider to implement a prototype protocol on a production network using the cabling and production routers of the production network to monitor the performance and efficiency of the prototype protocol without having to modify production routers and without creating network stability issues.

In the interest of brevity and clarity throughout the following disclosure references will be made to the example packet switched communication network of . Moreover the following disclosure references deploying and monitoring network layer functionalities in the example packet switched communication network through the use of one or more Trochilus servers. However it should be understood that the methods and apparatus described herein to distribute network IP traffic are applicable to other communication networks to other network layers to other types of servers and or to other functionalities.

The example packet switched communication network provides one or more data communication services e.g. a transparent local area network TLAN service a virtual local area network VLAN service a dedicated internet access E DIA service and or a virtual private local area network service VPLS throughout and or within a site a location a building a city a metropolitan area a geographic area and or a geographic region. The example packet switched communication network provides and or facilitates data communication services between and or amongst any number and or type s of customer locations and . The customer locations include a residential gateway RG communicatively coupled to customer premises equipment CPE . The RG may be implemented by for example a VoIP residential gateway an IP router a multiport Ethernet switch a cable modem a DSL modem a satellite modem a firewall and or a wireless access point. The RG connects a local network with the packet switched communication network and or the Internet. Connected to the RGs are one or more CPEs such as IP Multimedia Subsystem Voice over IP VoIP phones VoIP enabled personal computers PC VoIP endpoints wireless VoIP devices e.g. a wireless fidelity WiFi Internet protocol IP phone VoIP adapters e.g. an analog telephone adapter ATA VoIP enabled personal digital assistants PDA SIP CPEs and or VoIP kiosks. To transport data between the example customer locations other customer locations and or point of presence network servers the example packet switched communication network of includes any number type s and or topology ies of packet switched networks.

The example packet switched network includes routers to communicatively couple the example customer locations and network servers. The routers are packet based switches such as for example the Catalyst 3000 and or 5000 series of switches from Cisco Systems Inc. One or more of the customer locations may be communicatively coupled to the routers and used to access and or utilize data communication services provided and or implemented by the example packet switched communication network of .

In the example of each of the routers is communicatively coupled to a respective example Trochilus server . .. The Trochilus servers . . of are separate entities from each other. In an alternative example the routers are communicatively coupled to a single Trochilus server not shown or to a single computer system hosting the Trochilus servers . .. Alternatively one or more of the routers may be communicatively coupled to two or more Trochilus servers . . and or some routers may not be coupled to any of the Trochilus servers . .. The Trochilus servers . . may be coupled to their respective routers via any type s of communication technology ies and or communication link s .

The routers and function as edge routers and are located at for example central office CO vault and or remote terminal locations. More than one of the customer locations and or network servers may be coupled to the same edge router and . The routers are communicatively coupled to each other via any type s and or number of access device s communication technology ies communication link s and or communication network s such as for example public switched telephone network PSTN systems public land mobile network PLMN systems e.g. cellular wireless distribution systems wired or cable distribution systems coaxial cable distribution systems Ultra High Frequency UHF Very High Frequency VHF radio frequency systems satellite or other extra terrestrial systems cellular distribution systems power line broadcast systems fiber optic networks and or any combination and or hybrid of these devices systems and or networks.

Data is routed between the example customer locations and or network servers based on virtual circuits. In general a virtual circuit represents a logical communication path between a first device e.g. the router and a second device e.g. the router . Virtual circuits can also be defined to logically connect more than two devices e.g. in a point to multipoint configuration . To send data via a virtual circuit transmitted data is flagged with a virtual circuit identifier VCID e.g. by storing the VCID within a packet header field . Devices receiving the data e.g. routers use the VCID to determine how to route the data to the correct destination s . For example a router receiving data associated with a particular virtual circuit queries its routing table based on an identified VCID to determine to which device e.g. another router or and or a customer location the data is to be forwarded and or transmitted and or via which physical communication link the data is to be forwarded and or transmitted. The routing tables implemented by the example routers associate each virtual circuit with a particular physical route through the packet switched communication network.

The example communication system of includes a network provider communicatively coupled to a subset of the Trochilus servers e.g. servers . . and . . Additionally or alternatively the network provider may be communicatively coupled to all of the Trochilus servers . . and or to a defined subset of these servers. Alternatively or additionally some or all of the Trochilus servers . . may be in communication with one another to thereby provide indirect communication with the network provider .

The network provider has administrative control of the example Trochilus servers . .. For example the network provider is capable of deploying protocols and or applications within the Trochilus servers . . modifying filtering parameters of the Trochilus servers . . updating forwarding tables within the Trochilus servers . . modifying monitoring parameters within the Trochilus servers . . and or downloading network performance data created and or stored in the Trochilus servers . .. Furthermore the example network provider may activate or deactivate some or all of the Trochilus servers . .. The network provider couples the Trochilus servers . . to their respective routers by updating the network forwarding tables within the routers . The forwarding tables may be updated by the network provider and or by the vendor of the routers . The routers may be located within the network of the network provider within the example packet switched communication network and or within any other network. Additionally the network provider may form an agreement with a second network provider to couple one or more Trochilus servers . . to routers within the second network provider network.

The network provider partitions a distinct address domain for the Trochilus servers . .. This enables the network provider to set up static forwarding in the respective routers such that the Trochilus servers . . can receive network traffic. For example the router of the illustrated example is programmed to include a static forwarding configuration to forward network traffic to Trochilus server .. The static forwarding policy may include forwarding all network traffic received at the router or alternatively forwarding a subset of network traffic specified by the network provider . The subset of network traffic may include and or be limited to network traffic directed to the address domain of the Trochilus server .. For example using Cisco s Internetwork Operating System IOS an IP policy route map can be used to specify the address prefixes that are to be forwarded to the Trochilus server .. An example IP policy route map is shown in the following 

The Trochilus servers . . receive IP packets from the respective routers . The Trochilus servers . . may filter the received IP packets and or modify the IP packets based on the particular application of the Trochilus servers . .. The Trochilus servers . . of the illustrated example are used to deploy and monitor the performance of experimental protocols e.g. network testbeds monitor changes in the control plane and or route network traffic to enable forwarding table size reduction in production routers . Completely new routing and or addressing protocols with packet headers specific to them may be implemented.

Network testbeds provide a platform for performance verification of new protocols. Testbeds that approach the scale of actual networks on which these protocols are to be run are preferable since some issues may not be revealed with a smaller scale testbed. Network scaling involves both the number of network elements and transport e.g. cables . Furthermore realistic network operations such as maintenance is taken into account. In this regard the Trochilus servers . . provide a low cost solution to approximate real network behavior. By coupling to existing routers and cables the Trochilus servers . . eliminate the need to create additional router sites and thus the laying of optical cables. Furthermore maintenance costs are minimized since router sites are already under operational administration. Additionally the Trochilus servers . . connected to the network will experience the same kind of outages for instance cablecuts as the packet switched communication network . For new protocols that are deemed deployable after experimentation on the Trochilus servers . . the traffic of end users such as the customer locations can be shifted over incrementally e.g. can go live by adding their corresponding IP addresses to the Trochilus space.

For example if the network provider satisfactory tests a new protocol such as the eXplicit Control Protocol the network provider can deploy the eXplicit Control Protocol in the Trochilus servers . .. The eXplicit Control Protocol requires explicit feedback from routers e.g. routers along the end to end communication path with the routers updating the feedback field of each IP packet. Computation of round trip times which are subsequently used to alter the congestion window sizes of respective end hosts is performed in the Trochilus servers . .. Without a Trochilus server the network provider would be required to test the eXplicit Control Protocol in a laboratory setting simulating the packet switched network . Then if the testing indicates the new protocol operates without issue the network provider would be required to deploy the eXplicit Control Protocol into the software of the production routers . This approach raises the possibility that the eXplicit Control Protocol will create errors or issues in the production routers that could not be detected in the controlled laboratory environment. Furthermore the actual software update may lead to downtime of the production routers . However if the new protocol is deployed in the Trochilus servers . . the network provider may test and monitor the performance of the new protocol within the actual production packet switched network without going live and thus with reduced risk of service outages or performance degradation. By monitoring the new protocol in the production network using production routers the network provider gets protocol network performance test data that otherwise would have been almost impossible to simulate or gather without the possibility of creating performance issues within the production network. Because the routers pass IP packets to their respective Trochilus servers . . the processing and decision making associated with the eXplicit Control Protocol is conducted in the Trochilus servers . .. This allocation of processor responsibilities limits the memory and processing requirements faced by the routers when implementing the new protocol.

The traversal of packets to and from a given router may incur delays or drops since these packets are queued within the router . For protocols that rely on aggregate properties of the data path e.g. eXplicit Control Protocol relies on path round trip delay time as opposed to per hop delay one can incorporate the delays incurred at the router into those incurred at the Trochilus servers . ..

The Trochilus servers . . of may be used to implement network level capabilities. Using the address space splitting ability of the Trochilus servers . . multiple Trochilus servers . . can process packets from different address ranges. In other words the Trochilus servers . . can parallelize the operations of the routers . For example a class of Distributed Denial of Service defense involves the use of capabilities or tokens that are issued by different network elements that can be verified independently hence achieving defense in depth . Briefly a source begins by requesting permission to communicate with the destination which grants permission in the form of a capability. Using this token subsequent packets in the established flow are checked at every hop by the Trochilus servers . . to determine if they are authorized. Because this checking is performed with the Trochilus servers . . instead of in the routers the processing load of the routers is reduced.

Practical prior efforts on routing packets across the Internet are focused on overlay style networks such as Chord Tapestry and Resilient Overlay Network. These overlay style networks implement their own control and data planes and rely on the underlying layers to provide basic point to point connectivity. In such a context changes to the network layer implemented by a network provider and or a router vendor are confined to the domains of that network provider and or router vendor. The network layer includes a control plane and a data plane for routing packets. The Trochilus servers . . occupy the control plane which relies on the routing protocols e.g. Open Shortest Path First OSPF and Border Gateway Protocol BGP provided by Internet Service Providers but enables extensions to the data plane. Additionally the Trochilus servers . . enable complete replacement of IP routing and addressing in the same space as IP by modifying IP packets.

While overlay networks can overcome some of the limitations of the network layer certain performance issues are present. For example overlay recovery times due to physical link failure cannot exceed that of Multi Protocol Label Switching Fast Reroute. In another example the impact of the defense in depth of overlay networks against distributed denial of service algorithms without modifications to in network elements will not be significant due to sole implementation at end hosts. The Trochilus servers . . provide an improvement in spatial and temporal resolution over overlay networks by providing a control and data plane for network routing. At the same time the Trochilus servers . . enable the processing of additional services and or improving upon existing network level services. A unique advantage of the Trochilus servers . . compared to overlay networks is that depending on the precise protocols considered no changes to the end hosts are necessary. This is unlike overlay networks which require all interested end users e.g. customer locations to modify their machines.

Once the Trochilus server . receives the IP packet the IP packet is processed by the Trochilus server .. The processing may include for example modification of the IP packet using for instance the Netfilter packet filtering framework. IP packet modification may include changing the source address for routing applications changing the destination address for routing applications and or changing the data in the packet for monitoring applications. Additionally or alternatively the Trochilus server . may use information in the IP packet for network performance monitoring protocol monitoring and or network quality monitoring. Since the Trochilus server . is under the control of the network provider of as opposed to the router vendor s that sold the production routers network provider management systems may include off the shelf end user machines and or a combination of such machines and commercial routers. After processing the IP packet the Trochilus server . transmits the processed IP packet to another Trochilus server e.g. Trochilus server . on the network another router e.g. router and or a server of the network provider .

In the transmitting example of the Trochilus server . sends the processed IP packets via the single interface to the router which uses dynamic routing protocols denoted by D such as BGP and or OSPF to route the transmitted IP packet. This configuration enables network layer IP packet manipulation without the need to provide an alternate control plane. This in turn enables monitoring of the control plane by the Trochilus server ..

Once the Trochilus server . receives the IP packet the IP packet is processed. In the example of the processing includes modification of the IP packet using for example the Netfilter packet filtering framework. IP packet modification may include changing the source address changing the destination address and or changing the data in the packet. Additionally or alternatively the Trochilus server . may use information in the IP packet for network performance monitoring protocol monitoring and or network quality monitoring. Since the Trochilus server . is under the control of the network provider as opposed to the router vendor s that provided the router s network provider management systems may include off the shelf end user machines and or a combination of such machines and commercial routers. After processing the IP packet the Trochilus server . transmits the processed IP packet to another Trochilus server e.g. Trochilus server . on the network to another router e.g. router and or to a network provider server.

In the transmitting example of the Trochilus server . uses dynamic routing protocols denoted by D such as BGP and or OSPF to route the transmitted IP packets to the appropriate router e.g. router network server and or another Trochilus server e.g. Trochilus server . . The Trochilus server . includes a forwarding table for determining the destination and route path. The router receives the transmitted IP packets from the multiple interfaces coupled to the Trochilus server .. In the example of the Trochilus server . transmits IP packets via three interfaces communicatively coupled to the router . The router then uses static forwarding to route the transmitted IP packets to their destination or next hop. In the multi interface configuration transmitting example both the control and data planes are implemented in Trochilus server ..

The example management interface of enables for example an operations and support system OSS server a network provider and or a user terminal not shown to deploy monitor modify and or route network layer functionalities. For example a network service provider may use the management interface to deploy protocols and or applications to the Trochilus server .. Additionally the management interface provides a gateway for a network provider to access monitored network data stored by the Trochilus server . in the performance database . The management interface is connected to a service provider via a network connection . The network connection may include any type of communication link.

The switch receiver within the Trochilus server . receives network traffic experimental packets and or IP packets forwarded from a router e.g. router . The router forwards the IP packets via a receiving link coupled to the Trochilus server .. The receiving link may include a single interface or more than one interface as shown and described in B A and B. The switch receiver forwards received IP packets and or network traffic to the filter . The receiving link may include any type of communication link.

To filter IP packets received by the example switch receiver the example Trochilus server . includes the filter . The example filter of filters the received IP packets and or network traffic by criteria determined by a network provider. The filtering criteria may be modified by a network provider transmitting modified criteria through the management interface to the deployment engine which then updates the filter with the modified criteria. The example filter may filter IP packets and or network traffic by type such as for example production IP packets and non production IP packets e.g. IP packets originating from other Trochilus servers IP packets for monitoring network performance IP packets for protocol experimentation and or IP packets for route splitting applications. In the example of the filter sends production IP packets to the switch transmitter for forwarding to the appropriate destination and sends non production IP packets to the processor for processing. Non production packets may be identified by headers associated with an experimental protocol and or application by a particular source IP address and or by data within the packet.

To control the functions routing protocols and or applications implemented by the Trochilus server . the example Trochilus server . includes the processor . The example processor of receives IP packets and or network traffic from the filter and processes the IP packets and or network traffic based on criteria determined by the network provider of and or by the applications implemented in the Trochilus server .. Furthermore the example processor may generate probe packets and or IP packets for testing the packet switched communication network and or for testing for instance an experimental protocol across the packet switched communication network . In addition to any number and or type s of specialized hardware firmware and or logic to perform processing functions the example processor of includes any number and or type s of specialized and or general purpose controller s and or processing unit s capable of executing coded instructions. For example the controller and or processing unit may perform any number and or type s of processing functions by carrying out and or executing coded instructions present in a memory communicatively coupled and or within the processor e.g. within a random access memory RAM a read only memory ROM and or on board memory of the processor .

To modify and or manipulate IP packets from the processor the example Trochilus server . includes the packet modifier . The example packet modifier of modifies data and or control information within IP packets for applications and or functions implemented by the Trochilus server .. The packet modifier uses one or more criteria determined by a network provider and or one or more parameters of one or more applications to modify the contents of the IP packets. The criteria used by the packet modifier may be updated or modified by the deployment engine . Modifications that may be made by the packet modifier include but are not limited to modifying a source address IP address field a destination IP address field a time to live field a type of service field a protocol field and or modifying information within the data field. An IP packet may be modified for route tracing applications where the monitoring protocol or parameters change and or in experimental protocol testing where the IP packets may be modified to test different aspects of the protocol. Upon modifying the IP packets the packet modifier sends the modified IP packets back to the processor . Furthermore the packet modifier may analyze the data within the non production IP packets terminate the non production IP packets or process the non production IP packets.

To analyze the performance of the packet switched communication network of links between the routers an experimental protocol experimental function and or an experimental application the example Trochilus server . includes the performance monitor . The example performance monitor of monitors and stores data within probe packets and or IP packets that provides information with respect to performance quality and or reliability. The example performance monitor receives the IP packet s and or network traffic from the processor analyzes and or processes the IP packet s and stores data associated with the IP packet s in the performance database .

The example performance database of may be implemented by any number and or type s of data structures. The performance database may be stored in any number and or type s of memories and or memory devices. Additionally the network provider of may access the performance database via the management interface to access and process the collected monitoring data. The network provider may access the monitoring information continuously or at periodic intervals.

The example performance monitor of may monitor and or analyze the IP packets to calculate the routing efficiency and or identify issues associated with experimental protocols and or applications. Furthermore the performance monitor may monitor and store data for production network route tracing applications. For example the performance monitor of the illustrated example stores the last seen IP address of the IP packet from the last hop router and the per destination IP address of the IP packet such that a determination can be made about possible production network routing changes and or production network forwarding table modifications. Additionally or alternatively the example performance monitor of may calculate the travel time of the IP packets associated with an experimental protocol to reach the router determine the packet quality of IP packets associated with an experimental protocol calculate the reliability of an experimental protocol and or measure the performance of an experimental protocol. Upon storing monitoring information from the IP packet the performance monitor forwards the IP packet back to the processor . The criteria and parameters employed by the performance monitor in monitoring IP packets are specified by the network provider . The network provider may update or change the criteria and or parameters used in such monitoring via the deployment engine by accessing the management interface which is preferably password protected.

The example deployment engine of may be used by the network provider to schedule and deploy experimental network protocols applications network services network enhancements and or network functions. The deployment engine deploys the received protocols and applications at a time specified by the network provider . For example the network provider may deploy a new protocol across a plurality of Trochilus servers. To ensure the protocol comes online at the same time in all the Trochilus servers the network provider may schedule the deployment time in the deployment engine . This enables the network provider to ensure the protocol has been uploaded into the desired Trochilus servers without issue and minimizes any initial issues the protocol may experience if one or more Trochilus servers do not initiate the new protocol at the same time as the other Trochilus servers. Additionally the deployment engine may be used to schedule the length of time a protocol is to be deployed. For example a protocol may be scheduled to be deployed within Trochilus servers for one week for development testing. The deployment engine deploys a protocol and or application by loading the protocol and or application into the processor . The processor then adds the received protocol and or application to its processing functions. Additionally the deployment engine may load updated or modified IP packet modification information to the packet modifier and or IP packet monitoring criteria to the performance monitor .

To distribute IP packets for route splitting applications the example Trochilus server . includes the route selector . The example route selector of selects one or more auxiliary routers within a router array and or the router communicatively coupled to the Trochilus server . and forwards IP packets to the selected auxiliary routers. The route selector may access the router database for the routing and or forwarding tables to determine which auxiliary router is to route the IP packets. For example the route selector receives IP packets with a destination of 128.11.2.1. The route selector selects an auxiliary router assigned to the IP address space that includes the destination 128.11.2.1. The route selector then forwards the IP packets to that auxiliary router. In response to receiving the IP packets the auxiliary router uses a routing table to determine which interface within the router to route the IP packets through. The auxiliary router then sends the IP packets through that interface for transmission to the destination of the IP packets. In other example implementations the one or more auxiliary routers in the router array may be implemented within the example route selector and or the example Trochilus server ..

In other applications the example route selector selects an interface to the communicatively coupled router via the switch transmitter for routing non production IP packets. The route selector uses forwarding tables in the route database to determine the next hop router for an IP packet and or network traffic. The forwarding tables may include route splitting information for routers such that IP packets are forwarded to a router e.g. router based on packet type e.g. control or data . Additionally the forwarding tables may include forwarding IP addresses for other Trochilus servers e.g. Trochilus servers . . such that IP packets can be routed directly through Trochilus servers in a data plane e.g. the Trochilus data plane of .

Based on the routing information stored in the example route database and using any suitable method s message s protocol s and or data structure s the example route selector of generates and or provides routing instructions to packet switched network nodes. In the illustrated example the routing instructions are based on routing tables stored in the route database . In general a routing table defines how data received on a particular communication link for a particular virtual circuit is to be processed routed and or handled e.g. transmitted on a given communication path transmitted to a given switch etc. . In some examples routing tables provided to a particular router are specific to that router and or only include routing information for those virtual circuits transported by and or through the router. In other examples each router is provided with an identical routing table identifying all routers in the network. Any number and or type s of data structures may be used to implement a routing table. The route selector forwards the IP packet to the appropriate interface within the switch transmitter . For example the switch transmitter may include interfaces to logical routers as described in connection with . The switch transmitter forwards IP packets and or network traffic from the route selector to the next hop router or Trochilus server via a link . The link and the switch transmitter may include one or more interfaces so that the route selector can route network traffic to one or more routers logical routers or Trochilus servers . . through the appropriate interface.

While an example manner of implementing the Trochilus servers . . of has been illustrated in one or more of the interfaces data structures elements processes and or devices illustrated in may be combined divided rearranged omitted eliminated and or implemented in any other way. For example any or all of the example switch receiver the example switch transmitter the example filter the example processor the example route database the example route selector the example packet modifier the example performance monitor the example deployment engine the example performance database and or the example management interface illustrated in may be implemented separately and or in any combination using for example machine accessible instructions executed by one or more computing devices and or computing platforms e.g. the example processing platform of . Further the example switch receiver the example switch transmitter the example filter the example processor the example route database the example route selector the example packet modifier the example performance monitor the example deployment engine the example management interface the example performance database and or more generally the Trochilus server may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Thus for example any of the example switch receiver the example switch transmitter the example filter the example processor the example route database the example route selector the example packet modifier the example performance monitor the example deployment engine the example management interface the example performance database and or more generally the example Trochilus server could be implemented by one or more circuit s programmable processor s application specific integrated circuit s ASIC s programmable logic device s PLD s and or field programmable logic device s FPLD s etc. When any of the appended claims are read to cover a purely software or firmware implementation at least one of the example switch receiver the example switch transmitter the example filter the example processor the example route database the example route selector the example packet modifier the example performance monitor the example deployment engine the example management interface the example performance database and or the example Trochilus server are hereby expressly defined to include a tangible medium such as a memory DVD CD etc. storing such software or firmware. Further still the example Trochilus server may include additional devices servers systems networks gateways portals and or processors in addition to or instead of those illustrated in and or may include more than one of any or all of the illustrated devices servers networks systems gateways portals and or processors.

The router receives and selectively forwards control packets to the Trochilus server .. This has the effect of having the Trochilus server . maintain the control state for the IP address space subset for each of the smaller servers . .. The Trochilus server . forwards IP packets and network traffic based on its destination to a selected one of the auxiliary routers . .. The selected auxiliary router is responsible for the IP address space associated with the destination. Based on the outgoing interface from the router hence incoming interface to the Trochilus server . the outgoing interface from the Trochilus server . is determined. show an example of interfaces between the auxiliary routers . . the larger router and the Trochilus server ..

An issue in current networks is the growth of routing and forwarding table sizes due to address fragmentation multihoming etc. The example Trochilus server . of solves this issue by using its forwarding capabilities to split a single large router s routing and forwarding capabilities into several auxiliary routers e.g. auxiliary routers . . . The Trochilus server . coupled with the router distributes the network traffic based on type control or data and in the case of IP packets also address. This configuration enables routers . . in the route splitting application to each be responsible for a subset of the address space. This solution enables fast router failover when subsets of the space overlap i.e. hot standbys and also enables power savings during off peak hours by powering down parts of the array.

The increase in Internet routing prefixes and line speeds indicate that new routers must replace older ones more frequently. This in turn reduces network reliability because new routers typically result in issues and therefore higher mean time to repair. The above described route splitting application using the Trochilus server . enables the addition of more routers e.g. the auxiliary routers . . to handle the load increase. Since these routers e.g. the auxiliary routers . . are assigned a subsection of IP address space the time to deploy is reduced as new auxiliary routers can incrementally be assigned IP address space which significantly improves network reliability.

Furthermore router replacement due to failures upgrades etc. can be performed locally e.g. by adding an auxiliary router . etc without relying on the network to reroute traffic e.g. since traffic is still routed to router . This eliminates the need for network reconvergence as well as congestion due to insufficient capacity for rerouted traffic. Because load from the router is distributed amongst multiple auxiliary routers . . line cards for routing IP traffic within the router maintain state to each router . . only for a subset of the address space. This configuration enabled by the Trochilus server . results in fewer routing and forwarding table entries for the router and enables better network scaling. Furthermore with the IP packet forwarding load reduced in the router more processing can be performed in the router for other applications such as for example processing at high resolutions using a Netflow monitoring application.

The example router communicates with external routers e.g. the routers via IP interfaces maintaining the same interface to the network as if the Trochilus server . was not present. shows the example Trochilus server . receiving IP control packets from the router via a connection . The example router receives the IP control packets from other communicatively coupled routers e.g. the routers . Upon receiving the IP control packets the router statically forwards the IP control packets to the Trochilus server . via the connection .

The example Trochilus server . of receives the IP control packets and selects one of the auxiliary routers . . to forward the IP control packets. For example in networks implemented with BGP advertisements for Network Layer Reachability Information if the IP control packets include a destination address of 12.x.x.x and the auxiliary router . is assigned the IP address subspace in the range of 12.x.x.x to 14.x.x.x then the Trochilus server . transmits the IP control packets to the auxiliary router . via a connection . Similarly the auxiliary routers . and . are assigned IP address subspaces of different ranges. In other examples in networks implemented with an Interior Gateway Protocol routing protocol like OSPF the Trochilus server . ensures that all auxiliary routers . . have the complete router level topology information e.g. Type 1 Latent Semantic Analysis LSA by transmitting the IP control packets to all of the auxiliary routers . .. However network reachability information e.g. Type 2 LSA may be filtered according to the auxiliary router . . to which the control message and or IP control packet is destined. Because the time scale at which the control plane operates is longer than that of the data plane the overhead of additional hops between the router and Trochilus server . as well as between the Trochilus server . and the routers . . is acceptable.

Upon transmitting the IP control packets to the auxiliary router . the Trochilus server . updates static forwarding and or routing tables within the router . Thus when the router receives IP data packets associated with the same destination IP address of the with the IP control packets the router statically forwards the IP data packets directly to the auxiliary router ..

In response to receiving IP control packets the auxiliary router . accesses routing and or forwarding tables to determine an interface to the router for transmitting the IP control packets. In the example of the auxiliary router . has a routing table that indicates IP packets with a destination address prefix of 12.x.x.x should be routed via interface A to the router while IP packets with a destination address prefix of 13.x.x.x 14.x.x.x should be routed via interface B to the router . Because the IP control packets are routed to the appropriate interface in the router the router is able to statically forward the IP control packets to the appropriate destination e.g. via interface A or B without accessing its own routing and or forwarding tables. Upon forwarding the IP control packets a control path is established for any IP data packets associated with the IP control packets.

Despite the fact that the network is implemented by BGP or OSPF the example auxiliary routers . . maintain routing and or forwarding tables for their assigned IP address region s . Each of the forwarding and or routing tables within the auxiliary routers . . is smaller than the single routing and or forwarding table that would be required by the router under a conventional approach. As a result the auxiliary routers . . provide better scaling for network traffic. Additionally when the average volume of network traffic surpasses the capacity of the three auxiliary routers . . a fourth auxiliary router may be added to the router array.

Furthermore the use of the auxiliary routers . . may be optimized for current network conditions by the Trochilus server . deactivating one or more of the auxiliary routers . . during less congested network times and activating more auxiliary routers during more congested network times. When auxiliary routers . . are deactivated the IP address subspace of the deactivated auxiliary routers . . may be distributed by the Trochilus server . to the remaining auxiliary routers . .. Likewise when additional auxiliary routers are added and or activated the example Trochilus server . may decrease the amount of IP address subspace for each auxiliary router . . and distribute the balance of IP address subspace to the newly added auxiliary router. The determination to activate and or deactivate auxiliary routers . . may be made by comparing one or more thresholds to current and or predicted network traffic. The example Trochilus server . may include these thresholds which may be defined by the service provider of .

Upon receiving the IP data packets the auxiliary router . accesses its routing and or forwarding tables to determine the appropriate interface to route the IP data packets. The auxiliary router . transmits the IP data packets via the determined interface to the router e.g. A or B . This interface subsequently determines the outgoing interface from router . It is an explicit goal of the Trochilus server . to ensure that no changes are necessary to external routers e.g. router nor the small ones e.g. the auxiliary routers . . . The interfaces used preferable match the original scenario. For example if the router is connected to the rest of the network via interfaces A and B then the auxiliary routers . . are preferably logically connected in the same manner. Thus auxiliary routers . . are connected to the network via interfaces A and B and the addition of one or more other auxiliary router s will not change their interface arrangement. Additionally the configuration of static routes for the router can be performed by the Trochilus server ..

The example packet switched communication network of includes a first communication path from a source to the router and a second communication path from the router to a destination . The communication paths and may be any type of communication path such as any of the communication paths described in in conjunction with the packet switched communication network . The source is communicatively coupled to the first communication path via an N interface with a network stack that corresponds to the network layer N for implementing the experimental protocol N. The router includes standard IP interfaces and for receiving and or transmitting IP packets having the IP protocol. The example Trochilus server . is communicatively coupled to the router . The Trochilus server . includes an N and IP interface for receiving packets with IP protocol headers and or packets with N protocol headers.

In the example packet switched communication system the example service provider includes the source for generating packets e.g. a packet for testing the experimental protocol N and a RG for transmitting the packets through the packet switched communication network . The gateway includes an N and IP interface for receiving packets with IP headers and or N headers. Additionally the packet switch communication network includes a destination with an N and IP interface . The destination may include another Trochilus server another section of the service provider and or any computing device connected to the second communication path .

To initiate the test experiment and or deployment of the experimental protocol the source generates the packet with a first header associated with the Ethernet and a second header associated with the network layer N. Because the packet may include an experimental and or non production protocol upon generation and transmission from the source and the router is configured to receive and or transmit packets with the IP protocol the RG inserts an IP shim header IP prior to transmitting the packet to the router . The IP shim header IP includes the IP address of the Trochilus server . as a destination address. Upon adding the IP shim header IP the RG transmits the packet to the router via the first communication path . The router receives the packet at the IP interface and reads the information within the IP shim header IP. The router determines the destination address corresponds to the Trochilus server . and statically forwards the packet to the Trochilus server . via the IP interface . The packet is forwarded along a connection to the N and IP interface of the Trochilus server .. Because the N and IP interface includes an interface for the experimental protocol N the example Trochilus server . is capable of determining and or manipulating the data within the second header .

The example Trochilus server . of receives the packet and determines the packet corresponds to the experimental protocol N. The Trochilus server . may analyze manipulate store and or modify any of the data within the packet and or within the headers depending on the desired procedure for testing and or deploying the experimental protocol N. Additionally in the example of the Trochilus server . inserts a tunneling header . The tunneling header is a generic routing encapsulation GRE IP header for routing the packet towards the destination via a connection to the IP interface of the router . In other examples where the packet is sent back to the source the tunneling header includes information for routing the packet via a connection . Because the packet is received via the connection the router statically forwards the packet to the service provider via the first communication path . Likewise because the packet is received via the connection the router statically forwards the IP packet to the destination via the second communication path . Additionally because the tunneling header only pertains to routing within the router the router removes the tunneling header as the packet passes through the router .

The packet in travels along the second communication path until it reaches the destination via the N and IP interface . The destination receives the packet and determines the packet is a non production packet corresponding to the experimental protocol N. As a result the destination may analyze manipulate store and or modify any of the data within the packet and or within the headers . Furthermore the destination may forward the packet to another destination not shown such as another Trochilus server . within the packet switched communication network .

The Trochilus data plane functions as a medium for the Trochilus servers to communicate and route network traffic. This provides greater spatial resolution of the entire packet switched communication network . For example if the Trochilus servers deploy an experimental prototype the more routers monitored by Trochilus servers the more information will be collected regarding the performance of the protocol under different conditions experienced by the routers . Additionally the Trochilus data plane enables better network testing by enabling transmission of packets to most if not all parts of the packet switched communication network thereby enabling a network provider to ensure most if not all sections of the network are tested. Through network wide experimentation and prototyping the Trochilus data plane provides a network provider production level test results without the associated risks. This enables a better understanding of new technologies such as experimental forwarding tables and or routing protocols prior to commercial release. As a result the service provider can make implementation decisions with a better understanding of how changes or updates in the forwarding tables and or routing protocols will affect network efficiency and traffic management without needing to update production router software.

Furthermore the Trochilus data plane provides a framework for route tracing network testing and or monitoring specific IP packets. For example by having Trochilus servers coupled to routers across the packet switched communication network the service provider is able to monitor the time route and number of hops IP packets take from a source IP address to a destination IP address. In another example the Trochilus data plane enables route splitting similar to the route splitting application of and reduction in the size of the forwarding tables of production routers by utilizing the Trochilus servers to share and distribute network traffic and or IP packets amongst themselves and or to other production routers. Such an approach reduces the processing and routing performed by the routers in the packet switched communication network . Additionally or alternatively the example topology of enables routing around trouble areas e.g. broken routers severed cables high traffic areas etc. within the packet switched communication network .

The example in shows the Trochilus servers implementing a network monitoring application through the use of trace rate limiting which reduces bandwidth consumption of routers e.g. the router closer to a destination e.g. a destination . Network traces may include probe packets of data associated with the IP protocol and or any other experimental and or product network monitoring application. In current network traces the traces aggregate as they approach a destination such as for example the destination . Using the Trochilus servers the traces are received at the next hop Trochilus server and processed. Then instead of forwarding the received traces the Trochilus server sends a single trace to the next hop router. For example the Trochilus server received traces for monitoring network performance from Trochilus servers and . The Trochilus server processes the two received traces and stores the monitoring data from the traces. The Trochilus server then sends a single trace to the next hop router e.g. the router coupled to Trochilus server . In this manner the destination receives a single trace from Trochilus server instead of the five traces prior art systems would require.

By transmitting network traces and or probe packets only one hop the effect of changes in the control plane implemented by the routers can be determined. Changes in the control plane can be determined from the probe packets by observing the probe packets as they traverse the network in regards to a specific aspect of network dynamics namely network reconvergence. More precisely the route trace monitoring shown in provides information as to when and which routers have updated their forwarding tables. Commonly available trace route tools rely on the expiration of a probe packet s Time to Live TTL and the Internet Control Message Protocol response from a corresponding router. Because probe packets with expiring TTLs are not normally processed they are usually handled by the router processor via a slower path than normal IP traffic. For high resolution tracing probe packets are sent at high rates which will result in either the route processor having fewer cycles for processing important routing updates which delays network convergence times or rate limiting that is performed during periods of high processor activity in which case the probe packet will be silently dropped when it is needed the most.

The timing information returned by the probe packet route is that of the round trip time to the router at which the probe terminated. Thus depending on the network conditions and path such information may have too much variance to be useful for example round trip time for transcontinental United States packets is about 100 milliseconds . In current backbone networks the high traffic volume requires enormous processing capabilities to deep inspect every probe packet. Gigascope is an example of a passive sniffer that provides focused observation of passing packets. A limitation of Gigascope is that it needs to be deployed in as many locations as possible to provide the required spatial resolution. Since Gigascope operates at the link layer by tapping into the optical link providing per physical link coverage cannot scale easily. Another limitation is that because Gigascope is passive its utility as a tracing tool is very much dependent on the traffic it is observing. Thus flows either single or aggregated that include packets interleaved at greater than 20 ms cannot be used if the tool is to provide resolutions less than 10 ms. However the Trochilus servers of implement a tracing e.g. probe packet tool application periodically by sending probe packets e.g. with just the IP header and no payload addressed to different destinations.

For example depending on the forwarding table entries the probe packets are forwarded to the corresponding next hop router which subsequently passes them to its attached Trochilus server . Using the source and destination IP addresses the Trochilus server infers the corresponding forwarding table entry in the previous hop router. By storing the last seen packet s address information on a per last hop router there are r number of them and per destination there are d number of them basis changes in the form of new entries can be used to trigger reports of routing changes and requires O rd states. Assuming IPv4 Internet Protocol version 4 addresses of 4 bytes each 10 neighboring routers and 100 major network points of presence serving as destinations this amounts to approximately 8 Kbytes of state.

With regards to bandwidth consumption if a resolution of about 10 ms is required and each packet has a size of 100 bytes the maximum bandwidth required of an outgoing link will be on the order of 8 Mbps. Furthermore because information from the Trochilus server is used offline in the central processing server reports detailing changes in routing state can be batched and sent to a predetermined location and can also be rate limited to smooth bandwidth consumption spikes.

Using network layer hooks provided by Trochilus servers and probe packets the impact of control plane changes on the data plane can be observed. Furthermore link level characteristics such as congestion and latency can be inferred. Changes in the control plane such as a link coming up or down impact multiple routers in the network. The Trochilus servers enable interception of probe packets at the immediate next hop hence providing high spatial resolution. Also removal of the probe packet at the next hop eliminates the aggregation effect thereby improving scalability.

In some examples the Trochilus servers send probe packets from every network router towards all destinations e.g. the destination . These probe packets are forwarded by their corresponding routers and intercepted at the next hop routers using the Trochilus servers . Inferences are made concerning router forwarding tables by observing the packets sources at the next hop routers . Interception of packets at the next hop enables high spatial resolution monitoring and their removal eliminates the aggregation effect hence improving scalability.

The Trochilus servers enable network operators e.g. the service provider to pinpoint problematic routers and links in the network. This reduces troubleshooting times and hence improves network reliability. With high temporal resolution observations of network changes such as fast recovery after failures can be made. Furthermore the Trochilus servers enable local processing and preferably only send changes and events of importance to the central processing server thereby reducing the bandwidth required. The in network component of the Trochilus servers functions to gather local data plane information disseminate the gathered information with best effort reliability amongst other Trochilus servers and serve as repositories for applications within the central processing server to retrieve and process data.

With the need to provide increasingly reliable end to end network communication near real time understanding of network dynamics at high temporal and spatial resolutions is useful for rapid troubleshooting and recovery. These requirements can be divided into two parts including near real time and high temporal spatial resolution. In near real time the amount of information generated by network elements can potentially be large. Rather than transmitting the information as is from the Trochilus servers to the central processing server thereby consuming bandwidth and resulting in large processing times as well as significant storage demands at the central processing server pre processing can be performed in the Trochilus servers before transmission. In high temporal and spatial resolution end to end paths may change either in quality or the routes taken due to events occurring at different points within the network. Solutions at the network edge are associated with latency incurred from the observation points to the event sources as well as lack of knowledge of the network state which is especially true during link failures and route re convergence.

The example Trochilus servers of meet the above two requirements. Because the Trochilus servers reside in network they enable pre processing before long distance transmission and also reduce the delay between event occurrence and observation. The example Trochilus servers enable a more complete picture of the network by monitoring the different control planes and the data plane. Monitoring the data plane is especially important since changes in the control planes ultimately impact the data plane the data plane can fail independently of the control planes and observations of the data plane such as latency and loss reveal more about the end user experience. The example Trochilus servers monitor the impact of control planes on data. For example link weight changes can cause flows to traverse different paths. To observe this effect the example Trochilus servers utilize existing control planes and hence use of IP addressing and routing .

On the other hand since high spatial resolution views are desired the IP packets generated and transmitted by the Trochilus servers should be detected soon in terms of space after transmission for instance at the first hop router . The Trochilus servers enable interception of probe and or IP packets while reusing the existing control plane. A dense network of Trochilus servers ensures high spatial resolution and controlled active probes provide consistent temporal resolution.

Upon collecting and analyzing the probe packets the Trochilus servers transmit the probe packet data to the central processing server . The example central processing server processes the probe packet data based on end user requirements. For a route change monitoring application next hop data can be pieced together to obtain per destination network wide routes. For example the central processing server may piece net hop information between the routers and and net hop information between the routers and to determine the performance of the network communication path from the router to the router . From the collected probe packet data the central processing server can determine from the routers routing table information routing table changes network state any changes to the network state network and or router reliability network and or router quality network and or router performance network congestion and or one or more trouble areas within the network. End users e.g. the network provider may use a web interface to view processed data produced by the application servers.

One hop information i.e. the route from router to router is inferred via probes sent at intervals necessary to meet application requirements. For example a route change detection granularity of 100 ms will need probes to be sent every 50 ms. On the other hand link capacity can be determined via packet pairs including two packets transmitted back to back.

For example the trace of the path taken by a probe packet begins at the source Trochilus server . Based on the destination IP address e.g. the destination trace path which is not necessarily the address of the next hop Trochilus server the probe packet is forwarded to the neighboring router . At the router the packet is identified as residing within the Trochilus server domain e.g. by using pre defined source IP addresses and statically forwarded to the Trochilus server . From data carried within the payload of the probe packet such as the source identifier and timestamp the Trochilus server can infer information pertaining to routing state and link latency. Additionally to ensure fast dissemination and non reliance on routing the Trochilus server broadcasts information throughout the network and avoids repeated flooding through the use of sequence numbers to detect duplicate probe packets.

From the point of view of the example Trochilus servers of no explicit knowledge of next hop neighbors is used when sending probe packets. Specifically each node does not maintain a neighbor table and or does not send periodic keep alive messages. These probe packets are sent to pre determined destinations which are statically configured and previous hops are inferred upon reception of the probes.

Dependence on and maintenance of neighbor information can incur additional delay because it must react to the very routing changes it is attempting to detect and increases the overall complexity. Since network events are likely to be bursty for example a link failure may trigger multiple destination unreachable messages dissemination of event notifications may temporarily consume excessive bandwidth and affect measurements of different network states. The example Trochilus servers discussed herein minimizes this effect by piggy backing notification messages on probe packets hence rate limiting them at the expense of increasing dissemination delay.

With regards to reliability the dissemination mechanism implements best effort transmission and lazy recovery in the sense that attempts to detect and recover missing data are initiated only upon request by applications in the Trochilus servers . Similar to information broadcasts recovery requests are flooded and cached to eliminate duplicates. Furthermore network event information which has been gathered in a broadcast best effort manner can be retrieved via a simple interface supported by any Trochilus server .

Applications at the Trochilus servers gather local data plane information and process the information to provide network wide views that meet end user requirements. An example generic interface exported by in network Trochilus servers and applications enabling the polling and or pushing of data is shown in the following example code.

In an example an application on the Trochilus server capturing routing changes in the network may piece together the knowledge of a flow that previously traversed the router to the router and is now traversing the router to the router . Since the underlying in network Trochilus servers disseminate network event information to all other Trochilus servers an application on the Trochilus server needs only communicate with just one other Trochilus server. This increases the likelihood of being able to retrieve troubleshooting data in the event of multiple irrecoverable network failures. The application on the Trochilus servers hosts a web interface to enable end user interaction via browsers.

Examples of the changes made to router configurations include modifications to interfaces access lists and route maps. Each interface configuration requires a single line indicating the route map to use which specifies the access list defining matching packets and also the next hop node to which matched packets are forwarded. By identifying packets residing in the Trochilus server domain using their source IP address the number of configuration lines required in the access list is constant. In turn together with usage of a single Trochilus server as the next hop the number of configuration lines required in the route map is also constant.

The kind of processing employed is dependent on the aspect of the data plane being monitored. Route change monitoring may detect incoming probes assuming that multiplexing of application packets takes place at a higher layer and that the router therefore only needs to distinguish between Trochilus and non Trochilus packets previously not sent from the corresponding neighbor. Such a change in received packets indicates that the forwarding information base of the previous hop router has changed ignoring initialization . In addition probes are also sent at intervals necessary to meet application requirements. For example if routing changes are to be detected within 100 ms then probe packets should be sent at intervals of 50 ms.

Sockets of type SOCK PACKET are used when transmitting outgoing probe packets. Unlike SOCK RAW sockets link headers must be constructed in addition to IP headers before transmission. Another difference is the bypassing of the network routing table which is consistent with the need to build link headers since this implies that the outgoing interface has already been determined.

The central processing server retrieves locally generated data plane information from the Trochilus servers and pieces it together to obtain the global network view. Using the interfaces the application begins by retrieving the current network state as well as the history of changes using a get data function. Next future events are pushed to the server by notifying the Trochilus servers . Using the example of route change detection new network topologies are generated upon reception of each event and displayed in graphical form thereby simplifying the detection and analysis of changes. These topologies are subsequently made available via a web interface for ease of usage.

The example machine accessible instructions of begin when the Trochilus server . receives an IP packet from a communicatively coupled router e.g. router . The received IP packet is filtered in the Trochilus server . block by determining if the received IP packet is a non production IP packet block . If the IP packet is not a non production IP packet e.g. the packet is a production IP packet the Trochilus server . transmits the IP packet back to the communicatively coupled router block . If the IP packet is a non production IP packet the Trochilus server . determines if the IP packet includes network monitoring information block . To make the determination at block the Trochilus server . may check a type of service field and or a protocol field in the IP header of the IP packet. If the IP packet does not contain network monitoring information block the Trochilus server . determines if information within the IP packet should be modified according to criteria specified by a network provider block .

If the Trochilus server . determines the IP packet includes network monitoring data block the Trochilus server . saves the monitoring data within the IP packet to a performance database block . The network monitoring data may include for example the time for the IP packet to traverse the network from a source IP address to the destination Trochilus server . the number of hops the IP packet made the route of the IP packet to reach the Trochilus server . and or any other network performance and or network routing information.

Once the network monitoring data is saved from the IP packet block or if no monitoring data is present block the Trochilus server . determines if the IP packet should be modified block . The Trochilus server . may use IP headers in the IP packet and or other criteria specified by a network provider to determine if the IP packet is to be modified. If the IP packet is not to be modified block the Trochilus server . determines if the IP packet is to be transmitted back to the network block . If the IP packet is to be modified block the Trochilus server . uses information within the IP packet IP header and or conditions specified by a network provider to modify fields within the IP packet block . The fields for modification may include the source IP address field the destination IP address field a type of service field a time to live field a protocol field and or a data field. The Trochilus server . modifies the IP packet in cases where the IP packet is to be routed to a different destination for protocol prototyping and or network monitoring. Additionally the IP packet may be modified for route splitting applications. Upon modifying the IP packet block or if no modification is to occur block the Trochilus server . determines if the modified IP packet is to be transmitted to the network block .

The Trochilus server . determines if the IP packet is to be transmitted by the destination IP address field block . If the field matches the address of the Trochilus server . block the IP packet has reached its destination and the IP packet is discarded block . Alternatively if the destination IP address does not match the IP address of the Trochilus server . block the Trochilus server . transmits the IP packet block . The Trochilus server . transmits the IP packet by sending the IP packet to a communicatively coupled router e.g. router . In a route splitting application the IP packet may be sent to an auxiliary router within the coupled router which then forwards the IP packet to the next hop. The router uses dynamic forwarding tables to determine the next hop for the IP packet or the router uses static forwarding and forwards the received IP packet to the next hop specified by the Trochilus server .. Once the IP packet is transmitted from the Trochilus server . block or the IP packet is discarded block the example instructions begin again by processing another IP packet.

The example machine accessible instructions of begin when a router receives IP control packets from a source. The source may include a Trochilus server . . one of the routers of and or any other device capable of generating IP control packets. Based on a destination IP address within the IP control packets the router statically forwards the IP control packet to a communicatively coupled Trochilus server block .

The Trochilus server receives the IP control packet and determines the destination address within the IP control packet block . The Trochilus server then matches the destination IP address to an IP address subspace of an auxiliary router within a router array block . The Trochilus server may match the destination IP address by determining which IP address subspace range corresponds to the destination IP address and then identifies the auxiliary router associated with that range. If the Trochilus server cannot match the destination IP address to an IP address subspace block the Trochilus server transmits the IP control packet back to the router for routing and transmission to the destination block . The example machine accessible instructions begin again and process another IP control packet.

However if the Trochilus server is able to match the destination IP address within the IP control packets to an IP address subspace block the Trochilus server transmits the IP control packets to the auxiliary router associated with the matched IP subspace block . Additionally the Trochilus server may update routing and or forwarding tables within the router such that any IP data packets associated with the IP control packets are statistically forwarded to the auxiliary router. In response to receiving the IP control packets the auxiliary router accesses a packet routing and or forwarding table block . The routing and or forwarding table may be included within the auxiliary router or alternatively within the Trochilus server. The packet routing and or forwarding table includes a listing of interfaces within the router and a range of IP addresses associated to each interface. The packet routing and or forwarding table may be defined by a service provider the router and or the Trochilus server. The auxiliary router determines if the destination address within the received IP control packets matches a range of IP addresses associated with an interface block . If there is not a match block the auxiliary router transmits the IP control packets to a designated default interface in the router for transmission to the destination block . The example machine accessible instructions then begin again and process another IP control packet.

Alternatively if the auxiliary router is able to match the destination address to a range of IP addresses block the auxiliary router transmits the IP control packets to the interface corresponding to the matching range of IP addresses block . The example machine accessible instructions continue in when upon receiving the IP control packets via the interface the router statically forwards the IP control packets to the destination block . At this point a control path is established for any IP data packets associated with the IP control packets block . Then the example machine accessible instructions of begin again and process another IP control packet.

The example machine accessible instructions of begin when the router described above in connection with receives IP data packets associated with the IP control packets block . The control path is established block in by the Trochilus server updating the forwarding tables within the router. In the machine accessible instructions of the router determines if a control path is established for the IP data packets block . The router may determine if a control path is established by accessing a destination IP address within the IP data packets and examining if that destination IP address is included within routing and or forwarding tables for static forwarding to an auxiliary router. If a control path is not established block the router buffers the IP data packets as it continues to receive any additional IP data packets with the same destination IP address block .

However if the path is established block the router forwards the IP data packets to the auxiliary router block . The auxiliary router which may also be referred to as a sub router receivers the IP data packets and accesses a packet routing and or forwarding table to determine an interface within the router for routing the IP data packets through bock . The packet routing and or forwarding table includes a listing of interfaces within the router and a range of IP addresses associated with each interface. Upon matching an interface to the IP data packets the auxiliary router transmits the IP data packets to the router via the interface block . In response to receiving the IP data packets via the interface the router statically forwards the IP data packets to the destination specified by the interface block and the example machine accessible instructions begin again and process another IP data packet.

The example machine accessible instructions of begin when a Trochilus server receives a first probe packet statically forwarded from a communicatively coupled router block . The probe packet had been transmitted to the router from another Trochilus server that is one hop away in a network from the router. In other examples a source controlled by a network provider may have transmitted the probe packet. In response to receiving the first probe packet the Trochilus server filters the first probe packet block . The Trochilus server may filter by protocol type included within the first probe packet.

The Trochilus server then analyzes the first probe packet block . To analyze the first probe packet the first probe packet may include for example a source identifier a timestamp for when the first probe packet was generated information pertaining to a routing state of the communication path the probe packet traveled to reach the Trochilus server a protocol type and or a link latency. The data within the first probe packet may be analyzed by determining a time to route the first probe packet to the router a quality of the communication path a link latency of the communication path a performance of the communication path the protocol quality the protocol performance and or the protocol reliability. Additionally the Trochilus server may analyze other received probe packets and or communication s with other Trochilus servers while analyzing the first probe packet.

Upon analyzing the first probe packet block the Trochilus server determines if the final destination of the first probe packet is the Trochilus server by accessing a destination IP address field block . If the Trochilus server is not the final destination the Trochilus server generates a second probe packet that includes some of the source information include within the first probe packet block . The Trochilus server then transmits the second probe packet towards the destination via the router block . In traveling to the final destination the second probe packet will be intercepted within the next one hop Trochilus server for analysis preformed similarly to or identical to the example machine accessible instructions of .

However if the Trochilus server is the final destination of the first probe packet block the Trochilus server terminates the first probe packet by not generating a second probe packet block . The Trochilus server then stores the first probe packet and or the analyzed data of the first probe packet block . The Trochilus server determines if the stored probe packet data should be transmitted to a control processing server within a network provider block . Alternatively the central processing server may request the probe packet data from the Trochilus server. If the probe packet data should not yet be transmitted to the central processing server block the Trochilus server continues receiving probe packets for analysis block . However if the Trochilus server is to transmit the probe packet data the Trochilus server sends the probe packet data to the central processing server for further network analysis and the example machine accessible instructions loop back and process another probe packet.

The system of the illustrated example includes a processor such as a general purpose programmable processor. The processor includes a local memory and executes coded instructions present in the local memory and or in another memory device. The coded instructions may include some or all of the instructions represented in A B C and or . The processor may be any type of processing unit such as one or more microprocessors from the Intel Centrino family of microprocessors the Intel Pentium family of microprocessors the Intel Itanium family of microprocessors the Intel Core family of microprocessors and or the Intel XScale family of processors. Of course other processors from other families are also appropriate.

The processor is in communication with a main memory including a volatile memory and a non volatile memory via a bus . The volatile memory may be implemented by Static Random Access Memory SRAM Synchronous Dynamic Random Access Memory SDRAM Dynamic Random Access Memory DRAM RAMBUS Dynamic Random Access Memory RDRAM and or any other type of random access memory device. The non volatile memory may be implemented by flash memory and or any other desired type of memory device. Access to the main memory is typically controlled by a memory controller.

The computer also includes an interface circuit . The interface circuit may be implemented by any type of interface standard such as an Ethernet interface a universal serial bus USB and or a third generation input output 3GIO interface.

One or more input devices are connected to the interface circuit . The input device s permit a user to enter data and commands into the processor . The input device s can be implemented by for example a keyboard a mouse a touchscreen a track pad a trackball an isopoint and or a voice recognition system.

One or more output devices are also connected to the interface circuit . The output devices can be implemented for example by display devices e.g. a liquid crystal display a cathode ray tube display CRT by a printer and or by speakers. The interface circuit thus typically includes a graphics driver card.

The interface circuit also includes a communication device such as a modem or network interface card to facilitate exchange of data with external computers via a network e.g. an Ethernet connection a digital subscriber line DSL a telephone line coaxial cable a cellular telephone system etc. .

The computer also includes one or more mass storage devices for storing software and data. Examples of such mass storage devices include floppy disk drives hard drive disks compact disk drives and digital versatile disk DVD drives. The mass storage devices may implement any or all of the example route database and or the example performance database . Additionally or alternatively the volatile memory may implement any or all of the example route database and or the example performance database .

At least some of the above described example methods and or system are implemented by one or more software and or firmware programs running on a computer processor. However dedicated hardware implementations including but not limited to application specific integrated circuits programmable logic arrays and other hardware devices can likewise be constructed to implement some or all of the example methods and or apparatus described herein either in whole or in part. Furthermore alternative software implementations including but not limited to distributed processing or component object distributed processing parallel processing or virtual machine processing can also be constructed to implement the example methods and or apparatus described herein.

It should also be noted that the example software and or firmware implementations described herein are stored on a tangible storage medium such as a magnetic medium e.g. a magnetic disk or tape a magneto optical or optical medium such as an optical disk or a solid state medium such as a memory card or other package that houses one or more read only non volatile memories random access memories or other re writable volatile memories. Accordingly the example software and or firmware described herein can be stored on a tangible storage medium such as those described above or successor storage media.

To the extent the above specification describes example components and functions with reference to particular standards and protocols it is understood that the scope of this patent is not limited to such standards and protocols. For instance each of the standards for internet and other packet switched network transmission e.g. Transmission Control Protocol TCP Internet Protocol IP User Datagram Protocol UDP IP HyperText Markup Language HTML HyperText Transfer Protocol HTTP represent examples of the current state of the art. Such standards are periodically superseded by faster or more efficient equivalents having the same general functionality. Accordingly replacement standards and protocols having similar functions are equivalents which are contemplated by this patent and are intended to be included within the scope of the accompanying claims.

Additionally although this patent discloses example systems including software or firmware executed on hardware it should be noted that such systems are merely illustrative and should not be considered as limiting. For example it is contemplated that any or all of these hardware and software components could be embodied exclusively in hardware exclusively in software exclusively in firmware or in some combination of hardware firmware and or software. Accordingly while the above specification described example systems methods and articles of manufacture the examples are not the only way to implement such systems methods and articles of manufacture. Therefore although certain example methods apparatus and articles of manufacture have been described herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all methods apparatus and articles of manufacture fairly falling within the scope of the appended claims either literally or under the doctrine of equivalents.

