---

title: Action flow client framework
abstract: Interface control(s) associated with declaratively defining an action flow are provided; the action flow includes a desired outcome of an action flow. Information associated with a user interface page is received; this information includes a state during which the user interface page is displayed. Information associated with a business service associated with a content management server is received; that information includes a state during which the business service is performed on the content management server. In the action flow definition, a first association between the user interface page and the state during which the user interface page is displayed and a second association between the business service and the state during which the business service is invoked on the content management server are recorded.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09189761&OS=09189761&RS=09189761
owner: EMC Corporation
number: 09189761
owner_city: Hopkinton
owner_country: US
publication_date: 20120517
---
Content management applications such as EMC Documentum provide services and processes for managing documents and or content for large enterprises. Some example services or processes provided by a content management application include shepherding content or documents through various stages or steps for example to collect data get approval store information and so on related to a particular line of business. A content management application may ensure as an example proper company and or regulatory procedure has been followed and or no item is forgotten or left behind at a particular step. In some cases a content management application provides a generalized out of the box platform or framework for creating managing and storing content and the out of the box platform is customized for a customer s specific needs. For example a pharmaceutical company may customize a content management application for their particular needs related to product development e.g. to track the progress of drug development from research and development in the laboratory through clinical drug trials .

It is desirable for such content management applications to have channels by which information can be exchanged with people who are not employees of a company for example customers of a bank who want to apply for a loan. It is further desirable if content management applications e.g. EMC Documentum offered techniques by which their customers e.g. a bank could create an action flow e.g. a web based loan application which offers advantages during the design phase e.g. when a loan application is created or updated and or at run time e.g. when an applicant accesses a loan application .

The invention can be implemented in numerous ways including as a process an apparatus a system a composition of matter a computer program product embodied on a computer readable storage medium and or a processor such as a processor configured to execute instructions stored on and or provided by a memory coupled to the processor. In this specification these implementations or any other form that the invention may take may be referred to as techniques. In general the order of the steps of disclosed processes may be altered within the scope of the invention. Unless stated otherwise a component such as a processor or a memory described as being configured to perform a task may be implemented as a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. As used herein the term processor refers to one or more devices circuits and or processing cores configured to process data such as computer program instructions.

A detailed description of one or more embodiments of the invention is provided below along with accompanying figures that illustrate the principles of the invention. The invention is described in connection with such embodiments but the invention is not limited to any embodiment. The scope of the invention is limited only by the claims and the invention encompasses numerous alternatives modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the invention. These details are provided for the purpose of example and the invention may be practiced according to the claims without some or all of these specific details. For the purpose of clarity technical material that is known in the technical fields related to the invention has not been described in detail so that the invention is not unnecessarily obscured.

A variety of techniques associated with action flows is described herein. Some of the techniques described herein are associated with creating or modifying action flow definitions. For example interface controls associated with declaratively defining an action flow are provided. Declaratively defined action flows includes a desired outcome of an action flow e.g. as opposed to imperatively defined where an algorithm or process is specifically and or explicitly provided. Via these interface controls information about the action flow e.g. to be stored in the action flow definition is received. For example a user interface page and an associated state during which the user interface page is displayed is received and a business service e.g. stored on a content management server and an associated state during which the business service is performed on the content management server is received associations between these things are recorded in an action flow definition. Some of the techniques described here are associated with running or otherwise providing an action flow. For example a front end server may provide to a client device an action flow definition which includes an association between a user interface page and a state during which the user interface page is displayed as well as an association between a business service and a state during which the business service is performed on the content management. The action flow definition is agnostic with respect to user interface technology e.g. on the client device associated with displaying e.g. a desired sequence or flow of states is described without describing how that sequence or flow is achieved . The client device which receives the action flow definition is configured to perform the action flow definition for example by displaying the user interface page at the appropriate state and triggering the business service to be performed on the content management server during the appropriate state. A content management server is configured to perform in response to the trigger from the client the business service. Performing at least some of the action flow definition on a client device may be desirable since it may produce as better user experience e.g. not having to reload an entire page as a result of having to ask a server for instruction and or have better performance e.g. not affected by a slow network connection and or an overloaded server .

In one example a content management application running on content management server associated with EMC Documentum which has generic out of the box functionality which is customized and or supplemented with business specific business processes and services for creating managing storing and or accessing content or documents. For example a bank may create processes and services for ensuring that regulatory requirements are complied with e.g. a process to calculate the amount of FDIC insurance the bank has to pay for checking and savings accounts a process to ensure proper tracking of cost basis for investment accounts in order to comply with IRS reporting regulations etc. as well as business services related to company specific policies e.g. a business service that ensures that a credit check is done on all loan applicants a business service that automatically approves or declines loan applications based on specified income criteria and specified credit scores etc. . The same content management application e.g. EMC Documentum with its generic out of the box processes and services may also be used by and customized for a pharmaceutical company to manage and track documents and document content related to product development e.g. storing managing and tracking content related to the various stages of drug trials and FDA approval .

Client device exchanges information with content management server via network and front end server . Some examples of client device include mobile telephones computers including laptops and desktop computers tablets and e readers. A customer of a bank may use client device to access content stored in and or provide new content for content management server . For example via a web interface a customer of a bank may use client device to create a new loan application or update a saved application. A loan applicant may use client device to provide the content of a loan application e.g. the name of loan applicant the applicant s address etc. which is then transferred to and stored in content database in content management server .

Loan applications and other user interfaces are referred to more generally as action flows. Processes and services associated with creating accessing and or managing action flows are stored on and provided by front end server . Action flows include user interface pages transitions between user interface pages and business services to be performed at various points in the action flow. A bank employee to continue the example above may access front end server in order to declaratively define the components of an action flow e.g. a user interface page a transition etc. and the relationships between them. In some embodiments the components such as a user interface page or a business service are already created and front end server is directed to the already created component by a user e.g. a bank employee tasked with creating a loan application . In some embodiments front end server includes a process or service by which a component is created or synthesized e.g. from scratch .

Once an action flow is defined information associated the action flow is stored on front end server as an action flow definition. An action flow definition stored on front end server describes for example what user interface pages transitions and business services are included in an action flow and how they are connected so that an entity e.g. client device knows how to properly provide or otherwise execute the action flow. A stored action flow definition may later be updated using front end server .

In this example an action flow definition is at least partially executed on client device for example when a loan applicant is applying for a loan the action flow definition associated with the loan application is executed at least in part by client device . Front end server may transfer to client device processes logic and or executables to be performed by or on client device which describe the action flow. This enables client device to know how to respond to user interaction with the action flow without for example having to contact front end server for instruction or guidance. This may include running on client device local processes e.g. data transformations error checking etc. on data entered by a user without for example uploading the data to front end server for processing and having the front end server return the process results if any. Client device would also know for example the transitions between user interface pages and thus what user interface page to display next based on for example the current user interface page and input from the user. Similarly this is done by client device without consulting front end server as to what user interface page should be displayed next given the current state and input.

The system described herein has a number of advantages some of which are related to creation and or update of action flows. To continue the loan application example the system provides processes and services tools via which a bank employee can declaratively define components of the action flow. As used herein a declaratively defined action flow includes a desired outcome of an action flow but does not for example include an executable step associated with achieving the desired outcome. A desired progression or sequence of states and or actions in an action flow may be defined without limiting it or tying it to a specific underlying set of instructions or being hard coded to a specific programming language or technology. Put another way a declaratively defined action flow describes what happens but not necessarily how it happens. This permits non technical users with industry specific or company specific expertise to construct an action flow without requiring extensive technical knowledge. Another advantage to the system is that update of and or modification to an existing action flow is made easier. Some other systems have actions flows that are hard coded or tightly coupled to a specific implementation making updates and modifications difficult. The system described herein permits declarative definitions which are much more easily modified for example if a new business service is created and needs inserted into the action flow.

Some other benefits of the system are related to or are observable at run or execution time e.g. when an applicant accesses and fills out a loan application . Execution is performed at least in part on client device which may offer better performance and or an improved user experience than other systems which require much more instruction or guidance from a server. For example since client device does not need to access front end server for every single thing the system is not subject to a slow network or an overloaded front end server . In some cases going to a server for instruction or guidance would require an entire user interface page to be re loaded even if only some of the user interface page is affected. Using the techniques described herein it may not be necessary to re load the entire page and it may be possible re draw only that portion of the user interface page which needs to be updated or changed. For example instead of observing a completely blank or empty page only a portion of the page is redrawn.

Another run time benefit to declaratively defining an action flow is that the resulting action flow is agnostic with respect to user interface technologies which may be used by the client device to display the action flow and is thus not tied to a particular technology. This may permit a variety of technologies to be installed on client device . For example the declaratively defined action flow definition may work with Sencha Ext JS jQuery and or YUI.

At one or more interface controls associated with declaratively defining an action flow is are provided where the declaratively defined action flow includes a desired outcome of an action flow. In various embodiments a variety of interface controls may be provided including but not limited to a drag and drop interface pull down menus radio dials or check boxes etc. In various embodiments the interface controls are associated with a variety of tasks or actions such as file management e.g. saving an action flow definition opening an action flow definition closing the application etc. assignment of properties or other information to a selected component of an action flow definition e.g. assigning a name to a selected state assigning a transition to a selected state assigning a business service to be invoked during a selected state etc. error checking the current state of the action flow definition or simulating the current state of the action flow definition.

Via the one or more interface controls information associated with a user interface page is received where the received information associated with the user interface page includes a state during which the user interface page is displayed at . For example the provided user interface controls may search for user interface pages e.g. based on file extension or file type or in a location where files containing user interface pages are expected to be stored and present the detected user interface pages to a user. The user may select from the presented list a user interface page to associate with the selected state. Alternatively the user may go navigate through a file system hierarchy to select a desired user interface page.

At via the one or more interface controls information associated with a business service associated with a content management server is received where the received information associated with the business service includes a state during which the business service is performed on the content management server. As above in some embodiments interface controls may present a list of detected business services or a user may navigate through a file system hierarchy to select a desired business service to associate with a selected state.

At a first association between the user interface page and the state during which the user interface page is displayed and a second association between the business service and the state during which the business service is invoked on the content management server is recorded in the action flow definition. In some embodiments the action flow definition is stored on front end server in until it is needed by client device at which time is transformed and or compiled as or if needed and then transferred to client device .

At an action flow definition is provided to a client device where the action flow definition includes a first association between a user interface page and a first state during which the user interface page is displayed and a second association between a business service associated with a content management server and a second state during which the business service is performed on the content management server the action flow definition is agnostic with respect to user interface technology on the client device associated with displaying the client device is configured to perform the action flow definition including by displaying the user interface page during the first state and triggering the business service to be performed on the content management server during the second state. In for example using a provided action flow definition client device does not need to consult with front end server in order to provide or perform the action flow definition e.g. associated with a web based a loan application from which loan application content will eventually be sent to content database and or processed by processes for content . Furthermore the action flow definition is not tied to a particular user interface technology associated with displaying e.g. Sencha Ext JS jQuery and or YUI so that client device may employ a variety of technologies and the provided action flow definition is compatible with all of them. In some embodiments an action flow definition is described in JavaScript Object Notation JSON . In some embodiments there is some generation process where a provided copy of an action flow definition is generated from a local copy of an action flow definition on a front end server. For example a version of an action flow definition on the front end server may be transformed compiled and so on before being distributed e.g. to a client device .

At in response to the trigger from the client the business service is performed. In for example client device sends a message or other trigger to content management server to perform a business service which is stored in processes for content . In some embodiments a process stored in is expecting to operate on data stored in content database and data is copied or otherwise moved to content database prior to or as part of the process of executing a business service. In some embodiments while a business service is being performed e.g. on a content management server a user of the action flow e.g. a loan applicant does not interact at least temporarily with the action flow e.g. because the applicant has provided all of the requested information for this stage of the application process and has at least temporarily concluded interaction with the action flow .

To more clearly describe the techniques described herein an exemplary action flow definition is described below in . Then describe an example of how the exemplary action flow in is created or otherwise defined e.g. when a bank employee creates the exemplary loan application . then describe an example of what happens to the exemplary action flow definition of at run or execution time e.g. when an applicant is interacting with the exemplary loan application .

In addition to the user interface pages shown there may be additional user interface pages and associated transitions. For example there may be a user interface page associated with an error message which is displayed if an error checking process e.g. performed at a client device detects that the applicant SSN field as an example does not have exactly 9 characters and all of those characters are numbers. In various embodiments various error checks may be performed.

In some embodiments the transition from user interface page to user interface page or does not necessitate the entire user interface page to be reloaded. For example rather than re loading all of user interface page or only car information section or house information section is refreshed. Instead of a viewer seeing a temporarily blank or otherwise empty user interface page e.g. caused by the entire page refreshing as a result of consulting a server for instructions the upper portion of user interface pages and may remain the same and only bottom portions and are updated.

The exemplary action flow begins at view state basic information collection user interface. In this view state user interface page in is displayed for example to a loan applicant in response to a request to begin a loan application. In some embodiments a beginning state is marked or flagged to indicate that it is the beginning of the action flow. In action state an error check is performed. In this example the error check performs error checking on the information entered into user interface page by a loan applicant. The error check for example checks to ensure that all required fields have a entry that the social security number entered has the correct number of characters and all of those characters are numbers as opposed to special characters or letters and so on. In some embodiments an error check associated with action state is run on a client device e.g. as opposed to having the error checking done by or on a server . In some embodiments action state is triggered or otherwise entered based on a user interaction with the action flow e.g. by pressing an Enter button not shown on user interface page in .

At decision state if there are any errors then the action flow goes to view state error message user interface page and then returns to view state i.e. basic information collection user interface page . If there are no errors at decision state then the action flow goes to decision state loan type. If the loan type specified in the loan type field is a mortgage then the action flow goes to view state house information collection user interface page. In view state user interface page in is displayed.

Action state i.e. mortgage business service comes after view state i.e. house information collection user interface page . In some embodiments action state is entered or triggered based on a user interaction with the action flow for example by pressing an Enter button in user interface page in after providing information about a house for which a mortgage is desired. In some embodiments an applicant s interaction with the exemplary loan application ends at least temporarily after view state . An applicant may for example wait for the bank to gather more information and await a decision on the loan application. In various embodiments a mortgage business service includes a variety of e.g. back end processes or actions related to a mortgage application. Some examples include retrieving a credit history or a credit score from a third party e.g. a credit rating agency such as FICO TransUnion etc. confirming that an applicant actually has the down payment required or income specified in a loan application initiating a home inspection and home appraisal sending a notification to a loan officer if one or more events are approaching a deadline or have exceeded a deadline and or sending a notification to a loan officer that all required actions have been completed.

In some embodiments a business service such as the mortgage business service associated with action state is stored on and run on a content management server and results if any are returned from the content management server to a client device via a front end server. For example for security reasons a company may wish to retain control of business services and not download processes or executables onto an unknown device which may potentially result in the exposure of sensitive business practices and or proprietary information to a malicious entity. In some embodiments this is because a client device may be turned off at times e.g. while an applicant waits for a decision from a bank and it may be desirable to execute a business service on a device which will not be turned off unexpectedly.

Decision state i.e. mortgage decision occurs after action state i.e. mortgage business decision . If the mortgage application is approved the action flow goes to end state loan approved. In some embodiments an end state triggers a business service such as a notifying the applicant or a bank officer that the loan has been approved and or tagging related content in a content management server so that processes running on the content management server can properly manage that information. For example the contents of the loan application are flagged as approved and or migrated to storage associated with approved applications so that retention policies appropriate for approved loan application are applied to the loan application content as opposed to retention policies associated with pending or denied application e.g. pending applications are deleted if they languish for 90 days and denied applications are deleted at the end of the month whereas approved applications are kept for the duration of the loan plus 3 years after payoff . Similarly end state i.e. loan denied may trigger or otherwise be associated with a variety of business services or other processes. In some embodiments at least some processes associated with states are performed on a server e.g. because a client device is not necessarily guaranteed to be on at this time .

If the loan type specified in the loan type field is a car loan then the action flow goes from decision state to view state i.e. car information collection user interface page . In this state user interface page in is displayed. Similar to the mortgage branch of the action flow action state i.e. car loan business service follows view state i.e. car information collection user interface page . As above action state may be triggered or entered as a result of a variety of conditions or events. In various embodiments a car loan business service is stored on and run on a content management server e.g. in and or includes a variety of e.g. back end processes and tasks related to a car loan such as obtaining a credit score or other type of credit information for an applicant pricing the car through a variety of channels or sources e.g. Kelley blue book for used cars or an invoice price between a dealer and a manufacturer for new cars and verifying proof of automobile insurance and or a driver s license notifying a loan officer notifying a car salesperson and so on.

Decision state follows action state . If the car loan decision at is to approve the loan then the action flow goes to end state i.e. loan approved . If the car loan decision at is to deny the loan then the action flow goes to end state i.e. loan denied . In various embodiments various business services or other actions are triggered or initiated by end states or . In some embodiments car loans and mortgages have different end states.

An action file definition may include record associations connections and other information so that when the action file definition is accessed and performed the action flow is able to be properly provided or otherwise performed by the executing entity e.g. a client device . For example an action flow definition may record that user interface page in is associated with view state e.g. so that it is known to present that user interface page during view state an action flow definition may record that action state follows view state an action file definition may record an association between action state and an associated mortgage business service on a content management server e.g. so that it is known to invoke the mortgage business service during action state and so on.

The following figures describe creation of an action flow description associated with the exemplary loan application for example by a bank employee as well as how the action flow definition is interpreted or otherwise executed at run time or execution time.

Front end server includes action flow interface and action flow editor . A bank employee or other user tasked with creating an action flow definition for a loan application uses action flow editor to create or otherwise define the action flow definition. One example of an action flow editor is EMC Documentum xCP Designer which is an Eclipse based application designer to the EMC Documentum content management application.

An action flow editor provides a way for the exemplary bank employee to create an action flow definition in a declarative manner. In some embodiments action flow editor is a stand alone tool runs on a desktop machine. At least some embodiments of the tool update the action flow definitions on front end server . Consequently a user of action flow editor is able to create an action flow definition without for example knowing how to code in a particular language or technology. This enables an expert with knowledge of a company s unique set of rules for how things are done at that company and or with intimate knowledge of regulatory requirements to create the action flow definition directly. Furthermore a declaratively defined action flow is not tied to a particular technology and therefore can be executed on many types of devices and or execution platforms. An example of a graphical user interface associated with an action flow editor is described in further detail below.

In some embodiments using action flow editor a user is able to later update or otherwise modify action flow definition stored on front end server . For example a bank employee after initially creating a loan application may be asked to modify the action flow definition in order to comply with some new lending laws.

In this example action flow definition on front end server is transformed if or as needed by action flow interface and moved to client device using action flow interface and action flow engine resulting in action flow definition .

Once on client device action flow engine interprets and executes action flow definition for example in response to the current state and or user input e.g. inputs from a loan applicant via a mouse keyboard etc. . Ext JavaScript JS library is used by action flow engine to display or otherwise present the action flow to a user e.g. a loan applicant . In various embodiments Ext JS library includes application programming interfaces APIs JavaScript classes and so on. In some embodiments some other type of library is used. With Ext JS library and action flow definition action flow engine is able to properly execute or otherwise provide the action flow to a user.

In this particular example if a business service is invoked the business service in question is executed on content management server via or otherwise using action flow interface . This configuration may be desirable since then action flow engine on client device is not required to know how to communicate with content management server and or the only communication channel that content management server exposes to client device is via action flow interface . Results if any from the invoked business service are returned in this example via action flow interface to action flow engine . In some embodiments business service and or business service expect to operate on information located in content management server e.g. in content database in and prior to a business service being invoked appropriate content is copied to content management server as needed.

In some embodiments action flow definition on client device is different from action flow definition on front end server . For example there may be some library on front end server which is not available on client device and prior to sending the action flow definition to the client device whatever information in the library is included in the transferred action flow definition so that client device is able to properly execute the action flow definition. In some embodiments a transformation is performed on an action flow definition to generate action flow definition .

In some embodiments any transformation assembly resolution or compilation of an action flow definition during transfer from front end server to client device does not occur until the action flow definition is desired or otherwise needed at client device . As a result in such embodiments changes to the action flow definition may occur until relatively late and the most up to date version of the action flow definition is provided to and run on client device . In some embodiments an action flow definition is permitted to be cached at a client device so that it may be used for more than one session. In some embodiments there is a lifetime specified for an action flow definition cached at a client device to mitigate stale or out of date action flow definitions.

In some embodiments any transformation performed on action flow definition in order to obtain action flow definition is performed in a manner such that the result e.g. action flow definition is platform or technology agnostic. That is the resulting action flow definition which is provided to a client device may be run on a variety of technologies or platforms in at least some embodiments. For example action flow engine may be a JavaScript based engine for interpreting and executing action flow definition and action flow definition is described in a JavaScript related technology such as JavaScript Object Notation JSON and since JavaScript is platform device independent action flow definition is capable of running or executing on a variety of web browsers on any platforms.

Graphical user interface includes a number of pull down menus and icons which may be dragged and dropped. File pull down may include operations associated with file management including but not limited to opening a saved action flow definition saving an action flow definition including specification of the action flow name if new exiting the graphical user interface etc.

Assign pull down is used to assign properties associated with a selected component in an action flow definition. For example to assign a business service to be invoked with a particular action state the action state may be selected using any appropriate technique e.g. drawing a box around it left clicking with a mouse using a tab key on a keyboard etc. and then using assign pull down a desired business service e.g. which would when executed run remotely on some server or a desired local process e.g. which would when executed be run locally on a client device is selected. Assign pull down may be used for other assignment related tasks such as specifying the conditions or branches associated with a particular decision state specifying which user interface page is associated with a given view state etc. Other assignment techniques in addition to or as an alternative to pull down menu may be used. For example a desired state may be selected in space and a right mouse click may bring up a menu via which an assignment is made for the selected state.

Error check pull down is associated with performing error checking on the current state of the action flow definition. For example there may be a rule that at least one end state must be included in the action flow definition a rule may check for dangling or unconnected states a rule may check for a state which has not been assigned a required element e.g. an action state which has no service or process assigned to it a view state which has no user interface page assigned to it etc. and so on. In some embodiments an error check produces a written list of errors. In some embodiments errors are flagged graphically in space . For example colors such as red and or visual effects such as blinking may be used to highlights those parts of the action flow definition which contain errors.

Simulate pull down in some embodiments brings up another window which shows what a user of the action flow e.g. a loan applicant would see given the current state of the action flow definition. In some embodiment a simulated action flow is interactive so that an action flow developer or tester is able to as for example enter in test values click on links and so on in order to see what a user would experience e.g. what user interface pages would be presented what progression of states occur what processes or services would be run in a particular state etc. . In some embodiments a simulated action flow is modified slightly from e production version of an action flow. For example for debugging purposes information associated with the current state that the simulation is in e.g. the name of the current state the name of a business service associated with the current state a data value associated with the current state or the name of a user interface page associated with the current state may be displayed to aid an action flow developer or tester. In some embodiments prior to performing a simulation error checking e.g. the same error check which would be triggered by pull down is performed prior to a simulation. In some embodiments error checking is not performed prior to simulation and if the action flow definition as it currently stands is unable to be resolved it is so indicated to the user of graphical user interface .

Drag and drop icons are used to create new states and new connections between those states. In this particular example there are 4 different types of states each corresponding to different shape and an arrow is used to show the connections or progressions between states. This is merely one example of a graphical user interfaces a variety of interfaces may be used.

Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed embodiments are illustrative and not restrictive.

