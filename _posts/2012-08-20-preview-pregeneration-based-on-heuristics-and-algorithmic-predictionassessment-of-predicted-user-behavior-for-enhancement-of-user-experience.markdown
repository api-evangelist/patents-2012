---

title: Preview pre-generation based on heuristics and algorithmic prediction/assessment of predicted user behavior for enhancement of user experience
abstract: System and methods for determining if a preview of a file uploaded to a web-based collaborative environment is likely to be requested. For a file that is likely to be previewed, the system pre-converts the input format of the file to a target format suitable for providing the preview to minimize the time a user waits to be presented with the preview after making the request. The present disclosure includes a method of determining whether an intermediate format of a file generated during the conversion of an input format to the target format should be stored to be used later or discarded.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09098474&OS=09098474&RS=09098474
owner: Box, Inc.
number: 09098474
owner_city: Los Altos
owner_country: US
publication_date: 20120820
---
This application claims the benefit of U.S. Provisional Application No. 61 551 894 entitled ENHANCED MULTIMEDIA CONTENT PREVIEW RENDERING IN A CLOUD CONTENT MANAGEMENT SYSTEM which was filed Oct. 26 2011 the contents of which are incorporated by reference herein.

This application also claims the benefit of U.S. Provisional Application No. 61 592 567 entitled PREVIEW PRE GENERATION BASED ON HEURISTICS AND ALGORITHMIC PREDICTION ASSESSMENT OF PREDICTED USER BEHAVIOR FOR ENHANCEMENT OF USER EXPERIENCE which was filed Jan. 30 2012 the contents of which are incorporated by reference herein.

This application is related to co pending U.S. application Ser. No. 13 152 982 entitled REAL TIME NOTIFICATION OF ACTIVITIES THAT OCCUR IN A WEB BASED COLLABORATION ENVIRONMENT filed Jun. 3 2011 and U.S. application Ser. No. 13 166 733 entitled MULTIMEDIA CONTENT PREVIEW RENDERING IN A CLOUD CONTENT MANAGEMENT SYSTEM filed Jun. 22 2011 and U.S. application Ser. No. 13 297 230 entitled ENHANCED MULTIMEDIA CONTENT PREVIEW RENDERING IN A CLOUD CONTENT MANAGEMENT SYSTEM filed Nov. 15 2011. Each application is incorporated in its entirety.

Online file storage systems typically provide a way for a user to upload files to a storage server for backing up files file access and or file distribution. Some online file storage systems allow the user to preview the contents of a file before or instead of downloading the file.

A system is described for providing content previews of files stored in a web based content management system with a collaboration environment. A content preview provided by the system permits a user to view a supported file type without spending the time to download the file or needing the software that created the file to open and view the file. The system determines whether a file is likely to be previewed based upon statistical analysis of data obtained form previously previewed files. Files that are likely to be previewed are pre converted to a target format suitable for providing as a preview to a requesting user. By pre converting a file to a target format for previewing the time that a requesting user is required to wait after making the request is considerably reduced.

Further when a file is converted to a target format depending on the conversion tools available to the system the file may first be converted to one or more intermediate formats before being converted to a target format. The system determines whether the intermediate formats should be stored for later use or discarded.

Various aspects and examples of the invention will now be described. The following description provides specific details for a thorough understanding and enabling description of these examples. One skilled in the art will understand however that the invention may be practiced without many of these details. Additionally some well known structures or functions may not be shown or described in detail so as to avoid unnecessarily obscuring the relevant description.

The terminology used in the description presented below is intended to be interpreted in its broadest reasonable manner even though it is being used in conjunction with a detailed description of certain specific examples of the technology. Certain terms may even be emphasized below however any terminology intended to be interpreted in any restricted manner will be overtly and specifically defined as such in this Detailed Description section.

The client devices can be any system and or device and or any combination of devices systems that is able to establish a connection including wired wireless cellular connections with another device a server and or other systems such as host server and or conversion servers . Client devices will typically include a display and or other output functionalities to present information and data exchanged between or among the devices and or the host server and or conversion servers . In one embodiment this is only a single conversion server . In one embodiment there are multiple conversion servers working independently. In other embodiments a distributed queuing system is used to run the conversion servers in an efficient manner.

For example the client devices can include mobile hand held or portable devices or non portable devices and can be any of but not limited to a server desktop a desktop computer a computer cluster or portable devices including a notebook a laptop computer a handheld computer a palmtop computer a mobile phone a cell phone a smart phone a PDA a Blackberry device a Treo a handheld tablet e.g. an iPad a Galaxy Xoom Tablet etc. a tablet PC a thin client a hand held console a hand held gaming device or console an iPhone and or any other portable mobile hand held devices etc. In one embodiment the client devices host server and conversion servers are coupled via a network and or a network . In some embodiments the devices and host server may be directly connected to one another.

The input mechanism on client devices can include touch screen keypad including single touch multi touch gesture sensing in 2D or 3D etc. a physical keypad a mouse a pointer a track pad motion detector e.g. including 1 axis 2 axis 3 axis accelerometer etc. a light sensor capacitance sensor resistance sensor temperature sensor proximity sensor a piezoelectric device device orientation detector e.g. electronic compass tilt sensor rotation sensor gyroscope accelerometer or a combination of the above.

Signals received or detected indicating user activity at client devices through one or more of the above input mechanism or others can be used in the disclosed technology by various users or collaborators e.g. collaborators for accessing through network a web based collaboration environment or online collaboration platform e.g. hosted by the host server .

The collaboration platform or environment hosts workspaces with work items that one or more users can access e.g. view edit update revise comment discussions download preview tag or otherwise manipulate etc. . A work item can generally include any type of digital or electronic content that can be viewed or accessed via an electronic device e.g. device . The digital content can include .pdf Portable Document Format files .doc slides e.g. Powerpoint slides images audio files multimedia content web pages blogs etc. A workspace can generally refer to any grouping of a set of digital content in the collaboration platform. The grouping can be created identified or specified by a user or through other means. This user may be a creator user or administrative user for example.

In general a workspace can be associated with a set of users or collaborators e.g. collaborators which have access to the content included therein. The levels of access e.g. based on permissions or rules of each user or collaborator to access the content in a given workspace may be the same or may vary among the users. Each user may have their own set of access rights to every piece of content in the workspace or each user may have different access rights to different pieces of content. Access rights may be specified by a user associated with a work space and or a user who created uploaded a particular piece of content to the workspace or any other designated user or collaborator.

In general the collaboration platform allows multiple users or collaborators to access or collaborate efforts on work items such that each user can see remotely edits revisions comments or annotations being made to specific work items through their own user devices. For example a user can upload a document to a work space for other users to access e.g. for viewing editing commenting discussing signing off or otherwise manipulating . The user can login to the online platform and upload the document or any other type of work item to an existing work space or to a new work space. The document can be shared with existing users or collaborators in a work space.

A diagrammatic illustration of the online collaboration environment and the relationships between workspaces and users collaborators are illustrated with further reference to the example of .

In one embodiment actions performed on work items or other activities that occur in a work space can be detected in real time or in near real time. In addition users collaborators or select users can be notified in real time or near real time of these actions or activities. Various mechanisms can be used to notify users or collaborators including through the web interface to access the collaboration platform via email and or SMS for example.

Functions and techniques disclosed for providing previewing of files or work items in the online platform can be performed by one or more distributed conversion servers of the collaboration platform. Functions and techniques performed by the host server the conversion servers and the related components therein are described respectively in detail with further reference to the examples of .

In one embodiment client devices communicate with the host server and or conversion servers over network . In general network over which the client devices the host server and or conversion servers communicate may be a cellular network a telephonic network an open network such as the Internet or a private network such as an intranet and or the extranet or any combination thereof. For example the Internet can provide file transfer remote log in email news RSS cloud based services instant messaging visual voicemail push mail VoIP and other services through any known or convenient protocol such as but is not limited to the TCP IP protocol Open System Interconnections OSI FTP UPnP iSCSI NSF ISDN PDH RS 232 SDH SONET etc.

The network can be any collection of distinct networks operating wholly or partially in conjunction to provide connectivity to the client devices and the host server and may appear as one or more networks to the serviced systems and devices. In one embodiment communications to and from the client devices can be achieved by an open network such as the Internet or a private network such as an intranet and or the extranet. In one embodiment communications can be achieved by a secure communications protocol such as secure sockets layer SSL or transport layer security TLS .

In addition communications can be achieved via one or more networks such as but are not limited to one or more of WiMax a Local Area Network LAN Wireless Local Area Network WLAN a Personal area network PAN a Campus area network CAN a Metropolitan area network MAN a Wide area network WAN a Wireless wide area network WWAN enabled with technologies such as by way of example Global System for Mobile Communications GSM Personal Communications Service PCS Digital Advanced Mobile Phone Service D Amps Bluetooth Wi Fi Fixed Wireless Data 2G 2.5G 3G 4G IMT Advanced pre 4G 3G LTE 3GPP LTE LTE Advanced mobile WiMax WiMax 2 WirelessMAN Advanced networks enhanced data rates for GSM evolution EDGE General packet radio service GPRS enhanced GPRS iBurst UMTS HSPDA HSUPA HSPA UMTS TDD 1xRTT EV DO messaging protocols such as TCP IP SMS MMS extensible messaging and presence protocol XMPP real time messaging protocol RTMP instant messaging and presence protocol IMPP instant messaging USSD IRC or any other wireless data networks or messaging protocols.

The web based platform for collaborating on projects or jointly working on documents can be used by individual users and shared among collaborators. In addition the collaboration platform can be deployed in an organized setting including but not limited to a company e.g. an enterprise setting a department in a company an academic institution a department in an academic institution a class or course setting or any other types of organizations or organized setting.

When deployed in an organizational setting multiple workspaces e.g. workspace A B C can be created to support different projects or a variety of work flows. Each workspace can have its own associated work items. For example work space A may be associated with work items work space B can be associated with work items and work space N can be associated with work items . The work items and may be unique to each work space but need not be. For example a particular word document can be associated with only one work space e.g. work space A or it may be associated with multiple work spaces e.g. Work space A and work space B etc. .

In general each work space has a set of users or collaborators associated with it. For example work space A is associated with multiple users or collaborators . In some instances work spaces deployed in an enterprise may be department specific. For example work space B may be associated with department and some users shown as example user A and workspace N can be associated with departments and and users shown as example user B .

Each user associated with a work space can generally access the work items associated with the work space. The level of access will depend on permissions associated with the specific work space and or with a specific work item. Permissions can be set for the work space or set individually on a per work item basis. For example the creator of a work space e.g. one of user A who creates work space B can set one permission setting applicable to all work items for other associated users and or users associated with the affiliate department for example. Creator user A may also set different permission settings for each work item which may be the same for different users or varying for different users.

In each work space A B . . . N when an action is performed on a work item by a given user or any other activity is detected in the work space other users in the same work space may be notified in real time or in near real time. Activities which trigger real time notifications can include by way of example but not limitation adding deleting or modifying collaborators in the work space adding deleting a work item in the work space creating a discussion topic in the work space.

The activity can be performed in relation to a discussion topic in the work space for example adding a response to a discussion topic deleting a response or editing a response in the work space. In addition the activity is performed on a work item in the work space by the user including by way of example but not limitation download or upload of a work item deletion of editing of the work item selecting adding deleting and modifying a tag in the work item preview of the work item or comment of the work item setting or changing permissions of the work item sharing a work item emailing a link to the work item and or embedding a link to the work item on another website.

The host server of the web based or online collaboration environment can generally be a cloud based service. The host server can include for example a network interface a load balancing engine a network engine an analytics database a progress indicator engine and or a data collection module . Additional or fewer components modules engines can be included in the host server and each illustrated component.

The network interface can be a networking module that enables the host server to mediate data in a network with an entity that is external to the host server through any known and or convenient communications protocol supported by the host and the external entity. The network interface can include one or more of a network adaptor card a wireless network interface card e.g. SMS interface WiFi interface interfaces for various generations of mobile communication standards including but not limited to 1G 2G 3G 3.5G 4G LTE etc. Bluetooth a router an access point a wireless router a switch a multilayer switch a protocol converter a gateway a bridge bridge router a hub a digital media receiver and or a repeater.

As used herein a module a manager a handler a detector an interface or an engine includes a general purpose dedicated or shared processor and typically firmware or software modules that are executed by the processor. Depending upon implementation specific or other considerations the module manager handler or engine can be centralized or its functionality distributed. The module manager handler or engine can include general or special purpose hardware firmware or software embodied in a computer readable storage medium for execution by the processor. As used herein a computer readable medium or computer readable storage medium is intended to include all mediums that are statutory e.g. in the United States under 35 U.S.C. 101 and to specifically exclude all mediums that are non statutory in nature to the extent that the exclusion is necessary for a claim that includes the computer readable storage medium to be valid. Known statutory computer readable mediums include hardware e.g. registers random access memory RAM non volatile NV storage to name a few but may or may not be limited to hardware.

In one embodiment the host server includes a collaborator manager that tracks the permission levels of users requesting a preview of a file. A user should be an authorized collaborator of the workspace in which the file is stored to be granted permission to view a preview of the file. Additionally the user who uploads the file to the workspace is also permitted to view a preview of the file. In some instances the person who uploads may not be an authorized collaborator of the workspace for example an administrator but that person may need to check whether the file was correctly uploaded.

One embodiment of the host server includes the data collection module which performs real time collection of data on every job that runs through the conversion servers during the conversion process for file previewing and performs statistical analysis. Depending on the conversion tools available to the system some file formats do not need to be converted to an intermediate format before being converted to the target format. These file formats can be converted in a single step. Other file formats use one or more intermediate steps to convert to intermediate formats before finally being converted to the target format. Independent of the number of intermediate file formats into which an input format of a file is converted the original file is stored in the same input format in which the user originally uploaded the file to the web based collaboration environment. The data collection module records the timing information for every step of the file conversion process and stores the information in the analytics database . By collecting timing data for every job and analyzing the data to optimize the number of jobs processed per server in a given amount of time the overall throughput of jobs can be maximized by the system. The analyzed data is stored in the analytics database .

In one embodiment the data collection module also collects data on user activity and user interaction of uploaded files and the data is stored in the analytics database . The observed user behavior is analyzed by the data collection module for determining criteria that predict that a preview will likely be requested either by the user who uploaded the file or by a collaborator of the workspace to which the file is uploaded. For example the collected data shows that certain types of files that are uploaded in particular file formats are typically shared with other collaborators and the user uploading the file wants collaborators to read the file. In anticipation that the collaborators of the workspace that the file is uploaded to will be previewing the file at some future time a target file format suitable for providing the preview is pregenerated for the file. Then at the time of the preview request for the file the requesting user will not have to wait for the target file format to be generated. It turns out that classes of files that tend to be shared and subsequently previewed by collaborators include but are not limited to PDF files and different types of Microsoft Office file formats such as Word Excel PowerPoint iWorks and Open Office. Thus in one embodiment target file formats are pregenerated for these file formats.

Another example in which the data collected and analyzed by the data collection module shows that the method in which a file is uploaded to the web based collaboration environment is useful for predicting when a file is likely to be previewed. Generally the data shows that if a file is personally uploaded by a user the user will likely request a preview. One reason is that a user personally uploading a file cares a lot about the file and wants to make sure that the file is uploaded properly by previewing the file. On the other hand if the file is uploaded using another method such as through file transfer protocol FTP using an application programming interface API or automatically uploaded through the synchronization process between the online content management system and a folder on the user s computer the user will probably not be actively going to the website to view the file. Thus in one embodiment if a file is personally uploaded by a user a target file format is pregenerated for the file.

Similarly if a user uploads a single file the user will probably want to view the file to ensure that it has been properly uploaded whereas if a user uploads a folder with a large number of files for example 100 files the analyzed data shows that the likelihood of the user selecting any specific one of the 100 files is fairly low. Thus in one embodiment a predetermined number can be specified such that if a user uploads fewer than the predetermined number of files a target file format of those files is automatically generated for each file in anticipation of a preview request.

In one embodiment the data collection module can collect and statistically analyze data on user activity to determine when it is beneficial from the perspective of the user to pregenerate a target file format for a particular file and the data is stored in the analytics database . For example a user who requests a preview of a file may become impatient if the process for preparing the target file format for the preview is longer than a certain period of time. The analyzed data shows that specific file formats that take a long period of time to generate a target file format such as video files and large files e.g. large image files benefit from pregeneration of the target file format. Thus in one embodiment pregeneration criteria can be based upon a predetermined minimum file size or specific file formats and or sizes.

The data collected and analyzed by the data collection module can be used to establish one or more criteria for files for pre converting to a target file format for previewing.

One embodiment of the host server includes the load balancing engine which can evaluate the load on each of the distributed conversion servers and use a distributed queuing system to determine which of the distributed conversion servers to send the next job. In one embodiment jobs are sent to a particular conversion server based upon a round robin process where each job is sent to a different server until every server has received a job and further jobs are sent to the servers in the same order. In one embodiment video conversion jobs can be queued in a cluster separately from other conversion jobs because video conversion can take longer than conversion of other types of files. Then for each cluster of jobs the round robin process would be used among the servers. Additionally other classes of files could also be queued in their own special clusters as the need arises.

One embodiment of the host server includes the network engine which can identify and evaluate the available tools for converting files from an existing format to a target format and determine the optimum tool or tools to use for the conversion process of a given file. In one embodiment the network engine can include a network graph generator and a network graph solver .

The network graph generator evaluates information on the tools available in the system for converting files. Each tool supports conversion of one or more input formats to one or more output formats. A node is established by the network graph generator for each unique pair of input output formats for each tool available to the system. Thus if tool X can convert two input formats A and B to three output formats 1 2 and 3 then six separate nodes are established that use tool X. In particular the six nodes correspond to conversion from A to 1 A to 2 A to 3 B to 1 B to 2 and B to 3.

The network graph generator also maintains a priority cost for each node. The priority cost is a measure for assessing the advantages and disadvantages of using a tool. The priority cost can be based on factors including but not limited to how long a particular conversion tool takes to perform a conversion the fidelity of the output file of the conversion tool and system preferences for conversion of a file into a particular file format. Conversion tools that convert the same input file format to the same output file format but use a different algorithm e.g. ffmpeg versus mencoder can be maintained as different nodes with a different priority cost for each pair of input to output file formats. In one embodiment specific versions of conversion tools can also be maintained as separate nodes because a particular version performs better for a desired input output file format conversion. For example with the SWFTools library an older version provides higher quality results for particular conversion situations. As a result upgrading to the latest version degrades the quality of the output file. Thus a node can be associated with each installed version of the conversion tool with specified input file format output file format conversion algorithm and priority costs.

The network graph generator generates a network graph made up of all the identified nodes. The network graph generator then connects appropriate nodes so that a first node is connected to a second node only if the output format of the first node is accepted as an input format to the second node thus generating a network graph of conversion tools.

Based upon the priority costs associated with each node the network graph solver solves the network graph to find the optimum conversion tools needed to convert a given input file format to a target output file format. The network graph solution determined by the network graph solver may result in the conversion of the input file format to one or more intermediate file formats. If during the conversion of a file a particular conversion tool fails to create a sufficient output file the network graph generator can remove the effected node or nodes and the network graph solver can re solve the network graph to re route the conversion of the file around the fault.

Although the network engine was described above with respect to generating and solving a network graph any other method for determining the optimum set of tools for converting one file format to another file format can be used based upon the priority costs of the various conversion tools.

One embodiment of the host server includes the progress indicator engine which can generate a progress bar or other type of progress indicator for display to the user to let the user know the approximate amount of time remaining for a file conversion to complete and when a display of the desired file preview will be available. The progress indicator engine can include a duration analysis module and or an indicator generator and can access the analytics database .

The duration analysis module accesses data collected and stored in the analytics database about previous files that have been converted by the system. The analytics database includes but is not limited to data such as the size of a file and the format of the file. For text files the data includes the number of pages of the file. For image and video files the data includes the width and height of the source image format and the target image format for example in number of pixels. For video files the data also includes the play length of the video. The database can also include information about the number of steps used to convert the input file format to the target file format for example the number of intermediate file formats that the input file format needs to be converted to before reaching the final target format. In one embodiment the analytics database can be made up of several separate databases. In one embodiment the analytics database can be external to the conversion server and or shared by the conversion servers .

The duration analysis module can find previous files that have similar attributes as the file to be converted and calculate a predicted conversion time based on the conversion times of similar files that have been converted in the past. In one embodiment the duration analysis module takes an average of the conversion times of the similar files as a predicted conversion duration for the file to be converted. In one embodiment the duration analysis module can perform a more complex calculation on the collected analytics data for example a weighted average depending upon how similar a previous input file is to the present file to be converted to predict the conversion time for the present file. In one embodiment the predicted conversion duration can be further refined by the duration analysis module based on any steps of the conversion process that operate linearly and can report its progress.

Further the analytics database can include data on the load on the conversion servers at the time the previous files were converted. In one embodiment the conversion server can comprise a number of distributed servers. By determining the load on the conversion servers when a file is to be converted to a target format the average of the conversion times of similar files can be adjusted to the current load of the servers.

The indicator generator module generates the progress indicator for displaying an indication of the time that has elapsed since the start of the conversion of the file and the expected time remaining until the file has finished converting to the target format. The indicator generator module includes a timer for tracking the elapsed time from when the conversion process starts to when the conversion process has finished.

In some embodiments a video file can start to be streamed to the user prior to completion of the conversion process. In this case the timer tracks the elapsed time from when the conversion process starts to the anticipated time when the video player can start reading data and showing video to the user before the remainder of the file has been converted to the target format.

The notification module can include for example an activity detector a notification engine a permissions manager and or a notification prioritizer . The notification engine can include a notification server manager and or a recipient selection module the permission manager can include a workspace manager a collaboration manager an organization tracker having an enterprise tracker and or a work item manager the notification prioritizer can further include a rules module a chronological ordering engine and or a relevance assessor . Additional or less components modules engines can be included in the notification module and each illustrated component.

One embodiment of the notification module includes the activity detector which can detect an activity in the web based collaboration environment. The activity can be a triggering activity which causes select or relevant users to be notified of the occurrence which in one embodiment is in real time or near real time.

The detected activity can be performed by a user or collaborator in a work space and can be performed on a work item or relating to a work item for example download or upload of the work item previewing the work item commenting of a work item deletion or editing of the work item commenting on a work item identifying selecting adding deleting saving editing and modifying a tag in the work item setting or changing permissions of the work item sharing the work item including for example emailing a link to the work item embedding a link to the work item on another website.

The types of activities that can be detected can also relate to changes to a work space such as adding deleting or modifying collaborators in the work space changes to work items such as adding deleting a work item in the work space creating a discussion topic in the work space adding a response to a discussion topic deleting a response or editing a response in the work space.

Detected activity in a work space that is performed by a user or otherwise occurring can trigger notifications to be sent out for example via the notification engine . The notification engine can notify users which can be collaborators of the user who performed the activity in the work space via one or more of many mechanisms including but not limited to email SMS voice message text based message RSS feed etc.

In one embodiment the notification is depicted through a web browser used by the other user to access the web based collaboration environment for access in real time or near real time to when the activity was performed by the user. When notifying a user in real time through a web browser the notification engine can utilize a push enabled service to ensure real time notification. In one embodiment the notification is sent by a component or another server which implements push technology e.g. the notification server shown in the example of . The push enabled service can be implemented via long poll or HTTP streaming for example by the notification sever or another component device which may be internal to or external to the host server .

The notification module can send a notification server an identification of the recipient to be notified and indicator of the activity to notify the recipient of. Use of an external push server such as the notification server is described with further reference to the example of . The notification server can be managed by the notification server manager in the notification engine which can communicate events to notify users in real time via their browser interfaces. In one embodiment the host server sends a notification server an identification of the recipient to be notified and indicator of the activity to notify the recipient of.

In general recipients of an activity notification are selected based on criteria for example by the recipient selection module of the notification engine . The criteria may be determined for example based on a work space in which the activity was performed in the online collaboration platform. Specifically the criteria is in one embodiment determined based on permissions configured for the workspace as managed tracked updated implemented revised based by the permissions manager .

For example the workspace can be associated with an enterprise and in such an instance the criteria can specify that the recipient that is selected is an employee of the enterprise. Enterprise associations and affiliations can be managed by the organization tracker for example in some embodiments enterprises and or enterprise accounts can specifically be managed tracked monitored by the enterprise tracker . Permissions for the workspace can configured by a creator or administrative user of the workspace. The collaboration manager can determine track and implement relationships roles and or access levels of multiple users collaborators. For example users may be a general user a creator of the work space a creator of a work item or an administrative user. The permissions for a work space can be configured by a user creator or the administrative user and is generally managed by the collaborations manager .

The criteria that are determined by work space permissions can be managed by the work space manager in the permissions manager . The recipient selection module can also determine the recipient selection criteria based on user affiliation with the workspace including one or more of member invited collaborator and collaborator in the workspace. Such user affiliation can be tracked and managed by for example the collaboration manger of the permissions manager .

In one embodiment the criteria are determined based on permissions associated with a work item on which the activity was performed in relation to in the workspace. Permissions associated with work items can be managed tracked updated revised or implemented in one embodiment by the work item manager . For example the permissions associated with the work item can be set by a creator of the work item or an administrative user of the work space. Each work space can include multiple work items where each of multiple work items has individually configurable permissions. The individually configured permissions can be determined by user roles and rights e.g. as managed by the collaborations manager . The work item manager can communicate with the collaboration manager in setting configuring or re configuring permissions associated with work items.

The notification of a triggering activity can be presented to a selected user in the web based or online collaboration environment such that the notification is accessible by the user in real time or near real time to when the triggering activity occurred. In one embodiment the notification is presented via a user interface to the online collaboration platform for example when the recipient e.g. selected recipient is accessing the workspace e.g. the same work space in which activity is detected or when the recipient is accessing a different work space. Specifically the real time or near real time notification can be presented to the user via the user interface if the user is online e.g. online or otherwise logged into the web based or online collaboration environment . Examples of real time notifications are illustrated with further reference to the examples of and . The feed stream is shown in the lower right corner of the files page in and the preview page in .

The notification engine can determine the channel through which to notify selected users or recipients of activity. The channels that are used can include indicators via a user interface to the online collaboration environment SMS audio message text based messages email desktop application RSS etc. The indicators presented via the user interface can include visual indicators e.g. pop up form including text and or graphics audio indicators or any other types detectable by a user.

In one embodiment the notification is presented in the user interface among other notifications in an order based a rule which may be configurable by the recipient or another user. Such prioritization in presentation can be determined managed tracked implemented revised or updated by the notification prioritizer for example. The notification prioritizer can present the notification in the user interface e.g. as shown in the user interface of among other notifications in an order based on a rule as determined by the rules module for example.

The rule can indicate user preferences for notifications of activities based on one or more of a type of activity that occurred and a user related to the activity. For example a given user may explicitly or implicitly indicate preferences for activities or actions performed by specific other users or collaborators. A user may also indicate explicitly or implicitly preferences for types of activities that they wish to be notified of or not notified of. Users may also indicate that notifications for certain types of activities are to be prioritized other others. For example a user may indicate that a notification for a comment on activity is of a higher priority compared to a edit activity.

In one embodiment the notification is presented in the user interface among other notifications based on chronological order for example as tracked or determined by the chronological ordering engine . For example each notification can be depicted in the user interface based the time ordering when each associated triggering activity occurred. Notification of the most recently occurred activity can be depicted above or below other notifications or in a location where most easily accessed by the recipient user.

In one embodiment the notification is presented in the user interface among other notifications based on relevance to the recipient for example as determined tracked monitored or implemented by the relevance assessor . The relevance to the recipient can be represented by for example contextual and temporal parameters. For example contextual parameters provide metrics indicating the recipient s current activity in the online collaboration platform. Current activity can be any activity of the user that occurred within a certain time frame e.g. within the last minute within the last 5 minutes within the last 10 minutes for example . Activity of the user can include a document that the user edited viewed downloaded commented on tagged or otherwise accessed. Activity of the user can also include activities surrounding a workspace including creation modification of a workspace or attributes of a workspace such as modification of collaborators permissions etc.

Temporal parameters can for example provide metrics indicating the recipient s activities in the online collaboration platform over a period of time a frequency with which the recipient has accessed a work item with which the activity relates to and or a frequency with which the recipient has accessed the work space in which the activity was performed.

The notification server generally includes for example a push server an SMS notifier and or a priority module . In one embodiment the push server includes a long poll engine and or an HTTP streaming engine . Additional or less components modules engines can be included in the notification server and each illustrated component.

The notification server can support the services of a collaboration platform or environment to provide real time or near real time notifications of activities. In one embodiment the notification server is integrated within a host server of a collaboration platform e.g. the host server shown in the example of . The notification server may also be externally coupled to the host server e.g. the host server . In some instances a portion of the functions implemented and performed by the notification server can be implemented in part or in whole in the host server . For example some of the components shown to be in the notification server and associated functionalities can in part or in whole reside in the host server .

In one embodiment the notification server sends a notification of an activity that occurs within a collaboration platform to a recipient. The notification is sent by the server such that the recipient is notified in real time or near real time to when the activity occurred or when the activity was performed. Real time notification can be performed via push technology for example by the push server through long polls e.g. via the long poll engine and or through the HTTP streaming e.g. via the HTTP streaming engine . The notification server can communicate with the host server to determine a recipient to whom to notify. The notification server can also determine the activity to notify the recipient of for example through communication with the host server.

In one embodiment the notification is presented in a feed stream among other notifications through a user interface on the user device according to relevancy to the user determined based on current or recent activity of the user in the web based collaboration environment. The presentation priority in a user interface in a feed stream can be managed in whole or in part for example by the priority module using information determined by the notification prioritizer e.g. notification prioritizer of notification module shown in the example of .

In one embodiment the notification server can send notifications to users via SMS e.g. through the SMS notifier . In this instance the notification server can be coupled to an SMS center which forwards the SMS text message to a mobile device over a cellular network. The notification can be sent via SMS in real time or near real time or with a delay.

One embodiment of the conversion server includes the viewer module for displaying previews of requested files in a web page displayed on a device browser or other system. The viewer module takes as input files having one or more supported file formats and displays the file. In one embodiment the viewer module uses a Flash based browser document viewer. The document viewer is embedded in a webpage and displays Adobe Flash small web format SWF files. Because files stored in the web based content management system can have any format the conversion server includes conversion tools that can convert the format of an input file to a target output format that is supported by the viewer module .

While the SWF format is the target format for a Flash based document viewer a person of skill in the art will understand that any other file format can be the preferred target format depending upon the device browser or system displaying the preview. Thus although the SWF format is referred to herein as the target output format any other preferred file format can be the target output format for example PDF file format and HTML file format. In one embodiment the system can produce any one of the three formats SWF format PDF format or HTML format depending upon parameters that specify the desired output format.

In one embodiment the conversion server includes the mobile device module for transmitting previews of requested files to a mobile device application. For example the iPhone and iPad families of mobile devices produced by Apple Inc of Cupertino Calif. run an operating system that readily displays and manipulates files in a PDF format. Thus the mobile device module can transmit files converted to a PDF format to users requesting a preview of those files from an iPhone or iPad device.

One embodiment of the conversion server includes the conversion engine which can run the conversion tools used to convert an input file format to another file format. Non limiting examples of conversion tools include mencoder and ffmpeg. In one embodiment the conversion tool manager manages subsystems that are designed to handle specific style formats. For example because Microsoft Office is ideally suited to convert MSWord and PowerPoint documents a Windows based subsystem can be used to handle MS Office file formats.

In one embodiment the conversion engine can perform a hard coded conversion process where specific tools are used to convert certain input formats to a specified output format. In another embodiment the conversion engine uses a path finding algorithm implemented by the network engine described above.

In some instances a user who uploads a file to the content management system can use the content preview feature to check whether the file was successfully uploaded. It is important to ensure the preview provided to the user appears as close as possible to the actual appearance of the document when opened using the file s native program to reassure the user that the file was not corrupted during the upload process or incompletely uploaded. One embodiment of the conversion engine includes the PDF Portable Document Format rendering engine which can provide a preview of PDF files with high fidelity. The PDF rendering engine can access PDF rendering libraries database .

PDF is a popular file format standard that is used for document exchange. A PDF file captures a complete description of a document including the text fonts graphics and other information needed to display the document in a manner that is independent of the application software hardware or operating system. There are many different versions of the PDF specification and the different versions support different display functionalities.

Input files are often converted to an intermediate PDF format because the PDF file format is very popular and conversion tools are readily available for converting a file to or from the PDF file format. Once an input file is converted to the intermediate PDF format the system can convert it to any target format that is needed for display on a particular device browser or system. For similar reasons input image files are often converted to the popular PNG format as an intermediate format before being converted by the system to any needed target format. Additionally some intermediate file formats are preferred for displaying the file on certain devices such as the PDF format for displaying on a mobile device such as an iPhone or iPad. However a person of skill in the art will understand that an input file can be converted to any other convenient type of intermediate file format such as HTML and Post Script file formats or that an intermediate file format may not even be necessary. Further input files are not limited to just text and or image files. Rather input files can also be any other type of file including but not limited to video audio and multimedia formats. Any of these file formats can be converted to any convenient intermediate file format or none at all and if an intermediate file format is used the system can convert the intermediate file format to any desired target file format.

There are also several open source libraries that are available for parsing PDF files and converting PDF files to other formats. For example the pdf2swf program is one of the tools provided by the SWFTools library that can be used to convert PDF files to an Adobe Flash SWF file. The pdf2swf program uses the open source xpdf library to parse the PDF file and then provide instructions for generating the SWF file. There is another open source PDF rendering library called Poppler. Because Poppler is more actively supported and also contains a number of improvements over the xpdf library it is advantageous to use Poppler instead of the xpdf library for parsing PDF files. Thus in one embodiment the pdf2swf program in the SWFTools library is modified to use the Poppler library instead of the xpdf library to parse the PDF file to provide instructions for generating the corresponding SWF file.

By using the Poppler library rather than the xpdf library more accurate previews of PDF files can be provided by the viewer module especially for some of the less commonly used PDF features. Some advantages include PBM picture support corrected transparency values improved template support drawing improvements and other bug fixes that were present with use of the xpdf library.

In general a library that provides an improved tool to convert a first file format to a second file format can be used in place of another tool for converting the first file format to the second file format.

In one embodiment the PDF rendering libraries includes the modified SWFTools library and the modified Poppler library and is part of the PDF rendering engine . In one embodiment the PDF rendering libraries is made up of several separate libraries. In one embodiment the PDF rendering libraries can be external to the conversion server and or shared by the conversion servers .

One embodiment of the conversion server includes the streaming engine which can take the video file as it is being converted by the conversion engine and write it directly to a publicly available location in chunks. The video player can then start reading the data showing the video to the user before the rest of the file has been converted.

One embodiment of the conversion server includes the downsampling engine which can downsample a video file by removing pixels from video frames to reduce the size of the file for converting to a target format for preview. Advantages of downsampling include reducing the time a preview takes to start playing for a user preventing the preview from starting stopping or freezing during playback and reducing the overall bandwidth usage for the server and the end user.

In one embodiment a file can be downsampled if it is larger than 360 pixels in the height dimension of the frames. During the downsampling process the aspect ratio of the frames is maintained. Thus for sources having a 4 3 aspect ratio the resulting frame sizes of the video file would be 480 360 pixels and for wide format video the resulting size would be 640 360 pixels. Other downsampling criteria such as different pixel dimensions of the frames can also be selected when reducing the size of a file.

In one embodiment a video file can be downsampled to multiple different conversion sizes for example a high resolution version a medium resolution version and a low resolution version. In one embodiment depending upon the tier of service a user pays for one two or all three of the different versions can be made available to the user. For a user paying a premium to subscribe to a higher tier of service the user would receive more versions than a user subscribing to a lower tier of service. The benefit of receiving more versions having different sizes is that the user then has the option of selecting the most appropriate size or resolution. For example a low resolution version can be selected for a slow network connection and a high resolution version can be selected for sharing a video with friends who have a high bandwidth network connection. In one embodiment if more than one size file is to be produced the downsampling for each conversion size is performed on the original input file rather than downsampling a stream of video data multiple times to minimize the number of conversion errors introduced.

In one embodiment if a video file is converted from its input format directly to a desired target format the downsampling can take place prior to the conversion of the file format to reduce the processing time needed to convert the file format. However if the video file is first converted as part of a multi step conversion to an intermediate format before being converted to a target format the unsupported input file format should be converted to the intermediate format first before downsampling for the final conversion to the target format.

With traditional video file downloading a user is not able to access the video file before it has completely downloaded because a video player needs the metadata encoded in the video file and the metadata is usually found at the end of the file. Thus the video player needs to wait until the video file is fully loaded prior to playing the video. One embodiment of the conversion server includes the fast start preview module which can move the metadata from the end of the file to the beginning of the file. By moving the metadata to the beginning of the file the preview player can begin playing the video before the user has fully downloaded the file. In one embodiment the fast start preview module uses the qt faststart library to move the metadata to the beginning of the video file.

One embodiment of the conversion server includes the rotation module which uses a rotation identification tool to identify the embedded orientation data that a digital camera uses to display a video. Once the rotation module has identified the orientation it sends this information to the conversion tool s as a flag to correct the video for playback in the video preview in the online collaboration environment. It is important to identify the orientation data of a video file because video taken upside down with a digital camera that plays in an appropriate orientation in the digital camera and most desktop video players would appear upside down in the video preview.

One embodiment of the conversion server includes the pre generation decision engine which determines if an uploaded file should be pre converted to a target format suitable for providing a preview before a preview is requested for that file. The pre generation decision engine sends a request to the conversion engine to pre convert a file uploaded to the web based collaborative environment to a target format if the file satisfies at least one of the criteria determined by the data collection module for predicting that a preview of a file will likely be requested. Examples of the criteria include but is not limited to the file is uploaded as a single file rather than as part of a bulk uploading of multiple files the file is uploaded manually rather than uploaded automatically using synchronization process between a user s computer and the web based collaborative environment or the file is a standard Microsoft Office format such as Word Excel PowerPoint iWorks Open Office etc. a PDF format document or a video file. The pre generation decision engine can also query the data collection module and or access the analytics database to determine if there are other criteria to be used for determining whether to pre generate a target file.

One embodiment of the conversion server includes the intermediate file format database which stores files that have been converted to an intermediate format during the process of converting the input format of the file to a target format suitable for previewing the file. As discussed above input files are often converted to an intermediate PDF format because the PDF file format is very popular and conversion tools are readily available for converting a file to or from the PDF file format. For similar reasons input image files are often converted to an intermediate PNG format. Additionally some intermediate formats are preferred for displaying the file on certain devices such as the PDF format for displaying on a mobile device such as an iPhone or iPad. However a person of skill in the art will understand that any other type of intermediate file format can be used including but not limited to HTML and Post Script file formats or that an intermediate file format may also be unnecessary.

While some intermediate file formats are useful valuable system memory resources are used to store these formats of the originally uploaded file. One embodiment of the conversion server includes the discard decision engine which determines whether an intermediate file format stored in the intermediate file format database should be discarded. Criteria that are use for determining whether to discard a file format include but are not limited to whether the file format is useful for displaying on a supported mobile device whether a target format of the file is still awaiting generation for a requested preview and the likelihood that the preview will actually be requested based on for example the file format or file size. If the discard decision engine determines that one or more intermediate file formats of a file should be discarded the file that was uploaded to the web based collaboration environment is still retained in its original input format. In one embodiment the data collection module collects and analyzes data on intermediate file formats that are useful to determine criteria for saving or discarding certain file formats and the discard decision engine can query the data collection module for the criteria.

At block the system receives user input from a user requesting a preview of a file. In one embodiment the user can request the preview by clicking on the file in the workspace of the online collaboration environment.

Then at block the system determines the permission level of the requesting user. In one embodiment a first type of permission level e.g. an editor allows a user to have full read and write access to a workspace including downloading or viewing a preview of the contents of the workspace as well as uploading new content to the workspace. A second type of permission level e.g. a viewer allows a user to have full read access to a workspace such that the user can download or view a preview of contents of the workspace but not upload or edit contents of the workspace. A third type of permission level e.g. an uploader can allow a user to have limited write access to contents of a workspace such that the user can see items in the workspace but not download or view the items while being permitted to upload new content to the workspace.

At decision block the system determines if the user has permission to preview the file. If the permission level of the user does not allow previewing block No at block the system notifies the user that permission to view the preview is denied. If the permission level of the user allows previewing block Yes at decision block the system determines if the file has already been pre converted. If the file has been pre converted block Yes the process continues to block described below.

If the file has not been pre converted block No at decision block the system determines if an intermediate file format is available for the file. If the intermediate file format is available at block the system converts the intermediate file format to a target format suitable for providing the preview.

If the intermediate file format is not available at block the system converts the input file format to a target format suitable for providing a preview of the file. Then at block the system presents the preview to the user. In one embodiment the file is a video file. In this case the file does not have to finish converting before the file is presented to the user as a preview as discussed above with respect to streaming a video file.

At block the system identifies the format of an input file that has been uploaded by a user. Then at block the system specifies the desired output format appropriate for presenting a preview of the file. In one embodiment output size and or preview type is also specified. Output size can be used to limit the size of the output file. Thus if the converted file exceeds the specified threshold the file can be re processed reduced in size or not used. In one embodiment output dimensions are specified because in different applications different dimensions of previews may be used. For example a preview can be displayed as a thumbnail on a file listing page e.g. or as a large display on a file preview page e.g. in . With both of these previews the files are the same format but have different dimensions thus the previews with different dimensions are different system outputs.

Next at block the system solves the network graph for the optimum conversion scenario using the available conversion tools. The system takes into account the priority cost of using each of the tools to determine the optimum path. Then at block the system converts the file using the identified conversion scenario path.

At decision block the system determines whether the conversion of the input file to the targeted output format was successful. If the conversion was successful block Yes the process ends at block . If the conversion failed block No at block the system identifies the conversion tool that failed to create a sufficient output file. If the faulty conversion tool was used to convert to an intermediate file format subsequent conversions from the output of the faulty tool would not be successful.

At block the system re solves the network graph without using the nodes associated with the faulty conversion tool to identify the next optimum path using the available conversion tools. The process returns to block to convert the input file using the newly identified path.

At block the system begins to receive an uploading video file streamed from a user. Then at decision block the system determines if sufficient data has been received to start converting the file to a desired target format. If sufficient data has not yet been received block No at block the system waits and continues to receive the uploading file and returns to decision block .

If sufficient data has been received block Yes at block the system runs a rotation identification tool on the input file to determine the orientation of the video data. Then at decision block the system determines if the file format is compatible with the conversion tool or tools that the system has available for example mencoder. If the file format is not compatible block No at block the system converts the input file to an intermediate format that is compatible with the conversion tool and continues to block . If the file format is compatible with the conversion tool block Yes at block the system specifies the desired output format to the conversion tool.

The system applies the qt faststart program at block to the file in order to move the metadata to the beginning of the video file. This allows the output file to be streamed to the user while the conversion of the remainder of the file occurs if the user wishes to do so.

Then at block the system uses the video conversion tool to start converting the file whether it is the input file or an intermediate format file to the desired format. The conversion process on the file does not have to finish before streaming the converted portions to the user for previewing. The converted portions of the file is stored at block . The converted file can be written directly to a publicly available location in chunks and the video player can start reading the data and showing the video to the user before the file is finished converting.

At block the system receives input from a user requesting a file preview. Next at block the system compares the attributes of the file to analytics stored in a database containing attributes of previously converted files. Attributes can include the size of the file and the file format.

At block the system examines the format of the file to be previewed and determines the number of intermediate steps needed if any to convert the file to a target suitable for previewing.

Then at block the system uses the obtained data to determine an expected conversion duration. The system sets a timer and generates a progress indicator for displaying to the user at block . The progress of the conversion servers in performing the file conversion can be displayed in any suitable form such as a bar or a pie.

At block the system checks the timer and at decision block the system determines if the conversion has finished. If the conversion has completed block Yes the process ends at block . If the conversion has not finished block No at block the system updates the progress indicator and returns to block to check the timer.

At block the system sends the PDF file to a modified pdf2swf program. The modified pdf2swf program uses the Poppler PDF library for parsing the PDF file. The output of the modified pdf2swf program are instructions for generating a SWF file.

Then at block the system takes the instructions from the modified pdf2swf program and generates the corresponding SWF file for the PDF file. Using the generated SWF file the system provides a preview of the PDF file to the user.

At block the system collects data on a plurality of files that have been uploaded to the web based collaboration environment and user activity related to those files such as whether a file has been previewed by one or more collaborators or the uploading user. Then at block the system analyzes the data collected at block . The analysis can include statistical analysis of the collected data and identifying general trends that indicate a file is likely to be previewed. The result of the analysis includes one or more file criteria that alone or in any combination indicate that a preview of a file is likely to be requested by a user.

At decision block the system determines whether a file is being uploaded to the web based collaboration environment. If no file has is being uploaded block No the system waits at decision block until a file is uploaded.

If a file is being uploaded block Yes the system determines if any of the identified file criteria for likelihood of a preview being requested has been satisfied by the file. If no criteria are satisfied block No the process returns to decision block to await the uploading of another file.

If any of the criteria are satisfied block Yes then at block the system pregenerates the target file format for the uploaded file. The process ends at block .

At decision block the system determines if the file has been personally uploaded to the online content management system by a user or uploaded using another method such as through file transfer protocol FTP or automatically uploaded through the synchronization process between the online content management system and a folder on the user s computer. Typically when a file has been personally uploaded by a user the user is more likely to preview the file to ensure that it has been properly uploaded. If the file has been personally uploaded by a user block Yes at block the system pre converts the file to a format suitable for presenting as a preview.

If the file has not been personally uploaded by a user block No at decision block the system determines if the number of uploaded files is less than a predetermined threshold. Typically when a user uploads a large number of files the user is less likely to preview any of those files. If the number of uploaded files is less than the predetermined threshold block Yes at block the system pre converts the file s for previewing.

If the number of uploaded files is greater than the predetermined threshold block No at decision block the system determines if the format of any of the uploaded files is in a list of file formats that are to be pre converted. Typically when a user uploads a file that is on the list of file formats the user will request a preview of the file. If the format of any of the uploaded files is in the list at block the system pre converts the appropriate files. If none of the uploaded files is in a format on the list the process ends at block .

At decision block the system determines if the intermediate file format is useful for any application for example displaying the file on a mobile device. If the file format is useful block Yes at block the system saves the file format and the process ends at block .

If the file format is not useful block No at decision block the system determines if the intermediate file format is needed for generating a target format for presenting a requested preview of the file. If the file format is needed for generating a preview block Yes the system saves the file format at block .

If the file format is not needed for generating a preview block No at decision block the system determines if it is likely that a preview of the file will be requested. If it is likely a preview will be requested block Yes the system saves the file format at block .

If it is not likely that a preview will be requested block No at block the system discards the intermediate file format and the process ends at block .

In alternative embodiments the machine operates as a standalone device or may be connected e.g. networked to other machines. In a networked deployment the machine may operate in the capacity of a server or a client machine in a client server network environment or as a peer machine in a peer to peer or distributed network environment.

The machine may be a server computer a client computer a personal computer PC a user device a tablet PC a laptop computer a set top box STB a personal digital assistant PDA a cellular telephone an iPhone an iPad a Blackberry a processor a telephone a web appliance a network router switch or bridge a console a hand held console a hand held gaming device a music player any portable mobile hand held device or any machine capable of executing a set of instructions sequential or otherwise that specify actions to be taken by that machine.

While the machine readable medium or machine readable storage medium is shown in an exemplary embodiment to be a single medium the term machine readable medium and machine readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium and machine readable storage medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the presently disclosed technique and innovation.

In general the routines executed to implement the embodiments of the disclosure may be implemented as part of an operating system or a specific application component program object module or sequence of instructions referred to as computer programs. The computer programs typically comprise one or more instructions set at various times in various memory and storage devices in a computer and that when read and executed by one or more processing units or processors in a computer cause the computer to perform operations to execute elements involving the various aspects of the disclosure.

Moreover while embodiments have been described in the context of fully functioning computers and computer systems those skilled in the art will appreciate that the various embodiments are capable of being distributed as a program product in a variety of forms and that the disclosure applies equally regardless of the particular type of machine or computer readable media used to actually effect the distribution.

Further examples of machine readable storage media machine readable media or computer readable storage media include but are not limited to recordable type media such as volatile and non volatile memory devices floppy and other removable disks hard disk drives optical disks e.g. Compact Disk Read Only Memory CD ROMS Digital Versatile Disks DVDs etc. among others and transmission type media such as digital and analog communication links.

The network interface device enables the machine to mediate data in a network with an entity that is external to the host server through any known and or convenient communications protocol supported by the host and the external entity. The network interface device can include one or more of a network adaptor card a wireless network interface card a router an access point a wireless router a switch a multilayer switch a protocol converter a gateway a bridge bridge router a hub a digital media receiver and or a repeater.

The network interface device can include a firewall which can in some embodiments govern and or manage permission to access proxy data in a computer network and track varying levels of trust between different machines and or applications. The firewall can be any number of modules having any combination of hardware and or software components able to enforce a predetermined set of access rights between a particular set of machines and applications machines and machines and or applications and applications for example to regulate the flow of traffic and resource sharing between these varying entities. The firewall may additionally manage and or have access to an access control list which details permissions including for example the access and operation rights of an object by an individual a machine and or an application and the circumstances under which the permission rights stand.

Other network security functions can be performed or included in the functions of the firewall can be for example but are not limited to intrusion prevention intrusion detection next generation firewall personal firewall etc. without deviating from the novel art of this disclosure.

Unless the context clearly requires otherwise throughout the description and the claims the words comprise comprising and the like are to be construed in an inclusive sense i.e. to say in the sense of including but not limited to as opposed to an exclusive or exhaustive sense. As used herein the terms connected coupled or any variant thereof means any connection or coupling either direct or indirect between two or more elements. Such a coupling or connection between the elements can be physical logical or a combination thereof. Additionally the words herein above below and words of similar import when used in this application refer to this application as a whole and not to any particular portions of this application. Where the context permits words in the above Detailed Description using the singular or plural number may also include the plural or singular number respectively. The word or in reference to a list of two or more items covers all of the following interpretations of the word any of the items in the list all of the items in the list and any combination of the items in the list.

The above Detailed Description of examples of the invention is not intended to be exhaustive or to limit the invention to the precise form disclosed above. While specific examples for the invention are described above for illustrative purposes various equivalent modifications are possible within the scope of the invention as those skilled in the relevant art will recognize. While processes or blocks are presented in a given order in this application alternative implementations may perform routines having steps performed in a different order or employ systems having blocks in a different order. Some processes or blocks may be deleted moved added subdivided combined and or modified to provide alternative or subcombinations. Also while processes or blocks are at times shown as being performed in series these processes or blocks may instead be performed or implemented in parallel or may be performed at different times. Further any specific numbers noted herein are only examples. It is understood that alternative implementations may employ differing values or ranges.

The various illustrations and teachings provided herein can also be applied to systems other than the system described above. The elements and acts of the various examples described above can be combined to provide further implementations of the invention.

Any patents and applications and other references noted above including any that may be listed in accompanying filing papers are incorporated herein by reference. Aspects of the invention can be modified if necessary to employ the systems functions and concepts included in such references to provide further implementations of the invention.

These and other changes can be made to the invention in light of the above Detailed Description. While the above description describes certain examples of the invention and describes the best mode contemplated no matter how detailed the above appears in text the invention can be practiced in many ways. Details of the system may vary considerably in its specific implementation while still being encompassed by the invention disclosed herein. As noted above particular terminology used when describing certain features or aspects of the invention should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics features or aspects of the invention with which that terminology is associated. In general the terms used in the following claims should not be construed to limit the invention to the specific examples disclosed in the specification unless the above Detailed Description section explicitly defines such terms. Accordingly the actual scope of the invention encompasses not only the disclosed examples but also all equivalent ways of practicing or implementing the invention under the claims.

While certain aspects of the invention are presented below in certain claim forms the applicant contemplates the various aspects of the invention in any number of claim forms. For example while only one aspect of the invention is recited as a means plus function claim under 35 U.S.C. 112 sixth paragraph other aspects may likewise be embodied as a means plus function claim or in other forms such as being embodied in a computer readable medium. Any claims intended to be treated under 35 U.S.C. 112 6 will begin with the words means for. Accordingly the applicant reserves the right to add additional claims after filing the application to pursue such additional claim forms for other aspects of the invention.

