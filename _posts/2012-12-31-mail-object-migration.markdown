---

title: Mail object migration
abstract: A mail enabled object may be migrated from one hosting server to another by using a temporary buffer that may capture incoming mail during the migration operation. A new mail enabled object may be created and enabled on a target server, and the old mail object may be disabled and forwarded to a buffer that may collect incoming messages. While the buffer receives incoming messages, the contents of the old mail object may be copied to the new mail object. After verifying the transfer of the contents, the buffer may be released to forward any collected messages to the new mail object. The old mail object may then be cleaned up. The migration may be performed from one server to another, from one forest to another, and to and from a remotely hosted messaging service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08661088&OS=08661088&RS=08661088
owner: Microsoft Corporation
number: 08661088
owner_city: Redmond
owner_country: US
publication_date: 20121231
---
Mail enabled objects such as mailboxes may be provided on different servers or using different services. For example an enterprise may have one or more locally managed mail servers that may be organized in one or more forests of mail servers. Each mail server may host several mail enabled objects and various routing servers may be installed so that incoming mail and internal mail is routed to the appropriate server that may host an intended recipient mail enabled object.

Over time mail enabled object may be moved from one server to another or from one forest to another. For example an employee may transfer from one department or location to another and the employee s mailbox and other mail related objects may be transferred from one mail server to another.

In some cases mail enabled objects may be migrated from a locally hosted server to remotely hosted service. The remotely hosted service may be accessible over the Internet or other wide area network.

A mail enabled object may be migrated from one hosting server to another by using a temporary buffer that may capture incoming mail during the migration operation. A new mail enabled object may be created and enabled on a target server and the old mail object may be disabled and forwarded to a buffer that may collect incoming messages. While the buffer receives incoming messages the contents of the old mail object may be copied to the new mail object. After verifying the transfer of the contents the buffer may be released to forward any collected messages to the new mail object. The old mail object may then be cleaned up. The migration may be performed from one server to another from one forest to another and to and from a remotely hosted messaging service.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

A buffer may be used during the migration of a mail enabled object to capture any incoming messages. Forwarding mechanisms may be configured to temporarily forward messages to the buffer so that no messages are lost while the contents of an old mail enabled object are transferred to a new mail enabled object. Once the contents have been transferred and verified the forwarding mechanisms may be reset so that incoming messages are directed to the new mail enabled object.

The mail object migration may be performed from one mail server to another from one mail forest to another and between a locally hosted and remotely hosted mail service.

The migration may be performed without losing messages as incoming messages may be forwarded to the buffer during the migration. The buffer may be a mail enabled service that may use a temporary namespace. The temporary namespace may be a subdomain used by a forwarding agent or other mechanism on the old mail enabled object during the migration.

Different embodiments may use differing sequences for performing a migration operation. In some embodiments a single mail enabled object may be moved while in other embodiments multiple mail enabled objects may be moved in a single operation. In this specification example sequences are discussed for performing a migration but the embodiments described are selected to highlight various operational features of the embodiment not to limit the embodiment to a specific sequence.

Throughout this specification like reference numbers signify the same elements throughout the description of the figures.

When elements are referred to as being connected or coupled the elements can be directly connected or coupled together or one or more intervening elements may also be present. In contrast when elements are referred to as being directly connected or directly coupled there are no intervening elements present.

The subject matter may be embodied as devices systems methods and or computer program products. Accordingly some or all of the subject matter may be embodied in hardware and or in software including firmware resident software micro code state machines gate arrays etc. Furthermore the subject matter may take the form of a computer program product on a computer usable or computer readable storage medium having computer usable or computer readable program code embodied in the medium for use by or in connection with an instruction execution system. In the context of this document a computer usable or computer readable medium may be any medium that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The computer usable or computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. By way of example and not limitation computer readable media may comprise computer storage media and communication media.

Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by an instruction execution system. Note that the computer usable or computer readable medium could be paper or another suitable medium upon which the program is printed as the program can be electronically captured via for instance optical scanning of the paper or other medium then compiled interpreted or otherwise processed in a suitable manner if necessary and then stored in a computer memory.

Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

When the subject matter is embodied in the general context of computer executable instructions the embodiment may comprise program modules executed by one or more systems computers or other devices. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.

The diagram of illustrates functional components of a system. In some cases the component may be a hardware component a software component or a combination of hardware and software. Some of the components may be application level software while other components may be operating system level components. In some cases the connection of one component to another may be a close connection where two or more components are operating on a single hardware platform. In other cases the connections may be made over network connections spanning long distances. Each embodiment may use different hardware software and interconnection architectures to achieve the functions described.

Embodiment is an example of a system capable of migrating a mail enabled object from one server to another. The system may be capable of moving or migrating the mail enabled object without losing any incoming mail messages that may be received while the migration is being performed. The term migration may refer to the overall process of moving a user s mail enabled object to a new server while keeping the mail enabled object intact and the user s experience as close as possible to the prior configuration. In some embodiments a migration may be performed without the user being able to detect a difference.

A mail enabled object may be any type of object that may receive messages. In many embodiments a mail enabled object may have a mailbox for storing email messages as well as a list of contacts scheduling items tasks or other items. In some embodiments a mail enabled object may be a simple mailbox for receiving and storing email messages. For the purposes of this specification and claims the terms mail enabled object mail object and similar terms are used interchangeably.

Migration of mail enabled objects may be performed for many reasons. For example a small but growing company may find that one mail server does not provide adequate service and may add another mail server and migrate half of the mail enabled objects to the new server. A large enterprise may have separate mail servers for each division of the enterprise and an employee s transfer between two divisions may prompt a migration. An organization may upgrade an aging mail server with new hardware and software and may wish to migrate all mail objects from the old hardware to the new hardware en mass.

In some cases an organization may wish to change from an internally hosted mail system to a remotely hosted mail system. In a remotely hosted mail system mail enabled objects may be hosted at a remote location and may be managed by a third party. In many such situations the third party may be able to provide around the clock support backup operations and redundant systems that would otherwise be costly to provide locally. A user may access a remotely hosted mail enabled object by communicating over the Internet with a remote server.

Embodiment comprises a migration tool that may move a source mail enabled object on a source server to a target mail object on a target server . In many embodiments a source server and a target server may be arranged in separate forests.

At the beginning of the migration the source mail object may be operational and accessible by a user. The user may access the mail object using various applications that may enable the user to browse email change contacts add a schedule item or perform other related functions. The mail object may store email and other items in a persistent storage mechanism.

The migration tool may interface with the source server and target server to cause the servers to perform various functions. In some embodiments the migration tool may send commands to an application programming interface API defined for each server. Other embodiments may use different mechanisms to interface with each server.

In some embodiments a migration tool may be incorporated as a capability of one or both of the servers while in other embodiments the migration tool may be a standalone capability. Some implementations may use various hardware or software components or combinations of hardware and software components to implement the functionality of the migration tool .

The migration tool may implement various steps to migrate the source mail object to the target mail object . Each embodiment may perform the steps in various configurations to achieve the migration. The details of the steps described in this specification are selected to highlight the functional aspects of a migration tool but other sequences and steps may be used to achieve similar overall functionality.

The migration tool may interface with various forwarding mechanisms and on the source server and target server respectively. The forwarding mechanisms and may be configured to forward messages received by the respective forwarding mechanism to another object server or other location.

In many embodiments email that is received over a network may be addressed to a general domain associated with a user. For example a user s email address may be defined as user example.com. Within a domain name server DNS system a mail exchange record MS record may be defined to forward user example.com to the source server and the source mail object may have an address of user source.example.com where the source.example.com subdomain may be associated with the source server . Similarly the target mail object may be created with an address of user target.example.com.

The forwarding mechanisms and may be configured to receive a message within a subdomain and route the message to another subdomain. Other embodiments may use different mechanisms to forward and route messages. For example some forwarding mechanisms may update the MX record for a user s mail address. In some cases changes to an MX record may take a considerable amount of time to propagate and become effective. In other cases a receive and forward mechanism may be able to be updated and changes become effective immediately.

The migration tool may use a buffer as a temporary storage device for storing and queuing messages that are received during the migration process. In some embodiments the buffer may be a server that has a storage mechanism and may have a different subdomain name from the source server and target server . For example the buffer may be a server that has a subdomain buffer.example.com. Thus a forwarding mechanism or may forward messages by forwarding an incoming message to an address of user buffer.example.com following the example above.

One example of a migration sequence may operate by first creating the target mail object on the target server . The forwarding mechanism may be configured to forward any mail received by the target mail object to the source mail object . Some embodiments may not configure the forwarding mechanism in such a manner at this stage and may configure the target mail object to receive messages received by the target mail object .

The target mail object may be made active and accessible by a user at this point. The target mail object when initially created may be empty while the source mail object may contain a user s mailbox and other content.

The buffer may be configured to receive and store incoming messages. The buffer may have a forwarding mechanism that may forward messages to the target mail object but such a forwarding mechanism may be paused during the mail object migration.

The source mail object may be made inactive and any user activity with the source mail object may be halted. The user may be directed to log off and log in or the user connection may be redirected to the target server . In many embodiments the user may be capable of adding deleting or modifying items within a mail enabled object to which the user is connected. By moving the user connection from the source mail object to the target mail object any user modification may be made on the target mail object and user changes to the source mail object may be stopped.

The forwarding mechanism on the source server may be configured to route incoming messages to the buffer . At this point in the sequence the user may modify the target mail object but not the source mail object . Also any incoming messages may be routed to the buffer . In some embodiments user access to either the source mail object or the target mail object may be suspended until a migration has been completed.

In many embodiments a migration operation may be performed at night or during a downtime period where a user may not normally access a mail object. By doing a migration during such a period the possibility is reduced that a user may make a change to a mail object that is not propagated to the final configuration.

In embodiments where the forwarding mechanism is not configured to forward incoming messages incoming messages received by the target mail object may be received and stored in the target mail object .

In embodiments where the forwarding mechanism on the target server is configured to forward incoming messages to the source mail object the messages may be routed to the forwarding mechanism and then to the buffer . In many embodiments the forwarding mechanism may be configured in this manner so that an undo mechanism may be implemented if a migration is unsuccessful.

While the incoming messages to the source mail object are forwarded to the buffer the migration tool may transfer the contents of the source mail object to the target mail object . In cases where the contents are substantial and the connection between the two servers is slow the contents transfer may take a considerable amount of time. During this period incoming messages may be stored in the buffer and while such messages may not be accessible the messages may not be lost.

The contents transfer between the source mail object and the target mail object may be performed with various translation verification or other functions. In some embodiments the source server and target server may be operating different versions of a mail service or may perform mail functions in different manners. In such cases data from the source mail object may be translated configured or otherwise processed to conform to the configuration of the target mail object . Such processing may be performed during the transfer process in some embodiments. In other embodiments such processing or translation may be performed before or after the contents transfer from the source server to the target server .

In many embodiments the contents transfer may be accompanied by verification that the contents were transferred correctly. In some embodiments a verification mechanism may check the transfer of the contents during the transfer process while in other embodiments the verification may take place after transfer is complete.

The verification mechanism may be performed in many different manners. In a simple case the contents transfer may occur using many small data messages. The data messages may be verified using a checksum cyclic redundancy check CRC or some other message level verification. In other cases verification may be performed after the transfer has occurred. One mechanism may be a by a bit by bit comparison of data in the source mail object and the target mail object . In some cases a hash may be calculated for data in the source mail object and compared to a hash calculated for data in the target mail object. Other embodiments may use different verification mechanisms.

Once the contents have been transferred and verified the target mail object may be ready to receive and store messages. The buffer may be configured to transfer incoming messages to the target mail object and the forwarding mechanism may be configured to forward messages to the target mail object . In addition some embodiments may update an MX record to reflect the target server subdomain address for routing future incoming messages.

At this point in the migration process the user may be allowed access to the target mail object if such access was not granted previously. The target mail object may contain all of the contents of the source mail object plus any changes made by the user or through incoming messages.

Once the migration has been successfully completed the source mail object may be removed and any forwarding mechanisms may be directed to forward to the target mail object . In some cases the buffer may be kept operational for a period of time so that any incoming messages may be routed by the buffer while the various forwarding mechanisms are being changed.

In some cases the migration tool may detect that the contents transfer has not been completed successfully. In such a case the user access may be enabled for the source mail object the forwarding mechanism may be changed to forward messages to the source mail object . The buffer may be configured to forward queued messages to the source mail object . In such a case the migration may be aborted without losing any incoming messages.

The buffer may be assigned a subdomain namespace such as buffer.example.com. When messages are forwarded to the buffer the messages may be forwarded to the subdomain namespace and held in a queue. In some embodiments the buffer may be capable of queuing incoming mail for multiple mail objects.

The buffer may be capable of buffering and routing mail objects for individual mail objects. In such an embodiment a temporary mail object may be created within the buffer to queue messages. The temporary mail object may collect messages for the mail object and may forward those messages to a specific mail object when instructed. For example a temporary mail object user buffer.example.com may be created to queue incoming messages during a migration operation. The mail object user buffer.example.com may have a forwarding mechanism that is capable of forwarding mail to the source mail object or target mail object. When no forwarding object is defined messages that are collected in the temporary mail object may queue.

In another embodiment the buffer may collect mail without regard to a specific user name or mail object. When instructed the buffer may route the collected messages to another subdomain namespace en mass. For example the buffer may be assigned the subdomain namespace buffer.example.com. The buffer may collect and queue any messages forwarded to the subdomain buffer.example.com regardless of the username associated with the message. When instructed the buffer may release the queued messages and forward the messages to a target subdomain by routing all the messages to target.example.com regardless of the username. In such an embodiment the buffer may normally operate as a forwarding mechanism to pass messages to the target subdomain but may be paused during migration operations and resumed when the migration has completed. While paused the buffer may collect incoming messages and store the messages until forwarding is resumed.

In many messaging systems the timing and sequence of forwarding mechanisms may occur with considerable delay. For example a forwarding mechanism may be put in place to forward a message and meanwhile several messages may be propagating through the network for a period of time. Those messages may appear at the original destination several minutes or longer after the forwarding mechanism may be put in place. In some cases there may be a delay of hours or even days for some forwarding mechanism to take full effect.

With this in mind some steps in a migration process may be performed over several minutes or hours so that messages in transit are able to reach a destination before another setting is implemented. Many embodiments may configure forwarding mechanisms to forward messages to the buffer to capture messages that may be in transit during various stages of the migration process.

Other embodiments may use different sequencing additional or fewer steps and different nomenclature or terminology to accomplish similar functions. In some embodiments various operations or set of operations may be performed in parallel with other operations either in a synchronous or asynchronous manner. The steps selected here were chosen to illustrate some principles of operations in a simplified form.

Embodiment is an example of a migration process that may be performed by a migration tool as illustrated and discussed in .

In the operations performed on or by a source server are illustrated on the left hand column. Operations performed on or by a buffer are illustrated in the center column and operations performed on or by a target server are illustrated in the right hand column. The operations depicted in embodiment may be initiated by commands from a migration tool which may be a standalone function or may be a function incorporated into the source server the buffer and or the target server .

On the target server a target mail object may be created in block . The target mail object may be the new mail object to which a source mail object may be migrated.

A forwarding mechanism may be set to forward messages received by the target server to the source mail object in block .

The target mail object may be enabled in block . In other embodiments the target mail object may not be enabled until after verification has been received. In embodiments where the target mail object is enabled in block a user may have access to at least one mail object throughout the migration process. Such embodiments may make an undo or recovery process more difficult as a user may change the contents of the target mail object which may be captured and updated to the source mail object during an undo process. In embodiments where the user is denied access to a mail object during the migration an undo operation may be easier to perform.

On the source server a forwarding mechanism may be configured to forward messages to the buffer in block . The buffer may receive and queue all incoming messages in block .

At this point in the process incoming messages may be forwarded and stored in the buffer . Messages that may be received by the target server may be forwarded to the mail object on the source server and messages received on the source server including those forwarded by the target server may be forwarded to the buffer .

In this situation the only mechanism for changing any mail object may be a user. If the user is denied access to both the source and target mail objects there are no mechanisms by which changes may be made to the mail objects.

The contents of the source mail object may be transferred in block by the source server and received by the target server in block . In some embodiments a bit by bit copy of the contents may be performed. In other embodiments various translations manipulations or other processing may be performed during the transfer. For example a translation or manipulation may be performed to enable the contents of the source mail object to conform to a target mail object in some cases.

In many embodiments the contents of the source mail object may include items such as mail messages but may also include particular items that may be used by a client application to access the mail object. Such items may include unique identification labels such as globally unique identification GUID labels for the mail enabled object or data containers in the mail enabled object. Such identifiers may enable client applications to connect to the newly created target mail object and operate on the target mail object as if the target mail object were the source mail object.

The transferred contents may be verified in block . The verification may be performed in any manner. In some embodiments the verification may be performed during the transfer process while in other embodiments the verification may be performed after the transfer is complete.

Once verified the contents may be stored in block and may be ready to use. The storage of block may be to store the contents in a target mail object.

If the transfer occurs without errors in block the buffer may be set to deliver queued messages to the target mail object in block which may be received by the target mail object in block . At this point in the process the target mail object may be enabled if it already has not been. The target mail object may contain verified contents of the source mail object plus any messages received during the transfer process. The remaining items may relate to cleaning up.

In block the forwarding mechanism of the source server may be set to forward to the target mail object. Previously the same forwarding mechanism was configured in block to forward to the buffer . Here the buffer may be taken out of the loop. After a period of time the buffer function may be terminated in block . The period of time may be several milliseconds to several hours depending on the particular characteristics of the forwarding mechanisms and other elements. The period of time may be used to allow messages that were forwarded to the buffer to propagate through the network arrive at the buffer and be forwarded to the target mail object.

The source mail object may be cleaned up in block . In some embodiments the source mail object may be deleted and references to the source mail object may be updated to reflect the target mail object.

If the transfer was not proper in block a process for undoing the transfer or reverting to the original source mail object may be performed. The process may begin by enabling the source mail object in block and disabling the target mail object in block . In some embodiments the target mail object may not have been previously enabled in block .

The forwarding mechanism of block may be removed in block so that incoming messages are not routed to the buffer . The buffer may be configured to deliver stored messages to the source mail object in block . The messages may be received on the source server in block . After a period of time the buffer function may be terminated in block .

By disabling the forwarding mechanism in block and then enabling the forwarding in block a circular loop may be avoided between the buffer and the source mail object on the source server .

At this point in the process the source mail object is operational and may contain any messages received during the attempted but aborted migration process. If the target mail object was enabled in block changes made by the user to the target mail object may be updated to the source mail object. In cases where the migration fails for some reason such changes may not be available for updating and may be lost.

The target mail object may be cleaned up in block . Each embodiment may have different operations for cleaning up and some may include removing the target mail object merging any changes made to the contents of the target mail object with the source mail object and removing any other changes made during the migration.

The foregoing description of the subject matter has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the subject matter to the precise form disclosed and other modifications and variations may be possible in light of the above teachings. The embodiment was chosen and described in order to best explain the principles of the invention and its practical application to thereby enable others skilled in the art to best utilize the invention in various embodiments and various modifications as are suited to the particular use contemplated. It is intended that the appended claims be construed to include other alternative embodiments except insofar as limited by the prior art.

