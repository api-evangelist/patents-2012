---

title: Power management of periodic transmissions from networking applications
abstract: Methods and apparatus relating to power management of periodic transmissions from networking applications are described. In one embodiment, a periodic transmission manager logic coupled between one or more network applications and one or more network interfaces may control the flow of periodic transmissions from the one or more network applications to the one or more network interfaces. Other embodiments are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09310871&OS=09310871&RS=09310871
owner: Intel Corporation
number: 09310871
owner_city: Santa Clara
owner_country: US
publication_date: 20120717
---
The present application is a continuation of U.S. patent application Ser. No. 11 824 500 filed on Jun. 29 2007 entitled POWER MANAGEMENT OF PERIODIC TRANSMISSIONS FROM NETWORKING APPLICATIONS issued as U.S. Pat. No. 8 223 678 which is hereby incorporated herein by reference in its entirety and for all purposes.

The present disclosure generally relates to the field of electronics. More particularly an embodiment of the invention generally relates to power management of periodic transmissions from networking applications.

Portable computing devices are quickly gaining popularity in part due to their size. Since most portable computing devices rely on batteries to operate efficient use of battery power can become a critical operating issue. For example inefficient use of power in a portable computing device e.g. due to periodic transmissions from some networking applications may shorten the period during which the device may be used by a user. Also inefficient power usage may result in heat generation which may in turn damage the electronic components of a computing device.

In the following description numerous specific details are set forth in order to provide a thorough understanding of various embodiments. However various embodiments of the invention may be practiced without the specific details. In other instances well known methods procedures components and circuits have not been described in detail so as not to obscure the particular embodiments of the invention. Further various aspects of embodiments of the invention may be performed using various means such as integrated semiconductor circuits hardware computer readable instructions organized into one or more programs software or some combination of hardware and software. For the purposes of this disclosure reference to logic shall mean either hardware software or some combination thereof.

Some of the embodiments discussed herein may enable power management of periodic transmissions from networking applications. In particular networking applications may generate periodic transmissions in some current implementations resulting in power consumption. For example different applications within a device may wake irrespective of when other applications wake to send periodic messages. To address this and other issues in some embodiments periodic transmissions by one or more network applications may be coordinated for transmission in a burst for example to conserve power in a computing device including for example a device that relies on battery power to operate. However the embodiments discussed herein are not limited to computing devices that rely on battery power and may be applied in any computing device to conserve power.

Moreover some current applications sending periodic network packets may not coordinate their wake events. This can cause power to be consumed during the following events for example 1 the operating system OS suspend resume of an application 2 the OS suspend resume of a network interface 3 the network application running 4 the network interface driver running and or 5 the network interface hardware and or embedded software sending packets.

In accordance with some embodiments power savings may be realized based on one or more of the following A reduction of the number of OS application suspend resume actions e.g. an embodiment may combine these events based on a defined policy of how frequently a system wakes B reduction of the number of OS network interface suspend resume actions e.g. an embodiment may combine these events based on a defined policy of how frequently a system wakes and or C reduction of the run time of network applications.

As shown in the PTM logic may be coupled to a PTM user interface UI e.g. to allow manipulation of various operations performed by the PTM logic by a user. Also the PTM logic may be coupled to a policy database e.g. to provide access to policy information that may indicate how frequently a system is to wake and or a log e.g. which may store information regarding occurrence of various events relating to the operations of the PTM logic . In one embodiment as illustrated in transmissions by the network application s that are non periodic may be directly passed to the corresponding network interface s e.g. via a communication link which may directly couple applications and interfaces in an embodiment . Periodic transmissions may however be passed from the network application s to the corresponding network interface s via the PTM logic . As such the PTM logic may coordinate periodic network related transmissions in a computing device e.g. to conserve power.

In one embodiment the PTM logic may be implemented as a background task or network application thus it may consume power when it executes in an embodiment. Moreover in one embodiment an instance of the PTM logic may be designed with power efficiency in mind unlike some general purpose network applications. In an embodiment a packet corresponding to a periodic transmission from a network application e.g. applications s to a network interface e.g. interface s may be received. Policy data e.g. stored in the database may used to determine whether the packet is to be held for a time period. The packet may be transmitted to the network interface in response to a determination e.g. by the PTM that the packet is to be transmitted to the network interface. In one embodiment the determination that the packet is to be transmitted to the network interface may be based on an expiration of the time period. Additionally non periodic transmissions generated by the network application may be directly transmitted to the network interface in an embodiment.

Furthermore some of the embodiments discussed herein may be applied to various periodic network application transmissions including but not limited to virtual private network VPN keep a lives to keep an idle VPN connection from being disconnected and a session initiation protocol SIP client to server keep alive so the SIP server knows the SIP client is available for a voice over Internet protocol VoIP call or instant message query. Paging and location applications might also utilize some embodiments discussed herein. Examples of network services that may use some of the embodiments include a DHCP Dynamic Host Configuration Protocol client registering a DHCP renew request or a supplicant registering a request to re authentication e.g. in compliance with Institute of Electrical Electronics Engineers IEEE 802.1x specification June 2004 with an authentication server e.g. in compliance with the aforementioned IEEE 802.1x specification . Hence some embodiments may reduce power consumption associated with DHCP renews and 802.1x re authentication which may also make wake on wireless LAN local area network more robust in some embodiments.

In some embodiments a service may be utilized to implement one or more methods. In an embodiment an instance of the service may be implemented as software or firmware. Alternatively the service may be implemented as logic including hardware circuitry and or combinations of software firmware and or hardware. below discuss embodiments of two methods which may be triggered through an API called by network applications of to PTM referred to as PTM Register and PTM UnRegister respectively. Another method e.g. discussed with reference to may be performed internal to PTM logic e.g. not triggered by the API call which is referred to herein as Send in some embodiments. Various components of may be used to perform the operations discussed herein including the operations discussed with reference to .

Additionally in some embodiments the following configuration parameters may be set 1 PTMMinWake in some time unit e.g. milli seconds or seconds and or 2 PTMAverageWake in some time unit. Examples of setting configuration parameters may include but are not limited to 1 user sets parameters via a UI e.g. UI of 2 device administrator e.g. corporate information technology wireless provider etc. sets parameters in an area protected from users e.g. file registry and or 3 device manufacturer may set parameters in an area protected from device administrator e.g. in EEPROM Electronically Erasable Programmable Read Only Memory .

In accordance with some embodiments the variables and data structures discussed herein e.g. using C constructs may be as follows 

 a Send may be an array of structures. The structures may consist of MinWake CountDownTimer and or a link list of PacketInfo structure.

Furthermore each Send entry may correlate to a wake time. Also each PacketInfo entry may correlate to a packet to be sent. Multiple packets may be sent for each wake period in some embodiments. Further when no packets for a particular Send exist the Send entry may be null.

The following pseudo code illustrates an instance of the application programming interfaces APIs which may be used in some embodiments to trigger the PTM Register and PTM UnRegister operations discussed herein.

In one embodiment if an instance of the above APIs is operating on an ultra mobile PC UMPC using e.g. the Microsoft Vista operating system then PeriodicPacketBuffer may be a layer IP packet that can be sent in its entirety over a layer Ethernet LAN IEEE 802.11 WLAN network interface. In the case of the VPN virtual adapter the virtual adapter may encrypt this packet then send it over an appropriate network interface just as it may with all layer packets.

As shown in if operation returns a negative response at operation a new Send i entry may be created. At operation a handle may be allocated. At operation information including for example corresponding adapter packet and or handle may be added to the Send i . At operation the corresponding MinWake and countdown timer e.g. implemented in the PTM logic in one embodiment may be adjusted if the new send occurs earlier than the existing sends. At operation a wake time may be set e.g. within the PTM logic in one embodiment . The method terminates at operation by returning the handle.

Moreover the techniques discussed herein may be applied for various computing system components such as the components discussed with reference to the system of . For example one or more of each of the network applications database log UI and or network interfaces of may be stored in the memories discussed with reference to to control the operations and or power consumption levels of network interface device s as discussed with reference to . Also the PTM logic may be stored as a software routine in the aforementioned memories or implemented in hardware present in the system such as within the chipset and or network interface device s . Of course depending on the embodiments each of the components discussed with reference to may be present in different locations within .

More particularly illustrates a block diagram of a computing system in accordance with an embodiment of the invention. The computing system may include one or more central processing unit s CPUs or processors through P which may be referred to herein as processors or processor . The processors may communicate via an interconnection network or bus . The processors may include a general purpose processor a network processor that processes data communicated over a computer network or other types of a processor including a reduced instruction set computer RISC processor or a complex instruction set computer CISC . Moreover the processors may have a single or multiple core design. The processors with a multiple core design may integrate different types of processor cores on the same integrated circuit IC die. Also the processors with a multiple core design may be implemented as symmetrical or asymmetrical multiprocessors. In an embodiment the operations discussed with reference to may be performed by one or more components of the system .

A chipset may also communicate with the interconnection network . The chipset may include a graphics memory control hub GMCH . The GMCH may include a memory controller that communicates with a memory . The memory may store data including sequences of instructions that are executed by the processor or any other device included in the computing system . In one embodiment of the invention the memory may include one or more volatile storage or memory devices such as random access memory RAM dynamic RAM DRAM synchronous DRAM SDRAM static RAM SRAM or other types of storage devices. Nonvolatile memory may also be utilized such as a hard disk. Additional devices may communicate via the interconnection network such as multiple CPUs and or multiple system memories.

The GMCH may also include a graphics interface that communicates with a graphics accelerator . In one embodiment of the invention the graphics interface may communicate with the graphics accelerator via an accelerated graphics port AGP . In an embodiment of the invention a display such as a flat panel display a cathode ray tube CRT a projection screen etc. may communicate with the graphics interface through for example a signal converter that translates a digital representation of an image stored in a storage device such as video memory or system memory into display signals that are interpreted and displayed by the display. The display signals produced by the display device may pass through various control devices before being interpreted by and subsequently displayed on the display.

A hub interface may allow the GMCH and an input output control hub ICH to communicate. The ICH may provide an interface to I O devices that communicate with the computing system . The ICH may communicate with a bus through a peripheral bridge or controller such as a peripheral component interconnect PCI bridge a universal serial bus USB controller or other types of peripheral bridges or controllers. The bridge may provide a data path between the processor and peripheral devices. Other types of topologies may be utilized. Also multiple buses may communicate with the ICH e.g. through multiple bridges or controllers. Moreover other peripherals in communication with the ICH may include in various embodiments of the invention integrated drive electronics IDE or small computer system interface SCSI hard drive s USB port s a keyboard a mouse parallel port s serial port s floppy disk drive s digital output support e.g. digital video interface DVI or other devices.

The bus may communicate with an audio device one or more disk drive s and one or more network interface device s which is in communication with the computer network . Other devices may communicate via the bus . Also various components such as the network interface device may communicate with the GMCH in some embodiments of the invention. In addition the processor and the GMCH may be combined to form a single chip. Furthermore the graphics accelerator may be included within the GMCH in other embodiments of the invention.

Furthermore the computing system may include volatile and or nonvolatile memory or storage . For example nonvolatile memory may include one or more of the following read only memory ROM programmable ROM PROM erasable PROM EPROM electrically EPROM EEPROM a disk drive e.g. a floppy disk a compact disk ROM CD ROM a digital versatile disk DVD flash memory a magneto optical disk or other types of nonvolatile machine readable media that are capable of storing electronic data e.g. including instructions . In an embodiment components of the system may be arranged in a point to point PtP configuration. For example processors memory and or input output devices may be interconnected by a number of point to point interfaces.

In various embodiments of the invention the operations discussed herein e.g. with reference to may be implemented as hardware e.g. logic circuitry software firmware or any combinations thereof which may be provided as a computer program product e.g. including a machine readable or computer readable medium having stored thereon instructions or software procedures used to program a computer e.g. including a processor to perform a process discussed herein. The machine readable medium may include a storage device such as those discussed with respect to .

Additionally such computer readable media may be downloaded as a computer program product wherein the program may be transferred from a remote computer e.g. a server to a requesting computer e.g. a client by way of data signals embodied in a carrier wave or other propagation medium via a communication link e.g. a bus a modem or a network connection . Accordingly herein a carrier wave shall be regarded as comprising a machine readable medium.

Reference in the specification to one embodiment or an embodiment means that a particular feature structure and or characteristic described in connection with the embodiment may be included in at least an implementation. The appearances of the phrase in one embodiment in various places in the specification may or may not be all referring to the same embodiment.

Also in the description and claims the terms coupled and connected along with their derivatives may be used. In some embodiments of the invention connected may be used to indicate that two or more elements are in direct physical or electrical contact with each other. Coupled may mean that two or more elements are in direct physical or electrical contact. However coupled may also mean that two or more elements may not be in direct contact with each other but may still cooperate or interact with each other.

Thus although embodiments of the invention have been described in language specific to structural features and or methodological acts it is to be understood that claimed subject matter may not be limited to the specific features or acts described. Rather the specific features and acts are disclosed as sample forms of implementing the claimed subject matter.

