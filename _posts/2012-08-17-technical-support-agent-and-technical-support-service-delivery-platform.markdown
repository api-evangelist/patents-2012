---

title: Technical support agent and technical support service delivery platform
abstract: An embodiment of a method for providing technical support service includes generating a plurality of problem resolutions that are determined to resolve an identified technical problem; attributing weights to each of said plurality of problem resolutions according to frequency of use; and in response to a request to resolve said identified problem, selecting a problem resolution from among said plurality of problem resolutions based at least in part on said attributed weights.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08666921&OS=08666921&RS=08666921
owner: Troppus Software Corporation
number: 08666921
owner_city: Boulder
owner_country: US
publication_date: 20120817
---
This application claims the benefit of U.S. Provisional Application No. 60 882 928 filed Dec. 30 2006 and titled TECHNICAL SUPPORT AGENT AND SERVER SIDE TECHNOLOGY AND SERVICE DELIVERY PLATFORM FOR PROVISIONING A CUSTOMER TECHNICAL SUPPORT SOLUTION which is incorporated herein by reference for all purposes.

Internet service providers ISPs provide connections to the Internet for millions of customers and the untapped market is still substantial. ISPs today may offer one or more of cable phone and Internet service. In addition to providing the underlying cable phone or Internet service most ISPs also provide a host of other services to their customers such as email personalized homepages web page hosting and other content and or value added resources. Quality of Service QoS is an important determinant of customer satisfaction with an ISP. Customers today have come to expect high quality service virtually all the time. If expected QoS is not met customers expect the problem to be fixed promptly. Unfortunately for a number of reasons ISPs are often unwilling or unable to adequately address customers complaints when they have arisen.

Of course no matter how hard an ISP tries technical and other problems occur which reduce the perceived QoS. For one thing the cause of the customer s problem may not be the ISP equipment or service but rather the customer s computer software or other equipment. The reduction in QoS can range from simply a slow connection speed to inability to access a particular service e.g. email up to outright failure to connect to the Internet. In a perfect world these problems would not occur but reasonable Internet users understand and accept that these problems will occur from time to time. When expected QoS is not met customers often call on their ISP to fix the problem even if the cause of the failure is not the ISP . The ISPs that are able to promptly and professionally fix the customer s problems will tend to keep their customers happier. As a result ISPs that can promptly and professionally address customers QoS complaints stand to succeed whereas ISPs that cannot fix these problems in a quick efficient low cost professional and thorough manner will tend to lose out to their competition.

Accordingly ISPs typically provide resources that customers can call on when problems arise. Through these resources customers can typically notify the ISP of the problem and attempt to get the problem fixed. For example a telephone number e.g. a 1 800 number may be provided with which the customer can contact a technical help desk and talk to a technical support person who can walk the person through a series of steps to attempt to fix the problem. In addition the ISP may provide a self help Web site with technical support information. The customer may be able to type in a problem report also referred to as an incident report to be sent over the network to a technician who will reply with a suggested fix. The ISP may even dispatch a technician to the customer s home.

Unfortunately these conventional methods have significant limitations. ISPs typically cannot afford to send a technician to every customer s home when they complain of service problems such an approach would be cost prohibitive. With regard to Web based support conventional self help Web sites often leave customers confused and bewildered due to their lack of knowledge in computer software and network technology. Furthermore customers and support technicians e.g. telephone based chat based email based often have inadequate or inappropriate tools to address the customer s particular problem. Support technicians typically do not have a complete view of the customer s computer system and must rely on the customer s knowledge of his her own system which may be very limited.

Most frustrating after all attempts to address a customer s problem fail the ISP often simply notifies the customer that the service provided by the ISP is functioning properly and the customer s problem is not the ISP s responsibility. Problems that are not due to the ISP s equipment or service are often referred to as out of scope with respect to the ISP and the customer is left stranded to fend for himself or to chase down other vendors to find a solution.

All of the above situations result in unnecessary costs wasted time and all too often a very dissatisfied customer. When overall customer satisfaction drops the ISP generally experiences a high rate of customer churn i.e. customers leaving the ISP for a competing ISP an increased cost of acquiring new customers and the cost of re acquiring former customers. In addition when customer satisfaction falls the ISP typically has significant resistance among its existing customer base to adopt new advanced services such as Voice over Internet Protocol VoIP service video on demand music on demand or other services that might otherwise generate new revenue.

An embodiment of a method for providing technical support service includes generating a plurality of problem resolutions that are determined to resolve an identified technical problem attributing weights to each of said plurality of problem resolutions according to frequency of use and in response to a request to resolve said identified problem selecting a problem resolution from among said plurality of problem resolutions based at least in part on said attributed weights. The method may further include delivering said selected problem resolution to a client application that generated said request. Selecting a problem resolution from among said plurality of problem resolutions may include selecting said problem resolution having said greatest weight among said plurality of problem resolutions.

The method may further involve classifying each of said plurality of problem resolutions according to skill level required to implement said problem resolution. Selecting a problem resolution from among said plurality of problem resolutions may further include selecting a problem resolution based at least part on skill level required to implement said problem resolution.

A method of providing technical support to an end user of an end user system includes inferring skill level of said end user based on usage patterns of said end user and selecting a problem resolution to resolve an identified technical problem exhibited by said end user system wherein selecting a problem resolution is based at least in part on said skill level of said send user. The method may further include prioritizing resolutions based on relationships between agent skill level end user skill level and applicably weighted resolutions.

An embodiment of a method for delivering a service includes receiving a request from a client application for a service to satisfy a need the client application including one or more disabled licensable features determining that one of the one or more disabled licensable features could provide the service to satisfy the need and enabling the one of the one or more disabled licensable features.

Another embodiment of a method for delivering a service includes establishing communication with a client application executing on a client system the client application including one or more disabled features selecting one of the one or more disabled features based at least in part on client system parameters and enabling the selected one of the one or more disabled features.

Yet another embodiment of a method for delivering technical support service includes selecting a customer via a customer selection graphical element and presenting an adaptive ticket data entry region for entry of problem report ticket data for a selected problem report ticket associated with the selected customer wherein the ticket data entry region includes a plurality of ticket data entry fields wherein data options that are selectable in at least one data entry field adapt in response to one or more data option selections in at least one other data entry field.

An embodiment of an adaptable problem report ticket includes a customer identifier a problem report ticket identifier a plurality of data elements wherein a first data element is selected from a first set of data options and wherein a second data element is selected from a second set of data options and wherein the second set of data options is adapted according to the option selected from among the first set of data options for the first data element.

Another embodiment of an adaptable problem report ticket includes a customer identifier a problem report ticket identifier and a first data element selected from a first set of data options wherein selection of the first data element from among the first set of data options causes a second set of data options to adapt wherein data options of the second set are selectable for a second data element.

An embodiment of an adaptive ticket management system for managing technical problem report tickets includes a ticket including a plurality of data fields each data field configured to hold designated type of ticket data and a ticket information entry user interface configured to enable entry of ticket data into each of the data fields wherein the ticket information entry user interface adapts the range of ticket data available for entry in a selected data field based on ticket data entered into previously selected data field. The range of ticket data available for entry into the previously selected data field may include hardware software and network.

An embodiment of an apparatus includes a device platform an operating system executable on the device platform and a client application operable to facilitate technical support services independent of the operating system and the device platform.

An embodiment of a method includes providing a device platform providing an operating system on the device platform and loading a client application on the device platform the client application being operable to facilitate technical support services independent of the operating system and device platform.

While the invention is amenable to various modifications and alternative forms specific embodiments have been shown by way of example in the drawings and are described in detail below. The intention however is not to limit the invention to the particular embodiments described.

Embodiments of the present invention relate to a agent technical support application providing a user agent with tools to interact with a user and provide technical support. The agent support application provides a user interface to the agent and an interface to a knowledge base of technical support information that can be pushed to the a client. The agent user interface can be a configurable browser based interface. For example the manner of display of client information can be customized by the agent. In some embodiments user interface configurability is enabled using a browser enabled web application creation technology such as Asynchronous JavaScript and XML AJAX . As such each agent can dynamically adjust the look and feel of data presentation to the particular agent.

Embodiments of the agent support application include a ticketing system that allows for dynamically creating a technical support ticket on a per incident basis. Through the agent support application interface the agent can enter context specific data or select from context specific options to build the ticket. When a client calls in for technical support the agent can search for a client profile from the knowledge base using a number of different client criteria. By way of example but not limitation the agent can search by client name customer account machine identifier license identifier and ticket identifier.

Embodiments of the agent support application can include a chat module for chatting with one or more clients. Through the chat module the agent can gather client information and provide information to the client. In addition the agent can push solutions or documents to the user. A solution may be in the form of hyper link to a step by step process that the client can follow to potentially solve the technical problem. Such solutions are typically specific to the client s particular technical configuration including the particular hardware and software components brands versions interconnections and so forth.

In accordance with various embodiments the agent side support system is an automated tier system. In these embodiments the agent application doesn t need any special knowledge. The agent application can gather any necessary information from a remote technical support platform that includes a technical support knowledge base. The agent can access support applications on the technical support platform for dynamic technical support services. For example the agent can push technical solutions to a client.

Embodiments of the agent support application provide for multi customer or multi client sessions. In these sessions the agent can interact with multiple clients simultaneously. This may include multiple simultaneous chat sessions multiple dispositions and or multiple tickets.

Various embodiments of the agent support application may include other technical support tools or have the ability to access such tools through the technical support platform. By way of example but not limitation the agent application may include remote control functionality that enables an agent to remotely access and control the client s computer. By way of further example the agent application may include an RMA module.

As yet another example the agent support application can employ a service dispatching tool for dispatching on site technical support to the client s location. The on site service dispatch system can generate a service ticket to trigger on site technical service. The ticket can include reference or otherwise provide all relevant client system profile data any prior activity history and or directions specifications of a desired or recommended fix.

Prior to describing one or more preferred embodiments of the present invention definitions of some terms used throughout the description are presented.

The term service provider refers broadly to any provider of products or services to one or more customer s . Service providers include without limitation Internet service providers ISPs network service providers NSPs and broadband service providers BSPs cable providers digital subscriber line DSL providers digital satellite link providers wireless service providers and telecommunications providers e.g. regional telephone service providers .

The term technical support job or simply job refers to the processes carried out from the time a problem is reported to a final disposition of the problem. A job may span multiple interactions between the end user and a support agent. Typically a job is uniquely associated with an identifier such as a ticket to allow for referencing the job later.

The term end user or end user refers to an individual who is using a product or service for which customer or technical support may be provided.

The term customer refers broadly to any consumer of services or products. Customers can include without limitation individuals or entities which may have more than one end user such as households with one or more end users home businesses small businesses colleges universities government organizations and for profit and nonprofit companies.

The term quality of service refers broadly to the degree of excellence of a service or product. Quality of service is not limited to quality of service as that term is commonly understood in the TCP IP protocol and or packet switched networks and or computer networking. Rather quality of service more generally relates to an end user s satisfaction or dissatisfaction with the performance of a product or service.

The term module refers broadly to a self contained functional component. A module may be composed of software hardware or firmware or any combination thereof . Modules are typically functional components that can generate useful data or other output using specified input s . An application program also called an application may include one or more modules or a module can include one or more application programs.

The terms connected or coupled and related terms are used in an operational sense and are not necessarily limited to a direct connection or coupling.

The phrases in one embodiment according to one embodiment and the like generally mean the particular feature structure or characteristic following the phrase is included in at least one embodiment of the present invention and may be included in more than one embodiment of the present invention. Importantly such phrases do not necessarily refer to the same embodiment.

If the specification states a component or feature may can could or might be included or have a characteristic that particular component or feature is not required to be included or have the characteristic.

The term computer readable media is media that is accessible by a computer or computer like device e.g. game console IP devices and can include without limitation computer storage media and communications media. Computer storage media generally refers to any type of computer readable memory such as but not limited to volatile non volatile removable or non removable memory. Computer storage media may be magnetic optical or other format. Communication media refers to a modulated signal carrying computer readable data such as without limitation program modules instructions or data structures.

One embodiment is a platform that includes an Internet based service and support architecture that enables the efficient delivery of technical support to a consumer e.g. Internet user or ISP customer . In this embodiment a thin client software package facilitates communication and interaction with a technical support services architecture. The technical support service architecture may include a large portal infrastructure that contains information for use in providing or obtaining technical support. The information may be viewed as a warehouse of information gathered from multiple technical support incident reports and the jobs carried out to resolve them.

In some embodiments the architecture is implemented according to an n tier e.g. three tier or multi tier client server model. As such the architecture is modular and any of the n tiers can be upgraded independently of the other tiers. In a three tier or multi tier approach a user interface tier executes on one or more user computers e.g. desktop PC a technical support services architecture executes on one or more network based application servers and data is stored by and accessed from one or more network based database server s . Technician user computer interfaces and or end user computer interfaces are adapted to communicate with one or more applications of the technical support services architecture.

The architecture may be implemented using a virtual machine such as .NET from Microsoft Corporation or Java Virtual Machine from Sun . Data may be stored in databases in accordance with any number of database models such as flat hierarchical network relational object oriented or others. By way of example but not limitation Microsoft Structured Query Language SQL Oracle or MySQL databases may be used. Servers and their related services may be implemented using Microsoft s Internet Information Services IIS or Apache Hypertext Transport Protocol HTTP Servers or others as appropriate to a particular implementation.

Each network represents a logical network that is provided owned managed and or maintained by a service provider. Of course a service provider may actually use one or more other service providers network s in providing service to the end user computer system . For example a service provider may contract with wholesale network service providers and or have peering arrangements with backbone networks or other arrangements whereby traffic through a SP network is routed through other provider networks. Each network can include the Internet or a portion thereof a Voice over Internet Protocol VoIP network or other networks or sub networks that the end user may access. Importantly communication via the networks may be wireless wired or any combination thereof.

End user computer systems typically include a computer such as but not limited to a personal computer PC and one or more peripheral devices such as a printer fax machine external mass storage device e.g. CD ROM disk drive . It will be understood by those skilled in the art that in general the customer may utilize any type of computing device such as but not limited to a laptop computer a handheld computer or an Internet enabled cellular telephone. The end user computer system may represent or be part of a home or business local area network LAN . End user computer systems typically include one or more communications devices or adapters to connect to the service provider network . Other network components such as a router firewall or a broadband modem may be communicably coupled to computers in the system to provide for network communication data security network address translation NAT or communication between end user computers on a LAN.

Accordingly the end user generally makes use of multiple components in end user computer system . Of course for numerous reasons at any given time the components e.g. hardware devices software applications of the end user computer system or the SP network may have technical problems that render the quality of service to the end user less than satisfactory. In these situations the end user can obtain technical support from one or more sources through an end user client . For example end user system includes end user client and end user system includes . The and user clients execute on a computer of the end user s system . The end user clients typically include at least in part a client interface and one or more applications or applets . The interface is an interface to the services oriented architecture and the applications provide functionality related to obtaining customer support from the architecture and customer support agents .

For example through the interface the client can contact customer support agents who provide customer support through customer agent computer systems at one or more customer support center . Similarly the client can contact customer support agent systems associated with customer support center . The customer support agents can provide services and data to assist the end user in identifying the cause of technical problems and in determining potential solutions.

In these and other embodiments in addition to or as an alternative to contacting customer support agent s end user clients may access the services oriented architecture for technical support including assistance with products and services associated with their computer system . As discussed further below the client interfaces are adapted to communicate with modules of the services oriented architecture . For example the end user can access intelligent and or interactive self help tools executing on the services oriented architecture. In addition the end user client interfaces and a customer support agent interfaces of the customer support agent computer system can access a chat or messaging service provided by the services oriented architecture whereby the end user can chat or message a customer support agent.

Although specific embodiments of the services oriented architecture are described herein with regard to providing technical support services for a computer system it is to be understood that other embodiments of the services oriented architecture can relate to providing customer support for a wide variety of products and services. By way of example but not limitation end users may need assistance in fixing assembling or troubleshooting automobiles home office appliances machines tools household products toys or other products they use or own. The customer agents can assist the and users in detecting problems determining a solution and implementing the solution. Although embodiments can be beneficially applied to many areas of customer support embodiments described herein relate to the providing of technical support for end users computer systems .

Although only two end user computer systems are shown in in actual operation there will be many more e.g. thousands or millions end user computer systems . In addition although the same numerical labels may be used to call out multiple modules devices or systems this is merely for convenience of description and does not imply that these modules devices or systems are identical. For example in general end user computer systems will have different hardware software and or have different configurations.

The term support center refers to a logical organization of customer support agents and does not imply that the customer support agents are necessarily physically located in the same location. As such the customer support agent computer systems may or may not be geographically near each other or even in the same building for each support center . For example different ones of the customer support agents using computer systems i.e. the customer support agents associated with support center may be located in Los Angeles Calif. Kansas City Mo. and Anchorage Ak. In this situation customer support requests from end users may be selectively routed to the customer support agents in each of the cities based on various criteria such as availability expertise geographic proximity network proximity or network load balancing considerations.

Although each service provider network is shown as associated with one support center in it is to be understood that embodiments are not limited to one to one relationships. In general a support center may provide services for numerous SPs in addition to SP network and SP network may utilize multiple support centers in addition to support center

The services oriented architecture provides automated customer support services. In various embodiments the services oriented architecture is accessible by end users as well as customer support agents. The services oriented architecture may be implemented in one or more server computers or other computing devices. The services oriented architecture provides access to various customer support applications and data which can be used by end users and customer support agents. The services oriented architecture also provides mechanisms through which end users and agents can communicate with each other.

The services oriented architecture generally supports a technical or customer support platform that is scaleable and extensible to provide customer support with respect to numerous different types of products or services within a category of products or services . For example embodiments described below relate to providing technical support to identify and solve problems in numerous different end user computer systems even though different end user systems may have different configurations of hardware and software. Information learned from end user systems e.g. from the clients such as problem scenarios and solutions can be advantageously applied to or stored in the services oriented architecture where it can be used by other end users or customer support agents.

Support centers can subscribe to the services oriented architecture . In some embodiments knowledge acquired by different support centers such as support center n and support center a can be used by the other s . Embodiments of the customer or technical support platform are described in further detail below and further illustrate the general application or leveraging of knowledge from individual customer support interactions to the wider community of end users and customer support agents.

Other users may access the services oriented architecture through other user computer systems . Other computer systems may communicate with the services oriented architecture over another network as shown or the other user computer systems may communicate over one of the service provider networks . Other users may be managers or administrators of the services oriented architecture . For example administrative users may upload new applications or data through the services oriented architecture. New applications or data may then be accessed by end users and customer support agents.

Generally end user computer systems customer support agent computer systems and other user computer systems provide interfaces to the service oriented architecture . Each of the computer systems generally has a browser application as well as other application programs and or applets that enable access to and communication functionality with the services oriented architecture .

In this regard the technical support services architecture is one particular embodiment of the service oriented architecture . Support technician interface support technician interface through support technician X are interfaces that could be used in customer support agent computer systems through customer support agent computer systems . End user interface end user interface through end user interface n are particular embodiments of end user interface through end user interface . Also shown in the system of are an administrator user interface and manager user interface .

The technical support services architecture provides automated technical support services to end user interfaces and support technician interfaces by in part providing access to applications and data for use in providing technical support. More specifically the technical support services architecture includes a number of functional modules that facilitate the provisioning of technical support services. In the illustrated embodiment the technical support services architecture includes one or more application programming interfaces APIs communications utilities drivers self service tools management tools and third party integration tools .

With further regard to the end user interfaces support technician interfaces administrator user interface and or manager user interfaces in one embodiment these interfaces are included in respective client applications executing on the respective computer systems. In these embodiments a client application typically includes applets applications other executables and or data that enable the various computer systems e.g. end user computer systems technical support agent computer systems etc. to contact communicate with and use the applications of the technical support services . Typically different client applications reside on the technical support agent computer system the end user computer system the management computer system and the administrative computer system due to the different responsibilities of each of these users. As is discussed further below the various client applications can be deployed to the respective user computer systems by the technical support services architecture e.g. by the management tools .

APIs include programming interfaces and or web interfaces to one or more of the applications and or tools utilities or other modules of the architecture . Examples of applications and corresponding interfaces are a chat application and chat integration API and an electronic mail email application and an email interface. In these examples and as discussed in further detail below support technicians and end users can communicate with each other by sending messages through the chat application and the email system. APIs may also include interfaces that allow managers administrators and or support technicians to add third party applications and data to the technical support services architecture . Numerous other APIs may be included embodiments of which are further described below.

Communications utilities include functionality supporting communication applications including chat email instant messaging and others. For example communications utilities can include an email exchange server point of presence POP simple mail transport protocol SMTP and Short Message Service SMS as well as telephone communications support such as Internet Protocol Telephony IPT and Automatic Call Distribution ACD . Drivers include one or more drivers for determining how the one or more databases will communicate with other systems such as manager interfaces or administrator interfaces . For example the drivers may support Microsoft s Structured Query Language SQL database calls and or Oracle database calls.

Self service tools include one or more tools that can be used by the end user without the assistance of a support technician. Examples of self service tools include but are not limited to key word searches for searching databases for topical information frequently asked questions FAQs or forums. As is discussed further below key word searches are targeted to the end user computer system s particular hardware and software configuration.

Management tools include applications applets and other modules that administrative users or managers can use to manage aspects of the technical support services architecture. Management tools may provide functionality for updating adding or deleting applications or data and or their associated APIs communications utilities and drivers. In addition management tools may include a program that deploys the client applications e.g. end user applications to the associated users.

In an alternative embodiment the appropriate client applications e.g. end user applications can be deployed to end users by the associated support centers. In other embodiments the SPs themselves may provide the client applications through other mechanisms such as by Internet download or by sending a compact disc CD through the mail. Regardless of the means by which the client application is provided the client applications are operable to contact and access the technical support services architecture and or the associated SP support center.

Third party integration tools include APIs drivers and or other modules for updating adding and or deleting third party tools on the technical support services architecture .

Knowledge base KB system tools provides tools e.g. applications applets scripts programs etc. related to processing of content. By way of example but not limitation KB system tools can include programs for filtering building generating searching formatting etc. content. Content can include without limitation text images graphics video audio dynamic web pages or web page scripts e.g. Java scripts . In various embodiments the content processed by KB tools related to instructional technical support content such as images of computer components e.g. cables printers monitors routers etc. step by step instructions to solve a technical problem and so on. Such content is typically embodied in dynamically generated web pages accessible by the end user client.

One example of a KB tool is a web page generator that dynamically generates web pages that describe technical problems e.g. scenarios causes symptoms and or instruct an end user on how to solve technical problems. As another example KB tools may include a configuration difference generator that is operable to determine differences between system configurations. Other examples of KB tools are a problem searching module and problem filtering module which may be used by an end user or agent to search on and filter a set of previously identified solutions in a problem set data store.

Other tools provide other functions e.g. in the form of applications applets scripts programs etc. to end users technical support agents or other users. Examples or other tools are third party support tools and remote control whereby an agent can remotely control the end user s computer. For example the agent can use remote control to operate the input devices e.g. mouse and keyboard .

As yet another example other tools may include functions to gather and analyze technical support data e.g. problem scenarios configurations solutions etc. from technical support agents associated with different service providers and or customer support centers. In this regard the technical support service architecture can capture data related to particular customers client system configurations and or particular technical problems reported by customers and end users. The technical support services architecture can correlate problem data to identify problematic scenarios or configurations that have been observed in multiple technical support jobs in response to incident reports submitted by the general population of end users.

When a recurring technical problem is identified a problem identifier can be stored e.g. in a data store along with one or more criteria that defines the problem and one or more possible causes to the problem. Problem scenarios may also be recorded in relation to identified problems. In addition the technical support service architecture can identify commonly implemented and successful solutions and store the solutions in association with identified technical problems and or system configurations. In this manner recurring and common problems and fixes can be learned and provisioned on a broader scale to many or all subscribing technical support centers and utilized by the general population of technical support agents and the general population of end users. As such problems and solutions developed for end users of one service provider can be applied to other end users and even end users subscribing to network service from other service providers SPs .

Accordingly one feature of the technical support services architecture is an ability to develop one or more knowledge bases that include information about technical problems system configurations and solutions and continually update the knowledge bases based on actual technical support interactions. In this embodiment the SP customer support centers can register with the technical support services architecture to gain access to the knowledge bases that are maintained by the architecture . In this fashion the SP support centers and the technical support services architecture may be viewed as forming a symbiotic relationship in which both benefit from the other.

For example during a performance of a technical support job between a technical support agent and an end user the agent may search in a set of pre developed solutions at the technical support services architecture. The pre developed solutions may reside for example in a data store and may be stored in association with previously identified problems and or system configurations.

Embodiments of the technical support platform can be implemented in a distributed architecture. For example portions of the platform may be distributed among the technical support agent computer system e.g. a technician agent user client application the end user computer system e.g. an end user client application and the technical support services architecture . In other words portions of the technical support platform may be resident upon computing devices that are geographically or logically separated. A distributed technical support platform can provide customers with a transparent open scalable fault tolerant support system.

In some embodiments the interface used by technical support agents is a web interface that can be accessed through a browser on the agent s computer system. In these embodiments the technical support and services platform includes a web based interface through which technical support agents can access other resources and applications in the technical support and service platform. The interface for administrative and management users may also include a web interface accessible through browsers on administrative and management users systems. In such embodiments the technical support agents administrators and managers can access the platform at any location that has an Internet connection.

For example the user interface layer includes a number of interfaces through which a user e.g. a customer end user or agent client accesses the technical support platform . An end user interface is provided by a client application and represents the interface with which the end user interacts while using the technical support and services platform . In some embodiments the end user interface is implemented as a browser with one or more applets that access a web portal described further below. As such the end user interface can provide personalized and customizable capabilities to the end user.

Localized client application support interfaces include a technical user interface a management user interface and an administrative user interface . These interfaces can be used by technical users e.g. technicians managers and administrative users respectively for maintaining components of the technical support platform obtaining reports of technical support data and others. The end user interface and the client activities interfaces can transfer data bi directionally to each other. As such data transfer to the end user interface may be pushed or pulled. Conversely data can be pushed or pulled to or from the technical user interface the management user interface and or the administrative user interface .

Customer and client administrative modules can be accessed via administrative interfaces. In the illustrated embodiment an internal system administrative interface and an external administrative interface are provided that can be accessed via a browser with remote client application support.

The communications layer incorporates tools for accessing various modes of communication through which users e.g. customers technicians managers and administrators interact with the technical support platform and each other. Brokers manage user access to these tools. One or more intelligent and or interactive self service support tools are made available by an end user application broker. Self service support tools can include filtered help offline disk resident content interactive decision tree based drill downs web based frequently asked questions and answers FAQs forums and or advanced search functions. Other self service tools may be identified and implemented by those skilled in the art.

The communication layer also typically includes communication modules and interfaces. Communication modules and interfaces can include by way of example but not limitation an e mail interface such as Microsoft Exchange or POP3 SMTP a chat interface and a remote or remote control management interface . Other interfaces can be provided to support other modes of communication. The communication modules provide functionality for the customer and technician to communicate or interact via the associated communication mode. For example the e mail interface enables e mail communication between the customer and a technician.

Telephony support modules such as phone tier module and phone tier module provide modular interfaces to live telephone technicians. In this embodiment the phone tier module and the phone tier module can and or may provide for communication over Voice over IP VoIP . The phone tier modules provide various telephone agent functionality such as but not limited to VoIP services virtual Private Branch Exchange PBX and or automatic call distribution ACD . As such for example technical agents can be remotely located and still have calls routed to them. As another example in response to receiving a customer service support call the phone tier modules can sequence through a list of telephone agents until one is reached.

The middle tier layer provides transaction management functionality for managing transactions and data transfer between the user interface layer or the communication layer and the API layer or for data transfer between applications. The modules at the middle tier layer provide various functions to facilitate communication and data transfer such as but not limited to data formatting timing and encapsulation. A services platform manager module a communication transaction manager module and a client transaction manager module handle data transfers related to varying types of levels of interaction with the platform . For example the services platform manager handles data transfer or exchange to and from web services provided by the platform. The communication transaction manager handles communications from server side transaction objects. The client transaction manager handles Extensible Markup Language XML exchanges with the client modules. A system administration and reporting manager module in the middle tier layer manages interactions with the lower level layers that relate to administrative tasks and report generation.

The API layer provides lower level interfaces through which higher level e.g. user interfaces communication layer layers access applications and or data of the technical support platform . For example the API layer includes a client web portal API through which the end user can interface with web portal integration tools using the end user interface . External application integration module interfaces include an e mail system API a chat system API and a remote system API which correspond to the e mail interface the chat interface and the remote management interface respectively.

The API layer also provides for integration with third party applications and data. A third party application integration module enables third parties e.g. SPs to integrate third party specific applications with the technical support platform . Similarly a third party data integration module enables third parties to integrate third party specific data with the technical support platform. The third party applications and data can be accessed through the other communication modes such as e mail chat and remote management. Thus the third party applications and data can extend the capabilities of the technical support platform.

The data layer provides multiple data sets to keep track of numerous different types of data associated with the technical support platform. End user subscription information is stored in an end user subscription database . In addition the end user subscription database may store end user identification information user component configuration data associated SP provider identifier s subscription terms subscription prices subscription services and other customer information. Described further below is an embodiment in which the client outputs configuration data e.g. system specific parameters for storage in the end user subscriptions where they can be retrieved by technical support agents.

A knowledge base includes data relevant to technical support. In one embodiment the knowledge base KB includes a compilation of data gathered from actual problem reports or complaints. The knowledge base is an electronic catalogue e catalogue of numerous previously identified problem scenarios problematic equipment problematic configurations or other data. The knowledge base may be divided into a static portion and a dynamic portion. The static portion includes data that has been validated for accuracy and in general will not be changed rather the static knowledge base data is intended only for read only access. The dynamic portion of the knowledge base can change often during real time technical support interactions. Dynamic knowledge base data may be updated as new information is gathered and may change until it is validated or otherwise determined to be satisfactory for use in other technical support interactions.

Independent application databases also include solution sets and pre disposition solutions . Solution sets are solutions that have been verified as proper for associated problem s and or system configurations. As such each of the solutions in the solution sets may include an indication of the related problem or problems and or system parameters characterizing the computer system s to which the solution set applies. The pre disposition solutions include potential solutions that have not been verified as working solutions but rather they are solutions that have been proposed and may still be changing based on new information related to the problem or results from implementing the proposed solutions. In one embodiment while they are being worked on and or validated pre disposition solutions are only accessible by the technician at the technical support center who is familiar with the problem. However in other embodiments such as one shown in described below pre disposition solutions may be available to technical support agents who can try using the pre disposition solutions and report the results of their use.

In one embodiment pre disposition solutions are unstable solutions i.e. they may change . When a pre disposition solution becomes stable e.g. verified as a valid solution the pre disposition solution is approved for application to a wider population of technical agents and end users. Approved solutions in the pre disposition solutions set are moved into the solutions set . Because the solutions in the solution set have been verified these solutions can be deployed or made available more globally to all subscribing technical support centers.

Optimized data stores are included in the technical support platform for storing application and reporting data. These data stores may be multi application internal data stores multi application external data stores and cross platform reporting tools . The technical support platform also includes a set of database drivers for API support.

In the embodiment of the technical support platform of one or more modules of the communications layer the middle tier layer and the API layer may logically or physically form a technical support services architecture or other services oriented architecture. The technical support service architecture may or may not also include the data layer . For example the data layer may be included in the technical support services architecture with the other layers or the data layer may be logically or physically separate from the other layers but accessible by the other layers.

For example the client application could be loaded onto a computer running Microsoft Windows a computer running an Apple Macintosh OS or another computer running a Linux OS . As another example the client application can be loaded onto and execute on a handheld computer media console cable set top box or satellite receiver box. The client application can facilitate technical support services for the device which it is loaded on and executes from as well as appliances that the client application is not loaded or executing on. For example a client application executing on a set top box can facilitate providing technical support services for the set top box or a refrigerator.

The client application is functionally at least semi autonomous from the operating system OS so that the client application can perform at least some functions that are conventionally provided by the OS in case the OS is not fully operational. For example the client application can include a network adapter module that includes network communications functions such as interfacing with a network adapter or other network interface. The client application may include one or more other modules such as a process manager memory manager security functions or file system support which may be included to reduce or eliminate reliance upon corresponding functions in the OS in case the OS is not fully functional.

For example a process manager can be operable to manage processes that the client application launches. Memory management by the client application may involve controlling a certain amount of memory which may be free or floating memory or memory that is leaked. Memory management includes trash collection. The file system support may be structured file system support. The memory managed by client application memory manager is not accessible to the OS or other applications. Similarly a structured file system support of the client application is not accessible to the OS or other applications. Such autonomy of the client application from the OS allows for same device problem solving when one or more functions of the OS are not completely operational.

In some embodiments the client application is a virtual machine VM creating a self contained operating environment and operable to simulate an operating system. In these and other embodiments the client application can be fully autonomous and not only semi autonomous. For example a fully autonomous client application could boot the system up or simulate booting the system like an OS.

The client application includes an inventory profile generator that is operable to determine the inventory of the end user s system. For example the inventory profile generator may gather the hardware and software component inventory and store the inventory list in a file. In some embodiments the inventory is stored in a hierarchical fashion. The inventory profile can be presented to the user and or provided to a knowledge base of end user subscriber information or a technical support agent.

The client application further includes a chat module through which the end user can chat with other users such as technical support agents. The chat module may present a user interface that is part of a larger window that also includes a user region that can present one or more other user interfaces. For example one region of the window can include the chat interface where the user can chat with a technical support agent while another portion of the window can include a user region where user selectable information can be presented. In the user region the user may select an inventory interface to view the system inventory or a resolutions interface where the user may view previously executed resolutions or new resolutions that have not been used. The user may alternatively select to browse the Internet through the user region via a client application embedded browser .

The embedded browser is functionally autonomous from other browsers that may be loaded on the end user s system. This means the embedded browser is not functionally reliant upon other browsers. The embedded browser is operable to browse Internet web pages including resolutions web pages without reliance upon another browser. As such if other browsers such as Netscape Navigator or Microsoft Explorer are malfunctioning or not fully operational the embedded browser can still provide browsing functionality for example to a resolutions web page that may provide a fix for the malfunctioning browser a malfunctioning OS or other technical problem.

The client application may also include offline resolutions that can be accessed. Offline resolutions can be used to fix network communication problems that prevent the client from contacting a support agent or other network based resource for problem resolution. For example an offline resolution can instruct the user to follow certain steps to restart network communications such as by resetting a router plugging in a cable or installing a necessary driver.

The client application may also include one or more disabled features that can be enabled. These features are typically licensable programs that end users may choose to purchase. For example the client application may have a phone support feature but the phone support feature may be disabled at initial installation of the client . The end user may want to enable the phone support feature later. The phone support feature and other disabled features may be enabled in different ways. For example a technical support agent can send a command to enable a disabled feature. Alternatively the end user may be given a key or password to enable the disabled feature. The features can be monetized i.e. a monetary price can be attributed to the features to enable service providers and technical support service providers to market additional products to the end users. Different disabled features may be included in the client application and monetized differently depending on the type of user e.g. expert or novice or the provider of the features. An example technical support agent interface screen is shown and discussed below which a technical support agent can use to view and enable disabled features on the client application .

The global problem and solution development process is ongoing and may be viewed as a by product or aggregation of many specific technical support jobs. More concretely technical support agents are regularly interacting with end users during technical support jobs wherein the agents may identify new problems and or develop new solutions to problems in the end users computer systems. The agents and end users may be associated with any number of service providers e.g. ISPs NSPs wholesale providers enterprise service providers etc. . As such problems identified and solutions generated by the agents comprise a service provider agnostic heterogeneous solution set meaning that the solutions developed relate to a wide variety of different system configurations platforms platforms users organizations and others.

The problems identified by and the solutions developed by the technical support agents may be new i.e. these solutions have not been previously identified and stored for later reuse. For example a technical support agent may not find a problem reported by an end user in the knowledge base . As another example a technical support agent may not find a solution to a particular problem or for a particular system configuration in the solutions set . The agent will then work with the end user to fully describe the problem including identified causes if any and or develop a new solution that solves the problem for the end user s system configuration.

Although a newly identified problem may have been described for a particular end user incident the description e.g. symptoms possible causes may not be described in a way that it can or should be made available to other agents or end users . For example the problem description may not have taken into account other symptoms that would help identify the problem. Similarly although a new solution may work for a particular end user initially the solution has not been fully tested to determine if the solution can or should be applied more globally to a wider population of end users.

As such new problems and new solutions are first proposed for application to a wider population. Proposed problems are submitted to a dynamic region of the knowledge base where they can be tested reapplied by agents in technical support scenarios and validated by administrators. After the proposed problems have been tested and have become static i.e. no further changes the vetted problems are moved to the static region of the KB . The problems may be stored as data objects that include a problem identifier description and one or more possible causes.

Solutions are proposed for use by the general population of end users and agents. They are potentially applicable to a wider customer agent and configuration base. Proposed solutions are stored in the pre disposition solution set where they can be further tested reapplied and validated. Possible dispositions of further testing of solutions are deletion of the proposed solution further monitoring or approval for broader application to the general end user population. While in the pre disposition solution set the proposed solutions are vetted through testing and analysis to ensure that the solutions work consistently and have been associated with the appropriate problems and or system configurations. The agents can search for and use proposed solutions that may be applicable to a system configuration or problem being experienced by an end user . The agents can report on the results of using proposed solutions . Administrators may also test proposed solutions and report results or findings. Reported results are reviewed to determine the disposition of proposed solutions . The amount of analysis and testing of the proposed solutions may vary from system to system.

When proposed solutions are approved for broader application to the global end user population the vetted solutions are stored in the globally accessible solutions set . The vetted solutions are stored in such a way that they can be later retrieved based on the problem they solve and or the configuration of the system that they are relevant to. For example the vetted solutions may have a problem data field that enables searches of the solutions set . The solutions may include a configuration data field that specifies configuration parameters relevant to the solution.

In one embodiment a specific incident targeted solution determination process can make use of vetted problems in the static region of the KB and technical solutions previously vetted and stored in the solution set . In the targeted solution determination process a specific end user outputs a system configuration file that includes system specific parameters characteristic of the end user computer system. The configuration file is transmitted to a specific agent and or the end user subscriptions where it is stored. In the embodiment illustrated the configuration file is stored in the end user subscriptions and retrieved from the end user subscriptions by the agent . The configuration file is typically stored in association with the specific end user s associated subscription. However in other embodiments the configuration file is sent directly to the agent .

As mentioned the system specific parameters characterize the end user s computer system and present a generally complete view of the end user s computer system including the hardware and the software parameters to the agent . The specific agent is typically remote from the specific end user . It should be understood that although the configuration file is sent to a specific agent if the end user works with a different agent e.g. in a subsequent technical support session the configuration file will be available to the different agent via the end user subscriptions .

The embodiment shown in depicts agent facilitated help wherein the agent uses information about the end user s computer system to assist the end user in determining the cause of a problem and one or more targeted solutions. Based on information from the end user including the system specific configuration the specific agent generates problem descriptors related to a problem or an identified cause of a problem. The key words are used to search the static region of the knowledge base for problems that relate to the key words .

An alternative embodiment involves end user intelligent self help. In this embodiment the specific end user enters keywords that are used to search for targeted problems in the knowledge base . Only problems that relate to the end user s system specific parameters will be searched for. For example if the end user has an Apple Macintosh computer only problem related to Apple Macintosh will be found. Problem identifiers description e.g. symptoms severity secondary problems and one or more possible causes are returned to the specific end user .

In the particular embodiment shown in an unfiltered set of problems is determined from problems either static or dynamic the KB . The unfiltered problem set may be viewed as a problem set that is relevant to the problem but applies to the general end user population rather than the specific end user . As such the system specific parameters of the configuration file are applied to the unfiltered problem set to filter out problems that do not apply to the specific end user computer system configuration. In the illustrated embodiment the end user client application filters the unfiltered problem set . In another embodiment illustrated in the agent may carry out the filtering based on an agent assess configuration file.

With further regard to filtering the problem set filtering may be performed using system specific parameters of the configuration file . Of course some system specific parameters may match parameters associated with problems in the problem set while others do not. As such in some embodiments the level of filtering can be set to allow for tolerance. For example the agent may set the filter tolerance such that only a certain number of parameters must match. As another example the agent may set the filter tolerance such that only the hardware parameters or only a certain number of hardware parameters must match. As yet another example the filter tolerance may specify particular parameters of the system specific parameters that must be in the technical solutions .

The result of filtering on the end user configuration is a targeted filtered problem set of one or more problem data objects describing problems that are specific to the end user s computer system configuration. The targeted problem set can be used to determine targeted technical solutions that were previously developed and vetted and that relate to the particular problem identified with the specific end user s computer system. In some embodiments the problem data objects of the filtered problem set include links to associated solutions in the approved solutions . In other embodiments a key word search is performed on the approved solutions using key words from the filtered problem set and or using system specific parameters . The output is a targeted solution set with one or more technical solutions that are targeted to end user s computer system. In embodiments that use an adjustable filter tolerance as described above the targeted solutions of the targeted solution set may be more or less targeted.

The targeted solution set is then made available to the specific end user . In one embodiment a targeted solution is transmitted e.g. pushed to the end user by the agent . In other embodiments the technical solution may be stored at a web site location where the end user can retrieve it. In the latter embodiment the agent can transmit a hypertext link to the end user that links to the stored technical solution .

In one embodiment one or more solutions which can be approved solutions or potential solutions are identified from the solutions set in the technical support service architecture . The dynamic web page generator dynamically generates one or more web pages based on the identified approved solutions and or potential solutions . In one embodiment the solutions comprise one or more eXtensible Markup Language XML documents and the dynamic web page generator transforms the XML documents into browsable pages such as Hypertext Markup Language HTML web pages using XSLT.

The dynamic web page generator may use the system configuration file associated with end user X subscription to select content or text for the web pages or otherwise adapt the web pages to end user X s particular computer system. Content may be stored in a content data store that store content applicable to a general population of end user systems and wherein content is selectable for inclusion in web pages describing solutions targeted at end user X s particular system configuration. Web pages typically reference one or more items of content . Examples of content are images photos audio or media related to parameters or system components of end user X s system. Web pages may be stored in association with end user X s subscription and can be accessed by end user client X . In other embodiments web pages may be stored in other memory.

The dynamic web page generator creates a link e.g. a hyperlink to each web page . The link may be transmitted to the client by the technical support services architecture. Alternatively the link may be transmitted to the technical support technician agent who may then transmit the link to the end user client . The end user client may also retrieve the link from the technical support services architecture. The link may be transmitted while the end user is online or offline.

Links are first stored in either a new solutions folder or potential solutions folder depending on whether the solution is approved or potential. From the folders the client can access them for browsing the corresponding web pages . After the client browses the corresponding web pages the links are moved to a used solutions folder. The client can access both new solutions and old solutions through links in the new solutions folder and used solutions folder .

Based on the comparison a difference configuration is generated. The difference configuration in general includes system parameters with associated indicators that indicate whether the system parameters have been added or removed. The difference configuration may include only the differences between the configurations. Alternatively the difference configuration may comprise a baseline configuration such as the latest configuration or the last acquired configuration edited to include indicators indicating whether parameters have been added or removed.

The end user client receives the difference configuration whereupon the end user client may store the difference configuration and or use the difference configuration to generate a prior configuration . The prior configuration and the latest configuration may be viewed by the end user.

If the customer is registered the process branches Yes to a login process . In the login process the customer logs in with for example a username and password. A verification step verifies the customer login information by accessing a customer account master subscription database which has registered customer login information stored therein. If the customer login information is valid the process branches Yes to display step which displays approval of the customer s account registration.

Referring again to the inquiry step if the use is not an existing customer the process branches No to a registration step . Also if in the verification step it is determined that the customer s login information is invalid the process branches No from the verification step to the registration step . The registration process gathers customer registration information using a registration input form. A registration data collection step collects the registration data entered into the input form.

An E commerce process provides functionality related to purchase and distribution of services over the network. E commerce includes without limitation sales marketing billing payment fulfillment and or entitlement. E commerce may be conducted between businesses governmental agencies individual consumers or others. In accordance with embodiments described herein E commerce includes without limitation up selling cross selling that can be performed by service providers.

After the account approval is displayed in deployment and display step the process deploys one or more application s e.g. client applications to the end user. The applications can be Flash applets or others. The application s collects and validates the customer s system parameters in an inventory step . By way of example but not limitation inventory step may gather the customer s system configuration component information system state information usage capabilities requirements or other information. The inventory step then validates the system parameters. If valid the process branches Yes to integration process .

The integration process employs direct client data transfers and sequential data transfers to collect and integrate customer system parameters which are determined via the configuration detector applet to find both hardware devices and software applications entering the relevant system information into a stored application database . A system profile of the end user s system configuration is sent to the technical support services architecture . The integration process can involve the technical support services architecture automatically determining whether the user had previously run the configuration detection process to gather the user s system configuration and if so comparing the most recent system configuration profile with the last system configuration profile. Differences between the two profiles are determined. The new profile the differences and or the old profile can be sent to the client so that the client has a history of the system configuration.

In addition based on the user s system configuration system specific help and resolutions are sent to the client. The system specific help and resolutions are determined by filtering the knowledge base with the user s system configuration to determine only those data sets in the knowledge base that are relevant to the user s system. The filtering is performed on a machine identifier basis rather than a customer identifier basis to support multi computer users businesses and households.

If the inventory operation determines that the system parameters are insufficient to provide for integration the process branches No to a customer interaction step . The customer interaction step involves customer use of the deployed application s to determine the cause of technical problems that exist at the client computing device. The deployed application s interact with the technical support provisioning center to resolve the technical problems. For example additional software may be transferred from the technical support services architecture to the client. As another example the client may receive information from the knowledge base to facilitate problem resolution. Any number of resolutions may be provided to the client. These may be provided while the client is on line or when the client is offline. If resolutions are provided offline the end user can access them later when the client comes online. For example the end user may be notified by the client that new resolutions are available. After the interaction operation the process branches to the integration process which integrates the customer system parameters as described previously.

In a generating operation a system configuration is automatically generated. The generating operation gathers system specific parameters associated with the end user computer system and stores the parameters into a configuration file. The generating operation may occur when the system powers on and or when the end user logs into the technical support services architecture to obtain technical support. The generating operation can gather the parameters in different ways. For example the generating operation may read a registry of hardware and software components residing on the end user system. The generating operation may query different hardware and software components to obtain further details about the components such as versions models or configuration.

A transmitting operation transmits the configuration file including system specific parameters to the technical support services architecture. The transmitting operation may occur automatically without the end user being notified or the transmitting operation may notify the end user prior to transmitting. Further the transmitting operation may wait for end user approval prior to transmitting the configuration file.

A receiving operation receives configuration difference information from the technical support services architecture. The configuration different information may be in the form of a difference file. The configuration difference information indicates a delta between the configuration generated in the generating operation and the last most recent system configuration. For example software or hardware components may have been removed or disabled since the last time the configuration was transmitted to the technical support services architecture.

In another generating operation an end user client application uses the configuration difference information to generate a prior configuration file including hardware and software parameters of the prior system configuration. In one embodiment the generating operation starts with the current configuration i.e. the configuration generated in operation and adds new parameters from the difference set of configuration parameters and deletes parameters that are indicated as not present in the difference set of parameters.

In a presenting operation the current system configuration and the prior last most recent system configuration are presented. The end user can select which configuration to view and or the two configurations may be presented side by side. Alternatively one of the configurations may be presented with differences highlighted with different colors e.g. red for deletions blue for additions . In one embodiment one or more of the current and prior configurations are presented in a window pane that is positioned next to a chat window pane in an integrated graphical user interface window. In such an embodiment the end user can view both configurations while chatting with a technical support technician agent.

In a receiving operation the end user client receives one or more interactive links to web pages. The links may be hyperlinks that the user can select e.g. click on with a mouse input device . The interactive links may be transmitted e.g. pushed to the end user client from the technical support services architecture or a technical support technician agent. The links may be transmitted to the end user while the end user is online for example during a chat session or while the end user is offline. When links or other information are sent to the end user when the end user is offline such as when the end user system is powered off the end user can retrieve the links or other information later by the end user client from a designated inbox or other repository.

When the end user selects an interactive link a browser navigates to the associated web page in a navigating operation . In one embodiment the web page resides in memory at the technical support service architecture. The web pages can include various types of information related to the end user s computer system. In one embodiment the web pages instruct the end user of targeted solutions to solve a problem exhibited by the end user s system. The web pages may also include problem descriptions specific to the end user s system. Content of the web pages is targeted to the end user s particular system configuration. For example images or photos of particular system components e.g. USB cables routers printers disk drives specific to the end user s computer can be included in the web pages. As another example audio e.g. .wav .mp3 .rm may be included on the web pages that provides system specific instructions to the user. Such images photos audio or other content can help the end user more readily identify particular hardware and software components and adjust them in a way to solve a technical problem.

In a storing operation links to web pages that have been browsed are stored in a folder or other memory designation containing old solutions and links to web pages that have not been browsed are stored in a folder containing new solutions.

In an identifying operation system specific parameters of the end user computer system are gathered. The system specific parameters characterize the configuration of the end user computer system. The identifying operation may involve reading system parameters from various sources in the end user computer system and storing them in a system configuration file. Alternatively the identifying operation may involve identifying a configuration file associated with the end user in the knowledge base of the platform . In a transmitting operation the system specific parameters are communicated to the remote agent. The transmitting operation may involve the end user sending the system specific parameters or the database driver sending the end user specific configuration file to the agent.

After receiving the system specific parameters the agent may determine one or more targeted solutions for a problem associated with the end user computer system. The targeted solutions may comprise XML files factored content data and re factored potential solutions data structured and unstructured content from within the knowledge base solutions set of . The process of factoring content refers generally to any one or more of creating content modifying content regenerating content.

The dynamic web page generation includes dynamically assembling parts of the web page including content. An extensible style sheet language transformation XSLT process may be applied to the XML files to generate customizable and stylized HTML based content in representation of the targeted solutions. XML queries and data driven results sets may be applied to and through the XSLT transformational process for factoring and re factoring content into forms other than HTML in support of providing solution sets in various other native formats or style sheets. The targeted solution that is generated consists of content that can be presented at the end user. This content may include images text video audio or other content that is relevant to the end user computer system s particular configuration and or problem set. For example if the solution relates to a cable connection an image of a cable having the particular connection types may be included in the solution so that the customer can tell what type of cable he needs for his particular system.

In a receiving operation the end user receives content representing one or more targeted solutions. In one embodiment the receiving operation involves the agent pushing a hyperlink referencing the targeted solution content to the end user. In another embodiment targeted solution content may be sent to the end user in the form of a document e.g. a browsable web page . In a storing operation content representing the targeted solution s is stored in a manner that the end user can retrieve the content to view and implement the targeted solution s . In some embodiments the targeted solution s are first saved as web pages in a file folder of available targeted solutions. Once the end user accesses and implements the content associated with the available targeted solutions the content is moved to a solutions history folder storing a history of implemented solutions. In a browsing operation the end user can browse the content representing the targeted solutions.

In another receiving operation the technical support agent receives system specific parameters characterizing the hardware and software configuration of the end user s computer system. As discussed the system specific parameters may be delivered in the form of a configuration file from the end user computer system or a stored set of configuration files such as the end user subscriptions .

A determining operation determines one or more possible causes of the problem reported by the end user. The determining operation could simply rely on the agent s own knowledge for example the technical support agent may be familiar enough with the system specific parameters that he can recognize the problem and its cause himself. However in general the agent queries a knowledge base of problem information in the technical support platform . The problem information includes sets of problem identifiers with their associated problem descriptions and possible causes. The agent may perform keyword searches using words from the problem description in the incident report or words provided by the end user or other words selected by the agent. The knowledge base returns problem identifiers problem descriptions and or possible causes based on the keywords and the system specific parameters. Any problems returned by the technical support platform are filtered according to the system specific parameters so that they are targeted to the end user computer system.

In another determining operation one or more possible solutions are determined that address the one or more causes to the problem. In one embodiment problems identified in the knowledge base are linked to solutions in the solutions set . In this embodiment the solutions linked to the problems having causes specific to the end user s computer are sent to the technical support agent.

In another embodiment the determining operation searches a set of stored pre developed and validated solutions such as solutions set using key words related to the problem or its possible causes. Any solutions that found during the search are filtered based on the system specific parameters of the end user s computer system to derive one or more possible solutions that are targeted to the end user s computer system.

In a generating operation content is dynamically generated that can be used for presenting the one or more targeted solutions. In one embodiment XML pages of the targeted solutions are translated using XSLT. The generated targeted solution content is then made available to the end user. In one embodiment the targeted solution s content is sent to the end user via e mail. In another embodiment the end user is sent a hyperlink the references a targeted solution content. A presenting operation presents the targeted solution content at the end user s computer system. In one embodiment the targeted solution content is presented when the end user selects it for presentation e.g. selecting an associated hyperlink . In some embodiments the targeted solution content is stored in a file folder storing available solutions. The end user can access the available targeted solutions through the file folder of available solutions. After the user accesses the content related to the available targeted solutions the targeted solution content is moved to another file folder that stores a history of accessed targeted solutions.

A weighting operation attributes numerical weights to each of the resolutions for an identified problem according to some criteria. One criterion is frequency of use. More frequently used resolutions can be attributed higher weights. Other criteria may be used and a combination of criteria can be used. For example weighting criteria could include efficiency of implementation number of components affected for implementation difficulty of implementation age of the resolution or others.

An establishing operation establishes skill levels associated with a technical support agent and an end user. Skill levels may be established by input from the agent and or the end user. For example the end user may enter what he suspects his skill level to be. Alternatively or in addition default skill levels can be assigned to the agent and or the end user.

A classifying operation classifies resolutions according to skill level. In one embodiment each resolution is classified as being high medium and low meaning that an end user would need high skill level medium skill level or low skill level respectively in order to implement the resolution. The classifying operation could derive the classification of each resolution based on technical support agent ratings or input. Classifications could also be determined from customer feedback or ratings.

An auditing operation audits an end user s usage pattern. In one embodiment the auditing operation periodically queries the end user client application for usage information. Usage information indicates what applications the end user has been using how the applications have been used e.g. what functions skill level of resolutions implemented by the end user or other usage patterns. Auditing of the end user system is typically performed in a secure fashion and may or may not be transparent to the end user. For example the end user may be prompted to grant permission for the audit before the auditing can take place. Alternatively or in addition auditing operation may involve analysis of the end user s system configuration profile which can indicate installed software applications but could also be adapted to include usage pattern information.

An inferring operation infers the skill level of an end user based on past usage by the end user. In one embodiment inferring operation uses a lookup table that associates applications or functions with predetermined skill levels. For example using Microsoft Excel may be designated as a high skill level application whereas a Microsoft Paint may be designated as a low skill level application.

A selecting operation selects a resolution to a reported problem based on one or more of skill level or weight. For example in some embodiments the selecting operation may choose a resolution only if the skill level classification of the resolution matches the inferred skill level of the end user. Alternatively or in addition the selecting operation may choose the resolution with the greatest weight meaning that it is more frequently used. In some cases the only resolution available may be at a higher skill level than the end user. In these cases the resolution may be flagged to indicate that the end user is recommended to seek help from a technical support agent.

After a resolution is selected a delivering operation delivers the resolution to the end user e.g. to the client application or the client application retrieves the selected resolution from a specified location. Alternatively the selected resolution may be pushed to the end user by a technical support agent. In delivering operation if the resolution is flagged a recommendation will be made to the end user to contact a technical support agent to assist in implementing the resolution.

Over time as the algorithm is carried out the system learns derives advanced information about relationships between end user skill levels agent skill levels and applicably weighted resolutions. The algorithm could use the learned information to prioritize resolutions for presentation to the agent and or end user.

In a presenting operation an adaptive ticket data entry interface is presented. In a receiving operation ticket data is entered for a ticket data element. In one embodiment the ticket data is selected from a range of possible options. In an adapting operation a range of ticket data available for entry into another ticket data element is adapted based on the selection made for an earlier ticket data element.

The receiving operation and adapting operation repeat until the adaptive ticket elements have been entered. A receiving operation receives other nonadaptive ticket data. Nonadaptive ticket data may include ticket status or problem description. In a storing operation the generated problem report ticket is stored and is preferably made available for later use and review.

In a determining operation disabled licensable features of the end user s system are determined. The determining operation may involve the client application on the end user system notifying an agent application or knowledge base what disabled licensable features are available. A selecting operation chooses one or more features from the disabled licensable features for activation. The selection may depend on particular problem or recurring problem being reported by an end user.

Monetizing or upselling can play a roll in the selection process. For example a given feature may be on a reduced price and the end user can be notified of the reduced price from the client application or a technical support agent. In addition a technical support agent may have discretion to adjust the license fee for one or more of the licensable features. Also features could be bundled whereby the license fee is greater to license all the bundled features separately than if the end user were to license all the features in the bundle. Also individual pieces of content and content types can be sold and delivered through the client application. In addition premium products and services can be marketed to the end user through the application.

An enabling operation enables the selected licensable features. An embodiment of the enabling operation involves a technical support agent sending an activation command to a client application. Another embodiment involves the client application informing the end user of a password or key to enable the feature s . In yet another embodiment the technical agent could activate the feature s through a remote control of the end user s system.

For example the user can select to view technical support related information in the user region . Through the chat pane the customer can engage in a technical support session in the form of a chat session with a technical support agent. Chat messages from each chat user are separated into clearly delineated sections of the pane and each message is clearly identified with the person who sent the message. In the illustrated embodiment for example the name and role of the chatter are indicated at opposite sides of their respective delineated sections . Further in some embodiments chat pane message sections have different background colors for different chatters to further distinguish messages from each of the chatters.

Turning to the user region a variety of browsable information can be presented therein. In the illustrated embodiment a home page a dashboard system configuration information technical solutions a technical support history and settings can be viewed in the user region . When the user selects the system configuration button hardware and software parameters associated with the user s computer system are presented in a tree structure . By clicking on higher levels of the tree the user can dig deeper into the configuration parameters. If the user selects the technical solutions button currently available technical solutions are presented for the user to implement. These technical solutions are typically ones that were previously sent e.g. pushed to the user s computer by a technical agent or the technical support platform.

By selecting the history button the user can view the history of technical solutions that have been implemented in the user region . This may be particularly helpful if for example a technical solution is implemented and some other problem occurs the agent and user can more easily determine the cause of the problem by viewing the history of technical solutions. Further in many cases technical solutions that were previously implemented can be reversed by undoing the steps of a technical solution shown in the history.

For example in this embodiment the table is configurable whereby the agent can grab e.g. using a mouse or other pointing device a column and move the column to another position. Grabbing may be performed for example by clicking on a column header and dragging the column to another location in the table . For example the agent may grab the column labeled Surname and drag the column to another table position such as the far left. The markup language document and presentation layer can be dynamically configured for the user via various technologies such as but without limitation AJAX technology.

The selection interface also includes a chat indicator portion indicating whether a chat session is waiting. The chat indicator portion can show the agent if one or more customers have requested a chat. The chat indicator portion can also allow the agent to select and thereby accept one of the requested chat requests for example by clicking on the indicated chat request. Upon selection of the chat request a chat interface is presented to the agent.

For example one row in is labeled SC.FILTEREDHELP . The technical support agent can select the corresponding button to enable the feature filtered help on the client application. In one embodiment upon selection of the button a command is sent to the client application instructing the client application to turn on the filtered help feature. In another embodiment upon selection of the button a password or other enabling information is sent to the end user of the client application whereby the end user can input the enabling information to enable the filtered help feature. Other information can be provided for disabled features such as feature ID expiration date license product ID and activation status.

The problem report ticket management user interface is adaptive. More specifically the interlace allows for adaptive ticket data entry. Adaptive ticket data entry involves adapting a range of ticket data input options based on a prior entered ticket data. For example based on the customer identification entered in a customer ID tab ticket data presented or made available in a ticket data entry tab will be adapted to correspond to the entered customer. Adaptive ticket data entry is discussed further below with regard to where an example adaptive ticket generation scenario is presented.

Continuing with the ticket management user interface other tabs include an inventory tab in which the agent can view system inventory of the customer s system a notes tab where the agent can view and take notes and a history tab where the agent can view a history of a problem incident including problem resolution attempts.

Also included in the ticket management user interface is a monetization selector such as the button labeled License Products . If the agent selects the monetization selector the monetization user interface is presented. The interface also has a licensed product selector whereby the agent can select a particular product that is licensed to the identified customer. Using the licensed product selector in this case a drop down list the agent can view or generate one or more problem report tickets associated with the selected licensed product and the identified customer.

The problem solution development interface includes a number of tabs such as a chat tab a knowledge base KB tab a client KB push tab a problem solution PS builder tab and a support links tab .

A ticket is selected through a ticket selector . Ticket data entry fields include the appliance entry field component group entry field component type entry field hidden by component group drop down list manufacturer entry field hidden by component group drop down list interface application entry field model version entry field symptom entry field error message entry field problem description entry field and ticket status entry field . In the illustrated embodiment the data entry fields are implemented with drop down lists whereby the agent can select a drop down arrow of the data entry field and select from a range of available ticket data options. For example component group drop down list lists high level component groups that a problem pertains to such as hardware network and software.

The ticket tab is referred to as an adaptive ticket data entry interface because entry of data in one ticket field causes the range of available data entry options to change in one or more other ticket fields. The ticket data available to populate some ticket data elements are dependent on the ticket data entered in to one or more other ticket data elements. For example in a given scenario the component group hardware may be selected from the component group drop down list . When hardware is selected a range of hardware components is available via the component type drop down list shown in . Examples of hardware are LCD display network card RMA scanner and others.

If on the other hand the component group that is selected from the component group drop down list is software a different range of ticket data is available via the component type entry field. When the component type drop down arrow is selected this time a component type drop down list is presented. The component type drop down list includes a list of software component types such as antivirus browser and email. As such the available component type data is adapted depending on the component group that is selected. After the ticket data elements are specified the ticket can be saved by selecting the save ticket button .

As discussed herein embodiments of the present invention include various steps. A variety of these steps may be performed by hardware components or may be embodied in machine executable instructions which may be used to cause a general purpose or special purpose processor programmed with the instructions to perform the steps. Alternatively the steps may be performed by a combination of hardware software and or firmware.

According to the present example the computing device includes a bus at least one processor at least one communication port a main memory a removable storage media a read only memory and a mass storage . Processor s can be any know processor such as but not limited to an Intel Itanium or Itanium 2 processor s or AMD Opteron or Athlon MP processor s or Motorola lines of processors. Communication port s can be any of an RS 232 port for use with a modem based dialup connection a 10 100 Ethernet port a Gigabit port using copper or fiber or a Universal Serial Bus USB port. Communication port s may be chosen depending on a network such as a Local Area Network LAN Wide Area Network WAN or any network to which the computing device connects. The computing device may be in communication with peripheral devices not shown such as but not limited to printers speakers cameras microphones or scanners.

Main memory can be Random Access Memory RAM or any other dynamic storage device s commonly known in the art. Read only memory can be any static storage device s such as Programmable Read Only Memory PROM chips for storing static information such as instructions for processor . Mass storage can be used to store information and instructions. For example hard disks such as the Adaptec family of SCSI drives an optical disc an array of disks such as RAID such as the Adaptec family of RAID drives or any other mass storage devices may be used.

Bus communicatively couples processor s with the other memory storage and communication blocks. Bus can be a PCI PCI X SCSI or USB based system bus or other depending on the storage devices used. Removable storage media can be any kind of external hard drives floppy drives IOMEGA Zip Drives Compact Disc Read Only Memory CD ROM Compact Disc Re Writable CD RW Digital Video Disk Read Only Memory DVD ROM .

The functional modules systems operations and data structures discussed herein are capable of combination separation or any other type of rearrangement without departing from the spirit scope of the invention. For example the data structures illustrated in the technical support platform of may each comprise one or more databases or in some cases multiple data stores may be physically implemented in the same database. Data stored in the data stores can be implemented in any format as may be suitable for the particular implementation including but not limited to extensible markup language XML extensible stylesheet language XSL and extensible hypertext markup language XHTML as entries in a relational database flat files object oriented or a proprietary format. Inclusive of these data storage formats is the use of extensible stylesheet language transformation XSLT for purposes of defining structured input and outputs from the various data stores.

Various modifications and additions can be made to the exemplary embodiments discussed without departing from the scope of the present invention. For example while the embodiments described above refer to particular features the scope of this invention also includes embodiments having different combinations of features and embodiments that do not include all of the described features. Accordingly the scope of the present invention is intended to embrace all such alternatives modifications and variations together with all equivalents thereof.

