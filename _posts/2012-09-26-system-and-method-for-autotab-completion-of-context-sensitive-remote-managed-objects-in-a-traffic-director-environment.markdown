---

title: System and method for auto-tab completion of context sensitive remote managed objects in a traffic director environment
abstract: Described herein are systems and methods for providing software administration tools, for use in administering server configurations, such as in a traffic director or other type of server environment. In accordance with an embodiment, the system comprises a command-line interface and/or command-line shell which provides an autocompletion feature for remote objects including wherein, in response to an instruction from an administrator to invoke the feature, the system determines configurable remote back-end objects based on the context of the command-line at the time of invocation, and uses the information to one of autocomplete the command-line input or provide a list of remote back-end objects.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09311155&OS=09311155&RS=09311155
owner: Oracle International Corporation
number: 09311155
owner_city: Redwood Shores
owner_country: US
publication_date: 20120926
---
This application claims the benefit of priority to U.S. Provisional Patent Application No. 61 539 886 titled SYSTEMS AND METHODS FOR USE WITH AN APPLICATION SERVER TRAFFIC DIRECTOR CORE FEATURES filed Sep. 27 2011 and U.S. Provisional Patent Application No. 61 539 900 titled SYSTEMS AND METHODS FOR USE WITH AN APPLICATION SERVER TRAFFIC DIRECTOR ADMIN FEATURES filed Sep. 27 2011 each of which applications are herein incorporated by reference.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The invention is generally related to software administration tools for use in administering server configurations and is particularly related to a system and method for auto tab completion of context sensitive remote managed objects in a traffic director or other type of server environment.

A typical enterprise level computing environment can include many different types of computing resources e.g. web servers application servers database servers or other types of resource servers which are intended to be accessed over a network e.g. a company s internal Ethernet network or the Internet by other computers or by users operating various different types of computing devices. A familiar example is the use of a client computer such as a laptop equipped with a web browser application by which a user can access a web server via the Internet.

Today s organizations rely increasingly on their computing resources being readily available from almost any location at all times with a high level of performance. The task of ensuring that such resources are allocated efficiently often requires the use of a load balancing device to distribute requests from clients to target resources in a fair manner according to its distribution policies. These are the types of environments that embodiments of the invention can be used with.

Described herein are systems and methods for providing software administration tools for use in administering server configurations such as in a traffic director or other type of server environment. In accordance with an embodiment the traffic director referred to herein in some embodiments as Oracle Traffic Director OTD is provided as a software based load balancer that can be used to deliver a fast reliable scalable and secure platform for load balancing Internet and other traffic to back end origin servers such as web servers application servers or other resource servers.

In accordance with an embodiment the system comprises a command line interface and or command line shell which provides an autocompletion feature for remote objects including wherein in response to an instruction from an administrator to invoke the feature the system determines configurable remote back end objects based on the context of the command line at the time of invocation and uses the information to one of autocomplete the command line input or provide a list of remote back end objects. Embodiments of the invention can also be used with other types of server environment.

As described above today s organizations rely increasingly on their computing resources being readily available from almost any location at all times with a high level of performance. The task of ensuring that such resources are allocated efficiently often requires the use of a load balancing device to distribute requests from clients to target resources in a fair manner according to its distribution policies. It is also desirable to be able to manage or administer such systems efficiently and securely.

Described herein are systems and methods for providing software administration tools for use in administering server configurations and in particular a system and method for auto tab completion of context sensitive remote managed objects. In accordance with an embodiment the systems and methods can be used with a server environment such as a traffic director referred to herein in some embodiments as Oracle Traffic Director OTD which is provided as a software based load balancer that can be used to deliver Internet and other traffic to back end origin servers such as web servers application servers or other resource servers.

In accordance with an embodiment the traffic director serves as an entry point for traffic such as hypertext transfer protocol HTTP and hypertext transfer protocol secure HTTPS requests which are received from clients or client devices for communication to a back end of resources or resource servers acting as origin servers. Each traffic director includes one or more traffic director instances defined by a configuration wherein the configuration provides information about various elements of that instance such as listeners origin servers failover groups and logs.

Examples of the types of clients that can be used with the system include computer servers laptop computers portable devices such as smartphones and other types of computing devices some of which may include e.g. a web browser application for accessing a web server.

Examples of the types of resources that can be used as origin servers include lightweight directory access protocol LDAP servers web servers multimedia servers application servers database servers and other types of resources.

From an administration perspective in accordance with an embodiment the traffic director is designed to be easy to install configure and use and can include a simple wizard driven graphical interface as well as a robust command line interface for use by an administrator in managing traffic director instances. For any particular organization depending on their business requirements such as the number of back end applications for which they want to use the traffic director to balance requests their internal requirements such as security and the traffic director features they wish to use the traffic director topology can be varied to address their needs.

In accordance with an embodiment the following terms are used herein. It will be evident that in accordance with other embodiments additional and or different terms can be used.

Configuration A collection of configurable elements e.g. metadata that determines the run time behavior of a traffic director instance. In accordance with an embodiment a typical configuration contains definitions for listeners e.g. IP address and port combinations on which the traffic director should listen for requests together with information about servers at the back end to which the requests should be sent. The traffic director can read the configuration when a traffic director instance starts and while processing client requests. Instance Traffic Director Instance A traffic director server that is instantiated from a configuration and deployed on an administration node or the administration server. Cluster A collection of two or more traffic director instances that are created from the same configuration. Failover Group Two or more traffic director instances grouped by a virtual IP address VIP . Administration Server A specially configured traffic director instance that hosts the interfaces including administration console and command line interface through which an administrator can create traffic director configurations deploy them as instances on administration nodes and manage the instances. Administration Node A physical server that is designated as a host on which the administrator can deploy traffic director instances. In accordance with an embodiment on a given node the administrator can deploy only one instance of a configuration. INSTANCE HOME A directory of the administrator s choice on the administration server or an administration node in which the configuration data and binary files pertaining to traffic director instances are stored. ORACLE HOME A directory of the administrator s choice in which the administrator installs the traffic director binaries. Administration Console A web based graphical interface on the administration server that the administrator can use to create deploy and manage traffic director instances. Client In accordance with an embodiment an agent e.g. a web browser or an application that sends requests e.g. HTTP and HTTPS requests to traffic director instances. Examples of the types of clients that can be used with the system include computer servers laptop computers portable devices such as smartphones and other types of computing devices some of which may include e.g. a web browser application for accessing a web server. Origin Server In accordance with an embodiment a resource or server at the back end to which the traffic director forwards the requests that it receives from clients and from which it receives responses to client requests. Examples of the types of resources that can be used as origin servers include lightweight directory access protocol LDAP servers web servers multimedia servers application servers database servers and other types of resources. Origin server Pool A collection of origin servers that host the same application or service and that the administrator can load balance by using the traffic director. In accordance with an embodiment the traffic director distributes client requests to servers in the origin server pool based on the load distribution method s that are specified for that pool. Virtual Server A virtual entity within a traffic director server instance that provides a unique IP address or host name and port combination through which the traffic director can serve requests for one or more domains. In accordance with an embodiment a traffic director instance on a node can contain multiple virtual servers. The administrator can configure settings such as the maximum number of incoming connections specifically for each virtual server and can also customize how each virtual server handles requests.

In accordance with an embodiment the back end can include one or more origin servers . Each of the origin servers can communicate with one another and with the traffic director via an internal network such as an Ethernet network. The traffic director can receive requests from clients via the Internet and in the case of many organizations a firewall .

In accordance with an embodiment from an administration perspective the server environment is designed to be easy to install configure and use and can include a simple wizard driven graphical interface as well as a robust command line interface for use by an administrator in managing server instances. At least one of the server instances can be designated an administration node . An administration server includes an administration interface which in turn includes one or more of an administration console GUI and or a command line interface that enables an administrator to configure or otherwise administer the server environment or its server instances.

In accordance with an embodiment a configuration is a collection of configurable elements that determines the run time behavior of a server instance. A typical configuration may contain e.g. definitions for listeners on which the traffic director should listen for requests together with information about servers at the back end to which the requests should be sent. The server environment e.g. traffic director can read the configuration when a server instance starts and while processing client requests. An administrator can define configurations for server instances which are stored in a configuration store on the administration server. The administrator can then instantiate a configuration by deploying it on one or more administration nodes.

It will be evident that the example shown in is provided for purposes of illustration and that in accordance with other embodiments different types of server environment and different deployment scenarios can be used.

In accordance with an embodiment the system includes a command line interface CLI and or command line shell which provides the administrator with an intuitive autocompletion feature for configurable remote objects within a server environment such as a traffic director.

For example in accordance with an embodiment referred to herein in some instances as auto tab completion pressing the Tab key instructs the system to autocomplete a command line input or alternatively to provide a list of configurable remote back end objects within the command line shell based on the context of the command line when the feature is invoked.

As further shown in at any point the administrator can also request that the command line interface enter a command line shell mode .

In accordance with an embodiment the shell mode provides an autocompletion feature for remote objects. For example at any point while using the shell mode to enter input the administrator can request autocompletion of a command e.g. by pressing the Tab key. In accordance with other embodiments other means of issuing such a request such as other key combinations can be used to invoke the autocompletion feature.

In response in accordance with an embodiment the system determines configurable remote back end objects based on the context of the command line or partial command at the time of invoking the autocomplete and uses this information to one of autocomplete the command line input or provide a list of remote configurable back end objects for the administrator to select for review and or modification .

In accordance with an embodiment the configurable remote back end object can be retrieved from the server environment or server instances or from another source of configuration information such as the configuration store.

In accordance with an embodiment in the command line standalone mode the administrator can invoke the command line interface tadm by specifying a command options and operands. Once the command is executed the command line interface exits for example 

The administrator can also invoke the command line interface from a command prompt by not fully specifying a command in which case the command line interface prompts the administrator to enter the command. Once the command is executed the control returns to the shell mode which can then be exited by typing an exit or quit command for example 

In accordance with an embodiment the autocompletion or auto tab complete feature can be invoked within the shell mode e.g. by pressing the Tab key to autocomplete a command and or its options. For tadm options the administrator can type and press the Tab key. The shell will then list the available options of a particular command.

For example if the administrator types c and presses the Tab key then the shell will only complete the command line option if it is unique. The shell will determine the configurable remote back end objects only when the Tab key is pressed on a value of the command line option e.g. config and either a attempt to complete the option if it is unique i.e. there are no other options starting with that letter c or b if there are a plurality of potential options they will be listed for example 

In the above example invoking the autocompletion feature by entering tadm p and pressing the Tab key completes the tadm command pull config .

In accordance with an embodiment the administrator can repeatedly invoke the autocompletion feature within the shell mode for example as shown in 

In the above example when the administrator types get config prop config and presses the Tab key the system receives the shell instruction to auto complete and determines configurable remote backend objects based on the context of the shell input command line at the time of invoking autocomplete and autocompletes the shell input according to the list of configurable backend objects in this example by returning a list of two options www.example.com and soa.example.com .

Similarly when the administrator types get config prop config w and presses the Tab key the system receives the shell instruction to auto complete determines configurable remote backend objects and autocompletes the shell input according to the list of configurable backend objects in this example by completing get config prop config www.example.com .

At step an administration interface with an administration command line interface and or shell is provided for use by the administrator in administering the traffic director configuration.

At step the system receives an autocomplete instruction from the administrator e.g. a Tab command and determines the current context of command line at the time of instruction.

At step the system determines a list of configurable remote back end objects based on the context of the command line at time of instruction and uses this information to one of autocomplete the command line input or provide the list of back end objects for the administrator to select for review and or modification.

Although the embodiments described above illustrate the use of the autocompletion or auto tab complete feature in accordance with a traffic director environment in accordance with other embodiments similar functionality can be used with user interfaces for other server environments to assist users in reviewing and configuring configurable objects for those environments.

The present invention may be conveniently implemented using one or more conventional general purpose or specialized digital computer computing device machine or microprocessor including one or more processors memory and or computer readable storage media programmed according to the teachings of the present disclosure. Appropriate software coding can readily be prepared by skilled programmers based on the teachings of the present disclosure as will be apparent to those skilled in the software art.

In some embodiments the present invention includes a computer program product which is a non transitory storage medium or computer readable medium media having instructions stored thereon in which can be used to program a computer to perform any of the processes of the present invention. The storage medium can include but is not limited to any type of disk including floppy disks optical discs DVD CD ROMs microdrive and magneto optical disks ROMs RAMs EPROMs EEPROMs DRAMs VRAMs flash memory devices magnetic or optical cards nanosystems including molecular memory ICs or any type of media or device suitable for storing instructions and or data.

The foregoing description of the present invention has been provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Although some of the described embodiments describe features in the context of an Oracle Traffic Director environment the described features can also be used in the context of other computing environments. Many modifications and variations will be apparent to the practitioner skilled in the art. The embodiments were chosen and described in order to best explain the principles of the invention and its practical application thereby enabling others skilled in the art to understand the invention for various embodiments and with various modifications that are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the following claims and their equivalence.

