---

title: Smart calendar for scheduling and controlling collaboration devices
abstract: A system and method for implementing a service oriented architecture that supports complex event processing and business activity monitoring. An enterprise service bus (ESB) generates a first list of one or more devices, receives a selection from a user associated with a first device of a second device in the first list, generates a second list that includes functions associated with the selection from the first user, receives a request from the first device to perform one of the functions in the second list, translates a first communication protocol of the request received from the first device into a second communication protocol used by the second device to create a translated request, translates a first message format of the request into a second message format and transmits the translated request to the second device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09444774&OS=09444774&RS=09444774
owner: Ricoh Company, Ltd.
number: 09444774
owner_city: Tokyo
owner_country: JP
publication_date: 20121130
---
This application is a continuation of U.S. patent application Ser. No. 13 689 752 titled Network Appliance Architecture for Unified Communication Services filed Nov. 29 2012.

The specification relates to a system and method for implementing a service oriented architecture that supports complex event processing and business activity monitoring. In particular the specification relates to an application programming interface or a unified server for communicating with devices and their clouds.

Consumers have a variety of consumer electronic devices to choose from. A problem arises however because consumers frequently use devices from different vendors. Each vendor s device is operated in a certain way which makes it difficult for the consumers to interact with and adjust to those devices. As a result the discrepancies delay the cooperation of the devices.

For example when a business organizes a meeting in a conference room employees use mobile devices the room includes a projector for projecting slides and other users connect to the meeting remotely using their laptops. The remote users can employ video conferencing software to view the slides in real time however the software frequently malfunctions the access code for the meeting is not sent to all the participants etc. In addition this setup requires a user to come into the room before the event turn on devices download presentations to the laptop etc. which is time consuming and could delay the meeting when the devices experience technical difficulties.

One solution is to develop applications that interface with the application programming interface API for each device. Since each vendor s device has a different API from the rest of the competitors it is difficult for application developers to adjust to all possible APIs and develop applications efficiently.

In addition when a cloud is attached to a particular device only device centric data can be logged in the cloud. As a result all user to machine interactions are fragmented in the individual clouds. As a result the content value in each cloud is low as the system cannot get a holistic view of the data and usage pattern that a user may have produced in a collection of disparate devices.

It is also difficult to update the devices backends because each device has a different backend or server that the customer has to install and manage if hosted privately or interface with if used publicly. Since each device has a different backend the user has to update each device backend separately. Furthermore the data about each device resides in a separate system resulting in device data fragmentation and eliminating the opportunity to correlate device data.

One solution is to purchase a host of products that are all produced by the same corporation. For example consumers can purchase an iPhone for mobile needs a Macintosh for a laptop an Apple Airport for managing the WiFi devices and an AppleTV for watching television. These products however are more expensive than other devices and are impractical for businesses.

The present disclosure overcomes the deficiencies of the prior art with a system for translating requests between different types of devices. In one embodiment the system includes an enterprise service bus and network appliance as a service NAaaS application services. The enterprise service bus instructs the NAaaS application services to identify one or more types of devices in a network register the one or more types of devices for use in the network by assigning an IP address and a name to each device and add the IP addresses to a list of IP addresses. The enterprise service bus is configured to generate a first list of one or more devices for a first device receive a selection of a second device in the first list from a user associated with the first device generate a second list that includes functions associated with the selection from the user receive a request from the first device to perform one of the functions in the second list translate a first communication protocol of the request received from the first device into a second communication protocol used by the second device to create a translated request translate a first message format of the request into a second message format and transmit the translated request to the second device. In another embodiment the NAaaS application services are further configured to identify a location of a first device in a network and providing the enterprise service bus with the first list of one or more devices within a set distance of the location of the first device.

In another embodiment the enterprise service bus instructs the NAaaS application services to determine one or more resource servers that the request received from a first device is for based on the request matching a global index. The enterprise service bus translates a first communication protocol of the request into one or more types of second communication protocols used by the one or more resource servers and translates a first message format of the request into one or more types of second message formats used by the one or more resource servers to create a translated request transforms a first message format of the request into one or more types of second message formats and transmits the translated request to the NAaaS application services which retrieves one or more types of media matching the translated request from the one or more resource servers.

Other aspects include corresponding methods systems apparatuses and computer program products for these and other innovative aspects.

The system advantageously presents a unified API that simplifies and speeds up the development and maintenance of client applications and also enables a consistent user experience and presents a middleware server and its application related services that log everything in one place. This way the information is correlated across all devices even from different vendors and provides higher value services. In addition the system creates a single sign on for accessing all devices in a network. The features and advantages described herein are not all inclusive and many additional features and advantages will be apparent in view of the figures and description. Moreover it should be noted that the language used in the specification has been principally selected for readability and instructional purposes and not to limit the scope of the subject matter disclosed herein.

A system and method for implementing a service oriented architecture that supports complex event processing and business activity monitoring are described below. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the invention. It will be apparent however to one skilled in the art that the embodiments can be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to avoid obscuring the invention. For example the invention is described in one embodiment below with reference to user devices such as a smart phone and particular software and hardware. However the description applies to any type of computing device that can receive data and commands and any peripheral devices providing services.

Reference in the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards flash memories including USB keys with non volatile memory or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

Some embodiments can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. A preferred embodiment is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore some embodiments can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this invention a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution. Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

Finally the algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition the specification is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the various embodiments as described herein.

The network is a conventional type wired or wireless and may have any number of configurations such as a star configuration token ring configuration or other configurations known to those skilled in the art. Furthermore the network may comprise a local area network LAN a wide area network WAN e.g. the Internet and or any other interconnected data path across which multiple devices may communicate. In yet another embodiment the network may be a peer to peer network. The network may also be coupled to or includes portions of a telecommunications network for sending data in a variety of different communication protocols. In yet another embodiment the network includes Bluetooth communication networks or a cellular communications network for sending and receiving data such as via short messaging service SMS multimedia messaging service MMS hypertext transfer protocol HTTP direct data connection WAP email etc. While only one network is coupled to the plurality of user devices the plurality of collaborative computing devices the web server the NAaaS application server and the NAaaS middleware server in practice any number of networks can be connected to the entities.

The user devices are devices associated with a particular user. For example a company provides its employees with a mobile device or a laptop. The user devices are each coupled to the network via signal lines respectively. The user device is any computing device including a memory a processor and a communication capability. For example the user device can be a tablet computer a personal digital assistant a smart phone a feature phone etc. The user devices can communicate with the network wirelessly or through wired connectivity. The user devices include one or more user applications not shown that generate messages to be processed by the enterprise service bus .

The user device is adapted for sending and receiving data to and from the NAaaS middleware server . For example the user device sends a command to project an image of a presentation program document on at least one of the plurality of collaborative computing devices to the NAaaS middleware server . The user device includes a display for viewing information provided by the enterprise service bus . For example the user device receives graphical data from the NAaaS middleware server for listing the plurality of collaborative computing devices for display on the user device .

The user device determines its location so that the user device can interact with other user devices or collaborative computing devices via the NAaaS middleware . The user device determines its location information by using global positioning system GPS circuitry included within the device itself to determine its location. For determining the user device s location indoors the user device employs radio frequency ultra sound signal or invisible light communication. For example the user device determines its location through wireless access points based on measuring the intensity of received signals. The user device accesses a database including pairs of media access control MAC addresses and locations over the Internet. To determine a location the user device retrieves the location corresponding to the access point MAC address from the database.

In another embodiment the user device performs a device discovery process that works via the network using specific protocols like SNMP ICMP Bonjour etc. For example the user device queries the NAaaS middleware server to discover devices. The NAaaS middleware server uses SNMP or ICMP protocols to discover devices and reports back to the user device with the found devices together with their internet protocol IP address media access control MAC addresses etc.

The collaborative computing devices are devices associated with a particular location and or a particular function. Collaborative computing devices can be assigned to a conference room or are assigned for meetings. For example a projector and an interactive whiteboard can be assigned to a select conference room from a plurality of conference rooms inside a building. The collaborative computing devices are each coupled to the network via signal lines respectively. The collaborative computing device is any computing device including a memory and a processor. For example the collaborative computing device can be a projector a monitor a television an interactive whiteboard a webcam a microphone a loudspeaker a CD DVD player an electronic paper device an electronic reader a desktop computer a tablet a smartphone etc.

The collaborative computing device is adapted for sending and receiving data to and from the NAaaS middleware server . For example a projector in a conference room can receive a presentation program document from the NAaaS middleware server . In another example a video conferencing device including a webcam a microphone and a monitor in a first location can capture a real time audio video synchronous communication data stream and send it to another video conferencing device in a second location through the enterprise service bus in the NAaaS middleware server .

The NAaaS middleware server is any computing device including a memory and a processor which is connected to the network via signal line . The NAaaS middleware server comprises an enterprise service bus . The enterprise service bus is described in further detail below with reference to .

The enterprise service bus includes software and routines for providing a standard interface to one or more networks of disparate devices and their corresponding resource servers that are deployed independently to communicate with each other. In one embodiment the enterprise service bus executes one or more services including invocation support routing e.g. content based routing static deterministic routing policy based routing rules based routing mediation message queue e.g. publish subscribe process choreography service orchestration complex event processing security and management e.g. monitoring logging . The enterprise service bus also calls methods contained in the code on the NAaaS application services that implement the services. For example the enterprise service bus instructs the NAaaS application services to authenticate users log device usage entries store media analyze media index keywords related to users skills and search a database for user profiles that include skills that match a user query.

The user devices or the collaborative computing devices use a particular messaging format over a particular communication protocol to communicate with and send service requests to each other through the enterprise service bus . A message format defines the structure and form of the message. For example message formats include Simple Object Access Protocol SOAP eXtensible Markup Language XML etc. A communication protocol defines a set of rules governing the syntax semantics and synchronization of communications. For example communication protocols include File Transfer Protocol FTP Hypertext Transfer Protocol HTTP Message Queue MQ Internet Inter Orb Protocol HOP etc. While the enterprise service bus and the NAaaS application services are illustrated as being on separate servers in one embodiment they are on the same server.

The NAaaS application server is any computing device including a memory and a processor which is connected to the network via signal line . The NAaaS application server includes NAaaS application services which is a collection of implementation services that are abstracted as an application and composed by the enterprise service bus in order to deliver higher level services. The NAaaS application services are described in further detail below with reference to .

The web server is any computing device including a memory and a processor that is connected to the network via signal line . The web server comprises a user interface engine . While the web server is illustrated in as being a separate server in some embodiments the user interface engine could be stored on a user device or function as a standalone application.

The user interface engine is software and routines for generating graphical data for displaying a user interface. In one embodiment the user interface engine is a set of instructions executable by the processor to provide the functionality described below for generating graphical data for displaying a user interface. In another embodiment the user interface engine is stored in the memory and is accessible and executable by the processor.

The user interface engine receives a request for generating graphical data for displaying information for controlling collaborative computing devices . For example the user interface engine generates graphical data for displaying a webpage that lists the available collaborative computing devices in a particular location or functions associated with each collaborative computing device . The user inputs information and the user interface engine transmits the information to the enterprise service bus which determines the action to be performed. For example if the user device transmits an instruction for a projector to project an image contained in the request the user interface engine transmits the request to the enterprise service bus which transmits the request to the projector and instructs the NAaaS application services to perform other actions on the request. includes example user interfaces.

In another embodiment the user interface engine receives a request for generating graphical data for displaying a search user interface. For example the user interface engine generates graphical data for displaying a webpage with a text box for inputting a query of one or more terms. The user inputs the query and the user interface engine transmits the query to the enterprise service bus which transmits the request to the NAaaS application services . The search user interface may include an input for entering a search query by a requestor. The search query may include text information visual information or audio information.

The NAaaS application services retrieve matching search results from one or more resource servers and send the search results to the enterprise service bus which transmits the search results to the user device . In one embodiment the user interface engine transmits one or more of the profile and one or more types of media to the requestor via the enterprise service bus . An example of the search user interfaces are described below in more detail with reference to .

The enterprise service bus layer processes requests coming in from the user devices layer and relays the requests to the NAaaS application services for processing and the collaborative computing devices and their corresponding resource servers . In one embodiment the enterprise service bus layer comprises one or more ports that provide an interface for user applications on the user devices to connect with the enterprise service layer to send messages and receive responses. In another embodiment the enterprise service bus layer comprises one or more ports to communicate with the NAaaS application services layer and the layer with the collaborative computing devices and their corresponding resource servers . In one embodiment a port on the enterprise service bus may be of a particular port type that handles only messages and communications of a particular message format and communication protocol of a user application. In another embodiment a port on the enterprise service bus may be of a universal port type that includes a generic interface to the enterprise service bus and can handle any messaging format and communication protocol combination.

Referring now to an example of the enterprise service bus is shown in more detail. is a block diagram of a server that includes a processor a memory a communication unit and the enterprise service bus .

The processor the memory the communication unit and the enterprise service bus are communicatively coupled to the bus . The bus may represent one or more buses including an industry standard architecture ISA bus a peripheral component interconnect PCI bus a universal serial bus USB or some other bus known in the art to provide similar functionality.

The processor comprises an arithmetic logic unit a microprocessor a general purpose controller or some other processor array to perform computations and provide electronic display signals to a display device. The processor is coupled to the bus for communication with the other components of the server via signal line . The processor processes data signals and may comprise various computing architectures including a complex instruction set computer CISC architecture a reduced instruction set computer RISC architecture or an architecture implementing a combination of instruction sets. Although only a single processor is shown in multiple processors may be included. The processing capability may be limited to supporting the display of images and the capture and transmission of images. The processing capability might be enough to perform more complex tasks including various types of feature extraction and sampling. It will be obvious to one skilled in the art that other processors operating systems sensors displays and physical configurations are possible.

The memory stores instructions and or data that may be executed by processor . The memory is coupled to the bus for communication with the other components of the NAaaS middleware server via signal line . The instructions and or data may comprise code for performing any and or all of the techniques described herein. The memory may be a dynamic random access memory DRAM device a static random access memory SRAM device flash memory or some other memory device known in the art. In one embodiment the memory also includes a non volatile memory or similar permanent storage device and media such as a hard disk drive a floppy disk drive a CD ROM device a DVD ROM device a DVD RAM device a DVD RW device a flash memory device or some other mass storage device known in the art for storing information on a more permanent basis.

The communication unit is hardware for receiving and transmitting data by linking the processor to the network and other processing systems. The communication unit receives data such as images videos or documents from a plurality of user devices . The communication unit receives requests for media associated with a particular subject from the web server . The communication unit also receives requests for one or more types of media from the web server . The communication unit transmits information to the plurality of collaborative computing devices . For example the communication unit transmits graphical data for displaying images documents or videos. The communication unit is coupled to the bus for communication with the other components of the NAaaS middleware server via signal line .

In one embodiment the communication unit includes a port for direct physical connection to the user devices the collaborative computing devices the resource servers the NAaaS application server the web server or to another communication channel. For example the communication unit includes an RJ14 or similar port for wired communication with the ESB . In another embodiment the communication unit includes a wireless transceiver for exchanging data with the user devices or any other communication channel using one or more wireless communication methods such as IEEE 802.11 IEEE 802.16 Bluetooth or another suitable wireless communication method.

In yet another embodiment the communication unit includes a cellular communications transceiver for sending and receiving data over a cellular communications network such as via short messaging service SMS multimedia messaging service MMS hypertext transfer protocol HTTP direct data connection WAP e mail or another suitable type of electronic communication. In still another embodiment the communication unit includes a wired port and a wireless transceiver. The communication unit also provides other conventional connections to the network for distribution of files and or media objects using standard network protocols such as TCP IP FTP HTTP HTTPS and SMTP as will be understood to those skilled in the art.

The data storage is a non transitory memory that stores data for the functionality of the NAaaS middleware server . The data storage is coupled to the bus for communication with other components of the server via signal line .

In one embodiment the data storage stores a library of communication protocols and messaging formats for protocol conversion. The communication protocols and messaging formats that the data storage stores include for example Simple Object Access Protocol SOAP eXtensible Markup Language XML Java Message Service JMS File Transfer Protocol FTP Hypertext Transfer Protocol HTTP Message Queue MQ Internet Inter Orb Protocol HOP Representational State Transfer REST JavaScript Object Notation JSON Distributed Component Object Model DCOM Simple Network Management Protocol SNMP etc. In some embodiments the protocol adaptation engine accesses the protocols and messaging formats to convert requests into a protocol and messaging format that is compatible with the recipient.

The enterprise service bus includes a workflow engine a device management engine a protocol adaptation engine a message transformation engine and a message enhancement engine . These components of the enterprise service bus are communicatively coupled to each other via the bus .

The workflow engine is software and routines for performing basic enterprise service bus functionalities and for handling communications between the components of the NAaaS middleware server and other components of the system . In one embodiment the workflow engine is a set of instructions executable by the processor to provide the functionality described below for receiving a request routing the request performing several steps and interacting with the NAaaS application services and the collaborative computing devices and their corresponding resource servers to satisfy the request. In either embodiment the workflow engine is adapted for cooperation and communication with the processor the communication unit and other components of the NAaaS middleware server via the signal line .

The workflow engine receives a request processes the request and communicates with the NAaaS application services and the collaborative computing devices and their corresponding resource servers to complete the request. For example the workflow engine receives a request from a user device for one of the collaborative computing devices to project an image. The workflow engine authenticates the user associated with the user device by interacting with the user management service that is part of the NAaaS application services instructing the device usage analytics service to log the command a user identifier for the user associated with the user device the date and time of the request and the IP address of the user device copying the image that the user sent to the repository by interacting with the media repository services performing optical character recognition of the image and indexing keywords in the image by interacting with the media analysis service and transmits the image to the collaborative computing device for projection.

The workflow engine receives information via the communication unit and transmits the information to the appropriate component of the enterprise service bus or components of the system . In one embodiment the workflow engine receives a request to transmit media to a collaborative computing device . The workflow engine can receive one or more types of media. The workflow engine routes or transmits the media to the collaborative computing device . For example the workflow engine receives an image from a user device e.g. a smart phone for display by a collaborative computing device e.g. a projector or a monitor .

In another embodiment the workflow engine receives a request from a web server for a list of media in a particular area or subject. The workflow engine transmits the request to the NAaaS application services to perform a search of the data storage based on search terms included in the request. Once the NAaaS application services return matching results the workflow engine transmits the results to a requestor at the user device that submitted the request to the web server . In one embodiment responsive to determining the context of the request the workflow engine determines one or more resource servers that the request is directed toward based on the request matching a global index. The workflow engine accesses the global index stored in the data storage .

The requestor may provide the search query for one or more types of media associated with a subject. For example the requestor may request to find media associated with Linux. The search query may include text. For example the requestor provides the word Linux in a text input box of a search user interface generated by the user interface engine on the web server . The search query may include visual information. For example the requestor may provide an image or video of Tux the mascot of Linux. The search query may include audio of a voice. For example the requestor may provide audio of a voice saying the word Linux. The workflow engine transmits the search query to the NAaaS application services for processing.

In another embodiment the workflow engine receives requests and sends the requests to the protocol adaptation engine and instructs the protocol adaptation engine to send the requests to the search engine which is one of the NAaaS application services .

In one embodiment the workflow engine receives a request from an Application Programming Interface API associated with a first device in a first communication protocol for translation. In one embodiment the requests are buffered in the message queue of the enterprise service bus and the workflow engine polls the message queue periodically to process the requests in queue. The workflow engine determines the context of the request. For example an HTTP request with a first line such as category SEARCH provides a context to the workflow engine that the request is for searching one or more resource servers a second line such as service video provides a context to the workflow engine that the request is for the one or more resource servers associated with storing video recordings a third line such as type video device X provides further context to the workflow engine that the one or more resource servers are associated with a device of video device X type a fourth line such as arguments userid u 0613902 URL 10.154.25.9 date 11 21 2012 filename iOS further narrows the context for the workflow engine . In situations where the protocol needs to be translated to communicate with the resource servers the workflow engine instructs the protocol adaptation engine to translate the request appropriately.

The device management engine is code and routines for determining a location of the one or more types of devices functionality associated with the one or more types of devices and a status of the one or more types of devices. In one embodiment the device management engine is a set of instructions executable by the processor to provide the functionality described below for determining location functionality and status associated with the one or more types of devices. In another embodiment the device management engine is stored in the memory and is accessible and executable by the processor . In either embodiment the device management engine is adapted for cooperation and communication with the processor the communication unit the controller and other components of the NAaaS middleware server via signal line .

In one embodiment the device management engine communicates with the NAaaS application services to determine the location of the one or more types of devices. For example the device management engine receives a query from the user device to discover the location of the user device and discover the collaborative computing devices . The device management engine interacts with the location service that is part of the NAaaS application services to match the location of the user device with a known location. In another embodiment the device management engine transmits the location of the collaborative computing device to the user device .

In one embodiment the device management engine performs a device discovery process that works via the network using specific protocols like SNMP ICMP Bonjour etc. For example the device management engine uses SNMP or ICMP protocols to discover devices together with their internet protocol IP address media access control MAC addresses etc. In another embodiment the device management engine determines location information of a device by using global positioning system GPS circuitry included within the device itself. In another embodiment the device management engine determines the device location indoors as the device employs radio frequency ultra sound signal or invisible light communication. For example the device determines its location through wireless access points based on measuring the intensity of received signals. The device management engine accesses a database including pairs of media access control MAC addresses and locations over the Internet. To determine a location the device management engine retrieves the location corresponding to the access point MAC address from the database.

In one embodiment once the device management engine receives the user device location from the location service the device management engine asks a device inventory service that is part of the NAaaS application services to provide a list of devices given a certain location. The device management engine then requests that a device management service that is also part of the NAaaS application services filter the list of devices based on the availability of the devices.

In one embodiment the request from the user device specifies a location associated with the collaborative computing devices . For example a user wants to know about devices in a first conference room in Tokyo Japan because the user is scheduled to give a presentation from a second conference room in California USA to people who will be in the first conference room. In another example a user creates a calendar event at a location and wants to know the list of available devices at the location of the event. In one embodiment the location service matches the location associated with a request to a known location from the data storage of NAaaS application services . A location identifier is sent to the device management engine by the location service . In another embodiment the device inventory service provides a list of all devices on the network to the device management engine responsive to the device management engine using the location identifier of the user device for querying the device inventory service . In yet another embodiment the device management engine queries the device management service to limit the list of available devices to a particular area and the device management service transmits the information back to the device management engine . For example a location of an available projector from a list of collaborative computing device can be identified to be in a first conference room inside a building in Tokyo Japan.

In one embodiment the device management engine determines a list of functions associated with each of the plurality of devices. For example the list of functions include power on power off projection zoom enhance automatic focus print two way video recording and transmission two way audio recording and transmission language translation text to speech translation and speech to text translation etc.

In one embodiment the device management engine determines a current status of one or more devices. For example a status of a projector in a conference room can be determined to be in use out of service idle off etc. In another embodiment the device management engine determines that one or more devices reserved by a user are idle for a set amount of time. In one embodiment the device management engine interacts with the device management service that is part of the NAaaS application services to update the status of a device.

In one embodiment the device management engine receives an access control list for a calendar event from the workflow engine and determines the one or more user devices associated with the people participating in the calendar event. The device management engine determines the one or more user devices by querying the device inventory service using the access control list. For example the device management engine uses the user identifiers in the access control list and queries the device inventory service for a list of devices associated with the users participating in the calendar event. The device inventory service provides the device management engine with a list of device identifiers for the one or more user devices associated with the users participating in the calendar event.

In one embodiment the device management engine determines the location of one or more user devices and consequently the location of the users carrying the user devices prior to the start of the calendar event. For example the device management engine determines the location of user devices five minutes prior to the start of the calendar event. In another embodiment the device management engine determines the location of the one or more users within a threshold distance from the venue of the calendar event. For example a first user might be in an adjacent building near the venue and a second user might be negotiating road traffic five miles from the venue where the calendar event is scheduled. The device management engine interacts with the device inventory service and the location service in the NAaaS application services to store the determined location information.

In one embodiment when all the users in the access control list are determined to be present at the venue the device management engine interacts with the notification service to generate a notification that suggest to start the calendar event. In another embodiment when at least one user in the access control list is absent from the venue the device management engine interacts with the notification service to generate a notification to delay the start of the event.

The protocol adaptation engine is software and routines for adapting and translating protocols. In one embodiment the protocol adaptation engine is a set of instructions executable by the processor to provide the functionality described below for adapting and translating protocols. In either embodiment the protocol adaptation engine is adapted for cooperation and communication with the processor the communication unit and other components of the NAaaS middleware server via the signal line .

In one embodiment the protocol adaptation engine receives a request from the workflow engine in a first communication protocol and performs adaptation and translation to make the communication protocol compatible with the recipient of the request. For example the protocol adaptation engine receives an HTTP request from the user device to turn off a projector. The projector communicates using TCP. The protocol adaptation engine adapts an HTTP request to be forwarded to a TCP endpoint and transforms the turn off HTTP request to its counterpart TCP command.

In one embodiment the protocol adaptation engine identifies one or more types of second communication protocols associated with the one or more resource servers. For example the protocol adaptation engine identifies that a first resource server associated with a projector device uses a Transmission Control Protocol TCP as a communication protocol a second resource server associated with an interactive whiteboard uses a Simple Network Management Protocol SNMP as a communication protocol and so on. In another embodiment the protocol adaptation engine stores the one or more protocols in the data storage for each of the one or more resource servers 

In one embodiment the protocol adaptation engine translates the request from the first communication protocol into each one of the one or more types of second communication protocols associated with the one or more collaborative computing devices and resource servers respectively. For example the protocol adaptation engine translates request from an HTTP protocol to a TCP protocol that the first resource server associated with the projector device can understand translates the HTTP protocol into an SNMP protocol that the second resource server associated with the interactive whiteboard can understand and so on. In yet another embodiment the workflow engine receives the request which is passed to the protocol adaptation engine which sends the translated request to the message queue in the enterprise service bus from where the translated requests are routed to the appropriate resource servers and their APIs.

The message transformation engine is software and routines for transforming message formats. In one embodiment the message transformation engine is a set of instructions executable by the processor to provide the functionality described below for transforming message formats. In either embodiment the message transformation engine is adapted for cooperation and communication with the processor the communication unit and other components of the NAaaS middleware server via the signal line .

In one embodiment the message transformation engine transforms message formats in requests from the user device going toward a collaborative computing device . For example the message transformation engine transforms the payload from an eXtensible Markup Language XML to JavaScript Object Notation JSON .

Continuing with the above example the request includes a JSON message that is passed to the message transformation engine and the message enhancement engine 

Where naaasprotocol is the Web API version of the platform PJS designates the projector devices SOLEIL is a type of projector url is the device IP address for the projector and ricohuserid opt is the ID of the user operating the device. In one embodiment the message transformation engine transforms the JSON message into XML.

In another embodiment the message transformation engine transforms message formats for querying resource servers . For example the message transformation engine identifies a request with a messaging standard in JavaScript Object Notation JSON and translates the JSON to an eXtensible Markup Language XML for a first resource server . When the resources are associated with resource servers that use different messaging formats the message transformation engine translates messages into multiple formats.

The message enhancement engine is software and routines for enhancing messages. In one embodiment the message enhancement engine is a set of instructions executable by the processor to provide the functionality described below for enhancing messages. In either embodiment the message enhancement engine is adapted for cooperation and communication with the processor the communication unit and other components of the NAaaS middleware server via the signal line .

The message enhancement engine can also enhance the message by adding information not originally present in the request for interacting with a collaborative computing device . For example continuing with the example above where the user wants to project an image onto a projector that requires additional authentication information the message enhancement engine retrieves the additional authentication information such as a password from the data storage using a user identifier in the request and adds it to the message. Once the message is ready the message enhancement engine transmits the message to the workflow engine in the enterprise service bus which transmits the message to the collaborative computing device or the NAaaS application services for retrieving media user profiles etc. from the resource servers .

In one embodiment the data storage device usage entries an index of the media the media and user profiles. The device usage entry describes transactions executed on the collaborative devices and user identifiers associated with the transaction. In some embodiments the device usage entry includes multiple user identifiers. For example the device usage entry includes a user identifier for the presenter e.g. a first user that sends a request from a user device to project an image from a collaborative device and a user identifier for the author of the media The device usage entry includes the type of request e.g. project power on power off etc. the type of device involved in the exchange of request and service e.g. smart phone projector etc. an IP address for the device a measure of device resource spent e.g. time power etc. a type of functionality of the device used e.g. auto focus enhance imaging etc. a type of media exchanged e.g. a presentation program document a text document a spreadsheet document a video recording an audio recording an image etc. etc.

The data storage stores an index of media. In one embodiment the index of media includes records for each media including metadata for each media. For example the metadata may include pointer data for accessing the original media e.g. a full presentation instead of merely an image of a slide of the presentation from the cloud an author of the media etc. In one embodiment the metadata also includes results from the media analysis service such as a text version of the image. In one embodiment the data storage also stores a copy of the media included in the requests. For example the data storage receives a copy of the media from the media repository services .

The data storage stores user profiles. In one embodiment the user profiles include records for each user. The records for each user may include a graphical representation of the user e.g. a photo of the user name a title keywords related to the user media associated with the user e.g. media authored by the user or media presented by the user presentations associated with the user etc. In one embodiment the keywords related to the user include a list of keywords. The NAaaS application services is a collection of individual lower level services with individual application programming interfaces APIs that are composed by the enterprise service bus to deliver higher services. For example a project command sent by a user device to the enterprise service bus will invoke a module in the NAaaS application services that will authenticate the user device identify text in the media and save the document in the data storage . The services do not communicate with each other. Instead the services receive instructions from the enterprise service bus complete the requested task save data in the data storage if applicable and return information to the enterprise service bus .

The NAaaS application services is a collection of individual lower level services with individual application programming interfaces APIs that are composed by the enterprise service bus to deliver higher services. For example a project command sent by a user device to the enterprise service bus will invoke a module in the NAaaS application services that will authenticate the user device identify text in the media create a database index and save the document along with the database index in the data storage . The services do not communicate with each other. Instead the services receive instructions from the enterprise service bus complete the requested task save data in the data storage if applicable and return information to the enterprise service bus .

In one embodiment the services include a user management service a device inventory service a location service a device management service a device usage analytics service a media repository service a media analysis service an indexing service a calendar module a billing service a search engine a server maintenance service and a notification service . Persons of ordinary skill in the art will recognize that the enterprise service bus can compose additional services to complete requests.

The user management service is software and routines for registering users in the network and performing authentication of users. In one embodiment the user management service is a set of instructions executable by the processor to provide the functionality described below for registering users. In another embodiment the user management service is stored in the memory and is accessible and executable by the processor . In either embodiment the user management service is adapted for cooperation and communication with the processor and the communication unit via signal line .

The user management service receives user information and generates a user profile. For example the user management service receives a name a job title a job code an e mail address a phone number a username a password a retina scan of the user a fingerprint swipe of the user etc. The user management service generates login credentials for the user based on the registration information and stores the login credentials in the data storage for the user. The user management service associates a unique identifier with the user. This can be the user s full name an email address for the user a series of numbers an employee identifier etc. The unique identifier is used to track the user s activities in the system.

In one embodiment the login credentials are generated as a single sign on with a property that provides access control to multiple and independent devices and services using the same login credentials. For example a user logs in with the user credentials and gains access to all registered services without being prompted to login at each one of them. In another example a user logs into different types of devices such as a projector an interactive whiteboard etc. using the same user credentials. In one embodiment the user management service stores the login credentials of users as an organized set of records with a hierarchical structure in a Lightweight Directory Access Protocol LDAP server not shown associated with a business. The user management service also manages preferences for the user that are received during registration or at other times. For example the user can upload an image to associate with the login credentials.

In one embodiment where the user devices and or collaborative computing devices use different login information than the login information used to authenticate the user with the system the user management service receives the login information from the user or an administrator and adds the information to the user s profile. For example a user s laptop includes a four digit code that needs to be input before the user can access the contents of the laptop. The user management service adds the information to the user s profile.

The user management service performs authentication. For example a user enters login credentials into a user interface on the user device . The user device transmits the login credentials to the enterprise service bus which requests that the user management service authenticate the user based on the login credentials. The user management service identifies the user associated with the user device compares the login credentials to the user profile and either sends a confirmation back to the enterprise service bus that the login credentials were correct or a notification that there was a login error. The confirmation includes the user identification associated with the user.

In one embodiment if the login request for authentication does not include a correct user name and password the login request is denied. In another embodiment the user management service is used in account recovery when the user has forgotten his or her username and or password. In some instances the user management service detects a potentially fraudulent authentication by analyzing the secondary information included in the login request. For example if the username associated with the login request is a username of a user no longer employed at a company or a suspected bot the user management service identifies the login request as potentially fraudulent. The user management service detects a potentially fraudulent authentication by comparing the secondary information to historical authentication information of the user. For example if the login request for authentication originates from a country or device that the user has not attempted to send login requests from before e.g. unregistered device the user management service identifies the login request as potentially fraudulent. In one embodiment a potentially fraudulent authentication attempt includes a failed authentication attempt.

The device inventory service is code and routines for registering devices in the network . In one embodiment the device inventory service is a set of instructions executable by the processor to provide the functionality described below for registering devices. In another embodiment the device inventory service is stored in the memory and is accessible and executable by the processor . In either embodiment the device inventory service is adapted for cooperation and communication with the processor and the communication unit via signal line .

The device inventory service receives requests to add remove and update devices in the network from the workflow engine . The device inventory service receives a request to register one or more types of user devices and one or more types of collaborative computing devices . In one embodiment the device inventory service registers the type of device and an IP address or MAC address for the device with the network and creates a device identifier specific for the device. For example a new projector with model number 1042 is registered and assigned a device identifier such as prj1042u1 . In one embodiment the device inventory service receives a request to register one or more types of user devices under a particular username stored in the data storage . For example a user can register personal devices such as a tablet PC a smartphone etc. and associate the devices with a form of identification such as an employee identifier user identifier etc. In one embodiment the device inventory service maps the location with the device by importing the location identifier provided by the location services . In another embodiment the device inventory service receives a request to register the one or more types of collaborative computing devices for use at a particular location or within certain limits of space. For example a projector can be registered for use on the first floor of a building and an interactive whiteboard can be registered for use in a conference room. The first floor of the building and the conference room each has a location identifier associated with them. The device inventory service stores the device registration information e.g. IP addresses device identifiers etc. in the data storage .

In another embodiment the device inventory service identifies devices associated with a location using a location identifier generated by the location service which is explained in further detail below. The location identifier is received from the device management engine in the enterprise service bus for storing in the data storage . For example a projector can be registered to a conference room in a building in Tokyo Japan and the conference room has a location identifier. A user can access the projector from San Francisco Calif. using the login credentials indicating the user is a registered user. In yet another embodiment the device inventory service receives requests to update information associated with the devices that are registered. For example a user can change the name of a projector the location of an interactive whiteboard and the firmware version on the video conferencing device etc.

The location service is code and routines for providing and storing location information of one or more types of devices. In one embodiment the location service is a set of instructions executable by the processor to provide the functionality described below for storing device location information. In another embodiment the location service is stored in the memory and is accessible and executable by the processor . In either embodiment the location service is adapted for cooperation and communication with the processor and the communication unit via signal line .

In one embodiment the device management engine from the enterprise service bus interacts with the location service to store location information including name geographical coordinates etc. In another embodiment the location service receives a request to register a location before devices can be registered or assigned to the location. For example a user may register the location of a new branch in Singapore before another user from Menlo Park Calif. can send media to the devices that are registered at the Singapore location.

The device management service is code and routines for reserving devices in the network and granting access to the devices. In one embodiment the device management service is a set of instructions executable by the processor to provide the functionality described below for reserving devices. In another embodiment the device management service is stored in the memory and is accessible and executable by the processor . In either embodiment the device management service is adapted for cooperation and communication with the processor and the communication unit via signal line .

In one embodiment the device management service receives a request from the device management engine to reserve one or more types of collaborative computing devices that are shared with a group of people for example employees in a company. For example a user employee can reserve a projector an interactive whiteboard etc. temporarily under his username or user identifier for use in a calendar event for e.g. business meeting . In another example the user employee can supply a device identifier along with the user identifier for reserving devices. The device management service grants an access request for a user of the group to the one or more types of collaborative computing devices that are registered previously using the user s login credentials created by the user management service . For example the user accesses collaborative computing devices such as a projector a webcam an interactive whiteboard etc. using one and the same username and password.

In one embodiment the device management service grants access to the one or more types of collaborative computing devices reserved for a calendar event. For example the device management service grants access to a reserved projector in the conference room 4C for a calendar event Staff Meeting at 10 AM. In another embodiment the device management service receives a confirmation from a user organizer of the calendar event via the device management engine to power on or power off and connect or disconnect the collaborative computing devices at a start time or stop time as indicated in the calendar event.

The device usage analytics service is software and routines for logging device usage entries associated with the requests in the network . In one embodiment the device usage analytics service is a set of instructions executable by the processor to provide the functionality described below for logging device usage entries. In another embodiment the device usage analytics service is stored in the memory and is accessible and executable by the processor . In either embodiment the device usage analytics service is adapted for cooperation and communication with the processor and the communication unit via signal line .

The device usage analytics service receives a request and a user identifier associated with the request and logs the metadata associated with the request as a device usage entry. If the user associated with request is different from the author of the media the device usage entry includes a user identifier for both the presenter and the author of the media. For example a doctor gives a talk about a medical subject to residents at a hospital by using slides that are transmitted from the doctor s user device e.g. a laptop to a collaborative computing device e.g. a projector . Each time the doctor wants to display a slide on the projector the doctor sends a request to display an image of the slide from the laptop to the projector. The enterprise service bus transmits the request to the user management service which identifies the user associated with the user device . The enterprise service bus receives a confirmation of authentication from the user management service and an identity of the user and transmits the request and user identifier to the device usage analytics service which logs a device usage entry. In one embodiment the device usage entry includes a user identifier for the user associated with the user device an author of the media if different a set of actions performed on the collaborative computing device a unique device identifier of the collaborative computing device and a unique identifier or metadata associated with the media referring to the stored media in the data storage .

The media repository service is code and routines for storing media associated with a request in data storage . In one embodiment the media repository service is a set of instructions executable by the processor to provide the functionality described below for storing media. In another embodiment the media repository service is stored in the memory and is accessible and executable by the processor . In either embodiment the media repository service is adapted for cooperation and communication with the processor and the communication unit via signal line .

In some embodiments a collaborative computing device is lacking a backend server that stores media. In other embodiments the data storage includes a copy of media in the request for example an image from a PowerPoint presentation. In these instances the media repository service receives a request from the enterprise service bus that includes media. The media repository service generates a unique identifier associated with the media and stores the media in the data storage . In one embodiment the media repository service receives one or more types of media to associate with a device identifier of a collaborative computing device from the workflow engine and stores the media and the associated device identifier in the data storage . In another embodiment the media repository service receives device identifier along with the user identifier for storing one or more types of media.

The media analysis service is code and routines for analyzing media. In one embodiment the media analysis service is a set of instructions executable by the processor to provide the functionality described below for analyzing media. In another embodiment the media analysis service is stored in the memory and is accessible and executable by the processor . In either embodiment the media analysis service is adapted for cooperation and communication with the processor and the communication unit via signal line .

The media analysis service receives media associated with a request from the enterprise service bus . For example the media analysis service receives an image that was captured from a slide. The media analysis service applies optical character recognition to the image to identify text associated with the image. The media analysis service stores the text in the data storage . In one embodiment the media analysis service converts content from the image including handwritten typewritten or printed text to machine encoded text.

In one embodiment the media analysis service receives video and or audio data. The media analysis service may identify a user associated with the video and or audio data received from a video conferencing device. For example a video may include the doctor from the example above giving the presentation in front of an interactive whiteboard. The media analysis service may identify the doctor based on performing facial recognition on the video data or performing voice analysis on the audio data. In another embodiment the media can be provided by audience members that participate in an event. The media analysis service determines an event. For example the media analysis service determines a presentation. The media analysis service determines audience members at an event. In some embodiments the media analysis service determines audience member attendance based on location of a user device . The media analysis service determines which audience members participated in the event. In one embodiment the media analysis service determines which audience members participated in an event based on performing facial recognition from video data or performing voice analysis on the audio data.

In one embodiment the media analysis service receives video data of an event or a presentation from the enterprise service bus . For example the video includes a person in front of an interactive whiteboard for presenting information. The media analysis service may perform optical character recognition on one or more frames of the video. For example the media analysis service performs optical character recognition on the information presented on the interactive whiteboard. In another embodiment the media analysis service receives audio data. The media analysis service may identify text from the audio data by using speech to text technology.

The indexing service is software and routines for creating one or more database indices for a plurality of resource servers . In one embodiment the indexing service is a set of instructions executable by the processor to provide the functionality described below for creating the database indices. In another embodiment the indexing service is stored in the memory and is accessible and executable by the processor . In either embodiment the indexing service is adapted for cooperation and communication with the processor and the communication unit via signal line .

In one embodiment the indexing service determines one or more types of media stored in one or more resource servers . The one or more resource servers are associated with one or more types of collaborative computing devices . For example a resource server associated with a collaborative computing device e.g. a projector stores slides that are transmitted from the user device e.g. a laptop to the collaborative computing device . The indexing service identifies metadata associated with the one or more types of media and creates a database index on the database storage . The database index holds the metadata and a reference pointer to a location where the one or more types of media related to the metadata are stored. In one embodiment the indexing service stores the database index in the data storage .

The indexing service creates a database index based on a cardinality of metadata. The cardinality refers to the uniqueness of the metadata. The lower the cardinality the more duplicity present in the metadata. In one embodiment the indexing service identifies metadata with a high cardinality for e.g. user identifier username employer identifier email address title specific keywords etc. for creating an index. For example the indexing service identifies a user identifier associated with the user that transmitted the slides to the projector and creates a database index that holds the user identifier and a pointer pointing to a location where the slides related to that user identifier are stored. In another embodiment the indexing service identifies metadata with a normal cardinality e.g. device name device type device identifier internet protocol IP address media type location date of event etc. . For example the indexing service identifies a device identifier associated with the projector that projected the slides and creates a database index that holds the device identifier and a pointer pointing to a location where the slides related to that device identifier are stored. In yet another embodiment the indexing service identifies metadata with a low cardinality e.g. current employee former employee junior employee senior employee etc. . For example the indexing service identifies that the slides were projected by an employee who is a junior employee and creates a database index that holds the expertise level and a pointer pointing to a location where the slides related to that expertise level are stored.

In one embodiment the workflow engine receives identified text from the media analysis service that analyzed the media for the workflow engine . For example the media analysis service extracts text from video and or audio data sent by the workflow engine . The workflow engine sends the text to the indexing service for identifying keywords in the media indexing data related to the keywords in the media and creating a global index that includes the keywords and pointers to the media in the resource servers . In one embodiment the indexing service also associates the keywords with user profiles. In one embodiment the indexing service determines one or more parts of the media. The indexing service determines a title a table of contents an overview a key information section etc. of one or more slides of a slide show. The indexing service may determine parts of the one or more slides based on location of text formatting of text a position of a slide in the slide show etc. For example the title of a slide or slide show may appear at the top of a first slide of the slide show appearing in a bold font. The title may include text having a size that is larger relative to other text on the slide or other slides. In another example a slide having a position at the beginning of the slide show may include an overview of the slide show. In another example the indexing service determines a key information section based on identifying text having one or more bullet points.

The indexing service determines weights for the keywords. In one embodiment the indexing service determines weights based on the parts. For example the indexing service determines a higher weight for a keyword from the title of a slide show than other parts e.g. text of the slide show. In another embodiment the indexing service determines weights based on a count associated with a keyword. For example the indexing service identifies the number of times each keyword appears in the media.

In one embodiment the indexing service determines related content. For example the indexing service determines synonyms for the keywords. In one embodiment the indexing service performs a search in a thesaurus. In another example the indexing service determines related content based on a knowledge graph.

The indexing service indexes the keywords and synonyms in the database indices for the plurality of resource servers . In one embodiment the indexing service indexes the keywords and synonyms by excluding extraneous words. Extraneous words may include common words e.g. a and the . In another embodiment the indexing service selects a top number of keywords for the index. The indexing service may select a top number of keywords based on the weights for each keyword. In one embodiment the indexing service stores an index of keywords and synonyms in the data storage . For example the indexing service stores the database index in one or more tables of a database in data storage . In one embodiment the index of keywords includes data describing an association between a keyword and the media. For example the index includes records with a keyword and pointer data e.g. uniform resource locator or document file identifier associated with the media. The pointer data may include data for locating the media on the resource servers or the database storage if a collaborative computing device is not associated with a resource server that stores media . In one embodiment a keyword may be associated with a plurality of media.

In one embodiment the indexing service creates and maintains a global database index. The global database index is a master index that is comprised of database indices created separately for the one or more resource servers . The indexing service determines one or more types of updates occurring in the one or more resource servers retrieves the database indices of the one or more resource servers and compiles the global index. The global index holds the database indices of the one or more resource servers and consequently pointer references pointing to a location of one or more source materials relating to the database indices. The global index also holds the keywords for the media associated with the one or more resource servers so that the search engine can query the global index for the keywords and receive the pointer references for retrieving the media from the one or more resource servers .

The one or more source materials are associated with the one or more types of updates occurring in the one or more resource servers . The one or more types of updates include storing deleting or moving at least one of a presentation program document a text document a spreadsheet document a video recording an audio recording an image etc. For example a global database index comprises a first database index on a user identifier from a first resource server associated with a projector device a second database index on a device identifier from a second resource server associated with a video conferencing device and so on. In another embodiment the indexing service creates a global database index that includes pointer references that point to the database indices in the one or more resource servers . In one embodiment the indexing service stores the global database index in the data storage .

The indexing service updates a user profile for an author or presenter based on one or more keywords. A user profile for the author or presenter may include a list of keywords relating to content in the media associated with the author or presenter. The indexing service updates the user profile by adding the one or more keywords to the list of keywords to the user profile associated with the unique user identifier. In one embodiment the user profile for the author includes metadata describing the media associated with the author or presenter. The metadata may include the list of keywords presentation information e.g. a date location and device information media information e.g. uniform resource locator or document file identifier of media authored etc. If the author gives the same presentation information at multiple events in one embodiment the presentation information includes multiple dates and locations associated with the presentation.

The calendar module is code and routines for creating one or more events in a calendar for a user. In one embodiment the calendar module is a set of instructions executable by the processor to provide the functionality described below for creating events in a calendar. In another embodiment the calendar module is stored in the memory and is accessible and executable by the processor . In either embodiment the calendar module is adapted for cooperation and communication with the processor and the communication unit via signal line .

In one embodiment the calendar module receives a request from a user via the workflow engine to create one or more events in one or more calendars associated with the user. The one or more calendars for e.g. a personal calendar a bill payment calendar etc. and the event data for e.g. a title a start time an end time a start date an end date a number of attendees etc. associated with the calendars are stored in the data storage . For example the calendar module receives a request from the user to create an event Staff Meeting in a time slot between 10 AM and 11 AM on a Tuesday . In one embodiment the calendar module receives a list of attendees from the user via the workflow engine to be associated with the event. The user creates a list of attendees by inviting the attendees to the event using a name a user identifier an employee identifier etc. For example a team leader can invite members in an engineering department to attend the event Staff Meeting . In one embodiment the calendar module generates an access control list for the calendar event based on the list of attendees and stores the access control list in the data storage . In another embodiment the calendar module sends the access control list to the workflow engine in the enterprise service bus . The workflow engine sends the access control list to the device management engine for determining devices associated with people in the access control list. In one embodiment the calendar module receives a selection of a location from the user where the event is to take place and transmits the selection of location to the workflow engine . The workflow engine sends the selection of location to the device management engine for determining a list of available collaborative computing devices at the selected location. For example the user can select a first available conference room conference room 301 on a third floor of a building.

The billing service is code and routines for generating a bill for a user. In one embodiment the billing service is a set of instructions executable by the processor to provide the functionality described below for generating and storing billing information. In another embodiment the billing service is stored in the memory and is accessible and executable by the processor . In either embodiment the billing service is adapted for cooperation and communication with the processor and the communication unit via signal line .

The device usage data is stored by the device usage analytics engine in the data storage . The workflow engine retrieves the data associated with device usage from the device usage analytics engine and provides the data to the billing service . In one embodiment the billing service determines a cost associated with the device usage of a single device. For example the billing service determines that the cost of using a Magnetic Resonance Imaging MRI device to image the spine of a patient is 2000 dollars. The billing service then generates a bill based on the cost associated with the device usage and sends the bill to the workflow engine or stores the bill in the data storage . In another embodiment the billing service determines a cost associated with a user device accessing a plurality of collaborative computing devices . For example the billing service generates a bill for the user device accessing a printer a projector conferencing services etc. for the month of November.

The search engine is software and routines for identifying media related to a search query of one or more terms. In one embodiment the search engine is a set of instructions executable by the processor to provide the functionality described below for identifying media related to a search query. In another embodiment the search engine is stored in the memory and is accessible and executable by the processor . In either embodiment the search engine is adapted for cooperation and communication with the processor and the communication unit via the signal line .

The search engine receives one or more search queries from the workflow engine for one or more resource servers . In one embodiment the search queries originate at the search server . The search engine identifies from the database indices one or more keywords that match one or more terms in the search queries determines the one or more resource servers the request is bound for and sends the determination of the one or more resource servers to the workflow engine . For example the search engine accesses a global database index for identifying one or more keywords matching one or more terms in the search queries and determines the one or more resource servers are associated with a projector an interactive whiteboard etc. In one embodiment the search engine identifies keywords by searching for exact matches to a term in the search query. In another embodiment the search engine identifies keywords by searching for keywords similar to the term in the search query. For example if the requestor provides the term open source operating system the search engine may identify Linux as a keyword from the database index.

In one embodiment the search engine receives the search query from the workflow engine . In one embodiment the search engine identifies one or more types of media associated with the keywords and user profiles for authors or presenters of the media. In another embodiment the database index includes data describing an association between a keyword and media. For example if a search query term such as Linux is received the search engine identifies a user identifier a device identifier date of event etc. as database indices and using the database indices retrieves from the one or more resource servers one or more of a presentation program document a text document a spreadsheet document a video file an audio file an image etc. for the search query term Linux and sends the retrieved information to the enterprise service bus .

In one embodiment the search engine identifies a number of times a keyword appears in the retrieved media. For example the search engine determines the number of times the keyword appears in an image of one or more slides or on an interactive whiteboard. In another example the search engine determines the number of times the author says the keyword in audio the audio is subjected to speech to text translation by the media analysis service . The search engine ranks the media retrieved from the one or more resource servers based on a number of times the keyword appears in the media.

The server maintenance service is software and routines for managing one or more resource servers. In one embodiment the server maintenance service is a set of instructions executable by the processor to provide the functionality described below for managing one or more resource servers. In another embodiment the server maintenance service is stored in the memory and is accessible and executable by the processor . In either embodiment the server maintenance service is adapted for cooperation and communication with the processor and the communication unit via signal line .

In one embodiment the server maintenance service receives a request from the workflow engine for procuring a server license for one or more resource servers . For example the license is an operating system license for an operating system installed on the resource server . In another example the server license is per physical resource server or per virtual instance of the resource server per socket or per CPU in the resource server and per total number of cores in the resource server . In another embodiment the server maintenance service receives a request for procuring a connection license to allow one or more types of devices to connect to the one or more resource servers and use software distributed by a manufacturer of the one or more types of devices. The connection license is one from a group of per device licenses that connects to the resource server for e.g. 45 projector devices connecting to a resource server for a projector device includes 45 connection licenses per concurrent connection to the resource server for e.g. 25 unique sessions open concurrently at any one time to the resource server per 45 projector devices and per user account for e.g. using a username and password for a unique connection regardless of type of device used to connect to the resource server .

In one embodiment the server maintenance service determines compatibility of one or more types of devices with the one or more resource servers by accessing a hardware compatibility list HCL associated with the one or more resource servers . A hardware compatibility list HCL is a database of hardware models and their compatibility for example with a certain operating system on a resource server and is stored in the data storage .

In one embodiment the server maintenance service determines one or more updates to an Application Programming Interface API associated with one or more types of collaborative computing devices that are associated with one or more resource servers . The one or more updates include software updates and firmware updates. The Application Programming Interface API associated with one or more types of collaborative computing devices is exposed by the enterprise service bus to the user devices . The server maintenance service responsive to determining the one or more updates sends a notification to the enterprise service bus to update its internal engines so that the protocol adaptation engine the message transformation engine and the message enhancement engine are prepared to deal with any updates that occur in the APIs of the collaborative computing devices . This avoids a situation where the user has to manually install updates on the resource servers .

The notification service is code and routines for generating notifications in the network . In one embodiment the notification service is a set of instructions executable by the processor to provide the functionality described below for generating and issuing notifications. In another embodiment the notification service is stored in the memory and is accessible and executable by the processor . In either embodiment the notification service is adapted for cooperation and communication with the processor and the communication unit via signal line .

In one embodiment the notification service receives the bill from the workflow engine or retrieves the bill from data storage and generates a notification indicating that the bill is ready. The notification is sent to the workflow engine which transmits the notification to the user device or an email account of a user using the user device . In another embodiment the notification service generates a notification indicating when to replace one or more types of devices based on the device usage. For example the notification service determines that a projector is nearing its lifetime based on the number of hours the projector has been used and generates a notification to send to the service personnel.

The notification service receives an access control list and event information associated with a calendar event from the workflow engine . In one embodiment the notification service generates a notification to query the user that created the calendar event whether to start the calendar event at start time. For example the notification service generates a notification five minutes before the scheduled start time so a projector device is warmed up if the user agrees to start the event. In one embodiment the workflow engine receives a request from the calendar module to alert users about the start of the event. The workflow engine instructs the notification service to generate a notification requesting the user to start the calendar event when all the users in the access control list are present at the calendar event. In another embodiment the workflow engine instructs the notification service to generate a notification requesting other participants to delay the start of the event when at least one user is absent at the venue. For example if a user for a staff meeting is held up in traffic five miles from the venue a notification is generated to delay the staff meeting.

In one embodiment the notification service determines the end of the calendar event when the workflow engine receives a request from the calendar module to ask users if they want to end the event. The workflow engine instructs the notification service to generate a notification asking the list of users participating whether they want to end the event. Responsive to receiving a confirmation from at least one of the users in the list the workflow engine transmits the confirmation to power off all the devices at the venue to the device management service . In another embodiment the notification service receives a list of devices from the workflow engine that are idle for a set amount of time and the workflow engine instructs the notification service to generate a notification indicating the list of devices which are idle and providing an option to power off the devices in the list. For example an employer leaving a parking lot after attending a group meeting inside a building can be notified by the notification service that a projector an interactive whiteboard a web camera etc. in the conference room are idle. The user can send a request to power off all the devices responsive to receiving the notification from the notification service . The workflow engine transmits the request from the user to power off to the device management service .

Turning now to a graphic representation of an embodiment of a user interface for displaying a webpage providing an overview of services for a user that is generated by the user interface engine . The user interface includes a number of services for example My devices section My calendar section Federated search section and Expert search section . The My devices section displays a list of the user s devices device names or device locations and device statuses in a table. The listed devices include one or more user devices of the user for example a tablet PC and one or more collaborative computing devices that were reserved by the user for example a projector. The My calendar section displays a miniature calendar of the user. The miniature calendar displays an event entry and a thumbnail representation of a collaborative computing device reserved for the event. The Federated search section displays a search box for the user to input search terms for media. The search results display one or more types of media from one or more resource servers or from the database storage that was stored by the media repository service matching the search terms. The Expert search section displays a similar search box for the user to input search terms on a particular subject and find users with varying degrees of expertise on the particular subject. The search results display a list of users matching one or more keywords in the search terms and associated media presented by the users including the one or more keywords.

Turning now to a graphic representation of an embodiment of a user interface for displaying a list of devices at a location or within a set distance of a user device such as a smartphone. The user interface displays a list of devices detected at a location named Conf. room 4C . The list of devices includes one or more collaborative computing devices . Each item of the list includes a device name a short description of the device and a thumbnail representation of the device. Upon selecting the button for Projector 1 the user is directed to another user interface for sending a command to the selected device Projector 1 which is explained in further detail with reference to .

Referring now to various embodiments of the methods of the invention will be described. is a flow diagram of an embodiment of a method for managing communication between one or more types of devices using an enterprise service bus and NAaaS application services . The enterprise service bus includes a workflow engine a device management engine a protocol adaptation engine a message transformation engine and a message enhancement engine . The NAaaS application services include a user management service a device management service a device inventory service a location service a device usage analytics service a media repository service a media analysis service an indexing service a calendar module a billing service a search engine a server maintenance service and a notification service .

The workflow engine instructs the device management engine to identify one or more types of devices in a network. The device management engine instructs the device inventory service to register one or more types of devices for use in the network by assigning an IP address and a name e.g. a device identifier to each device. For example a user can register personal devices such as a tablet PC a smartphone etc. and the device inventory service associates the devices with his username or another unique identifier. In another example a user can register collaborative computing devices such as a projector an interactive whiteboard etc. for use at a particular location or within certain limits of space such as a conference room or a floor of a building. The device inventory service adds the IP addresses to a list of IP addresses. For example the device inventory service stores a list of approved IP addresses in data storage .

In some embodiments the workflow engine instructs the user management service to authenticate each user based on authentication credentials. For example the authentication credentials can be the registered user s login credentials. The protocol adaptation engine the message transformation engine and the message enhancement engine manage requests between the one or more types of devices in the network. For example the message transformation engine translates a first message in JSON format into a JMS format. The protocol adaptation engine translates a HTTP protocol from a smartphone into a TCP protocol for a projector. The message enhancement engine adds information for e.g. additional authentication information etc. to the message for the target application to receive. The workflow engine instructs the device usage analytics service to log device usage entries for the requests occurring between the one or more types of devices in the network .

The device management engine identifies a location of a first device in the network and generates a first list of one or more devices within a set distance of the location of the first device. For example the user device informs the device management engine of its location and the device management engine interacts with the device inventory service and the location service that are part of the NAaaS application services to generate a list of collaborative computing devices such as a projector an interactive whiteboard and a web camera that are in a location within a threshold distance of the user device s location. In another embodiment the user device specifies conference rooms where the user wants to control the devices and the device management engine instructs the device inventory service to generate a list of devices in those conference rooms. In another embodiment the set distance is the reach of the network . is an example where the device management engine provides the user with a list of the devices available in conference room 4C . The device management engine provides the list to the user device .

The device management engine receives a selection from a user associated with the first device of a second device in the first list. The device management engine generates a second list that includes functions associated with the second device in the first list. is an example where the user selected a projector from the first list and the second list includes the functions associated with the projector.

The workflow engine receives a request from the first device to perform one of the functions in the second list. For example the list of functions include power on power off projection zoom enhance automatic focus print two way video recording and transmission two way audio recording and transmission language translation text to speech translation and speech to text translation etc. The protocol adaptation engine translates a first communication protocol of the request from the first device into a second communication protocol used by the second device. The message transformation engine translates a first message format into a second message format . The workflow engine transmits the translated request to the second device.

The workflow engine instructs the device usage analytics service to log the device usage entry associated with the translated request and a transaction performed by the second device. For example the device usage analytics service logs a type of request sent e.g. project power on power off search etc. an IP address for the user device that made the request e.g. smartphone laptop etc. a user identifier for the user associated with the user device an IP address for the collaborative computing device that receives the request e.g. projector laptop conferencing device etc. a type of functionality used e.g. auto focus enhance imaging etc. and a type of media that is being exchanged between the one or more devices e.g. a presentation program document a text document a spreadsheet document a video recording an audio recording an image etc. .

The workflow engine receives a selection of media from a first user. For example the user selects an email attachment. The device management engine generates a first list of functions associated with the media. For example the user could project the email. The workflow engine transmits the first list to the user. The workflow engine receives a selected function from the first list. The device management engine instructs the location service to determine the user s location. The device management engine then instructs the location inventory service to generate a second list that includes locations where the selected function could be performed. For example the location service generates a list of locations within a threshold distance from the user or the user also provides additional input about a location where the user wants to select a device. The workflow engine transmits the second list to the user. In some embodiments instead of a list of locations where the selected function can be performed the second list includes devices within a certain location that can perform the selected function. For example the device management engine interacts with the device inventory service and the location service to generate a list of collaborative computing devices within the location.

The workflow engine receives a selected location from the second list. The device management engine instructs the device inventory service and device management service to generate a third list of devices at the selected location that can perform the selected function. For example the third list includes devices that are available. The workflow engine transmits the third list to the user. The workflow engine receives a selected device from the third list. The workflow engine transmits a request to perform the function to the selected device. For example the workflow engine transmits a request to project the email attachment to a projector in a conference room.

The media analysis service identifies text in the media for example by performing speech to text translation. The workflow engine instructs the indexing service to generate an individual database index for each resource server that associates keywords with the media based on the identified text in the media. The workflow engine instructs the indexing service to compile a global database index from the individual database indexes the global database index including the keywords and pointer references pointing to locations where the media are stored in the resource servers . For example the video conference is stored on a resource server associated with the video conferencing device.

The workflow engine receives a query from a first device for one or more types of media related to the query. The workflow engine transmits the request to the search engine which identifies keywords in a global database index that match the query. The workflow engine receives the keywords from the search engine and determines one or more resource servers that store media associated with the keywords. The workflow engine generates a request for media for the one or more resource servers . If there is a difference between the communication protocol of the request and the communication protocol used by the resource server the workflow engine transmits the request to the protocol adaptation engine which determines a first communication protocol of the request and one or more types of second communication protocols of the one or more resource servers. The protocol adaptation engine translates the request from the first communication protocol into each of the one or more types of second communication protocols. If there is a difference between the message format of the request and the message format of the resource server the message transformation engine determines a first message format of the request and one or more types of second message formats of the one or more resource servers. The message transformation engine transforms the request from the first message format into each of the one or more types of second message formats. The workflow engine retrieves one or more results matching the translated request from the one or more resource servers and sends the one or more results to the first device.

The calendar module receives via the workflow engine a request from an organizer to create an event for a list of attendees and a selection of a location for the event in a calendaring application. The workflow engine transmits the selected location to the device management engine in the enterprise service bus . The device management engine instructs the device inventory service to determine a set of devices provided for use in the location. For example the user specifies that the event takes place in a conference room in Menlo Park Calif. but users will also join from a conference room in Tokyo Japan. Further details for selecting the location can be found above with reference to . The workflow engine receives a selection of at least some of the devices from the set of devices a starting time and end time for the event and a name for the event. The device management engine determines a location of the organizer s device within a threshold time of a start of the event. The workflow engine transmits a query asking the organizer if the event should start at a start time. For example the workflow engine transmits the query five minutes before the event is scheduled to ask the organizer if the event should start at the scheduled time. The query is generated by the notification service and received by the workflow engine . The workflow engine instructs the calendar module to receive a confirmation from the organizer that the event should start at the same time. The device management engine instructs the set of devices to power on for use at the start time. For example the device management engine instructs the set of devices five minutes before the start time of the event.

The workflow engine instructs the calendar module to receive a request to create an event for a list of attendees and a selection of a location for the event in a calendaring application. For example the location is Conference Room 201B in Building A. The organizer also sets the start time and end time for the event. The workflow engine instructs the device inventory service to determine a set of devices provided for use in the location. The workflow engine receives a request to reserve one or more devices in the set of devices provided for use in the event. The workflow engine receives an indication of whether users associated with the device are required to attend or optionally attending. The workflow engine instructs the media repository service to receive one or more types of media to associate with each of the one or more devices for display. The workflow engine instructs the one or more devices to power on at a start of the event. Around the end of the event for example five minutes before the event is scheduled to end the workflow engine instructs the notification service to generate a notification asking if the event should end. Optionally the workflow engine receives the notification and queries at least one of the list of attendees if the event should end and responsive to receiving a confirmation from one of the attendees the workflow engine instructs the one or more devices that were turned on to power off.

If at least one of the one or more devices is not absent from the venue the device management engine instructs the notification service to suggest to start the event. In some embodiments the device management engine checks the identity of the user associated with the device that is absent. If the presence of the user is not important to the event the device management engine instructs the notification service to suggest to start the event. For example as referenced in the user that created the event specifies mandatory attendance for some of the attendees and optional attendance for other attendees. If the user is one of the optional attendees the event can start.

If at least one of the one or more devices within a threshold distance of the venue the device management engine instructs the notification service to suggest to start the event. If at least one of the one or more devices is not within a threshold distance of the venue the device management engine instructs the notification service to generate a notification to delay the start of the event.

The foregoing description of the embodiments has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the specification to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the embodiments be limited not by this detailed description but rather by the claims of this application. As will be understood by those familiar with the art the examples may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise the particular naming and division of the modules routines features attributes methodologies and other aspects are not mandatory or significant and the mechanisms that implement the description or its features may have different names divisions and or formats. Furthermore as will be apparent to one of ordinary skill in the relevant art the modules routines features attributes methodologies and other aspects of the specification can be implemented as software hardware firmware or any combination of the three. Also wherever a component an example of which is a module of the specification is implemented as software the component can be implemented as a standalone program as part of a larger program as a plurality of separate programs as a statically or dynamically linked library as a kernel loadable module as a device driver and or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming. Additionally the specification is in no way limited to implementation in any specific programming language or for any specific operating system or environment. Accordingly the disclosure is intended to be illustrative but not limiting of the scope of the specification which is set forth in the following claims.

