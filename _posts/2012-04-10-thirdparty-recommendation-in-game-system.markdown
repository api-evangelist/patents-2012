---

title: Third-party recommendation in game system
abstract: A computer-implemented method for using a third-party recommendation in a game system includes: receiving, at a recommendation engine and from a game system, current game context data provided in real time during a game in which at least one user participates; selecting, by the recommendation engine, at least one of multiple predefined actions based on at least the current game context data; and providing a response to the game system that identifies the selected at least one action for performance.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09132349&OS=09132349&RS=09132349
owner: SAP SE
number: 09132349
owner_city: Walldorf
owner_country: DE
publication_date: 20120410
---
The game industry has undergone significant growth and development in recent years. The market for video games was initially tied to company specific hardware devices and only later were generic platforms introduced for which developers could independently create games. The game industry is currently expanding into the fields of online gaming and mobile games in part due to the popularization of smartphones and other handheld digital devices.

Game publishers rely on different monetization approaches. In some games advertising and sale of virtual goods or services are used. For example in some so called freemium games the user can play the game for free with the option of paying money for extra game content that is otherwise not available. In such situations one business goal is to maximize the revenue from such sources. Strategies for doing so can include seeking to keep a player engaged in the game attempting to make games viral encouraging players to buy virtual goods or services seeking to increase the amount of money each player spends seeking to minimize the attrition or churn of players and seeking to leverage social graphs of trendsetters.

In a first aspect a computer implemented method for using a third party recommendation in a game system includes receiving at a recommendation engine and from a game system current game context data provided in real time during a game in which at least one user participates selecting by the recommendation engine at least one of multiple predefined actions based on at least the current game context data and providing a response to the game system that identifies the selected at least one action for performance.

In a second aspect a computer program product tangibly embodied in a computer readable storage medium includes instructions that when executed by a processor perform a method for using a third party recommendation in a game system. The method includes receiving at a recommendation engine and from a game system current game context data provided in real time during a game in which at least one user participates selecting by the recommendation engine at least one of multiple predefined actions based on at least the current game context data and providing a response to the game system that identifies the selected at least one action for performance.

A system includes one or more processors and a computer program product tangibly embodied in a computer readable storage medium and comprising instructions that when executed by the one or more processors perform a method for using a third party recommendation in a game system. The method includes receiving at a recommendation engine and from a game system current game context data provided in real time during a game in which at least one user participates selecting by the recommendation engine at least one of multiple predefined actions based on at least the current game context data and providing a response to the game system that identifies the selected at least one action for performance.

Implementations can include any or all of the following features. Before receiving the current game context data the method further includes receiving at the recommendation engine and from the game system past game context data that the game system has recorded during earlier performances of the game the past game context data reflecting user decisions determining by the recommendation engine circumstances preceding at least one type of user decision determining by the recommendation engine a correlation between the determined circumstances and a player profile or game behavior storing definitions of the multiple predefined actions and building at least one predictive model based on the determined circumstances and correlation wherein the recommendation engine uses the predictive model in selecting the at least one of the multiple predefined actions. The type of user decision involves converting from a free player to a paying player. The type of user decision involves making a purchase within the game. The type of user decision involves abandoning the game. Using the predictive model in selecting the at least one of the multiple predefined actions includes monitoring all game events in real time selecting at least one significant event based on the monitoring selecting at least one of multiple predictive models for the selected significant event and executing the selected predictive model with the received current game context data wherein the at least one of multiple predefined actions is selected based on an outcome of executing the selected predictive model. The method further includes evaluating a result of performing at least the action and making one or more modifications of the recommendation engine based on the evaluation.

Implementations can provide any or all of the following advantages. Providing effective game analytics in real time can improve the commercial viability of a game. Predictive game analytics can ensure that the right recommendation is provided to the right player at the right time. Use of an external real time recommendation engine can increase players enjoyment of a game sustain more long term player commitment and loyalty and increase game revenue.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features and advantages will be apparent from the description and drawings and from the claims.

This document describes examples providing real time analytics for a game or other scripted or semi scripted user process using an external recommendation engine. In some implementations a game company can interface its game server or other gaming device or system with a real time recommendation engine from a third party and thereby get improved user satisfaction and business performance. For example the recommendation can involve one or more actions performed with regard to the user. In some implementations the third party provides such recommendation analytics as a service to one or more customers for example through a cloud system or other system.

The game server here includes at least one game engine that serves as the platform or foundation for one or more developed games. In some implementations the game engine is designed with a particular category or field of games in mind. For example the game engine can be geared toward one or more of first person shooter games massively multiplayer online games flight driving simulator games action adventure games role playing games sports games strategy games labyrinth games social network games and or other types of games.

The game engine includes one or more components that allow it to serve as a platform for different kinds of games being developed. Here the game engine includes at least one renderer that is configured for rendering visual game content into a format that is compatible with one or more types of displays. For example the renderer can be tailored for outputting video content suitable for a personal computer e.g. in a browser the display of a handheld gaming system or a smartphone screen.

The game engine includes one or more utilities that are here shown as content utilities and processing utilities . For example the content utilities include but are not limited to a physics solver for handling forces and other interactions between objects a sound component generating game audio content an animation component that provides motion for game objects such as by simulation and a scene graph that defines one or more game scenes. Other content utilities can be used.

The processing utilities can include but are not limited to a networking component such as for multi player games a streaming component such as for delivering game content in real time a memory management component a localization component such as for providing geographically targeted features and a threading component to name a few examples. Other processing utilities can be used.

The game engine can include a scripting component . In some implementations the scripting component defines and manages the use of and interaction between the game engine s utilities or renderer. For example the scripting component controls when and how and by whom various utilizes can be invoked.

One or more specific games can be developed based one the game engine and or other resources. Here a particular developed game e.g. an action adventure or a social network game is schematically illustrated as a game implementation . For example the game implementation makes use of the game engine for the scene graphs physics simulations audio generation and rendering of game output. As such the game implementation here includes at least one executable component that is used to install the game e.g. on the game server and or on the user system s and or to launch the game e.g. a user activates the executable component to start a new game session .

Each session where a user plays the game is characterized by gamer context . In some implementations the game context can include static and dynamic information. For example user demographic data can be included in the gamer context . As another example the user s history of playing the game and or the current game state can be included in the gamer context.

As the game progresses one or more game offers or other recommendations can be made to the player. Such offers or recommendations can involve but are not limited to purchasing a good or service in the game e.g. a virtual tool or a character property registering the user s name and or other identifying information subscribing to content conveying information about the game to others e.g. through a social network purchasing goods or services marketed by the game vendor or a third party or choosing between alternative modes or other options in the game to name just a few examples.

The game server and or the user system s can record some or all of what happens in the game during play. The game implementation can have a log file or other record where such information is collected. For example this tracking can cover information about the user s the time s and location s of the play the individual events that occurred during the play and the user interactions that triggered the event s . Any suitable data structure or format can be used for documenting and storing the game information such as but not limited to one or more types of markup code e.g. XML .

Information about individual gamers or other users participants is collected and handled in ways that seek to ensure compliance with privacy regulations and any other applicable laws regulations or preferences. In some implementations user data e.g. demographics can be anonymized within the game server to prevent personal information from being revealed. As another example appropriate data security measures e.g. encryption can be used when information is transmitted or stored. In some implementations a user can create a preference profile that indicates what types of offers or other recommendations the user is or is not interested in receiving.

The user system s here include at least one client one or more input devices and one or more output devices . The client can include a browser program optionally having one or more plug in components a native or otherwise proprietary user interface of a particular gaming system or a dedicated framework on a smartphone operating system to name just a few examples. The input device s can include a touchscreen keypad joystick motion sensor e.g. accelerometer microphone data glove headset or any other game controlling device to name some examples. The output device s can include but are not limited to a display screen e.g. LCD speaker headphones motor heating or cooling component and or a tactile device.

During gameplay one or more visual outputs e.g. game screens are presented one the output device s e.g. using the client and the user makes one or more game inputs using the input device s . For example the user controls a game character with a joystick and manipulates a virtual object in the game e.g. a tool or a weapon using one or more buttons. The effects of the game input is that the state of the game is altered in one or more ways and this can lead to a corresponding update of the visual and or audio game output.

One or more of the game offers can be made to a player or other user. In the shown implementation the game engine has an interface that allows for communication to and from one or more third party recommendation systems . In some implementations the interface can include an application programming interface API that allows the game engine to export and import data or other information in real time. For example the interface can provide the recommendation system access to some or all of the log file and can provide input that the game engine acts on in real time e.g. the selection of a particular recommendation to make during gameplay . In some implementations the interface can be provided in form of one or more memory addresses or other data locations to which the recommendation system and the game engine e.g. some or all of its utilities both have access. Other forms of interfacing can be used.

The recommendation system is here schematically illustrated as performing a selection in real time between a number of separate recommendations in this example shown as offers . More particularly there are here N number of recommendations to choose between and they are labeled Offer through Offer N . That is the N number of offers may have been created as a predefined library of offers recommendations that should be available at one or more points during gameplay. Making any one of the recommendations or offers can involve performing one or more actions with regard to the user or player such as in real time with the gameplay. For example performing such action in the game can include but is not limited to displaying a visual message playing an audio signal or message or generating another game device output. As another example the recommendation can instead or also be generated in one or more other ways. For example a portal communication social network message email text message or the like can be generated. In some implementations the recommendation analysis is a solution provided by the recommendation system as a service to the game server and or other systems for example over the internet.

The recommendation system in this example generates a recommendation by subjecting the offers to one or more phases . In some implementations a validity check can be performed A . For example any of the offers that is defined as being valid only during a certain time interval is omitted or ignored as invalid at other times. In some implementations an eligibility check can be performed B . For example any of the offers that apply only to gamers who have reached at least a certain game level can be filtered out for lack of eligibility. In some implementations a targeting check can be performed C . For example one or more aspects of the gamer context can be taken into account in choosing among the offers . In some implementations a previously offered check can be performed D . For example any offer that has previously been made to the particular player e.g. as indicated by the gamer context and or the log file can be omitted. In some implementations the validity eligibility targeting and previously offered checks A D are considered an arbitration phase for the recommendation system . For example the arbitration phase can choose among the offers based on player context and eligibility criteria.

In some implementations a first optimization and prioritization check can be performed E . For example the first check E can evaluate those of the offers that the recommendation system has not yet excluded in any earlier phase. This check can involve making one or more predictions using a predefined model. For example the recommendation engine can predict which one s of the offers should be made based on propensity scores for the player s the goals of the recommendation process and the value to the game publisher. Some examples of prediction models will be described later.

The processing by the recommendation engine is performed in real time and can take into account some or all of the gamer context and or the log file . A selection by the recommendation system identifies the recommendation s to be made. For example one or more offers that remained after phases A D can be chosen. The recommendation system communicates the selection so that it can be applied in the game.

A second optimization and prioritization check can be performed F . In some implementations the second check F can determine what the outcome if any was of making the selected recommendation to the player. For example successful recommendations are noted and unsuccessful recommendations can lead to modification of the offer s or the predictive logic of the recommendation system or both.

Offers or other recommendations can be created and uploaded to the RTOM or other recommendation engine for example so that the third party recommendation system will provide recommendation analytics as a service. In some implementations one or more offers are derived based on a resource such as a product catalog and or a promotion system. For example the created offer can seek to change a user from being a free player into being a paying player. In some implementations one or more external offers can be uploaded that were created elsewhere.

One or more events from a customer interaction channel are received to trigger a real time recommendation process and corresponding information is provided to the recommendation engine. In some implementations one or more of the following types of information can be used 

The recommendation engine can retrieve additional data in real time at . In some implementations the resource or one or more other resources or can be accessed. For example CRM data and or business intelligence BI data and or business warehouse BW data can be retrieved.

Based on the available information the RTOM or other recommendation engine in real time determines the best recommendation s to make. In some implementations the recommendation engine chooses among the game offers . One or more recommendations can be made to the customer interaction channel at . For example the selected offers are identified.

At feedback can also be received for learning re offer policy and analysis. In some implementations experience data is extracted at exported and stored in a data warehouse . For example analytics can be performed on the extracted data.

In some implementations the offers can seek to accomplish one or more particular goals or objectives for the game publisher or vendor. A first scenario involves increasing conversion rate. In some gaming contexts 1 3 of gamers pay money in some form as part of the play and the remainder do not pay to play. Converting a user from a free player to a paying player is therefore valuable to the game publisher. For example a general idea is to seek to understand one or more factors that make a player purchase a virtual good or service for the first time. Based on such information offers to make the purchase more appealing can be created and delivered to individual players at the appropriate time s .

A second scenario involves increasing revenue per player. While game publishers generally earn more revenue the more players spend on virtual goods and services the publisher must however ensure that the player receives adequate value for the money spent. By contrast a game or other environment that encourages or forces increased spending can lead to user frustration and churn.

A third scenario involves increasing the retention rate of paying players. Generally when a paying player ceases to play a game there is direct revenue loss for the game publisher. That is ceasing to play the game here refers to the player s deliberate action of quitting the game for the foreseeable future perhaps to never again play the game e.g. the player permanently abandons the game . Gamers choose to do this for various reasons. For example the user finishes the game the user gets stuck and becomes frustrated with the game the player s friends move on to another game or activity or the user becomes bored with the game. Some implementations seek to detect abandonment behavior early and send re engagement messages to the user. It is important that such messages be relevant to the player or else they might be disregarded as spam and that they are context aware e.g. that they address the likely root cause .

The recommendation system can be specially designed or configured in an effort to address one or more situations e.g. those mentioned above . In some implementations the recommendation system can be trained using historical data e.g. past game context that the game system has recorded during earlier performances of the game. Such historical data can then reflect user decisions by one or more players such as decisions to become a paying player to increase the amount spent or to abandon the game. Circumstances that precede at least one type of user decision are determined from the historical data. For example it may be detected that certain players often make a purchase within their first ten hours of playing the game. As another example situations that precede game abandonment can be analyzed. A correlation between the determined circumstances and a player profile or game behavior can then be determined. Definitions of the various offers recommendations or other actions toward the user can then be defined. A predictive model can be built and used by a recommendation engine in selecting at least one recommendation or other action to perform at a given time.

At grouping of a new player is performed. For example the classification algorithm can be used to assign the new player to one of the segments. As another example the player can instead or in addition be assigned to a test or control group.

Returning now to at the game is executed. During gameplay events can be monitored and special trigger events can be sought. When finding a trigger event a particular offer or other recommendation can be delivered. In one example detection of a trigger event and responding to it can be done according to the following pseudocode description 

That is the above example shows that the game state where the player s character is wounded is defined as being a trigger event. When this event is detected one or more offers should be made or other action be taken. Particularly the action here is to offer the player a virtual portion at a discount.

At refinement is performed. For example the effectiveness of offers can be monitored in normal play and or within a user test group. This can lead to refinement of the segmentation model e.g. one or more of the classification algorithms the definitions of triggering events and or of the actions being taken.

The goal of the model can be identified for example to predict the level at which a given player is likely to quit playing the game. Predictor variables in the training data can be reduced to the relevant ones in the modeling environment . For example one user characteristic and or one game scenario may be a better predictor of abandonment than other variables. Suitable statistical models can then be tested the results compared in terms of their respective strengths of prediction and the most suitable algorithm can be selected for the goal that was set for the predictive model.

An event monitor scans all game events in real time. That is event data is accessed in the logging infrastructure. For example the event monitor can be implemented as part of a logwriter component in the game engine or as a monitoring component in the log file or database .

The event monitor selects significant events and invokes a specified predictive model. For example events such as before battle new level reached or at death can be considered trigger events. As additional examples a free2pay predictive model can be invoked upon the before battle event a player retention predictive model can be invoked.

The event monitor provides relevant information to at least one predictive model execution engine . In some implementations the provided information indicates at least the event information e.g. event identifiers and the selected predictive model e.g. a model identifier .

The predictive model execution engine executes the selected model with the relevant input data. For example data regarding one or more events that have been detected optionally together with other contextual information can be used. The result can be one or more predictions. For example the engine can determine based on the available information that the player has an 82 likelihood of churning. Such likelihoods can be determined for one or more particular amounts of time. For example the player s likelihood of purchasing a virtual item within the next few hours of play or of churning within the next three months can be predicted. Other predictions regarding the player s can be made.

The result from the predictive model execution engine e.g. an estimated probability can be provided to a recommendation engine that selects at least one action to perform e.g. chooses one or more offers and provides that information to the game engine . For example the SAP RTOM can be used in some or all of the processing. The game engine can then execute the selected action s for example by reading one or more offer identifiers provided by the engine retrieving the corresponding offer s and presenting the offer s to the player. For example when more than one action is recommended with regard to a player they can be performed essentially at the same time or at two or more different times.

Some or all information from the log file can be provided to an in memory computing platform . The information can include game data that is continuously loaded into the platform . For example game data can reflect the offers made or other actions taken as well as whether the user accepted the offers or otherwise responded to the performed action s .

In some implementations the platform can operate by storing one or more databases entirely or mainly in memory as opposed to on disk etc. Using in memory techniques can speed up the access and retrieval of data and can therefore help provide the quick turnaround time needed for making recommendations essentially in real time. For example the HANA platform available from SAP AG uses in memory database technology and can be used as the platform .

An offer monitor monitors some or all information available in the in memory computing platform . For example the offer monitor can detect information that reflects whether offers have been successful or unsuccessful. In some implementations other recommendations and or actions are performed with regard to players and information about their effectiveness can then be monitored in a similar way.

In some implementations an external effectiveness evaluation can be performed. For example one or more persons involved with production or development of the game can be given access to some or all information from the offer monitor . This can give the person insight into the effectiveness of offers and the person can then make one or more adjustments as appropriate. For example the person can make or suggest an adjustment of the offer pool such as by modifying an offer eliminating an offer and or adding one or more new offers. Such adjustments can be applied to the recommendation engine .

The memory stores information within the system . In some implementations the memory is a computer readable medium. The memory is a volatile memory unit in some implementations and is a non volatile memory unit in other implementations.

The storage device is capable of providing mass storage for the system . In one implementation the storage device is a computer readable medium. In various different implementations the storage device may be a floppy disk device a hard disk device an optical disk device or a tape device.

The input output device provides input output operations for the system . In one implementation the input output device includes a keyboard and or pointing device. In another implementation the input output device includes a display unit for displaying graphical user interfaces.

The features described can be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. The apparatus can be implemented in a computer program product tangibly embodied in an information carrier e.g. in a machine readable storage device for execution by a programmable processor and method steps can be performed by a programmable processor executing a program of instructions to perform functions of the described implementations by operating on input data and generating output. The described features can be implemented advantageously in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from and to transmit data and instructions to a data storage system at least one input device and at least one output device. A computer program is a set of instructions that can be used directly or indirectly in a computer to perform a certain activity or bring about a certain result. A computer program can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment.

Suitable processors for the execution of a program of instructions include by way of example both general and special purpose microprocessors and the sole processor or one of multiple processors of any kind of computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memories for storing instructions and data. Generally a computer will also include or be operatively coupled to communicate with one or more mass storage devices for storing data files such devices include magnetic disks such as internal hard disks and removable disks magneto optical disks and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in ASICs application specific integrated circuits .

To provide for interaction with a user the features can be implemented on a computer having a display device such as a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device such as a mouse or a trackball by which the user can provide input to the computer.

The features can be implemented in a computer system that includes a back end component such as a data server or that includes a middleware component such as an application server or an Internet server or that includes a front end component such as a client computer having a graphical user interface or an Internet browser or any combination of them. The components of the system can be connected by any form or medium of digital data communication such as a communication network. Examples of communication networks include e.g. a LAN a WAN and the computers and networks forming the Internet.

The computer system can include clients and servers. A client and server are generally remote from each other and typically interact through a network such as the described one. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A number of implementations have been described. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of this disclosure. Accordingly other implementations are within the scope of the following claims.

