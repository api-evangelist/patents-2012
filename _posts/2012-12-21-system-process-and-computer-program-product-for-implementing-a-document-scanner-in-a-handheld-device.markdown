---

title: System, process, and computer program product for implementing a document scanner in a hand-held device
abstract: A system, process, and computer program product are provided for scanning a document with a hand-held device. An approach for scanning the document includes the steps of sampling one or more values from an array of sensors integrated into a hand-held device, determining whether the device has moved at least a threshold distance, and sampling one or more additional values from the array of sensors.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09148544&OS=09148544&RS=09148544
owner: NVIDIA Corporation
number: 09148544
owner_city: Santa Clara
owner_country: US
publication_date: 20121221
---
The present invention relates to an electronic hand held device and more particularly to a hand held device with integrated electronic hardware.

Mobile phones have become ubiquitous in today s digital world. Many people rely on their mobile phone to perform a whole host of varying tasks such as making phone calls checking email capturing digital photographs and digital video reading news on the Internet playing games and so forth. The mobile phone has become the Swiss Army knife of hand held electronics.

Still the range of tasks that can be performed with today s smart phones e.g. the Apple iPhone or Google Android based phones is limited to the hardware supplied with the phones. For example most phones today come with an integrated CMOS complementary metal oxide semiconductor image sensor to capture pictures or video. Some phones may include a flash device e.g. an LED flash module to illuminate a scene. Further many phones have internal accelerometers or gyroscopes that provide feedback about the motion of the phone. While these and other sensors enable a wide range of applications to be implemented in software on these phones some applications require hardware that is not readily available within any existing mobile hand held devices. Thus there is a need for addressing this issue and or other issues associated with the prior art.

A system process and computer program product are provided for scanning a document with a hand held device. An approach for scanning the document includes the steps of sampling one or more values from an array of sensors integrated into a hand held device determining whether the device has moved at least a threshold distance and sampling one or more additional values from the array of sensors.

One example application that existing hardware integrated in a hand held device is not suited to perform is scanning documents. In order to scan a document most users resort to taking a photograph of a document with the integrated CMOS image sensor. However the photograph needs to be taken from sufficient distance to capture the entire extents of the document. From such a distance the contents of the document may not be captured at sufficient resolution to generate a high quality reproduction of the document. In addition photographs of the document are typically poor because the quality of the photograph is heavily dependent on the ambient and direct lighting conditions. This disclosure describes a hand held device such as a mobile phone that includes integrated sensors that make applications like scanning a document more efficient and produce better results.

As shown in the device includes a camera assembly that includes an image sensor. The image sensor may be a CMOS type image sensor or a CCD charge coupled device image sensor. The device also includes a flash device such as a LED light emitting diode . The flash device may be discharged to provide a bright light to illuminate a scene captured by the image sensor.

In one embodiment the device includes an array of CCD sensors located on the back surface of the device . The array of CCD sensors may be a one dimensional array comprising a row of sensors. As shown in the array of CCD sensors is oriented horizontally across substantially the entire width of the rear surface of the device . The sensors are equally spaced with a uniform distance between each sensor. The distance may correspond to a horizontal resolution of a raw image data captured by sampling the array of CCD sensors . In another embodiment the array of CCD sensors may be a two dimensional array comprising two or more rows of sensors. The device may include an application that is configured to sample the charge accumulated on each of the CCD sensors to determine a corresponding intensity value for a pixel associated the CCD sensor. In yet another embodiment the sensors may be other types of sensors such as CMOS sensors.

In one embodiment the device also includes an array of LED flash devices not explicitly shown positioned proximate to the array of CCD sensors . The array of LED flash devices may be discharged proximate to the time that the array of CCD sensors are sampled to illuminate a document at a location proximate to the array of CCD sensors . In one embodiment each sensor in the array of CCD sensors is associated with a corresponding LED flash device located proximate to the sensor. In another embodiment a row of LED flash devices may be located above one or more rows of the array of CCD sensors .

The device also includes a position sensor . In one embodiment the position sensor is an optical sensor that includes a red LED diode or the like and receiver electronics that detect the reflection of the light on a surface and track the motion of the device. In another embodiment the position sensor is a laser sensor that is similar to the optical sensor except the laser sensor includes a diode that emits a laser outside the visible spectrum. The laser sensor may be more sensitive than the optical sensor and provide better resolution of motion.

In other embodiments the device may also include gyroscopes and or accelerometers within the internal electronic components of the device The gyroscopes and or accelerometers may augment the motions signals detected by position sensor to further provide better resolution of motion. In yet other embodiments device may include gyroscopes and or accelerometers in lieu of the position sensor where the gyroscopes and or accelerometers provide the signals for tracking the motion of the device .

A user may scan a document using the device by placing the device rear side down on top of a document the user would like to scan. A user may begin scanning by pressing the user interface button or by touching a GUI element displayed on display device . The device samples the array of CCD sensors to capture a plurality of pixels for a portion of the image. The user may then move the device down the length of the document. The position sensor and or the gyroscope accelerometers tracks the motion of the device . Once the device has moved a distance equal to the width of a pixel the device samples the array of CCD sensors to capture a plurality of pixels for another portion of the image. The device continues to capture pixels for the image indexing the location of each of the captured pixels by tracking the motion of the device and associating the location of the array of CCD sensors to the relative location of the document. Once the user has moved the device to the bottom of the document the user moves the device horizontally by a distance less than the width of the device and begins moving the device up the length of the document capturing additional pixels that represent portions of the document. The user may continue to scan the document in this manner until the entire extents of the document have been captured. The application may terminate the scan when the user lifts the device off the document as sensed by the position sensor and or gyroscopes accelerometers or when the user otherwise indicates that the scan is complete such as by pressing the user interface button or by touching a GUI element displayed on display device .

In one embodiment the application includes a GUI that displays one or more GUI elements on display of the device . The GUI may include a GUI element that enables a user to begin scanning a document to generate a digital image of the document. When the user touches the GUI element the application via the API implemented by driver samples one or more values of the array of CCD sensors . The application may process the sampled values to generate pixel data for the digital image storing the pixel data at locations in a two dimensional array associated with the position of the device . The two dimensional array may represent the pixels of the digital image. The application via the API implemented by the driver polls the position sensor at a sampling frequency such to determine whether the user has moved the device by a threshold distance. Alternately the position sensor may indicate to the driver e.g. via some type of communication protocol whenever the position sensor detects that the device has moved by a threshold distance. In one embodiment the threshold distance represents the width of a pixel of the digital image to be generated by the application . Once the device has moved by at least the threshold distance the application via the API implemented by the driver samples one or more additional values of the array of CCD sensors . The application may process the additional sampled values to generate additional pixel data for the digital image storing the additional pixel data at different locations in the two dimensional array associated with the new position of the device.

In one embodiment the application processes the sampled values by interpolating the sampled values based on the position of the device . For example the location of the device at the time the array of CCD sensors is sampled may not correspond to an exact location of a pixel in the digital image. In other words rather than sampling the array of CCD sensors when the device has moved by an amount equal to the width of a pixel the application may sample the array of CCD sensors when the device has moved 1.3 the width of a pixel. Therefore the application may be configured to interpolate the sampled values by interpolating two or more sampled values to estimate the sampled value at a location corresponding to a pixel of the digital image. In one embodiment the application may be configured to sample multiple values for each pixel of the digital image. In other words the threshold distance at which the application is configured to sample the array of CCD sensors may be less than the width of a pixel e.g. one quarter the width of a pixel which enables the sampled values to have a higher resolution than the digital image that can reduce aliasing effects.

In one embodiment the application opens a wireless communications channel with an external display device such as a high definition television HDTV with built in Wi Fi capabilities. As pixels are scanned by the device the application transmits pixel data to the HDTV to be displayed on the display of the HDTV while the scan is in process It will be appreciated that the external display device may be any display device capable of receiving pixel data through a wireless communications channel established by the device . The external display device could be a computer monitor a tablet computer such as an Apple iPad an HDTV or some other type of display device.

The system also includes input devices a graphics processor and a display i.e. a LCD liquid crystal display LED light emitting diode or the like. User input may be received from the input devices e.g. keyboard mouse touchpad microphone and the like. In one embodiment the graphics processor may include a plurality of shader modules a rasterization module etc. Each of the foregoing modules may even be situated on a single semiconductor platform to form a graphics processing unit GPU .

In the present description a single semiconductor platform may refer to a sole unitary semiconductor based integrated circuit or chip. It should be noted that the term single semiconductor platform may also refer to multi chip modules with increased connectivity which simulate on chip operation and make substantial improvements over utilizing a conventional central processing unit CPU and bus implementation. Of course the various modules may also be situated separately or in various combinations of semiconductor platforms per the desires of the user.

The system may also include a secondary storage . The secondary storage includes for example a hard disk drive and or a removable storage drive representing a floppy disk drive a magnetic tape drive a compact disk drive digital versatile disk UM drive recording device universal serial bus USB flash memory. The removable storage drive reads from and or writes to a removable storage unit in a well known manner.

Computer programs or computer control logic algorithms may be stored in the main memory and or the secondary storage . Such computer programs when executed enable the system to perform various functions. The memory the storage and or any other storage are possible examples of computer readable media.

In one embodiment the architecture and or functionality of the various previous figures may be implemented in the context of the central processor the graphics processor an integrated circuit not shown that is capable of at least a portion of the capabilities of both the central processor and the graphics processor a chipset i.e. a group of integrated circuits designed to work and sold as a unit for performing related functions etc. and or any other integrated circuit for that matter.

Still yet the architecture and or functionality of the various previous figures may be implemented in the context of a general computer system a circuit board system a game console system dedicated for entertainment purposes an application specific system and or any other desired system. For example the system may take the form of various devices including but not limited to a personal digital assistant PDA device a mobile phone device etc.

Further while not shown the system may be coupled to a network e.g. a telecommunications network local area network LAN wireless network wide area network WAN such as the Internet peer to peer network cable network or the like for communication purposes.

It will be appreciated that the application and driver may be executed by the CPU and that the hardware units such as the array of CCD sensors and the position sensor may be connected to the communications bus and in communication with the CPU there through. In one embodiment the application may be at least partially implemented as one or more threads executing on the graphics processor . For example a plurality of threads each thread corresponding to a particular sensor of the array of CCD sensors may be executed in the graphics processor to generate pixel data for the digital image. The pixel data may be stored in a frame buffer in memory until scanning is complete at which point the graphics processor generates the digital image for storage in memory .

In one embodiment the PPU includes an input output unit configured to transmit and receive communications i.e. commands data etc. from a central processing unit CPU not shown over the system bus . The I O unit may implement a Peripheral Component Interconnect Express PCIe interface for communications over a PCIe bus. In alternative embodiments the I O unit may implement other types of well known bus interfaces.

The PPU also includes a host interface unit that decodes the commands and transmits the commands to the grid management unit or other units of the PPU e.g. memory interface as the commands may specify. The host interface unit is configured to route communications between and among the various logical units of the PPU .

In one embodiment a program encoded as a command stream is written to a buffer by the CPU. The buffer is a region in memory e.g. memory or system memory that is accessible i.e. read write by both the CPU and the PPU . The CPU writes the command stream to the buffer and then transmits a pointer to the start of the command stream to the PPU . The host interface unit provides the grid management unit OMIT with pointers to one or more streams. The GMU selects one or more streams and is configured to organize the selected streams as a pool of pending grids. The pool of pending grids may include new grids that have not yet been selected for execution and grids that have been partially executed and have been suspended.

A work distribution unit that is coupled between the GMU and the SMs manages a pool of active grids selecting and dispatching active grids for execution by the SMs . Pending grids are transferred to the active grid pool by the GMU when a pending grid is eligible to execute i.e. has no unresolved data dependencies. An active grid is transferred to the pending pool when execution of the active grid is blocked by a dependency. When execution of a grid is completed the grid is removed from the active grid pool by the work distribution unit . In addition to receiving grids from the host interface unit and the work distribution unit the GMU also receives grids that are dynamically generated by the SMs during execution of a grid. These dynamically generated grids join the other pending grids in the pending grid pool.

In one embodiment the CPU executes a driver kernel that implements an application programming interface API that enables one or more applications executing on the CPU to schedule operations for execution on the PPU . An application may include instructions i.e. API calls that cause the driver kernel to generate one or more grids for execution. In one embodiment the PPU implements a SIMD Single Instruction Multiple Data architecture where each thread block i.e. warp in a grid is concurrently executed on a different data set by different threads in the thread block. The driver kernel defines thread blocks that are comprised of k related threads such that threads in the same thread block may exchange data through shared memory. In one embodiment a thread block comprises 32 related threads and a grid is an array of one or more thread blocks that execute the same stream and the different thread blocks may exchange data through global memory.

In one embodiment the PPU comprises X SMs X . For example the PPU may include 15 distinct SMs . Each SM is multi threaded and configured to execute a plurality of threads e.g. 32 threads from a particular thread block concurrently. Each of the SMs is connected to a level two L2 cache via a crossbar or other type of interconnect network . The L2 cache is connected to one or more memory interfaces Memory interfaces implement 16 32 64 128 bit data buses or the like for high speed data transfer. In one embodiment the PPU comprises U memory interfaces U where each memory interface U is connected to a corresponding memory device U . For example PHI may be connected to up to 6 memory devices such as graphics double data rate version 5 synchronous dynamic random access memory GDDR5 SDRAM 

In one embodiment the PPU implements a multi level memory hierarchy. The memory is located off chip in SDRAM coupled to the PTV . Data from the memory may be fetched and stored in the L2 cache which is located on chip and is shared between the various SMs In one embodiment each of the SMs also implements an L1 cache. The L1 cache is private memory that is dedicated to a particular SM . Each of the L1 caches is coupled to the shared L2 cache . Data from the L2 cache may be fetched and stored in each of the L1 caches for processing in the functional units of the SMs .

In one embodiment the PPU comprises a graphics processing unit GPU . The PRI is configured to receive commands that specify shader programs for processing graphics data. Graphics data may be defined as a set of primitives such as points lines triangles quads triangle strips and the like. Typically a primitive includes data that specifies a number of vertices for the primitive e.g. in a model space coordinate system as well as attributes associated with each vertex of the primitive. The PPU can be configured to process the graphics primitives to generate a frame buffer i.e. pixel data for each of the pixels of the display . The driver kernel implements a graphics processing pipeline such as the graphics processing pipeline defined by the OpenGL API.

An application writes model data for a scene i.e. a collection of vertices and attributes to memory. The model data defines each of the objects that may be visible on a display. The application then makes an API call to the driver kernel that requests the model data to be rendered and displayed. The driver kernel reads the model data and writes commands to the buffer to perform one or more operations to process the model data. The commands may encode different shader programs including one or more of a vertex shader hull shader geometry shader pixel shader etc. For example the GMU may configure one or more SMs to execute a vertex shader program that processes a number of vertices defined by the model data. In one embodiment the GMU may configure different SMs to execute different shader programs concurrently. For example a first subset of SMs may be configured to execute a vertex shader program while a second subset of SMs may be configured to execute a pixel shader program. The first subset of SMs processes vertex data to produce processed vertex data and writes the processed vertex data to the L2 cache and or the memory . After the processed vertex data is rasterized i.e. transformed from three dimensional data into two dimensional data in screen space to produce fragment data the second subset of SMs executes a pixel shader to produce processed fragment data which is then blended with other processed fragment data and written to the frame buffer in memory . The vertex shader program and pixel shader program may execute concurrently processing different data from the same scene in a pipelined fashion until all of the model data for the scene has been rendered to the frame buffer. Then the contents of the frame buffer are transmitted to a display controller for display on a display device.

The PPU may be included in a desktop computer a laptop computer a tablet computer a smart phone e.g. a wireless hand held device personal digital assistant PDA a digital camera a hand held electronic device and the like. In one embodiment the PPU is embodied on a single semiconductor substrate. In another embodiment the PPU is included in a system on a chip SoC along with one or more other logic units such as a reduced instruction set computer RISC CPU a memory management unit MMU a digital to analog converter DAC and the like. For example PPU may be included in system of .

In one embodiment the PPU may he included on a graphics card that includes one or more memory devices such as GDDR5 SDRAM. The graphics card may be configured to interface with a PCIe slot on a motherboard of a desktop computer that includes e.g. a northbridge chipset and a southbridge chipset. In yet another embodiment the PPU may he an integrated graphics processing unit iGPU included in the chipset i.e. Northbridge of the motherboard.

As described above the work distribution unit dispatches active grids for execution on one or more SMs of the PPU . The scheduler unit receives the grids from the work distribution unit and manages instruction scheduling for one or more thread blocks of each active grid. The scheduler unit schedules threads for execution in groups of parallel threads where each group is called a warp. In one embodiment each warp includes 32 threads. The scheduler unit may manage a plurality of different thread blocks allocating the thread blocks to warps for execution and then scheduling instructions from the plurality of different warps on the various functional units i.e. cores DPUs SFUs and LSUs during each clock cycle.

In one embodiment each scheduler unit includes one or more instruction dispatch units . Each dispatch unit is configured to transmit instructions to one or more of the functional units. In the embodiment shown in the scheduler unit includes two dispatch units that enable two different instructions from the same warp to be dispatched during each clock cycle. In alternative embodiments each scheduler unit may include a single dispatch unit or additional dispatch units .

Each SM includes a register file that provides a set of registers for the functional units of the SM . In one embodiment the register file is divided between each of the functional units such that each functional unit is allocated a dedicated portion of the register file . In another embodiment the register file is divided between the different warps being executed by the SM . The register file provides temporary storage for operands connected to the data paths of the functional units.

Each SM comprises L processing cores . In one embodiment the SM includes a large number e.g. 192 etc. of distinct processing cores . Each core is a fully pipelined single precision processing unit that includes a floating point arithmetic logic unit and an integer arithmetic logic unit. In one embodiment the floating point arithmetic logic units implement the IEEE 754 2008 standard for floating point arithmetic. Each SM also comprises M DPUs that implement double precision floating point arithmetic N SFUs that perform special functions e.g. copy rectangle pixel blending operations and the like and P LSUs that implement load and store operations between the shared memory L1 cache and the register file . In one embodiment the SM includes 64 DPUs 32 SFUs and 32 LSUs .

Each SM includes an interconnect network that connects each of the functional units to the register file and the shared memory L1 cache . In one embodiment the interconnect network is a crossbar that can be configured to connect any of the functional units to any of the registers in the register file or the memory locations in shared memory L1 cache .

In one embodiment the SM is implemented within a GPU. In such an embodiment the SM comprises J texture units . The texture units are configured to load texture maps i.e. a 2D array of texels from the memory and sample the texture maps to produce sampled texture values for use in shade programs. The texture units implement texture operations such as anti aliasing operations using mip maps i.e. texture maps of varying levels of detail . In one embodiment the SM includes 16 texture units .

The PPU described above may be configured to perform highly parallel computations much faster than conventional CPUs. Parallel computing has advantages in graphics processing data compression biometrics stream processing algorithms and the like.

In one embodiment PPU may be implemented within system and configured to execute at least a portion of application . A plurality of threads may be generated and executed on PPU to generate pixel data for the digital image. The threads may be executed by one or more SMs of PPU .

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. Thus the breadth and scope of a preferred embodiment should not be limited by any of the above described exemplary embodiments but should be defined only in accordance with the following claims and their equivalents.

