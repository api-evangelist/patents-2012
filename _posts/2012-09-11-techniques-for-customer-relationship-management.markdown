---

title: Techniques for customer relationship management
abstract: Techniques for improving customer relationship management are disclosed. The techniques may be realized via a call processing system that may efficiently rout an incoming call to an agent of a call center. Also, the call processing system may provision a telephone number to a web-based help desk call center. Further, the call processing system may include a communication framework enabling a communication between a plurality of browser windows and a local storage medium.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09172807&OS=09172807&RS=09172807
owner: Zendesk, Inc.
number: 09172807
owner_city: San Francisco
owner_country: US
publication_date: 20120911
---
This patent application claims priority to U.S. Provisional Patent Application No. 61 533 252 filed Sep. 11 2011 which is hereby incorporated by reference herein in its entirety.

The present disclosure relates generally to a call processing system and more particularly to techniques for a call processing system to improve management of customer relationship.

Call centers such as Automatic Call Distribution or ACD systems are employed by many enterprises to service customer. A typical call center includes a switch and or server to receive and route incoming packet switched and or circuit switched calls and one or more resources such as human agents and automated resources e.g. Interactive Voice Response IVR units to service the incoming calls. Call centers rely upon expensive dedicated hardware and infrastructure and require agents to be present at the call center to answer calls. Also call centers distribute calls whether inbound or outbound for servicing to any suitable resource according to predefined criteria. In many existing systems the criteria for servicing the calls from the moment that the call center becomes aware of the contact until the call is connected to an agent are customer specifiable i.e. programmable by the operator of the contact center via a capability called vectoring. Normally in present day ACDs when the ACD system s controller detects that an agent has become available to handle a contact the controller identifies all predefined contact handling skills of the agent usually in some order of priority and delivers to the agent the highest priority oldest call that matches the agent s highest priority skill. Agents with a higher skill are normally preferred over agents with lower skill levels when assigning an agent to a call. When agents have multiple skills the controller is more likely to select a call for which the agent has a high skill level over a contact for which the agent has a lesser skill level. Generally the only condition that results in a call not being delivered to an available agent is that there are no contacts waiting to be handled.

Acquisition and installation of call center systems require dedicated expensive hardware full time IT management oversight and knowledge of telecommunication infrastructure. Implementation of such call center systems may take weeks or months. One current system uses a telephone circuit switch to receive calls and signaling into a network. The telephone circuit switch processes the called number to generate and transmit a first query to a Service Control Point SCP . The SCP processes the first query to generate a second query to a routing processor at a call center. The routing processor at the call center responds to the SCP with routing information and the SCP responds to the telephone circuit switch with the routing information. The telephone circuit switch then extends the call to another telephone circuit switch connected to the call center based on the routing information. This other telephone circuit switch then transfers the call to the call center over a dedicated Time Division Multiplexing TDM line such as an Integrated Services Digital Network ISDN connection. This transfer includes a transfer of the called number. Routing equipment at the call center must process the called number to internally route the call to the destination within the call center. This system is deficient because it forces the routing equipment at the call center to handle dialed number processing. It also does not allow the efficient utilization of packet based transport technologies.

During a call an agent may have many browser windows open. Normally communication between browser windows may be achieved via window handles a reference to a child browser window held by a parent browser window. For example when a parent browser window opens a child browser window the parent browser window stores a reference of the child browser window and may use different functions to communicate with the child browser. However if the main window is closed or reloaded the reference is lost and thus communication with the child browser window is lost.

In view of the foregoing it may be understood that there may be significant problems and shortcomings associated with current call processing system technologies.

Techniques for a call processing system to improve management of customer relationship are disclosed. In one particular embodiment the techniques may be realized as a system for communicating between browsers windows. The system may include a main browser window opened in response to a call and a client browser window opened in response to the main browser window. The system may also include a communication framework in communication with the main browser window and the client browser window and a local storage medium in communication with the communication framework configured to store a key value reference from at least the client browser window.

In another embodiment the techniques may be realized as a method for routing a call. The method may include receiving via a call processing system a call from a user device via a communication network and determining via the call processing system a group of available agents to answer the call. The method may also include determining via the call processing system an agent from the group of available agents that has longest idle time and routing via the call processing system the call to the agent that has the longest idle time.

In other embodiments the techniques may be realized as a method for provisioning a telephone number. The method may include receiving via a call processing system a request to create a call center and assigning via the call processing system a telephone number to the call center. The method may also include configuring via the call processing system one or more parameters of the call center and receiving via the call processing system calls via the telephone number of the call center.

The present disclosure will now be described in more detail with reference to particular embodiments thereof as shown in the accompanying drawings. While the present disclosure is described below with reference to particular embodiments it should be understood that the present disclosure is not limited thereto. Those of ordinary skill in the art having access to the teachings herein will recognize additional implementations modifications and embodiments as well as other fields of use which are within the scope of the present disclosure as described herein and with respect to which the present disclosure may be of significant utility.

Referring to there is shown a customer relationship management system in accordance with an embodiment of the present disclosure. The customer relationship management system may include a plurality of user device 1 N communicate with an agent device via a call processing system an organization and a communication network . For example a user may use the user device to place a call to the calling processing system and or the organization via the communication network . The call processing system and or the organization may route the call to an agent device . The user may inquire services or require assistance provided by the call processing system and or the organization . The organization may include a customer relationship management database that may store customer information. The call processing system integrates on demand help desk software and customer support portal solution based on Internet e.g. Web 2.0 technologies and design philosophies in order to process calls placed by the plurality of user devices 1 N . The call processing system provides a seamless integration of the back end helpdesk software as a service SaaS to the organization s online customer facing web presence include for example but not limited to email ticket integration online forums rich site summary RSS and widgets. Also the call processing system may leverage Internet e.g. Web 2.0 technologies on the backend such as tag based categorization throughout the call processing system .

Although the call processing system is shown as an independent system the call processing system may also be alternatively located entirely or partially on another system e.g. the organization or the agent device or a secondary system. This secondary system may include a database server or the like that connects to the communication network and provides the functionality described herein.

The user devices may be a mobile user device a computer a personal computer a laptop a cellular communication device a workstation a mobile device a phone a television a handheld PC a personal digital assistant PDA a thin system a fat system a network appliance an Internet browser or other any other device that may be in communication with the call processing system via the communication network . Other user devices may be one or more intermediary devices that may communicate with the communication network such as a transmitter receiver router modem or a set top box. The user devices may be coupled to the call processing system via a wired link. In another exemplary embodiment the user devices may be coupled to the call processing system via a wireless link.

The communication network may couple the plurality of user devices 1 N to the call processing system and or the organization . The communication network may be a wireless network a wired network or any combination of wireless network and wired network. For example the communication network may include one or more of a fiber optics network a passive optical network a cable network an Internet network a satellite network e.g. operating in Band C Band Ku or Band Ka a wireless LAN a Global System for Mobile Communication GSM a Personal Communication Service PCS a long term evolution LTE a Personal Area Network PAN D AMPS Wi Fi Fixed Wireless Data IEEE 802.11a 802.11b 802.15.1 802.11n and 802.11g or any other wired or wireless network for transmitting and receiving a data signal. In addition the communication network may include without limitation telephone line fiber optics IEEE Ethernet 802.3 wide area network WAN local area network LAN or global network such as the Internet. The communication network may support an Internet network a wireless communication network a cellular network or the like or any combination thereof.

The communication network may further include one or any number of the exemplary types of networks mentioned above operating as a stand alone network or in cooperation with each other. Although the communication network is depicted as one network it should be appreciated that according to one or more embodiments the communication network may comprise a plurality of interconnected networks such as for example a service provider network the Internet a broadcaster s network a cable television network corporate networks and home networks.

The call processing system may include one or more servers. For example the call processing system may include a UNIX based server Windows 2000 Server Microsoft IIS server Apache HTTP server API server Java sever Java Servlet API server ASP server PHP server HTTP server Mac OS X server Oracle server IP server or other independent server to support operations of a client. Also the call processing system may include one or more Internet Protocol IP network server or public switch telephone network PSTN server. The call processing system may include one or more databases for storing a network model topology and network policies based at least in part on the network model topology.

The organization may include one or more servers to provide service to the plurality of user devices 1 N via the communication network . For example the organization may include a UNIX based server Windows 2000 Server Microsoft IIS server Apache HTTP server API server Java sever Java Servlet API server ASP server PHP server HTTP server Mac OS X server Oracle server IP server or other independent server to provide one or more contents to the plurality of user devices 1 N . Also the organization may include one or more Internet Protocol IP network server or public switch telephone network PSTN server.

The organization may include one or more storage devices including without limitation paper card storage punched card tape storage paper tape magnetic tape disk storage gramophone record floppy disk hard disk ZIP disk holographic molecular memory. The one or more storage devices may also include without limitation optical disc CD ROM CD R CD RW DVD DVD R DVD RW DVD R DVD RW DVD RAM Blu ray Minidisc HVD and Phase change Dual storage device. The one or more storage devices may further include without limitation magnetic bubble memory magnetic drum core memory core rope memory thin film memory twistor memory flash memory memory card semiconductor memory solid state semiconductor memory or any other like mobile storage devices.

The agent devices may be a mobile user device a computer a personal computer a laptop a cellular communication device a workstation a mobile device a phone a television a handheld PC a personal digital assistant PDA a thin system a fat system a network appliance an Internet browser or other any other device that may be in communication with the call processing system . Other agent devices may be one or more intermediary devices that may communicate with the call processing system such as a transmitter receiver router modem or a set top box. The agent devices may be coupled to the call processing system via a wired link. In another exemplary embodiment the user devices may be coupled to the call processing system via a wireless link.

The customer relationship management database may include one or more storage devices including without limitation paper card storage punched card tape storage paper tape magnetic tape disk storage gramophone record floppy disk hard disk ZIP disk holographic molecular memory. The one or more storage devices may also include without limitation optical disc CD ROM CD R CD RW DVD DVD R DVD RW DVD R DVD RW DVD RAM Blu ray Minidisc HVD and Phase change Dual storage device. The one or more storage devices may further include without limitation magnetic bubble memory magnetic drum core memory core rope memory thin film memory twistor memory flash memory memory card semiconductor memory solid state semiconductor memory or any other like mobile storage devices. The customer relationship management database may include customer information including but not limited to name address telephone number email address services provided past inquires occupation income and or other information associated with the customer.

Referring to there are shown functional block diagram of a user device and a call processing system in accordance with an embodiment of the present disclosure. provide functional block diagram illustrations of general purpose computer hardware platforms. illustrates a network or host computer platform of the call processing system as may typically be used to implement a server or other network element e.g. a web server . The call processing system may include a communication port in communication with the communication network . Also the call processing system may include an Input Output I O port a computer processing unit CPU or processor a read only memory and a random access memory . Various components of the call processing system may be communicatively coupled to each other via a communication bus . depicts a computer with user interface elements as may be used to implement a personal computer PC or other type of work station or terminal device of a user device although the computer of may also act as a server if appropriately programmed. The user device may include a communication port in communication with the communication network . Also the user device may include an Input Output I O port a computer processing unit CPU or processor a read only memory ROM and a random access memory RAM . Various components of the user device may be communicatively coupled to each other via a communication bus . Those skilled in the art are familiar with the structure programming and general operation of such computer equipment and as a result the drawings should be self explanatory.

The hardware elements operating systems and programming languages of such computers are conventional in nature and it is presumed that those skilled in the art are adequately familiar therewith. Of course the server functions may be implemented in a distributed fashion on a number of similar platforms to distribute the processing load.

Hence aspects of the disclosed techniques can be executed on a network element such as a server. Program aspects of the technology may be thought of as products or articles of manufacture typically in the form of executable code and or associated data that is carried on or embodied in a type of machine readable medium. Storage type media include any or all of the memory of the mobile stations computers processors or the like or associated modules thereof such as various semiconductor memories tape drives disk drives and the like which may provide storage at any time for the software programming. All or portions of the software may at times be communicated through the Internet or various other telecommunication networks. Such communications for example may enable loading of the software from one computer or processor into another computer or processor. For example software and or instructions may be communicated from a server to a client. Similarly software for a server may be loaded into the hardware platform or platforms selected to perform that server function. Thus another type of media that may bear the software elements includes optical electrical and electromagnetic waves such as used across physical interfaces between local devices through wired and optical landline networks and over various air links. The physical elements that carry such waves such as wired or wireless links optical links or the like also may be considered as media bearing the software. As used herein unless restricted to tangible storage media terms such as computer or machine readable non transitory medium refer to any medium that participates in providing instructions to a processor for execution.

Hence a machine readable non transitory medium may take many forms including but not limited to a tangible storage medium a carrier wave medium or physical transmission medium. Non volatile storage media include for example optical or magnetic disks such as any of the storage devices in any computer s or the like such as may be used to implement the data aggregator the customer communication system etc. shown in the drawings. Volatile storage media include dynamic memory such as main memory of such a computer platform. Tangible transmission media include coaxial cables copper wire and fiber optics including the wires that comprise a bus within a computer system. Carrier wave transmission media can take the form of electric or electromagnetic signals or acoustic or light waves such as those generated during radio frequency RF and infrared IR data communications. Common forms of computer readable media therefore include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM DVD or DVD ROM any other optical medium punch cards paper tape any other physical storage medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave transporting data or instructions cables or links transporting such a carrier wave or any other medium from which a computer can read programming code and or data. Many of these forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to a processor for execution.

Referring to there is shown a publish subscribe communication framework of a call processing system in accordance with an embodiment of the present disclosure. The call processing system may include a publish subscribe communication framework . The publish subscribe communication framework may communicate with a main browser window and a client browser window via the publish subscribe communication framework application programming interface API for an event driving communications. The publish subscribe communication framework may be communicatively coupled to a local storage area via a local storage application programming interface API . The publish subscribe communication framework of the call processing system may use local storage events to transmit information between a plurality of browser windows. The publish subscribe communication framework of the call processing system may listen and or trigger local storage events. For example during a call to the call processing system an agent answering the call may have a plurality of browser windows e.g. the main window browser and the client window browser open in order to answer the call. The publish subscribe communication framework of the call processing system may store a key value reference for data to the local storage area of the user device the processing system or a computing device of the agent during browser window or webpage reloads. The publish subscribe communication framework may cause the local storage area to trigger events when data are written to the local storage area . The triggered events may be broadcasted to all browser windows that may be subject to normal same origin constraints.

In an exemplary embodiment hypertext markup language HTML local storage API e.g. HTML5 may be used to communicate between the publish subscribe communication framework and the local storage area . Also HTML web storage may be used in storing data in the local storage area . The HTML web storage may be based on a key value pair storage framework that provides behavior similar to cookies but with larger storage capacity and improved API. Data in the local storage area may be stored based on a named key and retrieved with the same named key. The named key may be a string. The data stored in the local storage area may be any type data supported by JavaScript including strings Booleans integers or floats. However the data may be stored as a string. When data are stored in formats other than string functions e.g. parseInt or parseFloat may be used to coerce the retrieved data into the expected JavaScript data type.

Calling setItem with a named key that already exists will silently overwrite the previous value. Calling getItem with a non existent key will return null rather than throw an exception. Like other JavaScript objects the localStorage object may be treated as an associative array. Instead of using the getItem and setItem methods square brackets may be used. For example this snippet of code 

The value for an assigned named key may be removed and the entire local storage area may be cleared e.g. deleting all keys and values at once .

However calling removeltem may not affect a non existent key. Also a total number of values in the local storage area may be obtained and iterate through all of the keys by index to get the name of each key .

If a key function is called of a data having an index that is not between 0 length 1 the function may return null.

To keep track of when the local storage area changes storage event may be trapped. The storage event may be triggered on the window object when setItem removeItem or clear functions are called and the local storage area is changed. For example if an item is set to its existing value or call clear when there are no named keys the storage event will not trigger because nothing changed in the local storage area .

The storage event may be supported everywhere the localStorage object is supported including Internet Explorer 8. For example the Internet Explorer 8 does not support the W3C standard addEventListener. Therefore in order to trigger the storage event event mechanism that a browser supports may be checked. In an exemplary embodiment jQuery function or some other JavaScript library may be used to register storage event handlers and or storage events.

The handle storage callback function may be called with a StorageEvent object except in Internet Explorer where the storage event object is stored in window.event.

The call processing system may perform intelligent switching between voice over Internet Protocol VoIP and public switched telephone network PSTN availability for call center support agents. Also the call processing system may enable support agents to accept phone calls either through a web based embedded phone client or devices associated with a PSTN telephone number. The call processing system may intelligently detect and prioritize VoIP availability through detection of agent presence at a window browser. The call processing system may determine that an agent is not available at a window browser and rout a call for the unavailable agent to a secondary PSTN telephone number and allowing the unavailable agent to continue accepting calls while not at the window browser e.g. primary place of work using a browser session for VoIP based communication . The call processing system allows for the use of low cost VoIP based communication for call sessions and the secondary PSTN telephone number improves agent availability e.g. physically unavailable or network outage .

At step a user may use a user device to place a call to the call processing system via the communication network . In an exemplary embodiment the user may use a telephone to call the call processing system .

At step the communication network may route the call from the user device to the call processing system . In an exemplary embodiment the communication network may include a PSTN that may route the call from the user device to the call processing system .

At step the call processing system may process the call. For example the call processing system may gather information based at least in part on the telephone number associated with the call. In an exemplary embodiment customer information may be stored in a customer relationship management database or the organization . The customer information may be indexed based on various characteristics of the customer. For example the customer information may be indexed based on telephone number name address email IP address or other characteristics of the customer. The call processing system may gather customer information from the customer relationship management database based at least in part on the telephone number of the call. The call processing system may attach the customer information to the call.

At step the call processing system may route the call to an available agent. For example the call processing system may verify whether agents are available. The call processing system may determine all available agents that may answer the call.

At step the call processing system determine whether the agents are available via a VoIP device e.g. browser window or a PSTN device e.g. telephone . For example the call processing system may determine whether an agent is available via VoIP by detecting whether the agent is present at a VoIP browser window. In an exemplary embodiment an agent may switch off the VoIP browser window and the call processing system may determine that the agent is not available at the VoIP device and may be available at a PSTN device. In another exemplary embodiment an agent may switch on the VoIP browser window and the call processing system may determine that the agent is available at the VoIP device.

At step the call processing system may select an agent from the group of available agents based at least in part on a characteristic of the agent. For example the call processing system may select an agent that may had been idle the longest from the group of available agents to handle the call. Also the call processing system may select an agent that may be most qualified from the group of available agents to handle the call. In another example the call processing system may select an agent that may have handled previous calls from the customer from the group of available agents to handle the call.

The system architecture of the call processing system may exhibit a modular architecture. The system architecture of the call processing system may include filters having zipping byte ranges chunked responses XSLT SSI and image resizing filter. Multiple SSI inclusions within a single page can be processed in parallel if they are handled by FastCGI or proxied servers. SSL and TLS SNI support.

The call processing system may include a Unicorn HTTP server for Rack applications designed to serve fast clients on low latency high bandwidth connections and take advantage of features in Unix Unix like kernels. While slow clients should only be served by placing a reverse proxy capable of fully buffering both the request and response in between Unicorn HTTP server and slow clients. The Unicorn HTTP server of the call processing system may be debugged with ease while eliminating nginx or Rack. The Unicorn HTTP server of the call processing system may reap and restart workers that die from broken applications. The call processing system may eliminate the need to manage multiple processes or ports. The call processing system may spawn and manage any number of worker processes that are selected to scale a backend. Load balancing may be performed entirely by the operating system kernel of the call processing system and thus requests may not pile up behind a busy worker process. The call processing system may support all Rack applications along with pre Rack versions of Ruby on Rails via a Rack wrapper. The call processing system may allow logrotate to rotate files automatically and quickly via rename by built in reopening of all log files via USR1 signal. The call processing system may take steps to ensure multi line log entries from one request to stay within the same file. The call processing system may allow nginx style binary upgrades without losing connections. The call processing system applications libraries and Ruby interpreter may be upgrade without dropping clients. The call processing system may be used with a copy on write friendly memory management to save memory by setting preload app to true . The call processing system may listen on multiple interfaces including UNIX sockets each worker process can also bind to a private port via the after fork hook for easy debugging.

The call processing system may decode chunked transfers on the fly thus allowing upload progress notification to be implemented as well as being able to tunnel arbitrary stream based protocols over HTTP. In another example the call processing system may include a redis store that is an open source advanced key value store. The call processing system may also include a resque library that is a Redis backed Ruby library for creating background jobs placing them on multiple queues and processing them later. The resque library may allow for creating background jobs placing those jobs on multiple queues and processing them later. Background jobs can be any Ruby class or module that responds to perform.

A variety of other technologies including a special purpose computer a computer system including a microcomputer mini computer or mainframe for example a programmed microprocessor a micro controller a peripheral integrated circuit element a CSIC Customer Specific Integrated Circuit or ASIC Application Specific Integrated Circuit or other integrated circuit a logic circuit a digital signal processor a programmable logic device such as FPGA PLD PLA or PAL or any other device or arrangement of devices that is capable of implementing the steps of the process of the present disclosure.

It is appreciated that in order to practice the method of the present disclosure as described above it is not necessary that the processors and or the memories of the processing machine be physically located in the same geographical place. That is each of the processors and the memories used in the present disclosure may be located in geographically distinct locations and coupled so as to communicate in any suitable manner. Additionally it is appreciated that each of the processor and or the memory may be composed of different physical pieces of equipment. Accordingly it is not necessary that the processor be one single piece of equipment in one location and that the memory be another single piece of equipment in another location. That is it is contemplated that the processor may be two pieces of equipment in two different physical locations. The two distinct pieces of equipment may be connected in any suitable manner. Additionally the memory may include two or more portions of memory in two or more physical locations.

In the system and method of the present disclosure a variety of user interfaces may be utilized to allow a user to interface with the processing machine or machines that are used to implement the present disclosure. As used herein a user interface includes any hardware software or combination of hardware and software used by the processing machine that allows a user to interact with the processing machine. A user interface may be in the form of a dialogue screen for example. A user interface may also include any of a mouse touch screen keyboard voice reader voice recognizer dialogue screen menu box list checkbox toggle switch a pushbutton or any other device that allows a user to receive information regarding the operation of the processing machine as it processes a set of instructions and or provide the processing machine with information. Accordingly the user interface is any device that provides communication between a user and a processing machine. The information provided by the user to the processing machine through the user interface may be in the form of a command a selection of data or some other input for example.

The present disclosure is not to be limited in scope by the specific embodiments described herein. Indeed other various embodiments of and modifications to the present disclosure in addition to those described herein will be apparent to those of ordinary skill in the art from the foregoing description and accompanying drawings. Thus such other embodiments and modifications are intended to fall within the scope of the present disclosure. Further although the present disclosure has been described herein in the context of at least one particular implementation in at least one particular environment for at least one particular purpose those of ordinary skill in the art will recognize that its usefulness is not limited thereto and that the present disclosure may be beneficially implemented in any number of environments for any number of purposes. Accordingly the claims set forth below should be construed in view of the full breadth and spirit of the present disclosure as described herein.

