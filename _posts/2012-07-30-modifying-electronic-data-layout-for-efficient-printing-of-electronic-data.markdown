---

title: Modifying electronic data layout for efficient printing of electronic data
abstract: A system and a method are disclosed for modifying a layout associated with data to reduce the amount of paper used when generating a paper copy of the data. Responsive to receiving an input to modify a layout associated with data presented on a computing device for printing, the layout is modified. In one embodiment, a type associated with the data is determined, and a modified layout is generated based on the type. For example, the layout is differently modified if the data is an electronic document, a spreadsheet, a Web page or another type of data. In one embodiment, the modified layout is displayed on a display and the data and the modified layout are transmitted to a printer responsive to an input confirming the modified layout.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08937744&OS=08937744&RS=08937744
owner: PrintEco, Inc.
number: 08937744
owner_city: Chicago
owner_country: US
publication_date: 20120730
---
This application claims priority benefit as a utility of U.S. Provisional Application No. 61 513 573 filed on Jul. 30 2011 which is incorporated herein by reference.

The present invention generally relates to the field of document printing and more specifically to modifying data layout to reduce the amount of paper used when printing a document.

Frequently users view data on a computing device and print a paper representation of the viewed data. This allows the users to more easily review and edit the viewed data using the paper representation or to more easily transport the paper representation of the viewed data. However printing a paper representation of viewed data also referred to as a document consumes additional resources. For example costs are incurred in obtaining the paper used for the documents and subsequently disposing of the printed documents. Additionally the printer used to print a document consumes power while printing and the acquisition and use of ink cartridges introduces additional costs. Further printing documents causes emission of greenhouse gases so printing of large documents by various entities creates a negative environmental impact.

In many cases a portion of a printed document is also wasteful due to the formatting of the viewed data. For example a printed document may include mostly blank pages or may include advertisements of little interest to a user. Additionally certain data formats suited for viewing on a computing device are poorly suited for generating documents. For example formatting of a spreadsheet may enhance its presentation on a computing device but significantly increase the number of pages needed to generate a paper copy of the spreadsheet. As another example printing an email thread frequently prints a complete email thread rather than the email messages of interest. Recent studies have indicated that an average of 17 of printing in enterprise environments is devoted to printing pages a user does not need.

An object of the invention is to optimize the amount of consumables spent on generating printed versions of electronic information through optimization of electronic information prior to printing the content

An additional object of the invention is to remove low value content from printouts. A feature of the invention is that in one embodiment the process assigns a value to information being presented and removes low value content. An advantage of the system is that it assists end users in selecting unnecessary content.

Another object of the invention is to decrease the number of pages in a printout by optimizing formatting choices made by the user. In one embodiment a feature of the invention is that the process includes changing document formatting user choices to cut down on the number of pages generated. An advantage of the system is that it can eliminate unnecessary pages while preserving overall document fidelity.

A further object of the invention is to optimize printing while maintaining the same workflow for end users. A feature of one embodiment of the invention is that the printing optimization is invoked from within the same application as when printing is performed without optimization. An advantage of the invention is that the end users do not have to learn new optimization software and can invoke features seamlessly within familiar applications.

A yet further objective of the invention is to provide a preview of the optimized version of the printed document within the client application being used to generate the content. In one embodiment the system comprises a plug in software module which adds printing optimization features that are tightly coupled with the content application hosting the plug in software. An advantage of the invention is that the printing optimization is seamlessly integrated with the client application.

Another object of the invention is to interact with user generated content in its native format. A feature of the system in one embodiment is that the printing optimization software communicates directly with the content generating application and obtains the user input directly from the application. An advantage of the invention is that the printing optimization process does not require conversion and re detection of the content type during the optimization process.

One embodiment of a disclosed system and method modifies a layout associated with data to reduce the amount of paper used when generating a paper copy of the data. Responsive to receiving an input to modify a layout associated with data presented on a computing device for printing the layout is modified. In one embodiment a type associated with the data is determined and a modified layout is generated based on the type. For example if the data is an electronic document one or more margins are modified to one or more predefined values trailing whitespace is removed and font size is modified to minimize the number of physical pages used to print the data. As another example if the data is a spreadsheet one or more margins are modified to one or more predefined values font size is reduced to a predetermined size a page width is set to a specified value and the orientation of the spreadsheet is modified to reduce the number of physical pages used to print the data. In yet another example if the data is a Web page elements of the Web page are analyzed to identify the core content elements of the Web page having specified attributes are removed and a background color associated with the Web page is set to a specified value. In one embodiment the modified layout is displayed on a display device. Responsive to receiving an input confirming the modified layout the data and the modified layout are transmitted to a printer which generates a paper representation of the data according to the modified layout. In an embodiment responsive to receiving an input rejecting the modified layout the original layout associated with the data is restored.

The features and advantages described in the specification are not all inclusive and in particular many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings specification and any claims. Moreover it should be noted that the language used in the specification has been principally selected for readability and instructional purposes and may not have been selected to delineate or circumscribe the inventive subject matter.

The Figures FIGS. and the following description relate to preferred embodiments of the present invention by way of illustration only. It should be noted that from the following discussion alternative embodiments of the structures and methods disclosed herein will be readily recognized as viable alternatives that may be employed without departing from the described principles.

Reference will now be made in detail to several embodiments examples of which are illustrated in the accompanying figures. It is noted that wherever practicable similar or like reference numbers may be used in the figures and may indicate similar or like functionality. The figures depict embodiments of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein.

The computing device is any device with data processing and data communication capabilities. Examples of a computing device include a smartphone a tablet computer a netbook computer a laptop computer a desktop computer or any other suitable device known to one skilled in the art. In one embodiment the computing device exchanges data with the server via the network . The computing device communicates data with a printer via the network or via a direct communication channel. A printer generates a physical representation of the data received from the computing device . Further the computing device includes instructions that when executed enable user interaction with data stored by the computing device or accessible via the network from a server another computing device or another suitable component. The computing device is further described below in conjunction with .

The server is coupled to the network and exchanges data with the computing device via the network . The server is one or more computing devices having data processing and data communication capabilities. For example the server provides data such as a Web page audio content video content application data or other data to the computing device via the network . In one embodiment the server also receives data from the computing device and or a printer via the network . For example the server receives from the computing device data describing the number of pages printed from the computing device data describing the financial cost associated with the number of pages printed from the computing device and or data describing the carbon dioxide cost associated with the number of pages printed from the computing device . In one embodiment the server pushes data to the computing device via the network .

A printer is a device that receives electronic data and a layout associated with the electronic data and generates a paper representation of the electronic data. For example the printer applies ink to paper or another substrate as specified by the layout to replicate the electronic data on the paper or other substrate. For example the layout identifies margins where the electronic data stops a size associated with portions of the electronic data or other information describing the presentation of the electronic data. illustrates a printer A coupled to the network and receiving data from the computing device via the network as well as a printer B directly coupled to the computing device and receiving data directly from the computing device . In another embodiment a single printer is directly or indirectly coupled to the computing device . In additional embodiments a greater number of printers may be coupled to the computing device .

The network is a conventional type for data transmission. In various embodiments the network is a wired network a wireless network or a combination of wireless and wired networks. The network may have any number of configurations such as a star configuration token ring configuration or other configurations known to those skilled in the art. Furthermore the network may comprise a local area network LAN a wide area network WAN e.g. the Internet and or any other interconnected data path across which multiple devices may communicate. In yet another embodiment the network may be a peer to peer network. The network may also be coupled to or include portions of a telecommunications network for sending data in a variety of different communication protocols such as Transport Control Protocol Internet Protocol TCP IP . For example the network may transmit data using one or more of a Global System for Mobile GSM communication system Code Division Multiple Access CDMA system Universal Mobile Telecommunications System UMTS General Packet Radio Service GPRS third generation 3G or greater networks fourth generation 4G or greater networks High Speed Download Packet Access HSDPA Long Term Evolution LTE Worldwide Interoperability for Microwave Access WiMax an IEEE 802.11 compliant network an Ethernet network or any other suitable communication system. In another embodiment the network includes BLUETOOTH communication networks or a cellular communications network for sending and receiving data. In one or more embodiments the network communicates data such as short messaging service SMS messages multimedia messaging service MMS messages hypertext transfer protocol HTTP data direct data connection messages wireless application protocol WAP data or other types of data known to one skilled in the art.

The processor processes data or instructions and may comprise various computing architectures. For example the processor may process data or instructions using a complex instruction set computer CISC architecture a reduced instruction set computer RISC architecture an architecture implementing a combination of instructions sets or any other suitable instruction set. Although shows a single processor in other embodiments the computing device may include multiple processors. The processor transmits processes and or retrieves data from the storage device the input device the display device the output device and or the communication unit via the data bus . While depicted as separate devices in one embodiment some of these devices may be combined for example the display device incorporates an input device such as a touchscreen interface or other digitizer. In another embodiment using a system on a chip design the data bus between several of the devices is minimized or altogether eliminated.

The storage device stores data and or instructions that when executed by the processor cause the processor to perform one or more actions or to provide one or more types of functionality. The data and or instructions stored by or encoded on the storage device may comprise computer readable code that when executed by the processor performs one or more of the methods further described herein and or provides at least a subset of the functionality described herein. The storage device may comprise a dynamic random access memory DRAM a stating random access memory SRAM a hard disk an optical storage device a magnetic storage device a Read Only Memory ROM a Programmable Read Only Memory PROM an Erasable Programmable Read Only Memory EPROM an Electrically Erasable Programmable Read Only Memory EEPROM a Flash memory or another memory device known in the art.

The storage device may be a persistent storage device a non persistent storage device or a combination of a persistent storage device and a non persistent storage device in various embodiments. The storage device is coupled to the processor the input device the display device the output device and the communication unit via the bus . In the embodiment shown by the storage device includes a print optimization module and application data .

The print optimization module comprises instructions that when executed by the processor manages generation of a display of a WYSIWYG representation commonly referred to as a print preview of data identified by the computing device . In one embodiment the print optimization module modifies a layout associated with identified data to reduce the number of pages used to generate a printed representation of the data also referred to herein as a document . As used herein layout is information that is associated with data specifying visual presentation of the data. For example the layout identifies an orientation associated with the data margins associated with the data font size associated with the data and the amount of data included on a physical page. The print optimization module generates a modified layout based on a data type. In one embodiment the modified layout reduces the number of pages used to generate a document corresponding to the data. For example the modified layout reduces the font size associated with the data reduces the margins associated with the data and or modifies the orientation of the data to reduce the number of physical pages needed to produce a document. Operation of the print optimization module is further described below in conjunction with .

The application data comprises instructions that when executed by the processor implement one or more applications providing functionality to a user of the computing device or to the computing device . In one embodiment the application data includes instructions for implementing one or more of a Web browser an email client a word processor and or a spreadsheet editor. However in other embodiments the application data may include instructions for implementing different and or additional functionality. For example execution of the application data allows a user to view and edit text data stored by the storage device and communicate the text data to a printer to generate a document. Additionally in one embodiment the print optimization module is included in the application data so that the print optimization module is accessible from within an executing application. For example in one embodiment the print optimization module is a plug in associated with one or more applications.

The input device is any device configured to receive input and communicate the received input to the processor to the storage device to the display device and or to another component of the computing device using the bus . For example the input device comprises one or more of a cursor controller a touch sensitive display or a keyboard. In one embodiment the input device includes an alphanumeric input device such as a keyboard a key pad representations of such created on a touch sensitive display or another device adapted to communicate information and or commands to the processor and or to one or more additional components of the computing device . In another embodiment the input device comprises an input device for communication positional data as well as commands to the processor or to another component of the computing device such as a joystick a mouse a trackball a stylus a touch sensitive display directional keys or another suitable input device known in the art.

The display device is a device displaying electronic images and or data. For example the display device comprises an organic light emitting diode OLED a liquid crystal display LCD or any other device known to one skilled in the art. In one embodiment the display device includes a touch sensitive transparent panel for receiving data or for allowing other interaction with the data and or images displayed by the display device .

The output device comprises one or more devices that convey information to a user of the computing device . For example the output device includes one or more speakers or headphones for presenting audio data to a user. As another example the output device includes one or more light emitting diodes LEDs or other light sources to provide visual data to a user. For another example the output device includes one or more devices for providing haptic or vibrational feedback. However the above are merely examples and the output device may include one or more devices for providing auditory output visual output tactile output any combination of the previously identified outputs or any other suitable type of output.

The communication unit transmits data from the computing device to the network to a printer or to another computing device . The communication unit also receives data from the network from a printer or from another computing device . In one embodiment the communication unit comprises a wireless transceiver that transmits and or receives data using one or more wireless communication protocols. For example the communication unit includes one or more wireless transceivers transmitting and or receiving data using one or more wireless communication protocols. Examples of wireless communication protocols include IEEE 802.11a b g n WiFi Global System for Mobile GSM Code Division Multiple Access CDMA Universal Mobile Telecommunications System UMTS General Packet Radio Service GPRS third generation 3G or greater networks fourth generation 4G or greater networks High Speed Download Packet Access HSDPA Long Term Evolution LTE Worldwide Interoperability for Microwave Access WiMax BLUETOOTH or any other suitable wireless communication protocol.

In another embodiment the communication unit comprises a network adapter or another type of wired communication port for communicating with the network with a printer and or with another computing device using a wired communication protocol. Examples of wired communication protocols include Universal Serial Bus USB Ethernet or another suitable wired communication protocol. In yet another embodiment the communication unit comprises a combination of one or more transceivers and a wired communication port.

In one embodiment the print optimization module comprises different plug ins for different types of applications. In one embodiment the print optimization module comprises code which is shared between different plug ins with a baseline of functionality shared between all plugins. Therefore while in one embodiment the system employs multiple separate plug ins these are a type of interface to the general module . In another embodiment different and entirely separate plug ins are used to perform the functions of the print optimization module .

Initially the print optimization module receives input to modify the original layout as identified by the computing device . In one embodiment the print optimization module is a plug in associated with an application executed when a subset of the application data is executed by the processor . In this embodiment the print optimization module received input via a menu and or icon displayed by the executed application. For example an element associated of a menu displayed by the executing application is associated with the print optimization module and the element of the menu receives an input identifying data to be printed.

In the embodiment shown in print optimization module receives the input to modify the data by invoking the application print option. In another embodiment the input comprises a separate indication from the user such as a dedicated menu option or button within the content generating application. In one embodiment the print optimization module is an application plug in the print optimization module is invoked either expressly by the user by clicking on an appropriate print optimization icon and or also when the user invokes the standard application print option by for instance pressing the CTRL P key combination or clicking on the standard print icon on the toolbar. The embodiment shown in begins the modification step of the print optimization module as soon as the user invokes the print function. The layout modification step is run once the user clicks the print optimization module option such as the command button shown in . By allowing the print optimization module modification step to be invoked within the content generation application the print optimization module becomes tightly integrated with the content generating application. The embodiment shown in uses the application programming interface to display the command button and also to operate the layout modification step . The approach used in the embodiment shown in offers several benefits. Mainly it allows for modification of any type of word processing file including the content generation application s native format as well as text rtf and various other proprietary formats so long as the word processing file can be opened by the content generation application. Further the print optimization module does not require the file format to be exported first and it does not detect the type of electronic information being printed inasmuch as it is a word processor plug in it already is aware of that the information type is document content. Therefore the plug in can obviate the need for any detection steps which can mistake information types and result in suboptimal results such as by applying spreadsheet optimizations to text files . The use of the command button within the print confirmation dialog also does not interrupt the usual user interface path for printing the user does not need to export the file first nor does the user have to save the file prior to the layout modification step . By running within the content generating application programming interface the print optimization module appears as another feature as opposed to an outside program for the end user to learn and accept.

After receiving the input to begin modification the print optimization module modifies a layout associated with the identified data. In one embodiment the print optimization module modifies a font size associated with the data one or more margins associated with the data an orientation of the data spacing associated with at least a subset of the data or any other suitable attribute of the layout associated with the data. In some embodiments the print optimization module also removes a subset of the data when modifying the layout. For example the print optimization module identifies and removes advertisements from the data identifies and removes trailing whitespace from the data identifies and removes data from older emails from the data or removes other portions of the data. The specific optimization steps for different types of electronic information will be addressed supra.

In one embodiment where the print optimization module does not comprise multiple plugins the print optimization module first determines a type associated with the data then modifies the layout associated with the data based in part on the determined type. For example the print optimization module modifies a layout associated with an electronic spreadsheet as further described below in conjunction with and modifies a layout associated with an electronic document as further described below in conjunction with . The print optimization module may differently modify the layout associated with data for a wide variety of data types. In one embodiment the print optimization module determines a type associated with the data based on an extension of a file including the data an attribute of the data a received user input or any other suitable information. In a different embodiment where the print optimization module is a plug in or a set of plug ins associated with content generating applications the application is used to determine the type associated with the data. For example if the print optimization module is a plug in associated with a word processor the print optimization module determines that the data is an electronic document. As another example if the print optimization module is a plug in associated with a Web browser the print optimization module determines that the data is a Web page.

In one embodiment the modified data layout is then displayed by the print optimization module using the display device . For example one or more images depicting the data presented in the modified format are displayed . By displaying images representing the modified layout the print optimization module allows a user to view the data in the modified layout prior to printing. This allows the user to verify that the presentation of the data in the modified format is suitable for the user s needs or requirement. For example the modified format may not be suitable for printing an electronic document that is to be signed to form a legal agreement due to the modifications in the layout. Displaying the electronic document in the modified layout allows a user to identify any problems with use of the modified format before paper or another material is used to print the electronic document in the modified layout.

As shown in in one embodiment the display of the modified layout step occurs using the content generating application s own print preview window. In the embodiment wherein the print optimization module is a plug in such close integration with the content generating application is used to provide the user a seamless preview of the layout modification step. In the embodiment shown in the content generating application s own print preview window includes a printing optimization module status indicator such as a toggle button which indicates to the user whether or not the content generating application preview section is displaying the results of the modification or the original layout.

The print optimization module then determines if confirmation of the modified layout is received. For example the print optimization module receives an input confirming that a user accepts the modified layout. Responsive to determining that the modified layout is confirmed the print optimization module or an application generates a physical copy of the data using the modified layout. For example the print optimization module transmits the data and a description of the modified layout to a printer which generates a paper representation of the data where the data is formatted as specified by the modified layout. However responsive to determining that the modified layout is not confirmed the print optimization module reverts the data to its original format. For example if the print optimization module receives an input rejecting the modified layout the original format is used to display the electronic data.

In one embodiment the begin modification step is run automatically and in the background once the print optimization module detects that a user has selected the print option within a content generating application. As shown in the print optimization module modifies the layout and then reminds the user whether or not the user would prefer a modified layout rather than the original layout. In the embodiment shown in the modified layout is not shown to the user unless the user accepts the reminder. While in the reminder appears as a dialog box in other embodiments the reminder appears as a system notification a sound animation and other form of user feedback such as a highlighting of the print optimization module button . Further in the embodiment shown in as part of the reminding step the print optimization module is able to provide to the user an indication of how many pages would be saved if the modified layout is used. The reminder functions to encourage end users to use the printing optimization module . While in the embodiment shown in the number of saved pages is shown in other embodiments the reminder also includes other environmental impact information such as the amount of carbon dioxide saved from invoking the optimization. In yet another embodiment the reminder indicates to the user other information such as how much has been saved by invoking the optimization in the past how much printing time will be saved by using the optimization. The information regarding peer use of the optimization module is shared over the network in one embodiment and in this embodiment the reminder includes an indication whether the user s peers have been using the print optimization.

In one embodiment prior to generating the modified layout the module determines the number of pages that would be required to print the original layout. Following the modification of the original layout the module calculates the number of pages in the modified layout . If the difference in the number of pages in the original layout versus the modified layout exceeds a certain threshold the modified layout is considered too aggressive and is not displayed to the user in step . Instead the original layout is displayed instead with an indication that the modified layout may be suboptimal. In another embodiment the modified layout is rejected if the percentage difference in the number of pages in the modified layout exceeds a threshold value such as 50 . The percentage difference is calculated according to the following formula 

In one embodiment the user then has the choice to view the suboptimal modified layout. In another embodiment the print optimization module simply notifies the user that the modified layout could not be generated.

In one embodiment whether the percentagevalue is acceptable or not depends on the type of data contained in the original layout. For example if the original layout contains mostly text a larger pageis acceptable. If the original layout primarily comprises graphics and numbers an acceptable pageis set to a lower number i.e. 33 rather than 50 . In another embodiment the acceptable pageis set by the intended medium of reproduction of the original layout. For example if the original layout contains formatting choices optimized for high resolution screens such as text having sizes of 14 or 18 points this font size will be reduced resulting in an abnormally high pagevalue. However taking account of the intent of the original layout the high pagevalue is acceptable in this embodiment.

The print optimization module determines whether the margins specified by the original layout equal or exceed a predefined value or predefined values wherein different predefined values exist for different margins such as left margin right margin top and bottom margins . Responsive to determining that a margin is greater than the corresponding predefined value the print optimization module stores the original margins specified by the original layout and modifies the margins that are not less than the predefined value to equal the predefined value. In one embodiment the determination compares each margin to a single predefined value. Alternatively different margins may be compared to different predetermined values. In one embodiment the print optimization module determines whether the original layout s top margin and a bottom margin equal or exceed a first predefined value and determines whether the original layout s left margin and a right margin equal or exceed a second threshold value. For example the print optimization module determines whether a top margin and a bottom margin are greater than 0.75 inches and determines whether a left margin and a right margin are greater than 0.25 inches. Responsive to determining that a margin is greater than or equal to a threshold value the margin that is greater than or equal to the threshold value is stored and modified to equal the threshold value. As the margins affect the amount of paper that does not included printed data reducing the margins based on the determination increases the amount of paper including printed data.

In one embodiment the print optimization module uses different threshold values in step on the basis of the data found in the spreadsheet. For example one set of margins is used for data which is primarily numerical in nature and a different set of margins is used for textual data. Further a different set of margins is used in one embodiment if the spreadsheet includes graphs to be printed.

Following the determining that a margin does not equal or exceed the predefined value or predefined values or after modifying one or more margins to not exceed the predefined value or predefined values the print optimization module determines whether the font size specified by the original layout is less than or equal to a predefined font size. The predefined font size is calculated as a minimum threshold of readability for a given printer or type of printer in one embodiment. For instance many laser printers can render legible fonts as small as 6 points. Other printers such as inkjet printers become difficult to read as the font size decreased below 8 points. In one embodiment the type of data i.e. number centric versus text centric also determines the predefined font size used in step .

In one embodiment the print optimization module determines whether the original layout specifies a font size that is less than or equal to a minimum value such as an 8 point font. Responsive to determining that the font size associated with the original layout is less than or equal to the predefined font size the print optimization module sets a maximum page count to a first value.

In one embodiment determining the original layout specifies a font size of 8 point or less the print optimization module sets a maximum page count to a fixed number of pages such as three pages. The maximum page count specifies the number of pages used to reproduce data from the columns of the spreadsheet. For example setting the maximum page count to three pages causes the font size to be scaled in the spreadsheet so that all of the columns of the spreadsheet are included in three sheets of paper. However responsive to determining the font size included in the original layout exceeds the predefined font size the print optimization module sets the maximum page count to a second value. In one embodiment upon determining the original layout specifies a font size greater than 8 point the print optimization module sets a maximum page count of one page thus if the original font size is greater than 8 point the total columns of the spreadsheet are scaled to fit within the width of a single page. While in one embodiment the page count values are set to a constant such as three for font sizes of 8 points or less and one for font sizes of greater than 8 points other methods of determining the page counts are used in additional embodiments. In one embodiment the print optimization module determines the page count on the basis of the average font size in all the cells. In another embodiment the print optimization module determines the page count number on the basis of font sizes of only some of the spreadsheet cells such as those cells containing text while ignoring cells containing numerical values.

After determining the target number of pages the print optimization module determines whether a number of pages used in printing a physical copy of the data in a portrait orientation exceeds a number of pages used in printing a physical copy of the data in a landscape orientation. Responsive to determining that the landscape orientation of the data results in a fewer number of pages the print optimization module sets the orientation of the data to the landscape orientation. However responsive to determining that the portrait orientation of the data results in a fewer number of pages the print optimization module sets or keeps the orientation of the data to the portrait orientation. Hence the print optimization module determines the data orientation resulting in the fewest number of pages for use in generating a physical copy of the data.

In one embodiment after specifying the maximum page count and after verifying that the number of pages saved in the two orientations the print optimization module determines whether the page savings ratio defined in Eq. 1 above is greater than a predefined savings ratio. If so in one embodiment the print optimization module restores the original format and then uses the spreadsheet zoom value to a predefined value. The zoom value is function of the application programming interface in spreadsheet software programs such as Excel and scales the spreadsheet a certain percentage without changes to the formatting or the margins of the spreadsheet.

The print optimization module determines whether the margins specified by the original layout associated with the electronic document equal or exceed a predefined value. In one embodiment the print optimization module uses a predefined value in the determination . Alternatively the print optimization module determines whether different margins specified by the original layout exceed or equal predefined values allowing different predefined values to be used for determination of different margins. Responsive to determining that a margin is less than a predefined value the print optimization module stores the original margins specified by the original layout and modifies the margin that is not less than the predefined value to equal the predefined value. In one embodiment the determination compares each margin to a single predefined value. For example the print optimization module determines whether the margins associated with the original layout are greater than or equal to 0.25 inches. Alternatively different margins may be compared to different predetermined values. In one embodiment the print optimization module determines whether the original layout s top margin and its bottom margin equal or exceed a first predefined value and determines whether the original layout s left margin and its right margin equal or exceed a second threshold value. For example the print optimization module determines whether a top margin and a bottom margin equals or exceeds 0.25 inches and determines whether a left margin and a right margin are less than 0.15 inches. Responsive to determining that a margin is greater than or equal to a threshold value the margin that is greater than or equal to the threshold value is stored and modified to equal the threshold value. As the margins affect the amount of paper that does not included printed data reducing the margins based on the determination increases the amount of paper including printed data.

In one embodiment the print optimization module sets the threshold values on the basis of the type of document provided to the print optimization module . For instance if the print optimization module determines that the document is a book the print optimization module uses different threshold values for the left and right margins resulting in different interior and exterior margins for the printed product.

In one embodiment the content generating application indicates to the print optimization plug in the minimum margins supported by the printer or printers configured for use by the content generating application. In comparing the margins to the predefined value the print optimization software ensures that the predefined values used for the minimum margins are greater than or equal to the minimum hardware margins to avoid cutting off any content during printing.

Responsive to determining that a margin does not equal or exceed the predefined value or predefined values or after modifying one or more margins to not exceed the predefined value or predefined values the print optimization module removes trailing whitespace from the electronic document. For example the print optimization module identifies the end of text or images in the electronic document and removes carriage returns page breaks or other characters associated with whitespace from the end of the document. In another embodiment the print optimization module identifies carriage returns page breaks or other characters associated with whitespace after the end of text or images on one or more pages of the electronic document and removes the identified characters from the one or more pages. The removal of trailing whitespace can result in immediate savings of one or more sheets of printing paper.

In one embodiment after removing trailing whitespace from one or more pages of the electronic document the print optimization module determines whether the electronic document includes more than a single page of data. For example the print optimization module determines whether the electronic document is one page or multiple pages. Responsive to determining that the data includes multiple pages the print optimization module identifies the final page of the data and determines whether the final page includes more than a threshold amount of content. For example in one embodiment the print optimization module determines whether the final page of an electronic document includes greater than two inches of text or other content when printed. In another embodiment the printing optimization module counts the number of characters that will be rendered on the final page.

For multiple page documents the print optimization software then reduces the font size of the document by a fixed amount. In one embodiment the font size is reduced by of a point for the entire document. In another embodiment the print optimization software changes the font size of only a subset of the document such as the last few pages in one embodiment. Whether or not the entire document is reduced depends on the number of pages in the document in one embodiment documents exceeding five pages will have only the last few pages font size reduced. In another embodiment the print optimization module determines how many sections are in the document by analyzing the document s headings and subheadings as well as paragraph styles. After determining that the last few pages comprise a different subsection of the document the font size of the last section is reduced. In one embodiment the reduction in the font size is repeated until the final low value page is eliminated.

While the final page verification step is shown in in some embodiments the print optimization module does not analyze the final page of the document. Instead the print optimization module moves forward to the verification step described below omitting the font size reduction steps by following a direct path .

In one embodiment following the completion of step the print optimization module returns to step given that a reduction of font size by a fixed amount may have resulted not only in the elimination of the original final page having low value but has further resulted in another low value final page in the modified format. In one embodiment the print optimization module is limited to two iterations through the process in another embodiment the process is repeated so long as it results in a final page that has little content. In one embodiment on any second pass through the final reduction step a different approach must be used than in the original pass through the step. For example while in the initial pass the print optimization module reduced the font size of the entire document in the second pass the print optimization module may only alter the font size of a subpart of the document.

After the possible elimination of the final page or the trailing pages the print optimization module then determines if the page savings ratio is greater than a predefined savings ratio as defined in Eq. 1 above. The page savings ratio is defined as the resulting pages savings count divided by the original page count. If it is the print optimization module increases the font size until the page savings ratio is less than or equal to the predefined savings ratio.

In one embodiment the print optimization module seeks to make as few noticeable changes to the document as possible. By focusing on small changes to the margins and the font size the print optimization module can save multiple pages while maintaining the overall appearance of the document. In another embodiment the print optimization module allows the user to select how aggressively the modifications will be. For example in a highly aggressive mode the software will change all settings including font selections to cut down the number of pages even if the aggressive changes alter the overall appearance of the document.

In one embodiment the print optimization module stores in the storage device the end users history of accepted and rejected print modifications so as to avoid certain changes such as margin changes that the user has routinely rejected in the past.

Initially the print optimization module identifies a document object model DOM associated with the data and removes active elements from the DOM. The DOM identifies elements that comprise a Web page. For example a DOM includes links anchors forms comment regions navigation bars or other elements comprising a Web page. The DOM may include active content such as client side scripts e.g. JAVASCRIPT or similar executable code iframes comment regions or other active content that is executed to provide functionality within a Web page. The print optimization module initially removes an active element or a subset of active elements included in a Web page by identifying a tag function call or other attribute associated with active content within the DOM and removing data associated with the tag or other attribute. For example the print optimization module removes comment regions scripts iframes or other active content from the DOM. In one embodiment the print optimization module removes data associated with tags such as or or data associated with script events such as on Load onClick on MouseOver on MouseEnter on MouseDown on MouseOut or similar active content commands.

After removing the subset of the elements from the DOM the print optimization module generates a modified body element within the DOM that includes the remaining elements. For example the new body element includes elements other than navigation bars comment regions and or sidebars. In one embodiment the modified body element includes markup language describing the content. For example the modified body element includes hypertext markup language HTML or extensible markup language XML describing the content.

The modified body element includes one or more block level elements describing the sub components that comprise the modified body element. The print optimization module removes a subset of the block level elements describing formatting or styling of data included in the modified body element. For example the print optimization module removes style sheets headers footers forms comment regions or other data describing formatting of data included in the modified body element. For example the print optimization module removes block level elements associated with tags or identifiers associated with formatting and stored by the print optimization module such as or . Further the print optimization module removes line breaks from the modified block level element to reduce the amount of whitespace in the modified block level element.

After removing the subset of block level elements and removing the whitespace the print optimization module analyzes the remaining block level elements. In one embodiment the print optimization module calculates a score associated with different block level elements and removes block level elements having a score less than or less than or equal to a predetermined threshold. Alternatively the print optimization module removes block level elements having a score exceeding or equaling or exceeding a predetermined threshold. For example the print optimization module analyzes a block level element by determining a density of links within the block level element a number of images within the block level element the amount of text within the block level element and or other attributes of the content of the block level element.

In one embodiment the print optimization module increases a block level element s score if the element includes one or more components identified by a positive component listing and decrements the block level element s score if the element includes one or more components identified by a negative component listing. The positive component listing includes tags or other identifiers associated with components relevant to the data and the negative component listing includes tags or other identifiers associated with components not relevant to the data. For example the negative component listing includes tags or other identifiers associated with comment regions navigation bars sidebars or other components identifying components other than data. Examples of tags included in the negative component listing include and or . Examples of tags included in the positive component listing include and or . The print optimization module may then associate a score with the block level element based on the attributes of its included content and use the score to determine whether to remove the block level element.

In one embodiment the positive component listing and or negative component listing are included in the print optimization module . Alternatively the positive component listing and or negative component listing are included in the storage device . In one embodiment the positive component listing and or negative component listing are updated via data received from a server via the network .

In one embodiment if a block level element is comprised of lower level block level elements the print optimization module combines the scores associated with the lower level block level elements to analyze the block level element. Hence a parent block level element is analyzed by combining the results of an analysis of its child block level elements.

In addition to removing a subset of the block level elements based on the analysis the print optimization module also determines core content of the Web page from the analysis . For example the print optimization module identifies the block level element or block level elements having the highest score or scores as the core content of the Web page. The print optimization module then generates a core block level element including the core content. In one embodiment the core block level element also includes a title that the print optimization module extracts from a field of the DOM. For example the print optimization module identifies a tag and its associated data from the DOM and associates the data associated from the tag with the core block level element. In one embodiment after generating the core block level element the print optimization module analyzes block level elements comprising the core block level element and removes a subset of the block level elements such as tables. For example the print optimization module associates a score with the constituent block level elements of the core block level element as further described above and removes constituent block level elements having a score less than a core component threshold value. In other embodiments the score may be differently analyzed to determine whether to remove a constituent block level element.

The print optimization module then determines if the number of characters in the core block level element is less than a character threshold. In another embodiment the print optimization module then determines if the number of characters in the core block level element is less than or equal to a character threshold. For example the print optimization module determines if the core block level element includes less than 200 characters. If the core block level element includes less than the threshold number of characters the print optimization module reverts the Web page to its original layout so the Web page is printed using its original format.

Responsive to determining the core block level element includes more than the threshold number of characters or that the core block level element includes at least the threshold number of characters the print optimization module modifies images included in the core block level element. For example the print optimization module modifies images in the core block level element so that the images appear in the correct position relative to the remaining content. After modifying the images if any the print optimization module modifies the background color associated with the core block level element. For example the print optimization module sets the background color to a specified color such as white to reduce the amount of ink used when printing.

In addition to the example methods described above in conjunction with the print optimization module may also implement different and or additional methods for modifying layouts associated with different types of data. In one embodiment the print optimization module modifies a layout associated with data having a presentation type and or data having an email type. E mail Optimization process is shown in . For example the print optimization module modifies a layout associated with a slideshow or with an email prior to printing out the slideshow or email.

Responsive to determining that data has an email type the print optimization module exports the message into a structured document. E mail messages arrive into a client program in any number of formats. The main body of the message may be encoded as plain text structure data such as HTML or other formats such as rich text format. In one embodiment the export step relies on the format identification information found in the message header field. In another embodiment the export step uses the client program s interface to export the message allowing the program to handle the different formats natively. In one embodiment the print optimization module relies on the e mail client API to generate HTML output of the e mail message regardless of the encoding used to send the message.

Given that the e mail message is exported as a structured document the printing optimization module invokes the same process as was described for web pages. In one embodiment the process provides the user an option to remove low value pages from the printout. However the invocation process in one embodiment includes additional steps beyond the process . For example margins are lowered for e mail messages to include a maximum amount of content on each page.

As shown in in one embodiment the software allows the user to select the pages to be removed and kept in a graphical interface simply by clicking the page to be excluded . In the screen shot shown in the first page has been excluded. The user may exclude pages by graphical means rather than having to manually input page numbers.

In one embodiment the optional removal step appears only if the web page optimization process was unable to identify a sufficient amount of content to remove automatically. This determination occurs in step . In another embodiment the screen appears after every optimization. The screen allows the user to shrink and expand the content by activating the text size buttons . The preview screen also allows the user to revert to the original message if the optimizations are not acceptable to the user.

In one embodiment the invocation process further analyzes each attachment to the e mail message. For example the e mail includes a word processor attachment the process is used if a spreadsheet is identified the spreadsheet process is employed. In one embodiment the user is queried before attachments are opened for analysis. In one embodiment all attachments are processed in sequence using recursive calls to the printing optimization module .

In another embodiment rather than invoking the HTML export process the exported structured document is analyzed to identify the most recent thread included in the email as well as other threads included in the email. For example the print optimization module identifies timestamp information included in the data and partitions the data according to timestamp information. In one embodiment the print optimization module identifies header information included in the data and partitions the data based on timestamps included in the header information. In one embodiment the print optimization module removes data having timestamp information outside of a specified date range allowing a user to specify how much of a thread of emails is printed.

After identifying and or removing threads from the data the print optimization module further analyzes the data to identify wasteful content. For example the print optimization module compares portions of the data to stored templates or information identifying wasteful content. In one embodiment the print optimization module includes templates describing formats of disclaimers legal notices copyright information or similar data. The print optimization module may also identify images included in the data. In one embodiment the print optimization module identifies the detected wasteful content to a user and allows the user to select whether to remove portions or all or the detected wasteful content.

The print optimization module displays the modified data to the user allowing the user to accept the modified data or select the original data. In one embodiment the print optimization module then applies the method described above in conjunction with to further reduce the number of pages printed.

In one embodiment data having a presentation type includes one or more slides representing portions of the data. Presentations are handled as a special case given that presentations are often optimized for visual impact rather than printed output.

Responsive to determining that data has a presentation type the print optimization module first generates an image file corresponding to each slide. The image file contains multiple layers such as a separate layer for backgrounds and text. For example the print optimization module generates 5 different images for presentation type data including 5 slides. The images are then stored in temporary storage. The print optimization module generates an alternate presentation print layout and positions a plurality of the images on one or more pages comprising the updated layout. In one embodiment the user may select the number of slides on a single page of the print preview layout. In another embodiment the presentation module generates an alternate presentation having slides including specific number of images per page depending on the number of slides in the presentation. Depending on the source presentation file two images four images or eight images may be included in an alternate presentation layout generated at step .

As shown in the alternative layout generated by step is previewed during the step wherein the software provides a means to receive user instructions . As part of step the user may optionally select whether to include color the number of slides per page and manually include or exclude slides . In one embodiment by default the color option is turned off to save ink or toner. In one embodiment the printing optimization module automatically suggests that certain low information slides be excluded such as slides requesting meeting participant questions or slides containing only one clip art image. Additionally the print optimization module associates a grayscale setting with the alternate presentation to print the alternate presentation using gray scale rather than color in one embodiment.

As shown in in one embodiment the print optimization module positions and sizes the plurality of images on the alternate presentation to minimize the amount of whitespace included on the slides. In the example shown in 8 slides are shown with a minimum amount of white space around the slides. The placement and re sizing of the slides maintains the proportions of the slides while removing unnecessary whitespace. In one embodiment if the original presentation has a layout where two slides are printed on a sheet of paper the alternate presentation is formatted so that a slide of the alternate presentation includes images of multiple slides from the original presentation allowing the alternate presentation to be printed so that more than two slides of the original presentation are included on a sheet of paper. This more efficient placement of images on the alternate presentation reduces the number of slides needed to include the data from the presentation which reduces the number of pages needed to generate a physical representation of the presentation.

In one embodiment the modified layout significantly improves over the standard presentation printing options. For instance in Microsoft PowerPoint default printing option only three slides per page with notes can fit in one embodiment of the invention four slides per page with notes can fit or as shown in eight slides without notes . Furthermore in one embodiment the user may select a custom number of slides per page while selecting the number of slides per page in option .

Accordingly the print optimization module allows the modified layout associated with different types of electronic data to reduce the amount of paper used to generate a physical representation of the electronic data. This reduction in paper reduces paper costs as well as reduces the amount of power used to generate a physical representation of the electronic data. Reducing the amount of paper used and the amount of power consumed by printing allows the print optimization module to conserve resources and reduce the amount of greenhouse gases produced when generating a physical representation of the electronic data.

In various embodiments the methods described above in conjunction with and other methods described above are implemented by instructions for performing the described actions embodied within a computer readable storage medium that are executable by a processor. For example the storage device includes in instructions for performing the actions that are executed by the processor . Those of skill in the art will recognize that the above described methods may be implemented in embodiments of hardware software firmware or combinations thereof. Moreover other embodiments of the described methods above may include different and or additional steps than the ones described herein.

Some portions of the above description describe embodiments in terms of algorithmic and or symbolic representations of operations on information. For example use algorithmic and or symbolic descriptions of operations on information. These algorithmic and or symbolic descriptions as well as other similar descriptions in the prior disclosure are commonly used by those skilled in the data processing arts to convey the substance of their work effectively to others skilled in the art. These operations while described functionally computationally or logically are understood to be implemented by computer executable code that is executed by a processor or equivalent electrical circuits microcode or the like. Furthermore in the above description these arrangements of operations are out of convenience referred to as modules without loss of generality. The described operations and their associated modules may be embodied in software firmware hardware or any combinations thereof.

As used herein any reference to one embodiment or an embodiment means that a particular element feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

Some embodiments may be described using the expression coupled and connected along with their derivatives. It should be understood that these terms are not intended as synonyms for each other. For example some embodiments may be described using the term connected to indicate that two or more elements are in direct physical or electrical contact with each other. In another example some embodiments may be described using the term coupled to indicate that two or more elements are in direct physical or electrical contact. The term coupled however may also mean that two or more elements are not in direct contact with each other but yet still co operate or interact with each other. The embodiments are not limited in this context.

As used herein the terms comprises comprising includes including has having or any other variation thereof are intended to cover a non exclusive inclusion. For example a process method article or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such process method article or apparatus. Further unless expressly stated to the contrary or refers to an inclusive or and not to an exclusive or. For example a condition A or B is satisfied by any one of the following A is true or present and B is false or not present A is false or not present and B is true or present and both A and B are true or present .

In addition use of the a or an are employed to describe elements and components of the invention. This is done merely for convenience and to give a general sense of the invention. This description should be read to include one or at least one and the singular also includes the plural unless it is obvious that it is meant otherwise.

Upon reading this disclosure those of skill in the art will appreciate still additional alternative structural and functional designs for a system and a process for modifying a layout associated with electronic data to more efficiently use resources when generating a paper representation of the electronic data through the disclosed principles herein. Thus while particular embodiments and applications have been illustrated and described it is to be understood that the present invention is not limited to the precise construction and components disclosed herein and that various modifications changes and variations which will be apparent to those skilled in the art may be made in the arrangement operation and details of the method and apparatus of the present invention disclosed herein without departing from the spirit and scope of the invention.

