---

title: Method and systems for sub-allocating computational resources
abstract: The disclosed embodiments relate to systems and methods for method and systems for sub-allocating computational resources. A first computing device receives information associated with a first set of computational resources from a cloud infrastructure. The first set of computational resources has been allocated to the first computing device by the cloud infrastructure. A first set of parameters associated with a workflow received by the first computing device is determined. The first set of parameters is indicative of a need of the first set of computational resources by the first computing device. One or more computational resources from the first set of computational resources are sub-allocated based on the determined first set of parameters.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09507642&OS=09507642&RS=09507642
owner: Xerox Corporation
number: 09507642
owner_city: Norwalk
owner_country: US
publication_date: 20121204
---
The presently disclosed embodiments are related in general to allocation of computational resources. More particularly the presently disclosed embodiments are related to systems and methods for sub allocating the computational resources through an online marketplace.

Advancements in the field of virtualization and shared computing have led to the development of cloud computing infrastructure. The cloud computing infrastructure may allocate one or more computational resources to one or more computing devices. The one or more computing devices may utilize the one or more computational resources to perform predetermined operations. Examples of the computational resources may include but are not limited to one or more processor instances storage space and RAM memory space. In certain scenarios a service level agreement SLA between the one or more computing devices and the cloud computing infrastructure may determine the amount of computational resources allocated to the respective computing devices. Further the SLA may determine a billing amount that the one or more computing devices have to pay the cloud computing infrastructure for using the one or more computational resources.

In some cases the one or more computing devices may reserve predetermined computational resources from the allocated computational resources for future use e.g. at peak workload . Further the one or more computing devices may not use the reserved computational resources until the one or more computing devices encounter the peak workload. However the cloud computing infrastructure will still bill the one or more computing devices based on the SLA irrespective of whether the one or more computing devices has utilized the reserved computational resources.

According to embodiments illustrated herein a method implementable on a first computing device for allocating one or more computational resources is disclosed. The method includes receiving information associated with a first set of computational resources from a cloud infrastructure. The first set of computational resources has been allocated to the first computing device by the cloud infrastructure. The workflow is received by the first computing device. The first set of parameters is indicative of a need of the first set of computational resources by the first computing device. The one or more computational resources from the first set of computational resources are allocated based on the determined first set of parameters.

According to embodiments illustrated herein a method implementable on an online marketplace server for allocating one or more computational resources received from one or more first computing devices is disclosed. The one or more computational resources are unused resources of the one or more first computing devices. The method includes receiving a first request for the one or more computational resources from one or more second computing devices. The one or more computational resources are allocated to the one or more second computing devices. Further the method includes monitoring usage of the one or more computational resources. Finally the method includes billing the one or more second computing devices based on the usage.

According to embodiments illustrated herein a first computing device for allocating one or more computational resources is disclosed. The first computing device comprises a first computational resource manager configured to receive information associated with a first set of computational resources from a cloud service provider. The first set of computational resources has been allocated to the first computing device by the cloud infrastructure. A load manager configured to determine a first set of parameters associated with a workflow received by the first computing device. The first set of parameters is indicative of a need of the first set of computational resources by the first computing device. the first computational resource manager configured to allocate the one or more computational resources from the first set of computational resources to one or more second computing devices based on the determined first set of parameters.

According to embodiments illustrated herein an online marketplace server for allocating one or more computational resources received from one or more first computing devices is disclosed. The one or more computational resources are unused resources of the one or more first computing devices. The online marketplace server includes a communication manager configured to receive a first request from one or more second computing devices for the one or more computational resources. Further the online marketplace server includes a second computational resource manager configured to allocate the one or more computational resources to the one or more second computing devices. The second computational resource manager monitors the usage of the one or more computational resources. A billing module configured to bill the one or more second computing devices based on the usage.

The present disclosure is best understood with reference to the detailed figures and description set forth herein. Various embodiments are discussed below with reference to the figures. However those skilled in the art will readily appreciate that the detailed descriptions given herein with respect to the figures are simply for explanatory purposes as the methods and systems may extend beyond the described embodiments. For example the teachings presented and the needs of a particular application may yield multiple alternate and suitable approaches to implement the functionality of any detail described herein. Therefore any approach may extend beyond the particular implementation choices in the following embodiments described and shown.

References to one embodiment an embodiment at least one embodiment one example an example for example and so on indicate that the embodiment s or example s so described may include a particular feature structure characteristic property element or limitation but that not every embodiment or example necessarily includes that particular feature structure characteristic property element or limitation. Furthermore repeated use of the phrase in an embodiment does not necessarily refer to the same embodiment.

The following terms shall have for the purposes of this application the respective meanings set forth below.

 Computational resources correspond to resources utilized by a computing device to perform an operation. In an embodiment the computational resources correspond to but are not limited to processor instances storage space and RAM space. In an embodiment the computational resources may further correspond to but not limited to software applications security services and database services that can be utilized by the computing device.

A cloud infrastructure corresponds to a universal collection of computational resources over the internet such as computing instances storage information hardware various platforms and services and forms individual units within the virtualization environment. In an embodiment one or more computing devices registered with the cloud infrastructure utilize the resources to perform respective operations. In an embodiment cloud infrastructure may provide one or more services such as but not limited to Infrastructure as a service IaaS Platform as a service Paas Software as a service SaaS Storage as a service STaaS Security as a service SECaaS and Data as a service DaaS .

An Online Marketplace refers to a type of e commerce website where product and inventory information is provided by multiple third parties. Transactions are processed by the marketplace owner. In an embodiment the online marketplace publishes the availability of the computational resources. Some examples of online marketplace include but are not limited to E bay.com Amazon.com Flipkart.com Amazon web services AWS Windows Azure and the like.

A Workflow refers to an ordered list of services which when executed perform a predetermined operation. The workflow may include one or more services e.g. subtasks that can each be executed at the corresponding service component in the cloud infrastructure.

A Peak workload corresponds to a workflow that may require a computing device to utilize all of the available computational resources to perform an operation.

The cloud infrastructure includes to a plurality of computing devices connected with each other over a network. In an embodiment each of the plurality of computing devices performs a predetermined operation. For example the cloud infrastructure may include a computing device that is configured as a streaming controller. In an embodiment the streaming controller enables seamless streaming of video and audio content. In an embodiment the plurality of computing devices includes computing devices that are being executed in a virtualized environment e.g. virtual machines . Further the cloud infrastructure includes a storage controller that allocates storage space and RAM space to a user of the cloud infrastructure . Some examples of the storage controller include but are not limited to Walrus Controller GridStore and the like. Some examples of cloud infrastructure include but are not limited to Amazon EC2 Ubuntu One Google Drive etc.

The first computing device receives information associated with the first set of computational resources from the cloud infrastructure . In an embodiment the information associated with the one or more computational resources includes but are not limited to an IP address a processor id operating system information RAM space storage space and other information that facilitates access to the first set of computational resources. In an embodiment the first computing device receives the information associated with the first set of computational resources based on an SLA between the cloud infrastructure and the first computing device . In an embodiment the first computing device utilizes the information to access the first set of computational resources. Further the first computing device receives a workflow from one or more users of the first computing device . In an embodiment the operation performed by the first computing device is determined by the workflow. The first computing device utilizes the first set of computational resources to perform the operation. In an embodiment the first computing device reserves one or more computational resources from the first set of computational resources for a peak workload. In an embodiment the first computing device does not utilize the one or more computational resources during non peak workload. In an alternate embodiment the first computing device sends information associated with the one or more computational resources to the online marketplace server during the non peak workload. Examples of the first computing device include but are not limited to a personal computer a laptop a PDA a mobile device a tablet or any device that has the capability of receiving the first set of computational resources. The first computing device is described later in conjunction with .

The network corresponds to a medium through which the content and the messages flow among various components e.g. the cloud infrastructure the first computing device the online marketplace server and the second computing devices of the system environment . Examples of the network may include but are not limited to a Wireless Fidelity WiFi network a Wireless Area Network WAN a Local Area Network LAN or a Metropolitan Area Network MAN . Various devices in the system environment can connect to the network in accordance with various wired and wireless communication protocols such as Transmission Control Protocol and Internet Protocol TCP IP User Datagram Protocol UDP 2G 3G or 4G communication protocols.

The online marketplace server receives information associated the one or more computational resources from the first computing device . The online marketplace server publishes the availability of the one or more computational resources. In an embodiment the online marketplace server publishes the availability of the one or more computational resources over at least one of a portal a website an application programming interface API or a blog. In an embodiment the online marketplace server sub allocates the one or more computational resources to the at least one of the second computing devices . The online marketplace server is described later in conjunction with .

The second computing devices request for the one or more computational resources through the online marketplace server . Further the second computing devices receive the one or more computational resources from the online marketplace server . Some examples of the second computing devices include but are not limited to a personal computer a laptop a PDA a mobile device a tablet or any device that has a capability of receiving the one or more computational resources.

The operation and interaction between the various components of the system environment is described later in conjunction with .

The first computing device sends a request for a first set of computational resources to the cloud infrastructure depicted by . The cloud infrastructure looks up for the SLA between the first computing device and the cloud infrastructure . Based on the SLA the cloud infrastructure allocates the first set of computational resources to the first computing device depicted by . In an embodiment the cloud infrastructure allocates one or more virtual machines to the first computing device . The configuration of the one or more virtual machines corresponds to the first set of computational resources. For example the cloud infrastructure has a first set of virtual machines that has the following configuration 

The cloud infrastructure allocates two of the first set of virtual machines to the first computing device . Then the first computing device would have two processors 1 GHz 512 MB of RAM space and 20 GB of storage as the first set of computational resources.

In an embodiment the first computing device receives a workflow that includes one or more processes or services that the first computing device executes to perform an operation. The first computing device determines a first set of parameters associated with the workflow depicted by . In an embodiment the first set of parameters includes but is not limited to the network bandwidth processor instances RAM and the storage space required by the workflow. The first computing device compares the first set of parameters with a second set of parameters associated with a peak workload. Based on the comparison the first computing device determines one or more computational resources from the first set of computational resources that can be reserved for the peak workload. For example based on the current workflow the first computing device determines that the current workflow is utilizing one processor instance 128 MB RAM and 5 GB storage space. Further the first computing device determines that during peak workload the first computing device would require two processor instances 512 MB RAM and 20 GB storage space. Thus the first computing device can reserve one processor instance 384 MB RAM and 15 GB storage space for the peak workload.

In an embodiment the first computing device communicates information associated with the one or more computational resources to the online marketplace server depicted by . The online marketplace server publishes the availability of the one or more computational resources. Along with publishing the availability of the one or more computational resources the online marketplace server publishes an SLA associated with the one or more computational resources. In an embodiment the SLA includes pricing details of the one or more computational resources.

At least one of the second computing devices send a request to the online marketplace server for the one or more computational resources depicted by . The online marketplace server sub allocates the one or more computational resources to the at least one of the second computing devices depicted by .

The online marketplace server monitors the usage of the one or more computational resources depicted by by the at least one of the second computing devices . Furthermore the online marketplace server maintains a log of the usage of the one or more computational resources. The online marketplace server communicates the usage log to the first computing device depicted by .

During the peak workload the first computing device sends a request to the online marketplace server to preempt the one or more computational resources depicted by . On receiving the request the online marketplace server preempts the one or more computational resources from the at least one of the second computing devices depicted by . In an embodiment the online marketplace server preempts the one or more computational resources without any notification to the at least one of the second computing devices . In an alternate embodiment the online marketplace server sends a notification about preemption of the one or more computational resources. The online marketplace server returns the one or more computational resources to the first computing device depicted by . Furthermore the online marketplace server bills the at least one of the second computing devices based on the usage log depicted by .

The first processor is coupled to the first transceiver and the first memory device . The first processor executes a set of instructions stored in the first memory device . The first processor can be realized through a number of processor technologies known in the art. Examples of the first processor can be but are not limited to X86 processor RISC processor ASIC processor CISC processor ARM processor or any other processor.

The first transceiver transmits and receives messages and data to from the various components of the system environment e.g. the cloud infrastructure online marketplace server and the second computing devices . Examples of the first transceiver can include but are not limited to an antenna an Ethernet port a USB port or any port that can be configured to receive and transmit data from external sources. The first transceiver transmits and receives data messages in accordance with various communication protocols such as Transmission Control Protocol and Internet Protocol TCP IP User Datagram Protocol UDP 2G 3G and 4G communication protocols.

The first memory device stores a set of instructions and data. Some of the commonly known memory implementations can be but are not limited to random access memory RAM read only memory ROM hard disk drive HDD and secure digital SD card. The first memory device includes a first program module and a first program data . The first program module includes a set of instructions that can be executed by the first processor to perform one or more operations on the first computing device . The first program module includes a first communication manager a first computational resource manager a load manager and a first billing module . Although various modules in the first program module have been shown in separate blocks it may be appreciated that one or more of the modules may be implemented as an integrated module performing the combined functions of the constituent modules.

The first program data includes a resource data a load data a billing data an SLA data a reserved resource data a usage log data and the workflow data .

The first communication manager receives information associated with the first set of computational resources from the cloud infrastructure . The first communication manager stores the information associated with the first set of computational resources as the resource data . Further the first communication manager communicates information associated with the one or more computational resources from the first set of computational resources to the online marketplace server . Additionally the first communication manager receives a workflow for the first computing device . The first communication manager may transmit and receive messages data in accordance with various protocols such as but not limited to Transmission Control Protocol and Internet Protocol TCP IP User Datagram Protocol UDP 2G 3G or 4G communication protocols.

The load manager monitors the workflow received by the first computing device . The load manager determines the first set of parameters associated with the workflow. In an embodiment the first set of parameters includes a measure of memory space storage space and processing instances required by the workflow. In an embodiment the load manager maintains a historical data pattern of the first set of parameters associated with the workflow. Further the load manager stores the historical data pattern as the workflow data . In an embodiment the load manager schedules the usage of the first set of computational resources based on the workflow data and the first set of parameters associated with the workflow. Based on the scheduling of the usage of the first set of computational resources the load manager reserves one or more computational resources from the first set of computational resources for the peak workload. Further the load manager stores the metadata associated with the one or more computational resources as the reserved resource data .

The first computational resource manager uses the information associated with the first set of computational resources to utilize the first set of computational resources to perform a predetermined operation. In an embodiment the first computational resource manager utilizes the first set of computational resources along with the first processor and the first memory device to perform the predetermined operation. For example the first set of computational resources includes two processor instances the first computational resource manager would enable the first computing device to perform an operation using the first processor and the two processor instances. In an embodiment the first computational resource manager may utilize the first set of computational resources using one or more remote access terminals such as Microsoft remote desktop ssh terminal Putty JAVA interface etc.

The first billing module maintains a usage log of the first set of computational resources. In an embodiment the first billing module maintains a usage log associated with the usage of the one or more computational resources by the second computing devices . Furthermore the first billing module stores the usage log as the usage log data . In an alternate embodiment the first billing module receives the usage log from the online marketplace server . Based on the usage log the first billing module bills the second computing devices .

At step information associated with the first set of computational resources is received by the first computing device . In an embodiment the first communication manager receives the information associated with first set of computational resources from the cloud infrastructure based on the SLA between the first computing device and the cloud infrastructure . The first communication manager stores the information associated with the first set of computational resources as the resource data .

Concurrently the first computing device receives a workflow from the users of the first computing device . The first computational resource manager utilizes the first set of computational resources along with the first processor and the first memory device to process the workflow.

At step the first set of parameters associated with the workflow is determined. In an embodiment the load manager determines the first set of parameters. Further the load manager analyzes the first set of parameters associated with the workflow to reserve one or more computational resources from the first set of computational resources for a peak workload as described in .

At step a check is performed to ascertain whether the first computing device requires the one or more computational resources. In an embodiment the first computational resource manager performs the check based on the first set of parameters associated with the workflow. If at step it is determined that the first computing device needs the one or more computational resources step is repeated. If at step it is determined that the first computing device does not need the one or more computational resources step is performed.

At step the one or more computational resources are sub allocated to the second computing devices through the online marketplace server . In an embodiment the first computational resource manager allocates the one or more computational resources. In an embodiment the sub allocation includes communicating information associated with the one or more computational resources to the online marketplace server . In an embodiment the online marketplace server further sub allocates the one or more computational resources to the second computing devices based on the information associated with the one or more computational resources.

At step the first set of parameters associated with the workflow is monitored. In an embodiment the load manager monitors the first set of parameters.

At step a check is performed to ascertain whether the first computing device requires the one or more computational resources. If at step it is determined that the first computing device does not need the one or more computational resources step is repeated. However if at step it is determined that the first computing device needs the one or more computational resources step is performed. In an embodiment the first computing device requires the one or more computational resources during peak workload. At step the one or more computational resources are preempted from the second computing devices through the online marketplace server . In an embodiment the first computational resource manager preempts the one or more computational resources.

Subsequent to the preempting of the one or more computational resources the first billing module receives a usage log associated with the usage of the one or more computational resources.

At step the second computing devices are billed based on the usage log. In an embodiment the first billing module bills the second computing devices .

The second processor is coupled to the second transceiver and the second memory device . The second processor executes a set of instructions stored in the second memory device . The second processor can be realized through a number of processor technologies known in the art. Examples of the second processor can be but are not limited to X86 processor RISC processor ASIC processor CISC processor ARM processor or any other processor.

The second transceiver transmits and receives messages and data to from the various components e.g. the cloud infrastructure the first computing device and the second computing devices of the system environment refer . Examples of the second transceiver can include but are not limited to an antenna an Ethernet port a USB port or any port that can be configured to receive and transmit data from external sources. The second transceiver transmits and receives data messages in accordance with various communication protocols such as Transmission Control Protocol and Internet Protocol TCP IP User Datagram Protocol UDP 2G 3G and 4G communication protocols.

The second memory device stores a set of instructions and data. In an embodiment the second memory device is similar to the first memory device . Further all the embodiments applicable to the first memory device are also applicable to the second memory device . The second memory device includes a second program module and a second program data . The second program module includes a set of instructions that can be executed by the second processor to perform one or more operations on the online marketplace server . The second program module includes a second communication manager a publication manager a second computational resource manager and a second billing module .

The second communication manager receives information associated with the one or more computational resources from the first computing device . Furthermore the second communication manager stores the information as the resource data . In an embodiment the second communication manager is similar to the first communication manager . Furthermore all the embodiments applicable to the first communication manager are also applicable to the second communication manager .

The publication manager publishes the availability of the one or more computational resources. In an embodiment the publication manager publishes the availability of the one or more computational resources on a website hosted by the online marketplace server . It should be apparent to a person having ordinary skill that the scope of the disclosure should not be limited to publishing the availability of the one or more computational resources on the website. The availability of one or more computational resources can be published on a portal an application programming interface API a blog and the like. In an embodiment the publication manager utilizes one or more scripting languages such as but not limited to html html 5 Java script and Cgi script to publish the availability of the one or more computational resources. In an embodiment the publication manager can be implemented using one or more technologies such as but are not limited to Apache web server IIS Nginx and GWS.

The second computational resource manager receives the request for the one or more computational resources from at least one of the second computing devices through the second communication manager . On receiving the request the second computational resource manager sub allocates the one or more computational resources to the at least one of the second computing devices . In an embodiment the second computational resource manager performs one or more checks associated with the integrity of the at least one of the second computing devices prior to sub allocation of the one or more computational resources. Further the second computational resource manager monitors the usage of the one or more computational resources. Additionally the second computational resource manager stores the usage details of the one or more computational resources as the usage data . In an embodiment the second computational resource manager receives a request to preempt the one or more computational resources from the first computing device . On receiving the request the second computational resource manager preempts the one or more computational resources from the at least one of the second computing devices .

The second billing module bills the at least one of the second computing devices based on the usage data . In an alternate embodiment the second billing module receives the bill details from the first computing device .

On receiving the information associated with the one or more computational resources the publication manager publishes the availability of the one or more computational resources. In an embodiment the publication manager publishes an SLA associated with the one or more computational resources probable duration for which the one or more computational resources are available communication protocols required to access the one or more computational resources and so forth.

At step a request for the one or more computational resources is received from at least one of the second computing devices . In an embodiment the second communication manager receives the request through at least one of the portal the website the application programming interface API or the blog.

At step the one or more computational resources are sub allocated to the at least one of the one or more second computing devices based on the SLA. In an embodiment the second computational resource manager sub allocates the one or more computational resources.

At step the usage of the one or more computational resources is monitored. In an embodiment the second computational resource manager monitors the usage of the one or more computational resources. In an embodiment the second computational resource manager generates a usage log corresponding to the usage of the one or more computational resources. Further the second computational resource manager stores the usage log as the usage data .

At step the usage log is transmitted to the first computing device . In an embodiment the second computational resource manager transmits the usage log through the second communication manager .

At step a check is performed to ascertain whether a request for the one or more computational resources was received from the first computing device . In an embodiment the second computational resource manager performs the check. If at step it is determined that no request was received from the first computing device steps are repeated. If at step it is determined that the request for the one or more computational resources has been received step is performed.

At step the one or more computational resources are preempted from the at least one of the second computing devices . In an embodiment the second computational resource manager preempts the one or more computational resources. Further the one or more computational resources are transmitted back to the first computing device through the second communication manager .

At step the at least one of the second computing devices are billed based on the usage of the one or more computational resources. In an embodiment the second billing module bills the at least one of the second computing devices . In an alternate embodiment the second billing module receives the billing details from the first computing device .

The above disclosed embodiments illustrates that the first computing device allocates the one or more computational resources through the online marketplace server . However it will be apparent to a person having ordinary skill that the scope of the disclosure is not limited to sub allocation of the one or more computational resources through the online marketplace server . The first computing device can directly sub allocate the one or more computational resources to the one or more second computing devices .

In such a case the first computing device includes a publishing module. In an embodiment the publishing module hosts a website using one or more web hosting applications such as but is not limited to Apache IIS Nginx and GWS. Further the publishing module publishes the availability of the one or more computational resources on the website along with the SLA associated with the one or more computational resources. At least one of the second computing devices sends a request for the one or more computational resources to the first computing device through the website.

On receiving the request the first computational resource manager sub allocates the one or more computational resources to the at least one of the second computing devices . The first computational resource manager sends the information associated with the one or more computational resources to the at least one of the second computing devices . Further the first computational resource manager monitors the usage of the one or more computational resources by the at least one of the second computing devices .

During peak workload the first computing device preempts the one or more computational resources from the at least one of the second computing devices . The first billing module bills the at least one of the second computing devices based on the usage of the one or more computational resources.

The disclosed embodiments encompass various advantages. The first computing device receives the first set of computational resources from the cloud infrastructure . The first computing device reserves the one or more computational resources from the first set of computational resources for the peak workload. The first computing device sub allocates one or more computational resources to the second computing devices . Further the one or more computational resources can be preempted based on the need the first computing device . The first computing device bills the second computing devices based on the usage of the one or more computational resources. Therefore sub allocating the one or more computational resources might be profitable for the first computing device . Furthermore the one or more computational resources are not kept idle until the peak workload. During the non peak workload the one or more computational resources are utilized by the second computing devices . Thus the one or more computational resources are efficiently utilized.

The disclosed methods and systems as illustrated in the ongoing description or any of its components may be embodied in the form of a computer system. Typical examples of a computer system include a general purpose computer a programmed microprocessor a micro controller a peripheral integrated circuit element and other devices or arrangements of devices that are capable of implementing the steps that constitute the method of the disclosure.

The computer system comprises a computer an input device a display unit the Internet and a network. The computer further comprises a microprocessor. The microprocessor is connected to a communication bus. The computer also includes a memory. The memory may be Random Access Memory RAM or Read Only Memory ROM . The computer system further comprises a storage device which may be a hard disk drive or a removable storage drive such as a Solid state drive SSD optical disk drive etc. The storage device may also be a means for loading computer programs or other instructions into the computer system. The computer system also includes a communication unit. The communication unit allows the computer to connect to other databases and the Internet through an Input output I O interface allowing the transfer as well as reception of data from other databases. The communication unit may include a modem an Ethernet card or other similar devices which enable the computer system to connect to databases and networks such as LAN MAN WAN and the Internet. The computer system facilitates inputs from a user through input device accessible to the system through an I O interface.

The computer system executes a set of instructions that are stored in one or more storage elements in order to process input data. The storage elements may also hold data or other information as desired. The storage element may be in the form of an information source or a physical memory element present in the processing machine.

The programmable or computer readable instructions may include various commands that instruct the processing machine to perform specific tasks such as steps that constitute the method of the disclosure. The method and systems described can also be implemented using only software programming or using only hardware or by a varying combination of the two techniques. The disclosure is independent of the programming language and the operating system used in the computers. The instructions for the disclosure can be written in all programming languages including but not limited to C C Visual C Visual Basic JAVA Python and Ruby on Rails. Further the software may be in the form of a collection of separate programs a program module containing a larger program or a portion of a program module as discussed in the ongoing description. The software may also include modular programming in the form of object oriented programming. The processing of input data by the processing machine may be in response to user commands results of previous processing or a request made by another processing machine. The disclosure can also be implemented in all operating systems and platforms including but not limited to Unix DOS Android Symbian and Linux .

The programmable instructions can be stored and transmitted on a computer readable medium. The disclosure can also be embodied in a computer program product comprising a computer readable medium or with any product capable of implementing the above methods and systems or the numerous possible variations thereof.

Various embodiments of the disclosure titled method and systems for sub allocating computational resources have been disclosed. However it should be apparent to those skilled in the art that many more modifications besides those described are possible without departing from the inventive concepts herein. The embodiments therefore are not to be restricted except in the spirit of the disclosure. Moreover in interpreting the disclosure all terms should be understood in the broadest possible manner consistent with the context. In particular the terms comprises and comprising should be interpreted as referring to elements components or steps in a non exclusive manner indicating that the referenced elements components or steps may be present or utilized or combined with other elements components or steps that are not expressly referenced.

A person having ordinary skills in the art will appreciate that the system modules and sub modules have been illustrated and explained to serve as examples and should not be considered limiting in any manner. It will be further appreciated that the variants of the above disclosed system elements or modules and other features and functions or alternatives thereof may be combined to create many other different systems or applications.

Those skilled in the art will appreciate that any of the aforementioned steps and or system modules may be suitably replaced reordered or removed and additional steps and or system modules may be inserted depending on the needs of a particular application. In addition the systems of the aforementioned embodiments may be implemented using a wide variety of suitable processes and system modules and is not limited to any particular computer hardware software middleware firmware microcode etc.

It will be appreciated that variants of the above disclosed and other features and functions or alternatives thereof may be combined into many other different systems or applications. Various presently unforeseen or unanticipated alternatives modifications variations or improvements therein may be subsequently made by those skilled in the art which are also intended to be encompassed by the following claims.

