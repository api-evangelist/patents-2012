---

title: Feature design for character recognition
abstract: An exemplary method for online character recognition of characters includes acquiring time sequential, online ink data for a handwritten character, conditioning the ink data to produce conditioned ink data where the conditioned ink data includes information as to writing sequence of the handwritten character and extracting features from the conditioned ink data where the features include a tangent feature, a curvature feature, a local length feature, a connection point feature and an imaginary stroke feature. Such a method may determine neighborhoods for ink data and extract features for each neighborhood. An exemplary character recognition system may use various exemplary methods for training and character recognition.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08463043&OS=08463043&RS=08463043
owner: Microsoft Corporation
number: 08463043
owner_city: Redmond
owner_country: US
publication_date: 20120618
---
This application is a continuation of U.S. patent application Ser. No. 13 118 045 filed on May 27 2011 which is a continuation of U.S. patent application Ser. No. 11 772 032 titled Feature Design for HMM Based Eastern Asian Character Recognition filed on Jun. 29 2007 now U.S. Pat. No. 7 974 472 all of which are incorporated herein by reference in their entirety.

Online handwritten Eastern Asian character recognition is a useful feature for mobile computing devices such as Tablet PCs mobile phones and PDAs. Many character recognition systems use a Hidden Markov Model HMM approach to recognize characters based on stochastic time sequential data noting that HMM approaches have been used for years in speech recognition which inherently rely on temporal information. An individual HMM includes states and state transitions that can be trained using appropriate training information. A group of trained HMMs and input information e.g. online character information can be used to predict a probable outcome for the input information e.g. a character corresponding to the character information .

To apply a HMM approach to online Eastern Asian character recognition a character sample is represented as time sequential data according to a set of online features. More specifically a process sometimes referred to as feature extraction is applied to online ink data to provide corresponding feature information. Given such information a training process can build trained HMM models for use in online character recognition.

For online character recognition feature extraction is applied to online ink data for a character and the resulting feature information is input to the trained HMMs. Next the output from the trained HMMs is used to select a character that corresponds to the feature information and indirectly to the online ink data. Accuracy of the trained HMM models depends on a variety of factors including the selected set of online features. In general the selected set of online features should be rich enough to encode handwritten Eastern Asia characters and effective to recognize various characters. Various techniques described herein pertain to designing useful online features fitting a HMM modeling approach.

An exemplary method for online character recognition of East Asian characters includes acquiring time sequential online ink data for a handwritten East Asian character conditioning the ink data to produce conditioned ink data where the conditioned ink data includes information as to writing sequence of the handwritten East Asian character and extracting features from the conditioned ink data where the features include a tangent feature a curvature feature a local length feature a connection point feature and an imaginary stroke feature. Such a method may determine neighborhoods for ink data and extract features for each neighborhood. An exemplary Hidden Markov Model based character recognition system may use various exemplary methods for training and character recognition.

Techniques for use in online character recognition systems for East Asian characters are described herein. Various techniques include defining features and using the defined features to extract information from online ink data for East Asian characters. The extracted information sometimes referred to as feature information can be used to train a character recognition model or can be input to a character recognition model that in turn outputs a character that corresponds to the feature information.

More specifically an exemplary method processes time sequential online ink data for an East Asian character to provide feature information which is then input to a character recognition model. Ink data processing can include where required re sampling to ensure uniform spacing of ink data points for each character stroke. Ink data processing can break ink data into frames where the frames can be analyzed with respect to a set of predetermined features. For example as described below an exemplary set of features includes a tangent feature a curvature feature a local length feature a connection point feature and an imaginary stroke feature. In turn this set of features can enhance character recognition.

Features are described with respect to rules which may be mathematical equations. A feature may be characterized using a number e.g. an angle a length etc. numbers e.g. coordinates etc. or other representation. A relationship may exist between features where such a relationship may be quantified for purposes of character recognition. Extracted features of ink data may be represented in the form of a vector or array for example as suitable input for a recognition system.

Features allow ink data to be reduced in a manner that focuses on preserving characteristics that enhance or otherwise facilitate recognition. Feature extraction can also act to eliminate data or characteristics that are irrelevant or diminish recognition accuracy.

Offline handwriting data is usually converted into an image that lacks temporal information whereas online handwriting data may be collected a tablet device that samples a series points for a pen tip trajectory. While the timings of only show Cartesian coordinates and a time stamp online handwriting data may included other information such as pressure and speed information. Therefore online handwriting data has richer information than offline handwriting data. More specifically online handwriting data typically includes information as to writing order of several strokes such as the sequential points through that correspond to three stokes of a character. This information can be utilized to improve accuracy of a handwriting recognition system especially for recognition of online handwritten characters.

Devices configured to record handwriting typically rely on interaction between a writing implement e.g. a pen and a recording surface. When forming a character each ink stroke may be recorded as a sequence of sampling points evoked by a pen tip s touch on a tablet which represents the pen tip s trajectory between pen down and pen up. A user may also lift the writing implement between strokes such that movement of the implement is not recorded however movements not associated with ink strokes may be considered trivial compared to movements for ink strokes. More generally a handwritten character has one or more ink strokes which are not continuous in coordinates. For East Asian characters a user may write a character consistently with a fixed number of strokes or a variable stroke number. For example consider the cursive and printed versions of the character . In cursive East Asian character writing a user tends to connect several part of a character into one part by writing it with only one stroke noting that a user may use more than one stroke. In contrast for printing East Asian characters a user s stroke number for a character is usually quite stable. Whether an inconsistency arises in cursive writing or printed writing inconsistency in stroke number for writing East Asian characters introduces some difficulties in building a HMM model for character recognition.

Referring again to the character of one or more imaginary strokes can be identified to facilitate modeling for character recognition. For example an imaginary stroke can be defined as an imaginary linear movement of a pen from a previous stroke s pen up to the next stroke s pen down. With imaginary strokes between neighboring real strokes all strokes are connected to form a continuous trajectory on which a HMM can be build to model a handwritten character.

To overcome limitations associated with uneven and redundant data points the method includes data conditioning using a uniform sampling block that converts the acquired time sequential data for a character into uniform sampled data for the character . In this example the uniform sampling includes sampling for real strokes and for imaginary strokes. Some temporal information is preserved in uniform sampling in particular sequence is preserved. Further for imaginary strokes points include temporal information as well. Through such conditioning the character can be represented as a contiguous sequential set of data points in a two dimensional space.

In the example of uniform sampling segments original ink data into equal distant two point ink frames. Comparing with original sampling this approach of framing is independent of writing speed. Thus a HMM based recognition system can operate independent of writing speed i.e. the model does not have to account for writing speed . Another benefit of uniform sampling is the ability to filter out redundant points as acquired by the originally sampling technique. Overall a uniform sampling approach can make a HMM model more robust and efficient.

As described herein a HMM based character recognition system uses local information of ink to recognize a handwritten character. The method provides such information. In particular the method uses a frames approach that separates ink trajectories for both real strokes and imaginary strokes into ink frames. A frame block assigns frames to the uniform data for the character as indicated by the dotted line boxes in the character noting that the frames in this example include real stroke frames and imaginary stroke frames. With imaginary strokes a contiguous set of time sequential frames can be generated. By including imaginary strokes ink data for a handwritten printed character can be represented as one whole sequence. Further information included in imaginary strokes becomes available for training and character recognition see e.g. feature of . While frames shown are two point frames other criteria may be used for frames e.g. three point frames etc. .

After the character data has been broken into frames then in a feature extraction phase a feature block extracts local features on each ink frame per the table e.g. frame includes feature feature etc. where feature may be a parameter for information as to the nature or character of the feature . Feature extraction optionally includes neighborhood identification as explained further below. Information from the feature extraction phase may then be analyzed locally within a neighborhood or globally and input to a character recognition system to make a recognition decision.

In some instances data may be acquired by one device and conditioned by another device for use in training and or character recognition. For example a tablet device may be a portable lightweight device that communicates wirelessly with another computing device. In such an arrangement the tablet device may simply sample a user s handwriting at a set sampling rate and stream such data to the other device for conditioning and recognition. Consider a remote control for a home entertainment system a tablet may simply act to acquire data and transmit it to a set top box or computer that includes character recognition software and home entertainment software. As a user draws a character on the tablet the other device may show the recognized character on a screen e.g. a television screen and then take appropriate action based on the character e.g. where the character is an instruction or part of an instruction .

The ink data modules include an acquisition module for acquisition of time sequential ink data a uniform sampling with imaginary strokes module for ensuring uniform sampling of data for further analysis and a frame module for assigning frames to the ink data. In instances where cursive data is acquired imaginary strokes may be assigned to portions that connect identified real strokes of the cursive data.

Once ink data has been conditioned according to one or more of the modules then feature extraction may occur using the feature extraction modules . The feature extraction modules include modules for a tangent feature a curvature feature a local length feature a connection point feature and an imaginary stroke feature .

The features and are explained in more detail below with respect to respectively. shows the tangent feature as applied to uniformly sampled points for a portion of a character . A group of arrows is representative of eight predominant writing directions for handwritten East Asian characters. While the directions are offset by 45 this is mainly for purposes of explanation as some variations may occur between these eight directions. In general a real stroke is defined as a trajectory from a pen down to a pen up which may include a substroke trajectory in one direction and another substroke trajectory in another direction. Substrokes include one or more frames. As described herein the tangent feature allows substrokes and or frames to be classified as being along one of the eight directions. As shown in the directions depend on time sequential information. For example a substroke with a tangent direction of 135 and a substroke with a tangent direction of 315 would appear the same but can be distinguished based on temporal information i.e. information pertaining to starting point and ending point of the substroke or stroke .

The tangent feature can assess a character as a link of direction movements. For example given ink sampling points x y x y . . . x y a tangent feature on frame i is defined as x y where x x x y y y. In these equations the tangent feature relates to movement of the writer s pen tip on frame i. Where uniform sampling is applied and a frame is defined as being two successive sampled points each frame s length is the same and the tangent feature captures writing direction for a frame. The frame feature module can provide a pair of parameter values that indicate a direction for each frame e.g. tan y x .

Trials using a HMM based character recognition system demonstrated that the curvature feature is helpful to recognize a state transition from a previous writing direction to the next writing direction because a sufficiently large turn angle is observed when writing direction is changed see e.g. the eight directions of . As already mentioned HMM models rely on state transitions and hence a feature that provides transition information improves recognition accuracy significantly.

As mentioned the tangent feature can provide a pair of parameter values for each frame e.g. x y . To assess local length an algorithm may start with a given frame i and transit to one or more preceding frames e.g. i 1 i 2 and one or more successive frames e.g. i 1 which may occur one by one. In a particular example when transiting frames turning angle e.g. absolute value of tangent angle difference between two frames between frames is accumulated and if the accumulated turn angle is above a given predetermined threshold e.g. about 30 transit is stopped and the transited frames are classified as belonging to a neighborhood. After the neighborhood is determined accumulated length for the neighborhood may be calculated and used in training and character recognition.

The method is for marching forward to successive frames noting that a similar method can be used for marching backward to preceding frames. In a selection block a frame i is selected with a frame j in the neighborhood of frame i. Next a determination block determines turning angle for the frame j in the neighborhood to its successive frame j 1. A decision block decides if the angle is OK for example whether it meets one or more criteria e.g. direction limits . As indicated in the example of the decision block may consider cumulative angle and or turning angle to make such a decision. If the decision block decides that the criterion or criteria are met then the frame j 1 is marked per block as being in the neighborhood of frame i and the counter j may be incremented per block e.g. set to j 1 . If the angle is not OK then the frame is not in the neighborhood per block which can indicate that frame j is the last frame in the neighborhood. The method may calculate a local length for the identified neighborhood per a local length block . Referring to the character portion the frame i 2 as analyzed with respect to frame i may cause the cumulative angle to exceed a limit. Hence one neighborhood may include frames i 2 to i 1 and the block may recommence the method at frame i 2 to determine the extent of an adjacent neighborhood.

As described herein local length is determined for a neighborhood. Where uniform sampling is used the length of each frame is the same. Thus the local length of a neighborhood may be calculated as the number of frames multiplied by the frame length. Alternatively the number of frames alone in a neighborhood can serve as a local length parameter value. In some instances these approaches provide estimates of actual local length noting that turning angle and or cumulative angle criteria can affect the accuracy of such estimates. In other words where the cumulative angle criterion for a neighborhood is large then it is likely that the frame length multiplied by the number of frames in the neighborhood will be a rough estimate of local length.

To calculate a parameter value for cross connections all cross connection points between strokes are found first and each connection point is associated with two ink frames that make the cross. The same approach can be used for T connections. Per the exemplary method a determination block determines a neighborhood for a frame and then another determination block determines connection point count e.g. X count or T count or total X and T count or counts e.g. X count and T count for the neighborhood. In other words when calculating a connection point count feature parameter value for a frame the frame s neighborhood is found first then in the neighborhood all connection points of a certain type or types are counted.

As described herein an exemplary method for online character recognition of East Asian characters can include acquiring time sequential online ink data for a handwritten East Asian character conditioning the ink data to produce conditioned ink data that includes information as to writing sequence of the handwritten East Asian character and extracting features from the conditioned ink data where the features include a tangent feature a curvature feature a local length feature a connection point feature and an imaginary stroke feature. An exemplary method may include fewer than all of these features and may include other features.

In the aforementioned method conditioning can generate ink data frames of uniform length for example as defined between two ink data points. As mentioned conditioning can generate a series of contiguous ink data frames that includes real stroke frames and imaginary stroke frames.

As mentioned an exemplary method can determine neighborhoods where the neighborhoods are made of successive ink data frames. For example in determining neighborhoods a method can determine a turning angle between two adjacent ink data frames determine a cumulative angle based on the turning angle and at least one other turning angle and compare the cumulative angle to a predetermined threshold to decide if the two adjacent ink data frames belong to the same neighborhood. For each neighborhood a method can extract a local length feature.

With respect to a tangent feature a method can determine a x value and a y value for each ink data frame e.g. for a x y Cartesian coordinate system and with respect to a curvature feature a method can determine a sine value and a cosine value for an angle between two adjacent ink data frames.

An exemplary method can use extracted features to train a Hidden Markov Model based character recognition system and to select an East Asian character as associated with a handwritten East Asian character using a Hidden Markov Model based character recognition system.

An exemplary computing device can include a processor a user input mechanism a display and control logic implemented at least in part by the processor to recognize an online handwritten East Asian character based on a character recognition algorithm that uses a Hidden Markov Model and features extracted from online handwritten East Asian character ink data. Such features may include one or more of the following a tangent feature a curvature feature a local length feature a connection point feature and an imaginary stroke feature. Such a computing device can include control logic to uniformly sample the ink data and to generate ink data frames of uniform length control logic to generate a series of contiguous ink data frames from the character ink data where the series of ink data frames includes real stroke frames and imaginary stroke frames control logic to generate ink data frames from the character ink data and to determine for a x y Cartesian coordinate system a x value and a y value for each ink data frame control logic to generate ink data frames from the character ink data and to determine a sine value and a cosine value for an angle between two adjacent ink data frames and control logic to generate ink data frames from the character ink data and to determine neighborhoods wherein each neighborhood comprises successive ink data frames. An exemplary computing device may be a cellular phone or other handheld computing device e.g. a PDA etc. .

The computing device shown in is only one example of a computer environment and is not intended to suggest any limitation as to the scope of use or functionality of the computer and network architectures. Neither should the computer environment be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the example computer environment.

With reference to an exemplary system for implementing an exemplary character recognition system that uses a features based approach to conditioning ink data includes a computing device such as computing device . In a very basic configuration computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. System memory typically includes an operating system one or more program modules and may include program data . This basic configuration is illustrated in by those components within dashed line .

The operating system may include a component based framework that supports components including properties and events objects inheritance polymorphism reflection and provides an object oriented component based application programming interface API such as that of the .NET Framework manufactured by Microsoft Corporation Redmond Wash.

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Thus computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well know in the art and need not be discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a network. Communication connection s is one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.

Various modules and techniques may be described herein in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include routines programs objects components data structures etc. for performing particular tasks or implement particular abstract data types. These program modules and the like may be executed as native code or may be downloaded and executed such as in a virtual machine or other just in time compilation execution environment. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.

An implementation of these modules and techniques may be stored on or transmitted across some form of computer readable media. Computer readable media can be any available media that can be accessed by a computer. By way of example and not limitation computer readable media may comprise computer storage media and communications media. 

Referring again to an exemplary computing device may include a processor a user input mechanism e.g. a mouse a stylus a scroll pad etc. a display and control logic implemented at least in part by the processor to recognize an East Asian character based on a character recognition algorithm that uses a Hidden Markov Model and a features based approach to extract information from time sequential ink data. Such a device may be a cellular telephone or generally a handheld computer.

One skilled in the relevant art may recognize however that the techniques described herein may be practiced without one or more of the specific details or with other methods resources materials etc. In other instances well known structures resources or operations have not been shown or described in detail merely to avoid obscuring aspects of various exemplary techniques.

While various examples and applications have been illustrated and described it is to be understood that the techniques are not limited to the precise configuration and resources described above. Various modifications changes and variations apparent to those skilled in the art may be made in the arrangement operation and details of the methods and systems disclosed herein without departing from their practical scope.

