---

title: Method and apparatus for policy-based network access control with arbitrary network access control frameworks
abstract: A method and apparatus for integrating various network access control frameworks under the control of a single policy decision point (PDP). The apparatus supports pluggable protocol terminators to interface to any number of access protocols or backend support services. The apparatus contains Trust and Identity Mediators to mediate between the protocol terminators and a canonical policy subsystem, translating attributes between framework representations, and a canonical representation using extensible data-driven dictionaries.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08713639&OS=08713639&RS=08713639
owner: Aruba Networks, Inc.
number: 08713639
owner_city: Sunnyvale
owner_country: US
publication_date: 20120713
---
This application is a Continuation of application Ser. No. 11 966 837 now U.S. Pat. No. 8 245 281 which claims priority from U.S. Provisional Patent Application No. 60 882 848 the entire contents of which are incorporated herein by reference.

The present invention relates to the field of network communication. More specifically the present invention relates to control of access to network and system resources by users and devices in a multiple network access control framework environment.

Historically controlling access to communication network resources has been accomplished by physical security techniques. In particular a user would require physical access to the network such as by being physically in a building in order to obtain access to the network. A general assumption in this scenario is that access to the building entitled the user access to the network communication resources.

With the growth and now prevalence of wireless network access the general assumption of physical access has been undone since it is impractical to limit radio waves to physical building boundaries. As a result various software authentication techniques and protocols have been developed which require users or network devices to identify themselves to the network prior to being granted access to the network.

Simultaneously requirements and conditions for granting network access have also become more complex. In some instances network access may be location or time dependant. In other instances network access may depend on a state of the device joining the network. The state may include factors such as a software version of the device timely anti virus checks or firewall configuration. The state is frequently simply referred to as the health or posture of the device.

As a result of these and other requirements network access control NAC has become a complex multi faceted problem involving a multiplicity of cooperating components operating within a well defined network access control framework. The cooperating components potentially include client software to assist in identification of the user and gathering of client device state network access devices NADs which assist in the enforcement of access control decisions and a policy decision point PDP . The PDP is where a network operator specifies access control policies and where an access control decision is made. In addition NAC frameworks generally also include various servers to assist the PDP such as audit servers to audit devices that do not have the necessary client software or specialized health or posture validation servers PVSs .

Several such frameworks have been proposed and are in early stages of deployment. Three such frameworks in particular are being actively adopted in the industry. The three frameworks are Cisco s Network Access Control CNAC Microsoft s Network Access Protection NAP and the Trusted Computing Group s Trusted Network Connect TNC .

Each of these frameworks has its strengths and weaknesses such as varying degrees of client support e.g. Windows XP versus Linux versus Vista access support e.g. VPN versus 802.1x versus EAPoUDP and enforcement support e.g. VLANs versus downloadable ACLs versus filters . As a result network operators are likely to deploy more than one framework in each of their respective networks. While similar these frameworks do have significant differences that are problematic in a multi framework deployment scenario.

Current state of the art strategies in this nascent area dictate two deployment scenarios that can be adopted by an organization that require multiple NAC frameworks to meet their disparate assessment and operating requirements. In one scenario the network access can be segmented in such a way that some assessments are done by one framework and others are done by a second framework. In another scenario the PDP of one framework handles all assessment requests but forwards or proxies assessments that it cannot handle to a PDP of another framework. One problem with either of these approaches is that the administrator has to manage policies on several PDPs each one different from the other. Another problem is the complex and perhaps subtle interactions between the frameworks leading to inconsistent or worse incorrect results. Even in a seemingly unified deployment where assessments that cannot be handled by one PDP are forwarded to a PDP belonging to another framework policy configurations can be conflicting thus leading to incorrect enforcement of the NADs.

Therefore what is needed is a solution that unifies multiple frameworks and coordinates their actions so that a correct end result is achieved. Such a unifying solution should meet the following requirements 

Problems with multi framework deployments can also manifest themselves in single framework deployments when the single framework is enhanced with new capabilities. Just as with multiple frameworks new features and capabilities need to be integrated with existing ones and they should all be controlled together in a unified and coordinated way. It would therefore be advantageous to provide solutions to these and other related problems.

An exemplary embodiment discloses a method of granting network access to a client in a communication network. The method comprises receiving a request to access the network from the client invoking an appropriate access protocol terminator receiving at least one attribute about the client from the appropriate access protocol terminator translating the at least one attribute to a canonical form and using the at least one attribute in canonical form to determine a service type.

Another exemplary embodiment discloses a computer readable medium having embodied thereon a program the program is executable by a machine to perform a method to grant access to a client in a communication network. The method comprises receiving a request to access the network from the client invoking an appropriate access protocol terminator receiving at least one attribute about the client from the appropriate access protocol terminator translating the at least one attribute to a canonical form and using the at least one attribute in canonical form to determine a service type.

Another exemplary embodiment discloses a system to grant network access to a client in a communication network. The system comprises a client protocol terminator configured to be coupled through a network access device to a remote client an access attribute translation device coupled to the client protocol terminator and configured to translate attributes from a first framework representation to a canonical representation and a policy database coupled to the access attribute translation device and configured to store protocol attributes relating to a plurality of frameworks.

Another exemplary embodiment discloses a system to grant network access to a client in a communication network. The system comprises a client protocol terminator means for coupling to a remote client an access attribute translation means for translating attributes from a first framework representation to a canonical representation and a protocol storage means for storing protocol attributes relating to a plurality of frameworks.

Described herein are various exemplary embodiments of a system with an apparatus for a PDP in an NAC framework such that the PDP can operate within specifications of multiple frameworks integrate with components of each framework and coordinate activities between components of all frameworks to achieve desired policy and access control decisions. Such a system is referred to as a Unified Trust and Identity Policy System UTIPS .

With reference to a high level system overview of a network includes one or more wired client devices used to access the network directly through a wired network access device NAD . The one or more wired client devices could be for example notebook or desktop computers. The high level system overview further includes one or more wireless client devices used to access the network directly through a wireless access device . The one or more wireless client devices could be for example personal data assistants PDAs or cellular phones capable of Internet access. Each of the various wired and wireless client devices plus others are known to a skilled artisan. Each of the client devices attempts access to the network directly through the wired or wireless NAD. Further a VPN based client device may also connect to the Internet and access the network indirectly through a VPN gateway network access device .

With continued reference to the exemplary embodiment of the high level system overview of the network of typical components of NAC frameworks further include enforcers which block client access to the network until they receive access control instructions from a PDP . Enforcers include the network access devices NADs which may include switches not shown routers at some routing boundary not shown and DHCP servers not shown .

The PDP orchestrates access control processes. Additionally backend servers may assist the PDP in making an access control decision. The backend servers may include one or more posture validation servers PVSs as defined in the CNAC framework one or more audit servers as defined in the CNAC framework and policy servers not shown as defined in the NAP framework. The backend servers may also include identity servers ID servers which are used to authenticate either devices or users. Other embodiments may have different network configurations and would be readily envisioned by one of skill in the art based on the exemplary embodiment of .

With reference to an exemplary logical structure of the NAC components in the high level system overview of is shown. indicates a central role of the PDP with links to other components. The links as shown merely represent protocol interactions and not necessarily physical data paths.

Some of the components in the exemplary logical structure have a basis in a subset of the frameworks. A benefit of the exemplary logical structure is an ability to integrate functionality from one framework into a deployment comprised of another framework. In some embodiments integration is possible with any type of component including but not limited to 

One embodiment of the exemplary logical structure of is shown in as an exemplary version of a Unified Trust and Identity Policy System UTIPS . The UTIPS comprises several components.

The UTIPS in this embodiment is a rules based policy subsystem for making policy decisions. The subsystem hosts a rules engine that evaluates rules for different types of policies. The subsystem processes each access request by means of a multi stage rules evaluation pipeline. Each stage is driven by one or more of the following inputs or attributes 

The attribute s or input s that are fed into each stage are specified by means of extensible data dictionaries. The extensible data dictionaries allow for extensions and modifications without any software upgrades or even a system restart. The output of each stage is a result or a set of results that can be fed into subsequent stages in the pipeline.

Each stage of the pipeline corresponds to rules evaluated for a specific type of assessment performed for a given network session. In one embodiment the different stages may include but are not limited to service assessment identity assessment health assessment and enforcement assessment. The service assessment results in a service type being assigned to the network session. The service type helps the subsystem to determine the type of authentication policies to evaluate in subsequent stages of the evaluation pipeline and other backend servers to contact as needed for subsequent health and identity assessments. Identity assessment results in a role or set of roles being assigned to the user or device that initiated the network session. Health assessment results in the subsystem assigning a health status to the device that initiated the session. The enforcement assessment stage takes as an input among other attributes results of the identity and health assessment stages and determines the network segment or VLAN access filters quality of service and other attributes to be enforced for that session on the NAD. The results may also contain provisioning instructions for the client device. As would be discernible to a skilled artisan based on the aforementioned description different stages may be employed in other pipelines or in other arrangements in other embodiments.

Linked to a policy subsystem are a collection of protocol terminators one for each access protocol. With reference again to three protocol terminators a RADIUS terminator a TACACS terminator and a SOAP terminator are shown. A protocol terminator may be common to several frameworks. For example the RADIUS terminator is common to both CNAC and NAP frameworks. However the set of attributes belonging to each framework may differ.

Attributes of a given framework are specified in a framework attribute database in one specific exemplary embodiment in the UTIPS database or other type of data structure. The attribute database specifies not only the attributes of a framework but also the translation of these attributes from the framework representation to a canonical representation that is used by the PDP see itself.

As attributes are passed from the protocol terminators to the policy subsystem and back they pass through an access protocol Trust and Identity Mediator TIM which translates attributes from one representation to another. The translation is driven off the specification in the framework attribute database for the specific framework. In addition to the framework attribute tables there are also access protocol attribute tables. The tables are checked if there is no entry in the framework tables. This allows for specifying translations that are specific to an access protocol but common to all frameworks. Since the framework specific information for the translation is obtained from the framework attribute database the access TIM is generic and a common one can be used for all frameworks and protocols.

The design of protocol terminators and TIMs on the client access side of the PDP may also be also employed on the backend service side of the PDP . Thus also shows several backend service protocols linked to the policy subsystem via a service TIM . The backend service protocols include for example an audit protocol terminator a PVS protocol terminator and an identity protocol terminator . The operation of the service translator is driven off service attribute translation databases one for each backend service. As with framework attribute translation tables there are also backend protocol translation tables which are specific to a backend protocol but common to all backend services using that protocol.

With reference to and continued reference to when the client attempts to connect to the network access by the client is blocked by one of several enforcers such as the NAD the DHCP server not shown or the VPN gateway through the VPN NAD . The enforcer that blocks access depends on a configuration of the network and the mechanism by which the client is accessing the network . Once blocked the client communicates with the PDP to negotiate access to the network using a protocol defined by the NAC framework the client supports.

To perform the communication the PDP invokes an appropriate protocol terminator to run the protocol state machine as specified by the protocol. Attributes from the initial exchange are delivered from the protocol engine to the policy subsystem of the PDP via the access trust and identity mediator which translates the attributes from a framework specific form such as CNAC NAP etc. to an internal canonical form. The attributes allow the policy subsystem to select the service type for the remainder of the exchange. The service type specifies for example the authentication and authorization rules that are to be applied such as what credentials to check for authentication whether one or two factor authentication is necessary what client attributes are needed for the policy decision and so on. The service type rules are specified in a canonical form and the input variables to the rules engine are obtained from the service TIM which has translated the inputs from the form specific to the framework into the canonical form required by the rules engine.

Having determined the service type the policy subsystem then informs the framework protocol engine the protocol terminators in a client protocol terminator in of the service type which allows the framework protocol engine to complete the authentication process and to request the additional required attributes from the client. Again the appropriate TIM converts the service specification from one form to the other in this case from the canonical form to the framework specific form. For instance CNAC and NAP have different packet formats for the attributes so the appropriate TIM would translate from the canonical form to a format understood by the appropriate framework.

In order to perform any conversions be they service types or attributes the TIM employs a conversion dictionary that specifies the translation. Using a dictionary makes it possible to add new service types and attributes without any software upgrades. In addition this makes any translator function generic and not framework specific. The framework specific aspects are encoded in the conversion dictionaries. Consequently new frameworks can be easily added to the system by simply adding new conversion dictionaries to the database of conversion dictionaries. Protocol terminators however may need to be implemented by additional plug ins. An exemplary embodiment implements these protocol terminators with loadable modules so that they can be added to an existing and running system.

After completing the framework protocol state machine according to the parameters of the service type the protocol terminator returns the results in the form of attributes to the TIM which translates these attributes into canonical forms and passes them on to the policy subsystem . The policy subsystem then applies the policy rules by running through the multi stage rules engine pipeline as necessary soliciting assistance from back end servers as necessary. Once a policy result has been determined the result is passed back to the framework protocol engine which delivers the result to the NAC enforcer e.g. the NAD DHCP or VPN server . The result may contain any data such as provisioning instructions for both the enforcer and the client instructions allowing access instructions denying access etc. As with the service types the access protocol TIM converts the provisioning instructions from a canonical form to a framework specific form by means of attribute conversion dictionaries stored in a policy database .

An exemplary operational flow is shown in . The operational flow in this exemplary embodiment may be readily considered in terms of the following informational transfer of information as indicated diagrammatically in 

The method of the exemplary operational flow may be implemented by software a processor readable medium having stored thereon instructions which when read cause a process or other electronic devices to perform a process or method. The processor readable medium may include but is not limited to floppy diskettes optical disks CD ROMs Compact Disc Read Only Memories magneto optical disks ROMs Read Only Memories RAMs Random Access Memories EPROMs Erasable Programmable Read Only Memories EEPROMs Electrically Erasable Programmable Read Only Memories magnetic or optical cards flash memory or other type of media processor readable medium suitable for storing electronic instructions.

Moreover the processor readable medium may also be downloaded as a computer program product wherein the program may be transferred from a remote computer e.g. a server to a requesting computer e.g. a client by way of data signals embodied in a carrier wave or other propagation medium via a communication link e.g. a modem or network connection . Accordingly herein a carrier wave shall be regarded as comprising a processor readable medium.

In a specific exemplary embodiment software for the implementing the method may be running at the PDP or other devices as shown in . The PDP or other devices may be any network device capable of storing the software for implementing the method.

In the foregoing specification the present invention has been described with reference to specific embodiments thereof. It will however be evident to a skilled artisan that various modifications and changes can be made thereto without departing from the broader spirit and scope of the present invention as set forth in the appended claims. For example although a method of the present invention is described primarily in reference to access to a simplified network skilled artisans will appreciate that the present invention may also be practiced with a far more complicated network structure. For example a network with thousands of clients and NADs and numerous authentication backend servers may use a scaling of the methods provided herein. Further the method described in granting network access to a client may be repeated on a periodic basis rather than merely once per session. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense.

