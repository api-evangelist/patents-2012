---

title: System and method for synchronizing and prioritizing multiple disparate retail systems
abstract: A method and system for synchronizing and prioritizing messages from separate systems includes receiving a message from a computer network having a unique identifier. Next, this message having the unique identifier may be compared to at least one of a rule and a formula stored in a database. If the message with the unique identifier matches at least one of a rule and a formula stored in the database based on the unique identifier, then the message may be supplemented with an action identifier. Subsequently, the message may be prioritized relative to one or more other messages based on at least one of a source identifier and the action identifier. The message may then be transmitted to a notifier. The notifier may relay the message over the communications network to at least one of an application content provider (ACP) and/or a target application upon receiving a request for transmitting messages.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09264485&OS=09264485&RS=09264485
owner: Reflexis Systems, Inc.
number: 09264485
owner_city: Dedham
owner_country: US
publication_date: 20120621
---
Priority under 35 U.S.C. 119 e is claimed to U.S. provisional application entitled METHOD AND SYSTEM FOR PROVIDING ADAPTIVE LABOR ALLOCATION filed on Jun. 22 2012 and assigned U.S. provisional application Ser. No. 61 499 969. The entire contents of this provisional patent application is hereby incorporated by reference.

Conventionally merchants who sell goods and or services typically rely upon multiple separate and discrete systems for managing events that occur usually in a retail context. For example a merchant may rely upon a first system sold by a first manufacture that manages checkout and point of sale POS purchases. The same merchant may also rely upon a second system sold by a second manufacture which monitors store activity and the number and type of patrons who may enter a facility operated by the merchant for selling the goods and or services. The merchant may also have a third system sold by a third manufacture which monitors security and suspicious activity for the facility.

In such an exemplary scenario the merchant must check in with each of the three systems to monitor the ongoing activities of his or her retail facility. In many circumstances the merchant must hire separate employees to monitor and manage each of the three separate systems. Even with three separate employees to manage each of the three separate systems a merchant does not have all the tools he or she needs to prioritize and monitor the data generated by the three separate systems.

Accordingly what is needed in the art is a method and system for synchronizing and prioritizing multiple disparate systems that may help merchants in a retail environment such as those described above.

A method and system for synchronizing and prioritizing messages from separate systems includes receiving a message from a computer network having a unique identifier. Next this message having the unique identifier may be compared to at least one of a rule and a formula stored in a database. If the message with the unique identifier matches at least one of a rule and a formula stored in the database based on the unique identifier then the message may be supplemented with an action identifier. Subsequently the message may be prioritized relative to one or more other messages based on at least one of a source identifier and the action identifier.

The message may then be transmitted to a notifier. The notifier may relay the message over the communications network to at least one of an application content provider ACP and or a target application upon receiving a request for messages from an ACP and or target application. Each unique identifier may comprise alphanumeric characters.

Prioritizing the message may include prioritizing the message using weighting wherein the weighting comprises an integer value reflecting a relative importance based on one of a source of the message and an action associated with the message. Weighting may also be assigned to a message based on at least one of the source identifier and action identifier. Each action associated with a message may be assigned a predetermined lifespan. Near the end of processing data that comprises a prioritized list of events based on a plurality of messages that were matched against at least one rule or formula in a database may be provided.

This summary is provided to introduce a selection of concepts that are further described below in the detailed description. This summary is not intended to identify key or essential features of the claimed subject matter nor is it intended to be used as an aid in limiting the scope of the claimed subject matter.

The word exemplary is used herein to mean serving as an example instance or illustration. Any aspect described herein as exemplary is not necessarily to be construed as exclusive preferred or advantageous over other aspects.

Referring now to the figures illustrates an exemplary embodiment of a system for synchronizing and prioritizing multiple disparate systems. The system may comprise one or more source applications a channel adapter a notifier a notifier database one or more application content providers and one or more portable computing devices .

Each of these elements may be coupled to one another through a computer communications network . The computer communications network may comprise a wide area network WAN the plain old telephone system POTS a local area network LAN the Internet or any combination of these and other networks. Through the network the channel adapter may communicate with a notifier database and one or more notifiers .

The target applications and application content providers may communicate with the portable computing device over the network as well. The portable computing devices PCDs may take on many different forms such as desktop computers laptop computers tablet personal computers PCs handheld devices such as personal digital assistance PDAs in addition to other smart devices such as smartphones and cellular telephones. Any device which may access the network whether directly or via a tether to a complimentary device may be characterized as a PCD .

The PCDs as well as the channel adapter along with the notifiers target applications and application content providers may be coupled to the network by various types of communication links . These communication links may comprise wired as well as wireless links. Wireless links include but are not limited to radio frequency RF near field communications NFC optical such as infrared magnetic and or acoustic types of communication links. The communication links allow each of the devices systems to establish direct virtual links among one another.

A source application may comprise any type of hardware and or software which monitors activities events transactions and or services for a retail establishment. For example the source application may comprise a traffic counter which counts the number of customers entering the retail establishment. The source application may comprise a camera an inventory system an RFID system and other similar systems. The source application may also comprise one or more combinations of systems that track activity within a retail establishment.

The source application may be coupled to a channel adapter . While the source application is illustrated in is being directly coupled to the channel adapter it is understood to one of ordinary skill in the art that this coupling may comprise a virtual connection or virtual coupling in which the source application is coupled to the channel adapter through a communication link established by the communications network . However for simplicity this link between the source application and the channel adapter has been illustrated with a direct link between these two system elements.

The source application may transmit messages to the channel adapter . The channel adapter may comprise business logic which will be described in detail below. The source application may determine that an event has occurred which needs attention of a merchant and it may generate a message that is transmitted to the channel adapter which may describe this event.

The source application may comprise its own system or server that is separate relative to the channel adapter . The channel adapter may comprise its own server relative to the source application and the notifier . Alternatively the channel adapter and the notifier may be executed with a single server relative to the source application .

The channel adapter is coupled to a notifier database as well a notifier via the communications network . The channel adapter may search the notifier database so that the channel adapter may match a message from the source application with the notifier .

The notifier database may further comprise formulas and or rules that inform the channel adapter how to manage messages that it may receive from one or more different types of source applications . The notifier database may comprise a sequential query language SQL database or any other type of database software and or hardware as understood by one of ordinary skill in the art.

Each message generated by the source application may comprise an open text message that is uniquely formatted for each source application . The channel adapter is provided with data about message formatting so that the channel adapter may extract relevant portions of the open text message that may be destined for a specific notifier . This data on the formatting of a message from a source application may be stored in the notifier database and retrieved by the channel adapter when the channel adapter matches a message with data in the notifier database .

If a message generated by a source application qualifies to be passed on to a particular notifier as determined by the formulas and or rules stored in the notifier database which are reviewed by the channel adapter then the channel adapter may transmit or relay the message to a specific notifier that was identified from the notifier database . A specific notifier for each particular message may be identified by the channel adapter based on the content and type of message received.

For example the source application may comprise a method or system for detecting a high valued patron of a retail establishment. In one exemplary embodiment the source application may comprise hardware and or software for detecting customer identifiers associated with portable computing devices like mobile phones. Based on a particular customer identifier the source application may determine that a person or operator of the portable computing device is a high valued patron relative to the retail establishment.

The source application may construct a message to alert appropriate personnel of the retail establishment that a high valued patron has entered the space of the retail establishment. According to one exemplary embodiment this message may start with the alpha numeric characters HVP1 which may translate to high valued patron one.

The source application may also include within that message the exact location at which the high valued patron was detected such as at the entrance of the space of the retail establishment. The message may also comprise a digital image of the high valued patron captured by a camera operated by the source application .

The source application may further comprise or be coupled to another source application that includes an affinity database that comprises additional information stored about various high valued patrons. For example based on the mobile phone number acquired by the source application the source application may search an affinity database not illustrated but part of source application in order to gather additional information about the high valued patron such as preferences of the high valued patron. The source application may include some or all of this information gathered about the high valued patron and place this information in the message which is sent to the channel adapter .

The source application may create a unique message identifier for this particular message corresponding to the high value patron entrance event described above. For example the source application in this exemplary embodiment may create the unique message identifier of HVP1001. This message is then transmitted to the channel adapter .

The channel adapter accesses the rules and or formulas associated with the retail establishment for the source application that are stored in the notifier database . The channel adapter may then process the message according to the rules and or formulas. Each rule may link an action if a condition identified from a message exists.

According to the exemplary embodiment described above one rule may state that for each high value patron which enters the retail establishment send an e mail alert to the manager of the retail establishment so that the manager may greet the high valued patron personally. This means that when the channel adapter receives the message with the unique identifier HVP1001 this message may contain preferences associated with the high value patron in addition to the name of the patron.

This information may be relayed to an appropriate notifier that generates an e mail message that is transmitted to the store manager who also has a portable computing device so that the store manager may greet the high value patron in person by name and with knowledge of the preferences for the high value patron. Such a scenario may increase the chances that the manager may secure a sale with the high value patron. The rule in the notifier database may state that if a message comprises the character combination of HVP then specific one or more actions may need to be taken by the system such as generating an e mail message to the manager of the retail establishment described above.

If the channel adapter does not identify or locate any rules and or formulas associated with a message generated by the source application the channel adapter may just log the message occurred without taking any further action in association with the message. However as described above if the channel adapter does match a message produced by the source application with a rule and or formula then the channel adapter may assist with completing the action associated with the rule and or formula taken from the notifier database .

The channel adapter may also supplement the message that is passed on to a particular notifier . Specifically the channel adapter may supplement the message with additional actions that may be required of the notifier and or other systems that are coupled to the notifier . These message supplements may comprise alphanumeric text characters that may uniquely identify actions to be taken by the notifier and or other systems coupled to the notifier .

The notifier may receive the message from the channel adapter . The system may take on the form of an asynchronous model which is a store and forward model and that transmits messages to appropriate and relevant subsystems downstream. Based on the actions contained in the message which were generated by the channel adapter the notifier writes a database entry into the notifier database that may comprise a timestamp a flag such as but not limited to a bit that states the message entry is ready to process a source identifier and an action identifier. The source identifier is generated by the source application .

The action identifier comprises one or more actions that another subsystem may take in response to the message which was originally generated by the channel adapter . So for the exemplary embodiment described above if an e mail to the manager of the retail establishment is needed then the notifier writes the actions required of the subsystem that manages e mails for the retail establishment in the notifier database . At this stage the e mail to the manager of the retail establishment has not been created generated.

The notifier may be coupled to one or more application content providers ACPs . The application content providers are responsible for relaying the database entries created by the notifier to one or more target applications which may actually execute the action identifiers listed in the database. The application content providers routinely and constantly pinging sending requests to the notifier in order to pull database entries that have been created by the notifier in the database.

The application content providers may also comprise application programming interfaces APIs that allow them to communicate directly in the language of the target applications which will be executing the action identifiers written into the entries of the notifier database . The application content providers may also initiate or start one or more of the actions contained in a particular entry in the notifier database .

Relative to the notifier and channel adapter the application content provider may reside on a separate server relative to these two processing entities. In other exemplary embodiments the application content provider may reside on the same server as the channel adapter and notifier . Typically the target application usually resides on its own server relative to the application content provider .

However the number of servers and how each processing entity is assigned to a particular server is usually directly associated with the size and information needed to manage a particular retail establishment. Therefore a retail establishment that is relatively small in physical size and with respect to product inventory will usually have a more compact system in which two or more processing entities may reside on the same server.

Meanwhile in larger retail establishments that occupy entire buildings with multiple floors of inventory that generate significant volumes of information such retail establishments with the size would usually command each processing entity to reside on separate servers and in some cases each processing entity may require multiple servers due to the volume of information managed that is associated with the larger product and or service inventory.

In the e mail example sent to the portable computing device of the manager of the retail establishment described above an application content provider would have the requisite one or more program modules for creating an e mail that is destined for the portable computing device of the manager of the retail establishment. The application content provider may pass the e mail to a target application that can send the e mail over the computer communications network to the portable computing device of the manager.

As another example for an application content provider that works with a task management system that is part of a target application the application content provider may constantly send requests to notifier requesting that the notifier search the notifier database for particular tasks associated with the task management system. The application content provider may request the notifier to search for all tasks in the notifier database having a unique task identifier associated with an update status.

The notifier would then relay any tasks associated with that task ID back to the application content provider . The application content provider may perform an update to the task and then relay it to the target application that may comprise the task management system. The task management system target application may store the update to the task and alert an operator of the task management system of the update to the task.

The relationship between the application content provider and the notifier may be characterized as a request response model since the application content provider is constantly sending requests to the notifier . The notifier response to an application content provider by relaying a database entry from the database that is intended for the particular application content provider . The application content provider may be polling the notifier with requests every second every few minutes every few hours or several days during the week etc. depending upon the work associated and programmed for the application content provider .

The requests from the application content providers may be specific to particular source applications . The request may be specific in that a request may be tailored to a particular source identifier so that the application content provider may request the notifier to search for all recent database entries within the database and associated with a specific and unique source identifier as well as any action identifiers such as action identifiers associated with generating an e mail.

The notifier would then conduct a query of the database for all recent entries associated with the specific and unique source identifier. If any recent entries are found the notifier would then relay these database entries to the application content provider . The notifier would then mark each entry in the database that was forwarded to the application content provider as being old or already processed so that the notifier would not relay the same entry to an application content provider in a subsequent query of the database .

One unique aspect of the system is the simplicity of the model with respect to how information is segmented or compartmentalized among the various processing entities. The system also provides an advantage with respect to scalability in that it is a model which is easily scalable to larger retail establishments as well as smaller retail establishments. The system may link various disparate source applications with various disparate target applications which may be sold separately and produced manufactured by different companies. The system may be characterized as a universal translator model.

The channel adapter may function as a gatekeeper with respect to information being produced by the source application . The notifier constantly updates the notifier database with data that is qualified by the channel adapter which functions as the gatekeeper. The system may manage significantly large volumes of information from disparate source applications . The system organizes information and work that is required of target applications without the target applications becoming bogged down or overloaded with the volume of information produced by the source applications .

In this way the one or more source applications are free to produce data as quickly as they are capable of generating such data while target applications responsible for executing tasks or work associated with the data collected from the source applications at their own pace irrespective of the speed at which the source applications generate their data.

The system also allows a merchant such as a retailer to prioritize which information and what actions should be taken first in response to the data generated by the source applications. The system allows a merchant to prioritize actions of its target applications in response to the data that is collected from the source applications .

Referring now to this figure is a functional block diagram showing further detail of another exemplary embodiment of system for synchronizing and prioritizing multiple disparate systems as illustrated in . The system may assist a store manager of a retail establishment in managing and prioritizing information.

The system of is very similar to the system illustrated in . Therefore only the differences between these two systems will be described below.

According to the exemplary embodiment illustrated in several different source applications have been provided. For example the system may include a stock keeping unit SKU scan monitoring system A a customer tracking presence monitoring system B a customer service request system C a security monitoring system D a POS error monitoring system E and an inventory receiving system F.

Additionally the system further includes at least two target applications such as a task management system A and an e mail system B. As noted previously the system is not limited to the specific source applications and target applications illustrated in .

In a hypothetical complex scenario a truck full of new inventory may be arriving at the loading dock of a retail establishment facility at the same time as several high value patrons walking into the entrance of the same retail establishment. In parallel to these two events the point of sale terminals may be experiencing problems or glitches that need to be resolved. And at the same time a security alert may have been activated due to a potential shoplifting incident. The retail establishment has the system illustrated in in place to assist with managing these events.

These simultaneous events are representative of ones that managers of retail establishments may experience every day and within short timing windows such as within the order of 10 or 15 minutes or less. The system may assist the store manager in prioritizing which event needs to be addressed first and how each event may be addressed such as allocating personnel to each event.

According to the exemplary embodiment illustrated in the truck full of new inventory arriving at the loading dock of the retail establishment may be detected by the inventory receiving system F. Meanwhile high value patrons walking into the entrance of the same retail establishment may be detected with the customer tracking presence monitoring system B. Problems or glitches that need to be resolved with the POS terminals may be tracked with the POS error monitoring system E. The security alert indicating a potential shoplifting incident may be generated by the security monitoring system D.

In response to these events the system may generate an event ticker A that is displayable on a display device such as on a small screen of a smart phone such as illustrated by the user interface A in described below. The event ticker A may display the events as they occur in real time and in a real time sequence as well as providing a separate listing B illustrated in which prioritizes events based on rules and or formulas programmed into the notifier database .

The system and specifically the channel adapter and the notifier may comprise application programming interfaces APIs that may be provided to each source application and each target application so that each source application and each target application may communicate with the channel adapter and the notifier . These application programming interfaces APIs are supplied in appendix A of this disclosure.

As described above in connection with with the rules and or formulas of the notifier database a merchant may weight event types detected by the source applications so that the most important events are given priority over other types of events. One advantage of the system is that multiple disparate source applications may contribute to a single centralized system of serialization and prioritization. Serilization determines which steps occur in which order while Prioritization determines which steps or sequence of steps to perform first.

 Customer Service Request source application C believes its events are the highest priority for a merchant while Cash Register Errors detected by the POS error source application E believes its events are the highest priority for the merchant. Similarly Suspicious Customer Behavior detected by the security monitoring system D believes its events are at the highest priority for the merchant. Meanwhile Truck Arrival detected by the inventory receiving system F believes its events are at the highest priority for the merchant.

Each of these source applications may be autonomous and may have no knowledge of or visibility into the functional priorities of other source applications . With rules and or formulas of the notifier database the merchant may direct the priority such that events detected by the security monitoring system D are given more weighting or a higher weighting relative to events detected by the POS error source application E in the inventory receiving system F etc.

Another advantage of the system is that the metrics used in the notifier database to determine the Weighted value of each source application may change dynamically throughout the day. For example during certain times such as when the retail establishment is closed to the public the inventory receiving system F may have a higher greater weight higher priority relative to events which may be detected by the POS error source application E. These prioritization time windows may be configured to best model the expected activities of the retail establishment on a day to day basis.

Similarly the relative importance of a message Source and Action can vary across time. For example the weight assigned to events related to customer service may increase during peak shopping hours while the weight assigned to operational tasks such as receiving stocking etc. may increase during off peak shopping hours.

Additionally other metrics such as sales data staffing data profitability workload etc. may be bound to the method of prioritization and serialization. For example an action may be indicated based on the source message however the action may require staff or additional workload. The system may utilize current staffing and workload in prioritizing the action and can be directed to alert the store manager when action is indicated but store resources are not available to perform the action.

The system tracks the execution of the best practice actions that must occur in order to act on and otherwise fulfill the decisions that are reached by various decision management tools.

The following provide some exemplary ways in which formulas and or rules may be established within the notifier database Weighting by source weighting by action weighting by message type and actions driven by one or more formulas.

Each source event message generated by a source application may result in different actions depending on the message content and the parsing rules developed in the formulas used to evaluate the message which are stored in the notifier database . A specific source application may also have a job in retail that is considered high priority. As such messages from one source application may have higher importance for causing an immediate action compared to messages from some other source application . For example messages from the security monitoring system D may be weighted with higher importance compared to messages from the POS error monitoring system E.

To support source application prioritization each source application may be configured with a weight. Typically a weight may comprise an integer value the larger the sources application s weight the higher the importance of messages from that source. Other weighted metrics may also be applied to provide greater context value to the retailer. For example the weighted value may reflect impact to sales profitability operations customer service or other business driven factors with each metric contributing to an accumulated weight for action prioritization.

A given action may be indicated for by different source applications based on the formulas applicable to the originating source message. As such an action itself that has a common purpose may be requested from different business processes to satisfy disparate multi channel outcomes.

Each action may be configured with a weight. Typically the weight may comprise an integer value. The larger the actions weight the higher the importance of the action. Other weighted metrics may also be applied to provide greater context value to the retailer. For example the weighted value may reflect impact to sales profitability operations customer service or other business driven factors.

In this way when multiple actions have been queued for a given application content provider ACP the ACP may easily determine which action is of paramount importance based on its numerical weighting. Additionally because the same action may ultimately be invoked from different sources the weight of the source may be used to determine the macro priority for an action item.

For example if POS error monitoring system E with source weight value of 5 indicates an action with weight value of 5 and the security monitoring system D with a weight value of 10 indicates the same action with a weight value of 5 then the action requested by the security monitoring system D 10 5 50 will be processed first by the appropriate ACP compared to the action requested by the POS error monitoring system E 5 5 25 which is less than 50 . Additionally when the ACP requests Open Action Items from the notifier the notifier may deliver the requested action items in a weighted order.

A source event message generated by a source application may satisfy logical configuration requirements for one or many formulas stored in the notifier database . When the channel adapter encounters multiple action event formulas the channel adapter may require access to a sequencing prioritization model to determine the order in which formulas and their respective set of actions are processed.

Each formula may allow for configuration of priority. Similar to the weighting described above each priority may comprise integer values where a message with a value of 1 is processed before an message having a value of 3 and an message with a value of 3 is processed before a message assigned a value of 5 etc.

This priority may become important in some situations to accommodate internal control actions such as a Passthrough. A Passthrough action may be used to stop formula evaluation after processing a current formula.

Qualifying formulas may result in actions that are executed by target applications like the task management system A or e mail system B and or by an application content provider ACP . Multiple actions may be configured for each formula and each action may be processed by a different ACP . A single action may be staged queued to be processed by the action s respective ACP . This may be characterized as a standard asynchronous processing model async model . This async model presents challenges for prioritization since the actions themselves usually processed by their respective ACPs are also autonomous.

Because multiple actions can be assigned to a single formula and each action may have a different ACP a method to control the prioritization or sequence of execution for the actions may be linked to the formula.

Certain actions to be taken by a target application and or an application content provider may be designed for a limited time span. If an action is queued in the notifier database but the corresponding ACP is off line or otherwise disabled throttling etc. then the action itself may become irrelevant.

When an action is linked to a formula the action may be configurable allowing a specification for viable lifespan. The duration of the configured action may be designed to have at least one of two options a Never Expire and b Expire according to a time range such as in Hours Minutes and or Seconds.

For example if the lifespan for an action is set to 0 Hours 5 Minutes and 30 Seconds and the ACP requests new actions from the database after six minutes after the action is initially stored in the database the notifier will fail the request from the ACP and generate a negative acknowledgement NACK message that is relayed to the requesting ACP.

Prerequisite actions may allow support for workflow sequences. If a specific action is configured to have a prerequisite action the action will not be delivered based on an ACP request unless the prerequisite action has been processed 

 1 the prerequisite Action may be delivered normally to the ACP in this case any downstream action having the normally processed action as a prerequisite is available for delivery to an ACP if otherwise viable or

 2 the prerequisite action may have expired where each action having a prerequisite action may also allow for the configuration of cascade actions a expire when parent action expires or b remain available when parent action expires.

By designing actions with perquisites this allows the system to have workflow control and sequence control.

The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. The system memory includes a read only memory ROM and a random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is stored in ROM .

The computer may include a hard disk drive A for reading from and writing to a hard disk not shown a memory card drive for reading from or writing to a removable memory card and or an optional optical disk drive for reading from or writing to a removable optical disk such as a CD ROM or other optical media. Hard disk drive A and the memory card drive are connected to system bus by a hard disk drive interface and a memory card drive interface respectively.

Although the exemplary environment described herein employs hard disk A and the removable memory card it should be appreciated by one of ordinary skill in the art that other types of computer readable media which may store data that is accessible by a computer such as magnetic cassettes flash memory cards digital video disks Bernoulli cartridges RAMs ROMs and the like may also be used in the exemplary operating environment without departing from the scope of the invention. Such uses of other forms of computer readable media besides the hardware illustrated may be used in internet connected devices such as in portable computing devices PCDs that may include personal digital assistants PDAs mobile phones tablet portable computing devices and the like.

The drives and their associated computer readable media illustrated in provide nonvolatile storage of computer executable instructions data structures program modules and other data for computer . A number of program modules may be stored on hard disk memory card optical disk ROM or RAM including but not limited to an operating system channel adapter software modules A and notifier software modules B. Program modules include routines sub routines programs objects components data structures etc. which perform particular tasks or implement particular abstract data types.

A user may enter commands and information into computer through input devices such as a keyboard and a pointing device . Pointing devices may include a mouse a trackball and an electronic pen that may be used in conjunction with a tablet portable computing device. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to processing unit through a serial port interface that is coupled to the system bus but may be connected by other interfaces such as a parallel port game port a universal serial bus USB or the like.

The display may also be connected to system bus via an interface such as a video adapter . The display may comprise any type of display devices such as a liquid crystal display LCD a plasma display an organic light emitting diode OLED display and a cathode ray tube CRT display.

A camera may also be connected to system bus via an interface such as an adapter . The camera may comprise a video camera such as a webcam. The camera may be a CCD charge coupled device camera or a CMOS complementary metal oxide semiconductor camera. In addition to the monitor and camera the computer may include other peripheral output devices not shown such as speakers and printers.

The computer may operate in a networked environment using logical connections to one or more remote computers such as the portable computing device illustrated in . A portable computing device may be another personal computer a server a mobile phone a router a network PC a peer device or other common network node. While the portable computing device typically includes many or all of the elements described above relative to the computer only a memory storage device E has been illustrated in .

The logical connections depicted in the include a local area network LAN A and a wide area network WAN B. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet. When used in a LAN networking environment the computer is often connected to the local area network A through a network interface or adapter . The network interface adapter may comprise a wireless communications and therefore it may employ an antenna not illustrated .

When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over WAN B such as the Internet. Modem which may be internal or external is connected to system bus via serial port interface .

In a networked environment program modules depicted relative to the remote portable computing device or portions thereof may be stored in the remote memory storage device E. The portable computing device may execute a remote access program module as well as other modules for accessing data and exchanging data with the notifier and channel adapter modules A A running on the computer . It may be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers and .

Moreover those skilled in the art may appreciate that the present invention may be implemented in other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics network personal computers minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

In one or more exemplary aspects the functions described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored on or transmitted as one or more instructions or code on a computer readable medium. Computer readable media include both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another.

A storage media may be any available media that may be accessed by a computer. By way of example and not limitation such computer readable non transitory media may comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that may be used to carry or store desired program code in the form of instructions or data structures and that may be accessed by a computer.

Also any connection is properly termed a computer readable medium. For example if the software is transmitted from a website server or other remote source using a coaxial cable fiber optic cable twisted pair digital subscriber line DSL or wireless technologies such as infrared radio and microwave then the coaxial cable fiber optic cable twisted pair DSL or wireless technologies such as infrared radio and microwave are included in the definition of medium.

Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and blu ray disc where disks usually reproduce data magnetically while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of non transitory computer readable media.

Referring now to this figure is an exemplary user interface A that may be executed on a portable computing device which may provide an event ticker based on data from the task management system A of according to one exemplary embodiment. The event ticker may comprise a listing A of events that are occurring within a retail facility and which are detected by the source applications such as the ones illustrated in .

This listing A of events may be generated by the channel adapter working in combination with the notifier . The exemplary events illustrated in include a customer service inquiry having a date stamp of 4 45 PM a point of sale error message having a date stamp of 4 50 PM a suspicious customer activity event having a date stamp of 4 55 PM and an inventory tracking event having a date stamp of 5 00 PM. According to this exemplary embodiment this listing A of events displays events as they occur in a chronological order.

The third event listed is the point of sale error message in which a particular register is out of paper and needs restock for receipts. The fourth event listed which means that this event is the least important relative to the prior first three events use the customer service request in the front furniture department from the terminal number .

One of ordinary skill the art will appreciate that the order or sequence of these events may change according to any changes and or modifications to rules formulas which may exist in the notifier database . A merchant may modify or change a new rule formula within the notifier database at his or her discretion.

The source application relays this event to the channel adapter which ultimately works with the notifier and the notifier database as well as the target application that may comprise an e mail system . The e mail system generates and sends the e mail message illustrated in to a store manager who may be operating a portable computing device such as a mobile phone.

With this mobile phone characterized as the portable computing device the user interface C may be displayed to the manager who is operating the mobile phone. According to this exemplary embodiment of the e mail message may comprise header information and a body section . The body section may comprise details about the high value patron that was detected. Exemplary details include but are not limited to the name of the high value patron and preferences of the high value patron. As mentioned above such preferences about a high value patron may include but are not limited to the type of brands preferred by the high value patron and the type of payments used by the high value patron for past purchases etc.

Certain steps in the processes or process flows described in this specification naturally precede others for the invention to function as described. However the invention is not limited to the order of the steps described if such order or sequence does not alter the functionality of the invention. That is it is recognized that some steps may performed before after or parallel substantially simultaneously with other steps without departing from the scope and spirit of the disclosure. In some instances certain steps may be omitted or not performed without departing from the invention. Further words such as thereafter then next etc. are not intended to limit the order of the steps. These words are simply used to guide the reader through the description of the sample methods described herein.

Additionally one of ordinary skill in programming is able to write computer code or identify appropriate hardware and or circuits to implement the disclosed invention without difficulty based on the flow charts and associated description in this specification for example.

Therefore disclosure of a particular set of program code instructions or detailed hardware devices is not considered necessary for an adequate understanding of how to make and use the invention. The inventive functionality of the claimed computer implemented processes is explained in more detail in the above description and in conjunction with the Figures which may illustrate various process flows.

In block a source application such as illustrated in in may generate and format a message with a unique identifier. For example the source application in the exemplary embodiment of as described above may create the unique message identifier of HVP1001. 

Next the source application may transmit this message over the communications network to the channel adapter . As described above in the exemplary embodiments illustrated in a direct connection as illustrated between the source applications and the channel adapter . Meanwhile this direct connection may comprise a virtual connection when the source applications are coupled to the channel adapter via the communications network .

Subsequently in block the channel adapter may receive the message having the unique identifier that was generated by the one or more source applications . In block the channel adapter may compare the message to the rules formulas which may exist in a notifier database . In decision block the channel adapter determines if the message matches the one or more rules formulas in the notifier database .

If the inquiry to decision block is positive then the YES branch is followed to block . If the inquiry to decision block is negative then the NO branch is followed to block in which the channel adapter waits for another message from a source application . Also at this stage is part of the NO branch logic the channel adapter may create a record of the message which was not matched with any rule and or formula in the notifier database . This record of the non matching message may also be stored in the notifier database .

In block the channel adapter may supplement the message with an action identifier. For example the channel adapter may supplement the message with additional actions that may be required of the notifier and or other systems that are coupled to the notifier . These message supplements may comprise alphanumeric text characters that may uniquely identify actions to be taken by the notifier and or other systems coupled to the notifier .

In routine block the channel adapter may sort and prioritize different messages that have been created by one or more different source applications . Further details of this routine or sub method block will be described below in connection with . In this routine block the channel adapter may assign waiting values to each message and apply rules formulas to each message that matches with rules formulas in the notifier database .

Next in block the channel adapter may transmit the message over the communications network to the notifier . As noted previously if the channel adapter and the notifier are part of the same server then the message from the channel adapter would be simply relate to the notifier that as residing on the same server as the channel adapter .

In block the notifier may receive the message and execute the action listed in the message if appropriate. Alternatively or in addition to executing the message the notifier may prepare the message for transmitting to an appropriate application content provider and or target application .

In block the notifier may transmit the message over the communications network to one or more appropriate application content providers and or one or more target applications . In this block the notifier may wait until it receives a request from an application content provider ACP and or a target application before it transmits the message over the communications network . In this way the notifier may act like a gatekeeper that controls work bandwidth for each ACP and or target application .

Exemplary target applications which were described above but which were not limited to these exemplary embodiments included a task management system A and a retail e mail system B. Next in block the application content providers and or target applications may execute the one or more actions contained within the messages. For example the task management system A may generate the chronological event ticker A of and or the prioritized listing B of .

Next in block the application content providers and or target applications may transmit request to the notifier for any messages that may be destined for the application content providers and or target applications . In some exemplary embodiments the notifier may hold or retain messages for specific application content providers and or target applications in release these messages only when requested by the specific application content providers and or target applications .

In this way the notifier and the system may prevent the application content providers and or target applications from being overwhelmed or pushed to limits beyond their capacity should the source applications generate too many events that are beyond the capabilities of a respective application content provider and or target application .

In block the channel adapter may assign a weighted value to a message from a source application based on a source identifier associated with the source application . This weighted value assigned according to a source application is described above.

Next in block the channel adapter may assign a weight value to the same message based on an action identifier that may be part of the message. This assigning of weight values according to action identifiers is also described in detail above.

Subsequently in block the channel adapter may search the notifier database rules formulas that match a source identifier associated with the message. In block the rules formulas found in block may be applied by the channel adapter to the message.

Next in block the channel adapter may determine if action corresponding to the matched rules formulas has an assigned lifespan or duration as described above. If the time limit for the action has exceeded a predetermined threshold then in block the channel adapter may log the message and not perform the action.

In block the channel adapter may determine if the action corresponding to the matched rules formulas has any prerequisite actions that need to be performed prior to executing the current action. In block if any pre requisite actions have not been taken in which are required for the current action then the channel adapter may log the message and eliminate or put the current action on hold until the prerequisite action has been completed. The sub method or routine then returns to block of .

Although only a few embodiments have been described in detail above those skilled in the art will readily appreciate that many modifications are possible in the embodiments without materially departing from this invention. Accordingly all such modifications are intended to be included within the scope of this disclosure as defined in the following claims.

In the claims means plus function clauses are intended to cover the structures described herein as performing the recited function and not only structural equivalents but also equivalent structures. Thus although a nail and a screw may not be structural equivalents in that a nail employs a cylindrical surface to secure wooden parts together whereas a screw employs a helical surface in the environment of fastening wooden parts a nail and a screw may be equivalent structures. It is the express intention of the applicant not to invoke 35 U.S.C. 112 sixth paragraph for any limitations of any of the claims herein except for those in which the claim expressly uses the words means for together with an associated function.

