---

title: Optimizing deployment of virtual machines by pre-generating a virtual machine's first-boot metadata by cloud controller
abstract: A method, system and computer program product for optimizing virtual machine deployment. A cloud controller pre-generates and stores a virtual machine's first-boot metadata (e.g., a RSA key) prior to the deployment of the virtual machine so that the virtual machine does not need to generate such metadata at deployment time thereby reducing the deployment time of the virtual machine. Instead, after the deployment and activation of the virtual machine, an activation agent running on the virtual machine requests the pre-generated first-boot metadata from the cloud controller. The cloud controller retrieves the requested pre-generated first-boot metadata to be transmitted to the requesting virtual machine and implements public-key cryptography so that the requesting virtual machine can verify the authenticity of the transmitted first-boot metadata. By reducing the deployment time for the virtual machine, cloud resources can be used for other activities.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09071587&OS=09071587&RS=09071587
owner: International Business Machines Corporation
number: 09071587
owner_city: Armonk
owner_country: US
publication_date: 20120827
---
The present invention relates generally to cloud computing and more particularly to optimizing the deployment of virtual machines by pre generating a virtual machine s first boot metadata e.g. RSA key Globally Unique IDentifier GUID by the cloud controller.

In a cloud computing environment computing is delivered as a service rather than a product whereby shared resources software and information are provided to computers and other devices as a metered service over a network such as the Internet. In such an environment computation software data access and storage services are provided to users that do not require knowledge of the physical location and configuration of the system that delivers the services.

In a virtualized computer environment such as may be implemented in a physical cloud computing node of the cloud computing environment the virtualized computer environment includes a virtual operating system. The virtual operating system includes a common base portion and separate user portions that all run on a physical computer. The physical computer is referred to as a host. The common base portion may be referred to as a hypervisor and each user portion may be called a guest. Each guest is a logical partition of physical resources of the computer. A guest operating system runs on each guest and the guest appears to the guest operating system as a real computer. Each guest operating system may host one or more virtual machines.

An image of the virtual operating system contains many pieces of unique metadata that are often generated on the first boot to ensure randomness and security such as a RSA key a Globally Unique IDentifier GUID a Secure Sockets Layer SSL certificate and a Lightweight Third Party Authentication LTPA key. Currently the virtual machine generates these metadata at deployment time. Since some of the metadata requires extensive time to generate the deployment time of the instance of the virtual machine can be lengthy. If however the virtual machine can be relieved of generating such metadata the deployment time could be lessened. As a result instead of the cloud s limited resources being used on first boot activities such as generating these first boot metadata such resources could be used for other activities.

In one embodiment of the present invention a method for optimizing virtual machine deployment comprises pre generating a virtual machine s first boot metadata prior to deployment of the virtual machine. The method further comprises storing the pre generated first boot metadata. Furthermore the method comprises deploying the virtual machine. Additionally the method comprises receiving a request from an agent of the virtual machine requesting the pre generated first boot metadata. The method additionally comprises retrieving the requested pre generated first boot metadata. Furthermore the method comprises signing the retrieved pre generated first boot metadata with a private key to generate a signature. In addition the method comprises transmitting by a processor a public key the signature and the retrieved pre generated first boot metadata to the agent of the virtual machine.

Other forms of the embodiment of the method described above are in a system and in a computer program product.

The foregoing has outlined rather generally the features and technical advantages of one or more embodiments of the present invention in order that the detailed description of the present invention that follows may be better understood. Additional features and advantages of the present invention will be described hereinafter which may form the subject of the claims of the present invention.

The present invention comprises a method system and computer program product for optimizing virtual machine deployment. In one embodiment of the present invention a cloud controller pre generates and stores a virtual machine s first boot metadata e.g. a RSA key a GUID identifier a SSL certificate and a LTPA key prior to the deployment of the virtual machine so that the virtual machine does not need to generate such metadata at deployment time thereby reducing the deployment time of the virtual machine. Instead after the deployment and activation of the virtual machine an activation agent running on the virtual machine requests the pre generated first boot metadata from the cloud controller. The cloud controller retrieves the requested pre generated first boot metadata and signs the retrieved pre generated first boot metadata with a private key to generate a signature. The cloud controller transmits the requested pre generated first boot metadata the signature and a public key corresponding to the private key used to generate the signature to the requesting activation agent of the virtual machine thereby allowing the virtual machine to validate the authenticity and integrity of the pre generated first boot metadata. By reducing the deployment time for the virtual machine cloud resources can be used for other activities.

In the following description numerous specific details are set forth to provide a thorough understanding of the present invention. However it will be apparent to those skilled in the art that the present invention may be practiced without such specific details. In other instances well known circuits have been shown in block diagram form in order not to obscure the present invention in unnecessary detail. For the most part details considering timing considerations and the like have been omitted inasmuch as such details are not necessary to obtain a complete understanding of the present invention and are within the skills of persons of ordinary skill in the relevant art.

It is understood in advance that although this disclosure includes a detailed description on cloud computing implementation of the teachings recited herein are not limited to a cloud computing environment. Rather the embodiments of the present invention are capable of being implemented in conjunction with any type of clustered computing environment now known or later developed.

In any event the following definitions have been derived from the The NIST Definition of Cloud Computing by Peter Mell and Timothy Grance dated September 2011 which is cited on an Information Disclosure Statement filed herewith and a copy of which is provided to the U.S. Patent and Trademark Office.

Cloud computing is a model for enabling ubiquitous convenient on demand network access to a shared pool of configurable computing resources e.g. networks servers storage applications and services that can be rapidly provisioned and released with minimal management effort or service provider interaction. This cloud model is composed of five essential characteristics three service models and four deployment models.

On Demand Self Service A consumer can unilaterally provision computing capabilities such as server time and network storage as needed automatically without requiring human interaction with each service s provider.

Broad Network Access Capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms e.g. mobile phones tablets laptops and workstations .

Resource Pooling The provider s computing resources are pooled to serve multiple consumers using a multi tenant model with different physical and virtual resources dynamically assigned and reassigned according to consumer demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction e.g. country state or data center . Examples of resources include storage processing memory and network bandwidth.

Rapid Elasticity Capabilities can be elastically provisioned and released in some cases automatically to scale rapidly outward and inward commensurate with demand. To the consumer the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.

Measured Service Cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service e.g. storage processing bandwidth and active user accounts . Resource usage can be monitored controlled and reported providing transparency for both the provider and consumer of the utilized service.

Software as a Service SaaS The capability provided to the consumer is to use the provider s applications running on a cloud infrastructure. The applications are accessible from various client devices through either a thin client interface such as a web browser e.g. web based e mail or a program interface. The consumer does not manage or control the underlying cloud infrastructure including network servers operating systems storage or even individual application capabilities with the possible exception of limited user specific application configuration settings.

Platform as a Service PaaS The capability provided to the consumer is to deploy onto the cloud infrastructure consumer created or acquired applications created using programming languages libraries services and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks servers operating systems or storage but has control over the deployed applications and possibly configuration settings for the application hosting environment.

Infrastructure as a Service IaaS The capability provided to the consumer is to provision processing storage networks and other fundamental computing resources where the consumer is able to deploy and run arbitrary software which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems storage and deployed applications and possibly limited control of select networking components e.g. host firewalls .

Private Cloud The cloud infrastructure is provisioned for exclusive use by a single organization comprising multiple consumers e.g. business units . It may be owned managed and operated by the organization a third party or some combination of them and it may exist on or off premises.

Community Cloud The cloud infrastructure is provisioned for exclusive use by a specific community of consumers from organizations that have shared concerns e.g. mission security requirements policy and compliance considerations . It may be owned managed and operated by one or more of the organizations in the community a third party or some combination of them and it may exist on or off premises.

Public Cloud The cloud infrastructure is provisioned for open use by the general public. It may be owned managed and operated by a business academic or government organization or some combination of them. It exists on the premises of the cloud provider.

Hybrid Cloud The cloud infrastructure is a composition of two or more distinct cloud infrastructures private community or public that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability e.g. cloud bursting for load balancing between clouds .

Referring now to the Figures in detail illustrates a network system configured in accordance with an embodiment of the present invention. Network system includes a client device connected to a cloud computing environment via a network . Client device may be any type of computing device e.g. portable computing unit personal digital assistant PDA smartphone laptop computer mobile phone navigation device game console desktop computer system workstation Internet appliance and the like configured with the capability of connecting to cloud computing environment via network .

Network may be for example a local area network a wide area network a wireless wide area network a circuit switched telephone network a Global System for Mobile Communications GSM network Wireless Application Protocol WAP network a WiFi network an IEEE 802.11 standards network various combinations thereof etc. Other networks whose descriptions are omitted here for brevity may also be used in conjunction with system of without departing from the scope of the present invention.

Cloud computing environment is used to deliver computing as a service to client device implementing the model discussed above. An embodiment of cloud computing environment is discussed below in connection with .

Referring now to illustrates cloud computing nodes A N in a virtualized computer environment in accordance with an embodiment of the present invention. Cloud computing nodes A N may collectively or individually be referred to as cloud computing nodes or cloud computing node respectively. Cloud computing nodes A N are each coupled to a cloud controller configured to provide data center level functions of communicating with hypervisors on cloud computing nodes to install virtual machines terminate suspend virtual machines relocate virtual machines from one cloud computing node to another within the data center as well as to pre generate the virtual machine s first boot metadata e.g. RSA key thereby reducing the deployment time of the virtual machine as discussed further below in connection with .

With reference now to cloud computing node A cloud computing node A includes a virtual operating system A. Operating system A executes on a real or physical computer A. Real computer A includes one or more processors A a memory A also referred to herein as the host physical memory one or more disk drives A and the like. Other components of real computer A are not discussed herein for the sake of brevity.

Virtual operating system A further includes user portions A B identified as Guest and Guest respectively in referred to herein as guests. Each guest A B is capable of functioning as a separate system. That is each guest A B can be independently reset host a guest operating system A B respectively identified as Guest O S and Guest O S respectively in and operate with different programs. An operating system or application program running in guest A B appears to have access to a full and complete system but in reality only a portion of it is available.

Each guest operating system A B may host one or more virtual machine applications A C identified as VM VM and VM respectively in such as Java virtual machines. For example guest operating system A hosts virtual machine applications A B. Guest operating system B hosts virtual machine application C.

In one embodiment an agent A referred to herein as the activation agent is run on a virtual machine such as virtual machine A. As discussed further below in connection with activation agent A is configured to request specific metadata from cloud controller such as a virtual machine s first boot metadata that was generated by cloud controller prior to the deployment of the virtual machine e.g. virtual machine A instead of having the virtual machine e.g. virtual machine A generate such metadata at deployment time. In this manner the deployment time of the virtual machine e.g. virtual machine A can be reduced.

Virtual operating system A further includes a common base portion A referred to herein as a hypervisor. Hypervisor A may be implemented in microcode running on processor A or it may be implemented in software as part of virtual operating system A. Hypervisor A is configured to manage and enable guests A B to run on a single host.

As discussed above virtual operating system A and its components execute on physical or real computer A. These software components may be loaded into memory A for execution by processor A.

As also discussed above cloud computing environment can include multiple cloud computing nodes A N as is shown in . In one embodiment each cloud computing node A N is configured similarly as previously discussed cloud computing node A. For example cloud computing node N is configured similarly as cloud computing node A. Cloud computing node N includes the same elements as cloud computing node A. For example guests C D identified as Guest and Guest respectively in are functionally the same as guests A B. Similarly guest operating systems C D identified as Guest O S and Guest O S respectively in are functionally the same as guest operating systems A B. Virtual machines D E identified as VM and VM respectively in are functionally the same as virtual machines A C. Additionally activation agent B is functionally the same as activation agent A. Furthermore hypervisor B is functionally the same as hypervisor A. Hence the discussion of cloud computing node A applies to each cloud computing node including cloud computing node N. In one embodiment each cloud computing node can be configured differently and the physical hardware hypervisors and other components may be different as well.

Guests A D may collectively or individually be referred to as guests or guest respectively. Guest operating systems A D may collectively or individually be referred to as guest operating systems or guest operating system respectively. Virtual machines A E may collectively or individually be referred to as virtual machines or virtual machine respectively. Activation agents A B may collectively or individually be referred to as activation agents or activation agent respectively. Hypervisors A B may collectively or individually be referred to as hypervisors or hypervisor respectively.

Referring again to in some embodiments cloud controller supports a module referred to herein as the management software that can be used to manage all the hardware components of cloud computing nodes monitor system utilization intelligently deploy images of data and optimize the operations of cloud computing environment . Furthermore management software can be used to pre generate a virtual machine s first boot metadata e.g. a RSA key a Globally Unique IDentifier GUID a Secure Sockets Layer SSL certificate and a Lightweight Third Party Authentication LTPA key prior to deployment of virtual machine instead of having virtual machine generate such metadata at deployment time as discussed further below in connection with . A description of the hardware configuration of cloud controller is provided further below in connection with .

Referring now to illustrates a hardware configuration of cloud controller which is representative of a hardware environment for practicing the present invention. Cloud controller has a processor coupled to various other components by system bus . An operating system runs on processor and provides control and coordinates the functions of the various components of . An application in accordance with the principles of the present invention runs in conjunction with operating system and provides calls to operating system where the calls implement the various functions or services to be performed by application . Application may include for example a program such as management software of for pre generating a virtual machine s first boot metadata prior to deployment of virtual machine instead of having virtual machine generate such metadata at deployment time as discussed further below in connection with .

Referring again to read only memory ROM is coupled to system bus and includes a basic input output system BIOS that controls certain basic functions of cloud controller . Random access memory RAM and disk adapter are also coupled to system bus . It should be noted that software components including operating system and application may be loaded into RAM which may be cloud controller s main memory for execution. Disk adapter may be an integrated drive electronics IDE adapter that communicates with a disk unit e.g. disk drive. It is noted that the program for pre generating a virtual machine s first boot metadata prior to deployment of virtual machine as discussed further below in connection with may reside in disk unit or in application .

Cloud controller may further include a communications adapter coupled to bus . Communications adapter interconnects bus with an outside network e.g. network of .

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or flash memory a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the present invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the function acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the function acts specified in the flowchart and or block diagram block or blocks.

As stated in the Background section an image of the virtual operating system contains many pieces of unique metadata that are often generated on the first boot to ensure randomness and security such as a RSA key a Globally Unique IDentifier GUID a Secure Sockets Layer SSL certificate and a Lightweight Third Party Authentication LTPA key. Currently the virtual machine generates these metadata at deployment time. Since some of the metadata requires extensive time to generate the deployment time of the instance of the virtual machine can be lengthy. If however the virtual machine can be relieved of generating such metadata the deployment time could be lessened. As a result instead of the cloud s limited resources being used on first boot activities such as generating these first boot metadata such resources could be used for other activities.

The principles of the present invention provide a means for reducing the deployment time of virtual machines by having the cloud controller pre generate a virtual machine s first boot metadata e.g. a RSA key a Globally Unique IDentifier GUID a Secure Sockets Layer SSL certificate and a Lightweight Third Party Authentication LTPA key prior to deployment of the virtual machine instead of having the virtual machine generate such metadata at deployment time as discussed further below in connection with .

Referring to in conjunction with in step cloud controller pre generates a virtual machine s first boot metadata prior to deployment of virtual machine . As used herein a virtual machine s first boot metadata refers to metadata that is generally generated on the first boot by virtual machine to ensure randomness and security such as a RSA key a GUID identifier a SSL certificate and a LTPA key. By having cloud controller pre generate a virtual machine s first boot metadata instead of having virtual machine generate such metadata at deployment time the deployment time for virtual machine is reduced. Furthermore since cloud controller is generating such metadata instead of virtual machine the metadata may be generate more quickly since cloud controller may have a higher allocation of CPU cores than virtual machine thereby enabling multiple threads to execute concurrently. Additionally since the deployment time for virtual machine is reduced cloud resources can be used for other activities.

In step cloud controller stores the pre generated first boot metadata such as in hard drive of cloud controller .

In step cloud controller deploys the virtual machine . Once virtual machine e.g. virtual machine A has been deployed and activated in step activation agent e.g. activation agent A of the deployed virtual machine e.g. virtual machine A transmits a request for the pre generated first boot metadata to cloud controller . In one embodiment such communications occurs using an out of band communication such as using a REST call. In this manner the pre generated metadata may be securely transferred from cloud controller to virtual machine as discussed further below. In one embodiment the communication may include additional data such as the hostname the IP address location information application data etc. of virtual machine which is used by cloud controller to modify augment the stored pre generated first boot metadata to make it usable for virtual machine . The first boot metadata stored by cloud controller may be missing information e.g. hostname IP address that needs to be included in the first boot metadata in order for it to be used by virtual machine . Such information may be provided by activation agent in its request to cloud controller for the pre generated first boot metadata.

In step cloud controller processes the request and retrieves the requested pre generated first boot metadata such as from disk unit . In one embodiment the retrieved pre generated metadata is modified augmented based on the additional data supplied by activation agent .

In step cloud controller signs the retrieved pre generated first boot metadata with cloud controller s private key to generate a signature thereby allowing virtual machine to validate the authenticity and integrity of the pre generated first boot metadata as discussed further below.

In step cloud controller transmits the requested pre generated first boot metadata the signature and a public key public key that is corresponding to the private key used by cloud controller in step to the requesting activation agent of virtual machine . In one embodiment only a single instance of the generated first boot metadata is ever stored and used by cloud controller . Hence when cloud controller transmits the requested pre generated first boot metadata there are no stored copies of the transmitted pre generated first boot metadata remaining in cloud controller thereby preventing it from being used again by another virtual machine for security purposes.

In step virtual machine determines whether the signature is verified using the received public key. If the signature is verified by the public key then in step virtual machine installs the requested pre generated first boot metadata. Otherwise if the signature is not verified by the public key then in step virtual machine does not install the requested pre generated first boot metadata.

While the foregoing discusses the use of public key cryptography for authenticating the requesting pre generated first boot metadata other cryptographic systems may be used for authenticating the requesting pre generated first boot metadata. Embodiments employing such cryptographic systems fall within the scope of the present invention.

In some implementations method may include other and or additional steps that for clarity are not depicted. Further in some implementations method may be executed in a different order presented and that the order presented in the discussion of is illustrative. Additionally in some implementations certain steps in method may be executed in a substantially simultaneous manner or may be omitted.

The descriptions of the various embodiments of the present invention have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the described embodiments. The terminology used herein was chosen to best explain the principles of the embodiments the practical application or technical improvement over technologies found in the marketplace or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.

