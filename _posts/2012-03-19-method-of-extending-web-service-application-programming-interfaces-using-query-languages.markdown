---

title: Method of extending web service application programming interfaces using query languages
abstract: Embodiments of the claimed subject matter provide methods that support extension of web service application programming interfaces using query languages. In one embodiment, a method is provided that includes modifying an interface to a social graph. The social graph includes nodes connected by edges that represent relationships between the nodes, which form a plurality of trees associated with users to the social graph. Modifying the interface includes adding a node to at least one user's tree and attaching one or more queries to the node. The attached queries operate on a sub-tree of the added node. The interface is modified in response to the user(s) invoking a service configured to perform queries on the sub-tree.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09047643&OS=09047643&RS=09047643
owner: Alcatel Lucent
number: 09047643
owner_city: Boulogne-Billancourt
owner_country: FR
publication_date: 20120319
---
This application is related to U.S. patent application Ser. No. 13 423 795 filed on Mar. 19 2012 entitled Method of Modifying Access Control for Web Services Using Query Languages by Lawrence E. Menten .

This application relates generally to processor based systems and more particularly to application programming interfaces for processor based systems.

This section introduces aspects that may be helpful in facilitating a better understanding of the inventions. Accordingly the statements of this section are to be read in this light and are not to be understood as admissions about what is in the prior art or what is not in the prior art.

In some known communication schemes users communicate with each other using social networks. Social networking services can be defined as an online service platform or site that provides services to subscribers based upon a representation of social relations among people who may share a common background interest or activity. A social network typically consists of a representation of each user often a profile his her social links and a variety of additional elements such as photographs status reports web links and the like. Most social network services are web based and provide tools services that allow users to interact over the Internet such as e mail and instant messaging. Social networking sites allow users to share ideas activities events and interests within their individual networks. Exemplary social networks include Facebook Google Twitter LinkedIn VKonkatke Orkut and RenRen.

Social networks represent individuals and their relations using a social graph. Generally a social graph describes the relationships between a subscriber s online persona which may also be referred to as the user s avatar and other subscribers online personas. The social graph therefore reflects the real world relationships between the subscribers which are generally referred to as the social network. For example the social graph of a social network can be structured as a series of nodes e.g. Subscriber FriendsLists CloseFriends etc. that are associated with each other using edges which may also be referred to as links or connections defined by the relationships between the nodes. Leaf nodes are associated with a parent node but they have no child nodes. For example leaf nodes associated with the CloseFriends node may each include a data structure including information for one of the subscriber s friends. The social graph may also include nodes for different types of relationships such as groups associated with a particular interest as well as nodes for different types of information such as photographs music and web links.

Providers of social networks use the information in their social graph to implement services or applications apps . Developers can create services or apps using an application programming interface API developed and supported by the social network provider. For example an API for a social network such as Facebook includes a defined set of Hypertext Transfer Protocol HTTP request messages along with a definition of the structure of response messages e.g. in an Extensible Markup Language XML or JavaScript Object Notation JSON format. The API for a social network usually implements a Representational State Transfer REST architecture that consists of clients and servers. Clients initiate requests to servers which process requests and return appropriate responses to the clients. Requests and responses are built around the transfer of representations of resources. A resource can be virtually any coherent and meaningful concept that may be addressed. A representation of a resource is typically a document that captures the current or intended state of a resource. Generally a REST ful architecture must be client server based stateless cacheable layered use a uniform interface and may provide code on demand.

The following presents a simplified summary of the disclosed subject matter in order to provide a basic understanding of some aspects of the disclosed subject matter. This summary is not an exhaustive overview of the disclosed subject matter. It is not intended to identify key or critical elements of the disclosed subject matter or to delineate the scope of the disclosed subject matter. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is discussed later.

In one embodiment a method is provided for extension of web service application programming interfaces using query languages. The method includes modifying an interface to a social graph. The social graph includes nodes connected by edges that represent relationships between the nodes which form a plurality of trees associated with users to the social graph. Modifying the interface includes adding a node to at least one user s tree and attaching one or more queries to the node. The attached queries operate on a sub tree of the added node. The interface is modified in response to the user s invoking a service configured to perform queries on the sub tree. An apparatus for performing embodiments of the method may also be provided.

In another embodiment a method is provided for extension of web service application programming interfaces using query languages. The method includes invoking a service configured to perform queries on a portion of a social graph that includes nodes connected by edges that represent relationships between the nodes. The nodes form a plurality of trees associated with users to the social graph. The method also includes receiving a request to authorize modification of an interface to the social graph by adding a node to a tree associated with a user that invoked the service. The interface is to be modified by attaching one or more queries to the node and the queries operate on a sub tree of the added node. An apparatus for performing embodiments of the method may also be provided.

In yet another embodiment a method is provided for extension of web service application programming interfaces using query languages. The method includes modifying an interface to a portion of a social graph associated with a user by providing support for one or more queries associated with the portion of the social graph. The interface is modified in response to the user invoking a service that implements the queries. The method also includes performing one or more of the queries on the portion of the social graph associated with the user. An apparatus for performing embodiments of the method may also be provided.

Illustrative embodiments are described below. In the interest of clarity not all features of an actual implementation are described in this specification. It will of course be appreciated that in the development of any such actual embodiment numerous implementation specific decisions should be made to achieve the developers specific goals such as compliance with system related and business related constraints which will vary from one implementation to another. Moreover it will be appreciated that such a development effort might be complex and time consuming but would nevertheless be a routine undertaking for those of ordinary skill in the art having the benefit of this disclosure. The description and drawings merely illustrate the principles of the claimed subject matter. It will thus be appreciated that those skilled in the art may be able to devise various arrangements that although not explicitly described or shown herein embody the principles described herein and may be included within the scope of the claimed subject matter. Furthermore all examples recited herein are principally intended to be for pedagogical purposes to aid the reader in understanding the principles of the claimed subject matter and the concepts contributed by the inventor s to furthering the art and are to be construed as being without limitation to such specifically recited examples and conditions.

The disclosed subject matter will now be described with reference to the attached figures. Various structures systems and devices are schematically depicted in the drawings for purposes of explanation only and so as to not obscure the description with details that are well known to those skilled in the art. Nevertheless the attached drawings are included to describe and explain illustrative examples of the disclosed subject matter. The words and phrases used herein should be understood and interpreted to have a meaning consistent with the understanding of those words and phrases by those skilled in the relevant art. No special definition of a term or phrase i.e. a definition that is different from the ordinary and custom ary meaning as understood by those skilled in the art is intended to be implied by consistent usage of the term or phrase herein. To the extent that a term or phrase is intended to have a special meaning i.e. a meaning other than that understood by skilled artisans such a special definition will be expressly set forth in the specification in a definitional manner that directly and unequivocally provides the special definition for the term or phrase. Additionally the term or as used herein refers to a non exclusive or unless otherwise indicated e.g. or else or or in the alternative . Also the various embodiments described herein are not necessarily mutually exclusive as some embodiments can be combined with one or more other embodiments to form new embodiments.

The social graph of a social network can be structured as a series of nodes e.g. Subscriber FriendsLists CloseFriends etc. that may be associated with each other using edges defined by the relationships between the nodes. Many social graphs include a large number of nodes and relationships. For example Facebook is fast approaching one billion subscribers. A provider of a social network service may invest significant time and resources into gathering information and constructing the social graph that specifies the relations between different subscribers to or users of the social network service. The value of the social network service may reside almost entirely in the social graph and the applications that provide useful services to users subscribers based on the information included in the social graph. As such providers may create social graph interfaces that control the visibility and accessibility of the data in the social graph to balance the competing desires for 1 preventing third parties from appropriating the data in the social graph and 2 allowing developers sufficient visibility and access to the data in the social graph to create applications that provide useful services.

The present application describes embodiments of interfaces that allow developers to extend the provider defined interface by defining a node for a user subscriber e.g. a node that is a child node of the root node for the user subscriber and then associating or attaching one or more queries to the new node. Embodiments of the queries may then operate on nodes in sub trees attached to the new node. The queries may also use parameters defined by the context of the new node or parameters included in the query by the developer. Extension of the interface using the new node and queries may be subject to authorization by the user subscriber or the provider of the social graph. Leaf nodes of the new node may be populated using information in the social graph. The modified interface may then be used to create new services for the subscriber using the new queries.

The users may subscribe to one or more social network services . Exemplary social network services include the social network service provided by Facebook and the social network service provided by Google . However persons of ordinary skill in the art having benefit of the present disclosure should appreciate that alternative embodiments of the communication system may include other social network services such as Twitter LinkedIn VKonkatke Orkut RenRen and the like. In the illustrated embodiment the users have subscribed to the social network service and the users have subscribed to the social network service . The users may therefore have created profiles and established relationships to other subscribers in the social graphs of the social network services . The users information related to the users or the relationships between the users may be represented by the structure of the social graph. For example the social graph of the social network may include nodes e.g. Subscriber FriendsLists CloseFriends etc. that are associated with each other using edges defined by the relationships between the nodes.

Application developers can develop applications apps or services that use the information in the social graphs of the social networks to generate and provide useful information to the users or other third parties such as advertisers attempting to provide targeted advertising to the users . The application developers create or define the applications or services using application programming interfaces APIs to the social network services respectively. The APIs are initially defined by the providers or owners of the social network services and the same APIs are supported for all of the users . As discussed herein conventional interfaces cannot be changed or modified by the developers which limits the range of possible applications or services that can be created by the developers as well as the user data that can be accessed or disseminated. The present application therefore describes techniques for modifying the provider defined APIs e.g. on a per user or per service basis. Rather than attempt to anticipate the granularity of access to service resources that may be required by new applications the application developers may extend the web service APIs using named query statements representing new views of data from the social graphs of the social networks that can be dynamically inserted into the resource hierarchy e.g. the social graph to extend the web service APIs .

In one embodiment the APIs conform to the constraints imposed by representational state transfer REST architectures. A REST ful web service API to the social networking sites may provide a resource hierarchy defined by the service API and support read or write access to various elements of the social network information associated with each user . For example the resource hierarchy may define a tree that includes non leaf nodes that define categories or subsets of information. The tree may also define the nodes or leaves that represent the instances of data that may be read or written through the web service APIs . This arrangement is typical of many web services. In conventional web services the resource naming scheme is defined by the service provider and is not extensible.

Embodiments of the communication system may allow developers with appropriate permissions to extend this resource tree by adding leaf nodes representing new views of the data represented by the node to which the new leaf node is attached. These nodes can be named by the developer and associated with a query that operates on the data subset or sub tree identified by the branch of the tree in which the new leaf node is inserted. In various embodiments the developer may or may not be able to see the data in the tree e.g. the service may only be able to provide information derived from the raw data and not the raw data itself. These nodes may be added through an off line web interface or inserted through a HTTP POST request. The queries views may be named or defined by the developer or the queries views may be selected from a menu of pre defined queries views available from the provider of the social network services . In various alternative embodiments query parameters may be defined by the developer determined by the context node or dynamically determined by the service or application.

In the illustrated embodiment developers or other third parties can add one or more nodes to the portion of the social graph corresponding to the subscriber. For example a developer may use an HTTP POST command to insert a node that is associated or attached to the node of the sub tree . The node may then be accessed using the appropriate URI or other address. For example the node may be associated with FriendsLists of Joe Subscriber the node may be associated with CloseFriends of Joe Subscriber and the node may be associated with a category that includes the phone numbers for CloseFriends of Joe Subscriber. The node may also be associated with or connected to a further sub tree which includes a plurality of leaf nodes in the illustrated embodiment. However persons of ordinary skill in the art having benefit of the present disclosure should appreciate that the sub tree may include different combinations of nodes or leaf nodes. The sub tree or the leaf nodes may be populated by the developer a third party the subscriber or automatically by the service provider. The node may be accessed using an address such as 

The interface to the social graph may be modified to support queries that operate on nodes in the tree such as the sub tree of the node that was added by the developer. In one embodiment the developer may use a message or command to define a query and attach the query to one or more nodes to modify an application programming interface API to the social graph . For example the node may be created and a query may be attached to the node e.g. the CloseFriends with Numbers node in response to Joe Subscriber invoking a service that utilizes the query . The query may also be attached to other nodes in the portion of the social graph. For example the query may be represented by a query node fof phone number that may be designed to be attached to the node FriendsLists or to a node such as CloseFriends that further qualifies the list of friends. The query may operate on each of the lists of friends referenced by FriendsLists or upon each of the friends referenced in one of the lists e.g. CloseFriends to locate friends of the friends and compare the phone number with that of each friend of one s own friends. One example of an address that invokes the query is 

In one alternative embodiment which may be practiced in addition to or instead of the other embodiments described herein the modified Web service API may provide an API that defines Joe Subscriber s friend s list as a node in the resource hierarchy. To this node the developer with appropriate permissions may add the leaf node has friend with caller id and associate this new node with a query expressed in SQL SPARQL or similar that provides a new resource that can be accessed to determine whether or not a caller id is associated with a friend of a friend of the subscriber. One example of the query may be 

In the illustrated embodiment the request may require authorization from the user subscriber. The user authorization process may be performed at to verify that the user has authorized inserting the new node into the user s social graph. User authorization can be performed using various techniques. For example the request to create the node and attach the query may include a request to initiate authentication authorization process that allows the user to indicate at whether they approve or allow creation of the new node and implementation of the new query. The request is rejected at if the user does not provide confirmation or authentication. The request may proceed if the subscriber confirms or authenticates the request.

In the illustrated embodiment the request may also require authorization from the provider or owner of the social network SN service. The provider authorization process may be performed at to verify that the provider owner has authorized inserting the new node into the user s social graph. Provider authorization can be performed using various techniques. For example the request to create the node and attach the query may include a request to initiate an authentication authorization process that allows the provider to indicate at whether they approve or allow creation of the new node or implementation of the new query. In one embodiment the provider may perform the authentication authorization process using an automated system that reviews the request and determines whether the request complies with security privacy or other policies established by the provider. Before installation into the web service the query may be mechanically validated to assure that it complies with the security usage policy of the web service. For example the web service may only allow queries that return Boolean results or counter values and may restrict the node types with which such a query may be associated e.g. only the FriendsLists node . The request is rejected at if the provider does not provide confirmation or authentication. The request may proceed if the provider confirms or authenticates the request. Persons of ordinary skill in the art having benefit of the present disclosure should appreciate that the particular authentication sequence depicted in is intended to be illustrative. Alternative embodiments may perform the user and provider authentication processes concurrently or in a different order than the one depicted in . Moreover other alternative embodiments may only perform user authentication or provider authentication but not both or may not perform any authentication at all.

Once the request has been authorized the requested node can be inserted at at the selected position within the social graph. The interface to the social graph can then be modified by attaching at the query to the new node. The developer or third party or other entities may then be able to use the modified interface to develop applications or services that utilize the new query. For example the POST request described above may result in extending the API for the subscriber Joe Subscriber so that it is now possible to make a GET request for the URI 

The service provider e.g. using software implemented on one or more servers owned or operated by the service provider may then monitor at queries associated with the service. Monitoring may continue as long as the service provider does not detect at any queries. When the service provider detects at a query e.g. a query performed as part of the service requested or invoked by the subscriber the query can be performed at on information included in a sub tree of the node associated with the query. For example the query may return at a Boolean value a count value or other value determined based on the information included in the sub tree of the node.

In the illustrated embodiment the subscribers Joe Subscriber and Frank Friendly are friends that are connected by the Friend relationship in the social graph . For example the node in the portion may represent a person in the CloseFriends group for Joe Subscriber and may be associated with or include information related to the portion of the social graph . However Joe Subscriber only owns the relationship with Frank Friendly but may not have privileges or authority to perform any modifications of the portion of the social graph that is owned by Frank Friendly. Joe Subscriber may therefore not be able to insert new nodes into the sub tree or attach queries to existing or new nodes in the sub tree e.g. in the manner discussed herein with regard to .

The interface to the social graph may alternatively be modified by adding one or more shadow nodes to the portion and then attaching one or more queries to the shadow nodes . In one embodiment the shadow nodes that are inserted into the portion correspond to nodes in the portion as indicated by the double headed arrows. The shadow nodes are interrelated or connected in the same way as the nodes and so the path from the node through the shadow node and to the shadow node is the same as the path from the entry node to the node and the node . For example the shadow nodes may be part of a sparse tree that represents or shadows the nodes . Adding the shadow nodes and attaching the query may be performed following authentication or authorization of the request by the user or the provider owner of the social network as discussed herein.

The query can be defined to operate on a sub tree of the node which may include leaf nodes as well as other nodes that are not shown in . The interface to the social graph can then be modified by attaching the query to the new node . A developer or third party or other entities may use the modified interface to develop applications or services that utilize the new query. For example the API for the subscriber Joe Subscriber may be extended so that it is now possible to make a GET request for the URI associated with Frank Friendly 

In the illustrated embodiment the request may require authorization from the user. The user authorization process may be performed at to verify that the user has authorized inserting the new node into the social graph. User authorization can be performed using various techniques as discussed herein. The request is rejected at if the user does not provide confirmation or authentication. The request may proceed if the user confirms or authenticates the request. In the illustrated embodiment the request may also require authorization from the provider or owner of the social network SN service. The provider authorization process may be performed at to verify that the provider owner has authorized inserting the new node into the social graph as discussed herein. The request is rejected at if the provider does not provide confirmation or authentication. The request may proceed if the provider confirms or authenticates the request. Persons of ordinary skill in the art having benefit of the present disclosure should appreciate that the particular authentication sequence depicted in is intended to be illustrative. Alternative embodiments may perform the subscriber and provider authentication processes concurrently or a different order than the one depicted in . Moreover other alternative embodiments may only perform subscriber authentication or provider authentication but not both or may not perform any authentication at all.

Once the request has been authorized the requested shadow node can be inserted at at the selected position within the social graph. The interface to the social graph can then be modified by attaching at the query to the new shadow node. The developer or third party or other entities may then be able to use the modified interface to develop applications or services that utilize the new query which operates on nodes in the portions of the social graph node are associated with other users as discussed herein. The modification can be reversed e.g. by a corresponding HTTP DELETE request. In one embodiment the mechanism for inserting the query may be to create a record that is associated with the end user. The inserted record may contain the query and the associated path to be used in the GET request. In various embodiments the Web service supports one or query languages and publishes a schema to accompany the query languages.

In the illustrated embodiment one or more users may initiate at a service or application. The initiated application may utilize a query that is not supported by the provider defined API. Furthermore the query may operate on nodes in the sub trees of other users in the social network. One or more new shadow nodes may then be created in the sub tree of the requesting user and the query may be attached to the new shadow node at . As discussed herein the shadow node may be created at and inserted into the social graph at a location that matches or corresponds to a path through the sub trees of the other subscribers to the social network. Embodiments of techniques for creating the shadow node and attaching the query are depicted in .

The service provider e.g. using software implemented on one or more servers owned or operated by the service provider may then monitor at queries associated with the service. Monitoring may continue as long as the service provider does not detect at any queries. When the service provider detects at a query e.g. a query performed as part of the service requested or invoked by the user the query can be used to identify at the shadow node and the corresponding node in one or more other sub trees e.g. using pattern matching techniques. The query can be performed at on information included in a sub tree of the node in the other user s social graph. For example the query may return at a Boolean value a count value or other value determined based on the information included in the sub tree of the node indicated by the shadow node that is attached to the query. As discussed herein the shadow nodes can be deleted or removed in response to termination of the service or application that utilizes the shadow nodes.

Although depicts a single server persons of ordinary skill in the art having benefit of the present disclosure should appreciate that alternative embodiments may use multiple servers and may distribute portions of the functionality depicted throughout the multiple servers. In some embodiments the server may be a virtual machine. In some of these embodiments the virtual machine may include components from different machines or be geographically dispersed. For example the data storage and the processor may be in two different physical machines. When processor executable programs such as the social network services are implemented on the processor the program code segments combine with the processor to provide a unique device that operates analogously to specific logic circuits.

Portions of the disclosed subject matter and corresponding detailed description are presented in terms of software or algorithms and symbolic representations of operations on data bits within a computer memory. These descriptions and representations are the ones by which those of ordinary skill in the art effectively convey the substance of their work to others of ordinary skill in the art. An algorithm as the term is used here and as it is used generally is conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of optical electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise or as is apparent from the discussion terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

Note also that the software implemented aspects of the disclosed subject matter are typically encoded on some form of program storage medium or implemented over some type of transmission medium. The program storage medium may be magnetic e.g. a floppy disk or a hard drive or optical e.g. a compact disk read only memory or CD ROM and may be read only or random access. Similarly the transmission medium may be twisted wire pairs coaxial cable optical fiber or some other suitable transmission medium known to the art. The disclosed subject matter is not limited by these aspects of any given implementation.

The particular embodiments disclosed above are illustrative only as the disclosed subject matter may be modified and practiced in different but equivalent manners apparent to those skilled in the art having the benefit of the teachings herein. Furthermore no limitations are intended to the details of construction or design herein shown other than as described in the claims below. It is therefore evident that the particular embodiments disclosed above may be altered or modified and all such variations are considered within the scope of the disclosed subject matter. Accordingly the protection sought herein is as set forth in the claims below.

