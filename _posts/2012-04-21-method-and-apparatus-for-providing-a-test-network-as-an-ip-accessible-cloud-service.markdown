---

title: Method and apparatus for providing a test network as an IP accessible cloud service
abstract: A method and structure for a cloud service includes an API (application programming interface) as tangibly embodied in a set of computer-executable instructions and selectively executable on a computer on a network. The API provides a user interface for a cloud environment comprising one or more virtual machines to be selectively instantiated on at least one computer in the network upon a user request. A library is accessible via the API, the library providing definitions of components available to be instantiated in the cloud environment. The API automatically instantiates an image of a virtual network of components, as defined by a user input request and provides at least one cloud portal providing the user an access to exercise the instantiated virtual network image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09286103&OS=09286103&RS=09286103
owner: International Business Machines Corporation
number: 09286103
owner_city: Armonk
owner_country: US
publication_date: 20120421
---
The present invention generally relates to transitions to new network protocols and more specifically in an exemplary embodiment a network test environment is provided as a cloud service accessible via IPv4 to test new protocol and network configuration for IPv6 components and configurations.

The Internet is currently based on the IPv4 protocol Internet Protocol version 4 . However due to rapid adoption of the Internet available address space in the IPv4 protocol has been depleted and the Internet needs to transition to IPv6 Internet Protocol version 6 .

IPv6 has a much larger address space along with other additional capabilities. Thus IPv6 and IPv4 although versions of the same protocol have significant differences and all network and network related components whether servers applications storage etc. that are network connected need to be upgraded to IPv6 from IPv4. Additionally the addressing structures in IPv6 are different as are capabilities like mobility multicasting and address auto configuration.

The transition from IPv4 to IPv6 is expected to happen gradually. In a study by the present inventors it is expected that an enterprise will need to spend about 6 of its annual IT information technology budget to transition to IPv6 over multiple years.

Typically each network domain e.g. enterprise etc. will first try to create an internal IPv6 sandbox to learn first hand about this new technology by experimenting with its various capabilities. Doing this in a sandbox shields the customer s existing IPv4 network from the IPv6 testing.

The term sandbox has arisen recently as referring to an arena in which network specialists of an enterprise could play in for purpose of learning about IPv6 and testing their enterprise IPv6 components without having to actually implement these components on their existing network until they are deemed to function satisfactorily.

Businesses will typically begin the transition to IPv6 by setting up an internal sandbox test network for the purpose of gaining experience for testing application compliance and migration techniques etc. Setting up such a test network requires the customer to firstly develop in house IPv6 skills and secondly invest in procuring all the necessary IPv6 components that will comprise the test network.

The present invention provides a different approach by providing an arena in which IPv6 components are available for customization without as much initial investment so that users can become familiar with this new technology including testing of IPv6 components and interconnections that may eventually be implemented by an enterprise outside the arena as permanent components in an entity s existing network.

In view of the foregoing and other exemplary problems drawbacks and disadvantages of the conventional systems it is an exemplary feature of the present invention to provide a structure and method in which these transition requirements are alleviated.

With the present invention a customer does not have to set up a test IPv6 network on their own and instead rents such a test network provided as a cloud service as described herein.

Secondly the present invention provides a method so that the initial IPv6 expertise needed is lower since a test network is set up and provided by someone else as a cloud service and a customer can build up their expertise over time.

Thirdly with the present invention a customer can decide to expand the test network at will by renting out additional capability as needed.

In a first exemplary aspect the present invention provides a structure and method for a cloud service including an API application programming interface as tangibly embodied in a set of computer executable instructions and selectively executable on a computer on a network the API providing a user interface for a cloud environment comprising one or more virtual machines to be selectively instantiated on at least one computer in the network upon a user request and a library accessible via the API the library providing definitions of components available to be instantiated in the cloud environment wherein the API automatically instantiates an image of a virtual network of components as defined by a user input request and provides at least one cloud portal that provides the user an access to exercise the instantiated virtual network image.

In a second exemplary aspect also described herein is an apparatus including at least one processor to execute a set of machine readable instructions a memory device to store sets of instructions for execution on the at least one processor and a port to receive instructions from a user and transmit results to the user wherein a set of instructions stored on the memory device comprises instructions to permit the user to select network components from a library of standard network components and to define interconnections and settings of the selected network components to thereby define a desired virtual network to automatically instantiate the desired virtual network as an image being executed by one or more virtual machines in a cloud environment and to permit the user to exercise the instantiated desired virtual network image.

In a third exemplary aspect also described herein is a method of providing a cloud service including receiving a user request via a network input port on a computer to set up a virtual network image to be executed on one or more virtual machines invoking an API application programming interface that provides a user interface for the user request the API providing a set of network components selectable by the user for the virtual network image receiving an input description from the user that defines a desired virtual network image including user selected network components and associated interconnections and settings and automatically instantiating the defined virtual network image on one or more virtual machines.

In a fourth exemplary aspect also described herein is a non transitory computer readable storage medium tangibly embodying a program of machine readable instructions executable by a digital processing apparatus to perform a method of providing a cloud service described herein.

Referring now to the drawings and more particularly to exemplary embodiments of the method and structures according to the present invention will now be described.

Before explaining the mechanism of the present invention it will be useful to understand cloud computing platforms the environment used to implement the present invention.

As known in the art a cloud computing platform such as demonstrated by the Amazon Elastic Compute Cloud EC2 allows users to rent virtual computers on which to run their own computer applications. EC2 thereby allows a scalable deployment of applications by providing a Web service through which a user can boot an Amazon Machine Image to create a virtual machine which Amazon calls an instance containing any software desired.

A user can create launch and terminate server instances as desired paying by the hour for active servers thereby explaining the term elastic. EC2 also provides users with control over the geographical location of instances that allows for latency optimization and high levels of redundancy.

EC2 uses Xen virtualization in which each virtual machine e.g. instance functions as a virtual private server. Different operating systems are available for the EC2 service including Linux Sun Microsystems OpenSolaris and Solaris Express Community Edition Windows Server 2003 Windows Server 2008 FreeBSD and NetBSD operating systems.

In contrast to offering cloud computing such as available through EC2 wherein computing capability is available to a user on a network of virtual machines the present invention provides a cloud service in which virtual machines are available for users to set up a sandbox for a new technology such as the transition to IPv6. In an exemplary embodiment such service is offered on a pay as you go basis thereby reducing the user s initial investment in components and technical expertise since the new technology components available on the cloud service would be designed by someone already having expertise in the new technology. The cloud service would make available to the user a standard library of new technology e.g. IPv6 components from which the user would select instantiations of components to be interconnected as requested thereby providing a an environment for testing that is customized by each user.

As an initial matter it is noted that the cloud service of the present invention can be implemented either on an existing cloud environment such as EC2 or the invocation of the cloud service could set up a new cloud environment using virtual machines on any computer or network. In a typical scenario the user would contact a network server having the IPv6 library and interface described below for purpose of setting up a virtual network consisting of a desired instantiation of interconnected virtual IPv6 components for testing.

Returning now to the present invention shows the method of an exemplary embodiment as demonstrated for IPv6 although as mentioned above the cloud service of the present invention could be similarly implemented for any new technology for which a library of standard components could be developed for users to instantiate in a desired customized interconnectivity. In step of flowchart in a user initially logs onto the cloud service and defines a desired IPv6 network topology including network components applications and connectivity. Access to a cloud service typically would involve contacting a server on the Internet that is configured to make available the cloud service.

In step the user invokes the cloud service mechanism such as an application program interface API that permits the user to make a request for the API to provision and implement a virtual network as described by the user s request using instantiations of components that are selectable from a library of available components that have been previously designed for the new technology.

In step the cloud service API automatically instantiates the user s requested IPv6 network topology using the user s requested IPv6 components. Similar to the explanation above for the Amazon EC2 cloud service this step might involve placing the user s desired virtual network instantiation on an existing cloud platform such as EC2. But the virtual network instantiation could alternatively involve a physical machine typically a server that will instantiate a cloud platform by generating one or more virtual machines that implement the IPv6 components requested by the user s input definition.

The precise details of the IPv6 virtual network instantiation are not important in this discussion since instantiation of virtual machines and components in the cloud environment is well known in the art. What is noted is that the library of virtual machines available for a customer using the present invention will be predetermined in configuration. Thus for example one possible virtual machine might be preconfigured to emulate a server while another possible virtual machine might be preconfigured to emulate a router while another possible virtual machine might be preconfigured to emulate a server connected to a router etc.

In step the cloud service API also automatically sets up the network connectivity requested by the user thereby mapping the user s requested configuration to the virtual components operating on the virtual machine instantiated in step and in step the cloud service advises the user that the requested IPv6 network is available.

Thus in this exemplary embodiment for IPv6 experimentation the present invention offers a multi tenant service where customers can request an IPv6 network to be provisioned and can access the provisioned instance through IPv4 permitting customers to try out applications in the IPv6 setting without having to deploy an IPv6 network of their own. As the customer becomes comfortable with the new technology the customer will begin implementing their own IPv6 transition in their own network.

From the description of it can be seen that the present invention offers networking as a cloud service to users as distinguished from conventional cloud services offering computing services in the cloud. For purpose of illustration shows an exemplary high level overview of the IPv6 test and development cloud mechanism. Each dashed line bubble represents an instantiation of a network requested by a user . Each instantiation thereby provides a different virtual IPv6 sandbox for the user as available to the user via tunnels that would provide the user access to play in the sandbox.

It should be clear that any number of IPv6 components e.g. servers routers firewalls etc. can be included in an instantiation and interconnected in any number of ways such as indicated exemplarily by the interconnections in which exemplarily include unspecified network infrastructure indicated by the clouds in this diagram. As described in the flowchart of the API of the present invention receives the user s requested network and automatically instantiates this network as IPv6 components retrieved from a library of pre prepared components and automatically interconnects the components as requested. Although shows exemplarily a collection of interconnected networked components including servers routers and firewall it should be clear to one having ordinary skill in the art that other components are possible including applications storage network appliances intrusion detection systems and intrusion prevention systems etc. Other examples of network components might include network support services such as DNS Domain Name Server or DHCP Dynamic Host Configuration Protocol servers.

Although not expressly indicated in the two routers could be interconnected to provide a network of components. It is noted that although exemplarily shows a single IPv6 component respectively instantiated by each virtual machine the virtual machines can respectively instantiate a plurality of IPv6 components.

That is although machine might be a physical separate provisioning server portal server to accept user requests for the physical machines there is no restriction that multiple physical machines be used. One could place multiple virtual machines on a physical machine and one virtual machine could have multiple IPv6 functions built into them.

Four virtual machines VMs are demonstrated as instantiated on these two physical servers two VMs being executed on server and two VMs being executed on server . Although each server is shown with two VMs currently executing the two shaded VMs are not involved in the current sandbox.

Thus VM and VM are providing the sandbox with two IPv6 routers. The two physical machines are interconnected on the physical layer using for example Ethernet. The VMs each have an IPv6 router function each having been created from a v6 router image from a library of images. The two v6 router VMs are connected through a v6 logical link created as an IPv6 over IPv4 tunnel meaning that the IPv6 link resides on the IPv4 foundation .

From this exemplary configuration it should now be clear to one having ordinary skill in the art that given a topology of various v6 components and interconnections one could instantiate a VM for each component from the library of possible components and connect the VMs in accordance with the topology as exemplarily illustrated in .

Although only one logical link is shown in it would be clear to one having ordinary skill in the art that any arbitrary topology can be obtained by creating such links repeatedly between relevant VMs thereby any desired IPv6 topology can be similarly instantiated.

It is also noted that the user interacts e.g. exercises the components in the sandbox by interacting with the virtual machines. That is the user could specify a topology such as shown in . This topology gets mapped by the provisioning server into a series of IPv6 virtual nodes and virtual links as shown in . The links get exercised meaning that they are used to route IPv6 packets between IPv6 components e.g. when a user logs into a virtual machine running a web browser and sends a web request to the web server of the same topology the web request would generate a series of IPv6 packets in the case of the exemplary embodiment described in .

The CPUs are interconnected via a system bus to a random access memory RAM read only memory ROM input output I O adapter for connecting peripheral devices such as disk units and tape drives to the bus user interface adapter for connecting a keyboard mouse speaker microphone and or other user interface device to the bus a communication adapter for connecting an information handling system to a data processing network the Internet an Intranet a personal area network PAN etc. and a display adapter for connecting the bus to a display device and or printer e.g. a digital printer or the like .

In addition to the hardware software environment described above a different aspect of the invention includes a computer implemented method for performing the above method. As an example this method may be implemented in the particular environment discussed above.

Such a method may be implemented for example by operating a computer as embodied by a digital data processing apparatus to execute a sequence of machine readable instructions. These instructions may reside in various types of signal bearing storage media.

Thus this aspect of the present invention is directed to a programmed product comprising signal bearing storage media tangibly embodying a program of machine readable instructions executable by a digital data processor incorporating the CPU and hardware above to perform the method of the invention. In this context signal bearing describes that the stored instruction has a functional aspect such that an electronic device can sense the instruction information on the signal bearing storage medium.

This signal bearing storage media may include for example a RAM contained within the CPU as represented by the fast access storage for example. Alternatively the instructions may be contained in another signal bearing storage media such as a magnetic data storage diskette directly or indirectly accessible by the CPU .

Whether contained in the diskette the computer CPU or elsewhere the instructions may be stored on a variety of machine readable data storage media such as DASD storage e.g. a conventional hard drive or a RAID array magnetic tape electronic read only memory e.g. ROM EPROM or EEPROM an optical storage device e.g. CD ROM WORM DVD digital optical tape etc. paper punch cards or other suitable signal bearing storage media including memory devices in transmission hardware communication links and wireless and including different formats such as digital and analog. In an illustrative embodiment of the invention the machine readable instructions may comprise software object code.

It is again noted that for purpose of explaining the concepts of the present invention an exemplary embodiment uses the IPv6 transition to explain the concepts of the invention. However the concepts of this invention can also be applied to offer a complete networking system as a cloud service for other technology testing.

For example for an enterprise wishing to test out a set of new networking components e.g. router upgrades the set of related upgrades can be bundled as an operational system and offered as a service from the cloud. Thus the present invention is not intended as directed simply to providing a cloud service for IPv6 transition but is intended as directed to the more general technique of providing a cloud service for learning experimenting with and testing new networked technologies. One of ordinary skill in the art would readily understand that the cloud service mechanism of the present invention could be used for any new technology or even any current technology for which components can be pre prepared and stored in a library for instantiation in a cloud environment.

Thus while the invention has been described in terms of a single exemplary embodiment those skilled in the art will recognize that the invention can be practiced with modification within the spirit and scope of the appended claims.

Further it is noted that Applicants intent is to encompass equivalents of all claim elements even if amended later during prosecution.

