---

title: Multi-pass encoding
abstract: In accordance with aspects of the disclosure, devices and methods are provided for receiving uncompressed image data and performing multi-pass encoding of the uncompressed image data including encoding a frame of the uncompressed image data in a first pass, storing predictor pixels from the encoded frame in a memory, and re-encoding the frame of the uncompressed image data in a second pass using the stored predictor pixels from the first pass.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08948529&OS=08948529&RS=08948529
owner: Google Inc.
number: 08948529
owner_city: Mountain View
owner_country: US
publication_date: 20121030
---
In some implementations conventional video compression techniques use a multi stage pipeline to improve performance. For instance different portions of video encoding techniques are separated into stages such as one stage of the pipeline performs motion estimation another stage performs a final coding type decision and another stage performs quantization and reconstruction. One problem with this multi stage approach is that in reference to timing the motion estimation stage can be too far from the reconstruction stage. For instance when estimating motion for an arbitrary macroblock N a previous macroblock N 1 e.g. a left neighbor has not yet been reconstructed. Therefore the encoder may not be able to use data in a desirable fashion for motion estimation. This can create both visual artifacts and hamper compression efficiency. As such there exists a need to improve conventional video compression techniques to reduce errors.

In accordance with aspects of the disclosure a device may be provided for multi pass encoding. The device may include a memory and an encoder configured to receive uncompressed image data and perform multi pass encoding of the uncompressed image data. The encoder may include a first pass module configured to encode a frame of the uncompressed image data in a first pass a prediction module configured to store predictor pixels from the encoded frame in the memory and a second pass module configured to re encode the frame of the uncompressed image data in a second pass using the predictor pixels stored by the prediction module from the first pass.

In accordance with aspects of the disclosure a method may be provided for multi pass encoding. The method may include receiving uncompressed image data at an encoder and performing multi pass encoding of the uncompressed image data at the encoder including encoding a frame of the uncompressed image data in a first pass storing predictor pixels from the encoded frame in a memory and re encoding the frame of the uncompressed image data in a second pass using the stored predictor pixels from the first pass.

In accordance with aspects of the disclosure an apparatus may be provided for multi pass encoding. The apparatus may include a module configured to receive uncompressed image data and perform a first encoding of the uncompressed image data by encoding at least one block of the uncompressed image data in a first pass a prediction module configured to store predictor pixels from the at least one encoded block in memory and another module configured to perform a second encoding of the uncompressed image data by encoding the at least one block of the uncompressed image data in a second pass using the predictor pixels stored from the first pass.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings and from the claims.

In accordance with aspects of the disclosure to overcome the deficiencies of conventional video compression techniques systems and methods are provided herein for a multi pass e.g. a two pass intra prediction mode selection for encoders including hardware HW video encoders. In some implementations the devices and methods provided herein adjust encoding architecture to perform multi pass encoding including two pass encoding. For instance after receiving uncompressed image data a first pass may be used to encode and or store a frame of the uncompressed image data e.g. an entire input frame as is . For one or more macroblocks within the frame predictor pixels may be stored in a separate memory area. In an example the frame may include a plurality of pixels divided into blocks of pixels the predictor pixels may include a sequence of pixels along an edge of one or more blocks of pixels that are neighboring another block of pixels and the predictor pixels may be stored as the sequence of pixels of the one or more blocks of pixels that are neighboring another block of pixels in memory. After storing the predictor pixels a second pass may be used to encode the frame again. As a result of using this technique the encoder may use predictor pixels from the first pass to use in intra prediction mode selection for the second pass. As such this intra prediction mode technique may provide an improved approximation of actual predictors to reduce visual artifacts and improve compression efficiency. In some examples performance may be roughly halved as one or more frames may be encoded twice. However in other instances since the bitstream and the reconstructed image from the first pass may not need to be used or stored in memory generated bus load may be reduced. Further more calculations and data may be collected from the first pass to improve compression efficiency and visual quality.

In the example of the system comprises a multi pass encoding system that may be associated with a device thereby transforming the device into a special purpose machine designed to implement multi pass encoding as described herein. In this sense the device may include any standard element s including at least one optional processor memory e.g. non transitory computer readable storage medium power peripherals and various other elements not specifically shown in . The memory may include one or more areas such as a first area and a second area . Further the device may include a display e.g. monitor or some other display that may be used to display images e.g. static images and or video images . In some instances various other elements of the device that may be useful to implement the device may be added or included without departing from the scope of the present disclosure.

The multi pass encoding system may include an imager or an imaging sensor configured to capture an image or images and generate uncompressed image data of the captured image or images. The imager may comprise any device that converts an optical image into an electronic signal. In an example the imager may comprise a video camera configured to capture a plurality of sequential images and generate uncompressed image data of the sequentially captured images. The imager may include one or more sensors e.g. any type of detector such as a focal plane array for capturing image signals representative of an image or images. The sensors of the imager provide for representing e.g. converting a captured image signal of an image or images as digital data e.g. via an analog to digital converter included as part of the sensor or separate from the sensor as part of imaging system .

In an example the imager may include a static camera configured to capture a single static image and generate uncompressed image data of the captured image. In another example the imager may include a video camera configured to capture a plurality of sequential images and generate uncompressed image data of the sequentially captured images.

The multi pass encoding system may include an input interface configured to receive image data from an external source including uncompressed image data. The input interface may be configured to receive image data e.g. static images and or input video streamed from another device. The input interface may include one or more inputs e.g. any type of input for receiving image signals representative of an image or images. The one or more inputs of the input interface may provide for receiving image signals of an image or images as digital data e.g. via an analog to digital converter included as part of the input interface or separate from the input interface as part of the device .

The multi pass encoding system may include an encoder configured to receive uncompressed image data and perform multi pass encoding of the uncompressed image data.

The encoder may include a first pass module configured to encode a frame of the uncompressed image data in a first pass. The first pass module may include a circuit such as a logic circuit. In an example the frame may include at least one frame from a plurality of frames including a plurality of sequential frames. In another example the frame may include an entire frame and the first pass module may be configured to encode the entire frame of the uncompressed image data.

In an example the encoder may be configured to select a first intra prediction mode of operation by using the first pass module to encode the frame of the uncompressed image data in the first pass using the predictor pixels from the first pass as part of the first intra prediction mode selection.

The encoder may include a prediction module configured to store predictor pixels which may be referred to as intra mode selection pixels from the encoded frame in memory e.g. memory . In an example the frame may include a plurality of pixels divided into blocks of pixels. The predictor pixels may include a sequence of pixels along an edge of one or more blocks of pixels that are neighboring another block of pixels. In this example the prediction module may be configured to store the predictor pixels as the sequence of pixels of the one or more blocks of pixels that are neighboring another block of pixels in memory e.g. memory .

In another example the frame may include a plurality of pixels divided into blocks which may be referred to as macroblocks of pixels with the one or more blocks of pixels having columns of pixels. The predictor pixels may include a column of pixels along an edge of the one or more blocks of pixels that are neighboring another block of pixels having a neighboring column of pixels. In this example the prediction module may be configured to store the predictor pixels as the column of pixels of the one or more blocks of pixels that are neighboring the another block of pixels having the neighboring column of pixels in memory e.g. memory .

In another example the frame may include a plurality of pixels divided into blocks of pixels with the one or more blocks of pixels having columns of pixels. The predictor pixels may include a right most column of pixels along an edge of the one or more blocks of pixels that are neighboring another block of pixels having a left most neighboring column of pixels adjacent to right most column of pixels. In this example the prediction module may be configured to store the predictor pixels as the right most column of pixels of the one or more blocks of pixels that are neighboring the another block of pixels having the left most neighboring column of pixels in memory e.g. memory .

In another example the frame may include a plurality of pixels divided into blocks of pixels with the one or more blocks of pixels having rows of pixels. The predictor pixels may include a row of pixels along an edge of the one or more blocks of pixels that are neighboring another block of pixels having a neighboring row of pixels. In this example the prediction module may be configured to store the predictor pixels as the row of pixels of the one or more blocks of pixels that are neighboring the another block of pixels having the neighboring row of pixels in memory e.g. memory .

In another example the frame may include a plurality of pixels divided into blocks of pixels with the one or more blocks of pixels having rows of pixels. The predictor pixels may include a bottom most row of pixels along an edge of the one or more blocks of pixels that are neighboring another block of pixels having a top most neighboring row of pixels adjacent to bottom most row of pixels. In this example the prediction module may be configured to store the predictor pixels as the bottom most row of pixels of the one or more blocks of pixels that are neighboring the another block of pixels having the top most neighboring row of pixels in memory e.g. memory .

The encoder may include a second pass module configured to re encode the frame of the uncompressed image data in a second pass using the predictor pixels stored by the prediction module from the first pass. In an example the encoder may be configured to select a second intra prediction mode of operation by using the second pass module to re encode the frame of the uncompressed image data in the second pass using the predictor pixels from the first pass as part of the intra prediction mode selection.

In an implementation of the device the imager may be configured to capture an image or images and generate uncompressed image data of the captured image or images. In this instance the encoder may be configured to receive the uncompressed image data from the imager and store the uncompressed image data in the first area of the memory . The prediction module may be configured to store the predictor pixels from the encoded frame in the second area of the memory that is separate from the first area of the memory .

In an example the imager may include a static camera configured to capture a single static image and generate uncompressed image data of the captured image. In another example the imager may include a video camera configured to capture a plurality of sequential images and generate uncompressed image data of the sequentially captured images.

In an implementation of the device the imager may be configured to capture an image or images and generate uncompressed image data of the captured image or images. In this instance the at least one optional processor may be configured to receive the uncompressed image data from the imager and provide the encoder with the uncompressed image data.

In an implementation of the device the input interface may be configured to receive image data of image or images. In this instance the encoder may be configured to receive the image data from the input interface and store the image data in the first area of the memory . Further the prediction module may be configured to store the predictor pixels from the encoded frame in the second area of the memory that is separate from the first area of the memory .

The display may be configured to display at least one of the uncompressed image data of the captured image the frame of the image data encoded in the first pass and the frame of the encoded image data of the second pass. The display may include an image display device e.g. a liquid crystal display LCD or some various other type of video display or monitor. The at least one optional processor may be adapted to display image data on the display . The at least one optional processor may be configured to retrieve and obtain image data from storage medium and display any retrieved image data on the display . The display may include display electronics which may be utilized by the at least one optional processor to display image data. The display may receive image data directly from image sensor via the at least one optional processor and or the image data may be transferred from the storage medium via the at least one optional processor .

In the example of the multi pass encoding system is illustrated using various functional blocks or modules that represent more or less discrete functionality. However such illustration is provided for clarity and convenience and thus in some instances the various functionalities may overlap or be combined within a described block s or module s and or may be implemented by one or more block s or module s not specifically illustrated in the example of . Generally conventional functionality that may be useful to the system of may be included even though such conventional elements are not illustrated explicitly for the sake of clarity and convenience.

Referring to the example of the encoder may be configured to receive an input frame of uncompressed image data and perform a multi pass encoding of the input frame . In an example the encoder may be configured to represent the frame as a plurality of pixels divided into blocks of pixels e.g. pixel blocks or macroblocks A B C . . . I . In various implementations the blocks of pixels may include any number of pixels formed in blocks of any dimension such as for example 2 2 2 4 4 4 2 8 8 8 8 16 16 16 etc. without departing form the scope of the present disclosure. In an example the encoder may be configured to define predictor pixels e.g. etc. within the one or more blocks of pixels e.g. A B C etc. to include a sequence of pixels along an edge e.g. a right most column of pixels of the one or more blocks of pixels that are neighboring e.g. adjacent to without intervening blocks in contact with another block of pixels. For instance pixel block Ais a neighbor of pixel block Band pixel block Bis a neighbor of pixel block C. In this instance pixel block Cdoes not have a pixel block neighbor to the right when scanning from left to right across the input frame . In this instance even though the predictor pixels are shown as columns the predictor pixels may be shown as rows in an alternate implementation without departing from the scope of the present disclosure.

The encoder may be configured to use the first pass module to encode the input frame of the uncompressed image data e.g. blocks of pixels A B C etc. in a first pass encoding to generate first encoded blocks of pixels e.g. A B C etc. . In this first pass encoding a first intra prediction mode of operation may be selected by using the first pass module to encode a sequence of input pixel blocks e.g. A B C of the input frame in the first pass using the predictor pixels e.g. from the first pass as part of the first intra prediction mode selection to generate the first encoded pixel blocks e.g. A B C etc. using the same or different intra prediction modes e.g. M M M. . . M . In this instance the predictor pixels for pixel block Amay be used for intra prediction mode selection for pixel block B and the predictor pixels for pixel block Bmay be used for intra prediction mode selection for pixel block C. Further in this instance the predictor pixels for pixel block Cmay be considered optional since there is no pixel block neighbor adjacent to pixel block Cwhen scanning from left to right across the input frame . As such encoded pixel block Cmay be considered optional for use in a second pass encoding .

In the first pass intra prediction mode selection at least one mode of a plurality of modes M M M. . . Mmay be selected. The modes may include any number N of modes. For instance one of the intra prediction modes may include a VP8 intra prediction mode for encoding data in VP8 format which is an open video compression format representing a specification for digitally representing a video as a file or a bitstream. Further one of the intra prediction modes may include a H.264 intra prediction mode for encoding data in H.264 MPEG 4 Part 10 or AVC Advanced Video Coding format which is a standard for video compression and is currently used for recording compression and distribution of high definition HD video. Further one of the intra prediction modes may include a JPEG mode for encoding data in JPEG format which is a commonly used method for digital image compression.

Referring to the example of the encoder may be configured to use the prediction module to store the predictor pixels from the first encoded frames A B Cin memory e.g. memory . As described herein the encoded pixel block Cand the predictor pixels thereof may be considered optional for use in the second pass. In an example the prediction module may be configured to store the predictor pixels from the first encoded frames A B Cas the sequence of pixels of the one or more blocks of pixels that are neighboring another block of pixels in the memory . For example in this instance the predictor pixels for encoded pixel block Amay be stored in memory and the predictor pixels for pixel block Bmay be used for intra prediction mode selection for pixel block Cstored in memory . Further in this instance the predictor pixels for pixel block Cmay be considered optional since there is no pixel block neighbor adjacent to pixel block Cwhen scanning from left to right across the input frame . As such encoded pixel block Cmay be considered optional for use in a second pass encoding . In an example memory and time may be saved by only storing the columns instead of all of the encoded pixels from the blocks.

Referring to the example of the encoder may be configured to use the second pass module to re encode the input frame of the uncompressed image data e.g. blocks of pixels A B C etc. in a second pass encoding using the predictor pixels etc. stored by the prediction module from the first pass encoding to generate second encoded blocks of pixels e.g. A B C etc. . In this second pass encoding a second intra prediction mode of operation may be selected by using the second pass module to encode a sequence of input pixel blocks e.g. A B C of the input frame in the second pass using the predictor pixels e.g. from the first pass as part of the second intra prediction mode selection to generate the second encoded pixel blocks e.g. A B C etc. using the same or different intra prediction modes e.g. M M M. . . M . In this instance the predictor pixels for pixel block Amay be used for intra prediction mode selection for pixel block B and the predictor pixels for pixel block Bmay be used for intra prediction mode selection for pixel block C.

In an implementation referring to example of the first pass module of the encoder may be configured to perform the first pass and the second pass module of the encoder may be configured to perform the second pass. In this instance the first and second pass modules may be configured to perform various image processing techniques including for example cropping rotation YCbCr conversion intra prediction motion estimation mode selection differential MV coding transform and quantization and inverse transform. Further in this implementation the second pass module may be configured to perform other various additional image processing techniques including for example entropy coding bitstream forming and deblocking filtering. Further scope and function regarding these various image processing techniques are described in greater detail herein.

In the examples of the input frame is shown with 9 blocks of pixels A B C . . . I divided into 8 8 non overlapping pixels P . In various implementations the input frame may include any number of pixels that may be divided into any number of pixel blocks without departing from the scope of the disclosure. Further in various examples the blocks of pixels may include any number of pixels formed in any number of pixel blocks of any dimension such as for example 2 2 4 4 8 8 16 16 etc. without departing from the scope of the disclosure.

In an implementation the blocks of pixels A B C . . . I may be used in video compression for compressing images in motion sequences. For instance individual frames of images e.g. video images may be grouped together in an image group and displayed in a manner that provides a viewer with spatial motion.

Generally the term pixel refers to a picture element wherein the pixel may be referred to as a single point in an image. In various examples an image may by divided into multiple pixels P that may be arranged in columns and rows wherein neighboring pixels e.g. adjacent pixels may be positioned close together to appear connected to a person viewing the pixels . In some examples shades of gray may be represented by a number of bits for the displayed pixel. For instance an 8 bit grayscale mode may use 8 bits for color in the pixel to display 2 to the 8th power 256 different colors or shades of gray. For color display the pixel may comprise a shade for multiple colors such as red R green G and blue B wherein various colors may be represented by different combinations of RGB shades in the pixel.

Further in the examples of the frame or input frame includes at least 9 blocks of pixels including block A block B block C block D block E block F block G block H and block I. Further as shown in when scanning from left to right across the input frame block Aneighbors block B block Bneighbors block C block Dneighbors block E block Eneighbors block F block Gneighbors block H and block Hneighbors block I. Still further as shown in when scanning from top to bottom across the input frame block Aneighbors block D block Dneighbors block G block Bneighbors block E block Eneighbors block H block Cneighbors block F and block Fneighbors block I.

Referring to the input frame includes a plurality of pixels divided into blocks of pixels e.g. A B C . . . I with the one or more blocks of pixels having 8 columns of pixels e.g. C C C . . . C . In an implementation the predictor pixels may include a column of pixels along an edge of the one or more blocks of pixels e.g. A B C . . . I that are neighboring another block of pixels having a neighboring column of pixels e.g. column Cof block Aneighbors column Cof block B when scanning from left to right across the input frame . In this implementation the prediction module may be configured to store the predictor pixels as the column of pixels of the one or more blocks of pixels that are neighboring the another block of pixels having the neighboring column of pixels in memory . In some instances column Cof blocks C F and Iare considered optional for memory store.

Further referring to the predictor pixels may include a right most column of pixels e.g. column C along an edge of the one or more blocks of pixels e.g. A B C . . . I that are neighboring another block of pixels e.g. block Bis a neighbor of block A having a left most neighboring column of pixels e.g. column C adjacent to the right most column of pixels e.g. column C when scanning from left to right across the input frame . In this instance the prediction module may be configured to store the predictor pixels as the right most column of pixels of the one or more blocks of pixels that are neighboring the another block of pixels having the left most neighboring column of pixels in memory . In some instances the right most column Cof blocks C F and Imay be considered optional for memory store. In various other examples instead of the right most column of pixels being stored any one or more of the other columns of pixels maybe stored.

Referring to the input frame includes a plurality of pixels divided into blocks of pixels e.g. A B C . . . I with the one or more blocks of pixels having 8 rows of pixels e.g. R R R . . . R . In an implementation the predictor pixels may include a row of pixels along an edge of the one or more blocks of pixels e.g. A B C . . . I that are neighboring another block of pixels having a neighboring row of pixels e.g. row Rof block Aneighbors row Rof block D when scanning from top to bottom across the input frame . In this implementation the prediction module may be configured to store the predictor pixels as the row of pixels of the one or more blocks of pixels that are neighboring the another block of pixels having the neighboring row of pixels in memory . In some instances the row Rof blocks G H and Imay be considered optional for memory store.

Further referring to the predictor pixels may include a bottom most row of pixels e.g. row R along an edge of the one or more blocks of pixels e.g. A B C . . . I that are neighboring another block of pixels e.g. block Dis a neighbor of block A having a top most neighboring row of pixels e.g. row R adjacent to the bottom most row of pixels e.g. row R when scanning from top to bottom across the input frame . In this instance the prediction module may be configured to store the predictor pixels as the right most row of pixels of the one or more blocks of pixels that are neighboring the another block of pixels having the left most neighboring row of pixels in memory . In some instances the bottom most row Rof blocks G H and Imay be considered optional for memory store. In various other examples instead of the right most column of pixels being stored any one or more of the other columns of pixels maybe stored.

In accordance with aspects of the disclosure the systems and methods are provided herein for a multi pass e.g. a two pass intra prediction mode selection for encoders including SW and or HW encoders. In some implementations the systems and methods are configured to perform a first pass to store a rightmost pixel column 16 pixels tall of the reconstructed macroblock into a separate memory buffer wherein the store may be performed before filtering. For a last macroblock column of a macroblock row the pixels may not be needed so they may be skipped decreasing requirements for buffer size and bus load. When performing a second pass the encoder may use the stored pixel values as left neighbor macroblock values when performing intra prediction mode selection in a manner as described herein. Inner boundaries may use pixel values from the input image e.g. meaning that intra 4 4 prediction modes for blocks not on the upper block row or leftmost block column may be hampered . As the second pass may encode the macroblocks differently than the first pass the result may provide a closer approximation of actual reconstructed data especially with higher quantizers.

In some implementations some reasons for using a separate memory area for storing the pixels may include one or more of the following. For instance if not otherwise required reconstructed frame output may be disabled for the first pass saving bus load e.g. store of 384 pixels vs. 16 . In another instance bus load may be reduced in the second pass wherein reconstructed data of multiple macroblocks may be read with a single burst as opposed to 16 bursts as required if the first pass reconstructed frame were to be stored in raster scan format. In another instance memory use may be reduced wherein a need to allocate space for only required luminance pixels as opposed to entire reference frame. In some implementations the technique provided herein is not format specific and may be implemented in various known encoders. In other implementations the following elements may need to be added to the SW HW interface base address for storing pixel data signal to enable writing rightmost pixels of reconstructed macroblocks to the base address and signal to enable using the pixel data from the base address in the intra prediction mode selection. Further in another implementation the SW driver may need to be updated accordingly to allocate 16 number of macroblocks bytes of memory for the buffer and enable the signals at correct points.

As shown in the imaging device may include an imager an optional image processor an encoder and a memory . In various implementations the imaging device may represent various mobile devices including mobile phones smartphones consumer video cameras e.g. compact DSLR video etc security video cameras or any device that records and stores video digitally.

The imager may be configured to capture an image and generate uncompressed image data of the captured image. The imager may be referred to as a camera sensor and or an imaging sensor. The imager may comprises a video imager configured to capture a plurality of sequential images and generate uncompressed image data of the sequentially captured images. In various examples the imager may be configured to capture one or more images and generate uncompressed image data of the captured images. The imager may comprise any device that converts an optical image into an electronic signal. For instance the imager may comprise a video camera configured to capture a plurality of sequential images and generate uncompressed image data of the sequentially captured images.

The encoder may be configured to receive the uncompressed image data directly from the imager store an encoded bitstream of the uncompressed image data in a first memory area of the memory and perform a multi pass encoding of the uncompressed image data. The encoder may include a first pass module configured to encode a frame of the uncompressed image data in a first pass. The encoder may include a prediction module configured to store an encoded bitstream of predictor pixels from the encoded frame in a second memory area of the memory that is separate from the first memory area. The predictor pixels may include neighboring pixels of the pixel in the frame and the prediction module may be further configured to store the neighboring pixels in the first memory area of the memory . The encoder may include a second pass module configured to re encode the frame of the uncompressed image data in a second pass using the predictor pixels stored by the prediction module from the first pass.

In an implementation referring to the example of the optional image processor may be configured to receive image signals from the imager process the received image signals e.g. to provide processed image data and provide the image signals and or the image data to the encoder .

In the example of the encoder system may include encoder control software encoder and pre processor hardware and a system bus in communication with external memory such as the storage mediums .

The encoder control software may include an application programming interface API module a VP8 stream header encode module an H.264 stream header encode module a JPEG stream header encode module a video bitrate control module a video stabilization module and a hardware drivers module .

The application programming interface API may comprise a specification for use as a communication interface between software modules. In some example the API may include specifications for routines data structures object classes and variables.

The VP8 stream header encode module may be configured for encoding data for VP8 which is an open video compression format representing a specification for digitally representing a video as a file or a bitstream.

The H.264 stream header encode module may be configured for encoding data for H.264 MPEG 4 Part 10 or AVC Advanced Video Coding which is a standard for video compression and is currently used for recording compression and distribution of high definition HD video.

The JPEG stream header encode module may be configured for encoding data for JPEG which is a commonly used method for digital image compression.

The video bitrate control module may be configured for video bitrate control VBC which is a technique for achieving higher color quality in low color resolution display panels wherein a dithering technique that combines adjacent pixels to simulate a desired shade. For instance VBC may be referred to as a form of temporal dithering that cycles between different color shades with the new frame to simulate an intermediate shade. In some examples rate control may be used to adjust compression i.e. bitrate on a frame by frame basis while frame rate may remain unchanged.

The video stabilization module may be configured for image stabilization IS which is a family of techniques used to reduce blurring and jitter associated with camera motion during exposure to compensate for angular movement of a camera or other imaging device. In still cameras camera jitter may be considered problematic with slow shutter speeds or with long focal length lenses. In video cameras camera jitter may cause visible frame to frame shaking in recorded videos.

The hardware drivers module may be configured for assisting a computer program to allow higher level software programs to interact with hardware devices. For instance the hardware driver may be configured to communicate with the encoder and preprocessor hardware through the system bus . When the API calls a routine the hardware driver provides commands to the encoder and preprocessor hardware . Once the encoder and preprocessor hardware sends data back the hardware driver provides routines to the API . The hardware drivers may be considered hardware dependent and operating system specific.

The encoder and pre processor hardware may include a bus interface in communication with the system bus and a plurality of hardware modules including a cropping module a rotation module a YCbCr conversion module the intra prediction module a motion estimation module a mode selection module a differential MV coding module a transform and quantization module an entropy coding module an inverse transform module a bitstream forming module a deblocking filter module a video stabilization module and an image scaling module .

The cropping module may be configured for cropping an image which may refer to removal of a portion e.g. a peripheral portion of an image to improve framing accentuate subject matter and or change aspect ratio. In an example cropping of the image may be performed digitally using image editing hardware and or software.

The rotation module may be configured for rotating an image which may refer to rotating an orientation of an image e.g. degree rotation of an image clockwise or counter clockwise with respect to a pivot point or region such as a central point or region of the image to improve positioning of the image in reference to a viewing angle. In an example degree rotation of the image may include movement between 90 orientations such as rotating between portrait and landscape positions. In another example rotation of the image may be performed digitally using image editing hardware and or software.

The YCbCr conversion module may be configured for encoding RGB information in an image color space. In an example actual color displayed may depend on actual RGB primaries to display an image signal. As such YCbCr expressed values may be predictable in reference standard RGB chroma components. Generally YCbCr refers to a family of color spaces used for color image pipelines in video and digital photography systems wherein Y is a luma component Cb is a blue difference chroma component and Cr is a red difference chroma component.

The intra prediction module may be configured for multi pass e.g. a two pass intra prediction mode selection for encoders including encoding software SW and or encoding hardware HW . In an implementation a first pass may be used to encode and store an entire frame as is. Next for the macroblock left predictor pixels may be stored in a separate memory area. Then a second pass may be used to encode the entire frame again. As a result of using this technique the intra prediction module may be supplied with reconstructed predictor pixels from the first pass to use in intra prediction mode selection. The intra prediction module is configured to provide an improved approximation of actual predictors or at least better than using the input frame to reduce visual artifacts and improve compression efficiency. In some implementations more calculations and data may be collected from the first pass to improve compression efficiency and visual quality.

The motion estimation module may be configured for motion estimation of sequential images which may refer to determining motion vectors transforming adjacent 2D images in a video sequence. Generally the motion vectors may relate to a whole image frame global motion estimation or specific parts within an image frame such as rectangular blocks arbitrary shaped patches or per pixel. Further the motion vectors may be represented by a translational model or any other model that may approximate motion of a video such as rotation and translation in all relevant dimensions including zoom.

The mode selection module may be configured for selecting an intra prediction mode of operation to re encode a frame of uncompressed image data in the second pass using the predictor pixels from the first pass as part of the intra prediction mode selection. As a result of using this multi pass encoding technique predictor pixels from the first pass may be used in intra prediction mode selection.

The differential MV coding module may be configured for encoding motion vectors of pixels in the macroblock. In reference to video compression a motion vector MV is an element for motion estimation and may represent a macroblock of an image based on a position of the macroblock in a reference image. Generally motion vectors for chrominance blocks may be derived by dividing component values of the macroblock vector in half due to the chrominance format. The macroblock vector may be obtained by adding predictors to vector differences indicated by motion vectors.

The transform and quantization module may be configured for modifying small differences in brightness over an image area by modifying the strength of high frequency brightness variations of the image. In an example this modification may be used to reduce an amount of high frequency information by dividing the component in the frequency domain by a constant and then rounding to a nearest integer.

The entropy coding module may be configured for entropy encoding image data which uses a lossless data compression scheme that is independent of characteristics of the medium. In an example entropy coding may be used to create and assign a unique prefix free code to the unique symbol in an input and data may be compressed by replacing the fixed length input symbol by the corresponding variable length prefix free output codeword. Generally the codeword length is approximately proportional to the negative logarithm of the probability wherein common symbols use short codes. Some common entropy encoding techniques include Huffman coding and arithmetic coding.

The inverse transform module may be configured for inverse transform sampling which may be referred to as pseudo random number sampling to generate sample numbers at random from any probability distribution given its cumulative distribution function. In an example computing the cumulative distribution function of the distribution which maps a number in the domain to a probability between 0 and 1 and then inverting that function is the source of the term inverse or inversion.

The bitstream forming module may be configured for forming a bitstream as a timed series of bits or as a sequence of bits. Generally bitstreams may be used in computing for synchronous transport of data between computing devices.

The deblocking filter module may be configured for applying a video filter to blocks in decoded video to improve visual quality and improve prediction performance by smoothing sharp edges of images that may form between macroblocks during block coding. Generally the deblocking filter is used for appearance improvements to decoded pictures and is part of the H.264 codec specification.

The video stabilization module may be configured for stabilizing images in sequential images of a video and may be used to reduce blurring associated with motion between sequential images captured by an imaging device by compensating for angular movement e.g. pan tilt yaw pitch etc. of the imaging device. For instance referring to still cameras camera shake may be particularly problematic at slow shutter speeds or with long focal length lenses. In another instance referring to video cameras camera shake causes visible frame to frame jitter in a recorded video.

The image scaling module may be configured for scaling an image which may include for example resizing a digital image. Generally scaling may involve a trade off between efficiency smoothness and sharpness. For instance when image size is increased the pixels in the image may become increasingly visible so as to make the image appear soft. In another instance reducing image size may enhance or sharpen a smoothness of the image.

In an implementation referring to example of the first pass module of the encoder e.g. which may include the encoder of may be configured to perform the first pass and the second pass module of the encoder e.g. which may include the encoder of may be configured to perform the second pass. In this implementation the first pass module may be configured to use and or implement modules and and the second pass module may be configured to use and or implement modules and . Accordingly the first pass module may be considered similar to the second pass module except the first pass module may not be configured to use and or implement the entropy coding module the bitstream forming module and the deblocking filter module . As such in this implementation the second pass module may be configured to use and or implement the entropy coding module the bitstream forming module and the deblocking filter module .

For instance the deblocking filter module may be omitted from the first pass module in that intra prediction as implemented in either VP8 or H.264 may use pixel values prior to deblocking filtering. In this instance the pixel values that may be stored by the prediction module may also be used as the pixel values prior to the deblocking filtering and since the output frame may be scrapped the deblocking filter module may be skipped.

In the example of operations are illustrated as discrete operations occurring in sequential order. However in other implementations two or more of the operations may occur in a partially or completely overlapping or parallel manner or in a nested or looped manner or may occur in a different order than that shown. Further one or more additional operations that may not be specifically illustrated in the example of may also be included in some implementations while in other implementations one or more of the operations may be considered optional or omitted.

In the example of at the method may include capturing an image with an image sensor e.g. the imaging sensor or the imager . In an implementation the imaging sensor may comprise a video camera configured to capture a plurality of sequential images e.g. a video stream and generate uncompressed image data of the sequentially captured images. At the method may include generating uncompressed image data of the captured image. At the method may include receiving the uncompressed image data from the image sensor. At the method may include storing the uncompressed image data in a first memory area of a storage medium. At the method may include performing a multi pass encoding of the uncompressed image data which is further described in .

In the example of operations are illustrated as discrete operations occurring in sequential order. However in other implementations two or more of the operations may occur in a partially or completely overlapping or parallel manner or in a nested or looped manner or may occur in a different order than that shown. Further one or more additional operations that may not be specifically illustrated in the example of may also be included in some implementations while in other implementations one or more of the operations may be considered optional or omitted.

In the example of at the method may include encoding a frame of the uncompressed image data in a first pass. In an example the frame may include at least one frame from a plurality of frames including a plurality of sequential frames. In another example the frame may include an entire frame and the entire frame may be encoded of the uncompressed image data.

At the method may include storing predictor pixels from the encoded frame in a memory. In an example the frame may include a plurality of pixels divided into blocks of pixels wherein the predictor pixels include a sequence of pixels along an edge of the one or more blocks of pixels that are neighboring another block of pixels and the predictor pixels may be stored as the sequence of pixels of the one or more blocks of pixels that are neighboring another block of pixels in the memory.

At the method may include re encoding the frame of the uncompressed image data in a second pass using the stored predictor pixels from the first pass. In an example a first intra prediction mode of operation may be selected by using the first pass module to encode the frame of the uncompressed image data in the first pass using the predictor pixels from the first pass as part of the first intra prediction mode selection. In another example a second intra prediction mode of operation may be selected by using the second pass module to re encode the frame of the uncompressed image data in the second pass using the predictor pixels from the first pass as part of the intra prediction mode selection.

In an example the method may further include displaying at least one of the uncompressed image data of the captured image the frame of the image data encoded in the first pass and the frame of the encoded image data of the second pass.

In an implementation shows an example of a computer device and a mobile computer device e.g. mobile communication device including a low power mobile communication device such as for example mobile phone cellular phone etc. which may be used in accordance with aspects methods and techniques as described and provided herein. The computing device may represent various forms of digital computers such as personal computers laptops tablets desktops workstations personal digital assistants servers blade servers mainframes and other appropriate computers. The computing device may represent various forms of mobile devices such as personal digital assistants cellular telephones smart phones and other similar computing devices. The components shown herein their connections and relationships and their functions are meant to be exemplary only and are not meant to limit implementations described herein and or claimed in this disclosure.

The computing device may include one or more processors memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . One or more of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. In an implementation the processor may be configured to process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be utilized as appropriate along with multiple memories and types of memory. Further multiple computing devices may be connected with the device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory may be configured to store information within the computing device . In an implementation the memory may comprise one or more volatile memory units. In another implementation the memory may comprise one or more non volatile memory units. The memory may comprise another form of non transitory computer readable medium such as a magnetic or optical disk.

The storage device may be configured for providing mass storage for the computing device . In an implementation the storage device may comprise a non transitory computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices configured for use in a storage area network or various other configurations. In some implementations a computer program product may be tangibly embodied in an information carrier. The computer program product may include instructions that when executed perform one or more methods such as those described herein. In another implementation the information carrier may comprise a non transitory computer readable medium or a non transitory machine readable medium such as the memory the storage device or memory on the processor .

The high speed controller may be configured to manage bandwidth intensive operations for the computing device while the low speed controller may be configured to manage lower bandwidth intensive operations. Such allocation of functions may be exemplary only. In an implementation the high speed controller may be coupled to the memory the display e.g. through a graphics processor or accelerator and or to the high speed expansion ports which may be configured to accept various expansion cards not shown . In the implementation low speed controller may be coupled to the storage device and or the low speed expansion port wherein the low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet etc. may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms in a manner as shown in . For example the computing device may be implemented as a standard server or multiple times in a group of such servers. The computing device may be implemented as part of a rack server system . In addition the computing device may be implemented in a personal computer PC such as a laptop computer . In another implementation components from the computing device may be combined with other components in a mobile device not shown such as device . One or more of such devices may include one or more of computing devices and an entire system may be made up of multiple computing devices communicating with one another.

The computing device may include one or more processors memory an input output device such as a display a communication interface and a transceiver among various other components. The device may be provided with a storage device such as a micro drive or some other related device to provide additional storage. One or more of the components and may be interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor may be configured to execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. In an implementation the processor may provide for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

The processor may be configured to communicate with a user through a control interface and a display interface coupled to a display . The display may comprise for example a TFT LCD Thin Film Transistor Liquid Crystal Display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In an implementation an external interface may be provide in communication with the processor to enable near area communication of device with various other devices. In an example the external interface may provide for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may be utilized.

The memory may be configured to store information within the computing device . The memory may be implemented as one or more of a non transitory computer readable medium or media one or more volatile memory units or one or more non volatile memory units. Expansion memory may be provided and connected to device through expansion interface which may include for example a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically in an example expansion memory may include instructions to carry out or supplement the processes described above and may include secure information. Thus for example the expansion memory may be provide as a security module for device and may be programmed with instructions that permit secure use of device . Further secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory or memory on processor that may be received for example over transceiver or external interface .

The device may be configured to communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. In an implementation a communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. In an example such communication may occur for example through a radio frequency transceiver . Further short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . Still further a GPS Global Positioning System receiver module may provide additional navigation and or location related wireless data to device which may be used as appropriate by applications running on device .

The device may be configured to communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. In an example an audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of the device . In various implementations such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may include sound generated by applications operating on the device .

The computing device may be implemented in a number of different forms in a manner as shown in . For example the computing device may be implemented as a mobile communication device including a cellular telephone and or some other low power mobile communication devices. In another example the computing device may be implemented as part of a smart phone personal digital assistant or some other similar mobile device.

As such various implementations of the systems methods and techniques described herein may be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations may include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and may be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a non transitory machine readable medium that is configured to receive machine instructions as a machine readable signal. In various examples the term machine readable signal may refer to any signal used to provide machine instructions and or data to a programmable processor.

In an implementation to provide for interaction with a user the systems methods and techniques described herein may be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user may provide input to the computer. Other types of devices may be used to provide for interaction with a user as well for example feedback provided to the user may be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user may be received in any form including acoustic speech or tactile input.

In various examples the systems methods and techniques as described herein may be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user may interact with an implementation of the systems methods and techniques described here or any combination of such back end middleware or front end components. The components of the system may be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system may include clients and servers. A client and server are generally remote from one another and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to one another.

Further the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other embodiments are within the scope of the following claims.

The above embodiments that have been described in particular detail are merely example or possible embodiments and that there are many other combinations additions or alternatives that may be included.

The particular naming of the components capitalization of terms the attributes data structures or any other programming or structural aspect is not mandatory or significant and the mechanisms that may be used to implement aspects of the disclosure or its features may have different names formats or protocols. Further the system may be implemented via a combination of hardware and software as described or entirely in hardware elements. Further any particular division of functionality between the various system components described herein is merely exemplary and not mandatory functions performed by a single system component may instead be performed by multiple components and functions performed by multiple components may instead performed by a single component.

In accordance with aspects of the disclosure some portions of above description present features in terms of algorithms and symbolic representations of operations on information. These algorithmic descriptions and representations may be used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. These operations while described functionally or logically are understood to be implemented by computer programs. Moreover it has also proven convenient at times to refer to these arrangements of operations as modules or by functional names without loss of generality.

Unless specifically stated otherwise as apparent from the above discussion throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or providing or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system memories or registers or other such information storage transmission or display devices.

