---

title: System and method for analyzing user experience of a software application across disparate devices
abstract: A system for providing a consistent user experience of an application across disparate mobile devices comprises a computing device including a display analysis application, and one or more mobile devices including a display analysis application is provided. In one example, a mobile device comprises a memory storing a version of an operating system, a display analysis patch, and a patched application. A consistency module of the mobile device is configured to access the application with the display analysis patch, obtain one or more display parameters of the mobile device via the application with the display analysis patch, and transmit the obtained one or more display parameters to a computing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09578133&OS=09578133&RS=09578133
owner: APKUDO, LLC
number: 09578133
owner_city: Baltimore
owner_country: US
publication_date: 20121203
---
The invention relates to a system and method for analyzing a user experience of the execution of a software application across disparate devices to provide a more consistent user experience of the software application across disparate devices.

The Android platform is an open source software stack for mobile phones and other devices. An Android Software Development Kit SDK allows software developers to create applications that will run on the Android platform. Typically Android applications are written in Java a well known programming language and are compiled by the Android SDK tools along with relevant data and resource files into a single Android application package file. The Android application package file hereinafter apk for an application may be used to distribute and install the software and middleware for the application to run on the Android operating system. An application s apk may hold the elements of the application including for example program code for the application resources assets certificates a manifest file and other elements.

The manifest file may include one or more components such as for example activities services content providers broadcast receivers and or other components. An Android device may check an apk s manifest file to determine whether a component exists or should be associated with the application. The manifest file may also include application configuration information including for example information about permissions application programming interface API level hardware requirements software requirements required API libraries and or other application configuration information. The manifest file may also contain information about how the application will run on different types of devices e.g. by providing different layouts or scales for different screen sizes different screen densities and or other device specific configurations or features . When the Android device does not support the configurations in the manifest file then the Android device may return an error or may use default settings. Conventionally the manifest file and the application s apk may be created by application developers and delivered in a final form to the Android device for installation and use. The performance and scalability of the application may be considered by the application developers before making the application available for download and installation.

Because the Android platform is open source numerous versions of the Android operating system OS may be available. For example a first version of the Android OS may run on a first mobile device and a second version of the Android OS may run on a second mobile device even though the first and second mobile devices may be identical in terms of hardware. In other examples different versions of the Android OS may run on mobile devices with different hardware or the same version of the Android OS may run on mobile devices with different hardware. The version of the Android OS running on a mobile device may be dependent mostly or solely on the time the OS was downloaded or installed on the mobile device and or when the user of the mobile device updated the OS. Some versions may be dependent on both time and or hardware of the mobile device.

Typically the Android platform may also include a non public application protocol interface API named ViewServer which may enable the device or a client accessing the device to determine the view parameters of an application. Because this API is non public it may not be enabled on production devices such as mobile phones or tablets sold in stores . Further the ViewServer API may change at any time without warning in any version of Android because it is a non public API. This makes the API incredibly unreliable for application developers. The ViewServer API is also not designed for real time interaction and may be very slow. The slowness of the API may be result in part because that the ViewServer API may return an entire view state of an application. The ViewServer API may also dispatch to the Android WindowManager to resolve view data which may also contribute to slower speed while using the API.

Given the various versions of the Android OS that are available and running on mobile devices an application may not run consistently on the available Android operating systems even when the hardware across those mobile devices may be identical.

The user experience of the application may also vary across Android devices due to the variations between Android operating systems and or device hardware on the Android devices.

These issues may also be relevant for developing software to run on other open source platforms as well.

Conventional systems for developing applications for use across a plurality of devices and or operating systems suffer from these and other drawbacks.

The invention solving these and other drawbacks of conventional systems relates to a system and method for analyzing a user experience of the execution of a software application across disparate devices to provide a more consistent user experience of the software application across disparate devices.

A system for providing a consistent user experience of an application across disparate devices may comprise a computing device including a display analysis application and one or more mobile devices including a display analysis application.

A display analysis application may be installed on a mobile device. The mobile device with the display analysis application installed thereon may include a memory that stores at least a version of an operating system at least one application and the display analysis application. The mobile device may include a network module configured to receive a query for one or more display parameters for an application with a display analysis patch from a display analysis application residing on the computing device. The mobile device may include a consistency module configured to access an application with the display analysis patch obtain the one or more display parameters of the mobile device via the patched application and transmit the obtained one or more display parameters to the display analysis application. The display parameters may include for example available widgets screen characteristics display characteristics of a window of an application screen shots of a view of an application and other parameters. The mobile device may also include a socket module configured to enable the mobile device to communicate via a multicast socket at the computing device. In some implementations the mobile device may also include a patching module that patches an application s apk with the display analysis application.

A display analysis application may also reside on a computing device. The computing device and the mobile device may communicate over a network or other communication channel. The computing device including the display analysis application may include at least a storage configured to store a plurality of display parameters information about one or more mobile devices application information and one or more socket addresses. The computing device may also include a plurality of modules such as for example a patching and testing module configured to patch an application with an apk and or transmit commands to be invoked by a mobile device a network module configured to transmit and receive information from one or more mobile devices a socket module configured to create at least a first socket to be used for communication with one or more mobile devices and a consistency module configured to obtain and or compare display parameters from one or more mobile devices.

In some implementations the patching and testing module of the computing device may be configured to patch an application s apk with the display analysis application. For example the patching and testing module may use a patch provided from the display analysis application on the computing device. The patching and testing module may update an application s apk with the patch. The patched apk may be communicated to a mobile device when the mobile device requests the application.

Alternatively in an implementation in which a patching module is disposed at the mobile device the patching module of the mobile device may be configured to patch an application s apk with a patch from the display analysis application of the mobile device. For example the patching module may use a patch provided from the installation of the display analysis application on the mobile device. The patching module may update an application s apk with the patch. The patched apk may be used when the application is instantiated. The consistency module of the mobile device may be able to obtain a display parameter of the device via the patched application. For example the display analysis application of the mobile device may run on a same thread as the application.

In some implementations the patching and testing module of the computing device may also facilitate the invoking of a command on the mobile device. For example the patching and testing module may request that the application invoke a command. In another example the mobile device may invoke a command based on previous commands invoked by the mobile device. The command may include one or more instructions to be executed by the application to determine whether a specific type of view of the application is supported by the mobile device. In some implementations the command may be invoked on the mobile device using a simulator or testing tool such as for example the Android Monkey tool. In some implementations the consistency module of the mobile device may invoke the command and may transmit an indication to the computing device based on the results of the invoked command. Through a series of requests and responses from the computing device and the mobile device respectively the computing device may obtain one or more display parameters of the mobile device.

A socket module of the computing device may make available one or more local multicast sockets at which mobile devices including the patched application may listen and communicate data. A socket may typically be represented as a combination of an IP address and a port number and may facilitate inter process communication across a network. In some implementations the socket module of the computing device may use a portion of an SHA 1 encoded string to represent the multicast socket. The socket module of the computing device may transmit the SHA 1 encoded string to mobile devices that have installed the display analysis application. A mobile device with the display analysis application installed may communicate with the computing device to receive the SHA 1 encoded string. In some implementations 12 of the 40 bytes of the SHA 1 encoded string sent by the display analysis application may represent the address of the socket. One or more other bytes may represent the port number of the socket.

The networking module of the mobile device may connect to the computing device using one or more methods of authentication e.g. using a shared secret . In other examples the mobile device may receive a shared secret when installing the display analysis application on the device. The socket module of the mobile device may use a shared secret between the mobile device and the computing device to hash the SHA 1 encoded string sent by the socket module of the computing device. The socket module of the mobile device may then identify using the SHA 1 encoded string a multicast socket via which the mobile device and the computing device may communicate. The socket module of the mobile device may then connect to the multicast socket and thus be able to listen at the multicast socket and or broadcast information to the multicast socket.

In some implementations the mobile device may receive an application from the computing device. The apk of the application may be patched with a patch from the display analysis application on the computing device. The consistency module of the mobile device may access the patched application after it has been received. In some implementations the consistency module of the mobile device may receive one or more commands to invoke from the computing device. The consistency module may then transmit one or more display parameters to the computing device based on an invocation of the one or more received commands.

For example the consistency module may broadcast the display parameters at a multicast socket created by the socket module of the computing device. The consistency module of the computing device may then compare display parameters of the mobile device with one or more display parameters stored at the computing device or broadcast at the multicast socket . Based on the comparison the consistency module of the computing device may transmit an indication to the mobile device regarding whether display parameters of the mobile device match display parameters at the computing device. The display parameters broadcast at the multicast socket may be from one or more other devices that include the display analysis application and the patched application.

In another example the consistency module of the mobile device may obtain display parameters broadcast at the computing device and may compare the broadcast display parameters with the display parameters of the mobile device. The consistency module of the computing device may also store the broadcast display parameters at a storage module of the computing device. The consistency module of the computing device may also associate the broadcast display parameters with the socket at which the display parameters were broadcast.

By enabling mobile devices to transmit and or compare display parameters a consistency module of the computing device may track a display produced by the execution of the patched application on one or more of the mobile devices.

A consistent execution of the patched application across similar devices may be monitored and or enabled. For example the execution of the patched application across similar devices may be monitored by the computing device. The computing device may store information related to the execution of the patched application across similar devices. The computing device may also store whether one or more devices and or one or more types of devices have a consistent execution of the patched application.

The computing device may store the results of an execution of the patched application across multiple devices. For example the computing device may store information relating to a disparate execution of the patched application across one or more devices. The computing device may analyze the stored information related to the disparate execution of the patched application. The computing device may also analyze the stored information to determine a number of disparate executions. The computing device may also analyze the stored information to determine a percentage of devices associated with a disparate execution of the patched application.

The computing device may compare the stored information relating to a first patched application with stored information relating to a second patched application. For example the computing device may compare whether the first application or the second application has a larger number of disparate executions. Other analyses may also be performed.

The mobile device may receive data relating to the execution of an application executing on the device. The data may be broadcast at the multicast socket or may be received from the computing device. In some implementations the computing device may analyze the display parameters received from mobile device and may develop a patch for the application to run on mobile device based on that analysis. The patch may tailor the execution of the application on the mobile device to use the display parameters included in the patch. Alternatively the computing device may transmit program code or other functional language to the mobile device that enables the mobile device to support the display parameters produced by the execution of the application. Other types of data may also be sent to the mobile device to enable an execution of the application on mobile device.

The consistency module of the mobile device may compare the display parameters of its device with display parameters broadcast from one or more other mobile devices via the multicast socket. In some implementations the mobile devices connected via a multicast socket may arbitrarily choose one mobile device e.g. the device with the lowest or highest device serial number as an Alpha device.

Mobile devices connected via the multicast socket may compare their respective display parameters with display parameters broadcast at the socket by the Alpha device. For example the Alpha device may invoke a command on the device via the Android Monkey tool. In another example the patching and testing module of the computing device may transmit a command to be invoked to the Alpha device. The Alpha device may broadcast at the multicast socket a SHA 1 encoded serial representation of the display parameters relating to a view of the application on the device based on the invoked command. The Alpha device and or the patching and testing module of the computing device may also broadcast the command at the multicast socket. In some implementations the patching and testing module of the computing device may store the invoked commands at the storage and associate the invoked commands with the multicast socket. A mobile device that is also connected to the multicast socket may invoke the same command on its device. The mobile device may then compare the display parameters based on the invoked command with the Alpha device s broadcast display parameters.

The commands invoked by the Alpha device may be similar to the commands invoked by the mobile device in its communication with computing device detailed above. For example a command invoked at the Alpha device may be based on one or more previous commands executed by the Alpha device. The patching and testing module may maintain a predetermined list of commands to be invoked by an Alpha device for a specific application. In some implementations these commands may relate to the patched application to be executed on the Alpha device. The predetermined list of commands may also encompass a variety of different display parameters that may result from execution of the patched application on a variety of different mobile devices. The commands may also relate to the actions available on one or more mobile devices. The commands sent by the patching and testing module may also be based on one or more previous commands invoked by the Alpha device.

When display parameters of the mobile device match display parameters of the Alpha device after invoking the command the mobile device may continue to listen at the multicast socket at which the Alpha device broadcasts its display parameters. The Alpha device may continue to broadcast at the multicast socket the commands that it invokes and or the resultant display parameters for the respective commands. The consistency module of the mobile device may continue to invoke the same commands as the Alpha device and compare its resultant display parameters with those of the Alpha device. For example the consistency module of the mobile device may invoke the same commands as the Alpha device until its resultant display parameters no longer match those of the Alpha device or until the Alpha device has invoked all of the commands in a predetermined list.

The mobile devices that match the display parameters of the Alpha device after a list of commands have been invoked may be considered to be in a same pack as the Alpha device and may appear to have the same display functionality e.g. same screen size chipset vendor and or other display functionality as the Alpha device. In some implementations the computing device may store which devices and or which types of devices are in one or more packs.

In some implementations the mobile device may receive data relating to the execution of an application executing on the device. The data may be based on the pack in which the mobile device fits. The data may be broadcast at the multicast socket or may be received from the computing device. In some implementations the computing device may analyze the display parameters associated with an Alpha device in the pack and may develop a patch for the application to run on the mobile device based on that analysis. The patch may tailor the execution of the application on the mobile device to use the display parameters of the Alpha device. Alternatively the computing device may transmit program code or other functional language to the mobile device that enables the mobile device to support the display parameters produced by the execution of the application. Other types of data may also be sent to the mobile device to enable an execution of patched application on the mobile device. The data sent to the mobile device may be data obtained from an analysis of the Alpha device. In some implementations some or all of the mobile devices in the pack may receive the data relating to execution of the application on the Alpha device.

The display parameters of the mobile device may not match the display parameters of the Alpha device after one or more of the list of commands has been invoked. As a result the consistency module of the mobile device may communicate with the socket module of the computing device to obtain a new multicast address e.g. the next multicast address available . The consistency module of the mobile device may listen for a new Alpha device at the new multicast socket. For example the socket module of the mobile device may communicate an indication of the mismatch to the socket module and or consistency module of the computing device. In some implementations the socket module of the computing device may create another multicast socket and may communicate an SHA 1 string identifying the multicast socket to the socket module of the mismatched mobile device. The socket module of the computing device may also maintain a plurality of multicast sockets and may communicate information identifying another multicast socket to the socket module of the mismatched mobile device when pinged.

Other objects and advantages of the invention will be apparent to those skilled in the art based on the following drawings and detailed description.

A system and method for analyzing consistency of a user experience of a software application across disparate mobile devices may be provided. In some implementations the disparate mobile devices may run one or more versions of an operating system like the Android OS and the software application may be developed to run on one or more versions of an operation system and or one or more types of hardware.

Computing device may include a display analysis application . Computing device including display analysis application may include a storage configured to store a plurality of display parameters and a plurality of socket addresses associated with a respective one or more mobile devices and or display parameters. Computing device may also include a plurality of modules such as for example a patching and testing module configured to patch an application with a display analysis patch and to transmit commands to be invoked by a mobile device a network module configured to transmit and receive information from one or more mobile devices a socket module configured to create at least a first socket to be used for communication with one or more mobile devices and a consistency module configured to determine whether a response received from a mobile device corresponds to a display parameter associated with the first socket. The display parameters may include for example available widgets screen characteristics display characteristics of a window screen shots of a view of an application and other parameters.

Computing device may be any computing device such as for example a server a desktop computer laptop computer personal digital assistant smart phone tablet and or any other computing device. Computing device may be capable of communicating with one or more mobile devices over network . Network may be a public or private network or any other suitable communication channel. Computing device may also include other components typically found in computing devices including for example user input features e.g. a touch screen microphone keyboard and or other user input features speakers an antenna and the corresponding signal processing capabilities and other features. Other computing devices at system may include similar features.

Mobile devices may include respective display analysis applications . Mobile device with display analysis application may include a storage that stores at least a version of an operating system at least one application and the display analysis application. Mobile device may also include a network module configured to receive an application with an apk patched by patching and testing module of the computing device . Network module may also be configured to receive a query for one or more display parameters for a patched application from a display analysis application residing on computing device . Mobile device may also include a consistency module configured to access the patched application to obtain display parameters of mobile device via the patched application and to transmit the obtained display parameters to computing device . Mobile device may also include a socket module configured to enable mobile device to communicate via a socket at computing device .

Mobile device may be any mobile device such as for example a personal digital assistant smart phone tablet and or other mobile device. Mobile device may be capable of communicating with one or more mobile devices e.g. mobile device and one or more computing devices e.g. computing device over a network such as for example a public or private network or any other suitable communication channel. Mobile device may also include other components typically found in mobile devices including for example user input features e.g. a touch screen microphone keyboard and or other user input features speakers an antenna and the corresponding signal processing capabilities and or other features. Other mobile devices e.g. mobile device may include similar features.

The system of is exemplary in nature and should not be viewed as limiting. For example implementations of the invention may be made in hardware firmware software or any suitable combination thereof. Aspects of the invention may also be implemented as instructions stored on a machine readable medium which may be read and executed by one or more processors. A machine readable medium may include any mechanism for storing or transmitting information in a form readable by a machine e.g. a computing device . For example a machine readable storage medium may include read only memory random access memory magnetic disk storage media optical storage media flash memory devices and others and a machine readable transmission media may include forms of propagated signals such as carrier waves infrared signals digital signals and others. Further firmware software routines or instructions may be described herein in terms of specific exemplary aspects and implementations of the invention and performing certain actions. However it will be apparent that such descriptions are merely for convenience and that such actions in fact result from computing devices processors controllers or other devices executing the firmware software routines or instructions.

In an operation patching and testing module of computing device may be configured to update an application s apk with a patch from display analysis application . For example patching and testing module may provide a patch to the application s apk in a manner similar to a patch provided to an application to plug a security leak or to upgrade features. The patched apk may be used when the application is instantiated. In some implementations mobile device may receive an application without an apk that has been updated with a patch. In these implementations patching module of mobile device may be configured to patch the application s apk with display analysis application .

In an operation mobile device may install display analysis application . For example network module of mobile device may download display analysis application from computing device or from another computing device or repository that stores applications for download. Display analysis application may be downloaded as an apk or a portion thereof and may be installed like a conventional Android application. In some implementations display analysis application may be installed on mobile device during an initial software install on mobile device . For example the display analysis application may be installed on mobile device before mobile device is made available to a consumer for purchase. Display analysis application may also be included as part of an Android operating system that runs on mobile device .

When display analysis application is installed on mobile device mobile device may transmit information to computing device regarding at least an operating system version running on mobile device a serial number of mobile device and or other characteristics of mobile device . Computing device may store the information transmitted by mobile device in storage .

In an operation consistency module of mobile device may be configured to access the patched application and obtain one or more display parameters of the patched application running on mobile device . In some implementations patching and testing module of computing device may request that the mobile device transmit display parameters relating to a screen view of the patched application after the invocation of a command. Consistency module may also transmit display parameters relating to a screen view of the application to computing device when a display of the application changes e.g. because a command was invoked because the screen was refreshed and or for other reasons . The display parameters may include for example available widgets screen characteristics display characteristics of a window and or other parameters.

In some implementations the command for obtaining a display parameter may be Activity.getWindow .getDecorview or another similar command. In an Android application a view may occupy a portion of the screen and may include one or more widgets. Widgets may be used to create interactive user interface components. Widgets may include for example buttons text fields scrolling lists and or other components. By executing a command to get display parameters relating to a screen view of the application mobile device may determine which display parameters e.g. widgets screen resolution characteristics and or other display parameters are available for the application.

Mobile device may obtain and communicate display parameters relating to a screen view of the application after receiving a command to invoke from patching and testing module of computing device . The command may include one or more instructions to be executed by the patched application to determine whether a specific display parameter or set of display parameters relating to a screen view of the application is supported by mobile device .

In some implementations patching and testing module may transmit a request to mobile device to invoke commands by the patched application. The command transmitted from patching and testing module may be based on one or more previous commands executed by mobile device . Mobile device may obtain the display parameters relating to a screen view of the application display after invoking the command and communicate those display parameters to computing device . The mobile device may obtain and communicate display parameters relating to a screen view after every command that it invokes.

In some implementations patching and testing module may maintain one or more predetermined lists of commands to be invoked by mobile device for one or more respective patched applications. Storage module and or storage module may store the lists of commands for the respective patched applications to execute. In some instances the list of commands may be sent by computing device to mobile device . In some instances the list of commands may be received during the installation of display analysis application on mobile device . The list of commands may be received by mobile device via other methods as well. In some implementations the execution of the predetermined list of commands may result in a variety of different display parameters. The display parameters produced by executing the predetermined list of commands may vary based on the mobile device e.g. mobile devices on which the commands are executed.

In some implementations the commands may be invoked on mobile device using a testing tool such as for example the Android Monkey tool Monkey . Monkey is a command line tool that can be run on an emulator instance or on a device. Monkey may be configured to transmit a pseudo random string of user events to a device or an instance running on a device and may perform a stress test of the instance. Monkey may also communicate the response of the device or the emulator to the component from which it was invoked. Monkey may be used by display analysis application and or display analysis application to run specific tests on mobile device and or to invoke specific commands on mobile device .

In an operation mobile device may communicate the display parameters obtained from invoking one or more commands to computing device . For example consistency module may transmit a serialized version of the display parameters relating to a screen view to computing device . This serialized version of the display parameters may then be compared to other serialized versions of display parameters stored at computing device . Mobile device may communicate the display parameters relating to a screen view obtained for each invoked command separately or may communicate all of the display parameters obtained after invoking each of the commands transmitted from computing device . In some implementations mobile device may communicate one or more or all portions of the obtained display parameters to computing device . Computing device may store some or all of the received display parameters in storage .

In some implementations the display parameters are communicated to computing device after an authenticated connection is made between mobile device and computing device . Networking module of mobile device may connect to computing device using one or more methods of authentication e.g. using a shared secret . In some implementations commands may be received from computing device only after an authenticated connection is established. For example mobile device may receive a shared secret that facilitates authenticated connection with computing device when installing display analysis application on mobile device .

Network module of computing device may include one or more ports for communication. Mobile device may communicate with computing device via the one or more ports of network module . For example computing device may include a first port associated with a multicast socket created by socket module . In another example computing device may have a second port used by patching and testing module of computing device to transmit commands to mobile device . Computing device may have several ports used by patching and testing module where each port may be associated with a different mobile device . In some implementations default ports may be used by computing device . For example port 4939 may be used as a default port for the first port.

In some implementations one instance of display analysis application is launched per mobile device respectively. Multiple mobile devices e.g. mobile devices may connect to a computing device e.g. computing device with display analysis application via respective unique local port numbers of computing device . Multiple applications on mobile device may each have a respective apk updated with a patch from the display analysis application . In some implementations the same display analysis application patch may be used for all applications on mobile device . In some instances only one patched application may be instantiated or launched at a time as the display analysis application patch may direct an application to a same local port at computing device . In these implementations when more than one patched application is launched or instantiated at a same time the local port may experience collisions.

Mobile device may receive data for execution of the patched application from computing device . For example the data received from computing device may enable an execution of the patched application on mobile device . Computing device may analyze the display parameters received from mobile device and may develop a patch for the application to run on mobile device based on that analysis. The patch may tailor the execution of the application on mobile device to use the display parameters available on mobile device . Alternatively computing device may transmit program code or other functional language to mobile device that enables mobile device to support the display parameters produced by the execution of the application. Other types of data may also be sent by computing device to mobile device to enable an execution of patched application on mobile device .

In some implementations patching module of mobile device may patch the data received from computing device to the application s apk. For example patching module may remove the patch from display analysis application and replace the display analysis application patch with the patch received from computing device . In some examples patching module may patch the application s apk with the patch received from computing device in addition to the initial patch from the display analysis application . For example patching module may update the patched apk with the patch received from computing device e.g. not remove the initial patch from display analysis application that was first used to update the application s apk . In some implementations patching module may integrate the data received from computing device with the application to enable the application to be fully functional. For example the application may rely on program code received from computing device to support one or more display parameters that mobile device does not support.

Many of the operations set forth in are similar to those discussed above in relation to . For example operations and are similar to operations and respectively and therefore will not be described again.

In an operation socket modules of mobile devices may identify a multicast socket at computing device . Socket module of computing device may make available a local multicast socket. Mobile devices like mobile devices that include the patched application may listen and broadcast data at the local multicast socket. In some implementations socket module may use a portion of an SHA 1 encoded string to represent the multicast socket. Socket module may transmit the SHA 1 encoded string to mobile devices that have installed display analysis application . Mobile devices may communicate with computing device to receive the SHA 1 encoded string. In some implementations 12 of the 40 bytes of the SHA 1 encoded string sent by computing device may represent the address of the socket. One or more other bytes may represent the port number of the socket.

Networking modules of mobile devices may connect to computing device using one or more methods of authentication e.g. using a shared secret . In other examples mobile devices may receive a shared secret when installing display analysis applications on respective mobile devices . Socket modules of mobile devices may use a respective shared secret between mobile device or mobile device and computing device to hash the SHA 1 encoded string sent by socket module of computing device . Socket modules of mobile devices may then identify a multicast socket via which mobile devices and computing device may communicate. Socket modules of mobile devices may connect to the multicast socket and thus be able to listen at the multicast socket and or broadcast information to the multicast socket.

In operation consistency modules of mobile devices may be configured to determine when a display parameter relating to a screen view of an application on respective mobile devices match a display parameter broadcast at the multicast socket. Consistency modules may be configured to obtain respective display parameters relating to a screen view of an application on respective mobile devices via the patched application. Consistency modules of mobile devices and or consistency module of computing device may be configured to determine when a display parameter relating to a screen view of an application on mobile device or mobile device matches a display parameter broadcast at the multicast socket.

In some implementations mobile devices may receive data for execution of the patched application from computing device . For example the data received from computing device may enable an execution of the patched application on mobile device or mobile device . Computing device may analyze the display parameters received from mobile devices and may develop a patch for the application to run on one or more of mobile device and mobile device based on that analysis. The patch may tailor the execution of the application on mobile devices to use the display parameters available on respective mobile devices . Alternatively computing device may transmit program code or other functional language to mobile devices that enable mobile devices to support the respective display parameters produced by the execution of the application. Other types of data may also be sent by computing device to mobile devices to enable an execution of patched application on mobile devices .

Patching modules of mobile devices may patch the data received from computing device to the application s apk. For example patching modules may remove the patch from display analysis applications and replace the display analysis application patch with the patch received from computing device . In some examples patching modules may patch the application s apk with the patch received from computing device in addition to the initial patch from display analysis applications . For example patching modules may update the patched apk with the patch received from computing device e.g. not remove the initial patch from display analysis applications that was first used to update the application s apk . Patching modules may integrate the data received from computing device with the application to be fully functional. For example the application may rely on program code received from computing device to support one or more display parameters that mobile devices do not support.

In an operation a determination is made whether the display parameters of one or more of mobile devices match the display parameters broadcast at the local multicast socket at computing device .

As part of operation a command may be invoked at mobile device in an operation . In some implementations consistency module of mobile device may produce an indication relating to the result of the invoked command in an operation . The produced indication may be compared with display parameters broadcast at the multicast socket of computing device in an operation .

Patching and testing module of computing device may transmit a request for display parameters relating to a screen view of the patched application of mobile device in an operation . For example the request may invoke display analysis application and or consistency module to execute a command to obtain information related to a view of a screen related to the patched application. In another example consistency module may transmit to computing device one or more display parameters relating to a screen view of the patched application when a display of the patched application changes e.g. because a command was invoked because the screen was refreshed and or for other reasons . Patching and testing module may transmit a request to mobile device to invoke commands relating to the application. Mobile device may communicate a command at the multicast socket at an operation . The command from mobile device may be based on one or more previous commands executed by mobile device . Mobile device may also broadcast the command at the multicast socket in an operation . Computing device may also store the command at storage and associate the command with the multicast socket and or with any display parameters broadcast after the command.

In some implementations patching and testing module may maintain a predetermined list of commands to be invoked by mobile device for a specific application. The predetermined list of commands may be similar to the list discussed above with respect to operation . Similarly in some implementations the commands may be invoked on mobile device using Monkey as discussed above.

In an operation the command sent by testing module may also be broadcast at the multicast socket. The command for obtaining the display parameter may be Activity.getWindow .getDecorview or another similar command. In an Android application a view may occupy a portion of the screen and may include one or more widgets. Widgets may be used to create interactive user interface components. Widgets may include for example buttons text fields scrolling lists and or other components. By executing a command to get display parameters relating to a screen view of the patched application mobile device may determine which display parameters e.g. widgets screen resolution characteristics and or other display parameters are available for the application. The command may include one or more instructions to be executed by the patched application to determine whether a specific type of view of the patched application is supported by mobile device .

Consistency module of mobile device may receive the command to be invoked and may transmit an indication to computing device based on the results of the invoked command at operation . The indication may refer to the display parameters that relate to a screen view of the patched application after invoking the command. The indication may comprise the display parameters relating to a screen view of the patched application after invoking the command. The indication may also comprise a determination of whether the invoked command produced one or more display parameters that were supported by mobile device . For example when the command required the display of an object at a resolution outside of the resolution specification of mobile device consistency module may transmit an indication that mobile device does not support a specific display parameter e.g. the specific resolution resulting from the invoked command. In some instances consistency module may transmit a plurality of indications after invoking the command sent by computing device at operation . The plurality of indications may comprise a separate indication for each display parameter in the display produced by invoking the command on mobile device .

Returning to in an operation the indication produced by mobile device may be compared with other indications broadcast at the multicast socket of computing device . The data comprising the indication may be serialized. The indication may be comparable with other indications received at computing device and or broadcast at the multicast socket. Through a series of requests and responses from computing device and mobile device respectively computing device may obtain one or more display parameters of mobile device . Computing device and or mobile device may be configured to compare display parameters that relate to a screen view of the patched application on mobile device with display parameters that relate to a screen view of the application on other devices e.g. mobile device .

Consistency module may transmit an indication to computing device . Consistency module of computing device may compare the indication of mobile device with one or more indications broadcast at the multicast socket identified by mobile device . In some implementations consistency module may transmit a notice to mobile device detailing whether the indication of mobile device matches an indication broadcast at the identified multicast socket.

In some implementations consistency module of mobile device may compare the produced indication with indications from other devices that include the display analysis application and the patched application. For example one or more other devices may broadcast one or more respective indications at the identified multicast socket at computing device . Consistency module of mobile device may obtain the broadcast indications from the one or more other devices and may compare the broadcast indications with the indications produced by mobile device . Consistency module of computing device may also store the broadcast indications from the one or more other devices in storage . Consistency module of computing device may also associate the broadcast indications with the identified multicast socket at which the indications were broadcast at storage . By enabling mobile devices to transmit and or compare indications relating to display parameters consistency module of computing device may track a display produced by the execution of the patched application on one or more mobile devices. In some implementations mobile device may receive data for execution of the patched application from computing device in a manner similar to discussed above.

Many of the operations set forth in are similar to those discussed above in relation to . For example operations and are similar to operations and respectively and therefore will not be described again.

In an operation consistency module of mobile device may access one or more display parameters of one or more other mobile devices broadcast at the identified multicast socket. Mobile devices connected via the multicast socket may arbitrarily choose one mobile device as the Alpha device. For example the Alpha device may be the device with the highest or the lowest serial number. In some examples the Alpha device may be the first device to broadcast on the multicast socket. The broadcast data of the Alpha device may be marked as associated with the Alpha device. For example an identifier may be broadcast along with data broadcast by the Alpha device on the multicast socket.

The Alpha device may broadcast its display parameters to the multicast socket. The Alpha device may also broadcast the commands invoked to obtain those display parameters. In some implementations only the Alpha device may broadcast data to the multicast socket. Storage may store an identification such as for example a device serial number related to the devices which are Alpha devices on the one or more multicast sockets that computing device may maintain.

Consistency module may obtain the display parameters of the Alpha device similar to the methods discussed above in operations and e.g. by invoking the Activity.getWindow .getDecorView command by invoking one or more commands stored at computing device by invoking one or more commands broadcast at the multicast socket and or other methods . Consistency module may compare the display parameters relating to a screen view of the patched application after invoking one or more commands e.g. from the multicast socket or computing device with display parameters broadcast at the multicast socket.

In some implementations consistency module may compare the display parameters of mobile device with display parameters broadcast at the multicast socket by the Alpha device. For example a consistency module on the Alpha device may invoke a command on the Alpha device via Monkey. In another example patching and testing module of computing device may transmit one or more commands to be invoked to the Alpha device. The Alpha device may then broadcast at the multicast socket a SHA 1 encoded serial representation of the display parameters related to a screen view of the application on the Alpha device based on the invoked command. The Alpha device and or patching and testing module of computing device may also broadcast the command at the multicast socket. Patching and testing module of computing device may also store the invoked commands at storage and associate the invoked commands with the multicast socket. Mobile device which may also be connected to the multicast socket may invoke the same command s as the Alpha device. Mobile device may then compare the display parameters related to a screen view of the application based on invoking the command s with the Alpha device s display parameters.

Mobile device may access the Alpha device s SHA 1 encoded serial representation of its display parameters and may decode the representation using a shared secret as discussed above with regard to identifying the multicast socket . Mobile device may then compare a serialized representation of its display parameters with those of the Alpha device. In some implementations mobile device may transmit a serialized representation of its display parameters to consistency module of computing device and or broadcast a serialized representation of its display parameters at multicast socket. In these implementations consistency module of computing device may compare the display parameters of mobile device with those of the Alpha device and transmit an indication to mobile device as to whether its display parameters match.

In an operation when the display parameters of mobile device match the display parameters of the Alpha device after invoking the command mobile device may continue to listen at the multicast socket. The Alpha device may continue to broadcast the commands that it invokes and or the resultant display parameters for the respective commands. Consistency module of mobile device may invoke the same commands as the Alpha device. For example consistency module of mobile device may invoke the same commands as the Alpha device until its resultant display parameters no longer match those of the Alpha device or the Alpha device has invoked all of the commands in a predetermined list.

In some implementations the display parameters of mobile device may match the display parameters of the Alpha device after the list of commands has been invoked. Mobile device may be considered to be in the same pack as the Alpha device. For example mobile device may appear to have the same display functionality e.g. same screen size chipset vendor and or other display functionality as the Alpha device. In some implementations computing device may transmit mobile device data for the execution of the patched application. In these implementations the data may be the same data that was sent to the Alpha device regarding the execution of the patched application on the Alpha device. For example the data may be developed by computing device based on the display parameters stored in association with the Alpha device. Since mobile device may be considered to be in the same pack as the Alpha device computing device may transmit the same application execution data to mobile device . Computing device may transmit the same application execution data to every mobile device considered to be part of the same pack as the Alpha device.

When the display parameters of mobile device do not match the display parameters of the Alpha device after one or more of the list of commands has been invoked e.g. the determination of operation is negative consistency module of mobile device may communicate with socket module of computing device to obtain a new multicast address e.g. the next multicast address available . For example consistency module of computing device may transmit an indication to consistency module and or socket module to listen at a different multicast socket. In some implementations socket module of computing device may create another multicast socket and may communicate an SHA 1 string identifying the multicast socket to socket module of mobile device . Alternatively socket module of computing device may maintain a plurality of multicast sockets and may communicate information identifying another multicast socket to socket module of mobile device when pinged.

Consistency module of mobile device may listen for a new Alpha device at the newly identified multicast socket. Mobile device may determine whether the display parameters of mobile device match the display parameters broadcast on the new multicast socket in operation . Mobile device may repeat operations and until mobile device is part of a pack or mobile device is the only device listening and or broadcasting on a multicast socket.

In some implementations consistency module of computing device may analyze a consistency of an execution of an application across one or more devices. For example consistency module may analyze how many packs exist. Consistency module may also analyze the serialized display parameters broadcast at the multicast sockets and may determine which parameters are different among one or more packs. Consistency module may further analyze a consistency of execution of one or more specific commands related to an application across one more packs. Consistency module may also analyze which commands provide a disparate display parameter across one or more packs. Consistency module may also perform other analyses relating to a consistency of an execution of the application across one or more packs.

A consistent execution of the patched application across similar devices may be monitored by computing device . For example computing device may store whether one or more devices and or one or more types of devices have a consistent execution of the patched application. Computing device may store the results of an execution of the patched application across multiple devices and information relating to a disparate execution of the patched application across one or more devices.

Computing device may analyze the stored information related to the disparate execution of the patched application. For example computing device may analyze the stored information to determine statistics related to the execution of the application across various devices including for example a number of disparate executions a percentage of devices associated with a disparate execution of the patched application and or other statistics. Computing device may also compare the stored information relating to a first patched application with stored information relating to a second patched application. For example computing device may compare whether the first application or the second application has a larger number of disparate executions. Other analyses may also be performed.

Aspects and implementations described herein as including a particular feature structure or characteristic but every aspect or implementation may not necessarily include the particular feature structure or characteristic. Further when a particular feature structure or characteristic is described in connection with an aspect or implementation it will be understood that such feature structure or characteristic may be included in connection with other aspects or implementations whether or not explicitly described. Thus various changes and modifications may be made to the provided description without departing from the scope or spirit of the invention. As such the specification and drawings should be regarded as exemplary only and the scope of the invention to be determined solely by the appended claims.

