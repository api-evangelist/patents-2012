---

title: Mapping messages between web services
abstract: Techniques for mapping of messages includes receiving, from a first web service, a message comprising one or more operations in a first format; identifying a mapping interface that is based on the first web service, the mapping interface comprising one or more mappings for each of the operations of the message; identifying a second web service that is associated with the identified mapping interface; mapping the message to the second web service such that the one or more operations are in a second format associated with the second web service; and assigning a logical port connection to the second web service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09348665&OS=09348665&RS=09348665
owner: SAP SE
number: 09348665
owner_city: Walldorf
owner_country: DE
publication_date: 20120531
---
This disclosure relates to mapping of messages and more particularly mapping of messages between web services.

Within an application a consumer proxy can be called to execute a particular web service. However in a particular computing system e.g. a partner computing system the particular web service may not exist. Instead of employing the particular web service a similar web service with a differing interface as compared to the particular web service may be employed. For example the similar web service can include other field names or other structures.

This disclosure describes systems methods apparatus and computer readable media for mapping of messages. In some embodiments a message is received from a first web service. The message includes one or more operations in a first format. In some examples an application of a host computing system includes the first web service. A mapping interface is identified that is based on the first web service. The mapping interface includes one or more mappings for each of the operations of the received messages. In some examples the mappings for each of the operations include asynchronous mappings synchronous mappings or both. A second web service is identified that is associated with the identified mapping interface. In some examples an application of a partner computing system includes the second web service. The received message from the first web service is mapped to the second web service such that the operations of the message are in a second format associated with the second web service. A logical port connection is assigned to or associated with the second web service.

A general embodiment of the subject described in this disclosure can be implemented in methods that include identifying a mapping interface that is based on the first web service the mapping interface including one or more mappings for each of the operations of the message identifying a second web service that is associated with the identified mapping interface mapping the message to the second web service such that the one or more operations are in a second format associated with the second web service and assigning a logical port connection to the second web service.

Other general embodiments include corresponding computer systems apparatus and computer programs recorded on one or more computer storage devices each configured to perform the actions of the methods. A system of one or more computers can be configured to perform operations to perform the actions. One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that when executed by data processing apparatus cause the apparatus to perform the actions.

In a first aspect combinable with any of the general embodiments the one or more mappings for each of the operations include asynchronous mappings synchronous mappings or both.

A second aspect combinable with any of the previous aspects includes providing the mapped message to the second web service.

A third aspect combinable with any of the previous aspects includes identifying a multiple second web services and mapping the message to the second web services.

A fourth aspect combinable with any of the previous aspects includes splitting the message into two or more messages.

A fifth aspect combinable with any of the previous aspects includes mapping each of the split messages to one of the second web services such that the operations of each split message are in a format associated with the respective second web service.

A sixth aspect combinable with any of the previous aspects includes storing the message in a repository prior to mapping the message.

A seventh aspect combinable with any of the previous aspects includes receiving a multiple messages in a sequence.

An eighth aspect combinable with any of the previous aspects includes mapping the messages according to the sequence.

A ninth aspect combinable with any of the previous aspects includes receiving an additional message related to the mapped message the additional message including one or more additional operations in the second format.

A tenth aspect combinable with any of the previous aspects includes identifying an additional mapping interface that is based on the second web service the additional mapping interface including one or more mappings for each of the additional operations of the additional message.

An eleventh aspect combinable with any of the previous aspects includes identifying the first web service that is associated with the additional mapping interface.

A twelfth aspect combinable with any of the previous aspects includes mapping the additional message to the first web service such that the one or more additional operations are in the first format are associated with the first web service.

A thirteenth aspect combinable with any of the previous aspects includes assigning an additional logical port connection to the first web service.

In a fourteenth aspect combinable with any of the previous aspects the additional message is a response to the mapped message a fault related to the mapped message or both.

Various embodiments of a mapping proxy module according to the present disclosure may have one or more of the following features. For example mapping between web services can be modeled and implemented without modifying an application.

These general and specific aspects may be implemented using a device system or method or any combinations of devices systems or methods. For example a system of one or more computers can be configured to perform particular actions by virtue of having software firmware hardware or a combination of them installed on the system that in operation causes or cause the system to perform the actions. One or more computer programs can be configured to perform particular actions by virtue of including instructions that when executed by data processing apparatus cause the apparatus to perform the actions. The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features objects and advantages will be apparent from the description and drawings and from the claims.

This disclosure describes systems methods apparatus and computer readable media for mapping of messages. In some embodiments a message is received from a first web service. The message includes one or more operations in a first format. In some examples an application of a host computing system includes the first web service. A mapping interface is identified that is based on the first web service. The mapping interface includes one or more mappings for each of the operations of the received messages. In some examples the mappings for each of the operations include asynchronous mappings synchronous mappings or both. A second web service is identified that is associated with the identified mapping interface. In some examples an application of a partner computing system includes the second web service. The received message from the first web service is mapped to the second web service such that the operations of the message are in a second format associated with the second web service. A logical port connection is assigned to or associated with the second web service.

At a high level the host computing system can receive inbound communication from the partner computing system or send outbound communication to the partner computing system via the network . The inbound and outbound communication can include content of various protocols such as WS protocol XI protocol REST protocol and others. The host computing system includes an application or multiple applications and the partner computing system includes an application or multiple applications . The applications and can initiate messages sent between the host computing system and the partner computing system e.g. messaging between web services . Specifically the applications and can be any application program module process or other software that may execute change delete generate or otherwise manage information associated with the respective computing system the host computing system and the partner computing system . In particular business processes communicate with other users applications systems and components to send receive and process messages e.g. responses requests and faults .

In some examples the application may operate in response to and in connection with one or more messages e.g. a request received from an associated partner e.g. the partner computing system or other remote client. Additionally the application may operate in response to and or in connection with one or more messages e.g. requests received from the application of the partner computing system . In some examples the application may request additional processing or information from an external system or application. In some examples the applications and may represent a web based applications accessed and executed by remote computing systems via the network e.g. through the Internet or via one or more cloud based services associated with the applications and . Further while the applications and are illustrated as internal to the host computing system and the partner computing system respectively in some examples one or more processes associated with the applications and may be stored referenced or executed remotely. For example a portion of the applications and may be a web service that is remotely called while another portion of the applications and may be an interface object or agent bundled for processing at a remote system not illustrated . In some examples any or all of the applications and may be a child or sub module of another software module or enterprise application. In some examples portions of the applications and may be executed or accessed by a user working directly at the host computing system and the partner computing system respectively.

The illustrated host computing system includes a server . In general the server stores one or more hosted applications. In some instances the server may store one or more various hosted applications while in other instances the server may be a dedicated server meant to store and execute only a single hosted application e.g. the mapping proxy module . At a high level the server includes an electronic computing device operable to receive transmit process store or manage data and information associated with the environment . For example the illustrated server may be responsible for receiving application requests e.g. messages from one or more applications e.g. the application of the components e.g. the partner computing system of the environment and responding to the received requests by processing said requests in an associated hosted application e.g. the application and sending the appropriate response message from the hosted application e.g. the application back to the requesting client application e.g. the application . In addition to requests from the application of the partner computing system requests associated with the hosted applications may also be sent from internal users external or third party customers other automated applications as well as any other appropriate entities individuals systems or computers.

The server includes the mapping proxy module to facilitate mapping of messages between the application e.g. a first web service of the host computing system and the application e.g. a second web service of the partner computing system . In some embodiments the mapping proxy module can be implemented by and stored by any combination of the host computing system the enterprise computing system the partner computing system or the repository .

As used in the present disclosure the term computer is intended to encompass any suitable processing device. For example although illustrates a single server for the host computing system environment can be implemented using two or more servers as well as computers other than servers including a server pool. Indeed server may be any computer or processing device such as for example a blade server general purpose personal computer PC Macintosh workstation UNIX based workstation or any other suitable device. In other words the present disclosure contemplates computers other than general purpose computers as well as computers without conventional operating systems. Further illustrated server may be adapted to execute any operating system including Linux UNIX Windows Mac OS or any other suitable operating system.

The illustrated server also includes an interface a processor and a memory . The interface is used by the server for communicating with other systems in a distributed environment including within the environment connected to the network for example the enterprise computing device and the partner computing device as well as other systems communicably coupled to the network . Generally the interface includes logic encoded in software and or hardware in a suitable combination and operable to communicate with the network . More specifically each interface may include software supporting one or more communication protocols associated with communications such that the network or interface s hardware is operable to communicate physical signals within and outside of the illustrated environment .

As illustrated in the server includes the processor . Although illustrated as a single processor in two or more processors may be used according to particular needs desires or particular embodiments of the environment . The processor may be a central processing unit CPU a blade an application specific integrated circuit ASIC a field programmable gate array FPGA or another suitable component. Generally the processor executes instructions and manipulates data to perform the operations of the server . For example the processor executes the functionality required to receive and respond to requests from the enterprise computing system and or the partner computing system .

Regardless of the particular implementation software may include computer readable instructions firmware wired or programmed hardware or any combination thereof on a tangible medium transitory or non transitory as appropriate operable when executed to perform at least the processes and operations described herein. Indeed each software component may be fully or partially written or described in any appropriate computer language including C C Java Visual Basic assembler Perl any suitable version of 4GL as well as others. While portions of the software illustrated in are shown as individual modules that implement the various features and functionality through various objects methods or other processes the software may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate.

The server also includes a memory or multiple memories . The memory may include any memory or database module and may take the form of volatile or non volatile memory including without limitation magnetic media optical media random access memory RAM read only memory ROM removable media or any other suitable local or remote memory component. The memory may store various objects or data including classes frameworks applications backup data business objects jobs web pages web page templates database tables repositories storing business and or dynamic information and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto associated with the purposes of the host computing system . Additionally the memory may include any other appropriate data such as VPN applications firmware logs and policies firewall policies a security or access log print or other reporting files as well as others.

In some embodiments the enterprise computing system can include similar or identical components as that of the host computing system . For example the enterprise computing system can include any combination including each of the interface the processor the mapping proxy module and the memory . Additionally the enterprise computing system can implement any of the methods and functionality of the host computing system either alone or in cooperation coordination with the host computing system .

Additionally in some embodiments the illustrated partner computing system includes a processor an interface and a memory . The processor the interface and the memory can be analogous to that of the processor the interface and the memory respectively of the host computing system . Specifically the processor the interface and the memory can include similar or substantially the same functionality as that of the processor the interface and the memory respectively of the host computing system .

Furthermore the memory of the host computing system can further include the mapping interface s messages and port connections and the memory of the partner computing system can include messages . The messages and can include the application requests responses and faults described further below. In some examples the messages can be independent of or dependent on based on the messages . In some embodiments the messages are responses to the messages . In some embodiments the messages are faults relating to the messages . The mapping interface s are mappings between the messages associated with the application of the host computing system and the messages associated with the application of the partner computing system described further below. The port connections facilitate connections between the applications and e.g. the web services . In some implementations the mapping interface s the messages and and the port connections can be stored by a third party that provides networked online storage.

In some embodiments the host computing system the partner computing system or both may include a computer that includes an input device such as a keypad touch screen mouse or other device that can accept user information and an output device that conveys information associated with the operation of the computing systems including digital data visual information or a graphic user interface GUI . The input and output device may include fixed or removable storage media such as a magnetic storage media CD ROM or other suitable media to both receive input from and provide output to users of the computing system through the GUI.

The GUI provides an interface to at least a portion of the environment for any suitable purpose including generating a visual representation of a web browser. Generally through the GUI the user is provided with an efficient and user friendly presentation of data provided by or communicated within the system. The term graphical user interface or GUI may be used in the singular or the plural to describe one or more graphical user interfaces and each of the displays of a particular graphical user interface. Therefore the GUI can represent any graphical user interface including but not limited to a web browser touch screen or command line interface CLI that processes information in the environment and efficiently presents the information results to the user. In general the GUI may include one or more user interface UI elements some or all associated with a web browser such as interactive fields pull down lists and buttons operable by the user at the computing systems . These and other UI elements may be related to or represent the functions of the web browser. In particular the GUI may be used to view and navigate various web pages located both internal and external to the server.

The environment further includes a repository . In some embodiments the repository is an in memory repository. The repository can be a cloud based storage medium. For example the repository can be networked online storage where data is stored on virtualized pools of storage.

With respect to the network generally the network facilitates wireless or wireline communications between the components of the environment i.e. between the computing systems as well as with any other local or remote computer such as additional clients servers or other devices communicably coupled to network but not illustrated in . The network is illustrated as a single network in but may be a continuous or discontinuous network without departing from the scope of this disclosure so long as at least a portion of the network may facilitate communications between senders and recipients. The network may be all or a portion of an enterprise or secured network while in another instance at least a portion of the network may represent a connection to the Internet.

In some instances a portion of the network may be a virtual private network VPN such as for example the connection between the computing systems . Further all or a portion of the network can comprise either a wireline or wireless link. Example wireless links may include 802.11a b g n 802.20 WiMax and or any other appropriate wireless link. In other words the network encompasses any internal or external network networks sub network or combination thereof operable to facilitate communications between various computing components inside and outside the illustrated environment . The network may communicate for example Internet Protocol IP packets Frame Relay frames Asynchronous Transfer Mode ATM cells voice video data and other suitable information between network addresses. The network may also include one or more local area networks LANs radio access networks RANs metropolitan area networks MANs wide area networks WANs all or a portion of the Internet and or any other communication system or systems at one or more locations.

To that end in some examples the messages and can be mapped. Specifically in some embodiments the message is received from the application e.g. a first web service . The message includes one or more operations in a first format. The mapping interface is identified that is based on the application e.g. the first web service . The mapping interface includes one or more mappings for each of the operations of the message . In some examples the mappings for each of the operations include asynchronous mappings synchronous mappings or both. The application e.g. a second web service is identified that is associated with the identified mapping interface . The received message from the application is mapped to the application e.g. the second web service such that the operations of the message are in a second format associated with the application e.g. the second web service . A logical port connection is assigned to or associated with the application e.g. the second web service .

Specifically the message from the application e.g. the first web service is received. In some examples the application can transmit the message in response to a request. In some examples the application can transmit to the message independent of a request. The application can retrieve the message for subsequent transmission from the memory . However in some examples the message can be retrieved from any memory storing the message such as the repository . In some embodiments the mapping proxy module receives the message from the application and in some examples also requests the message .

The message can include one or more operations. The operations can be asynchronous operations synchronous operations or both. In summary with respect to the synchronous operation a response and or a fault may be received in response to the message including the synchronous operation while with respect to the asynchronous operation a response and or fault is not received in response to the message including the asynchronous operation. Furthermore the message and the operations included by the message can be in a first format associated with the application and or a format of the host computing system .

In some embodiments two or more messages can be received. In some embodiments two or more messages are received in a sequence e.g. in a numbered order . In some examples each of the messages can be associated with an identification ID number. Associating an ID number with each of the messages can facilitate mapping the messages in a similar or same order as the messages were received described further below. In some embodiments the mapping proxy module receives the two or more messages from the application and in some examples receives the two or more messages in the sequence .

In some embodiments the message includes extensible markup language XML data. For example the operations of the message can include XML data.

A mapping interface is identified. In some examples the mapping interface is identified in response to receiving the message . In some examples the mapping interface is identified independent to receiving the message . In some examples more than one mapping interface can be identified. Identification of the mapping interface can be based on the application e.g. the first web service the formatting associated with the application the message the formatting of the message the operations associated with the message the formatting of the operations associated with the message or any combination thereof. In some embodiments the mapping proxy module identifies the mapping interface .

The mapping interface includes or provides mappings for each of the operations associated with the message . Specifically the mappings for each of the operations associated with the message include mappings from a formatting type or style of the application e.g. the first web service . In some examples more than one mapping can be provided or identified for one or more of the operations associated with the message .

In some embodiments the mappings for the operations associated with the message can include asynchronous mapping synchronous mappings or both. For example when the message includes an asynchronous operation the asynchronous operation can be associated with an asynchronous mapping and when the message includes a synchronous operation the synchronous operation can be associated with a synchronous mapping.

The application e.g. the second web service is identified that is associated with or assigned to the identified mapping interface . Specifically each of the mapping interfaces stored by the memory can be associated with a second web service e.g. the application . To that end in response to identifying the mapping interface based on the application e.g. the first web service the application e.g. the second web service is identified that is associated with the identified mapping interface . In some examples the application e.g. the second web service can be identified based on metadata associated with the identified mapping interface . In some embodiments the mapping proxy module identifies the application e.g. the second web service that is associated with the identified mapping service .

In some embodiments one or more of the mapping interfaces are associated with two or more second web services e.g. two or more applications analogous to the application . Thus two or more web services e.g. two or more applications analogous to the application can be identified.

In some examples the second web service e.g. the application is identified based on the types of mappings of the identified mapping interface . For example when the message includes an asynchronous operation or a synchronous operation or both the mapping interface can include at least an asynchronous mapping or a synchronous mapping or both and further the application e.g. the second web service is identified based on the asynchronous mapping or synchronous mapping or both of the asynchronous operation or synchronous operation or both .

The message is mapped to the application e.g. the second web service such that the operations of the message are in a second format associated with the application e.g. the second web service . Specifically the application e.g. the second web service can be associated with or include a second formatting that differs from the formatting associated with or included by the application e.g. the first web service . As mentioned above the operations of the as received message can be in the first format associated with the application and or a format of the host computing system . However after mapping the message to the application e.g. the second web service the operations of the message are in the second format associated with the application e.g. the second web service and or a format of the partner computing system . In some embodiments the mapping proxy module maps the messages to the application e.g. the second web service .

Mapping of the message to the application e.g. the second web service can include employing the identified mapping interface that is based on the application e.g. the first web service such that the operations of the received message are mapped from the first format of the application to the second format of the application according to the mappings of the identified mapping interface . Specifically when an operation of the message includes an asynchronous operation or synchronous operation an asynchronous mapping or synchronous mapping of the identified mapping interface is employed to map the asynchronous operation or synchronous operation from the first format of the application to the second format of the application such that the asynchronous operation or synchronous operation of the message can be interpreted by employed by or otherwise interacted with by the application e.g. the second web service .

In some examples mapping the message to the application e.g. the second web service can include mapping the message to multiple second web services e.g. multiple applications each analogous to the application . In some examples mapping the message can include mapping multiple messages to the application e.g. the second web service . In some examples mapping the multiple messages can include mapping the messages in the sequence for which the messages were received. Specifically as mentioned above the messages can have an associated ID number representing the sequence for which each particular message was received. To that end the messages can be mapped to the application e.g. the second web service with respect to the associated ID numbers of the messages . In some examples the messages are mapped in a differing sequence for which the messages were received.

In some embodiments mapping the message to the application e.g. the second web service can include splitting the message into two or more messages . Specifically splitting the message into two or more messages can be performed based on the application e.g. the second web service and particularly the UI associated with the application how the data related to the message is presented to the user e.g. the formatting of the application . In some examples the message is split when the message includes asynchronous operations. In some examples the message can split into two or more messages based on a size e.g. data size of the message . For example the message can be split such that each split message is of similar or the same data size or the message can be split based on the application e.g. the second web service what data size the application is able to process for each message . In some embodiments the mapping proxy module splits the messages into two or more split messages .

In some embodiments the split messages can be mapped to second web services e.g. the application or analogous applications . Specifically the messages can be mapped to the second web services e.g. the application or analogous applications such that the operations of each split message are in a format associated with the second web service e.g. the application or analogous applications that the respective split message is mapped to analogous to that mentioned above with respect to the message . In some embodiments the mapping proxy module maps the split messages to the second web services e.g. the application or analogous applications .

In some examples each of the split messages or a subset of the split messages are mapped to second web services e.g. the application or analogous applications . In some examples each of the split messages or a subset of the split messages are mapped to differing or the same second web services e.g. the application or analogous applications .

A logical port connection is assigned to the application e.g. the second web service . Specifically upon mapping or in response to mapping the message from the first format of the application e.g. the first web service to the second format of application e.g. the second web service via the mappings of the identified mapping interface a logical port connection stored by the memory is associated with the application or provided between the application and the application . The logical port connection establishes a connection between the application e.g. the first web service and the application e.g. the second web service such that the message or the split messages are provided to the application e.g. the second web service such that the message can be interpreted by employed by or otherwise interacted with by the application e.g. the second web service . In some embodiments the mapping proxy module assigns the logical port connection to the application e.g. the second web service .

In some examples when multiple messages are received or the message is split into split messages and a subset of the multiple messages or the split messages are mapped to multiple second web services e.g. the application or analogous applications a logical port connection is assigned to each of the multiple second web services e.g. the application or analogous applications .

In some additional embodiments the message is stored e.g. the received message . For example the message can be stored by any combination of the memory of the host computing system the memory of the partner computing system or the repository . In some examples the message is stored as a result of the message including one or more asynchronous operations. In some examples the message is stored in response to receiving the message or stored independent to receiving or transmitting the message . In some examples the message is stored after mapping the message to the application e.g. the second web service . In some examples the mapped message i.e. after mapping the message to the application e.g. the second web service is stored. In some examples the split messages are stored. In some embodiments the mapping proxy module facilitates storing the message .

In some additional embodiments after providing or in response to providing the message to the second application e.g. the second web service as mentioned above a response to the message can be provided or generated by the second application . In particular when the message includes one or more synchronous operations the synchronous operations are mapped using synchronous mappings of the identified mapping interface . When the synchronous operations of the message are provided to the second application e.g. the second web service in the format of the second application the second application can provide a response a fault or both based on related to the message described further below.

Specifically analogous to that mentioned above with respect to receiving the message an additional message is received related to the message . The application can retrieve the message from the memory . However in some examples the message can be retrieved from any memory storing the message such as the repository . In some embodiments the mapping proxy module receives the message from the application and in some examples also requests the message . Similar to that of message the message can include one or more additional operations. The operations can be asynchronous operations synchronous operations or both. Furthermore the message and the operations included by the message can be in the second format associated with the application and or a format of the partner computing system . In some embodiments the mapping proxy module receives the message .

In some embodiments the additional message is a response to the message . Specifically upon reception of the message by the second application e.g. the second web service the second application can provide the message as a response to the message that was mapped to the second application . In some examples the message is a fault. Specifically when the second application is unable to process the mapped message e.g. the mapped message is not available in the second application or a response to the mapped message is not available the message includes a fault. In some examples the additional message is received after providing the message to the application .

Analogous to that mentioned above with respect to identifying the mapping interface an additional mapping interface is identified based on the second application e.g. the second web service . The additional mapping interface includes or provides mappings for each of the additional operations associated with the additional message . Specifically the mappings for each of the operations associated with the message include mappings from a formatting type or style of the application e.g. the second web service . In some embodiments the mappings for the additional operations associated with the additional message can include asynchronous mapping synchronous mappings or both. In some embodiments the mapping proxy module identifies the additional mapping interface .

Analogous to that mentioned above with respect to identifying the first second web service the application e.g. the first web service is identified that is associated with or assigned to the identified additional mapping interface . In response to identifying the additional mapping interface based on the second web service e.g. the application the first web service e.g. the application is identified that is associated with the identified additional mapping interface . In some embodiments the mapping proxy module identifies the application e.g. the first web service that is associated with the identified mapping service .

Analogous to that mentioned above with respect to mapping the message the additional message is mapped to the first web service e.g. the application such that the operations of the message are in the format associated with the first web service e.g. the application . After mapping the application e.g. the first web service the operations of the message are in the first format associated with the application e.g. the first web service and or a format of the host computing system . In some embodiments the mapping proxy module maps the messages to the application e.g. the first web service .

Mapping of the additional message to the application e.g. the first web service can include employing the identified additional mapping interface that is based on the application e.g. the second web service such that the operations of the message are mapped from the second format of the application to the first format of the application according to the mappings of the identified additional mapping interface . Specifically when an operation of the message includes an asynchronous operation or synchronous operation an asynchronous mapping or synchronous mapping of the identified additional mapping interface is employed to map the asynchronous operation or synchronous operation from the second format of the application to the first format of the application such that the asynchronous operation or synchronous operation of the message can be interpreted by employed by or otherwise interacted with by the application e.g. the first web service .

Analogous to that mentioned above with respect to assigning the logical port connection to the application an additional logical port connection is assigned to the application e.g. the first web service . Specifically upon mapping or in response to mapping the additional message from the second format of the application e.g. the second web service to the first format of application e.g. the first web service via the mappings of the identified additional mapping interface an additional logical port connection is associated with the application or provided between the application and the application . The additional logical port connection establishes a connection between the application e.g. the second web service and the application e.g. the first web service such that the message is provided to the application e.g. the first web service such that the message can be interpreted by employed by or otherwise interacted with by the application e.g. the first web service . In some embodiments the mapping proxy module assigns the additional logical port connection to the application e.g. the first web service .

With respect to similar to that mentioned above a first web service such as the application sends a request the message that is synchronously mapped to a request employing the method mentioned above. The request is provided to the second web service such as the application . The second web service can provide a response a fault or both that is synchronously mapped to a response a fault or both. As mentioned above the fault or fault results when the second web service or the first web service being unable to process the request or the response .

The configuration section includes a search tab and a search thru tab . The search tab includes an interface for searching for mapping interfaces e.g. the mapping interface by service consumer proxy or service group. For example based on the application or mapping interfaces are identified including an external name a domain name an internal name a type and a description . The logical port section includes a view tab and a logical ports tab . For each logical port the logical ports tab includes a logical port name a state a target proxy name e.g. the application or and a target proxy logical port e.g. the port connection .

In step a message is received from a first web service. The message includes one or more operations in a first format. For example the mapping proxy module receives the message from the application e.g. the first web service . In some examples the message can include one or more operations. The operations can be asynchronous operations synchronous operations or both. In summary with respect to the synchronous operation a response and or a fault may be received in response to the message including the synchronous operation while with respect to the asynchronous operation a response and or fault is not received in response to the message including the asynchronous operation. Furthermore the message and the operations included by the message can be in a first format associated with the application and or a format of the host computing system .

In some examples the message is a XML message. For example the message includes XML data the operations of the message include XML data or both.

In step the message is optionally stored in a repository. In some examples the message is stored in the repository prior to mapping the message. For example the mapping proxy module facilitates storing the message in the repository when the message includes one or more asynchronous operations. In some examples the message is stored as a result of the message including one or more asynchronous operations.

In step a mapping interface is identified that is based on the first web service. The mapping interface includes one or more mappings for each of the operations of the message. For example the mapping proxy module identifies the mapping interface that is based on the application e.g. the first web service . Identification of the mapping interface can be based on the application e.g. the first web service . The mapping interface includes or provides mappings for each of the operations associated with the message . Specifically the mappings for each of the operations associated with the message include mappings from a formatting type or style of the application e.g. the first web service .

In some examples the one or more mappings for each of the operations include asynchronous mappings synchronous mappings or both. For example when the message includes an asynchronous operation the asynchronous operation can be associated with an asynchronous mapping and when the message includes a synchronous operation the synchronous operation can be associated with a synchronous mapping.

In step a second web service is identified that is associated with the identified mapping interface. For example the mapping proxy module identifies the application e.g. the second web service that is associated with the identified mapping interface . In some examples each of the mapping interfaces can be associated with a second web service e.g. the application . To that end in response to identifying the mapping interface based on the application e.g. the first web service the second web service e.g. the application is identified that is associated with the identified mapping interface .

In step the message is mapped to the second web service such that the one or more operations are in a second format associated with the second web service. For example the mapping proxy module maps the message to the application e.g. the second web service such that the operations of the messages are in a second format associated with the application e.g. the second web service . In some examples the application e.g. the second web service can be associated with or include a second formatting that differs from the formatting associated with or included by the application e.g. the first web service . As mentioned above the operations of the as received message can be in the first format associated with the application . However after mapping the application e.g. the second web service the operations of the message are in the second format associated with the application e.g. the second web service .

In some examples mapping of the message to the application e.g. the second web service can include employing the identified mapping interface that is based on the application e.g. the first web service such that the operations of the received message are mapped from the first format of the application to the second format of the application according to the mappings of the identified mapping interface . Specifically when an operation of the message includes an asynchronous operation or synchronous operation an asynchronous mapping or synchronous mapping of the identified mapping interface is employed to map the asynchronous operation or synchronous operation from the first format of the application to the second format of the application such that the asynchronous operation or synchronous operation of the message can be interpreted by employed by or otherwise interacted with by the application e.g. the second web service .

In step a logical port connection is assigned to the second web service. For example the mapping proxy module assigns the logical port connection to the second application e.g. the second web service . In some examples a logical port connection stored by the memory is associated with the application or provided between the application and the application .

In step the mapped message is provided to the second web service. For example the logical port connection facilitates providing the mapped message to the application e.g. the second web service . The logical port connection establishes a connection between the application e.g. the first web service and the application e.g. the second web service such that the message or the split messages are provided to the application e.g. the second web service such that the message can be interpreted by employed by or otherwise interacted with by the application e.g. the second web service .

In step multiple second web services are identified. For example the mapping proxy module identifies multiple applications e.g. the application and analogous applications . In some examples one or more of the mapping interfaces are associated with two or more second web services e.g. two or more applications analogous to the application .

In step the message is mapped to the multiple second web services. For example the mapping proxy module maps the message to the multiple applications e.g. the application and analogous applications . In some examples mapping the message to the application e.g. the second web service can include mapping the message to multiple second web services e.g. each analogous to the application . In some examples mapping the message can include mapping multiple messages to the application e.g. the second web service .

In step the message is split into two or more messages. For example the mapping proxy module splits the message into two or more split messages . In some examples splitting the message into two or more messages can be performed based on the application e.g. the second web service and particularly the UI associated with the application how the data related to the message is presented to the user e.g. the formatting of the application . In some examples the message is split when the message includes asynchronous operations.

In step each of the split messages is mapped to one of the second web services such that the operations of each split message are in a format associated with the respective second web service. For example the mapping proxy module maps the split messages to the multiple applications e.g. the application and analogous applications . In some examples the messages can be mapped to the second web services e.g. the application or analogous applications such that the operations of each split message are in a format associated with the second web service e.g. the application or analogous applications that the respective split message is mapped to.

In step multiple messages are received in a sequence. For example the mapping proxy module receives the multiples messages in a sequence. In some examples each of the messages can be associated with an identification ID number. Associating an ID number with each of the messages can facilitate mapping the messages in a similar or same order as the messages were received described further below.

In step the multiple messages are mapped according to the sequence. For example the mapping proxy module maps the multiple messages according to the sequence. In some examples the messages can be mapped to the application e.g. the second web service with respect to the associated ID numbers of the messages . In some examples the messages are mapped in a differing sequence for which the messages were received.

In step a logical port connection is assigned to the second web service. For example the mapping proxy module assigns the logical port connection to the second application e.g. the second web service . In some examples a logical port connection stored by the memory is associated with the application or provided between the application and the application .

In step an additional message is received that is related to the mapped message. The additional message includes one or more additional operations in the second format. For example the mapping proxy module receives the additional message. In some examples the mapping proxy module receives the message from the application . The message can include one or more additional operations. The operations can be asynchronous operations synchronous operations or both. Furthermore the message and the operations included by the message can be in the second format associated with the application .

In some examples the additional message is a response to the mapped message a fault related to the mapped message or both. In some examples upon reception of the message by the second application e.g. the second web service the second application can provide the message as a response to the message that was mapped to the second application . In some examples the message is a fault. Specifically when the second application is unable to process the mapped message e.g. the mapped message is not available in the second application or a response to the mapped message is not available the message includes a fault.

In step an additional mapping interface is identified that is based on the second web service. The additional mapping interface includes one or more mappings for each of the additional operations of the additional message. For example the mapping proxy module identifies the additional mapping interface based on the application e.g. the second web service . In some examples the additional mapping interface includes or provides mappings for each of the additional operations associated with the additional message . Specifically the mappings for each of the operations associated with the message include mappings from a formatting type or style of the application e.g. the second web service . In some embodiments the mappings for the additional operations associated with the additional message can include asynchronous mapping synchronous mappings or both.

In step the first web service is identified that is associated with the additional mapping interface. For example the mapping proxy module identifies the application e.g. the first web service that is associated with the additional mapping interface . In some examples in response to identifying the additional mapping interface based on the application e.g. the second web service the application e.g. the first web service is identified that is associated with the identified additional mapping interface .

In step the additional message is mapped to the first web service such that the one or more additional operations are in the first format are associated with the first web service. For example the mapping proxy module maps the additional message to the application e.g. the first web service . In some examples after mapping the application e.g. the first web service the operations of the message are in the first format associated with the application e.g. the first web service and or a format of the host computing system .

In some examples mapping of the additional message to the application e.g. the first web service can include employing the identified additional mapping interface that is based on the application e.g. the second web service such that the operations of the additional message are mapped from the second format of the application to the first format of the application according to the mappings of the identified additional mapping interface . Specifically when an operation of the additional message includes an asynchronous operation or synchronous operation an asynchronous mapping or synchronous mapping of the identified additional mapping interface is employed to map the asynchronous operation or synchronous operation from the second format of the application to the first format of the application such that the asynchronous operation or synchronous operation of the additional message or the additional message can be interpreted by employed by or otherwise interacted with by the application e.g. the first web service .

In step an additional logical port connection is assigned to the first web service. For example the mapping proxy module assigns an additional logical port connection to the application e.g. the first web service . In some examples upon mapping or in response to mapping the additional message from the second format of the application e.g. the second web service to the first format of application e.g. the first web service via the mappings of the identified additional mapping interface an additional logical port connection is associated with the application or provided between the application and the application . The additional logical port connection establishes a connection between the application e.g. the second web service and the application e.g. the first web service such that the additional message is provided to the application e.g. the first web service such that the additional message can be interpreted by employed by or otherwise interacted with by the application e.g. the first web service .

A number of implementations have been described. Nevertheless it will be understood that various modifications may be made. For example other methods described herein besides or in addition to that illustrated in or described with reference to may be performed. Further the illustrated steps of methods and may be performed in different orders either concurrently or serially. Further steps may be performed in addition to those illustrated in methods and and some steps illustrated in methods and may be omitted without deviating from the present disclosure. Accordingly other implementations are within the scope of the following claims.

