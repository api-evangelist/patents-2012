---

title: Event driven network system
abstract: A network switch includes a plurality of internal ports, a plurality of external ports, an event handler, an action engine, and an event processor. The event handler detects an event and, in response, assembles a construct that includes event parameters. The action engine uses the construct to generate an event syntax. The event processor executes the event syntax to automatically configure the communication between the plurality of internal ports and the plurality of external ports. A first event may include the connection of a cable to a first external port and result in each of the plurality of internal ports communicating with the first external port. A second event may include the connection of a cable to a second external port and result in a first subset of internal ports communicating with the first external port and a second subset of internal ports communicating with the second external port.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09344383&OS=09344383&RS=09344383
owner: Dell Products L.P.
number: 09344383
owner_city: Round Rock
owner_country: US
publication_date: 20121107
---
The present disclosure relates generally to information handling systems and more particularly to event driven network devices for networking information handling systems.

As the value and use of information continues to increase individuals and businesses seek additional ways to process and store information. One option is an information handling system IHS . An IHS generally processes compiles stores and or communicates information or data for business personal or other purposes. Because technology and information handling needs and requirements may vary between different applications IHSs may also vary regarding what information is handled how the information is handled how much information is processed stored or communicated and how quickly and efficiently the information may be processed stored or communicated. The variations in IHSs allow for IHSs to be general or configured for a specific user or specific use such as financial transaction processing airline reservations enterprise data storage or global communications. In addition IHSs may include a variety of hardware and software components that may be configured to process store and communicate information and may include one or more computer systems data storage systems and networking systems.

IHSs are typically networked together in network systems that allow the IHSs to communicate with each other over a network. For example a racks of IHSs e.g. server IHSs such as blades may be connected with other racks of IHSs through a network to allow those IHSs to communicate and for other IHSs to access those IHSs over the network. Enhanced network device capabilities have led to more intelligent networking equipment that provides additional and sophisticated sets of features and properties. However with the advent of these additional enhanced and sophisticated features network equipment manageability and operational complexity has dramatically increased. Conventionally network equipment management has been performed through human interface tools and software which require experts in networking to manage and configure the network system and limit the network system to a static configuration of the features and options available such that the network system has fixed operational behaviors that do not change in response to changing network conditions and properties.

Furthermore network equipment configuration is subject to human errors such as for example mismatch of equipment settings or configurations particularly in large data networks. Such errors can result in network operational issues which can result in network downtime loss of connectivity loss of data and a resulting loss of revenue generated by the network system.

According to one embodiment a network switch includes a chassis a plurality of internal ports located on the chassis a plurality of external ports located on the chassis an event handler that is operable to detect an event and in response assemble a construct that includes a plurality of event parameters an action engine coupled to the event handler and operable to use the construct to generate an event syntax and an event processor coupled to the action engine the plurality of internal ports and the plurality of external ports wherein the event processor is operable to execute the event syntax to automatically configure the operational mode and behavior of the network switch and the communication between the plurality of internal ports and the plurality of external ports.

For purposes of this disclosure an IHS may include any instrumentality or aggregate of instrumentalities operable to compute classify process transmit receive retrieve originate switch store display manifest detect record reproduce handle or utilize any form of information intelligence or data for business scientific control entertainment or other purposes. For example an IHS may be a personal computer a PDA a consumer electronic device a display device or monitor a network server or storage device a switch router or other network communication device or any other suitable device and may vary in size shape performance functionality and price. The IHS may include memory one or more processing resources such as a central processing unit CPU or hardware or software control logic. Additional components of the IHS may include one or more storage devices one or more communications ports for communicating with external devices as well as various input and output I O devices such as a keyboard a mouse and a video display. The IHS may also include one or more buses operable to transmit communications between the various hardware components.

In one embodiment IHS includes a processor which is connected to a bus . Bus serves as a connection between processor and other components of IHS . An input device is coupled to processor to provide input to processor . Examples of input devices may include keyboards touchscreens pointing devices such as mouses trackballs and trackpads and or a variety of other input devices known in the art. Programs and data are stored on a mass storage device which is coupled to processor . Examples of mass storage devices may include hard discs optical disks magneto optical discs solid state storage devices and or a variety other mass storage devices known in the art. IHS further includes a display which is coupled to processor by a video controller . A system memory is coupled to processor to provide the processor with fast storage to facilitate execution of computer programs by processor . Examples of system memory may include random access memory RAM devices such as dynamic RAM DRAM synchronous DRAM SDRAM solid state memory devices and or a variety of other memory devices known in the art. In an embodiment a chassis houses some or all of the components of IHS . It should be understood that other buses and intermediate circuits can be deployed between the components described above and processor to facilitate interconnection between the components and the processor .

Referring now to an embodiment of a networked system is illustrated. In the illustrated embodiment the networked system include a rack holding a plurality of IHSs each coupled to a switch that is coupled to a network . In an embodiment any of the IHSs may be the IHS discussed above with reference to and or include some or all of the components of the IHS . In one example each of the IHSs are servers in a datacenter that are stored in the rack and connected to a Top of Rack ToR switch that is further connected to a storage area network SAN either directly or through intermediate equipment such as for example an aggregation switch and or a variety of other intermediate equipment known in the art. One of skill in the art will recognize that in the data center example multiple racks storing IHSs may be connected to switches to couple the IHSs together and to a network. In another example the IHSs may be blade servers and the switch may be a blade switch. While a few examples have been provided the switch and its associated functionality may be applied to a variety of different networking environments other than those mentioned while remaining within the scope of the present disclosure.

Referring now to an embodiment of a switching system which may include the switch discussed above with reference to is illustrated. A switch in the switching system includes a chassis that houses the components of the switch . A plurality of internal ports and are located on the chassis and operable to be coupled with a plurality of external ports and through a connection fabric illustrated by the dashed box between the internal ports and the external ports as discussed in further detail below. In an embodiment the connection fabric includes a variety of connection fabric features that are not illustrated for clarity of discussion but which would be recognized by one of skill in the art. In the discussion below the internal ports are described as ports on the switch that connect to IHSs such as for example the IHSs in the rack of while the external ports are described as ports on the switch that connect to the network such as for example the network of . One of skill in the art will recognize this convention as referring to for example internal and external ports provided on blade switches but in other embodiments of the present disclosure the internal and external ports may be a variety of ports known in the art for connecting to a variety of different networked equipment known in the art. Furthermore while sixteen internal ports and two external ports are illustrated for clarity of discussion embodiments with different numbers of internal and external ports on the switch are envisioned as falling within the scope of the present disclosure.

In an embodiment the switch may include some or all of the components of the IHS discussed above with reference to . For example in the illustrated embodiment the switch includes an event processor that may be provided by the processor of a plurality of processors and or a variety of other processing elements known in the art. The event processor is coupled to the connection fabric . The processor and or other processing elements in the switch are coupled to a memory e.g. the system memory illustrated in that includes instruction that when executed by the processor and or other processing elements cause the processor and or other processing elements to provide an event handler and an action engine that are coupled to each other and the event processor . In the illustrated embodiment a management IHS is coupled to the event handler e.g. the management IHS is operable to communicate with the event handler provided by the processor and or other processing elements executing the instructions on the memory through a direct connection to the switch by a connection to the switch through a network e.g. the network of and or in a variety of other manners known in the art. In the illustrated embodiment a physical event switch is included on the chassis and coupled to the event handler e.g. the physical event switch is operable to communicate with the event handler provided by the processor and or other processing elements executing the instructions on the memory . While in the illustrated embodiment both the management IHS and the physical event switch are coupled to the event handler as discussed below in some embodiments only the management IHS or the physical event switch may be coupled to the event handler .

Referring now to a method for configuring a switch is illustrated. As discussed in further detail below the switch illustrated in along with the method illustrated in provide an event driven architecture based network device that operates in a self configuring manner based on events and conditions that allow the network device to function in different modes of operation without being managed by a network administrator or otherwise requiring the intervention of a user or operator. The switch may have multiple modes of operation that each provide for different functionality of the switch .

In one example the switch maintains a flexible list of supported operation modes in a non volatile persistent memory and those operation modes may be set via hardware or software for example using physical toggle switches key pads accessible to a user displays chassis management consoles remote access controllers life cycle controllers via management protocols e.g. Link Layer Discovery Protocol LLDP Cisco Discovery Protocol CDP Simple Network Management Protocol SNMP a Wireless Network Manager WNM Web Services Management Protocol WSMAN and or using a variety of other management protocols known in the art . Furthermore operation modes may be pushed to the switch or pulled from a management device e.g. a Dynamic Host Configuration Protocol DHCP server a Remote Authentication Dial In User Server RADIUS server and or any other distributed client server management network. In some embodiments custom operation modes may be configured or determined by a user or network administrator.

The event driven architecture discussed below enables intelligent and unmanaged networking devices by detecting events which may be generated internally or externally to the switch using hardware and or software. Detected events are identified and then actions are taken internally or externally to configure the switch to fulfill the requirements of the event by generating sequences of operations that are carried out in the switch to for example configure the communication of ports that is required for the desired operations. For example as discussed in further detail below an event may be detected by the event handler which in response assembles a construct that conveys the event description code and event parameters. The construct is provided to the action engine to generate the syntax script for the construct and that script is provided to the event processor for execution such that the switch is configured for a desired mode of operation for that event.

Referring now to the method begins at block where a switch with internal ports and external ports is provided. In an embodiment the switch including the internal ports and external ports of is provided for example as the switch located on the rack of . In the embodiment discussed below a plurality of IHSs e.g. the IHSs of are coupled to the switch by for example coupling each IHS to a respective internal port on the switch using cabling or other coupling devices known in the art. Thus in the illustrated embodiment the method may begin with the switch coupled to a plurality of IHSs through its internal ports . However as discussed below the switch may begin the method without being coupled to any IHSs or other devices through its internal ports and external ports and may configure itself similarly as discussed below in response to the coupling of IHSs to those ports while remaining within the scope of the present disclosure.

The method then proceeds to block where an event is detected. In an embodiment the event handler is operable to detect the event at block . In one embodiment the physical event switch is operable may be manipulated by a user in order to create an event that is detected by the event handler . For example the physical event switch may include a plurality of settings e.g. settings 00 to 99 that may be set by a user and that each creates a different event that will provide for a different mode of operation of the switch as discussed below. In another embodiment the management IHS may provide the event that is detected by the event handler . For example the management IHS may be for example a DHCP server a RADIUS server and or a variety of other centralized management servers known in the art and the management IHS may provide mode operation as part of the setting of the IP address of the switch . Thus in some embodiments using Application Programming Interfaces APIs of the switch customized modes of operations of the switch may be provided to the switch. For example at block as part of the query response establishing the IP address of the switch the management IHS may provide as the event the mode number similar to the settings 00 99 discussed above with reference to the physical event switch and APIs for execution by the switch . In yet another example an event detected by the event handler at block may include plugging a cable into one or more of the ports discussed in further detail below.

Referring now to and the method then proceeds to block where a construct is assembled. illustrates an event detected at block that includes the connection of a cable to an external port on the switch . In response to the connection of the cable to an external port as illustrated in an event that includes a set of arguments that specify the particulars of the event is generated and detected. The event handler then assembles a construct including a plurality of elements e.g. element1 element2 element3 etc. in that may be provided as predefined tabulated entries that correspond to a specific Common Language Infrastructure CLI command that is operable to be used by the event processor to configure the switch . For example referring to a Global Construct Table may be provided that includes a plurality of construct elements 1 n that in response to the detection of particular events including particular arguments may be selected as elements of the construct being assembled. The event handler will create a data structure of one or more of the construct element entries that are selected based on the event and its arguments. Collections of multiple construct elements may then be assembled into a set of operations that provide a script or macro. In an embodiment elements selected to assemble a construct may include elements that convey the event description code and event parameters such as for example port numbers configuration parameters specific commands and APIs values etc.

The method then proceeds to block where an event syntax is generated using the construct assembled in block . In an embodiment at block the event handler passes the construct assembled at block to the action engine such that the action engine can generate an event syntax using that construct. For example a pointer to the construct element structure discussed above may be passed to the action engine from the event handler . The action engine may then translate the construct elements to generate APIs or CLI syntax scripts as illustrated in . While in such an implementation it may be simpler to generate a script that is based on existing CLI commands triggered from an event in some embodiments a tighter integration with the switch operating system OS is provided by directly calling into low level APIs in the switch OS directly and bypassing the CLI layer by having the action engine translate the construct elements into a generic script format that is independent of switch CLI commands such as specific APIs. One of skill in the art will recognize that the former may be simpler to implement but limited to the capabilities of the CLI while the second is more powerful but harder to implement. As illustrated in a particular event may be detected that is associated with particular arguments that result in the selection of particular construct elements for the construct being assembled at block . The elements of that construct are used by the action engine to generate a script with an event syntax that is executable by the event processor discussed below.

The method then proceeds to block where the event syntax generated in block is executed to configure the communication between the internal ports and the external ports on the switch. In an embodiment the execution of the script including the event syntax generated in block that causes the event processor to modify forwarding logic over the connection fabric to configure the communication between the internal ports and the external ports . For example a pointer to the script may be passed from the action engine to the event processor and the event processor may then translate the script to hardware dependent CLI commands for execution. Thus in an embodiment the script and event syntax may be independent of the underlying hardware or vendor CLI. For example it is possible to put a translation layer in between the application layer and the underlying CLI or switch specific API so that a single application layer can be used with different switch operating systems or CLIs which allows for isolation from the CLI. In some embodiments the event processor may send the contents of the script to an external entity e.g. through the network such that the external entity may act upon the script. In some embodiments the event processor may undertake other activities in addition to the execution of the script including but not limited to handling and reporting errors and misconfigurations to the management IHS . A plurality of different examples of configured communications between the internal ports and external ports of the switch are provided below but those examples should not be interpreted as limiting as any configuration of communications between any ports and in response in any detected events are envisioned as falling within the scope of the present disclosure.

Referring now to in one embodiment the communication between the internal ports and the external ports may be configured such that each of the internal ports communicates with the external port . For example the physical event switch may include a mode setting e.g. 00 that operates to pin all user ports to uplink 1 and in response to being provided e.g. the physical setting of the physical event switch by a user with that mode setting i.e. an event the connection fabric is configured such that each of the internal ports e.g. user ports communicates with the external port e.g. uplink 1 . In some examples such a mode setting may configure any internal ports to communicate with the external port regardless of whether a cable is connected to external port . Similarly the management IHS may provide a mode setting e.g. over the network in which the connection fabric is configured such that each of the internal ports communicates with the external port substantially as discussed above.

In another example upon being powered on the switch may be initialized into a default configuration in which jumbo frames are enabled all ports are put into trunk mode and or having a variety of other configuration details known in the art. With an IHS coupled to each respective internal port a cable may be plugged into the external port providing an external port link up event that causes the connection fabric to be configured such that each of the internal ports communicates with the external port . In addition the switch may be automatically configured to stay in a willing mode and to auto configure the Priority Flow Control PFC settings received on the external port and to reflect the same on the internal ports in the event Data Center Bridging Exchange DCBX protocol packets are received. Furthermore the switch may be configured to perform link tracking of the external port to the internal ports . In an embodiment the configuration of the switch may include bringing down or otherwise disabling the internal ports if the external port is brought down or otherwise disabled. In addition the switch may be configured to learn the source Media Access Control srcMAC address on the internal ports for de multiplexing packets received on the external port and sent to the internal ports . Thus for a first mode of operations e.g. Pinning Mode 1 when a cable is connected to the external port but not to the external port each of the internal ports may be configured to communicate with the external port along with a number of other configuration details being applied to the switch .

Referring now to in one embodiment the communication between the internal ports and the external ports may be configured such that each of the internal ports communicates with the external port and each of the internal ports communicates with the external port . For example the physical event switch may include a mode setting e.g. 01 that operates to pin all user ports to uplink 1 if uplink 1 is the only uplink with a cable connected to it while pinning half of the user ports to uplink 1 and half of the user ports to uplink 2 if cables are connected to both uplinks . In response to being provided e.g. the physical setting of the physical event switch by a user with that mode setting i.e. an event the connection fabric is configured such that each of the internal ports e.g. user ports communicates with the external port e.g. uplink 1 if a cable is connected to the external port but not to external port while the connection fabric is configured such that the internal ports e.g. user ports communicate with the external port e.g. uplink 1 and the internal ports e.g. user ports communicate with the external port e.g. uplink 2 if a cable is connected to each of the external port and the external port . Similarly the management IHS may provide a mode setting in which the connection fabric is configured such that each of the internal ports communicates with the external port if a cable is connected to the external port but not to external port while the connection fabric is configured such that the internal ports communicate with the external port and the internal ports communicate with the external port if a cable is connected to each of the external port and the external port

In another example upon being powered on the switch may be initialized into a default configuration in which jumbo frames are enabled all ports are put into trunk mode and or having a variety of other configuration details known in the art. With an IHS coupled to each respective internal port a cable may be plugged into the external port providing an external port link up event that causes the connection fabric to be configured such that each of the internal ports communicates with the external port . In addition the switch may be automatically configured to stay in a willing mode and to auto configure the Priority Flow Control PFC settings received on the external port and to reflect the same on the internal ports in the event Data Center Bridging Exchange DCBX protocol packets are received. Furthermore the switch may be configured to perform link tracking of the external port to the internal ports . In an embodiment the configuration of the switch may include bringing down or otherwise disabling the internal ports if the external port is brought down or otherwise disabled.

A cable may then be plugged into the external port providing an external port link up event that causes the connection fabric to be configured such that each of the internal ports communicates with the external port and each of the internal ports communicates with the external ports . In addition the switch may be automatically configured to stay in a willing mode and to auto configure the Priority Flow Control PFC settings received on the external port and to reflect the same on the internal ports in the event Data Center Bridging Exchange DCBX protocol packets are received. Furthermore the switch may be configured to perform link tracking of the external port to the internal ports . In an embodiment the configuration of the switch may include bringing down or otherwise disabling the internal ports if the external port is brought down or otherwise disabled.

In addition the switch may be configured to learn the source Media Access Control srcMAC address on the internal ports for de multiplexing packets received on the external port and sent to the internal ports and for de multiplexing packets received on the external port and sent to the internal ports . Thus for a second mode of operations e.g. Pinning Mode 2 when a cable is connected to both the external ports and the external port the internal ports may be configured to communicate with the external port and the internal ports may be configured to communicate with the external port along with a number of other configuration details being applied to the switch .

Referring now to in one embodiment the communication between the internal ports and the external ports may be configured such that a Link Aggregation Group LAG is created with the external ports and used to communicate with each of the internal ports . For example the physical event switch may include a mode setting e.g. 02 that operates to create a LAG out of all available uplinks . In response to being provided e.g. the physical setting of the physical event switch by a user with that mode setting i.e. an event each of the external ports are put into a LAG and the connection fabric is configured such that each of the internal ports communicates with the LAG. Similarly the management IHS may provide a mode setting that causes the external ports to be put into a LAG and the connection fabric to be configured such that each of the internal ports communicate with the LAG.

In another example upon being powered on the switch may be initialized into a default configuration in which jumbo frames are enabled a LAG is configured for the external ports all ports and the LAG are put into trunk mode link tracking is configured for the LAG to the internal ports and or having a variety of other configuration details known in the art. With an IHS coupled to each respective internal port a cable may be plugged into the external port providing an external port link up event that causes the external port to be put into the LAG and the connection fabric to be configured such that each of the internal ports communicates with the LAG. In addition the switch may be automatically configured to stay in a willing mode and to auto configure the Priority Flow Control PFC settings received on the external port and to reflect the same on the internal ports in the event Data Center Bridging Exchange DCBX protocol packets are received. In an embodiment the configuration of the switch may include bringing down or otherwise disabling the internal ports if the LAG is brought down or otherwise disabled.

A cable may then be plugged into the external port providing an external port link up event that causes the external port to be put into the LAG and the external port configurations settings discussed above for the external port to be replicated for the external port . The LAG may then be configured to load share the traffic from the internal ports e.g. between the external ports in the LAG . In an embodiment the configuration of the switch may include bringing down or otherwise disabling the internal ports if the LAG is brought down or otherwise disabled.

In addition the switch may be configured to learn the source Media Access Control srcMAC address on the internal ports for de multiplexing packets received on the LAG and sent to the internal ports . Thus for a third mode of operations e.g. Load Balancing Mode 1 a LAG group is created for the external ports and when a cable is connected to either or both the external port and the external port the internal ports and may be configured to communicate with the LAG.

Thus a system and method have been described that includes a network device that self configures based on events and conditions such that the network device will function in different modes of operation. Such systems and methods pave the path to the emergence of new generations of intelligent and unmanaged networking equipment that does not require user or operator interventions.

Although illustrative embodiments have been shown and described a wide range of modification change and substitution is contemplated in the foregoing disclosure and in some instances some features of the embodiments may be employed without a corresponding use of other features. Accordingly it is appropriate that the appended claims be construed broadly and in a manner consistent with the scope of the embodiments disclosed herein.

