---

title: Data protection compliant deletion of personally identifiable information
abstract: The disclosure generally describes computer-implemented methods, software, and systems for modeling and deploying decision services. One computer-implemented method includes encrypting, by operation of a computer, personally-identifiable information (PII) data using a first cryptographic key, wherein the PII data is associated with non-encrypted associated data, encrypting the encrypted first cryptographic key with a second cryptographic key, determining that the occurrence of a PII data disassociation event associated with the second cryptographic key has occurred, and rendering the PII data inaccessible by disassociating the second cryptographic key from the encrypted first cryptographic key.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09317715&OS=09317715&RS=09317715
owner: SAP SE
number: 09317715
owner_city: Walldorf
owner_country: DE
publication_date: 20120824
---
Data privacy laws specify that personally identifiable information PII data associated with an individual must be destroyed after a purpose for retaining it has expired. These laws vary across geo political boundaries. Customers also demand privacy and security regarding their PII data. For many organizations the PII data is distributed across multiple systems and storage locations possibly across geo political boundaries subject to varying data privacy laws. Once it is determined that PII data must be destroyed locating and deleting the PII data can be problematic. Locating the distributed PII data is often a time consuming and error prone task. Ensuring the deletion of the located PII data may be technically challenging due to various storage formats and methods used to store and transfer the PII data. These challenges affect the organizations ability to both comply with applicable data privacy laws and to reassure customers of data privacy and security.

The present disclosure relates to computer implemented methods software and systems for data protection compliant deletion of personally identifiable information. One computer implemented method includes encrypting by operation of a computer personally identifiable information PII data using a first cryptographic key wherein the PII data is associated with non encrypted associated data encrypting the encrypted first cryptographic key with a second cryptographic key determining that the occurrence of a PII data disassociation event associated with the second cryptographic key has occurred and rendering the PII data inaccessible by disassociating the second cryptographic key from the encrypted first cryptographic key.

Other implementations of this aspect include corresponding computer systems apparatus and computer programs recorded on one or more computer storage devices each configured to perform the actions of the methods. A system of one or more computers can be configured to perform particular operations or actions by virtue of having software firmware hardware or a combination of software firmware or hardware installed on the system that in operation causes or causes the system to perform the actions. One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that when executed by a data processing apparatus cause the apparatus to perform the actions.

The foregoing and other implementations can each optionally include one or more of the following features 

A first aspect combinable with the general implementation further comprising analyzing the second cryptographic key using at least one of a condition associated with the second cryptographic key or a decision rule.

In a second aspect combinable with any of the previous aspects the PII data disassociation event includes at least one of exceeding a chronological retention period deadline a security alert or a PII data destruction request.

In a third aspect combinable with any of the previous aspects the disassociation of the second cryptographic key from the first cryptographic key is performed by at least one of permanently erasing the second cryptographic key expiring the second cryptographic key or encrypting the second cryptographic key with a third cryptographic key.

In a fourth aspect combinable with any of the previous aspects the second cryptographic key expires based on a chronological value.

In a fifth aspect combinable with any of the previous aspects the second cryptographic key expires based on a data value.

In a sixth aspect combinable with any of the previous aspects the disassociation of the second cryptographic key from the encrypted first cryptographic key preserves a referential integrity between the encrypted PII data and the non encrypted associated data.

The subject matter described in this specification can be implemented in particular implementations so as to realize one or more of the following advantages. First instead of physically deleting personally identifiable information PII data associated with an individual a cryptographic key encrypting the PII data may be deleted encrypted or otherwise made economically and or computationally infeasible to recover in order to ensure data protection compliant deletion of the PII data. Second there is no need to search multiple storage locations for the PII data as deleting the cryptographic key encrypting PII data ensures that the PII data is unusable regardless of storage location. Third referential integrity between the encrypted PII data and associated non encrypted associated data is preserved. Fourth encrypted PII data may be securely distributed and controlled using cryptographic keys. Fifth introduction of a purpose driven cryptographic operation on PII data e.g. each purpose is associated with a unique cryptographic key could help prioritize operations related to retention and or deletion of encrypted PII data.

The details of one or more implementations of the subject matter of this specification are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

This disclosure generally describes computer implemented methods software and systems for data protection compliant deletion of personally identifiable information.

For the purposes of this disclosure personally identifiable information PII data is information capable of use to uniquely identify an individual. In some implementations an individual may be a person an organization a group and or business entity. In some implementations an individual can be a collection of individuals. PII data may also encompass information capable of use to contact or locate the individual or information capable of use with other sources to identify contact or locate the individual. Various laws and regulations to address PII data security exist and vary across geo political boundaries. Examples of PII data could include name address telephone number email address social security number passport number driver license number session initiation protocol uniform resource identifier SIP URI social security number credit card number a username an account name and or other suitable data capable of use to identify contact and or locate the individual. In order to permanently disable stored PII data a cryptographic key or keys encrypting the PII data may be disassociated from the encrypted PII data to make the PII data economically and or computationally infeasible to recover. Examples of disassociation may include deleting encrypting establishing an expiration date and or other suitable methods of dissociation related to the cryptographic key or keys encrypting the PII data.

Specifically the enterprise server is responsible for receiving application requests for example requests for data protection compliant deletion of PII data from one or more client applications associated with the client of the example distributed computing system and responding to the received requests by processing said requests in the associated business application cryptographic engine and or decision engine and sending an appropriate response from the business application cryptographic engine and or decision engine back to the requesting client application. In addition to requests from the client requests associated with the business application cryptographic engine and or decision engine may also be sent from internal users external or third party customers other automated applications as well as any other appropriate entities individuals systems or computers. According to one implementation enterprise server may also include or be communicably coupled with an e mail server a web server a caching server a streaming data server and or other suitable server. In other implementations the enterprise server and related functionality may be provided in a cloud computing environment.

The enterprise server includes an interface Although illustrated as a single interface in two or more interfaces may be used according to particular needs desires or particular implementations of the example distributed computing system . The interface is used by the enterprise server for communicating with other systems in a distributed environment including within the example distributed computing system connected to the network for example the client as well as other systems communicably coupled to the network not illustrated . Generally the interface comprises logic encoded in software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interface may comprise software supporting one or more communication protocols associated with communications such that the network or interface s hardware is operable to communicate physical signals within and outside of the illustrated example distributed computing system .

The enterprise server includes a processor . Although illustrated as a single processor in two or more processors may be used according to particular needs desires or particular implementations of the example distributed computing system . Generally the processor executes instructions and manipulates data to perform the operations of the enterprise server . Specifically the processor executes the functionality required to receive and respond to requests from the client and or ensure data protection compliant deletion of PII data.

The enterprise server also includes a memory that holds data for the enterprise server . Although illustrated as a single memory in two or more memories may be used according to particular needs desires or particular implementations of the example distributed computing system . While memory is illustrated as an integral component of the enterprise server in alternative implementations memory can be external to the enterprise server and or the example distributed computing system . In some implementations the memory includes business application data a cryptographic key record a data record and a decision rule . Although illustrated as single instances there may be more than one instance of the business application data the cryptographic key record the data record and the decision rule .

The business application data is any type of data associated used by a business application and or associated with a business objection associated with a business application. For example for a business application that calculates taxes on sales invoices business application data for a specific sales invoice data object may include data pertaining to a particular sales invoice number buyer seller date address product s quantity price tax rate etc.

The cryptographic key record is a record used to associate a particular purpose key with a purpose key identifier key ID a purpose and one or more conditions . The cryptographic key record includes at least one instance of the purpose the key ID the purpose key and the condition . Turning now to is a block diagram illustrating components of a cryptographic key record .

The purpose key is a cryptographic variable a unique string of bits used by cryptographic algorithms for example cryptographic algorithms executed by a cryptographic engine to transform source data for example plain text images audio video hashed data etc. to cipher data and back to source data for a specific purpose . Cipher data contains all the information of the source data but is in an encrypted format not readable by a human or computer without the proper mechanism to decrypt it. Cipher data should resemble random gibberish if attempted to be read. For example the cipher data form of PII data John Q. Smith 4727 Main Street Big Town Tex. USA jqsmith mydomain.com could resemble a text string similar to QVJshOU c8 MJM J2n Q0 FJ7 if attempted to be read by a human or a computer while encrypted. Generally the size of a key is dependent on the cryptographic algorithm used to generate the cipher data and the strength of the encryption is related to the key size. For example a key of 1024 bits would generally produce a stronger encryption than a 512 bit key however depending on the cryptographic algorithm used the strength of the encryption could be comparatively strong even with different size keys. In some implementations the cryptographic algorithm used to encrypt or decrypt could be an RSA Elliptic Curve Cryptographic ECC AES 3DES Blowfish or other suitable cryptographic algorithm.

The purpose is a justification for a specific purpose key used to encrypt PII data. For example a purpose may indicate that because of a specific law regulation etc. that a purpose key is to be used to encrypt PII data for a customer that has signed off i.e. closed an account at a retailer in other words a purpose Customer signed off. The purpose can be for any legitimate reason and may include preserving a tax history for national security reasons secure data archiving etc.

The purpose key ID provides a mapping between a purpose and a purpose key . For example a customer John Q. Smith decides to close his account e.g. a sign off event with a retailer. Consequently the PII data associated with the records detailing John Q. Smith s transactions with the retailer may be required to be encrypted as required and or motivated by a specific law regulation etc. Therefore a purpose of Customer signed off is mapped to a generated purpose key for customer sign off event using a purpose key ID . The purpose key ID may then be used in a data record described below holding at least John Q. Smith s encrypted PII data described below and associated data described below to map back to the actual purpose key associated with the purpose key ID used to encrypt a record key described below that encrypts the PII data.

In some implementations a key map can be used to record one or more mappings where a mapping describes an association between a purpose key in a cryptographic key record used to encrypt the record key associated with a data record . In some implementations the purpose key ID is stored in the key map . The key map may be a file database data structure or any other suitable method of storing data.

The condition is a value rule etc. that determines whether a purpose key has expired. For example continuing the prior example a condition may indicate that a purpose key used to encrypt a record key associated with a data record holding John Q. Smith s PII data has expired due to reaching a defined termination date associated with the purpose key and or PII data. The termination date could be defined by a requirement in a law regulation etc. that PII data be encrypted and held for five years before being discarded. In another example the condition may indicate that the purpose key associated with the condition and used to encrypt a data record key to store encrypted purchase tax history has expired after 5 years.

Although illustrated as having a single condition in some implementations a cryptographic key record may have more than one associated condition . In these implementations multiple conditions within a cryptographic key record can have a hierarchical relationship where some conditions can be deemed subordinate to other superordinate conditions

In some implementations the hierarchical ordering and or determination of conditions to determine whether the purpose key associated with condition s has expired can be based upon a decision rule used by a decision engine described below . The decision rule may represent policies conditions parameters variables algorithms instructions constraints references and any other appropriate information used by the decision engine to determine whether the purpose key associated with conditions has expired. For example a cryptographic key record may have two different conditions associated with a purpose key . The first condition may specify that a purpose key used to encrypt a purchase tax history within a data record should expire after five years in the United States of America but the second condition may require that if the State of residence of the originator of the purchase tax history is Texas the purchase tax history data record should be kept for an additional year i.e. six years due to a specific additional State specific requirement. In this case if John Q. Smith is a resident of Texas the decision rule would supersede the subordinate first condition due to the more specific superordinate second condition and not indicate that the purpose key as expired for another calendar year.

Although shown as integral to the enterprise server in some implementations the decision rule is stored remotely from the enterprise server as long as the decision rule is accessible by the enterprise server . The decision rule may be accessed for example using a web service a remote access system or software a local or remote client or other suitable system component.

In some implementations the decision rule can be regularly updated to reflect changes in laws regulations rules corporate policies etc. A change to the decision rule may trigger an evaluation of all or a portion of available purpose keys by the decision engine to determine their expiration status. In this instance the decision engine can expire one or more purpose keys responsive to a determination using the updated decision rule that the one or more purpose keys are to be expired.

In some implementations additional data regarding the creation and or expiration date etc. of a purpose key can be associated with and or stored in the cryptographic key record and or in the key map . In other implementations this data may be associated with and or stored in any other suitable component of the distributed computing system .

Turning now to are block diagrams illustrating two different implementations of data records each storing PII data as described above encrypted with a record key the record key encrypted by at least one purpose key identified by a purpose key ID and associated data

The PII data is PII data encrypted by a cryptographic engine using the record key . The record key is a cryptographic key similar to the purpose key as described above. Encrypting the PII data in this manner is similar to placing the PII data into a first vault encrypting with the record key and then placing key combination the record key to unlock the first vault into a second vault encrypting the record key with a purpose key with one or more available keys combinations the purpose key to open the second vault.

The associated data is PII data associated non PII data associated with an individual. For example for a business transaction to purchase a product say a book associated data could be any non PII transaction data associated with the purchase including the book title the date purchased the purchase price the seller the general shipping location i.e. country city and or state shipping method etc. Associated data may also itself be protected due to privacy concerns. For example if the individual would prefer that their purchase of the book remain confidential the associated data corresponding to the purchased book could be protected in another manner apart from the method used to protect the PII data . In some implementations part or all of the associated data could also be protected as part of or separately from the PII data using the methods software and systems described herein to protect the PII data or other suitable methods software and systems consistent with this disclosure.

The encrypted key is an encrypted form of the record key . The record key is encrypted by one or more purpose keys to enhance security of the record key and PII data encrypted by the record key . Thus the encrypted key is an encrypted form of the record key

Turning now to is a block diagram illustrating components of data record associated with Record . PII data is shown encrypted using KRecord record key associated with Record . The associated data is shown stored within Record in a non encrypted format. KRecord is also shown encrypted by additional purpose keys KPurpose . . . KPurposeN at and respectively. In this implementation the PII data as part of Record could be accessed as long as a requestor had access to any of the many KPurpose KPurpose . . . KPurposeN purpose keys . In some implementations each KPurposeN purpose key provides an equivalent access point to decrypt the KRecord record key and then subsequently to the PII data

Turning now to is a block diagram illustrating components of an alternative data record associated with Record . PII data is shown encrypted using KRecord record key associated with Record . The associated data is shown stored within Record in a non encrypted format. In this implementation the encrypted key KRecord at E is shown further encrypted with KPurpose purpose key at E then encrypted with KPurpose purpose key at E and finally encrypted using KPurposeN purpose key at E . This implementation is a multi layered encryption scheme providing many additional benefits as should be apparent to one of skill in the art. For example the multiple layered encryption allows purpose keys to be allocated based on a hierarchical basis for example for levels of permission security importance etc. This multi layered approach also enhances security. If for example the KPurpose purpose key was compromised the KPurpose purpose key could be discarded and recreated along with re encrypting Eat . This would prevent the holder of the KPurpose or lower purpose key to decrypt any higher purpose keys the KRecord record key and the PII data

As will be apparent to one of skill in the art are only representative examples of and illustrate only two of many possible implementations of data records and are not meant to limit in any way appropriate functionality or information that may be made available to an enterprise server user. Various encryption configurations ordering and hierarchical arrangement are possible offering various security benefits consistent with this disclosure.

The business application is any type of application or set of applications that allows the requesting viewing executing changing deleting generating or otherwise managing information associated with a business. Generally a business application is used by business users to perform various business related functions to increase productivity measure productivity and perform business functions accurately. Example business applications may include human resources management payroll management invoicing business process development management etc. In some implementations the business application can use business application data cryptographic key records data records key maps decision rules and or any other suitable data associated with the enterprise server and or other component s of the example distributed computing system .

Once a particular business application is launched a client may interactively process a task event or other information associated with the enterprise server . Business application managed business processes may also include business processes performing and executing business process related events. Generally business processes communicate with clients applications systems and components to send and receive events.

In some implementations a particular business application may operate in response to and in connection with at least one request received from other business applications including a business application associated with another enterprise server . In some implementations the business application can be and or can include a web browser. In some implementations each business application can represent a web based application accessed and executed by remote clients across the network e.g. through the Internet or using at least one cloud based service associated with the business application . For example a portion of a particular business application may be a web service associated with the business application that is remotely called while another portion of the business application may be an interface object or agent bundled for processing at a remote client .

Any or all of a particular business application may be a child or sub module of another software module or enterprise application not illustrated without departing from the scope of this disclosure. Still further all or portions of the particular business application may be executed or accessed by a user working directly at the enterprise server as well as remotely at a corresponding client . Further although illustrated as a single business application the business application may be implemented as multiple business applications on the enterprise server .

The cryptographic engine is a service or a stand alone application that using a cryptographic algorithm generates cipher decrypts cipher data and or generates digital signatures and signcrypted messages. This cryptographic engine may provide symmetric key cryptographic algorithms as well as asymmetric key cryptographic algorithms. In some implementations the inputs to the cryptographic engine can include data and a purpose key record key . In some implementations data can include PII data a purpose key and or a record key to be encrypted. Outputs may include cipher data and information used to identify the cipher data. The cryptographic engine uses one or more purpose keys record keys to encrypt decrypt the data cipher data respectively. Most cryptographic algorithms used by cryptographic engines can be categorized in several ways 1 whether the cryptographic algorithm works on blocks of symbols usually of a fixed size i.e. a block cipher or on a continuous stream of symbols i.e. a stream cipher 2 whether the same key is used for both encryption decryption i.e. symmetric key or a different key is used for encryption decryption asymmetric key . For symmetric key cryptographic algorithms the key must be known to the recipient and sender and be kept private to ensure confidentiality. For asymmetric key cryptographic algorithms the encryption decryption keys are different from each other one key cannot be deduced from the other and one of the keys may be made public without loss of confidentiality public private key property . In some implementations the cryptographic engine can use symmetric key cryptographic algorithms. In other implementations the cryptographic engine can use asymmetric key cryptographic algorithms. In still other implementations the cryptographic engine can use a combination of both symmetric and asymmetric key cryptographic algorithms. In still other implementations any suitable cryptographic algorithm can be used by the cryptographic engine as long as it in economically infeasible to attempt to decrypt the resulting cipher data without the associated key s used to encrypt the data. Economically infeasible may mean that the time and effort required to recover the data from the cipher data is unrealistically high or such that the benefits of inventing the time effort and resources needed are significantly lower than the cost incurred.

The decision engine is a service or stand alone application that determines using at least the decision rule and one or more conditions associated with a cryptographic key record whether the purpose key associated with the cryptographic key record has expired. Although illustrated as a single decision engine in the enterprise server two or more decision engines may be used in the enterprise server according to particular needs desires or particular implementations of example distributed computing system . The decision engine can be any application program module process or other software that may provide methods and a graphical user interface to create store and evaluate at least one decision rule and or condition . In some implementations a particular decision engine can operate in response to and in connection with at least one request received from an associated business application cryptographic engine and or client . Additionally a particular decision engine may operate in response to and in connection with at least one request received from other business applications decision engines and or other cryptographic engines including business applications decision engines and or cryptographic engines associated with another enterprise server . In some implementations each decision engine can represent a web based application accessed and executed by remote clients using the network e.g. through the Internet or using at least one cloud based service associated with the decision engine . For example a portion of a particular decision engine may be a web service associated with a decision engine that is remotely called while another portion of the particular decision engine may be an interface object or agent bundled for processing at a remote client . Moreover any or all of a particular decision engine may be a child or sub module of another software module or enterprise application not illustrated without departing from the scope of this disclosure. Still further portions of the particular decision engine may be executed or accessed by a user working directly at the enterprise server as well as remotely at a corresponding client .

The enterprise server further includes a service layer . The service layer provides software services to the example distributed computing system . The functionality of the enterprise server may be accessible for all service consumers using this service layer. For example in one implementation the client can utilize service layer to communicate with the business application encryption decryption engine and or the decision engine . Software services provide reusable defined business functionalities through a defined interface. For example the interface may be software written in JAVA C or other suitable language providing data in extensible markup language XML format or other suitable format. While illustrated as an integrated component of the enterprise server in the example distributed computing system alternative implementations may illustrate the service layer as a stand alone component in relation to other components of the example distributed computing system . Moreover any or all parts of the service layer may be implemented as child or sub modules of another software module enterprise application or hardware module without departing from the scope of this disclosure.

The enterprise server further includes an application programming interface API . In some implementations the API can be used to interface between the business application and or one or more components of the enterprise server or other components of the example distributed computing system both hardware and software. For example in one implementation the business application can utilize API to communicate with the cryptographic engine the decision engine and or the client . The API may include specifications for routines data structures and object classes. The API may be either computer language independent or dependent and refer to a complete interface a single function or even a set of APIs. While illustrated as an integrated component of the enterprise server in the example distributed computing system alternative implementations may illustrate the API as a stand alone component in relation to other components of the example distributed computing system . Moreover any or all parts of the API may be implemented as child or sub modules of another software module enterprise application or hardware module without departing from the scope of this disclosure.

The client may be any computing device operable to connect to or communicate with at least the enterprise server using the network . In general the client comprises a computer operable to receive transmit process and store any appropriate data associated with the example distributed computing system .

The illustrated client further includes a client application . The client application is any type of application that allows the client to request and view content on the client . In some implementations the client application can be and or include a web browser. In some implementations the client application can use parameters metadata and other information received at launch to access a particular set of data from the server . Once a particular client application is launched a user may interactively process a task event or other information associated with the business suite server . Further although illustrated as a single client application the client application may be implemented as multiple client applications in the client .

The illustrated client further includes an interface a processor and a memory . The interface is used by the client for communicating with other systems in a distributed environment including within the example distributed computing system connected to the network for example the enterprise server as well as other systems communicably coupled to the network not illustrated . The interface may also be consistent with the above described interface of the enterprise server or other interfaces within the example distributed computing system . The processor may be consistent with the above described processor of the enterprise server or other processors within the example distributed computing system . Specifically the processor executes instructions and manipulates data to perform the operations of the client including the functionality required to send requests to the enterprise server and to receive and process responses from the enterprise server . The memory may be consistent with the above described memory of the enterprise server or other memories within the example distributed computing system but storing objects and or data associated with the purposes of the client .

Further the illustrated client includes a GUI . The GUI interfaces with at least a portion of the example distributed computing system for any suitable purpose including generating a visual representation of a web browser. In particular the GUI may be used to view and navigate various web pages located both internally and externally to the enterprise server . Generally through the GUI an enterprise server user is provided with an efficient and user friendly presentation of data provided by or communicated within the example distributed computing system .

There may be any number of clients associated with or external to the example distributed computing system . For example while the illustrated example distributed computing system includes one client communicably coupled to the enterprise server using network alternative implementations of the example distributed computing system may include any number of clients suitable to the purposes of the example distributed computing system . Additionally there may also be one or more additional clients external to the illustrated portion of the example distributed computing system that are capable of interacting with the example distributed computing system using the network . Further the term client and user may be used interchangeably as appropriate without departing from the scope of this disclosure. Moreover while the client is described in terms of being used by a single user this disclosure contemplates that many users may use one computer or that one user may use multiple computers.

The illustrated client is intended to encompass any computing device such as a desktop computer laptop notebook computer wireless data port smart phone personal data assistant PDA tablet computing device one or more processors within these devices or any other suitable processing device. For example the client may comprise a computer that includes an input device such as a keypad touch screen or other device that can accept user information and an output device that conveys information associated with the operation of the enterprise server or the client itself including digital data visual information or a GUI as shown with respect to the client .

Turning now to is a flow chart for data protection compliant deletion of personally identifiable information. For clarity of presentation the description that follows generally describes method in the context of . However it will be understood that method may be performed for example by any other suitable system environment software and hardware or a combination of systems environments software and hardware as appropriate. For example one or more of the business suite server the client or other computing device not illustrated can be used to execute method and obtain any data from the memory of the client the enterprise server or the other computing device not illustrated .

At personally identifiable information PII data is encrypted with a first cryptographic key. In some implementations the first cryptographic key is the record key associated with the data record. From method proceeds to

At the encrypted first cryptographic key is encrypted with a second cryptographic key. In some implementations the encrypted first cryptographic key can be encrypted with the second cryptographic key using a different encryption algorithm than that used to encrypt the first cryptographic key. In some implementations the second cryptographic key is a purpose key associated with a cryptographic key record. From method proceeds to .

At the second cryptographic key is analyzed to determine whether a PII data disassociation event has occurred. A PII data disassociation event may include exceeding a chronological retention period deadline associated with the second cryptographic key i.e. the key is too old a security alert a request to destroy the PII data and or other suitable PII data disassociation event not inconsistent with this disclosure. In some implementations one or more conditions associated with the second cryptographic key and or one or more decision rules are used to perform the analysis. From method proceeds to .

At a determination is made whether a PII data disassociation event has occurred. If at it is determined that the PII data disassociation event did not occur method proceeds to . If at however it is determined that that the PII data disassociation event did occur method proceeds to .

At the PII data is rendered inaccessible by disassociating the second cryptographic key from the encrypted first cryptographic key. In some implementations disassociating the second cryptographic key from the encrypted first cryptographic key includes permanently erasing the second cryptographic key expiration of the second cryptographic key due to for example a chronological and or a data value associated with either the PII data or the non encrypted associated data or encrypting the second cryptographic key with a third cryptographic key and disassociating the third cryptographic key from the second cryptographic key. From method stops.

Following the disassociation of the second cryptographic key from the encrypted first cryptographic key the referential integrity of the non encrypted associated data associated with the encrypted PII data is still preserved although the PII data is inaccessible. For example associated data related to a purchase transaction for a book may include the book title the date purchased the purchase price the seller the general shipping location i.e. country city and or state shipping method etc. but PII data associated with the purchaser would be inaccessible. This associated data is useful for metrics type analysis although the specific details concerning the purchaser are unavailable.

Implementations of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry in tangibly embodied computer software or firmware in computer hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Implementations of the subject matter described in this specification can be implemented as one or more computer programs i.e. one or more modules of computer program instructions encoded on a tangible non transitory computer storage medium for execution by or to control the operation of data processing apparatus. Alternatively or in addition the program instructions can be encoded on an artificially generated propagated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. The computer storage medium can be a machine readable storage device a machine readable storage substrate a random or serial access memory device or a combination of one or more of them.

The term data processing apparatus refers to data processing hardware and encompasses all kinds of apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can also be or further include special purpose logic circuitry e.g. a central processing unit CPU a FPGA field programmable gate array or an ASIC application specific integrated circuit . In some implementations the data processing apparatus and or special purpose logic circuitry may be hardware based and or software based. The apparatus can optionally include code that creates an execution environment for computer programs e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them. The present disclosure contemplates the use of data processing apparatuses with or without conventional operating systems for example LINUX UNIX WINDOWS MAC OS ANDROID IOS or any other suitable conventional operating system.

A computer program which may also be referred to or described as a program software a software application a module a software module a script or code can be written in any form of programming language including compiled or interpreted languages or declarative or procedural languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program may but need not correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code. A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network. While portions of the programs illustrated in the various figures are shown as individual modules that implement the various features and functionality through various objects methods or other processes the programs may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate.

The processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. a CPU a FPGA or an ASIC.

Computers suitable for the execution of a computer program include by way of example can be based on general or special purpose microprocessors or both or any other kind of CPU. Generally a CPU will receive instructions and data from a read only memory ROM or a random access memory RAM or both. The essential elements of a computer are a CPU for performing or executing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio or video player a game console a global positioning system GPS receiver or a portable storage device e.g. a universal serial bus USB flash drive to name just a few.

Computer readable media transitory or non transitory as appropriate suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM DVD R DVD RAM and DVD ROM disks. The memory may store various objects or data including caches classes frameworks applications backup data jobs web pages web page templates database tables repositories storing business and or dynamic information and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto. Additionally the memory may include any other appropriate data such as logs policies security or access data reporting files as well as others. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user implementations of the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube LCD liquid crystal display or plasma monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse trackball or trackpad by which the user can provide input to the computer. Input may also be provided to the computer using a touchscreen such as a tablet computer surface with pressure sensitivity a multi touch screen using capacitive or electric sensing or other type of touchscreen. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input. In addition a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user for example by sending web pages to a web browser on a user s client device in response to requests received from the web browser.

The term graphical user interface or GUI may be used in the singular or the plural to describe one or more graphical user interfaces and each of the displays of a particular graphical user interface. Therefore a GUI may represent any graphical user interface including but not limited to a web browser a touch screen or a command line interface CLI that processes information and efficiently presents the information results to the user. In general a GUI may include a plurality of user interface UI elements some or all associated with a web browser such as interactive fields pull down lists and buttons operable by the business suite user. These and other UI elements may be related to or represent the functions of the web browser.

Implementations of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of wireline and or wireless digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN a radio access network RAN a metropolitan area network MAN a wide area network WAN Worldwide Interoperability for Microwave Access WIMAX a wireless local area network WLAN using for example 802.11a b g n and or 802.20 all or a portion of the Internet and or any other communication system or systems at one or more locations. The network may communicate with for example Internet Protocol IP packets Frame Relay frames Asynchronous Transfer Mode ATM cells voice video data and or other suitable information between network addresses.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specific implementation details these should not be construed as limitations on the scope of any invention or on the scope of what may be claimed but rather as descriptions of features that may be specific to particular implementations of particular inventions. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable sub combination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a sub combination or variation of a sub combination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system modules and components in the implementations described above should not be understood as requiring such separation in all implementations and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Particular implementations of the subject matter have been described. Other implementations alterations and permutations of the described implementations are within the scope of the following claims as will be apparent to those skilled in the art. For example the actions recited in the claims can be performed in a different order and still achieve desirable results.

Accordingly the above description of example implementations does not define or constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure.

