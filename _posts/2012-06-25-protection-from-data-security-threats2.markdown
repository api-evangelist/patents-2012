---

title: Protection from data security threats
abstract: A credential, such as a password, for an entity is used to generate multiple keys. The generated keys are distributed to credential verification systems to enable the credential verification systems to perform authentication operations. The keys are generated such that access to a generated key allows for authentication with a proper subset of the credential verification systems. Thus, unauthorized access to information used by one authentication system does not, by itself, allow for successful authentication with other authentication systems.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09660972&OS=09660972&RS=09660972
owner: Amazon Technologies, Inc.
number: 09660972
owner_city: Seattle
owner_country: US
publication_date: 20120625
---
This application incorporates by reference for all purposes the full disclosure of co pending U.S. patent application Ser. No. 13 532 768 filed Jun. 25 2012 entitled DECENTRALIZED VERIFICATION IN A DISTRIBUTED SYSTEM. 

Computing environments take many forms. As an example organizations often utilize networks of computing devices to provide a robust set of services to their users. Networks often span multiple geographic boundaries and often connect with other networks. An organization for example may support its operations using both internal networks of computing resources and computing resources managed by others. Computers of the organization for instance may communicate with computers of other organizations to access and or provide data while using services of another organization. In many instances organizations configure and operate remote networks using hardware managed by other organizations thereby reducing infrastructure costs and achieving other advantages.

While diverse computing environments have proven useful for a wide variety of applications such environments present many challenges. For example configuring computer resources in furtherance of one organizational goal can adversely affect furtherance of another organizational goal. For example effective management of computing resource security can often come at the cost of efficient access to data and services. Balancing the goals of security and efficiency can be quite challenging often requiring significant effort and resources. In addition the growing complexity of configurations of computing resources can provide numerous vulnerabilities. Effective management of these vulnerabilities while maintaining ease of use from the user perspective can be very difficult.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

Systems and methods described and suggested herein relate to credential management for gaining access to computing resources. In one example a distributed computing environment includes multiple zones. The zones may correspond to for instance facilities in different geographic regions although other demarcations of the distributed computing environment are considered as being within the scope of the present disclosure. The distributed computing environment may operate with an objective among other objectives that a security breach in connection with one zone has a negligible or no effect on the data security of another zone.

To achieve this and other objectives a distributed computing environment may include multiple password verification systems. As one example each zone of the distributed computing environment may include its own password verification system. To access computing resources in a zone a user or computing device acting on behalf of a user or in an automated fashion may have to authenticate itself with a password verification system for the zone. As one example a user may have to provide a username and password to the password verification system although other authentication techniques may also be used in conjunction with the various techniques described herein. To provide simplicity from the authenticating party perspective the same password may be usable for authentication with some or even all of the password verification systems. However while the same password may be used for authentication with multiple password verification systems the password verification systems may be configured such that a security breach of one system does not or negligibly compromises the other password verification systems. Thus access to one password verification system does not by itself enable impersonation of one or more users to other password verification systems.

In an embodiment a distributed computing environment includes a key distribution system that centrally manages authentication data for multiple zones. The key distribution system may for example include data storage that stores passwords or information generated based at least in part on passwords for the distributed computing environment for use with multiple zones of the distributed computing environment. The key distribution system may use the stored passwords or information generated based at least in part on the passwords to generate keys for the zones and distribute the keys to the zones. For a password each zone may receive a different key that was generated using the password. Further the key may be generated in a manner such that possession of a key for one zone makes it impossible or at least cryptographically impractical to generate a key usable for successful authentication in another zone. Thus a technical advantage is achieved in that unauthorized possession of a key for one zone is practically useless for authentication in other zones.

In one specific example for a particular password the key distribution system computes a preliminary key from the password and a salt. Computing the key may be performed for instance using the password and the salt as input to a password based key derivation function. The computed preliminary key may then be used as an input to a function that takes information specific to a zone as another input to generate zone specific keys for each zone. The information specific to the zone may be information that encodes one or more restrictions on use of the key. The information specific to the zone may be for instance an identifier of the zone so that the resulting key is only usable in that zone. Dates times identifiers of services available within the zone and other restrictions may be encoded in the information specific to the zone such that a resulting key is only usable in compliance with the restriction s . The result or information generated based at least in part on the result may be provided to password verification systems of corresponding zones for use in authentication.

To authenticate a client may use a password to generate a password claim that is then submitted to an appropriate password verification system. For example the password claim may contain a corresponding key generated in the same manner as generated for the password verification system or in a different manner that achieves the same result . As another example the password claim may contain information generated based at least in part on the password where the information is generable by the password verification system using an appropriate key provided to it from the key distribution system. The password verification system may compare information in the received password claim to its own information either stored or generated from stored information to make a determination on authentication. In this manner the client is able to prove possession of the password without actually transmitting the password thereby providing an advantage in that the password itself is less vulnerable to unauthorized access such as by interception of an electronic transmission or a collection of electronic transmissions containing the password.

Numerous variations of the present disclosure are also within the scope of the present disclosure. For example as noted numerous techniques of authentication may be incorporated with the techniques described explicitly herein and variations thereof . In one example techniques for password based authentication are described. The techniques may be used for example in a distributed computing environment such as described above although they may also be used in generally any environment where authentication is used. For example the techniques may be used in connection with any password verification system and not necessarily password verification systems that utilize information provided from a central key distribution system. Specifically techniques of the present disclosure enable authentication in a manner that enhances data security by preventing against multiple types of security breach.

In an embodiment password claims submitted for the purpose of authentication contain at least two components both of which are required for successful authentication and each of which provide a different security advantage. Both of the components may be based at least in part on the same password although each component may be based at least in part on a different password in some embodiments. In an embodiment one of the components is computed by first generating a key based at least in part on the password and then generating an electronic signature based at least in part on the generated key and a use parameter. The use parameter may be for example a current time or date. The other of the at least two components in this example may be a key generated based at least in part on the password. Both components of the at least two components may be generated also based at least in part on a salt and in some embodiments each of the at least two components are generated using a different salt.

A submitted password claim may be verified by a password verification that has or generally has access to a database of information used for authentication. In an embodiment the database includes keys generated based at least in part on passwords and salts and hash values of keys generated based at least in part on passwords and salts. For example for a particular password the database may include a password generated based at least in part on the password and possibly a salt and a hash value of a key generated based at least in part on the password and possibly the salt and or another salt .

When a password claim is submitted the password verification system may use its stored information to determine if the components of the submitted claim are valid. For example continuing the present example the password verification system may use its stored key to generate a signature and determine whether the signature matches the signature provided in the password claim. In some embodiments such as when a date and or time are used to generate the signature the generated signature will only match the provided signature if the generated signature was produced using the same date time. Thus if the password verification system is configured to use a current time the generated signature will match only if the password claim is current. Generally the password verification system may be configured such that the provided signature will match only if the provided password was generated using the same parameters. Thus when the provided signature is generated using one or more parameters not used by the password verification system the signatures will not match. The password verification system may also compute a hash value of the received key to determine if the hash value matches the hash value stored in the database. If both components and possibly other components in systems that require more than two components match then authentication will be successful.

In this manner interception of the password claim does not result in possession of the password. In addition interception of the password at most may allow impersonation of the authenticating party submitting the claim only within the restriction s used to generate the signature which may be limited to a short period of time and possibly to a geographic location. Similarly unauthorized access to the database does not provide access to the key used to generate the hash value stored in the database. In other words in some embodiments intercepting a password claim provides access to one of at least two keys used while unauthorized access to the database provides access to the other of two keys used but neither intercepting the password claim nor unauthorized access to the database provides access to both keys. Since both of the at least two keys used are required for authentication unauthorized authentication becomes much more difficult as security breaches would typically involve both intercepting a transmission and unauthorized access to a database.

The computing resource provider in an embodiment provides one or more services on behalf of the customers corresponding to the client devices . Sample services include programmatically managed program execution services data storage services and the like. Generally the computing resources provider may provide any type of service which may be accessed over a network. For example the computing resources provider may be an organization that provides various services over the Internet such as through web pages and or mobile applications. As just one example a computing resources provider may be a bank where the client computer systems are utilized by customers of the bank to enable the customers to access account information and other information and to make financial transactions using the computing resources of the bank. As another example the client computing devices may be computing devices of organizations that utilize resources of the computing resources provider as part of their infrastructure. For instance a client computing device may be utilized to programmatically manage or otherwise access servers data storage and the like where the hardware for the servers and data storage is physically hosted by the computing resources provider such as in data centers owned and or operated by the computing resources provider. It should be noted that while various examples are given herein for the purpose of illustration the scope of the present disclosure is not limited such examples. Generally techniques described and suggested herein apply to any computing environment where access rights are apportioned into zones as described in more detail below.

As illustrated in the computing resources provider maintains a plurality of facilities . The facilities may for instance be data centers which may be located in various geographic locations. Each of the facilities may for instance have a different postal address. A customer of the computing resources provider may utilize resources in multiple geographic regions. As one example a client device may in connection with user input provided by a customer of the computing resource provider manage a set of computing resources that support operation of a website. Web servers for the website may be located in various geographic regions so that from the perspective of third party visitors to the website effects due to latency bandwidth and the like are minimized. For instance as illustrated in showing a map of the United States third party visitors to the website may access the website using servers located on the West Coast whereas third party visitors to the website may access web servers for the website located on the East Coast. Other reasons to utilize resources in multiple geographic locations may be to protect against various events such as power outages system failures natural disasters and other events that can affect a system s operation. Computing resources in multiple geographic locations may for instance be used to provide redundancy in infrastructure such that an event in one facility may have little or no effect on other facilities. For instance if there is a power outage at one facility services may be accessed from computer systems located in another facility.

While illustrates various facilities located in different geographic locations it should be noted that various aspects of the present disclosure are applicable in other instances when computing resources are divided into zones. The zones can be defined in various ways. As shown in the zones are defined geographically. One or more data centers may exist in a particular zone for example. Zones may be defined by various different types of boundaries for the zones. Computing resources in the form of computer hardware may for instance be considered in separate zones if the resources are in different server racks in different rooms of the same facility and the like. Boundaries for zones may also be determined logically as well. For instance two different applications executing on a same piece of hardware may be considered to be in different zones if there is some sort of logical separation between the applications. Similarly two virtual computer systems operating on the same hardware computer system may be in different zones. Generally zones may be defined by any way in which computing resources can be distinguished from one another.

In order to access computing resources in multiple zones it is often desirable for clients to authenticate themselves. For instance when the computing resource provider provides hosts computing resources that are programmatically managed remotely by the clients it is often desirable to utilize secure authentication protocols to ensure that the clients are managing their own resources so that others are unable to do so. In other words if the computing resource provider hosts hardware used by multiple customers it is desirable to ensure that customers are only able to manage their own resources and not those of other customers. Generally any instances where data security is important may make it desirable to utilize authentication protocols to guard against unauthorized access.

When computing resources are apportioned among multiple zones maintaining data security can present a challenge. For example systems that verify passwords and other credentials may need to have up to date information so that authentication is successful when valid credentials are presented. In terms of security various systems in place can create difficulties. For instance if the same key is used for access in multiple zones compromise of the key that is if the key is stolen may create security issues in other zones. For instance a key stolen from one zone may be used to access data in another zone. Similarly actions that are taken to remediate against theft of credentials can be cumbersome. If multiple password verification systems for example authenticate using the same information a breach of one system may cause updates to be necessary in all of the systems. Such system wide updates can be burdensome especially as the complexity of the whole system increases.

In an embodiment each zone which may be referred to as a key use zone includes its own password verification system. The password verification system may receive a set of the keys and use those keys in authentication operations such as to validate passwords for the client computing devices such as described below. In this manner a technical advantage is achieved in that each password verification system includes a different set of keys. Thus if a password verification system experiences a security breach the breach may not affect other password verification systems that use different sets of keys. In addition variations are considered as being within the scope of the present disclosure. For example while the present disclosure describes embodiments where each zone includes its own password verification system multiple key zones may share a password verification system. For example a single password verification system may receive multiple sets of keys while one or more other password verification systems may each receive one or more other sets of keys. A password verification system with multiple sets of keys may store the sets separately such as in separate data stores and or under separate cryptographic protection such that multiple separate and independent security breaches are required for access to multiple sets of keys.

It should be noted that numerous embodiments for authentication are considered as being within the present disclosure. For instance the client computing device may be prompted to provide credentials. Credentials provided over the network through the external interface of the service provider system may be passed to the authentication component for verification. The authentication component may then provide a response indicating the validity of the credentials. Determining the validity of credentials may be done in any suitable manner such as in the ways described in more detail below. The service component of the service provider system may comprise one or more computing devices that are configured to provide a service such as the services described above. For instance a service component may include a plurality of servers which are hosted for customers of a computing resource provider and programmatically managed by the customers. Requests to access resources in the service component may be passed to the service component for processing. For instance an API call to modify e.g. reprogram restart turn on turn off a computing device in the service component may be processed by the service component. Acknowledgments and other relevant messages may be sent by the service component through the network to the client computing device .

As discussed above embodiments of the present disclosure involve the distribution of keys to multiple zones for example to different data centers. accordingly shows an illustrative example of a process for propagating keys to various zones in accordance with an embodiment. Some or all of the process or any other processes described herein or variations and or combinations thereof may be performed under the control of one or more computer systems configured with executable instructions and may be implemented as code e.g. executable instructions one or more computer programs or one or more applications executing collectively on one or more processors by hardware or combinations thereof. The code may be stored on a computer readable storage medium for example in the form of a computer program comprising a plurality of instructions executable by one or more processors. The computer readable storage medium may be non transitory.

The process may be performed by a suitable computing device in a computing environment such as by a key distribution system described above in connection with . As shown in the process in an embodiment includes identifying a first zone. For instance a computing resource provider may include multiple zones and the first zone may be first in a sequence of zones for which keys are to be distributed. The process in an embodiment includes determining derivation parameters for the zone.

A derivation parameter may be any parameter used to derive a key. In an embodiment a derivation parameter has or at least corresponds to a semantic meaning. A semantic meaning may be one or more restrictions on use of a key derived using a parameter. In one example a derivation parameter can be a date. In instances where a computing resource provider provides multiple services a derivation parameter may be a name of a service. As yet another example a derivation parameter may correspond to one or more users authorized to use a key derived using a parameter. A parameter may be for instance a user identity or may be something that corresponds to one or more users such as a role of a user. Derivation parameters may be determined according to a canonical scheme. For instance in the instance parameter such as a date the date may be encoded in a canonical manner such that as described below others also using the derivation parameter such as client devices of authenticating parties will consistently encode the date or other parameter . In this manner computation utilizing derivation parameters will be consistent.

In an embodiment the process also includes identifying a password for a first user. A password may be information that encodes a string of characters. The characters may comprise alpha numeric characters and punctuation and or other symbols that may be provided by a user via user input. It should be noted that a password may include one or more words which may or may not be words found in a spelling dictionary. Thus in some embodiments a password may include spaces between other characters. As one illustrative example a password may be a phrase comprising a plurality of words separated from one another by at least one space. As illustrated in the process may also include identifying a salt for the first user. A salt i.e. cryptographic salt may be a sequence of bits which may be a sequence of random or pseudo random bits that is associated with the user. A salt may be used for example as input into a one way function as described below. By one way function it should be noted that truly one way functions may be used as may functions that are not known but believed to be one way or functions that are effectively one way. Example functions include but are not limited to cryptographic hash functions such as Secure Hash Algorithm 256 SHA 256 the Rabin function and generally functions that are computationally impossible or impractical to invert given a random element from its image. It should be noted that for the purposes of illustration examples are provided herein using salts although different schemes may or may not use salts and saltless embodiments are considered as being within the scope of the present disclosure.

In an embodiment a process includes computing a preliminary key using the identified password and salt. Determining the key may be done in any suitable manner. In many instances for the sake of cryptographic security it is desirable to use the password and salt as inputs to functions with certain properties. In an embodiment the function is a one way function which may be or use a cryptographic hash function. A function may also be a key derivation function such as the Password Based Key Derivation Function Two PBKDF2 . Other examples that may be used include bcrypt and other functions that are pre image resistant such as keyed cryptographic hash functions.

As shown in the process also includes computing a derived key also referred to as a verification key for the first user using the preliminary key and the one or more derivation parameters. In an embodiment the derived key is computed as a hash based message authentication code HMAC of a key derivation parameter and the preliminary key. In embodiments where multiple derivation parameters are used the derivation parameters may be input into the HMAC function iteratively. For example HMAC of the preliminary key and the first derivation parameter may be computed although other functions including other signature generation functions may be used. The result of that or a value based at least in part therefrom may be input with another derivation parameter into the HMAC function. The process may continue until all derivation parameters have been used to compute the derived key. In this manner the derived key is computed using multiple parameters which may be multiple restrictions on use of the key. For example in the case where two derivation parameters are used the two derivation parameters may be a service name and a date. Thus as described in more detail below a key derived from the parameters may be valid for that service on that date but not with other services on that date or not with the same service on a different date. Validity may be ensured due to as described below a password verification system using appropriate parameters and updating parameters that vary over time. For instance because a password verification system will update time based parameters key validity depends on use of the same time based parameters in a current manner because use of old information generated using old parameters will cause a mismatch between submitted information and information expected for validity .

Continuing with the process in an embodiment the process includes storing the derived key for the first user. As illustrated the process repeats this process for multiple users if needed. For instance in an embodiment the process includes determining whether there are additional users and if there are a password and salt for the next user is identified . If preliminary key and derived key for the next user may then be computed such as described above. It should be noted that while users are described for the purpose of illustration the process may be performed for other authenticating entities such as computer systems sub systems groups of users organizations and the like.

This process may continue until it is determined that there are no additional users at which a determination may be made whether there are additional zones. If there are additional zones in an embodiment the process includes identifying a next zone and derivation parameters for the next zone may be determined such as described above. Derived keys may then be computed for one or more users such as described above. This process may continue until a determination is made that there are no additional zones. At this point as illustrated in the process includes propagating stored keys to password verification systems for the various zones.

It should be noted that shows a specific implementation of an embodiment of the present disclosure and that numerous variations are also considered as being within the disclosure. For instance shows an iterative process occurring within another iterative process. However the process may proceed in a much different manner. For instance the process may iterate through a set of users and for each user may derive keys for each zone in which the user has access before computing derived keys for a next user. As another example of a variation that is within the scope of the present disclosure keys may be propagated at a time different from that illustrated. For instance keys may be propagated as computed. That is a key may be computed and then transmitted to a password verification system accordingly or keys may be distributed in batches at different points in performance of the process . Generally any process that computes and propagates keys in accordance with the various embodiments with the various principles described herein are considered as being within the scope of the present disclosure.

Once the appropriate computer systems in various zones receives keys that have been propagated to them the keys may be used for password verification. shows an illustrative example of a process which may be used to gain access to one or more computer resources. In an embodiment the process includes determining a password and salt. Determining the password and salt may be done in any suitable manner. For example both the password and salt may be accessed from computer memory of a computing device performing the process which may be a client computing device such as described above. As another example a salt may be stored in the memory of a computer system performing the process and a password may be obtained using user input. A user for instance may type or otherwise input a password into a graphical user interface of a computer system performing the process or a computer in communication with the computer system performing the process .

In an embodiment the process includes determining one or more derivation parameters such as described above. For instance as noted derivation parameters may be organized according to a canonical scheme. This canonical scheme may be used to determine the derivation parameters. For instance one or more derivation parameters may be accessed from memory where derivation parameters may be stored so as to be in compliance with the canonical system. As another example derivation parameters may be obtained by electronically requesting derivation parameters from another computer system. For instance derivation parameters may be requested from a service provider computer system for which the process is being performed for the purpose of authentication. Derivation parameters may be computed in other ways. For instance an application of a computer system performing the process may call a function that returns the current date if a date is a derivation parameter. The time may also be a derivation parameter. The value returned from the function if not already in accordance with the canonical system may be canonicalized that is may be transformed to be compliant with the canonical system. As an example a date may be reformatted to be in compliance with a canonical system. A time may be rounded to a nearest hour to a next hour or generally to some other time and the like. Determining one or more derivation parameters may also include determining information specific to a key use zone in which the computing resources to be accessed are accessible. For example referring to determining a derivation parameter may include determining a parameter such as a zone name specific to a facility or set of facilities in which the computing resources are located. Determining a derivation parameter may also include determining a service name or other service specific information for a service that provides access to the computing resources. Generally determining derivation parameter s may involve determining parameters for any restrictions on use of the key where access to the computing resources is governed by the restrictions.

As illustrated in process includes computing a preliminary key using the password and salt. For instance the preliminary key may be computed using the password and salt as inputs to PBKDF2 or any suitable function. Once the preliminary key is computed a derived key may be computed using the preliminary key and the one or more derivation parameters that were determined . Computing the derived key may be done as described above for instance by using the preliminary key and derivation parameters as inputs into HMAC. Once the derived key is computed the process includes proving possession of the password using the derived key. Proving possession of the password may be done in various ways such as by providing the derived key and or in other ways such as described below.

Once the derived key has been obtained in an embodiment the process includes generating an authentication request. An authentication request may be an electronic message that encodes a request for authentication. The authentication request may include a current time stamp that is information that encodes a current time. Information of the authentication request may be signed using the derived key. For instance in an embodiment signing the information of the authentication request using a derived key includes generating a signature which may be the result of inputting the derived key and the authentication request into HMAC or using another way of generating an electronic signature. It should be noted that in different embodiments different types of signatures may be used. For example some embodiments may make use of symmetric signatures while other embodiments may make use of asymmetric signatures. Generally any method producing an electronic signature using the authentication request and derived key may be used including by multiple invocations of HMAC or another function each time inputting the result of a previous invocation and a different parameter. Once the information of the authentication request has been signed the authentication request and signature may be provided to a password verification system. The password and signature may for instance be encoded in one or more electronic messages transmitted over a network to the password verification system. The password verification system may then as described below check whether the signature is valid and provide a response accordingly. A response may then be received from the password verification system based on whether or not the signature was valid. As will be clear validity of the signature corresponds to in this example possession of the password.

A determination may then be made whether the generated signature matches the received signature. In an embodiment the generated signature matches the received signature if the generated signature is equal to the received signature. However in various embodiments a match whether between signatures or between other pairs of values does not require equality. For example two values may match if they are not equal but mathematically equivalent. As another example two values may match if they correspond to a common object e.g. value or are in some predetermined way complementary and or they satisfy one or more matching criteria. Generally any way of determining whether there is a match may be used.

If it is determined that the generated signature matches the received signature then action for successful authentication may be taken . If however it is determined that the generated signature does not match the received signature then action for unsuccessful authentication may be taken . Action for successful authentication may be any action for which the computer system performing the process is programmed to take upon successful authentication. Such actions may vary depending on the various embodiments employing aspects of the present disclosure. For example in one example the action of successful authentication may be to provide a credential to a client computer system that provided the authentication request and signature to enable to client computer system to provide the credential with subsequent requests to be made. When such requests are made in connection with the credential the credential indicates that the client computer system is authenticated and therefore authorized to make the requests. Action for unsuccessful authentication may also vary depending on various embodiments. For example an electronic message may be sent to the client computer system notifying the client computer system that authentication was unsuccessful to enable the client computer system to automatically or otherwise take action such as reattempting authentication. For instance a user may be prompted on the client computer system to input the password again because a potential reason for the signature not matching may be because the user originally input the password incorrectly.

Variations to the process and other processes for authenticating a user are considered as being within the scope of the present disclosure. For example as noted above communication with a password verification system or other authentication system may involve transmission of electronic communications having a time stamp. Also the time stamp may be encoded in information that is electronically signed for a signature to be transmitted to the authentication system. An authentication system may determine whether the time stamp indicates a time that is sufficiently e.g. according to a policy current. For example the authentication system may determine whether the timestamp is sufficiently close to a current time where sufficiently close may be determined by a policy and may be predetermined . Successful authentication may be dependent on the determination. This provides an additional advantage in that assuming use of a cryptographically sufficient signature function someone who intercepts an authentication request and signature will not without more have enough information to generate a valid signature with a different time stamp. In this manner a technical advantage is achieved in that interception of communications and later use for authentication is automatically prevented once a window during which the timestamp is current expires. In particular because both the signature matching the request and the timestamp being current are required for successful authentication and because an interception of an authentication request and a signature does not itself provide the ability to validly sign authentication requests interception of the authentication request and signature provides a much more limited security breach than provided by many conventional systems.

As noted different ways of proving possession of the password may be used in accordance with different embodiments. accordingly shows an illustrative example of another process proving possession of a password in accordance with an embodiment. The process may be performed for instance by a client computer system described above or generally by any device of an authenticating party. As illustrated in the process includes a challenge and response mechanism to verify possession of the password. In an embodiment the process includes requesting authentication from a password verification system. Requesting authentication may be done in any simple manner such as by transmitting a corresponding electronic message encoding the request. In response in an embodiment the process includes receiving a challenge value from the password verification system. The challenge value may be for instance a string of bits or other set of information. The client computer system may then obtain a derived key such as described above. A challenge response may then be generated using the challenge value and the derived key. The challenge value and derived key may as an example be input into a function and the challenge response may be the output of the function or otherwise based at least in part on the output of the function. An example function is HMAC or other functions described above or having properties. The challenge response may then be provided to the password verification system. The password verification system may determine whether the challenge response indicates possession of the password and may provide a response accordingly. A verification response may then be received from the password verification system. The verification response may be as described above.

As noted above despite best efforts to maintain security vulnerabilities are often difficult to fully address. For instance new ways of compromising computer systems may be invented and utilized to obtain access to information. Compromising various authentication schemes can be done in various ways. For instance a conventional password verification system may include a database or other organization of information used to authenticate users. Unauthorized access to such a database may compromise the scheme by allowing those with unauthorized access to the database to impersonate users or perhaps by impersonate the password verification system. Similarly information transmitted to a password verification system may be intercepted in transit. For instance as described above numerous embodiments of the present disclosure include transmitting electronically information from one computer system to the other. Often transmission of such information requires the use of computing resources outside of one s control. For instance messages traveling over the Internet may pass through numerous computer systems operated by third parties. As such it is feasible that information transmitted over a network can be intercepted and used in a malicious way. Accordingly embodiments of the present disclosure include multi factored protection from different types of compromising of authentication systems.

A next column has entries corresponding to a value obtained at least based in part on a password and a salt. In the illustrative example of values in this column labeled key are values obtained as the output of PBKDF2 with inputs as the first salt and the password. As with other derived keys described herein components in the key column or other analogous organization of key data may be values generated using any suitable method of generating keys and or information derived therefrom.

A next column may correspond to a second salt which for each user name may be different from the first salt at least for some users. Finally a last column may correspond to key hashes which are hash values derived based at least in part on keys. In this particular example the entries of the last column are hash values obtained by inputting into a hash function the output of PBKDF2 when the inputs to PBKDF2 are the second salt and the password. Thus in this manner the database includes information that is based at least in part on the password but the database does not contain the password itself. A row in this table corresponding to the name Ilya has example values provided for the purpose of illustration. It should be noted that different functions values and such may be used in accordance with various embodiments and the specific functions and values used herein are provided for the purpose of illustration. Also in accordance with various embodiments relational databases used in accordance with the various embodiments will typically have multiple rows. Generally a data store that stores authentication information for a password verification system may store data for multiple authenticating parties and may a data storage system that allows for retrieval of appropriate information for a party attempting authentication.

Numerous variations of what information is stored in the database or another data store are considered as being within the scope of the present disclosure. For example techniques for authentication described in more detail below may be combined with techniques described above. As one example entries in the key hash column may be derived based at least in part on one or more key derivation parameters. For instance instead of that which is illustrated in the value stored may be 

Of course different time periods such as hours days weeks and even varying time periods may be used. In addition additional parameters may be used in addition to or instead of time based and zone based parameters. For instance the value stored may be 

Other variations are also considered as being within the scope of the present disclosure. For example HMAC is used above for the purpose of illustration but other functions such as functions with one or more properties in common with HMAC may be used. For instance pre image resistant functions may be used in various embodiments. In addition while the above examples show iterative use of a single function multiple functions may be used in deriving a value for the database. For instance the result of one function may be input with a parameter into another function. The result of that may be input into yet another function or another function already used or even the same function perhaps with another parameter. As another example of a variation values may be received from a key distribution system such as described above and the values may further be modified for storage based at least in part on a salt. For instance a value from a key distribution system may be input into PBKDF2 with a stored salt. In addition it should be noted that the processes described herein may be modified to take into account of the numerous variations that are within the scope of the present disclosure. For instance if any of the above values of HMAC are used in the database processes may be adapted to verify password claims accordingly.

In an embodiment the process includes computing a password claim that has multiple components. In this example the process includes computing a first claim component using a first salt and password and a time varying value. The time varying value may be for instance a current date and a current time the accuracy of which may be on the order of minutes hours or other delineations and may generally be any value that changes over time. As yet another illustrative example the time varying value may be a randomly generated counter generated or otherwise generated number that is updated periodically or otherwise multiple times over time. When the password claim has been submitted as part of or otherwise in connection with an electronic request e.g. request to authenticate request for access to a computing resource request to perform an operation or other request the time varying value may be said to be dependent from the electronic request. Other information dependent from the request may also be used in addition to or instead of the time varying value. Generally the first component may be based at least in part on a cryptographic operation involving a key and information about the electronic request. For instance a timestamp is information about the request that indicates an approximate time of the request. Information about the request may also generally be publically determinable. A timestamp for example may be generated by a computer system without non public information available to it. As another example information about the request that is publicly determinable may include information identifying a service to be accessed in connection with the request. Information about the request may also include information such as a cryptographic nonce e.g. an arbitrary or effectively arbitrary number or other information . Such information may be unique to the electronic request.

In an embodiment the process also includes computing a second claim component using a second salt and the password. The second component may include an encoding of a key that is generated based at least in part on the second salt and the password. The first claim component and second claim component may then be provided to a password verification system. A verification response from the password verification system may be received such as described above. It should be noted that as with other processes described herein variations are considered as being within the scope of the present disclosure and such variations are not necessarily described explicitly here. For instance shows computation of a first claim component and second claim component in a particular order although it should be understood that in this example order the order may be different. Orders of other actions described herein may also in many instances be different than as explicitly described and those with skill in the art will understand that many actions described in connection with the illustrations may be performed in a different order and that in some instances fewer actions may be performed and or more actions may be performed.

In an embodiment the process also includes computing a key hash using a second claim. A determination may then be made whether the computed key hash matches the stored key that was obtained from the data store. If it is determined that the computed key hash matches the stored key hash a computing device performing the process may proceed to access one or more key derivation parameters such as described above. Accessing the key derivation key parameters may be done for instance by accessing from memory receiving from another computer system or computing the one or more key derivation parameters. A key then may be obtained from a data store. For example referring to a key from an appropriate entry in the third column may be obtained. A signature may be computed using the key and the key derivation parameters. A determination may then be made whether the computed signature matches the received signature such as described above. If it is determined that the computed signature matches the received signature then action for successful authentication may be taken . Similarly if it is determined that a computed signature does not match the received signature or if it is determined that the computed key hash does not match the stored key hash then action for unsuccessful authentication may be taken such as described above. In this manner both components of the password claim need to be verified in order for a claim to access to the password to be successful. Further an technical advantage is achieved because unauthorized access to the database and interception of the password claim each by themselves do not provide for unauthorized authentication by a party other than an authorized party.

It should be noted as with all processes described herein variations are considered as being within the scope of the present disclosure. For example shows determining whether a computed key hash matches a store key hash before determining whether a computed signature matches a received signature. It should be noted that these determinations do not necessarily need to be made in this order and it should be noted that computing whether making one determination does not necessarily need to be dependent on the result of another determination. Generally any process for making both determinations may be used. In addition other determinations may also be included in performance of variations of the process .

In addition the present disclosure provides numerous illustrative examples of various embodiments of the present disclosure but that the scope of the disclosure is not limited to those explicitly described herein. For example passwords are used for the purpose of illustration since passwords are common in authentication schemes. However the scope of the present disclosure is not limited to passwords in the traditional sense that is the disclosure is not limited to strings that users commit to memory and provide upon request of computer system requiring authentication. Indeed the scope of the present disclosure also includes use of other information that can be used for authentication. As an example biometric information fingerprints retina scans voice data DNA facial recognition data and other biometric information may be used in addition to or instead of traditional passwords. As another example a numerical value provided by an RSA SecurID or other token device may be used in addition to or instead of traditional passwords. Generally any information i.e. credential that can be used to ensure that a party attempting authentication is authorized may be used instead of or in addition to traditional passwords.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment. The application server can include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device handling a majority of the data access and business logic for an application. The application server provides access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the Web server in the form of HTML XML or another appropriate structured language in this example. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the Web server. It should be understood that the Web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein.

The data store can include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect. For example the data store illustrated includes mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log data which can be used for reporting analysis or other such purposes. It should be understood that there can be many other aspects that may need to be stored in the data store such as for page image information and to access right information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. In one example a user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information then can be returned to the user such as in a results listing on a Web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable storage medium e.g. a hard disk random access memory read only memory etc. storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

The various embodiments further can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In embodiments utilizing a Web server the Web server can run any of a variety of server or mid tier applications including HTTP servers. FTP servers CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the a system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

Other variations are within the spirit of the present disclosure. Thus while the disclosed techniques are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the invention to the specific form or forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the invention as defined in the appended claims.

The use of the terms a and an and the and similar referents in the context of describing the disclosed embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments of the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Preferred embodiments of this disclosure are described herein including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for the invention to be practiced otherwise than as specifically described herein. Accordingly this invention includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the invention unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

