---

title: Data exchange technology
abstract: A data exchange adaptor that synchronizes data between an enterprise system operated by a company and a cloud-based system operated by a third party other than the company. The data exchange adaptor enables exchange of data between the enterprise system and the cloud-based system and controls storage and retrieval of data at the enterprise system and the cloud-based system. The data exchange adaptor also performs transport level security for communications that exchange data between the enterprise system and the cloud-based system and access level security for data stored to the enterprise system and the cloud-based system. The data exchange adaptor further schedules synchronization of data between the enterprise system and the cloud-based system and allows the enterprise system to retain control over the synchronization of data between the enterprise system and the cloud-based system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09059894&OS=09059894&RS=09059894
owner: Accenture Global Services Limited
number: 09059894
owner_city: Dublin
owner_country: IE
publication_date: 20120830
---
The present application claims the benefit of Indian Patent Application No. 3012 CHE 2011 filed on Sep. 2 2011 which is incorporated herein by reference in its entirety for all purposes.

A company may use a customer relationship management CRM system to implement a strategy for managing the company s interactions with customers and sales prospects. The customer relationship management system may organize automate and synchronize business processes and handle sales related activities marketing customer service and technical support.

Cloud computing is the use of computing resources e.g. hardware and software that are delivered as a service over a network typically the Internet . Cloud computing entrusts remote services with a user s data software and computation.

In one aspect a data exchange adaptor synchronizes data between an enterprise system operated by a company and a cloud based system operated by a third party other than the company. The data exchange adaptor includes at least one communication module configured to exchange data between the enterprise system operated by the company and the cloud based system operated by the third party. The data exchange adaptor also includes at least one data controller configured to extract data from the at least one communication module and control storage and retrieval of data at the enterprise system and the cloud based system. The data exchange adaptor further includes at least one authentication module configured to perform transport level security for communications that exchange data between the enterprise system and the cloud based system and access level security for data stored to the enterprise system and the cloud based system. In addition the data exchange adaptor includes a job scheduler that is operated by the enterprise system and that is configured to control the at least one communication module the at least one data controller and the at least one authentication module to schedule synchronization of data between the enterprise system and the cloud based system and allow the enterprise system to retain control over the synchronization of data between the enterprise system and the cloud based system.

Implementations may include one or more of the following features. For example the at least one communication module may be configured to exchange calendar data between the enterprise system operated by the company and the cloud based system operated by the third party and the at least one data controller may be configured to extract calendar data from the at least one communication module and control storage and retrieval of calendar data at the enterprise system and the cloud based system. In this example the job scheduler may be configured to schedule synchronization of calendar data between the enterprise system and the cloud based system such that a calendar maintained by the enterprise system is synchronized with a calendar maintained by the cloud based system.

In some implementations the at least one communication module may be configured to exchange contact data between the enterprise system operated by the company and the cloud based system operated by the third party and the at least one data controller may be configured to extract contact data from the at least one communication module and control storage and retrieval of contact data at the enterprise system and the cloud based system. In these implementations the job scheduler may be configured to schedule synchronization of contact data between the enterprise system and the cloud based system such that contacts maintained by the enterprise system are synchronized with contacts maintained by the cloud based system.

In some examples the at least one communication module may be configured to exchange task data between the enterprise system operated by the company and the cloud based system operated by the third party and the at least one data controller may be configured to extract task data from the at least one communication module and control storage and retrieval of task data at the enterprise system and the cloud based system. In these implementations the job scheduler may be configured to schedule synchronization of task data between the enterprise system and the cloud based system such that tasks maintained by the enterprise system are synchronized with tasks maintained by the cloud based system.

The enterprise system may be a customer relationship management CRM system the at least one communication module may be configured to exchange data between the CRM system operated by the company and the cloud based system operated by the third party and the at least one data controller may be configured to control storage and retrieval of data at the CRM system and the cloud based system. In addition the at least one authentication module may be configured to perform transport level security for communications that exchange data between the CRM system and the cloud based system and access level security for data stored to the CRM system and the cloud based system and the job scheduler may be operated by the CRM system and is configured to schedule synchronization of data between the CRM system and the cloud based system and allow the CRM system to retain control over the synchronization of data between the CRM system and the cloud based system. The job scheduler may be configured to trigger reverse synchronization from the cloud based system to the CRM system.

In some implementations the at least one communication module may include at least one web service module configured to exchange web based requests and responses between the enterprise system operated by the company and the cloud based system operated by the third party. In these implementations the at least one web service module may include a first web service operated on the enterprise system and a second web service operated on the cloud based system where the first web service operated on the enterprise system and the second web service operated on the cloud based system are configured to exchange web based requests and responses with each other. Further in these implementations the first web service operated on the enterprise system may be a consumer web service operated on the enterprise system the second web service operated on the cloud based system may be a producer web service operated on the cloud based system and the producer web service operated on the cloud based system may always be triggered by the consumer web service operated on the enterprise system.

Further the job scheduler may be configured to periodically initiate a synchronization process after a particular period of time has passed since a most recent synchronization process. The job scheduler may be configured to initiate a synchronization process based on user input received to perform synchronization. The job scheduler may be configured to initiate a synchronization process based on a change to data maintained by the enterprise system.

In some examples the at least one data controller may include a first data controller operated on the enterprise system and configured to control storage and retrieval of data at the enterprise system and a second data controller operated on the cloud based system and configured to control storage and retrieval of data at the cloud based system. In these examples the first data controller may include a web based user interface configured to enable selection and deselection of synchronization options and manual triggering of synchronization a data injector configured to update data received from the cloud based system to the enterprise system a data extractor configured to extract data from the enterprise system and forward the extracted data to the cloud based system for synchronization an exception handler configured to check on a variety of exceptions and errors received while synchronization is in process and a logging component configured to log events on a periodic basis. In addition in these examples the second data controller may include a service manager which provides controller service to access various services in the cloud based system a data injector configured to update data received from the enterprise system to the cloud based system a data extractor configured to extract data from the cloud based system and forward the extracted data to the enterprise system for synchronization an exception handler configured to check on a variety of exceptions and errors received while synchronization is in process and a logging component configured to log events on a periodic basis.

The at least one authentication module may be configured to use a two legged authentication mechanism to perform create read update and delete operations in the cloud based system. Also the at least one authentication module may be configured to determine whether a consumer key and a secret for a domain are present for a requested operation based on a determination that a consumer key or a secret for the domain are absent for the requested operation decline the requested operation and provide an indication that no update operation will be performed based on a determination that a consumer key and a secret for the domain are present for the requested operation use a two legged authentication process to authorize the consumer key and the secret for the domain and based on authorizing the consumer key and the secret for the domain make a subsequent request to perform the requested operation.

In some implementations the at least one communication module may include a first web service operated on the enterprise system and a second web service operated on the cloud based system and the at least one authentication module may include a first encryption mechanism operated on the enterprise system and a second encryption mechanism operated on the cloud based system. In these implementations the at least one data controller may include a cloud data controller operated on the cloud based system and the first web service may be configured to access data stored by the enterprise system initiate the first encryption mechanism and provide a request response object to the first encryption mechanism. Further in these implementations the first encryption mechanism may be configured to encrypt a system provided key add the system provided key to the request response object and provide an updated version of the request response object to the first web service. Also in these implementations the first web service may be configured to send the updated version of the request response object to the second web service and the second web service may be configured to receive the updated version of the request response object and provide the updated version of the request response object to the second encryption mechanism. In addition in these implementations the second encryption mechanism may be configured to segregate the encrypted key from the updated version of the request response object validate the segregated key against a reference key provided to the cloud based system in advance and forward the validated request response object to the second web service for further processing the second web service may be configured to forward the validated request response object to the cloud data controller and the cloud data controller may be configured to perform a data synchronization operation based on the validated request response object.

In another aspect at least one computer readable storage medium is encoded with executable instructions that when executed by at least one processor cause the at least one processor to perform operations. The operations include exchanging data between an enterprise system operated by a company and a cloud based system operated by a third party other than the company and controlling storage and retrieval of data at the enterprise system and the cloud based system. The operations also include performing transport level security for communications that exchange data between the enterprise system and the cloud based system and access level security for data stored to the enterprise system and the cloud based system. The operations further include scheduling synchronization of data between the enterprise system and the cloud based system in a manner that allows the enterprise system to retain control over the synchronization of data between the enterprise system and the cloud based system.

In yet another aspect a method includes using at least one communication module to exchange data between an enterprise system operated by a company and a cloud based system operated by a third party other than the company and using at least one data controller to extract data from the at least one communication module and control storage and retrieval of data at the enterprise system and the cloud based system. The method also includes using at least one authentication module to perform transport level security for communications that exchange data between the enterprise system and the cloud based system and access level security for data stored to the enterprise system and the cloud based system. The method further includes using a job scheduler that is operated by the enterprise system to schedule synchronization of data between the enterprise system and the cloud based system and allow the enterprise system to retain control over the synchronization of data between the enterprise system and the cloud based system.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other potential features of the disclosure will be apparent from the description and drawings and from the claims.

In one aspect a data exchange adaptor synchronizes data between an enterprise system operated by a company and a cloud based system operated by a third party other than the company. The data exchange adaptor may include at least one communication module configured to exchange data between the enterprise system operated by the company and the cloud based system operated by the third party and at least one data controller configured to extract data from the at least one communication module and control storage and retrieval of data at the enterprise system and the cloud based system. The data exchange adaptor also may include at least one authentication module configured to perform transport level security for communications that exchange data between the enterprise system and the cloud based system and access level security for data stored to the enterprise system and the cloud based system. The data exchange adaptor further may include a job scheduler that is operated by the enterprise system and that is configured to control the at least one communication module the at least one data controller and the at least one authentication module to schedule synchronization of data between the enterprise system and the cloud based system and allow the enterprise system to retain control over the synchronization of data between the enterprise system and the cloud based system.

In some implementations an adaptor tool exchanges data between two completely different systems a customer relationship management system e.g. SAP CRM and a cloud based system e.g. Google Apps . The adaptor provides a mechanism for users to synchronize their data from the CRM system to the cloud based system. The communication mechanism provided by the adaptor between these systems is bi directional. It includes Java Enterprise and ABAP based components including Web Services. The interaction between the systems happens via Producer and Consumer Web Services hosted in both systems. The following are the different modules of the adaptor Web Service Module Data Controller Module Authentication Module Security Module and Job Scheduler

The adaptor tool components may be orchestrated in such a fashion that makes it a custom fit solution for most of the data exchange requirements in any CRM e.g. SAP CRM implementation to a cloud based system e.g. Google Apps . In some examples the adaptor framework as mentioned above includes five modules which work seamlessly with each other and provide the following three principal functionalities Contact Synchronization Appointment Synchronization and Tasks Synchronization.

The cloud system includes cloud applications and a cloud application engine . The cloud applications are applications offered by the cloud service provider that operates the cloud system . The cloud applications may include a calendar application a contact application and or any other type of application offered by a cloud service provider.

The cloud application engine includes an authentication module a cloud web service portion of a web service module and a data protocol application programming interface API . The authentication module authenticates requests to retrieve from and or store data to the cloud applications and enables data operations with the cloud applications when the authentication module deems a request to be authentic. The authentication module blocks data operations with the cloud applications when the authentication module deems a request to be unauthentic.

The cloud web service exchanges communications with the CRM system . The cloud web service also communicates with the authentication module through the data protocol API . For instance the data protocol API converts communications from the cloud web service to a format that the authentication module understands and also converts communications from the authentication module to a format that the cloud web service understands.

The CRM system is operated by a company that is different than the cloud service provider that operates the cloud system . The CRM system includes a CRM web service portion of a web service module a programming layer user information stored by the CRM system and a job scheduler . The CRM web service exchanges communications with the cloud system e.g. the cloud web service . The CRM web service also stores and retrieves data from the user information and follows scheduling operations controlled by the job scheduler . The programming layer provides a framework that the CRM web service uses to interact with the user information and the job scheduler .

The user information may include appointment activities maintained by the CRM system personal and contact details maintained by the CRM system and or any other type of data or service maintained by the CRM system . The job scheduler controls scheduling of synchronization between the cloud system and the CRM system . For example the job scheduler may periodically initiate a synchronization process after a particular period of time has passed since the last synchronization e.g. initiate synchronization every ten minutes initiate a synchronization process based on user input received to perform synchronization and or initiate a synchronization process based on a change to data maintained by the CRM system .

Using the system the calendar data maintained by the cloud service provider through the calendar application may be synchronized with the appointment activities maintained by the different company operating the CRM system . Also using the system the contact data maintained by the cloud service provider through the contact application may be synchronized with the personal and contact details maintained by the different company operating the CRM system . By enabling synchronization of data maintained by the cloud system with data maintained by the CRM system the system may enable employees of the company operating the CRM system flexibility in whether the employees prefer to use the cloud system or the CRM system for performing operations e.g. calendar operations contact management task management etc. . Because the data is synchronized between the cloud system and the CRM system the company operating the CRM system may be more comfortable that employees are using the cloud system as all of the data collected by the cloud system is ultimately stored at the CRM system as well.

The Web service module made up of the cloud web service and the CRM web service is responsible for exchanging data between the CRM system and the cloud system . The Web service module may be the backbone of the framework provided by the system and may play an important role in swapping over data between the different systems.

In some implementations the CRM system and the cloud system are coupled to consumer and producer web services respectively with each deployed on different platforms. Both web services may intelligently communicate with each other based on actions performed such as manual triggers e.g. user initiated on click event or automated triggers produced by a pre scheduled trigger mechanism. For instance the cloud web service may be a producer web service and the CRM web service may be a consumer web service.

The producer web service may be consumed through a client proxy generated in a workbench e.g. an ABAP workbench using a document e.g. WSDL document provided by web service. The producer web service sends the response back to the system in order to complete the synchronization request.

The consumer web service is hosted at the CRM system with the objective to provide better control of the adaptor on the client s side. The consumer web service triggers the producer web service and passes over the data to it in case of manual operations e.g. a user initiated on click event . The consumer web service also connects to the producer web service whenever a job executes at a pre scheduled time. In this case the consumer web service plays the role of receiving the updated data from the cloud system and syncing it to the client system e.g. the CRM system .

As shown in a service requester exchanges messages with a service provider . The service requester may be a consumer web service hosted at a CRM system. The service provider may be a producer web service deployed on a cloud application engine by a cloud service provider. The service requester sends a request extensible markup language XML message to the service provider using the simple object access protocol SOAP . The service provider receives the request XML message performs the data operations requested by the request XML message and sends a response XML message to the service requester using SOAP. The service requester receives the response XML message and uses the response XML message to confirm that all synchronization operations have been completed or determine the data operations needed at the service requester to complete synchronization.

In some implementations data controllers are responsible for extracting data from the web services. In these implementations the data controllers also are responsible for providing the data back to the web services. The system may use two data controller components a first data controller that interacts with the client system e.g. the CRM system and a second data controller that interacts with the cloud system.

The first data controller may be an ABAP Data Controller for interaction with an SAP CRM system. The data synchronization between the CRM system and the cloud system may occur in two phases. The first phase is data transfer from the CRM system to the cloud system triggered by manual user input. In the first phase data is retrieved from the CRM system and passed to the client proxy class bound with the web service. The data sent is processed by the web service for sending it across to the producer web service.

The second phase is the transfer of data from the cloud system to the CRM system triggered through a set of scheduled jobs. A periodic job scheduler runs the client proxies which in turn request data from the web service. The producer web service transmits recently updated modified data as a SOAP response. The data received is parsed processed and updated in the CRM system. The following sections depict these phases in more detail.

The data injector updates the data received from the cloud system to the CRM system. The data extractor extracts the data from the client system and forwards the extracted data to the cloud system for synchronization. The job scheduler schedules synchronization processes to periodically occur in accordance with a user defined time period.

The exception handler is an exception handling mechanism that keeps a check on a variety of exceptions and errors received while the synchronization is in process. The exceptions and errors may include web service faults user entered faults data transfer exceptions and system specific exceptions.

The logging component logs events on a periodic e.g. daily basis. Logging occurs when any exception is captured during the synchronization process. The detailed logs may provide enough information to capture any difference in the process.

The CRM database is the client database where all the information is stored. The data stored in the CRM database is the information used to synchronize with the cloud system.

When the request is to synchronize data from the CRM system to the cloud system the data controller extracts the data passed from the CRM system through the producer web service and synchronizes the extracted data to the cloud system. For the request to synchronize data to the CRM system the data controller fetches the data from the cloud system and passes it to the producer web service. The data is added as a response that the producer web service passes on to the consumer web service.

The data controller includes a service manager a data injector a data extractor an exception handler and a logging component . The service manager is a service object which provides controller service to access the various services in the cloud system e.g. calendar contact details .

The data injector updates the data received from the client system to the cloud system. The data extractor extracts the data from the cloud system and forwards the extracted data to the client system for synchronization.

The exception handler is an exception handling mechanism that keeps a check on a variety of exceptions and errors received while the synchronization is in process. The exceptions and errors may include web service faults user entered faults data transfer exceptions and cloud system specific exceptions.

The logging component logs events on a periodic e.g. daily basis. Logging occurs when any exception is captured during the synchronization process. The detailed logs may provide enough information to capture any difference in the process. The logging may be maintained at the client system even for updates that occur on the third party cloud based system.

The adaptor keeps a check on any unauthenticated data access update requests. The data synchronization will fail to perform if authentication fails at any level.

For example the adaptor determines whether a consumer key and a secret for the domain are present for a requested operation . Based on a determination that a consumer key and or a secret for the domain are absent for a requested operation the adaptor declines the request and provides an indication that no update operation will be performed .

Based on a determination that a consumer key and a secret for the domain are present for a requested operation the adaptor uses a two legged authentication process to authorize the consumer key and the secret for the domain . Based on authorizing the consumer key and the secret for the domain the adaptor makes a subsequent request e.g. API request to perform the CRUD operation requested .

In some examples a security component performs security for the web services. In these examples the security component is responsible to ensure security in the web services. The security component may handle security at two levels transport level security and access level security.

In performing transport level security the security component may be responsible for configuring the logic to secure the connection between the web services with Secure Sockets Layer SSL . The logic may be configured in such a way that whenever the web service is initiated from the CRM system using http it will be redirected to a secure connection https . This mechanism helps ensure secure connection by allowing two web services to authenticate each other s identity. The data is then exchanged in an encrypted format between them.

In performing access level security the security component may be implemented at both ends the CRM system and the cloud system. The security component encrypts the key which is passed along with the data sent over the web service. The component on the receiving end validates the encrypted key to ensure authorized access.

In some examples a job scheduler is used to schedule synchronization processes. In these examples the main purpose of the job scheduler is to trigger reverse synchronization from the cloud system to the CRM system.

The job scheduler offers control of the adaptor on the client system. The jobs scheduled at predefined times trigger the consumer web service which in turn requests the producer web service to get the data from the cloud system. In this regard the client system retains control over the synchronization processes.

With increasing usage of cloud computing across different industries like telecommunications information technology manufacturing automobile retail etc. the adaptor framework described throughout this disclosure may offer a valuable service. These industries may use CRM e.g. SAP CRM implementations and in one way or another may target to utilize the cloud technology to reap its benefits. As described above one such feature of its utilization may be co existence of a CRM system e.g. an SAP CRM system along with a cloud system e.g. Google Apps .

A customer may receive several benefits from using one or more of the example data exchange connectors described throughout this disclosures. For instance the data exchange adaptor may be employed as an easy plug n play tool. With minimum deployment hassles and configuration settings the adaptor may be ready to provide synchronization for clients.

The data exchange adaptor also may provide secured data transfer. With message level and transport level security in place the data synchronization may be highly secured.

The data exchange adaptor further may be deployed with reduced infrastructure cost. Minimal or no additional infrastructure cost may be incurred as the tool may only utilize existing systems. This in turn also may result in reduced time to market

In addition the data exchange adaptor may be deployed with near zero maintenance cost. For example one part of the adaptor may use the existing system which may result in zero maintenance increase. And with cloud computing as the foundation framework for the adaptor tool the maintenance required may reduce considerably.

With cloud computing as its base structure the data exchange adaptor may experience any one or more of all the cloud computing benefits. For instance the data exchange adaptor may experience no licensing issues less maintenance hassle free software updates and or high scalability based on load.

Results of the search are displayed in a result list portion of the interface . To synchronize one or more contacts from the CRM system to the cloud system a user selects the one or more contacts from the search result list and clicks the synchronize button. Based on selection of the synchronize button selected contact details are updated to the cloud system and the synchronization status is displayed.

The system includes a processor a memory a storage device and an input output device . Each of the components and are interconnected using a system bus . The processor is capable of processing instructions for execution within the system . In one implementation the processor is a single threaded processor. In another implementation the processor is a multi threaded processor. The processor is capable of processing instructions stored in the memory or on the storage device to display graphical information for a user interface on the input output device .

The memory stores information within the system . In one implementation the memory is a computer readable medium. In one implementation the memory is a volatile memory unit. In another implementation the memory is a non volatile memory unit.

The storage device is capable of providing mass storage for the system . In one implementation the storage device is a computer readable medium.

In various different implementations the storage device may be a floppy disk device a hard disk device an optical disk device or a tape device.

The input output device provides input output operations for the system . In one implementation the input output device includes a keyboard and or pointing device. In another implementation the input output device includes a display unit for displaying graphical user interfaces.

The features described can be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. The apparatus can be implemented in a computer program product tangibly embodied in an information carrier e.g. in a machine readable storage device for execution by a programmable processor and method steps can be performed by a programmable processor executing a program of instructions to perform functions of the described implementations by operating on input data and generating output. The described features can be implemented advantageously in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from and to transmit data and instructions to a data storage system at least one input device and at least one output device. A computer program is a set of instructions that can be used directly or indirectly in a computer to perform a certain activity or bring about a certain result. A computer program can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment.

Suitable processors for the execution of a program of instructions include by way of example both general and special purpose microprocessors and the sole processor or one of multiple processors of any kind of computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The elements of a computer are a processor for executing instructions and one or more memories for storing instructions and data. Generally a computer will also include or be operatively coupled to communicate with one or more mass storage devices for storing data files such devices include magnetic disks such as internal hard disks and removable disks magneto optical disks and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in ASICs application specific integrated circuits .

To provide for interaction with a user the features can be implemented on a computer having a display device such as a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device such as a mouse or a trackball by which the user can provide input to the computer.

The features can be implemented in a computer system that includes a back end component such as a data server or that includes a middleware component such as an application server or an Internet server or that includes a front end component such as a client computer having a graphical user interface or an Internet browser or any combination of them. The components of the system can be connected by any form or medium of digital data communication such as a communication network. Examples of communication networks include e.g. a LAN a WAN and the computers and networks forming the Internet.

The computer system can include clients and servers. A client and server are generally remote from each other and typically interact through a network such as the described one. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A number of implementations have been described. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure. Accordingly other implementations are within the scope of the following claims.

