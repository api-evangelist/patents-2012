---

title: Extending browser functionality with dynamic on-the-fly downloading of untrusted browser components
abstract: Subject innovations enable a client device to dynamically download Digital Rights Management components, and/or other plug-ins, to extend a browser functionality, where the downloading places the downloaded component(s) within a super sandbox that, inter alia, disables selected operating system calls by the downloaded component, performs one or more heuristic analysis on code execution of the component to detect possible malicious code, and restricts output through the super sandbox to those responses that are in response to a request to the component, rather than output that the component might have initiated ‘on its own.’ In some embodiments, a webpage is configured to include instructions to automatically download and install the component, thereby minimizing user actions to directly request and/or install the component.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09223988&OS=09223988&RS=09223988
owner: Google Inc.
number: 09223988
owner_city: Mountain View
owner_country: US
publication_date: 20121130
---
This application is a utility patent application based on previously filed U.S. Provisional Patent Application Ser. No. 61 569 755 filed on Dec. 12 2011 the benefit of which is hereby claimed under 35 U.S.C. 119 e and which is incorporated herein by reference.

The present embodiments relate generally to playing protected content and more particularly but not exclusively to extending a browser functionality by providing for dynamic downloads of at least untrusted Digital Rights Management DRM modules onto a client device using a super sandbox. Downloads of other modules to extend browser functionality are also considered.

Today there is a desire by many individuals organizations and businesses to protect their rights to media content that they produce from improper copying and or distribution. At least some of these desires arise in part because these individuals organizations and or businesses are at least in part dependent upon revenue generated from their media content. Such media content may include virtually any format or form including songs videos images documents games books articles and or other audio content to name just a few examples of media content that some parties may wish to protect.

One class of solutions that has been implemented to attempt to address this desire is known as Digital Rights Management DRM . Briefly DRMs provide access control technologies used by publishers copyright holders and others to control their media content after it is given to a consumer from improper access copying and or distribution.

However there are a large number of these DRM solutions available and in use by various media content distributors media player manufacturers and so forth. Moreover a user of their client device often wishes to download and install components including various DRM solutions that enable the user to access the media content. While users do not wish to be restricted from accessing and playing media content many users also seek to be protected from untrusted or possibly otherwise malicious programs including possible untrusted DRMs that they inadvertently download and install onto their client devices. Thus users seek a client device that allows great flexibility while protecting them from unsafe actions.

Different approaches to addressing these seemingly conflicting requirements include providing minimum security protection that allows the user to download and execute almost any component in a let the buyer beware approach. Other approaches provide maximum security protection such that users might be unable to download or install almost anything without significant interactions and hoop jumping by the user. These extreme positions may either leave the user at significant risk and therefore frustrated or simply unsatisfied and therefore also frustrated. In either instance users often perceive their environment to be only as useful as the internet websites that it can render. Thus it is with respect to these considerations and others that the present invention has been made.

The present embodiments now will be described more fully hereinafter with reference to the accompanying drawings which form a part hereof and which show by way of illustration specific aspects in which the embodiments may be practiced. These embodiments may however take many different forms and should not be construed as limited to the embodiments set forth herein rather these embodiments are provided so that this disclosure will be thorough and complete and will fully convey the scope to those skilled in the art. Among other things the present embodiments may include methods or devices. Accordingly the present embodiments may take the form of entirely hardware or a combination of software and hardware aspects. The following detailed description is therefore not to be taken in a limiting sense.

Throughout the specification and claims the following terms take the meanings explicitly associated herein unless the context clearly dictates otherwise. The phrase in one embodiment as used herein does not necessarily refer to the same embodiment though it may. Furthermore the phrase in another embodiment as used herein does not necessarily refer to a different embodiment although it may. Thus as described below various embodiments of the invention may be readily combined without departing from the scope or spirit of the invention.

In addition as used herein the term or is an inclusive or operator and is equivalent to the term and or unless the context clearly dictates otherwise. The term based on is not exclusive and allows for being based on additional factors not described unless the context clearly dictates otherwise. In addition throughout the specification the meaning of a an and the include plural references. The meaning of in includes in and on. 

As used here the term Inter process communication IPC refers to a set of computing methods for the exchange of data among applications in one or more processes. IPC methods may include but are not limited to message passing synchronization shared memory pipes and remote procedure calls RPC . In one embodiment the IPC mechanisms used herein may be configured to operate securely in manner such that data commands messages or the like may flow in first direction using the IPC but not the other second or reverse direction unless it is determined to be in response to data commands messages or the like from the first direction.

As used herein the terms content or media content to includes any digital data that may be communicated over a network to be remotely played by a computing device. Non exhaustive examples of content include but are not limited to movies videos music spoken word pictures illustrations graphics images text and the like. Content is often described by its format or container in which the content is provided. Thus as used here the term container refers to a data stream or file format which encapsulates audio and visual content. This content often consists of interleaved audio and video data in frames or slices with accompanying metadata such as frame timing information audio and or video configuration information encoding information compression information and the like. Also the container is typically arranged to enable content to be presented for playback at a remotely located network device such as a client device. A container may also be named a systems stream . A non limiting and non exhaustive list of examples of container system streams formats are MPEG2 TS Moving Picture Experts Group MPEG transport stream TS flash video FLV MOV a QuickTime file format MP4 3GP and ASF Advanced Systems Form WebM Project file format Matroska multimedia container format or the like. A video encoding format such as H.264 VP8 or the like may be encapsulated in the container. The content may be distributed as a rights managed systems stream of data over a network such as Pay per View PPV Video On Demand VoD live streaming or the like for playback by a remote network device. In one embodiment the content may be protected through a license that describes how where when by whom or so forth content that is protected may be accessed distributed copied or the like. Protected content may be protected using a variety of content protection mechanisms including through one or more Digital Rights Management DRM policies licenses and encryption decryption keys.

As used herein encryption refers to the process of transforming digital content referred to as plaintext using an algorithm called a cipher to make it unreadable to anyone except those possessing special knowledge usually referred to as a key. Decryption is the process of converting encrypted digital content back into its original form. As used herein unencrypted digital content refers to digital content received in plaintext or that is otherwise not encrypted and therefore does not need to be decrypted. It should be understood such plaintext digital content may be received in at least one embodiment in a compressed form or encoded form and still be considered as plaintext for the purposes described herein. Moreover as discussed further below digital content may include portions that are encrypted and other portions that are unencrypted within a same stream of digital content. Further different encrypted portions of the stream of digital content may be encrypted using different encryption keys and or employ different licenses. In one embodiment keys useable for decrypting the differently encrypted digital content may be rotated reused or renegotiated.

As used herein the term automatically refers to actions performed by a computing device based on one or more decisions performed by the computing device without an input from a user to directly initiate or otherwise direct the action.

The following briefly provides a simplified summary of the subject innovations in order to provide a basic understanding of some aspects. This brief description is not intended as an extensive overview. It is not intended to identify key or critical elements or to delineate or otherwise narrow the scope. Its purpose is merely to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.

Briefly stated subject innovations are directed towards enabling a client device to dynamically download DRM components and or other browser components on the fly to extend the browser functionality where the downloading is configured to place the downloaded component s within a super sandbox that among other things disables selected operating system calls by the downloaded component and further performs one or more heuristic analysis on code execution of the component to detect possible malicious code. In at least one embodiment the super sandbox further restricts the component by limiting output through the super sandbox to those responses to requests sent to the component rather that output that the component might have initiated on its own. In some embodiments a webpage is configured to include instructions to automatically and on the fly download and install the component thereby minimizing user actions to directly request and or install the component.

As used herein the terms component and downloaded component refer to any type of software that may be downloaded or otherwise installed within the client device including but not limited to how the software may be packaged. Thus plug ins executables applications as well as scripts are considered as components.

It is noted that the component that may be downloaded and sandboxed within the super sandbox may include any of a variety of components beyond merely DRM components. For example the components might be configured to render decrypted content to an output device such as a screen or sound system. In one embodiment the component could be a media player. In still other embodiments the component is configured to include different Compression decompression modules CODECs components configured to merely support decryption of content components configured to de multiplex demux and or decode content or the like. The components may also extend the functionality of the browser by providing graphical capability fonts or by adding virtually any other functionality that might be useable within or by a browser. Thus the type and or functionality of the components considered within the subject innovations are not limited. Moreover the components could be implemented using any of a variety of scripting languages programming languages or the like. In addition the component might be otherwise trusted and still be placed within the super sandbox for consistency. Thus the subject innovations disclosed herein are not limited to particular components implementation or the like.

One embodiment of client devices is described in more detail below in conjunction with . In one embodiment at least some of client devices may operate over a wired and or a wireless network such networks and . As shown client device may include virtually any computing device capable of communicating over a network to send and receive information including instant messages performing various online activities or the like. The set of such devices may include devices that typically connect using a wired or wireless communications medium such as personal computers multiprocessor systems microprocessor based or programmable consumer electronics network PCs or the like. Also client device may include virtually any device usable as a video display device such as a television display monitor display screen projected screen and the like. Additionally client device may include any kind of Consumer Electronic device e.g. a Blu ray player DVD player CD player portable music playing device portable display projector and the like. Moreover client devices may provide access to various computing applications including a browser or other web based application.

Generally however client devices may include virtually any portable computing device capable of receiving and sending messages over a network accessing and or playing content such as network wireless network or the like. Further client devices may include virtually any portable computing device capable of connecting to another computing device and receiving information such as laptop computer smart phone and tablet computers and the like. However portable computer devices are not so limited and may also include other portable devices such as cellular telephones display pagers radio frequency RF devices infrared IR devices Personal Digital Assistants PDAs handheld computers wearable computers integrated devices combining one or more of the preceding devices and the like. As such devices typically range widely in terms of capabilities and features.

A web enabled client device may include a browser application that is configured to receive and to send web pages web based messages and the like. The browser application may be configured to receive and display graphics text multimedia media content and the like employing virtually any Internet based and or network based protocol including but not limited to a wireless application protocol messages WAP Hypertext Transfer Protocol HTTP or the like. In one embodiment the browser application is enabled to employ Handheld Device Markup Language HDML Wireless Markup Language WML WMLScript JavaScript or other scripting language Standard Generalized Markup Language SGML HyperText Markup Language HTML eXtensible Markup Language XML and the like to display and send a message. In one embodiment a user of a client device may employ the browser application to perform various activities over a network online . However another application may also be used to perform various online activities.

As described further below the browser application may enable a user to access a website over the network e.g. networks and or such as might be provided through CPD . In some embodiments CPD may include within a webpaae accessed by client device one or more scripts links and or other instructions that direct the client device to on the fly download for installation one or more components usable to access content from CPD or the like. In one embodiment the instructions might further direct the client device to access the component such as a DRM module or the like from DRMPD . However in other embodiments the downloaded component may be accessed through CPD another client device or any of a variety of other sources.

Client devices also may include at least one other client application that is configured to receive and or send content between another computing device. The client application may include a capability to send and or receive content or the like. The client application may further provide information that identifies itself including a type capability name and the like. In one embodiment client devices may identify themselves as part of a class of devices. In another embodiment client devices may uniquely identify themselves through any of a variety of mechanisms including a phone number Mobile Identification Number MIN an electronic serial number ESN Internet Protocol IP Address network address or other mobile device identifier. The information may also indicate a content format that the mobile device is enabled to employ. Such information may be provided in a network packet or the like sent between other client devices CPD or other computing devices. Moreover it should be readily understood that devices and or components within a device that is communicating with a client device may also identify themselves using any of a variety of mechanisms including those used by the client device.

Client devices may further be configured to include a client application that enables an end user to log into an end user account that may be managed by another computing device such as CPD or the like. Such end user account in one non limiting example may be configured to enable the end user to manage one or more online activities including in one non limiting example search activities social networking activities browse various websites communicate with other users or the like. In one embodiment the end user s client device may receive content streamed to the client device for play at the client device. However participation in online activities may also be performed without logging into the end user account.

Wireless network is configured to couple client devices and its components with network . Wireless network may include any of a variety of wireless sub networks that may further overlay stand alone ad hoc networks and the like to provide an infrastructure oriented connection for client devices . Such sub networks may include mesh networks Wireless LAN WLAN networks cellular networks and the like. In one embodiment the system may include more than one wireless network.

Wireless network may further include an autonomous system of terminals gateways routers and the like connected by wireless radio links and the like. These connectors may be configured to move freely and randomly and organize themselves arbitrarily such that the topology of wireless network may change rapidly.

Wireless network may further employ a plurality of access technologies including 2nd 2G 3rd 3G 4th 4G generation radio access for cellular systems WLAN Wireless Router WR mesh and the like. Access technologies such as 2G 3G 4G and future access networks may enable wide area coverage for mobile devices such as client devices with various degrees of mobility. In one non limiting example wireless network may enable a radio connection through a radio network access such as Global System for Mobil communication GSM General Packet Radio Services GPRS Enhanced Data GSM Environment EDGE Wideband Code Division Multiple Access WCDMA and the like. In essence wireless network may include virtually any wireless communication mechanism by which information may travel between client devices and another computing device network and the like.

Network is configured to couple network devices with other computing devices including CPD and through wireless network to client devices . Network is enabled to employ any form of network mechanism for communicating information from one electronic device to another. Also network can include the Internet in addition to LANs WANs direct connections such as through a universal serial bus USB port other forms of network mechanism or any combination thereof. On an interconnected set of LANs including those based on differing architectures and protocols a router acts as a link between LANs enabling messages to be sent from one to another. In addition communication links within LANs typically include twisted wire pair or coaxial cable while communication links between networks may utilize analog telephone lines full or fractional dedicated digital lines including T1 T2 T3 and T4 and or other carrier mechanisms including for example E carriers Integrated Services Digital Networks ISDNs Digital Subscriber Lines DSLs wireless links including satellite links or other communications links known to those skilled in the art. Moreover communication links may further employ any of a variety of digital signaling technologies including without limit for example DS 0 DS 1 DS 2 DS 3 DS 4 OC 3 OC 12 OC 48 or the like. Furthermore remote computers and other related electronic devices could be remotely connected to either LANs or WANs via a modem and temporary telephone link. In one embodiment network may be configured to transport information of an Internet Protocol IP . In essence network includes any communication method by which information may travel between computing devices.

Additionally network mechanisms by way of example network mechanisms include wired media such as twisted pair coaxial cable fiber optics wave guides and other wired media and wireless media such as acoustic RF infrared and other wireless media.

One embodiment of CPD is described in more detail below in conjunction with . Briefly however CPD includes virtually any network device usable to operate as a content server to connect to network to provide content to client devices . In some embodiments CPD may provide protected content to a client device. In one embodiment at least some portions of the content may be encrypted while at least some other portions of the content may be unencrypted.

CPD may also provide to a client device a downloadable component usable to enable the cheat device to access and or play content. In some embodiments CPD may include within a webpage accessed by the client device a set of HyperText Markup Language instructions a script an applet an application or the like configured to instruct the client device to on the fly automatically without additional user interactions download the component onto the client device. In some embodiments the component might be obtained from CPD however the component might also be obtained from another network device such as DRMPD another client device or yet another network device not shown .

In some embodiments the downloaded component is a DRM module usable to manage digital rights within the client device. In some embodiments the downloaded component might be a CODEC a decryption module a key management module or any of a variety of components useable to enable the client device to access and or play content. However subject innovations described herein may also be employed to enable downloading of components for uses other than with content management. Thus the subject innovations are not to be construed as being limited to content management components.

It should be readily recognized that CPD is configured to operate on behalf of a content owner distributor or similar business entity. However while used herein to represent such network devices useable to provide content it is further recognized that other devices may also be employed. For example a content provider may employ a Content Distribution Network Device not shown that operates on behalf of the content provider to provide content. Thus other configurations and variations of devices serving content are also envisaged and other embodiments are not constrained to a single configuration arrangement of devices.

Devices that may operate as CPD include various network devices including but not limited to personal computers desktop computers multiprocessor systems microprocessor based or programmable consumer electronics network PCs server devices network appliances and the like.

Although illustrates CPD as a single computing device the invention is not so limited. For example one or more functions of CPD may be distributed across one or more distinct network devices. Moreover CPD is not limited to a particular configuration. Thus in one embodiment CPD may contain a plurality of network devices to provide content licenses and or decryption keys to a client device such as client devices . Similarly in another embodiment CPD may contain a plurality of network devices that operate using a master slave approach where one of the plurality of network devices of CPD operates to manage and or otherwise coordinate operations of the other network devices. In other embodiments the CPD may operate as a plurality of network devices within a cluster architecture a peer to peer architecture and or even within a cloud architecture. Thus the invention is not to be construed as being limited to a single environment and other configurations and architectures are also envisaged.

In one embodiment CPD may also be configured to manage license requests and or access to decryption keys useable to decrypt portions of the encrypted digital content by a client device for play based on the license.

It should be noted that the encrypted content may be encrypted using any of a variety of symmetric and or asymmetric key technologies. For example possible asymmetric keys technologies include but are not limited to Diffie Hellman RSA Merkle Hellman PGP X.509 elliptic curve techniques EIGamal or the like. Similarly various possible symmetric key technologies include but are not limited to Twofish Serpent Advanced Encryption Standard AES Blowfish CAST5 RC4 3DES and IDEA to name just a few. Moreover the content may be protected using a combination of symmetric and asymmetric key technologies. For example a symmetric content decryption key might be used to encrypt decrypt the content and an asymmetric key technology might be used to encrypt decrypt the content decryption key.

DRMPD represents one of a variety of network devices for managing access to symmetric and or asymmetric keys. In one embodiment DRMPD may operate to certify an ownership of a public key named within a digital certificate that provides a public key where the public key is part of a public private key associated with any of a variety of asymmetric key technologies. This allows others such as CPD or the like to rely upon signatures or assertions made by the owner that corresponds to the public key that is certified. In one embodiment DRMPD may then operate as a trusted third party. Thus in one embodiment DRMPD may operate as a Certification Authority such as employed by many public key infrastructures PKI schemes. Further DRMPD may also provide Certificate Revocation Lists CRLs indicating when a public key certificate is no longer valid and might no longer be trusted trustable.

In one embodiment DRMPD may receive a public key from a content provider or the like and based on various criteria elect to make accessible the public key through a certificate that DRMPD digitally signs. In one embodiment access to the public key may enable an authorized client device to decrypt a content key that may then be used to decrypt at least a portion of the encrypted content.

In one embodiment DRMPD or CPD might operate to negotiate a license and or access to a key with client devices . In one embodiment different content decryption keys might be used to encrypt different portions of a provided content. Thus in one embodiment multiple key negotiations may be performed for a given at least one content stream.

However DRMPD may also be configured to provide for download and or installation into a client device various DRM modules usable to perform digital rights management on behalf of the client device. Thus in some embodiments DRMPD might provide a content decryption module a key decryption module a CODEC usable for decompressing decoding protected content and or any of a variety of other modules usable in enabling a client device to access and or play protected content.

It should be understood that while DRMPD is illustrated as a separate device from CPD in other embodiments the functions of these devices may be integrated.

Although illustrates DRMPD as single computing devices the invention is not so limited. For example one or more functions of DRMPD may be distributed across one or more distinct network devices. Moreover DRMPD is not limited to a particular configuration. Thus in one embodiment DRMPD may contain a plurality of network devices. Similarly in another embodiment DRMPD may contain a plurality of network devices that operate using a master slave approach where one of the plurality of network devices operates to manage and or otherwise coordinate operations of the other network devices. In other embodiments the DRMPD may operate as a plurality of network devices within a cluster architecture a peer to peer architecture and or even within a cloud architecture. Thus the invention is not to be construed as being limited to a single environment and other configurations and architectures are also envisaged.

As shown in the figure client device includes a central processing unit CPU in communication with a mass memory via a bus . Client device also includes a power supply one or more network interfaces an audio interface a display a keypad an illuminator a video interface an input output interface a haptic interface and a global positioning systems GPS receiver .

Power supply provides power to client device . A rechargeable or non rechargeable battery may be used to provide power . The power may also be provided by an external power source such as an alternating current AC adapter or a powered docking cradle that supplements and or recharges a battery.

Client device may optionally communicate with a base station not shown or directly with another computing device. Network interface includes circuitry for coupling client device to one or more networks and is constructed for use with one or more communication protocols and technologies including but not limited to GSM code division multiple access CDMA time division multiple access TDMA user datagram protocol UDP transmission control protocol Internet protocol TCP IP Short Message Service SMS GPRS WAP ultra wide band UWB Institute of Electrical and Electronics Engineers IEEE 802.16 Worldwide interoperability for Microwave Access WiMax session initiated protocol real time transport protocol SIP RTP or any of a variety of other wired and or wireless communication protocols. Network interface is sometimes known as a transceiver transceiving device or network interface card NIC .

Audio interface is arranged to produce and receive audio signals such as the sound of a human voice. For example audio interface may be coupled to a speaker and microphone not shown to enable telecommunication with others and or generate an audio acknowledgement for some action.

Display may be an LCD gas plasma light emitting diode LED or any other type of display used with a computing device. Display may also include as touch sensitive screen arranged to receive input from an object such as a stylus or a digit from a human hand.

Moreover display may be configured to employ any of a variety of network connection types including but not limited to High Bandwidth Digital Content Protection HDCP connection types Display Port DP Digital Visual Interface DVI and High Definition Multimedia Interface HDMI as well as Gigabit Video Interface GVIF Standard definition SD Unified Display Interface UDI or Intel Wireless Display WiDi . At least some of these network connection types provide a form of digital copy protection. A detection of whether display is connected through one of these or other types of network connection types may be determined using a variety of techniques including signature transmissions protocol handshakes authentication procedures or the like.

Keypad may comprise any input device arranged to receive input from a user. For example keypad may include a push button numeric dial or a keyboard. Keypad may also include command buttons that are associated with selecting and sending images.

Illuminator may provide a status indication and or provide light. Illuminator may remain active for specific periods of time or in response to events. For example when illuminator is active it may backlight the buttons on keypad and stay on while the client device is powered. Also illuminator may backlight these buttons in various patterns when particular actions are performed such as dialing another client device. Illuminator may also cause light sources positioned within a transparent or translucent case of the client device to illuminate in response to actions.

Video interface is arranged to capture video images such as a still photo a video segment an infrared video or the like. For example video interface may be coupled to a digital video camera a web camera or the like. Video interface may comprise a lens an image sensor and other electronics. Image sensors may include a complementary metal oxide semiconductor CMOS integrated circuit charge coupled device CCD or any other integrated circuit for sensing light.

Client device also comprises input output interface for communicating with external devices such as a headset or other input or output devices not shown in . Input output interface can utilize one or more communication technologies such as USB infrared Bluetooth or the like. Haptic interface is arranged to provide tactile feedback to a user of the client device. For example the haptic interface may be employed to vibrate client device in a particular way when another user of a computing device is calling.

GPS transceiver can determine the physical coordinates of client device on the surface of the Earth. GPS transceiver in some embodiments may be optional. GPS transceiver typically outputs a location as latitude and longitude values. However GPS transceiver can also employ other geo positioning mechanisms including but not limited to triangulation assisted GPS AGPS Enhanced Observed Time Difference E OTD Cell Identifier CI Service Area Identifier SAI Enhanced Timing Advance ETA Base Station Subsystem BSS or the like to further determine the physical location of client device on the surface of the Earth. It is understood that under different conditions GPS transceiver can determine a physical location within millimeters for client device and in other cases the determined physical location may be less precise such as within a meter or significantly greater distances. In one embodiment however mobile device may through other components provide other information that may be employed to determine a physical location of the device including for example a Media Access Control MAC address IP address or the like.

Mass memory includes a Random Access Memory RAM a Read only Memory ROM and other storage means. Mass memory illustrates an example of computer readable storage media devices for storage of information such as computer readable instructions data structures program modules or other data. Mass memory stores a basic input output system BIOS for controlling low level operation of client device . The mass memory also stores an operating system for controlling the operation of client device . It will be appreciated that this component may include a general purpose operating system such as a version of UNIX or LINUX or a specialized client communication operating system such as Windows Mobile or the Symbian operating system. The operating system may include or interface with a Java virtual machine module that enables control of hardware components and or operating system operations via Java application programs. However the operating system may also provide interfaces to any of a variety of other scripting language programs as well and are therefore not constrained to Java.

Mass memory further includes one or more data storage which can be utilized by client device to store among other things applications protected content and or other data. For example data storage may also be employed to store information that describes various capabilities of client device . The information may then be provided to another device based on any of a variety of events including being sent as part of a header during a communication sent upon request or the like. Data storage may also be employed to store social networking information including address books buddy lists aliases user profile information or the like. Further data storage may also store messages web page content downloaded components or any of a variety of other content. At least a portion of the information may also be stored on another component of client device including but not limited to a disk drive non transitory processor readable storage device within client device or even on a physical storage device accessible by client device through network interfaces or the like.

In some embodiments data storage may act as a buffer for content received from CPD of . As noted above it is recognized that providing of such content may also be performed by another device on behalf of CPD of . Additionally data storage might further operate as a buffer for downloaded components at least until they are installed for execution within client device .

Applications may include computer executable instructions which when executed by client device transmit receive and or otherwise process messages e.g. SMS Multimedia Message Service MMS instant messages IM email and or other messages audio video and enable telecommunication with another user of another client device. Other examples of application programs include calendars search programs email clients IM applications SMS applications voice over Internet Protocol VOIP applications contact managers task managers transcoders database programs word processing programs security applications spreadsheet programs games search programs and so forth. Applications may include for example browser media player Digital Rights Management DRM module and one or more super sandboxes . Super sandbox may be configured to include one or more downloaded components such as DRM module and or plug in . It should be understood that super sandboxes may be part of another application.

Browser may include virtually any application configured to receive and display graphics text multimedia and the like employing virtually any web based protocol. In one embodiment the browser application is enabled to employ HDML WML WMLScript JavaScript other scripting languages SGML HTML XML and the like to display and send a message. However any of a variety of other web based programming languages may be employed. In one embodiment browser may enable a user of client device to provide and or receive content from another computing device such as CPD of . Although browser is described herein it should be noted that there are a plurality of other applications that may operate as a user agent configured to request and or access content over a network. Thus other user agents way also be included within client device . Moreover while a single browser is illustrated it should be noted that client device may include a plurality of browsers or applications providing functionality of a browser application.

Media player represents any of a variety of software and or hardware configurations arranged to receive and play various content. As such in one embodiment media player may also represent a hardware component that might be installed within client device and or coupled electrically to client device to enable client device to access and play content. In one embodiment media player may receive protected content from browser and employ one or more of CODECs and or DRM module to enable play of the received protected content. In some embodiments plug in may be further configured to operate with media player and or browser to extend the functionality of media player and or browser and or DRM module .

While a single media player is illustrated it should be understood that client device may include a plurality of media players each which may be configured to employ a different CODEC s and or a different DRM module s as well as to accept different container format s for the received protected content.

DRM module represents any of a class of access control technologies that are configured to manage the digital access rights to protected content. In one embodiment DRM module may include a content decryption module CDM that is configured to receive one or more decryption keys and or licenses and to employ the decryption keys licenses to decrypt at least a portion of the content and enable access to the content. In one embodiment DRM module might be configured to receive information indicating that content is protected with keys licenses. DRM module may then send a communications requesting the keys licenses. In one embodiment DRM module might be configured to provide a communications towards a Key Management Device such as DRMPD of to obtain the keys licenses. DRM module may then receive portions of the protected content from media player browser or another application. DRM module may then employ the keys licenses to decrypt the encrypted content and enable selected rights of use of the content. DRM module may provide the decrypted content to media player to output hardware and or to CODECS to decode decompress the decrypted content such that it may then be played by media player .

However as illustrated DRM module and plug in are configured to operate within super sandbox . Thus actions performed by either of these components are architecturally isolated by super sandbox . That is super sandbox provides a privileged separation between the modules isolated within it and other modules components or the like external to the super sandbox as well as separation of multiple modules within sandbox . In some embodiments super sandbox isolates communications with the components within it and other components by preventing the isolated components e.g. DRM module and plug in from reading and or writing to any but specified file systems memory locations address spaces or even physical devices other than those specifically identified by super sandbox . However super sandbox is configured to do more than merely limit where and what can be accessed by the isolated components. For example super sandbox may further constrain outputs through super sandbox to be communications that are in direct response to a request for a communications from a trusted component such as browser media player operating system or the like. Thus should an isolated component within super sandbox sua sponte seek to communicate with a component outside of super sandbox super sandbox immediately prevents such communications to be sent outside of the super sandbox. Further super sandbox may go behind such limitations on communications and pro actively perform any of a variety of analysis on the sandboxed components to ensure that any response communications are unable to modify or otherwise access locations that are not so protected. Thus even response communications allowed through super sandbox remain constrained from modifying or otherwise accessing certain locations addresses devices or the like. Super sandbox may also analyze the responses to ensure that the response is a reasonable response to a request. Thus for example where the response attempts to perform some action that is not determined to be acceptable super sandbox may also inhibit such responses from flowing outside of the super sandbox. It should be noted that in some embodiments super sandbox may include and or other perform more or less actions than disclosed herein.

Super sandbox may also perform various heuristics on the isolated components to determine whether the components may be a security risk. In some embodiments super sandbox may also perform fingerprinting analysis on the isolated components. When super sandbox determines that the isolated component is a security risk super sandbox may take any of a variety of actions including but not limited to deleting the isolated component from client device sending a warning message further isolating communications with and or from the component or the like. When the component is deleted it may also be un registered.

In some embodiments super sandbox may employ a protected inter process communications IPC to enable communications between the isolated components and one or more non isolated components. Further super sandbox might analyze the communications being sent to the component to determine whether the communications to the component within super sandbox might present a risk to client computer for example by the communications requesting the isolated component to perform an unacceptable un trustable action. When such input is received super sandbox might select to prevent these communications as well. Thus unlike configurations that might merely minimize where a sandboxed component might read from and or write to super sandbox performs a variety of additional actions. Thus as disclosed herein the sandboxed component s actions may be limited to responding to requests and or other actions from the browser by the super sandbox rather than for example requests from a webpage script or the like that may not be trusted.

Thus super sandbox is configured to allow execution of the isolated components in a manner that separates the component and its communications from other components within the client device such that the isolated components may perform actions without polluting or otherwise possibly corrupting the other components on the client device including such as memory locations devices operating systems or the like. Super sandboxing of the isolated components then allows the isolated components to perform without making persistent changes to components within the client device and without accessing information deemed confidential or otherwise to be protected from the isolated components. The isolated component may be allowed to run but cannot make changes to the client device and no matter what it does it does not have access to other components within the client device. In some embodiments even communications to other network devices by the isolated components may be restricted or otherwise denied. As noted the isolated components might not be able to send commands that are not authorized outside of the super sandbox. Communications with the isolated components might be directed to occur through strict interfaces such as secure inter process communication interfaces or the like.

In some embodiments the component may be a super sandboxed browser plug in and or otherwise implemented as a Pepper Pepper Plug in Application Programming Interface API or PPAPI plug in Native Client plug in or Portable Native Client plug in. However the components may also be other types of plug ins including scripts .exe files .dll files or the like. Thus the types of components that may be downloaded and or sandboxed are not constrained to a particular type or form or function. Moreover the components may be otherwise considered to be trusted or trustable or un trustable.

Network device includes central processing unit computer readable storage device network interface unit an input output interface hard disk drive video display adapter and a mass memory all in communication with each other via bus . The mass memory generally includes RAM ROM and one or more permanent non transitory mass storage devices such as hard disk drive tape drive optical drive and or floppy disk drive. The mass memory stores operating system for controlling the operation of network device . Any general purpose operating system may be employed. BIOS is also provided for controlling the low level operation of network device . As illustrated in network device also can communicate with the Internet or some other communications network via network interface unit which is constructed for use with various communication protocols including the TCP IP protocol. Network interface unit is sometimes known as a transceiver transceiving device or network interface card NIC .

Network device also comprises input output interface for communicating with external devices such as a keyboard or other input or output devices not shown in . Input output interface can utilize one or more communication technologies such as USB infrared Bluetooth or the like.

The mass memory as described above illustrates another type of computer readable media namely computer readable storage media and or processor readable storage media. Computer readable storage media devices may include volatile nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Examples of computer readable storage media include RAM ROM Electrically Erasable Programmable Read only Memory EEPROM flash memory or other memory technology Compact Disc Read only Memory CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other physical media which can be used to store the desired information and which can be accessed by a computing device.

As shown data storage may include a database text spreadsheet folder file or the like that may be configured to maintain and store user account identifiers user profiles email addresses IM addresses and or other network addresses or the like. Data storage may further include program code data algorithms and the like for use by a processor such as central processing unit to execute and perform actions. In one embodiment at least some of data storage might also be stored on another component of network device including but not limited to non transitory processor computer readable storage device hard disk drive or the like.

Data storage may further store protected content . Protected content represents any of a variety of content that may be protected from access using a license encryption and or the like. In some embodiments protected content may include a plurality of available versions of content. In one embodiment the available versions may include one or more video tracks and or one or more one or more audio tracks.

Data storage may also be configured to store downloadable components including but not limited to DRM modules CODECs decryption modules and any of a variety of other plug in components or the like usable to extend and or otherwise update functionality of a browser media player or the like.

The mass memory also stores program code and data. One or more applications are loaded into mass memory and run on operating system . Examples of application programs may include transcoders schedulers calendars database programs word processing programs Hypertext Transfer Protocol HTTP programs customizable user interface programs IPSec applications encryption programs security programs SMS message servers IM message servers email servers account managers and so forth. Web server key manager and content delivery server may also be included as application programs within applications .

Web server represent any of a variety of services that are configured to provide content including messages over a network to another computing device. Thus web server includes for example a web server an FTP server a database server a content server or the like. Web server may provide the content including messages over the network using any of a variety of formats including but not limited to WAP HDML WML SGML HTML XML Compact HTML cHTML Extensible HTML xHTML or the like. Web Server may also be configured to enable a user of a client device such as client devices of to browse content such as streams of protected content and select content for display play on the client device. Further web server may be configured to provide for installation and or execution at a client device a downloadable component such as discussed above in conjunction with .

Key manager is configured to manage negotiations of decryption keys and or licenses for content streams. In one embodiment key manager may provide decryption keys and or licenses to DRMPD of . In other embodiments key manager may perform negotiations directly with a client device. In one embodiment key manager may select one or more content decryption keys for use in encrypting different portions of a content stream.

Key manager may also be configured to revoke a license and or invalidate one or more decryption keys based for example on an unauthorized request for a license key or even based on receiving an indication that an integrity of a requesting client device is determined to be compromised.

Content Delivery Server CDS is configured to manage access to protected content . In one embodiment the content may be protected through a license or licenses. In another embodiment the content may be protected by being encrypted. In one embodiment one portion of content may be encrypted using a first content encryption key while another portion of the content may be encrypted using a second content encryption key. Thus to decrypt the protected content a user s client device may need access to a license that indicates how where and or when the protected content may be accessed. The user s client device may also need access to one or more decryption keys usable to decrypt various portions of the protected content. In one embodiment where multiple encryption keys are used to encrypt the content a key rotation scheme may be employed where the client device is provided an indication that the content is encrypted using a different key and that the client device will have to use the different key. However in another embodiment the content may be protected by a license s and not be encrypted using encryption key s .

It should be noted that while architecture may be configured to manage un trusted components the subject innovations are not so constrained. Thus in some embodiments the components that are managed within a super sandbox as described herein might be otherwise considered as trusted or trustable. In this manner a consistent policy might be implemented for any component downloaded within a client device for installation and or execution.

As shown in architecture is divided into two portions a first portion above line and considered to be external to the lower portion which is below line . Elements below line are considered to reside within a client device such as client device of or the like. Elements above line may be considered to reside outside of a client device such as client device .

As shown above line is webpage while below the line are browser browser registry IPC super sandboxes . Within browser is media player . In this configuration media player may operate as a component within browser including as a plug in to browser .

Within super sandbox is plug in while DRM module is illustrated within a separate super sandbox . Browser is the same as illustrated in while super sandboxes represent instances of super sandbox of . Moreover DRM module and plug in while the same as illustrated in are intended to represent non limiting non exhaustive examples of downloadable components that may be sandboxed within a super sandbox. Virtually any component may be super sandboxed including decryption components content protection components license exchange components demux components decoding components graphical components or virtually any other component usable to extend and or otherwise upgrade a functionality of browser and or a media player .

Webpage may represent a webpage accessible from a network device such as CPD of or the like. Web page may include a link script or the like useable to instruct a client device to automatically download and install for execution a component. That is when a client device is directed to a network device such as CPD of FIG the client device s browser such as browser of accesses and reads a webpage such as webpage . When the link script or the like is reached within the webpage browser may interpret the instructions and as result request download of the indicated component.

Additionally browser may register the component into a registry such as browser registry . In one embodiment updates to browser registry may indicate that the downloaded component is accessible through a super sandbox such as super sandboxes . Thus communications with plug in and or DRM module are performed through IPC and one or more of super sandboxes .

As discussed above super sandboxes may perform a variety of security actions to limit access by the isolated components such as plug in and or DRM module .

Thus for example when protected content is accessed by browser browser and or media player may examine the browser registry to locate the component such as the DRM module that extends the functionality. When located within browser registry browser and or media player may then employ DRM module and or plug in to request at least one of a decryption key or license to enable access of the protected content for play by media player . DRM module might be instructed to generate a key request that is sent through super sandbox through IPC and to browser or another un shown application . Browser or another application may then proxy the request to another network device to obtain the license and or decryption key. The key and or license may then be forwarded through IPC and super sandbox to DRM module . Additionally at least some encrypted content may also be provided through IPC and super sandbox to DRM module to be decrypted and returned for play. At any instance that super sandbox determines that communications through IPC and or into out of super sandbox are un trustable super sandbox may inhibit the communications inhibit additional actions by DRM module and or perform any of a variety of other actions. Additionally prior allowing DRM module to respond to outside of the sandbox requests super sandbox may perform one or more analytics upon the isolated DRM module to determine whether or not the component is trustable. Based on results of the analysis super sandbox may further restrict communications with the isolated component send out a warning message and or even delete the un trusted component.

It should be noted that super sandboxes may be generated in response to request to download a component or be pre generated on a client device. Thus in some embodiments a super sandbox may not contain a component and might reside idle until a request to download a component is initiated on the client device. Any of a variety of mechanisms may be used to trigger a super sandbox or the instantiation of a component within it including based on a command from browser an operating instruction another application not shown or even based on a script or the like within webpage .

As illustrated in some embodiments a distinct super sandbox might be used to isolate a given component such that each downloaded component and or interrelated components is separately sandboxed. illustrates such an example. However in other embodiments downloaded components might be combined and isolated by a single super sandbox. Thus in for example plug in and DRM module might be isolated within a same super sandbox such as both within super sandbox or .

The operation of certain aspects of various embodiments will now be described with respect to . illustrates a flow chart of one embodiment of a process usable to manage dynamic downloading and execution of possibly un trusted DRM modules on a client device. Process of may be implemented within a client device such as client device of for example.

Process begins after a start block at block where a request for a webpage may be made by the client device. In one embodiment the request is performed using a browser application within the client device. It should be noted that while a webpage is mentioned other forms usable for displaying from a network device may also be used. For example a File Transfer Protocol FTP request might be made by the client device or any of a variety of content request type of commands. Thus subject innovations are not constrained to merely webpages rather this is but one example of many possible mechanisms for requesting content over a network.

In any event processing flows to block where while receiving the requested webpage or other content an instruction is intercepted that requests that a component be downloaded by the client device. When such instruction is received processing flows to decision block where a determination is made as to whether the component is already registered. For example the browser might examine its registry to determine whether the component is currently registered and therefore determined to have already been downloaded. In some embodiments upgrades to a component may be interpreted as not being registered. Should it be determined that the component is not currently registered and therefore not downloaded processing proceeds to block . Otherwise it is determined that the component is already downloaded and processing flows instead to block .

At block the component is automatically downloaded into a super sandbox such as discussed above. That is the download may occur automatically absent additional user interactions and thereby be done on the fly. Further it should be noted that the component downloaded might include virtually any component that might extend or add to the functionality of the browser and or other application within the client device. Flowing next to block the super sandbox performs a plurality of security analysis on the isolated component including checking for viruses performing a plurality of heuristics and the like to determine whether the component initially appears to be trustable. For example different requests for responses may be sent by the super sandbox to the component. The responses may then be examined by the super sandbox and if it is determined that the responses do not appear trustable the processing from decision block might flow to block . Other analysis might also indicate that at decision block the component is not to be trusted in which instance processing flows to block . However if at block the analysis does not appear to indicate that the component is un trustable processing from decision block flows to block .

At block any of a variety of security actions may be performed by the super sandbox and or another application within the client device. Such actions may include sending a warning message to a user to a browser or other application deleting the un trusted component and un registering it increasing sandbox constraints imposed on the isolated component or the like. In some embodiments a level of non trustworthiness of the component might be determined to be low enough to allow at least some interactions with the component to occur. Thus while illustrates that after block the process may return in other embodiments processing from block might instead flow to block .

At block where the component is determined to be sufficiently secure it is then registered for use by the browser. The address of the component is configured in a manner that directs communications with the isolated component through specific IPC interfaces as well as to flow through the super sandbox.

Continuing to block communications from a component within the client device may be directed through the super sandbox using the IPC interfaces. For example where a media player requests that content be decrypted or a decryption key be obtained such requests might be sent to an isolated component such as a DRM module through the super sandbox.

While not explicitly illustrated communications sent towards the isolated component are received by the super sandbox and may also be analyzed by the super sandbox to determine whether the requests appear suspect. For example requests to instruct the isolated component to perform actions in protected address space might be considered suspect as might be requests to have the isolated component attempt to change the operating system or perform other actions that might be construed as not safe. Should such a request be detected then the super sandbox might flow to block where the request might be canceled or some other security action might be performed.

However even where the requests are determined to be safe the super sandbox also analyzes responses from the isolated component to determine whether the responses are safe. Thus for example responses that seek to modify protected addresses might be canceled redirected to another address location or the like. For example another temporary file system might be created into which the responses might be redirected. However at decision block should it be determined that a response is a possible security threat processing might flow to block otherwise the process may flow to block where the response may be passed by the super sandbox for use by the requesting component within the client device. Processing may then flow back to block .

It should be noted that process may terminate at any step based on a detected security threat by the super sandbox and or the browser or other client component. Further while process illustrates one possible flow other flows and or steps may also be performed. For example in other embodiments the downloaded component might be registered first and then subsequently analyzed for security threats. Thus block might be performed before block for example. In other instances block might be an on going action. For example it might be performed multiple times even while the isolated component is servicing other requests.

In any event it will be understood that each block of the flowchart illustration and combinations of blocks in the flowchart illustration can be implemented by computer program instructions. These program instructions may be provided to a processor to produce a machine such that the instructions which execute on the processor create means for implementing the actions specified in the flowchart block or blocks. The computer program instructions may be executed by a processor to cause a series of operational steps to be performed by the processor to produce a computer implemented process such that the instructions which execute on the processor to provide steps for implementing the actions specified in the flowchart block or blocks. The computer program instructions may also cause at least some of the operational steps shown in the blocks of the flowchart to be performed in parallel. Moreover some of the steps may also be performed across more than one processor such as might arise in a multi processor computer system a cloud system a multi server system or the like. In addition one or more blocks or combinations of blocks in the flowchart illustration may also be performed concurrently with other blocks or combinations of blocks or even in a different sequence than illustrated without departing from the scope or spirit of the invention.

Accordingly blocks of the flowchart illustration support combinations of means for performing the specified actions combinations of steps for performing the specified actions and program instruction means for performing the specified actions it will also be understood that each block of the flowchart illustration and combinations of blocks in the flowchart illustration can be implemented by special purpose hardware based systems which perform the specified actions or steps or combinations of special purpose hardware and computer instructions.

The above specification examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention the invention resides in the claims hereinafter appended.

