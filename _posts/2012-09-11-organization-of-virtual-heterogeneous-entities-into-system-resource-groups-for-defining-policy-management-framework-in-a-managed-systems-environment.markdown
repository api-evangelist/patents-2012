---

title: Organization of virtual heterogeneous entities into system resource groups for defining policy management framework in a managed systems environment
abstract: Policies are implemented in a managed systems. Virtual heterogeneous entities are organized into a system resource group (SRG) hosted on a virtual volume that is accessed via a virtualization machine. Each of the virtual heterogeneous entities are visible to an application operable on the managed systems environment. The system resource group is subject to at least one membership requirement, defines a relationship between at least two of the virtual heterogeneous entities, contains at least one policy defining an operation as to be performed on the system resource group for a domain of the managed systems environment, and defines at least a portion of a policy framework between the system resource group and an additional system resource group organized from additional virtual heterogeneous entities. The system resource group expands according to an action performed incorporating the relationship, policy, or policy framework.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08516489&OS=08516489&RS=08516489
owner: International Business Machines Corporation
number: 08516489
owner_city: Armonk
owner_country: US
publication_date: 20120911
---
This application is a continuation application of U.S. application Ser. No. 12 411 144 filed Mar. 25 2009 now U.S. Published Application US 2010 0251252 published on Sep. 30 2010 the entire contents of which are incorporated herein by reference and is relied upon for claiming the benefit of priority.

The present invention relates in general to computers and more particularly to a method system and computer program product for implementing policies in a virtual cluster managed systems environment.

A managed systems environment may support attachment of a wide variety of heterogeneous entities such as host servers disk array controllers storage volumes and client systems. A networked system in the environment may include multiple networks such as one or more storage area networks SANs and or local area networks LANs . The networked system may be developed via connections to one or more network switches forming a fabric through which the entities may communicate. As numerous hardware and software vendors have developed custom storage solutions applications and operating system interfaces problems may arise in attempting to integrate multiple entities in a networked system. For example a networked system may include host servers executing UNIX and UNIX like operating systems e.g. Solaris Linux AIX Microsoft Windows and IBM z OS .

Networked environments such as the SAN environment are rarely static necessitating frequent correlation and analysis to understand the relationship between various entities and resources. With the advent of virtualization in managed systems environments including virtualized storage management tracking an application s relationship to the entities in the system in dynamic fashion with respect to time can be challenging. Currently there is no mechanism for administrators to holistically correlate the various entities in managed systems environments based on the context of the action being performed provisioning resiliency chargeback reporting etc. . The challenge of integration becomes increasingly difficult as the administrator has to frequently deal with growing scope of applications encompassing databases and file systems.

In view of the foregoing a need exists for a mechanism to holistically manage and correlate the various entities in managed system environments. Accordingly in one embodiment by way of example only a method for implementing policies for heterogeneous entities in a managed systems environment is provided. A plurality of virtual heterogeneous entities is organized into a system resource group SRG hosted on a virtual volume that is accessed via a virtualization machine. Each of the plurality of virtual heterogeneous entities is visible to an application operable on the virtual cluster managed systems environment. The system resource group is subject to at least one membership requirement defines a relationship between at least two of the virtual heterogeneous entities contains at least one policy defining an operation as to be performed on the system resource group for a domain of the managed systems environment and defines at least a portion of a policy framework between the system resource group and an additional system resource group organized from an additional plurality of the virtual heterogeneous entities. The system resource group expands according to an action performed incorporating the relationship policy or policy framework.

In another embodiment again by way of example only a system for implementing policies for virtual heterogeneous entities in a managed systems environment is provided. A policy management module is operational in the managed systems environment. The policy management module is adapted for organizing a plurality of virtual heterogeneous entities into a system resource group SRG . Each of the plurality of the virtual heterogeneous entities is visible to an application operable on the managed systems environment. The system resource group is subject to at least one membership requirement defines a relationship between at least two of the virtual heterogeneous entities contains at least one policy defining an operation as to be performed on the system resource group for a domain of the managed systems environment and defines at least a portion of a policy framework between the system resource group and an additional system resource group organized from an additional plurality of the virtual heterogeneous entities. All of the heterogeneous entities in the managed systems environment are provided a level of service in the policy framework for tiered management.

In still an additional embodiment again by way of example only a computer program product for implementing policies for virtual heterogeneous entities in a managed systems environment is provided. The computer program product comprises a computer readable storage medium having computer readable program code portions stored therein. The computer readable program code portions comprise an executable portion for organizing a plurality of virtual heterogeneous entities into a system resource group SRG . Each of the plurality of the virtual heterogeneous entities is visible to an application operable on the managed systems environment. The system resource group is subject to at least one membership requirement defines a relationship between at least two of the virtual heterogeneous entities contains at least one policy defining an operation as to be performed on the system resource group for a domain of the managed systems environment and defines at least a portion of a policy framework between the system resource group and an additional system resource group organized from an additional plurality of the virtual heterogeneous entities. All of the virtual heterogeneous entities in the managed systems environment are provided a level of service in the policy framework for tiered management.

As previously described currently administrators face challenges in integrating the many varied entities in managed systems environments. Consider the following exemplary scenario. At a first time T1 the administrator provisions certain storage resources for a database. Later at time T2 when the capacity requirements of the database increases the administrator allocates additional storage resources for the database forgetting that he has to increase the storage capacity for backup and replication functions as well. The lack of storage capacity for backup and replication functions will not present itself as a problem immediately. When the problem does arise however the administrator is required to trace back all events to the source of the problem which may incur time and expense.

In a certain managed systems environment volumes for a particular database are allocated from three different storage resources. The data and log volumes for the database are allocated from the highest quality and most reliable resources while the index is allocated from a less reliable resource since indices may be recreated. In this situation the provisioning requirements for the database differ from the replication requirements. In addition each of the database storage resources are required to be in a same zone an allocation of resources for device load balancing and for selectively allowing access to data only to certain users with respect to the host for the database to be usable by applications operating on the host while the log and data volumes of the database should be categorized into a different zone for replication purposes. This scenario quickly becomes complicated as the number of applications and sites associated with the database increase.

The illustrated embodiments serve to address each of these scenarios by virtue of implementing system resource groups SRGs . SRGs provide a container mechanism to group together various elements of a managed systems environment such as a SAN and attach high level policies to the various elements. SRGs allow system administrators to identify various violations as they occur providing for a stable and consistent environment. SRGs are abstract entities that define the relationship between servers virtual and physical file systems databases and storage. The entity enables the capability for group oriented provisioning actions such as the creation and assignment of volumes from storage subsystems to servers file systems and databases as well as the network access control between the two such as zoning . In addition to the above the SRGs can form the basis of consistency groups for replicating applications in a site or between sites. SRGs can be used to apply container notions to provisioning chargeback reporting disaster recovery etc.

Entities in a managed environment can be grouped into a SRG by automatic discovery based on the context of a particular application or by administrative boundary referring to an administrator grouping entities based on his her deployment. All of the entities in the managed systems environment are provided a level of service in a policy framework for tiered management. Policies are based on reliability manageability device type chargeback cost for additional storage resources to be put in place and the like. Policies may be assigned by a systems administrator graphically for example using a graphical user interface GUI by leveraging the SRGs presentation of a particular systems relationship cost device type etc. In additional embodiments policies may be assigned by operation of the SRGs themselves e.g. by virtue of a relationship established by one or more SRGs .

SRGs holistically capture and maintain each of the relationships between entities. However based on the context in which SRG is used such as provisioning resiliency chargeback reporting optimization migration etc SRGs are expanded in that context. For example a SRG a payroll application with an associated replication policy for disaster recovery of data will only expand with respect to the storage volumes used by the application since in this context all the storage volumes participate in copy relationships. The same SRG however when associated with server resiliency policy will expand in the context of servers and clusters.

Turning now to an exemplary networked system in which aspects of the present invention may be implemented is depicted. Networked system is presented as at least a portion of an exemplary managed systems environment. In exemplary embodiments the networked system includes clients and servers coupled to a local area network LAN . The networked system further includes a tape library and data storage coupled to a SAN infrastructure . A management computer may also be coupled to the SAN infrastructure . In exemplary embodiments the servers are coupled to the SAN infrastructure through host bus adapters HBAs . The SAN infrastructure may include any number of switches routers hubs computers cables and the like.

In exemplary embodiments the SAN infrastructure is fibre channel. Through the SAN infrastructure and the HBAs the servers can read and write data to the tape library and the data storage as requested by the clients via the LAN . In exemplary embodiments each HBA has one or more ports that are connected to switch ports on network switches via cables such as copper wire or fiber optic cables in the SAN infrastructure to form a SAN fabric. The SAN infrastructure may additionally or alternatively include wireless communication between network entities such as the HBAs the tape library the data storage and the management computer . The underlying network topology of the SAN infrastructure may be any topology known in the art and may include connections to other entities not depicted in .

The various entities and including the underlying entities of the SAN infrastructure may be collectively referred to as a SAN . In many cases entities are heterogeneous in nature and are referred to herein as heterogeneous as such although the skilled artisan will appreciate that heterogeneousness among entities in a particular implementation may vary. While a finite number of heterogeneous entities are depicted in the networked system of it will be understood that the scope of the invention is not so limited. To the contrary any size system with any number of servers HBAs switches and storage entities may be supported such as SANs ranging between 32 to 2500 or more ports. Moreover the LAN need not be present however it will be understood that any size or number of LANs or other network types are considered within the scope of the invention.

The servers may be high speed processing devices e.g. a mainframe computer that handle large volumes of processing requests from the clients . In exemplary embodiments the server functions as a file and print server coupled to the SAN infrastructure through one or more ports of the HBA . The server may function as an e mail server coupled to the SAN infrastructure through one or more ports of the HBA . In exemplary embodiments the server functions as a database server coupled to the SAN infrastructure through one or more ports of the HBA . The servers may further include other functionality not depicted such as a web server or applications server. The clients may comprise desktop or general purpose computer devices that generate data and processing requests to the servers through the LAN . The networks and may be part of an intranet extranet or an internetwork such as the Internet or a combination thereof. The LAN similar to the SAN infrastructure may include a wireless and or wireline network infrastructure. The data storage and the tape library may include any number of subsystems referred to generally as storage subsystems. 

The management computer may be any type of computer known in the art such as a server a workstation a personal computer or the like. In exemplary embodiments the management computer executes management software such as a network resource management NRM tool that supports administrative functions including configuring the entities of the system . The NRM tool may support configuring entities coupled through and within the SAN infrastructure and or the LAN . The NRM tool executing upon the management computer may also support tracking problems and storing problems and configuration data to one or more databases. The NRM tool may support configuration data and problem tracking for all of the entities of the networked system and are not limited to the SAN . A policy management module is operable on the management computer . Policy management module may operate independently or in conjunction with NRM tool . NRM tool and or policy management module may be configured for implementing aspects of the present invention such as organizing heterogeneous entities into SRGs as will be further explained following. An administrator may monitor for problems and record problems using NRM tool executing upon management computer . Examples of such NRM tools include EMC ControlCenter HP AppIQ IBM TPC and Veritas CommandCentral . In alternate exemplary embodiments the management computer is coupled to the LAN . While the networked system represents an exemplary networked system more advanced networks may be supported such as a network with virtualization at different levels. For example access to the networked system may be supported through a virtual machine instead of the servers .

Each entity within a managed systems environment such as the networked system may have a direct attribute an association and or a derived attribute. A direct attribute is an inherent property of the entity. In the case of the servers the direct attributes of each server may include one or more IP addresses a host name an operating system and a memory size among others. In exemplary embodiments each entity has one or more associations where an association links one or more types of entities such as a fabric a zone a zone set an access control list or network links. A fabric is a logical network entity that may consist of a set of switches within the SAN infrastructure which act in unison along with the servers connected via the HBAs together with the storage subsystems including the data storage and the tape library . The management computer may also be part of one or more fabrics. In exemplary embodiments a zone is a collection of ports in a fabric that are visible to each other and a zone set is a collection of zones in the fabric. An access control list may include a set of host ports storage subsystem ports and storage volumes that indicates a path via which the host may access a volume such as ports of HBA through which the server may access data via ports and volumes on the data storage . In exemplary embodiments network links are connections between two ports.

Turning to an additional exemplary managed systems environment is depicted. The various entities are presented more generically than the specific embodiment shown in for conceptual purposes however the skilled artisan will appreciate that many of the same topologies and structures are similar. Environment includes several applications . Applications may vary depending on a particular implementation. Each of the applications leverages one or more databases for information. Below databases a number of servers are implemented. In one embodiment the servers may host the databases and or the application . As described previously a particular server may host a particular application . In addition each of the servers may include one or more virtual machine entities operable on the servers . Servers are in communication over either both of or between a virtualized internet protocol IP network and a virtualized fibre channel FC network and between a storage virtualization appliance . Storage virtualization appliance provides an interface between a number of storage controllers each with physical disks virtual volumes not depicted or other storage resources.

For each of the heterogeneous entities in environment information associated with the management of the entities are held in a systems management repository . This information may include information relating to such characteristics as device configuration connectivity performance and system events as the skilled artisan will appreciate. In one exemplary embodiment the systems management repository is operable on management computer by or in conjunction with NRM tool and or policy management module again .

A more specific example of a managed systems environment is depicted in following. Environment more clearly demonstrates the wide variety of heterogeneous entities that may be present in any particular managed systems environment. Environment includes an application server such as an SAP application server in which executables using a file system such as an NTFS file system are operable. Application server is in communication with several differing database servers. One database server such as a Windows database server manages a database such as an IBM DB2 database adapted for database managed storage. An additional database such as an AIX server manages an additional database such as an additional DB2 database adapted for system managed storage. Finally an additional server such as an additional Windows database server manages an additional database such as an Oracle database adapted for database managed storage.

Each of the database servers and is associated with a set of storage resources. In the server volumes and are associated with database . In one embodiment volumes and comprise a storage subsystem such an IBM DS8000 disk storage subsystem. Database server is similarly associated with volumes and . In the case of the database server a logical volume manager manages a pair of logical volumes and associated with journaled file systems JFS and and volumes and .

The various heterogeneous entities that may be categorized into a system resource group are high level entities from a SAN perspective that are visible to an application operable in the managed systems environment. These high level entities may include the various entities previously depicted and described such as file systems databases and storage volumes visible to a host . In one embodiment entities in a storage area network that are dependent on these high level entities may be automatically included in a system resource group such as fabric subsystems etc. .

Turning to an environment is depicted portions thereof having been classified categorized into various exemplary system resource groups. Environment contains the same specific entities as environment described earlier in . For the executables organized under the depicted file system SRG is defined created as a file system FS SRG. For the database server adapted for database managed storage database DB SRG is defined created. For the database server adapted for system managed storage a server SRG is created defined. Finally for the database managed storage and associated storage volumes a custom database SRG is created defined with database container SRGs and . As the skilled artisan will appreciate creation definition of SRGs vary according to the entity or entities in which they are assigned.

This is illustrated more thoroughly in following in an SRG view of the entities described in previously is depicted. SAP application SRG is inclusive of each of the remaining SRGs depicted. For example application SRG is inclusive of FS SRG DB SRG and server SRG corresponding to the hierarchical levels depicted previously in . Application SRG becomes a consistency group integrating and correlating relationships policies and membership requirements of children SRGs. Custom DB SRG includes DB container SRGs and . As the view illustrates graphically the membership requirements policies and relationships of each of the SRGs form a framework that relate to other SRGs in the environment as a whole providing for tiered management of the environment.

System resource groups include policies that define for example how provisioning and replication actions operate on a particular system resource group and as a whole in the managed systems environment. Various exemplary domains in the managed systems environment will now be described including the various policies defined by system resource groups. One exemplary domain concerns creation of volumes. For volume creation SRG policies may provide an ordered set of storage volumes and storage pools for volumes. The following table of exemplary policy settings may be implemented for volume creation.

An additional domain concerns assignment of volumes pathing . For volume assignment SRG policies may dictate how the assignment of volumes from a particular system resource group to the hosts in the same group is performed. The policy may be affected by the number of required paths from the host to the volume. In one embodiment implementation of volume assignment policies is best effort in nature. In other words the implementation will try to achieve the number of required paths as stated by the policy but if that is not possible then as many paths as possible will be achieved.

An additional domain concerns zoning. Zoning policies describe the zoning between entities such as between the hosts and storage volumes or the storage subsystems containing the storage volumes. Possible exemplary policy settings include 1 no zoning 2 one zone per server 3 one zone per subsystem and 4 one zone per system resource group.

An additional domain concerns backups. Backup policies describe for example how often the entities in a particular system resource group are to be backed up. In one embodiment more than one backup policy may be associated with a particular SRG. For example the SRG may be backed up in an incremental mode nightly as well as fully backed up on a monthly basis. Table 2 following depicts exemplary possible backup policy settings.

Finally an additional domain concerns replication. Replication policies may for example dictate the mode of replication to be performed for a particular SRG. The mode of replication indicates both the type of replication as well as the role that the SRG performs in this replication. Possible replication policy settings are described following in Table 3.

A challenge in designing a system resource group is that the requirements for provisioning storage volumes and network may not match the requirements for replication. For example consider a database. The consistency group that defines the whole database application in terms of replication includes data files index files and log files assuming a file system oriented database . However in terms of provisioning an administrator may want to treat data index and log files differently because they have different storage requirements. For example the administrator may want to provide the highest level of protection to log files the next level of protection to data files assuming the presence of backups and the least level of protection for index files they can be re generated . To address the challenge described above a flexible definition of system resource groups may be implemented. SRGs are not intended to model a particular application but to provide tools so that external agencies may model applications via the SRG application programming interfaces APIs . The following exemplary definitional membership requirements may be established for a system resource group.

 1 A SRG may be composed of file systems databases storage volumes servers virtual and physical and other system resource group s . The recursiveness of system resource groups is deliberately introduced so as to compose system resource groups that can match both provisioning and replication requirements. In another sense the recursiveness denotes a gets storage from relationship while the elements of a system resource group have common policies or requirements in some domain. 2 A SRG must have at least one element in it. In other words an empty SRG is not valid. There can be no cycles in the membership of system resource groups. This is a practical imperative.

 3 If a file system storage volume or database is added to a storage resource group they must follow the policies associated with the system resource group. 4 Modifying a policy in a SRG may be restricted in some cases. For example modifying a replication policy may be constrained by applications accessing a system resource group. 5 A file file system database storage volume server or system resource group may be a member of multiple system resource groups. This does however introduce policy complications that are addressed by the requirements set forth in 6 following.

 6 If a system resource group does not have a policy in some domain it inherits the policy of all the parent system resource groups if there are parents . If there is any policy conflict among the parents of a system resource group and the system resource group does not have a policy then the system resource group defaults to a null policy for the domain. Any provisioning or replication action on that system resource group may result in a default action or error. 7 When a provisioning or replication action is invoked on a system resource group the action is performed on either the system resource group or the nearest system resource group in terms on node distance where the action is feasible. This scenario arises when there two entities in an entity hierarchy that are capable of replication such as an IBM Storage Volume Controller SVC in front of an Enterprise Storage Server ESS . For example if a replication action is invoked on a database system resource group that is hosted on a virtual volume on the SVC the replication action is invoked on the SVC virtualization machine that hosts the virtual volume and not on the back end ESS storage subsystem that hosts the physical volumes that make up the virtual volume. A similar example can be construed for file systems.

 8 Replication capabilities may prevent a volume to be part of multiple replication sessions. These restrictions are transitive to the system resource group s that may contain the storage volume directly or indirectly. For example a storage volume can be part of at most two FlashCopy or Peer to Peer Redundant Copy PPRC relations in early version of the ESS. If the same storage volume is part of three system resource groups then at most two system resource groups can perform replications on the storage volume. 9 Storage resource groups aim to maintain consistency across replication relationships. If a storage volume is directly or indirectly added to a system resource group that is the source of a replication relation then a storage volume of the same size or bigger is added to the system resource group that is the target of the replication relation. After this the source and target storage volumes are added to the consistency group of the replication relation in question. Similarly if a storage volume is deleted from a system resource group directly or indirectly while the replication relation is in session then we remove the source storage volume from the replication relation with its target storage volume. However we do not delete the target storage volume from its parent system resource group.

Implementation of system resource groups in a particular managed systems environment creates a policy framework for the environment with a portion of the overall policy framework residing in each SRG. The policy framework provides a given level of service to be ensured for each element of given SRG. In one embodiment potential conflicts between policies in and between SRGs may be resolved based on 1 inheritance policy of parents hold good for children 2 override policy of children if any would override and 3 append policy of children is union of both parent and children level policies . Potential conflicts between policies may also be resolved based on a recipe knowledge base that contains knowledge for one or more domains in the environment.

To illustrate conflict resolution consider the following example. Database myDB is deployed in a data center. The database contains three tablespaces TS1 TS2 and TS3. TS1 contains data. TS1 is composed of storage volumes SV1 and SV2. TS2 contains a log. TS2 also is composed of storage volumes SV3 and SV4. TS3 contains temporary data and is composed of storage volume SV5. The system administrator defines creates three SRGs. SRG1 is composed of TS1 SRG1 SV1 SV2 . SRG1 is associated with resiliency policy of PointInTime FlashCopy every six hours. SRG is composed of TS2 SRG2 SV3 SV4 . SRG2 is associated with resiliency policy of PointInTime FlashCopy every one hour. SRG3 is created for the whole database SRG3 SRG1 SRG2 SV5 . SRG3 is associated with resiliency policy of PointInTime FlashCopy every twenty four hours. In this example the policy resolution setting PolicyResolution selected by the administrator is Override YES. As a result SV5 is flash copied every twenty four hours. However SRG1 and SRG2 are flash copied every six hours and every hour respectively.

SRG creation definition deletion and modification events may be published by the system for subscription. This notion helps the interested listeners to be notified in case of creation deletion modification of SRG s that might be of interest for 1 potential conflict resolution 2 validation of the managed systems environment 3 proactive action 4 user level notification etc. and the like.

Turning to methods and describe exemplary procedures for implementation of SRGs and thereby establishing policies correlation management and the like within a particular managed systems environment . As one skilled in the art will appreciate various steps in the methods and may be implemented in differing ways to suit a particular application. In addition the described methods may be implemented by various means such as hardware software firmware or a combination thereof operational on or otherwise associated with the storage environment. For example the methods may be implemented partially or wholly as a computer program product including a computer readable storage medium having computer readable program code portions stored therein. The computer readable storage medium may include disk drives flash memory digital versatile disks DVDs compact disks CDs and other types of storage mediums.

Turning first to method begins step with the definition creation of one or more system resources groups step . The system resource groups are subject to at least one membership requirement as previously described. As a next step the relationships between various entities within and without a particular SRG are discovered and associated step . The policy or policies of the particular SRG are then established and associated with the entities assigned to the SRG step . Once the SRG is created defined then an action may be performed by or in conjunction with the application in which the entities in the managed systems environment are visible step . The application takes into account one of the policies relationships and or policy framework established by the system resource group. The SRG expands according to the context of the action performed as previously described yet retains basic information such as for example primitive relationships between the entities.

As the skilled artisan will appreciate the action may vary depending on a particular implementation. For example the action may relate to provisioning replication disaster recovery chargeback reporting orchestration asset tracking cluster management administrator domain functions in data centers planning and the like. In one embodiment the action may relate to performing a group oriented provisioning action. This group oriented provisioning action may include creation of a volume creation of a file system creation of a database assignment of a volume from a storage subsystem to a server assignment of a file system assignment of a database and management of an access control for security purposes . Returning to as a next step the method then ends step .

Method describes the steps described previously in yet in computer implementable format. Method begins step with a first executable portion of computer readable program code defining creating one or more SRGs step . A second executable portion discovers associates relationships in similar fashion to step in step . A third executable portion associates policies in similar fashion to step in step . Finally the action is again performed in conjunction with or by the application step . The method then ends step .

A systems administrator may group the entities he she is using based on his her administrative domain. These entities may be grouped together by the administrator in an ad hoc fashion without any application boundary to create a SRG. The SRG may then be used for reporting alert tracking asset tracking location tracking problem determination etc. In this way implementation of SRGs serves to facilitate a variety of functionality in systems managed environments.

Some of the functional units described in this specification have been labeled as modules in order to more particularly emphasize their implementation independence. For example a module may be implemented as a hardware circuit comprising custom VLSI circuits or gate arrays off the shelf semiconductors such as logic chips transistors or other discrete components. A module may also be implemented in programmable hardware devices such as field programmable gate arrays programmable array logic programmable logic devices or the like.

Modules may also be implemented in software for execution by various types of processors. An identified module of executable code may for instance comprise one or more physical or logical blocks of computer instructions which may for instance be organized as an object procedure or function. Nevertheless the executables of an identified module need not be physically located together but may comprise disparate instructions stored in different locations which when joined logically together comprise the module and achieve the stated purpose for the module.

Indeed a module of executable code may be a single instruction or many instructions and may even be distributed over several different code segments among different programs and across several memory devices. Similarly operational data may be identified and illustrated herein within modules and may be embodied in any suitable form and organized within any suitable type of data structure. The operational data may be collected as a single data set or may be distributed over different locations including over different storage devices and may exist at least partially as electronic signals on a system or network.

While one or more embodiments of the present invention have been illustrated in detail the skilled artisan will appreciate that modifications and adaptations to those embodiments may be made without departing from the scope of the present invention as set forth in the following claims.

