---

title: Harmonic quantizer scale
abstract: A digital media encoder/decoder performs quantization/dequantization based on quantization parameters taken from a harmonic quantizer scale. The harmonic quantizer scale can include a normal portion consisting of quantization parameter values harmonically-related as simple fractions of each other, and a denormal portion of quantizers having a linear or other relation. The encoder/decoder further supports a scaled quantizer mode where quantization is performed based on the quantization parameter as scaled by a fractional value. A compressed domain contrast adjustment is effected by adjusting the quantization parameters in the compressed bitstream, without having to adjust and recode the digital media data in the compressed bitstream.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08588298&OS=08588298&RS=08588298
owner: Microsoft Corporation
number: 08588298
owner_city: Redmond
owner_country: US
publication_date: 20120510
---
This is a continuation of U.S. patent application Ser. No. 11 676 263 filed Feb. 16 2007 which is a continuation in part of Tu et al. Flexible Quantization U.S. patent application Ser. No. 11 418 690 filed May 5 2006 both of which are herein incorporated by reference.

Transform coding is a compression technique used in many digital media e.g. audio image and video compression systems. Uncompressed digital image and video is typically represented or captured as samples of picture elements or colors at locations in an image or video frame arranged in a two dimensional 2D grid. This is referred to as a spatial domain representation of the image or video. For example a typical format for images consists of a stream of 24 bit color picture element samples arranged as a grid. Each sample is a number representing color components at a pixel location in the grid within a color space such as RGB or YIQ among others. Various image and video systems may use various different color spatial and time resolutions of sampling. Similarly digital audio is typically represented as time sampled audio signal stream. For example a typical audio format consists of a stream of 16 bit amplitude samples of an audio signal taken at regular time intervals.

Uncompressed digital audio image and video signals can consume considerable storage and transmission capacity. Transform coding reduces the size of digital audio images and video by transforming the spatial domain representation of the signal into a frequency domain or other like transform domain representation and then reducing resolution of certain generally less perceptible frequency components of the transform domain representation. This generally produces much less perceptible degradation of the digital signal compared to reducing color or spatial resolution of images or video in the spatial domain or of audio in the time domain.

More specifically a typical block transform based encoder decoder system also called a codec shown in divides the uncompressed digital image s pixels into fixed size two dimensional blocks X . . . X each block possibly overlapping with other blocks. A linear transform that does spatial frequency analysis is applied to each block which converts the spaced samples within the block to a set of frequency or transform coefficients generally representing the strength of the digital signal in corresponding frequency bands over the block interval. For compression the transform coefficients may be selectively quantized i.e. reduced in resolution such as by dropping least significant bits of the coefficient values or otherwise mapping values in a higher resolution number set to a lower resolution and also entropy or variable length coded into a compressed data stream. At decoding the transform coefficients will inversely transform to nearly reconstruct the original color spatial sampled image video signal reconstructed blocks circumflex over X . . . circumflex over X .

The block transform can be defined as a mathematical operation on a vector x of size N. Most often the operation is a linear multiplication producing the transform domain output y M x M being the transform matrix. When the input data is arbitrarily long it is segmented into N sized vectors and a block transform is applied to each segment. For the purpose of data compression reversible block transforms are chosen. In other words the matrix M is invertible. In multiple dimensions e.g. for image and video block transforms are typically implemented as separable operations. The matrix multiplication is applied separably along each dimension of the data i.e. both rows and columns . However non separable block transforms also can be used in codecs for multi dimension digital media.

For compression the transform coefficients components of vector y may be selectively quantized i.e. reduced in resolution such as by dropping least significant bits of the coefficient values or otherwise mapping values in a higher resolution number set to a lower resolution and also entropy or variable length coded into a compressed data stream.

At decoding in the decoder the inverse of these operations dequantization entropy decoding and inverse block transform are applied on the decoder side as show in . While reconstructing the data the inverse matrix M inverse transform is applied as a multiplier to the transform domain data. When applied to the transform domain data the inverse transform nearly reconstructs the original time domain or spatial domain digital media.

In many block transform based coding applications the transform is desirably reversible to support both lossy and lossless compression depending on the quantization factor. With no quantization generally represented as a quantization factor of 1 for example a codec utilizing a reversible transform can exactly reproduce the input data at decoding. However the requirement of reversibility in these applications constrains the choice of transforms upon which the codec can be designed.

Many image and video compression systems such as MPEG and Windows Media among others utilize transforms based on the Discrete Cosine Transform DCT . The DCT is known to have favorable energy compaction properties that result in near optimal data compression. In these compression systems the inverse DCT IDCT is employed in the reconstruction loops in both the encoder and the decoder of the compression system for reconstructing individual image blocks.

According to one possible definition quantization is a term used for an approximating non reversible mapping function commonly used for lossy compression in which there is a specified set of possible output values and each member of the set of possible output values has an associated set of input values that result in the selection of that particular output value. A variety of quantization techniques have been developed including scalar or vector uniform or non uniform with or without dead zone and adaptive or non adaptive quantization.

The quantization operation is essentially a biased division by a quantization parameter QP which is performed at the encoder. The inverse quantization or multiplication operation is a multiplication by QP performed at the decoder. These processes together introduce a loss in the original transform coefficient data which shows up as compression errors or artifacts in the decoded image.

Quantization is the primary mechanism for most image and video codecs to control compressed image quality and compression ratio. Quantization methods supported by most popular codecs fail to provide an adequate range of control over quality and coded bitrate. Popular codecs generally permit only certain discrete values of QP to be coded in the bitstream.

Several issues are involved in the design of the quantizer and dequantizer including the specific quantization rule variation of quantizers across frequency bands signaling of quantizers and choice of the quantization parameter.

The following Detailed Description presents variations of a harmonic quantization scale technique that provides the ability to finely control quantization over the range of bitrates supported by the codec in such way that the quantization also is efficiently signaled in the bitstream and computationally efficient for the decoder.

According to one implementation of the technique a digital media codec permits choice of the quantization parameter from a harmonic scale. The term harmonic is used to denote a sequence of values in which successive values are related as simple fractions of each other. This has the benefit of providing a wide range of permissible values of the quantization parameter while also having a relatively even control of bitrate and quality across the range. Further the choice of quantization parameter from the harmonic scale can be efficiently signaled using a quantization index which may be a fixed length value. In some implementations a flexible variation of the quantization parameter over separate partitions of the digital media within the bitstream e.g. different quantization parameters applied to separate sub bands and channels of an image can be signaled by defining a table of quantization indices at a suitable hierarchical level of the bitstream syntax and referencing the quantization index out of the table with a coded symbol to signal the quantization parameter applied to a portion of the digital media.

According to a further aspect of the technique the harmonic quantization scale further permits contrast adjustment of digital media e.g. image data in the compressed domain including when variable quantization has been applied across the digital media. The contrast is adjusted in the compressed domain by uniformly adjusting the quantization indices across the digital media.

This Summary is provided to introduce a selection of concepts in a simplified form that is further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter. Additional features and advantages of the invention will be made apparent from the following detailed description of embodiments that proceeds with reference to the accompanying drawings.

The following description relates to coding and decoding techniques that define a scale or rule governing the permissible values of the quantization parameter used in a digital media codec. The described quantizer scale technique is referred to herein as a harmonic quantizer scale. The following description describes an example implementation of the technique in the context of a digital media compression system or codec. The digital media system codes digital media data in a compressed form for transmission or storage and decodes the data for playback or other processing. For purposes of illustration this exemplary compression system incorporating this harmonic quantization scale is an image or video compression system. Alternatively the technique also can be incorporated into compression systems or codecs for other digital media data. The flexible quantization technique does not require that the digital media compression system encodes the compressed digital media data in a particular coding format.

The 2D data encoder produces a compressed bitstream that is a more compact representation for typical input of 2D data presented as input to the encoder. For example the 2D data input can be an image a frame of a video sequence or other data having two dimensions. The 2D data encoder divides a frame of the input data into blocks illustrated generally in as partitioning which in the illustrated implementation are non overlapping 4 4 pixel blocks that form a regular pattern across the plane of the frame. These blocks are grouped in clusters called macroblocks which are 16 16 pixels in size in this representative encoder. In turn the macroblocks are grouped into regular structures called tiles. The tiles also form a regular pattern over the image such that tiles in a horizontal row are of uniform height and aligned and tiles in a vertical column are of uniform width and aligned. In the representative encoder the tiles can be any arbitrary size that is a multiple of 16 in the horizontal and or vertical direction. Alternative encoder implementations can divide the image into block macroblock tiles or other units of other size and structure.

A forward overlap operator is applied to each edge between blocks after which each 4 4 block is transformed using a block transform . This block transform can be the reversible scale free 2D transform described by Srinivasan U.S. patent application Ser. No. 11 015 707 entitled Reversible Transform For Lossy And Lossless 2 D Data Compression filed Dec. 17 2004. The overlap operator can be the reversible overlap operator described by Tu et al. U.S. patent application Ser. No. 11 015 148 entitled Reversible Overlap Operator for Efficient Lossless Data Compression filed Dec. 17 2004 and by Tu et al. U.S. patent application Ser. No. 11 035 991 entitled Reversible 2 Dimensional Pre Post Filtering For Lapped Biorthogonal Transform filed Jan. 14 2005. Alternatively the discrete cosine transform or other block transforms and overlap operators can be used. Subsequent to the transform the DC coefficient of each 4 4 transform block is subject to a similar processing chain tiling forward overlap followed by 4 4 block transform . The resulting DC transform coefficients and the AC transform coefficients are quantized entropy coded and packetized .

The decoder performs the reverse process. On the decoder side the transform coefficient bits are extracted from their respective packets from which the coefficients are themselves decoded and dequantized . The DC coefficients are regenerated by applying an inverse transform and the plane of DC coefficients is inverse overlapped using a suitable smoothing operator applied across the DC block edges. Subsequently the entire data is regenerated by applying the 4 4 inverse transform to the DC coefficients and the AC coefficients decoded from the bitstream. Finally the block edges in the resulting image planes are inverse overlap filtered . This produces a reconstructed 2D data output.

In an exemplary implementation the encoder compresses an input image into the compressed bitstream e.g. a file and the decoder reconstructs the original input or an approximation thereof based on whether lossless or lossy coding is employed. The process of encoding involves the application of a forward lapped transform LT discussed below which is implemented with reversible 2 dimensional pre post filtering also described more fully below. The decoding process involves the application of the inverse lapped transform ILT using the reversible 2 dimensional pre post filtering.

The illustrated LT and the ILT are inverses of each other in an exact sense and therefore can be collectively referred to as a reversible lapped transform. As a reversible transform the LT ILT pair can be used for lossless image compression.

The input data compressed by the illustrated encoder decoder can be images of various color formats e.g. RGB YUV4 4 4 YUV4 2 2 or YUV4 2 0 color image formats . Typically the input image always has a luminance Y component. If it is a RGB YUV4 4 4 YUV4 2 2 or YUV4 2 0 image the image also has chrominance components such as a U component and a V component. The separate color planes or components of the image can have different spatial resolutions. In case of an input image in the YUV 4 2 0 color format for example the U and V components have half of the width and height of the Y component.

As discussed above the encoder tiles the input image or picture into macroblocks. In an exemplary implementation the encoder tiles the input image into 16 16 pixel areas called macroblocks in the Y channel which may be 16 16 16 8 or 8 8 areas in the U and V channels depending on the color format . Each macroblock color plane is tiled into 4 4 pixel regions or blocks. Therefore a macroblock is composed for the various color formats in the following manner for this exemplary encoder implementation 

Accordingly after transform a macroblock in this representative encoder decoder has three frequency sub bands a DC sub band DC macroblock a low pass sub band low pass macroblock and a high pass sub band high pass macroblock . In the representative system the low pass and or high pass sub bands are optional in the bitstream these sub bands may be entirely dropped.

Further the compressed data can be packed into the bitstream in one of two orderings spatial order and frequency order. For the spatial order different sub bands of the same macroblock within a tile are ordered together and the resulting bitstream of each tile is written into one packet. For the frequency order the same sub band from different macroblocks within a tile are grouped together and thus the bitstream of a tile is written into three packets a DC tile packet a low pass tile packet and a high pass tile packet. In addition there may be other data layers.

Although the representative system organizes the compressed digital media data in spatial frequency and channel dimensions the flexible quantization approach described here can be applied in alternative encoder decoder systems that organize their data along fewer additional or other dimensions. For example the flexible quantization approach can be applied to coding using a larger number of frequency bands other format of color channels e.g. YIQ RGB etc. additional image channels e.g. for stereo vision or other multiple camera arrays .

The quantizer scale of a codec is a rule that governs the range of permissible choices for the quantization parameter QP . Generally only certain discrete values for the quantization parameters are allowed to be signaled in the compressed bitstream. The scale or range of permitted values of the QP for a codec desirably would have the following properties 1 provides fine and meaningful control of quality and coded bitrate 2 addresses the entire range of desired quality levels 3 addresses the entire range of bit depths encountered 4 is bit efficient for signaling in the compressed bitstream and 5 is computationally efficient particularly in the dequantization process.

With respect to the first property the range of permissible values for QP should have a sufficiently fine granularity such that any arbitrary bitrate R can be achieved to within a reasonably good degree of approximation i.e. to within reasonable bounds . For example the reasonable bounds might be that there exists a permissible quantization parameter in the scale that results in a coded bitrate no more than 10 from a desired target bitrate across the entire range of bitrates supported by the encoder and digital media data. In other practical examples of reasonable bounds if it is desired for an image to be stored in 1 MB of memory there should be some quantization parameter in the scale that can compress the image between a desired reasonable bounds such as 0.9 to 1.1 MB. Likewise if it is desired that the peak signal to noise ratio PSNR of the compressed frame be 40 dB then the scale should include some quantization parameter to produce a PSNR within a desired reasonable bound e.g. 39.8 dB to 40.2 dB .

As for the second property the QP should span a wide range of quality levels. A QP 1 should be permitted for a codec to allow lossless encoding of data. Sometimes a QP10000 may be desired to encode 16 bit per pixel channel data at a very low quality.

The above two properties could be met using a quantization scale that spans a large interval of integers or fractions. For instance a 16 bit wide quantizer may be defined with 14 significant bits and 4 fractional bits. This 16 bit wide quantizer scale provides adequate flexibility across bitrates and quality bitdepth levels. However such quantizer scale is overkill in practice because the gradation would be overly fine at high QP values. For instance there is practically no difference between the quantizer values 10000.0 10000.25 and 10000.5 or even 10100. The 16 bit wide quantizer scale design therefore would lead to redundancies in the signaling of QP.

However a more severe issue than the signaling redundancy for the 16 bit wide quantizer design is that such fine quantizer scales are inefficient from a computational standpoint. The decoder implements dequantization which as mentioned earlier is essentially a multiplication step. For computational efficiency it is desirable to keep the number of significant digits small in multiplication operations. For example if a quantizer value of about 10000 is chosen to achieve a desired quality or bitrate setting the QP instead to 0x2700 equal to 9984 would reduce the significant bits to less than 8. If the next permissible QP choice on the scale were defined as 0x2800 equal to 10240 it would be a meaningful yet fine step up from 0x2700. As compared to the 16 bit wide quantizer scale the computational efficiency would be improved while also achieving the fine control over quality and bitrate property.

The above properties can be achieved through use of a harmonic quantizer scale. The term harmonic is used to denote the fact that quantizers in the scale are simple fractions of each other. In other words the scale is a sequence of permissible QP values where values in the scale are all related as simple fractions of each other.

In one example implementation of a harmonic quantizer scale the scale of permissible QP values for a codec e.g. the representative codec is defined by the following formula or rule 

This formula meets the definition herein of a harmonic scale. It can be seen that if a certain QP q is in the scale then the scale also includes QP 2q within the limits of a maximum limit of QP allowed for the codec implementation . Likewise QP q 2 also is in the scale for q 31 .

In one exemplary codec implementing a harmonic quantizer scale based on this formula the index value i is an integer ranging from 1 to as high as an upper limit of 240 which upper limit is chosen to provide control of quality and bitrate across the dynamic range of digital media data supported by the codec. More generally the rule 1 defining the harmonic quantizer scale can be extended for alternative codec implementations to support a wider dynamic range data by allowing a larger range of the index i including values less than 1 and over 240. The rule also can be extended for other codec implementations to permit different quality gradations by changing the periodicity of the mantissa in the formula. For instance the mantissa may take on one of 32 values as opposed to 1 of 16 defined in the formula 1 or alternatively 1 in 12 or other number ratio. The exponents may be allowed to vary on the negative side as well either obviating the denormal rule or moving it to a different part of the domain.

With reference to a graph shows the variation of the quantization parameter QPwith the index i over a range up to i 160. It can be seen that the graph of the QP over the harmonic scale is close to logarithmic yet not exactly so. The harmonic quantization scale as defined by the formula 1 above guarantees two successive QP values to be at a ratio no greater than 17 16 1.0625. This is nearly twice as fine control of rate distortion compared to a logarithmic scale with six steps per octave that guarantees successive QP values are at a ratio of 2 1.1225 since 1.0625 is nearly the square root of 1.12 .

The harmonic quantization scale also can be varied to permit fractional or scaled arithmetic. The representative codec defines two modes of quantization dequantization operations non scaled and scaled. In the non scaled mode the harmonic quantizer scale defined in formula 1 is used. In the scaled mode of operation QP is defined to be of the rule defined by formula 1 . In other words the quantizer has two fractional bits. The max limit of the range of QP is reduced to 0x10000 but the scaled mode allows for finer QP adjustment at the low values. This is desirable for lossy encoding where the transform itself uses scaled or fixed point arithmetic for reducing the rounding error.

The mode of operation non scaled or scaled is indicated with a bit in the bitstream called the no scaled flag which is sent in the header at the image plane of the compressed bitstream. This bit also indicates whether the transform uses non scaled purely integer or scaled fixed point integer arithmetic.

In the representative encoder decoder various quantization parameters QP chosen from the harmonic quantizer scale can be applied to separate partitions across the digital media using a flexible quantization technique.

As discussed above the quantization operation is essentially a biased division by a quantization parameter QP which is performed at the encoder. The inverse quantization or multiplication operation is a multiplication by QP performed at the decoder. However alternative implementations of the flexible quantization described herein can utilize other forms of quantization including uniform and non uniform scalar or vector with or without dead zone etc. The quantization inverse quantization processes together introduce a loss in the original transform coefficient data which shows up as compression errors or artifacts in the decoded image. In a simplistic codec a certain fixed value of QP can be applied to all transform coefficients in a frame. While this may be an acceptable solution in some cases it has several deficiencies 

The human visual system is not equally sensitive to all frequencies or to all spatial locations within a frame or to all luminance and chrominance channels. Using different QP values for different coefficients may provide a visually superior encoding even with the same or smaller number of compressed bits. Likewise other error metrics can be suitably optimized as well.

Rate control or the ability of an encoder to produce a compressed file of a desired size is not easy to perform with a single QP across the entire frame.

Ideally therefore it should be possible to allow the encoder to vary QP across the image in an arbitrary manner. However this means that the actual value of QP used for each data partition macroblock tile channel sub band etc. should be signaled in the bitstream. This leads to an enormous overhead just to carry the QP signaling information making it unsuitable in practice. What is desired is a flexible yet bit economic means of signaling QP particularly for commonly encountered scenarios.

The flexible quantization technique provides the ability to vary quantization along various partitions or dimensions of the encoded digital media data. For example one implementation of the flexible quantization technique in the representative encoder decoder system can vary quantization over three dimensions over i spatial locations ii frequency sub bands and iii color channels. However quantization can be varied over fewer additional or other dimensions or partitions of the data in other alternative implementations of the flexible quantization technique. This technique also includes ways to efficiently signal the flexible quantization in the encoded media data. The benefit of this quantization approach is that the overhead incurred by quantization related side information is minimized for the primary usage scenarios while allowing maximum flexibility if desired by the encoder.

The flexible quantization technique provides fine spatial granularity control of the quantization. In one particular implementation the flexible quantization allows control over quantization applied to the frame tile or down to the macroblock. If the frame is not quantized uniformly then each tile can be quantized uniformly if a tile is not quantized uniformly then each macroblock will be quantized differently.

The flexible quantization further allows quantization control along the frequency sub band dimension. In one particular implementation the flexible quantization includes a sub band mode to specify a quantization relationship among frequency sub bands. The sub bands can be quantized uniformly or partially uniformly low pass sub band using DC sub band quantizer and or high pass sub band using low pass quantizer or independently.

The flexible quantization also allows control over quantization applied along the channel dimension of the data. In one particular implementation the flexible quantization includes a channel mode to specify a quantization relationship among color channels. The channels can be quantized uniformly or partially uniformly chrominance channels uniformly but luminance independently or independently.

The flexible quantization described herein also provides techniques to efficiently signal in side information of the compressed digital media data combinations of the above quantization control over spatial frequency sub band and channel that are of significance to the primary usage scenarios. Further the flexible quantization technique provides a way to efficiently define choice of quantizer by indexing from a defined subset of possible quantizers in the digital media data.

In the spatial dimension three choices are provided by the flexible quantization technique in the representative encoder decoder 

One means of signaling these possibilities is as follows A binary signal is sent in the bitstream at the frame level indicating whether the first possibility is true. If not a fixed length symbol is sent in the bitstream within each tile indicating the number of quantization rules used for this tile. If the tile uses more than 1 quantization rule then a variable length symbol is sent within each macroblock within the corresponding tile that indicates the quantization rule used by the macroblock. The decoder interprets the bitstream in a manner consistent with the encoder.

The representative encoder decoder uses a variant of the above signaling. A binary signal represented by a generic syntax element herein labeled as XXX FRAME UNIFORM is only sent at the frame level where XXX is a placeholder specifying the particular frequency sub band or channel dimension of quantizer control . At the tile level the number of distinct quantizer rules is sent in a tile level syntax element XXX QUANTIZERS only when the frame level syntax element XXX FRAME UNIFORM is false. If this number is equal to 1 it means that there is only one rule and therefore all macroblocks within the tile are uniformly coded with the same quantization rule indicating choice 2 and if not it indicates choice of the third possibility.

For flexible quantization across frequency bands the bitstream syntax of the representative encoder decoder defines two switches 

These switches are enabled at the frame layer when the entire frame uses the same quantization rule or at the tile layer otherwise. These switches are not enabled at the macroblock layer. All macroblocks within a tile therefore obey the same rules across frequency bands. A binary symbol is sent for each of the switches at the appropriate frame or tile layer.

For flexible quantization across channels the bitstream syntax of the representative encoder decoder permits three choices 

The representative encoder decoder uses a bitstream syntax defined in the code tables shown in that can efficiently encode the particular choice out of the flexible quantization options across the dimensions discussed above. With several quantization options available across each of the spatial frequency sub band and channel dimensions the number of permutations of the available quantization options is large. Adding to the complexity of flexible quantization across the three dimensions is the fact that the bitstream of the representative encoder decoder can be laid out in spatial or frequency ordering. However this does not change the available quantization options and only affects the serialization of the signals. The syntax defined in provides an efficient coding of the combinatorial flexible quantization rules.

Some salient features of the combinatorial quantization rules as defined in the syntax of the representative encoder decoder are as follows.

DC quantization is not allowed to vary on a macroblock basis. This allows the differential coding of quantized DC values without having to do an inverse scaling operation. Coding the DC band of an image tile with a relatively small quantizer even when the AC low pass and high pass bands are coded with varying quantization does not appreciably affect the bit rate.

At one end of the scale all transform coefficients within a frame use the same quantization parameter. At the other end of the scale low pass and high pass quantization rules for all channels are allowed to vary independently for each macroblock of the tile frame. The only restriction is that the number of distinct low pass and high pass quantizer rules covering all channels is each restricted to 16. Each such rule may specify independent values of quantization parameter for each channel.

Between these extremes several combinations are permitted as specified by the syntax tables shown in .

The specific quantization parameter QP in the representative encoder decoder is based on the harmonic quantizer scale discussed above. An 8 bit value of a quantizer parameter index QPI corresponds to a value of QP according to the formula 1 above which QP value can be relatively large. A second level of indexing is performed so that QPIs varying across macroblocks can be coded in an efficient manner.

More particularly the encoder can define a set in the bitstream containing between 1 and 16 QPI vectors. Each QPI vector is composed of one or more QPI values based on which XXX CHANNEL MODE is chosen. Such sets are defined for DC low pass and high pass sub bands based on the frequency band switch. Further the DC set has only one QPI vector since only one DC quantizer is permissible in a tile channel. The coding of these sets is defined in the tables shown in .

As shown in the tables of signaling of the QPI vector sets of DC low pass and high pass frequency sub bands occurs as follows. Based on the other coding modes the cardinality of each set i.e. the number of QPI vectors in the set is indicated for low pass and high pass sub bands at the start of the corresponding tile or frame. The cardinality of the DC set is 1. In the pseudo code tables the syntax element denoting cardinality is labeled as XXX QUANTIZERS. In practice XXX QUANTIZERS 1 is sent in the bitstream. The syntax elements labeled XXX QUANTIZER in the tables denotes the coding of QPI sets which is defined in the tables shown in .

At the macroblock level it is sufficient to send only the index QI of the desired QPI vector from within the QPI set. The tables in define the syntax of sending QI on a macroblock basis. The syntax element corresponding to QI is labeled XXX QUANTIZER INDEX. A variable length code is used to signal QI. First a one bit symbol is sent indicating whether QI is zero or not. If not then a fixed length code of length being given by ceil log XXX QUANTIZERS 1 is sent indicating the specific QI different from zero. This allows for an efficient encoding of a default quantization rule QI 0 with as low as one bit per macroblock. When XXX QUANTIZERS is 1 XXX QUANTIZER INDEX is uniquely zero and therefore QI need not be signaled.

The above description of the flexible quantization is specific to its implementation in a representative encoder and decoder and syntax. However the principles of this technique are extensible to other digital media compression systems and formats as well. For instance the representative encoder decoder has only three frequency sub bands DC low pass and high pass . But more generally alternative implementations of the flexible quantization can be extended in a straightforward manner to a multitude of frequency sub bands. Likewise alternative flexible quantization implementations can vary the quantizer at finer spatial granularity such as by sending quantization index QI information at the sub macroblock such as block level. Many extensions to the underlying principles of the flexible quantization technique are possible within the same framework.

The harmonic quantization scale described herein above also enables contrast adjustment of an image in the compressed domain. With QP chosen from a harmonic scale per rule 1 above and signaled by the index QI the contrast of the image can be easily adjusted in the compressed domain itself by tweaking the QI values signaled in the bitstream. The transform coefficients themselves need not be altered. In this way contrast adjustment can be accomplished without having to fully decode adjust the contrast in the spatial time domain and re encode the image. This is possible since the quantization index can be incremented or decremented across all the quantizer parameters for the various sub bands and color channels.

In the representative encoder decoder the compressed domain contrast adjustment technique performs contrast adjustment by uniformly incrementing or decrementing the quantization index values encoded in the QPI vector sets of quantizers tables shown in of the compressed bitstream . For example by incrementing the QI that defines all quantization parameters via the rule 1 above by the value 8 the contrast is adjusted by a factor approximately equal to sqrt 2 or 1.4.

Some additional adjustments may be needed if the mantissa parts of the various QPs vary by a large amount. Further this simple rule does not apply in the denormal portion of the quantizer rule 1 i.e. for QI between 1 and 15 inclusive. However for a large class of compressed images the harmonic scale and fixed length signaling of QI provides a simple means of adjusting contrast in the compressed domain itself. This has the benefit of computational ease and also minimizing re encoding error.

The above described processing techniques for flexible quantization can be realized on any of a variety of digital media encoding and or decoding systems including among other examples computers of various form factors including server desktop laptop handheld etc. digital media recorders and players image and video capture devices such as cameras scanners etc. communications equipment such as telephones mobile phones conferencing equipment etc. display printing or other presentation devices and etc. The flexible quantization techniques can be implemented in hardware circuitry in firmware controlling digital media processing hardware as well as in communication software executing within a computer or other computing environment such as shown in .

With reference to the computing environment includes at least one processing unit and memory . In this most basic configuration is included within a dashed line. The processing unit executes computer executable instructions and may be a real or a virtual processor. In a multi processing system multiple processing units execute computer executable instructions to increase processing power. The memory may be volatile memory e.g. registers cache RAM non volatile memory e.g. ROM EEPROM flash memory etc. or some combination of the two. The memory stores software implementing the described digital media encoding decoding with flexible quantization techniques.

A computing environment may have additional features. For example the computing environment includes storage one or more input devices one or more output devices and one or more communication connections . An interconnection mechanism not shown such as a bus controller or network interconnects the components of the computing environment . Typically operating system software not shown provides an operating environment for other software executing in the computing environment and coordinates activities of the components of the computing environment .

The storage may be removable or non removable and includes magnetic disks magnetic tapes or cassettes CD ROMs CD RWs DVDs or any other medium which can be used to store information and which can be accessed within the computing environment . The storage stores instructions for the software implementing the described digital media encoding decoding with flexible quantization techniques.

The input device s may be a touch input device such as a keyboard mouse pen or trackball a voice input device a scanning device or another device that provides input to the computing environment . For audio the input device s may be a sound card or similar device that accepts audio input in analog or digital form from a microphone or microphone array or a CD ROM reader that provides audio samples to the computing environment. The output device s may be a display printer speaker CD writer or another device that provides output from the computing environment .

The communication connection s enable communication over a communication medium to another computing entity. The communication medium conveys information such as computer executable instructions compressed audio or video information or other data in a modulated data signal. A modulated data signal is a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired or wireless techniques implemented with an electrical optical RF infrared acoustic or other carrier.

The described digital media encoding decoding with flexible quantization techniques herein can be described in the general context of computer readable media. Computer readable media are any available media that can be accessed within a computing environment. By way of example and not limitation with the computing environment computer readable media include memory storage communication media and combinations of any of the above.

The described digital media encoding decoding with flexible quantization techniques herein can be described in the general context of computer executable instructions such as those included in program modules being executed in a computing environment on a target real or virtual processor. Generally program modules include routines programs libraries objects classes components data structures etc. that perform particular tasks or implement particular abstract data types. The functionality of the program modules may be combined or split between program modules as desired in various embodiments. Computer executable instructions for program modules may be executed within a local or distributed computing environment.

For the sake of presentation the detailed description uses terms like determine generate adjust and apply to describe computer operations in a computing environment. These terms are high level abstractions for operations performed by a computer and should not be confused with acts performed by a human being. The actual computer operations corresponding to these terms vary depending on implementation.

In view of the many possible embodiments to which the principles of our invention may be applied we claim as our invention all such embodiments as may come within the scope and spirit of the following claims and equivalents thereto.

