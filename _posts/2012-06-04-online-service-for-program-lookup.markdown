---

title: Online service for program lookup
abstract: An integrated program lookup browser provides an integrated system with an online program lookup web service that assists the user in finding these unrecognized files, protocols and web page objects by allowing the user to perform a program lookup on a web service that can search one or more databases and return the URL to download the appropriate application or protocol or return the actual program or protocol.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08732156&OS=08732156&RS=08732156
owner: Microsoft Corporation
number: 08732156
owner_city: Redmond
owner_country: US
publication_date: 20120604
---
This application claims priority to U.S. patent application Ser. No. 11 424 805 filed Jun. 16 2006 entitled Online Service For Program Lookup the disclosure of which is incorporated in its entirety by reference herein.

This description relates generally to application programs and more specifically to integrating web browsers and web services to provide an integrated program lookup service for users.

Web browsers are increasingly used to access information on the World Wide Web WWW . As this use has increased so have the types of information being accessed. Some information may be unrecognized by the browser. Likewise the format of the information may be unintelligible. Often the user may not be able to access or process the information without downloading another application. Conventional browsers are typically unable to assist the user in accessing unrecognized files protocols or web page objects that may require unrecognized applications to load within the browser using an online program lookup. Typically users have to search for these unrecognized programs and protocols if they are not already present on the user s computer.

The following presents a simplified summary of the disclosure in order to provide a basic understanding to the reader. This summary is not an extensive overview of the disclosure and it does not identify key critical elements of the invention or delineate the scope of the invention. Its sole purpose is to present some concepts disclosed herein in a simplified form as a prelude to the more detailed description that is presented later.

An integrated program lookup browser provides an integrated system with an online program lookup web service that assists the user in finding these unrecognized files protocols and web page objects by allowing the user to perform a program lookup on a web service that can search one or more databases and return the URL to download the appropriate application or protocol or return the actual program.

Many of the attendant features will be more readily appreciated as the same becomes better understood by reference to the following detailed description considered in connection with the accompanying drawings.

The detailed description provided below in connection with the appended drawings is intended as a description of the present examples and is not intended to represent the only forms in which the present example may be constructed or utilized. The description sets forth the functions of the example and the sequence of steps for constructing and operating the example. However the same or equivalent functions and sequences may be accomplished by different examples.

The examples below describe an online service for program lookup. Although the present examples are described and illustrated herein as being implemented in a browser system the system described is provided as an example and not a limitation. As those skilled in the art will appreciate the present examples are suitable for application in a variety of different types of program lookup systems.

The local area network may include a plurality of conventional computers not shown and conventional peripheral equipment not shown coupled together utilizing conventional topologies token star and the like and conventional switching equipment. Computing devices and the like may include televisions VCRs cellular telephones appliances and the like. These computing devices may be coupled to the Internet utilizing conventional techniques known to those skilled in the art.

The local area network may include a conventionally constructed ISP network in which a number or plurality of subscribers may utilize telephone dial up ISDN DSL cellular telephone cable modem or similar connections to couple their computer to one or more server computers that provide a connection to the World Wide Web via the Internet .

The wide area network or World Wide Web is conventionally constructed and may include the Internet or equivalent structure for providing a wide area network. The wide area network may couple to any number of computers through any number of wide area and local area connections.

A computing device running a conventional browser may include a conventional operating system. The computing device running a conventional browser may produce a browser display . In addition to displaying information that may be retrieved over the World Wide Web other information and may be displayed. For example the browser displays may be displayed from time to time if the user attempts to access an unrecognized file protocol or web page object .

The exemplary unrecognized file conventional browser display is an illustration of what a user would see on a computer screen when using a browser to access a file with an unrecognized file extension. When the user clicks on a link or navigates to a file by typing a location into the URL box that has an unrecognized file extension the Browser searches the registry for the file handler that provides the correct application to use to open the file but is unable to find it. When this occurs the Browser displays an error and prompts the user with a dialog box that gives the user the option to save the file to disk or cancel the attempt to open the file .

The exemplary unrecognized protocol browser display is an illustration of what a user would see on a computer screen when using a browser to access a file or link with an unrecognized protocol. When the user clicks on a link or navigates to a file by typing a location into the URL box using an unrecognized protocol the browser may search the registry for the protocol handler but may be unable to find it. When this occurs the browser may display an error and a web page with an error stating the browser encountered an unrecognized protocol and could not open the URL .

The exemplary unrecognized web page object browser display is an illustration of what a user would see on a computer screen when using a browser to load a web page containing an object that may require an unrecognized application to load the object within the browser. When the user navigates to a web page containing an object that may require an unrecognized application to load the object within the browser the browser searches the HTML code for the Class ID CLSID field located in the tag. The browser searches the registry for the CLSID found in the web page to determine the correct application to use to load the object within the browser . If the CLSID is not found in the registry the Browser searches the HTML code for the codebase field located in the tag. The codebase field is typically where the URL for the web location for the Browser to download the desired application to load the object within the browser .

If the codebase is empty or missing the Browser may fail to load the object. This failure is typically a silent failure and may result in an error which loads the web page into the Browser without the object loaded. The Browser typically displays a default image in place of the object.

When the user is using the browser to access a file by clicking on a link or navigating to the file by typing a location into the URL Box for which there may not be a registered file extension handler in the registry the browser may give the user the option to either save the file to disk or cancel . When the user is using the browser to access a file by clicking on a link or navigating to the file by typing a location into the URL box using an unrecognized protocol the browser may display an error page to the user.

When the user is using the browser to access a web page that contains an object that may require an unrecognized application to load the object within the Browser the browser may display the web page without the object loaded and may substitute a default image in the object s place . One skilled in the art could implement a variety of displays or functions to occur in place of the object that could not load in the web page because it may require an unrecognized application.

The local area network may include a plurality of computers not shown and conventional peripheral equipment not shown coupled together utilizing conventional topologies token star and the like and conventional switching. Computing devices and the like may include televisions VCRs cellular telephones appliances and the like. The computing devices may be coupled to the Internet utilizing conventional techniques known to those skilled in the art.

The local area network may include a conventionally constructed ISP network in which a number or plurality of subscribers utilize telephone dial up ISDN DSL cellular telephone cable modem or the like connections to couple their computer to one or more server computers that provide a connection to the World Wide Web via the Internet .

The wide area network or World Wide Web is conventionally constructed and may include the Internet or equivalent structure for providing a wide area network. The wide area network may couple to any number of computers through any number of wide area and local area connections. The client computer running the integrated program lookup browser may include a conventional operating system and produce a browser display . The integrated program lookup browser may be structured to provide the program lookup capability and may present a service of integrated program lookup browser displays that may include those for an unrecognized file extension an unrecognized protocol and an unrecognized web page object or application . Such displays tend to allow for cases of processing information that may be unrecognized by an application such as a browser.

The unrecognized file extension display is an illustration of what a user would see on a computer screen when using the integrated program lookup browser to access a file with an unrecognized file extension. When the user clicks on a link or navigates to a file by typing a location into the URL box that has an unrecognized file extension the integrated program lookup browser searches the registry for the file handler that provides the correct application to use to open the file but may be unable to find it. When this occurs the integrated program lookup browser may display an error and may prompt the user with a dialog box that gives the user the option to use the Web Service save the file to disk or cancel the attempt to open the file .

The unrecognized protocol display is an illustration of what a user would see on a computer screen when using the integrated program lookup browser to access a file or link with an unrecognized protocol. When the user clicks on a link or navigates to a file in the URL Box using an unrecognized protocol the integrated program lookup browser may search the registry for the protocol handler but may be unable to find it. When this occurs the integrated program lookup browser may display an error and display a web page with a message providing the user with the option to use the web service to look for the unrecognized protocol by clicking on a link that typically sends information to the web service.

The unrecognized web page object or application display is an illustration of what a user would see on a computer screen when using the integrated program lookup browser to load the object within the integrated program lookup browser. When the user navigates to a web page containing an object that may require an unrecognized application to load the object within the integrated program lookup browser the integrated program lookup browser may search the HTML code of the web page for the Class ID CLSID field located in the tag for the object to be loaded . The integrated program lookup browser may search the registry for the CLSID found in the web page to determine the correct application to use to load the object within the integrated program lookup browser . If the CLSID is not found in the registry the integrated program lookup browser may search the HTML code of the web page for the codebase field located in the tag of the object to be loaded .

The codebase field should have a URL for the location where the integrated program lookup browser can download the desired application to load the object . If the codebase is empty or missing the integrated program lookup browser may automatically send the CLSID information to the web service to perform a program lookup. The web service may perform a program lookup using one or more databases and may send the URL for the integrated program lookup browser to access to download the desired application. The integrated program lookup browser may load the web page and may display a message providing the user the option to download the required application to create an instance of the object in the web page by clicking on the link that directs the user to the URL found by the web service. After the user clicks on the link to the URL the user may have the option to download the required application to load the object .

The method communicates information about the unrecognized file extension to an online web service. The integrated program lookup browser can implement three variations of the method to handle a file with an unrecognized file extension. Each of the variations of the method to handle the unrecognized file extension typically sends information to the web service. The variations will be described in further detail below.

Now we return to block where the user is using the integrated program lookup browser. Next the user accesses a file by clicking on a link or navigating to the file by typing a location into the URL Box using an unrecognized protocol . Then the integrated program lookup browser may use a method to handle an unrecognized protocol . The method to handle an unrecognized protocol typically sends information to the web service to perform a program lookup to determine the URL of the location to download the appropriate protocol or find the actual protocol.

Again returning to block where the user is using the integrated program lookup browser. Next the user accesses a web page that contains an object that may require an unrecognized application to load the object within the integrated program lookup browser . Then the integrated program lookup browser uses a method to handle objects in web pages that may require an unrecognized application to load the object within the integrated program lookup browser . The method to handle these objects may send information to the web service to perform a program lookup to determine the URL of the location to download the appropriate application or find the actual application. The methods and as well as the variations and of method will now be described in more detail below.

If the file has an extension the integrated program lookup browser identifies the extension of the file . Next the registry is searched for the appropriate file handler . Then the integrated program lookup browser determines if the file handler is found .

If the file handler is found the integrated program lookup browser uses the file handler to open the file with the correct application . The file can be opened within the current integrated browser window a new integrated browser window or in a separate application window .

Returning to if the file handler is not found the user may be given the option to use the web service . If the user chooses to use the web service the integrated program lookup browser may send the file extension as data to the web service. The web service may perform a program lookup on one or more databases to find the appropriate application to access the file . If the appropriate application is found the integrated program lookup browser may receive the URL of the website to download the application from the web service or may receive the actual application .

Returning to if the appropriate application is not found by the web service the user may receive a message indicating the application could not be found and the file could not be opened . The integrated program lookup browser may prompt the user to either save the file to disk or cancel the operation .

Returning to if the user decides not to use the web service the integrated program lookup browser may prompt the user to save the file to disk or cancel the operation .

Returning to if the file does not have an extension the integrated program lookup browser checks to see if the file has a MIME type . If the file has a MIME type it offers the user a choice to use the web service .

Returning to if the user decides not to use the web service the integrated program lookup browser may prompt the user to save the file to disk or cancel the operation . Returning to if the file does not have a MIME type the integrated program lookup browser may prompt the user to save the file to disk or cancel the operation .

If the file has an extension the integrated program lookup browser identifies the extension of the file . Then the registry is searched for the appropriate file handler . The integrated program lookup browser determines if the file handler is found .

If the file handler is found the integrated program lookup browser uses the file handler to open the file with the correct application . The file can be opened within the current integrated browser window a new integrated browser window or in a separate application window .

Returning to if the file handler is not found the integrated program lookup browser checks to see if the file has a MIME type . If the file has a MIME type the user is given the option to use the web service . If the user chooses to use the web service the integrated program lookup browser may send the file extension and MIME type as data to the web service. The web service may perform a program lookup on one or more databases to find the appropriate application to access the file . If the appropriate application is found the integrated program lookup browser may receive the URL of the website to download the application from the web service or may receive the actual application .

Returning to if the appropriate application is not found by the web service the user may receive a message indicating the application could not be found and the file could not be opened . The integrated program lookup browser may prompt the user to either save the file to disk or cancel the operation .

Returning to if the user chooses not to use the web service the integrated program lookup browser may prompt the user to save the file to disk or cancel the operation .

Returning to if the file does not have a MIME type the user is also given the option to save the file to disk or cancel .

Returning to if the file does not have an extension the integrated program lookup browser checks to see if the file has a MIME type . If the file has a MIME type the integrated program lookup browser may give the user the option to use the web service . If the user chooses to use the web service the integrated program lookup browser sends the MIME type as data to the web service.

Returning to if the user chooses not to use the web service the integrated program lookup browser may prompt the user to save the file to disk or cancel the operation .

Returning to if the file does not have a MIME type the user is also given the option to save the file to disk or cancel .

If the file has an extension the integrated program lookup browser identifies the extension of the file . Next the registry is searched for the appropriate file handler . Then the integrated program lookup browser determines if the file handler is found .

If the file handler is found the integrated program lookup browser uses the file handler to open the file with the correct application . The file can be opened within the current integrated browser window a new integrated browser window or in a separate application window .

Returning to if the file handler is not found the integrated program lookup browser gives the user the option to use the web service . If the user chooses to use the web service the integrated program lookup browser sends the file extension as data to the web service. The web service may perform a program lookup on one or more databases to find the appropriate application to access the file . If the appropriate application is found the integrated program lookup browser may receive the URL of the website to download the application from the web service or may receive the actual application .

Returning to if the appropriate application is not found by the web service the user may receive a message indicating the application could not be found and the file could not be opened . Next the integrated program lookup browser may prompt the user to either save the file to disk or cancel the operation .

Returning to if the user chooses not to use the web service the user may be prompted to save the file to disk or cancel the operation .

Returning to if the file does not have a file extension the integrated program lookup browser checks to see if the file has a MIME type . If the file has a MIME type the integrated program lookup browser may give the user the option to use the web service .

Returning to if the file does not have a MIME type the integrated program lookup browser gives the user the option to create a hash of the file to send to the web service . If the user chooses to create a hash of the file the user is given the option to use the web service .

Returning to if the user does not wish to create a hash of the file the integrated program lookup browser gives the user the option to send the entire file to the web service . If the user decides to send the complete file the user is given the option to use the web service

Returning to if the user does not want to send the file to the web service the user is given the option to save the file to disk or cancel .

Returning to if the protocol handler is not found the integrated program lookup browser may open a new window with an error page and a link to use the web service . The user is given the option to click on the link to use the web service . If the user chooses to click on the link the integrated program lookup browser may send the unrecognized protocol as data to the web service. The web service may perform a protocol lookup on one or more databases to find the appropriate protocol to access the file . If the appropriate protocol is found the integrated program lookup browser may receive the URL of the website to download the protocol from the web service or may receive the actual protocol . Returning to if the appropriate protocol is not found by the web service the user may receive a message indicating the protocol could not be found and the URL could not be accessed .

Returning to if the user chooses not to click on the link the URL could not be opened using the unrecognized protocol .

If the CLSID is found in the registry the integrated program lookup browser uses the application associated with the CLSID in the registry to load an instance of the object in the web page.

Returning to if the CLSID is not found in the registry the integrated program lookup browser may search the HTML code of the web page for the codebase field associated with the tag of the object to be loaded .

If the codebase contains a URL the integrated program lookup browser uses the codebase to give the user the option to download the required application to create an instance of the object in the integrated program lookup browser .

Returning to if the codebase is blank or empty the integrated program lookup browser may send the CLSID of the object as data to the web service . The web service may perform a program lookup for the CLSID in one or more databases. The web service determines if the CLSID is found in the one or more databases .

If the CLSID and the appropriate program are found the integrated program lookup browser may load a default image within the web page in place of the object . Next it may give the user the option to download the required software from the URL that was found by the web service or download the software from the web service .

Returning to if the appropriate application is not found by the web service the integrated program lookup browser may load the web page with a silent error and a default image may be loaded within the web page in place of the object .

The integrated program lookup browser may communicate with the web service through an interface over a network connection . Each request may be sent from the integrated program lookup browser through an interface with the web service . The interface can transmit and receive data through a query string through the HTTP POST protocol or their equivalent.

The web service may be composed of one or more databases containing URLs for programs and protocols. Those skilled in the art will realize that any variety of information could be contained on one or more databases . When the integrated program lookup browser requests a lookup by the web service the web service accesses the one or more databases .

After completing the search of the one or more databases the web service sends the appropriate information back to the integrated program lookup browser . The information sent back may be the URL to download the desired program or protocol necessary to access a file or link may be the actual program or protocol or may be a notification that no information could be found. The integrated program lookup browser receives the information from the web service and may notify the user.

For example the computer can be implemented with numerous other general purpose or special purpose computing system configurations. Examples of well known computing systems may include but are not limited to personal computers hand held or laptop devices microprocessor based systems multiprocessor systems set top boxes gaming consoles consumer electronics cellular telephones PDAs and the like.

The computer includes a general purpose computing system in the form of a computing device . The components of computing device can include one or more processors including CPUs GPUs microprocessors and the like a system memory a system bus that couples the various system components and the method described above. Processor processes various computer executable instructions including those to execute and run the integrated program lookup browser to control the operation of computing device and to communicate with other electronic and computing devices not shown . The system bus represents any number of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures.

The system memory may include computer readable media in the form of volatile memory such as random access memory RAM and or non volatile memory such as read only memory ROM . A basic input output system BIOS is stored in ROM. RAM typically contains data and or program modules that are immediately accessible to and or presently operated on by one or more of the processors . The integrated program lookup browser may be stored in RAM and may be accessible to and or presently operated on by one or more of the processors .

Mass storage devices may be coupled to the computing device or incorporated into the computing device by coupling to the buss. Such mass storage devices may include a magnetic disk drive which reads from and writes to a removable non volatile magnetic disk e.g. a floppy disk or an optical disk drive that reads from and or writes to a removable non volatile optical disk such as a CD ROM or the like . Computer readable media such as typically embody computer readable instructions data structures program modules and the like supplied on floppy disks CDs portable memory sticks and the like. The integrated program lookup browser may be provided to the CPU by the peripheral device .

Any number of program modules can be stored on the hard disk Mass storage devices ROM and or RAM including by way of example an operating system one or more application programs other program modules and program data. The integrated program lookup browser may be stored on the hard disk or made available through a peripheral drive . The registry of the operating system may be stored on the hard disk or made available through a peripheral drive . The registry provides the integrated program lookup browser the data to search for a file handler a protocol handler or an application that may be required to load an object within the integrated program lookup browser. Each of such operating system application programs other program modules and program data or some combination thereof may include an embodiment of the systems and methods described herein.

A display device can be connected to the system bus via an interface such as a video adapter . The display device displays the integrated program lookup browser to the user. A user can interface with computing device via any number of different input devices such as a keyboard pointing device joystick game pad serial port and or the like. These and other input devices are connected to the processors via input output interfaces that are coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port and or a universal serial bus USB .

Computing device can operate in a networked environment using connections to one or more remote computers through one or more local area networks LANs wide area networks WANs and the like. The computing device is connected to a network via a network adapter or alternatively by a modem DSL ISDN interface or the like.

Those skilled in the art will realize that storage devices utilized to store program instructions can be distributed across a network. For example a remote computer may store an example of the process described as software. A local or terminal computer may access the remote computer and download a part or all of the software to run the program. Alternatively the local computer may download pieces of the software as needed or distributively process by executing some software instructions at the local terminal and some at the remote computer or computer network . Those skilled in the art will also realize that by utilizing conventional techniques known to those skilled in the art that all or a portion of the software instructions may be carried out by a dedicated circuit such as a DSP programmable logic array or the like.

