---

title: Client token storage for cross-site request forgery protection
abstract: Systems and methods can secure against cross-site request forgery using client-side token storage. A client browser can initiate an action associated with a first web service and generate a token. The token may be stored in client-side storage at the computing device. An indicator of the action may also be stored within the client-side storage. A return link, associated with a passed copy of the token, may be generated. The client may perform the redirect and return to the first web service according to the return link. The passed copy of the token can be extracted from the return link. The indicator of the action and the stored token may be loaded from the client storage. The passed copy of the token and the stored token may be compared. The action according to the indicator of the action may be performed in response to the comparison matching.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09104838&OS=09104838&RS=09104838
owner: GOOGLE INC.
number: 09104838
owner_city: Mountain View
owner_country: US
publication_date: 20121114
---
The present disclosure relates to systems and methods for securing against forged cross site requests and more particularly to client side token storage for protection against cross site request forgeries in the context of browser redirections.

Cross site request forgery XSRF is a type of web exploit where an attacker attempts to perform actions on behalf of an authenticated user without the knowledge of the authenticated user. The attack generally involves creating malicious web content. When a victim browses the malicious web content the victim s browser is caused to issue an attacker controlled request to a third party web service. If the victim is authenticated to the third party service the request will be sent with the browser s cookies or other authentication. Having the victim s authentication in place the malicious code can execute undesirable actions on behalf of the victim at the third party service. These undesirable actions may be carried out without the victim s consent. As examples where the third party web service is a blog system or an email system the undesirable actions could include deleting or modifying a blog or adding an email forwarding rule.

In a web based system where one service redirects to another service for example to complete a login process or payment transaction the functionality for returning from the redirection service and jumping back into the original service creates a window for XSRF attacks. These attacks may involve calling into the return page as though a legitimate use is simply returning from a redirection. There is a need in the art for effectively protecting against cross site request forgeries particularly in the context of browser redirections.

In certain example embodiments described herein methods and systems can secure against cross site request forgery using client side token storage. A client browser can initiate an action associated with a first web service and generate a token. The token may be stored in client side storage at the computing device. An indicator of the action may also be stored within the client side storage. A return link associated with a passed copy of the token may be generated. The client may perform the redirect and return to the first web service according to the return link. The passed copy of the token can be extracted from the return link. The indicator of the action and the stored token may be loaded from the client storage. The passed copy of the token and the stored token may be compared. The action according to the indicator of the action may be performed in response to the comparison matching.

These and other aspects objects features and advantages of the example embodiments will become apparent to those having ordinary skill in the art upon consideration of the following detailed description of illustrated example embodiments.

The methods and systems described herein enable cross site request forgery protection using client side token storage. A web based system may temporarily redirect from a first web service to a second web service. This redirection may occur for example to complete a login process or payment transaction at the second web service prior to continuing operations at the first web service. Code or script associated with the redirection can generate and store a token in a memory or storage associated with the client browser. A copy of the token may also be passed through the redirection process. An indicator of the next requested action may also be stored in the memory or storage associated with the client browser.

Upon return from the browser redirection the stored copy of the token and the passed copy of the token may be compared. The comparison may be required to show a match before the next action is processed. The next action may also be verified to match the indicator of the next requested action that was stored at the client. Thus it may be required that only an action originally requested by the client browser be processed. It may also be required that the return entry point be accompanied by a matching copy of a token that was previously stored with the client.

The functionality of the various example embodiments will be explained in more detail in the following description read in conjunction with the figures illustrating the program flow. Turning now to the drawings in which like numerals indicate like but not necessarily identical elements throughout the figures example embodiments are described in detail.

The client system one or more systems associated with the web service one or more systems associated with the login service and any other computing machines associated with this technology may be any type of computing machine such as but not limited to those discussed in more detail with respect to . Furthermore any modules associated with any of these computing machines or any other modules scripts web content software firmware or hardware associated with the technology presented herein may by any of the modules discussed in more detail with respect to . The computing machines discussed herein may communicate with one another as well as other computer machines or communication systems over one or more networks such as network . The network may include any type of data or communications network including any of the network technology discussed with respect to .

The web service may be any service provided online via a networked web server to be interfaced through a client browser . Examples may include a web site web based email online banking social media systems and any other software services provided online as a cloud service or as a cloud application.

The client browser may be any software configured to execute on the client system computing machine for browsing to rendering content from and interacting with the web service other web services web sites or various types of online content. It should be appreciated that according to one or more embodiments the client browser may be any other application script or software capable of interfacing with one or more web servers to perform the network transactions presented herein.

The client storage may be any memory or other storage associated with the client browser for persisting information associated with code or scripts executing in association with the client browser . The client storage may be accessible according to a policy. For example information within the client storage may only be accessible to a given web domain or web site that originally placed the information into the client storage . As such association of the storage with a given web site or web domain may limit access to the client storage . Some examples of implementations for client storage may include sessionStorage e.g. as in HTML 5 localStorage e.g. as in HTML 5 Flash cookies and any other client side data storage associated with a web browser.

In the illustrated example the client browser is temporarily redirected to content associated with the login service . However it should be appreciated that any other service may be the destination of the temporary browser redirection and the login service is merely one example.

A return link may be passed to the login page for use when returning from the redirected browsing. The return link may be browsed by the client browser upon completion of features associated with the login page causing the return script to be loaded from the web service .

The client browser may generate a token prior to the redirection. The generated token may comprise one or more of a random number a nonce a pseudorandom number a user identifier client identifier time stamp date stamp or so forth. The token may incorporate encrypted information or other cryptographically protected information. The token may be stored within the client storage as a stored token as well as passed through the redirection as a passed token . The passed token may be embedded within or otherwise transmitted along with the return link . The stored token may be saved to the client storage along with an action indicator . The action indicator can store the intended action being initiated from the initiating script .

Upon return from the redirected browsing to the return script matching of the stored token and the passed token may be verified. If the passed token and the stored token match the action indicator recovered from the client storage may be used to transition the client browser to the action . The action may be associated with or loaded from the web service . According to the token matching verification the action may only be carried out with the recovery of the previously stored action indicator and stored token . Thus the return from the browser redirection may be trusted as a legitimate redirection and not as the result of a forged cross site request. Since the action performed is tied to the stored action indicator even where an attacker may somehow have the correct token the attacker could only perform an action initiated at the client browser and thus stored to the action indicator . If the passed token and the stored token do not match an error message may be displayed the user may be asked for confirmation of the action a new action may be requested from the user or various other recovery mechanisms may be performed.

It should be appreciated that transition of the client browser from the login page to the return script may correspond to loading of the return script from the web service to the client browser . Accordingly a dotted line coupling is illustrated between the loading of the return script from the web service and the client browser transition from the login page to the return script .

Similarly transition of the client browser from the return script to the action may correspond to loading of scripts code or other content associated with action being loaded from the web service to the client browser . Accordingly a dotted line coupling is illustrated between the loading of action from the web service and the client browser transition from the return script to the action .

The initiating script the login page the return script and the action may be any form of script code or web content and may include hyper text markup language HTML JavaScript Java Ajax Flash other such client side scripts or any combination thereof and may be provided via Hypertext Transfer Protocol HTTP JavaScript Object Notation JSON Representational State Transfer REST a remote procedure call RPC mechanism or any of various other network protocols. This script or code may be loaded from the web server or the login service to the client browser for execution on or in association with the client browser . It should be appreciated that any combinations of the initiating script the return script and the action may actually share common scripts files configured to execute in different states or contexts.

In the illustrated example the client browser is temporarily redirected to login page associated with the login service . However it should be appreciated that any other service may be the destination of the temporary redirection and the login service is merely one example. Other services that may be redirected to by the web service may include payment processing services authentication services media services or any other services to which the original web service may need to temporarily redirect and then return. Such redirections may be the targets of forged cross site request. The techniques presented herein may be useful for protecting against such forged cross site requests.

According to methods and blocks described in the embodiments presented herein and in alternative embodiments certain blocks can be performed in a different order in parallel with one another omitted entirely and or combined between different example methods and or certain additional blocks can be performed without departing from the scope and spirit of the invention. Accordingly such alternative embodiments are included in the invention described herein.

In block a client browser can receive an initiating script from a web service . The initiating script may be delivered in response to the client browser requesting or browsing to a web page or other content associated with the web service delivering the initiating script .

In block the client browser can execute the initiating script thereby initiating an action associated with the web service . Initiation of the action may arise directly according to execution of the initiating script . Alternatively initiation of the action may occur in response to clicking a button or activating another user interface control associated with the initiating script at the client browser .

In block the initiating script executing in association with the client browser may generate a token. The token may be generated as part of protection against cross site request forgeries. Such forgery protection may be called upon when the client browser may be redirected away from the web service to another site or web service. One example of another site or web service may be a login service . For example if the action initiated in block requires a user to be logged in a browser redirection to a login page may be performed prior to performing the action . The generated token may comprise one or more of a random number a nonce a pseudorandom number a user identifier client identifier or so forth. The token may be generated or combined so as to be unlikely to be guessed by a third party attacker. The token may include encrypted information.

In block the initiating script executing in association with the client browser may store the token and an action indicator into the client storage . The token generated in block may be saved as a stored token into the client storage during the redirection away from the web service to another site or web service. The action indicator can indicate the action being initiated. The action indicator may be saved to the client storage during the redirection away from the web service to another site or web service. The stored token and the action indicator may be maintained within the client storage during the browser redirection. The stored token and the action indicator may be used upon return from the redirection to verify return from a legitimate redirection and not a result of a forged cross site request.

In block the initiating script executing in association with the client browser may redirect browsing to another service along with a return link and a copy of the token generated in block . The return link may be used to return from the redirected browsing. The token may be a copy of the token generated in block and may be provided as a passed token . The passed token may be embedded within the return link or the passed token and the return link may be otherwise transmitted together. The illustrated example for the other service is a login service having an associated login page to which the client browser is temporarily redirected for login. However it should be appreciated that any other service may be the destination of the temporary redirection and the login service is merely one example.

In block the client browser may redirect to the login page to perform the login process. The login page may be provided to the client browser by the login service . Again it should be appreciated that any other service may be the destination of the temporary redirection and the login service is merely one example. The login process associated with the login page may pass through the passed token and the return link .

In block the redirection of the client browser to the login page in the illustrated example may continue by following the provided return link upon completion. The return link may be browsed to upon completion of the login page . The return link may be browsed by the client browser causing a return script to be loaded from the web service . The return link may be passed to the client browser along with the passed token . The passed token may be embedded within the return link .

In block the return script executing in association with the client browser may extract the passed token . The passed token may be embedded within the return link or otherwise provided along with the return link .

In block the return script executing in association with the client browser may recover the stored token and the action indicator from the client storage . The stored token and the action indicator may have been maintained within the client storage during the browser redirection away from the web service to the other site or web service such as the login service in the illustrated example .

In block the return script executing in association with the client browser may verify that the stored token matches the passed token . The action associated with the action indicator may be executed at the client browser in response to the passed token matching the stored token . The action may be associated with or loaded from the web service . According to the token matching verification the action may only be carried out with the recovery of the previously stored action indicator and stored token . Thus the return from the browser redirection may be trusted as a legitimate redirection and not as the result of a forged cross site request.

After block the method ends. Of course client side storage of tokens to protect against XSRF attacks may be continued through repeated or continual application of method .

The computing machine may be implemented as a conventional computer system an embedded controller a laptop a server a mobile device a smartphone a set top box a kiosk a vehicular information system one more processors associated with a television a customized machine any other hardware platform or any combination or multiplicity thereof. The computing machine may be a distributed system configured to function using multiple computing machines interconnected via a data network or bus system.

The processor may be configured to execute code or instructions to perform the operations and functionality described herein manage request flow and address mappings and to perform calculations and generate commands. The processor may be configured to monitor and control the operation of the components in the computing machine . The processor may be a general purpose processor a processor core a multiprocessor a reconfigurable processor a microcontroller a digital signal processor DSP an application specific integrated circuit ASIC a graphics processing unit GPU a field programmable gate array FPGA a programmable logic device PLD a controller a state machine gated logic discrete hardware components any other processing unit or any combination or multiplicity thereof. The processor may be a single processing unit multiple processing units a single processing core multiple processing cores special purpose processing cores co processors or any combination thereof. According to certain embodiments the processor along with other components of the computing machine may be a virtualized computing machine executing within one or more other computing machines.

The system memory may include non volatile memories such as read only memory ROM programmable read only memory PROM erasable programmable read only memory EPROM flash memory or any other device capable of storing program instructions or data with or without applied power. The system memory also may include volatile memories such as random access memory RAM static random access memory SRAM dynamic random access memory DRAM and synchronous dynamic random access memory SDRAM . Other types of RAM also may be used to implement the system memory . The system memory may be implemented using a single memory module or multiple memory modules. While the system memory is depicted as being part of the computing machine one skilled in the art will recognize that the system memory may be separate from the computing machine without departing from the scope of the subject technology. It should also be appreciated that the system memory may include or operate in conjunction with a non volatile storage device such as the storage media .

The storage media may include a hard disk a floppy disk a compact disc read only memory CD ROM a digital versatile disc DVD a Blu ray disc a magnetic tape a flash memory other non volatile memory device a solid sate drive SSD any magnetic storage device any optical storage device any electrical storage device any semiconductor storage device any physical based storage device any other data storage device or any combination or multiplicity thereof. The storage media may store one or more operating systems application programs and program modules such as module data or any other information. The storage media may be part of or connected to the computing machine . The storage media may also be part of one or more other computing machines that are in communication with the computing machine such as servers database servers cloud storage network attached storage and so forth.

The module may comprise one or more hardware or software elements configured to facilitate the computing machine with performing the various methods and processing functions presented herein. The module may include one or more sequences of instructions stored as software or firmware in association with the system memory the storage media or both. The storage media may therefore represent examples of machine or computer readable media on which instructions or code may be stored for execution by the processor . Machine or computer readable media may generally refer to any medium or media used to provide instructions to the processor . Such machine or computer readable media associated with the module may comprise a computer software product. It should be appreciated that a computer software product comprising the module may also be associated with one or more processes or methods for delivering the module to the computing machine via the network any signal bearing medium or any other communication or delivery technology. The module may also comprise hardware circuits or information for configuring hardware circuits such as microcode or configuration information for an FPGA or other PLD.

The input output I O interface may be configured to couple to one or more external devices to receive data from the one or more external devices and to send data to the one or more external devices. Such external devices along with the various internal devices may also be known as peripheral devices. The I O interface may include both electrical and physical connections for operably coupling the various peripheral devices to the computing machine or the processor . The I O interface may be configured to communicate data addresses and control signals between the peripheral devices the computing machine or the processor . The I O interface may be configured to implement any standard interface such as small computer system interface SCSI serial attached SCSI SAS fiber channel peripheral component interconnect PCI PCI express PCIe serial bus parallel bus advanced technology attachment ATA serial ATA SATA universal serial bus USB Thunderbolt FireWire various video buses and the like. The I O interface may be configured to implement only one interface or bus technology. Alternatively the I O interface may be configured to implement multiple interfaces or bus technologies. The I O interface may be configured as part of all of or to operate in conjunction with the system bus . The I O interface may include one or more buffers for buffering transmissions between one or more external devices internal devices the computing machine or the processor .

The I O interface may couple the computing machine to various input devices including mice touch screens scanners biometric readers electronic digitizers sensors receivers touchpads trackballs cameras microphones keyboards any other pointing devices or any combinations thereof. The I O interface may couple the computing machine to various output devices including video displays speakers printers projectors tactile feedback devices automation control robotic components actuators motors fans solenoids valves pumps transmitters signal emitters lights and so forth.

The computing machine may operate in a networked environment using logical connections through the network interface to one or more other systems or computing machines across the network . The network may include wide area networks WAN local area networks LAN intranets the Internet wireless access networks wired networks mobile networks telephone networks optical networks or combinations thereof. The network may be packet switched circuit switched of any topology and may use any communication protocol. Communication links within the network may involve various digital or an analog communication media such as fiber optic cables free space optics waveguides electrical conductors wireless links antennas radio frequency communications and so forth.

The processor may be connected to the other elements of the computing machine or the various peripherals discussed herein through the system bus . It should be appreciated that the system bus may be within the processor outside the processor or both. According to some embodiments any of the processor the other elements of the computing machine or the various peripherals discussed herein may be integrated into a single device such as a system on chip SOC system on package SOP or ASIC device.

In situations in which the systems discussed here collect personal information about users or may make use of personal information the users may be provided with a opportunity to control whether programs or features collect user information e.g. information about a user s social network social actions or activities profession a user s preferences or a user s current location or to control whether and or how to receive content from the content server that may be more relevant to the user. In addition certain data may be treated in one or more ways before it is stored or used so that personally identifiable information is removed. For example a user s identity may be treated so that no personally identifiable information can be determined for the user or a user s geographic location may be generalized where location information is obtained such as to a city ZIP code or state level so that a particular location of a user cannot be determined. Thus the user may have control over how information is collected about the user and used by a content server.

One or more aspects of embodiments may comprise a computer program that embodies the functions described and illustrated herein wherein the computer program is implemented in a computer system that comprises instructions stored in a machine readable medium and a processor that executes the instructions. However it should be apparent that there could be many different ways of implementing embodiments in computer programming and the invention should not be construed as limited to any one set of computer program instructions. Further a skilled programmer would be able to write such a computer program to implement an embodiment of the disclosed invention based on the appended flow charts and associated description in the application text. Therefore disclosure of a particular set of program code instructions is not considered necessary for an adequate understanding of how to make and use the invention. Further those skilled in the art will appreciate that one or more aspects of the invention described herein may be performed by hardware software or a combination thereof as may be embodied in one or more computing systems. Moreover any reference to an act being performed by a computer should not be construed as being performed by a single computer as more than one computer may perform the act.

The example embodiments described herein can be used with computer hardware and software that perform the methods and processing functions described previously. The systems methods and procedures described herein can be embodied in a programmable computer computer executable software or digital circuitry. The software can be stored on computer readable media. For example computer readable media can include a floppy disk RAM ROM hard disk removable media flash memory memory stick optical media magneto optical media CD ROM etc. Digital circuitry can include integrated circuits gate arrays building block logic field programmable gate arrays FPGA etc.

The example systems methods and acts described in the embodiments presented previously are illustrative and in alternative embodiments certain acts can be performed in a different order in parallel with one another omitted entirely and or combined between different example embodiments and or certain additional acts can be performed without departing from the scope and spirit of embodiments of the invention. Accordingly such alternative embodiments are included in the inventions described herein.

Although specific embodiments have been described above in detail the description is merely for purposes of illustration. It should be appreciated therefore that many aspects described above are not intended as required or essential elements unless explicitly stated otherwise. Modifications of and equivalent components or acts corresponding to the disclosed aspects of the example embodiments in addition to those described above can be made by a person of ordinary skill in the art having the benefit of the present disclosure without departing from the spirit and scope of the invention defined in the following claims the scope of which is to be accorded the broadest interpretation so as to encompass such modifications and equivalent structures.

