---

title: Method for setting DNS records
abstract: A method includes receiving a request to associate a user-specified domain name with an application function, identifying a registrar system based on the user-specified domain name, and generating a domain record file including domain record information that, when processed by the registrar system, is operable to cause association of the user-specified domain name with the application function. The method also includes identifying a configuration URL based on the user-specified domain name. The configuration URL includes a configuration hostname associated with the registrar system and a configuration pathname that corresponds to a record-setting API that is operable to modify one or more domain name records that are associated with the user-specified domain name. The method also includes transmitting the domain record file to the registrar system using the configuration URL.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09137094&OS=09137094&RS=09137094
owner: GOOGLE INC.
number: 09137094
owner_city: Mountain View
owner_country: US
publication_date: 20121212
---
The Domain Name System DNS is a hierarchical distributed naming system that associates domain names with Internet Protocol IP addresses. The manner in which domain names function is dictated by DNS records that are associated with the domain name. The owner of a domain name can set DNS records to cause a domain name to function in a desired manner.

Some applications including desktop applications mobile applications and browser based applications allow a domain name to be used with the application. As an example a web based email service can be used with email addresses that are associated with domain names that are owned an individual or organization that uses the service. As another example a subdomain can be created and used by the owner of the domain name to access a web based service that is provided by a third party. Typically the owner of the domain name is required to set or change DNS records in order to use these types of features.

For many individuals and organizations DNS record administration is a poorly understood process. This causes usability challenges for features that rely on or encourage DNS record changes in order to work correctly. One known solution is to provide instructions that explain the DNS record changes that need to be made. Such instructions typically task the individual or organization with copying and pasting or retyping DNS record settings from the application into a configuration tool that is provided by a domain name registrar or hosting service. If any errors are made the service will not work and the individual or organization may have difficulty detecting and understanding the errors. This can lead to frustration and increased demands for technical support.

One aspect of the disclosed embodiments is a method that includes receiving at one or more computers a request to associate a user specified domain name with an application function. The method also includes identifying at the one or more computers a registrar system based on the user specified domain name. The method also includes generating at the one or more computers a domain record file including domain record information that when processed by the registrar system is operable to cause association of the user specified domain name with the application function. The method also includes identifying at the one or more computers a configuration URL based on the user specified domain name. The configuration URL includes a configuration hostname associated with the registrar system and a configuration pathname that corresponds to a record setting API that is operable to modify one or more domain name records that are associated with the user specified domain name. The method also includes transmitting the domain record file from the one or more computers to the registrar system using the configuration URL.

Another aspect of the disclosed embodiments is a storage medium including program instructions executable by the one or more processors that when executed cause the one or more processors to perform operations. The operations include receiving from a user system at one or more server computers a request to associate a user specified domain name with an application function. The operations also include identifying at the one or more server computers a registrar system based on the user specified domain name. The operations also include generating at the one or more server computers a domain record file including domain record information that when processed by the registrar system is operable to cause association of the user specified domain name with the application function. The operations also include identifying at the one or more server computers a configuration URL based on the user specified domain name. The configuration URL includes a configuration hostname associated with the registrar system and a configuration pathname that corresponds to a record setting API that is operable to modify one or more domain name records that are associated with the user specified domain name. The operations also include transmitting the domain record file from the one or more server computers to the registrar system using the configuration URL.

Another aspect of the disclosed embodiments is an apparatus that includes one or more processors and one or more memory devices for storing program instructions that are used by the one or more processors. The program instructions when executed by the one or more processors cause the one or more processors to receive from a user system at the one or more processors a request to associate a user specified domain name with an application function. The program instructions also cause the one or more processors to identify at the one or more processors a registrar system based on the user specified domain name. The program instructions also cause the one or more processors to generate at the one or more processors a domain record file including domain record information that when processed by the registrar system is operable to cause association of the user specified domain name with the application function. The program instructions also cause the one or more processors to identify at the one or more processors a configuration URL based on the user specified domain name the configuration URL including a configuration hostname associated with the registrar system and a configuration pathname that corresponds to a record setting API that is operable to modify one or more domain name records that are associated with the user specified domain name. The program instructions also cause the one or more processors to transmit the domain record file from the one or more processors to the registrar system using the configuration URL.

The disclosure herein relates to setting DNS records. The systems and methods taught herein can be applied to allow an application function to be associated with a domain name that is owned by the user of the application. As used herein the term user can refer to any or all of an individual an organization or a domain administrator that sets DNS records on behalf of an individual or organization. The application function can be any type of computer program or system. As one example the application function can be an internet based email client. In some of the examples discussed herein the application function is implemented by the user s computer. In other examples that are discussed herein the application function is implemented by one or more remote computers that are associated with an application provider service. Thus the systems and methods discussed herein are applicable both to locally installed software applications and cloud based software as a service platforms.

As taught herein application functions can be associated with the user specified domain name by identifying a registrar system that is associated with the domain name and generating a domain record file that includes domain record information. When processed by the registrar system the domain record information will cause the registrar system to associate the user specified domain name with the application function. Transmission of the domain record file is accomplished by identifying a configuration URL. In this system the configuration URL may not be provided by the user but rather can be determined based on the identity of the domain registrar and the user specified domain name. This is accomplished by provision of a record setting API at the registrar system that allows addition deletion and or replacement of domain name records by way of URLs that follow a predetermined pattern that can be readily determined without the need for user knowledge of the URL itself.

In the system an application function is implemented by one or more computers. In one example the application function is implemented by one or more computers that are associated with the user system . In another example the application function is implemented by one or more computers that are associated with the application provider system such as the host computing devices . The systems and methods described herein allow a user specified domain name to be associated with the application function in response to a request to do so from the user which may be received for example in the form of a user input at the user system . In examples where the application function is implemented at the user system the application provider system is unnecessary and the communications described herein can occur solely between the user system and the registrar system via the network . In examples where the application function is implemented at the application provider system the request to associate the user specified domain name can be received at the user system and transmitted to the application provider system via the network . The application provider system can then communicate via the network with the user system and the registrar system .

The host computing device can each include memory such as a random access memory device RAM . Any other suitable type of storage device can be used as the memory . The memory can include code and data that can be accessed by the CPU using a bus . The memory can further include one or more application programs and an operating system . The application programs can include software components in the form of computer executable program instructions that cause the CPU to perform the operations and methods described herein.

A storage device can be optionally provided in the form of any suitable computer readable medium such as a hard disc drive a memory device a flash drive or an optical drive. One or more input devices such as a keyboard a mouse or a gesture sensitive input device receive user inputs and can output signals or data indicative of the user inputs to the CPU . One or more output devices can be provided such as a display device . The display device such as liquid crystal display LCD or a cathode ray tube CRT allows output to be presented to a user for example in response to receiving a video signal.

Although depicts the CPU and the memory of the host computing devices as being integrated into a single unit other configurations can be utilized. The operations of the CPU can be distributed across multiple machines each machine having one or more of processors which can be coupled directly or across a local area or other network. The memory can be distributed across multiple machines such as network based memory or memory in multiple machines performing the operations of the host computing device . Although depicted here as a single bus the bus of each of the host computing devices can be composed of multiple buses. Further the storage device of each of the host computing devices can be directly coupled to the other components of the respective host computing device or can be accessed via a network and can comprise a single integrated unit such as a memory card or multiple units such as multiple memory cards. The host computing device can thus be implemented in a wide variety of configurations.

Initially a request to associate a user specified domain name with an application function is transmitted from the user system to the application provider system . The request can be generated at the user system in response to a user input that is received at an input device that is associated with the user system . Alternatively the request can be generated at the user system automatically such as in response to execution of a software function. The application provider system in response to the request transmits information to the user system that causes the first configuration screen to be displayed at the user system . The first configuration screen informs the user that a verification process will be performed to verify that the user is in fact the owner of the user specified domain name which is identified in the figures as example.com or is acting on behalf of the owner of the user specified domain name. A user input can be received to confirm that the verification process can be performed such as at a button .

Based on the user specified domain name the application provider system can attempt to determine the identity of the domain registrar such as the registrar system that is responsible for maintaining DNS records for the user specified domain name. This can be done for example by accessing publicly available records such as WHOIS records. As shown in a second configuration screen can be displayed at the user system based on information that is received from the application provider system . The second configuration screen can display the identity of the registrar system as was automatically determined. Alternatively or in addition a user operable control can be provided to allow the user to specify the identity of the registrar system . The user can then confirm that the identity of the registrar system is properly identified using a button . Operation of the button transmits information to the application provider system that confirms or indicates the identity of the registrar system .

In a third configuration screen as shown in the user is asked to indicate whether the user specified domain name should be associated with the application function. In this example a first option can be selected by the user to cause both verification of ownership of the user specified domain name and to cause association of the user specified domain name with the application function which in this example is an internet based email client. A second option can be displayed and selected by the user if desired. In this case the second option allows the user to verify ownership of the domain name without associating the user specified domain name with the application function. Other options could be displayed such as allowing association of the user specified domain name with additional application functions. Once the appropriate selection has been made the user can confirm its selection using a button . Operation of the button can cause transmission of the user s selection to the application provider system .

Information for displaying the first alternative configuration screen at the user system can be transmitted by the registrar system in response to a request that is received at the registrar system from the application provider system as part of a token based authentication system. Using the first alternative configuration screen the user can input at least one authorization credential such as a username and password into form fields . A button can then be used to cause the username and password as supplied in the form fields to be transmitted from the user system to the registrar system . Upon receiving the username and password from the user system the registrar system can transmit information to the user system that causes the second alternative configuration screen to be displayed at the user system . The second alternative configuration screen can inform the user that the application provider system is requesting permission to perform one or more operations at the registrar system . The user can grant the requested permissions to the application provider system using a button that is provided as part of the second alternative configuration screen . In response to receiving this authorization from the user system the registrar system can issue at least one authorization credential to the application provider system such as an authorization token. The authorization token can be stored at the application provider system and subsequently be used to perform operations at the registrar system such as setting one or more DNS records that are associated with the user specified domain name.

One example of a token based authorization scheme that can be utilized in the example shown in is the OAuth protocol which utilizes tokens that may be referred to herein as Oauth tokens. Other protocols could be used to provide the at least one authorization credential.

Using the at least one authorization credential the application provider system can communicate with the registrar system . As an example an application programming interface can be implemented at the registrar system in order to permit the application provider system to set DNS records that are associated with the user specified domain name. In one implementation the application programming interface of the registrar system supports create read update and delete operations.

The response message can include a status message which in this case indicates that the request to retrieve resource records regarding the user specified domain name was successful. The response message also includes a list of resource record sets . In this example the list of resource record sets includes two resource record sets each of which includes information regarding the DNS settings that are associated with the user specified domain name. Each of the resource record sets can include information such as a resource record type one or more resource record values the identity of the user specified domain name and optionally any other data associated with the resource records.

As shown in the application provider system can modify the DNS settings that are associated with the user specified domain name by generating a domain record file and transmitting the domain record file to the registrar system using for example an http POST request. The domain record file is transmitted to the registrar system using the configuration URL including the configuration host name the configuration path name and optionally the query string . The domain record file can be a text document in a format such as JSON XML or any other suitable format.

The domain record file can include information that instructs the registrar system to modify the DNS settings that are associated with the user specified domain name. As an example the domain record file can include a delete instruction and information identifying a set of one or more resource records to be deleted such as a first set of resource records . The domain record file can also include as an example an add instruction and information identifying one or more resource records to be added to the resource records that are associated with the user specified domain name which in this example are provided in the form of a second set of resource records . The first set of resource records and the second set of resource records can each include information such as an identity of the user specified domain name a type of resource record one or more resource record values and any other data that is associated with the resource record values .

The information contained in the domain record file when processed by the registrar system causes the registrar system to change one or more DNS settings that are associated with the user specified domain name. For example the delete instruction when processed by the registrar system causes the registrar system to delete each resource record that is specified by the first set of resource records and the add instructions when processed by the registrar system causes the registrar system to add the resource records from the second set of resource records to the resource records that are associated with the user specified domain name at the registrar system .

After the registrar system processes the domain record file a status message can be transmitted to the application provider system from the registrar system as shown in . A first status message indicates that the registrar system successfully processed the changes indicated in the domain record file . A second status message indicates that the registrar system failed to successfully process the information in the domain record file . The second status message can further indicate the reason for the error. For example if the application provider system is not properly authenticated with the registrar system the second status message can indicate that the application provider system does not have the privileges necessary to modify the DNS records that are associated with the user specified domain name.

The operations described in connection with the process can be performed at one or more computers such as at one of the host computing devices . When an operation is performed by one or more computers it is completed when it is performed by one computer. The operations described in connection with the process can be embodied as a non transitory computer readable storage medium including program instructions executable by one or more processors that when executed cause the one or more processors to perform the operations. For example the operations described in connection with the process could be stored at the memory of one of the host computing devices and be executable by the CPU of the respective host computing device .

In operation a request to associate the user specified domain name with the application function is received. As an example a user input can be made at the user system and in response to that user input the user system can transmit the request to the application provider system .

In operation a registrar system is identified based on the user specified domain name. In one example the identity of the registrar system can be determined at the application provider system based on the user specified domain name using records that are accessible to the application provider system such as publicly available user information.

In operation the authorization credential is received. In one example the application provider system requests at least one authorization credential in the form of a username and password from the user system and the authorization credential is then received from the user system . In another example the application provider system requests an authorization credential from the registrar system in the form of a token based authentication credential which is transmitted from the registrar system to the application provider system after the registrar system receives permission from the user system .

In operation a domain record file is generated. The domain record file can include domain record information that when processed by the registrar system is operable to cause association of the user specified domain name with the application function. The domain record information can identify at least one resource record corresponding to the user specified domain name and at least one resource record value corresponding to the at least one resource record. In some examples the domain record file is a JavaScript object notation document. In other examples the domain record file is an extensible markup language document.

In operation a configuration URL for the user specified domain name is identified. The configuration URL can include a configuration host name that is associated with the registrar system . The configuration URL can also include a configuration pathname that corresponds to a record setting API that is operable to modify one or more domain name records that are associated with the user specified domain name. In some examples the user specified domain name can be included as a component of the configuration pathname.

In operation access to the configuration URL is requested using the authorization credential. As an example the application provider system can transmit a request regarding the domain record information to the registrar system along with the authorization credential.

In operation the domain record file is transmitted. In one example the application provider system transmits the domain record file to the registrar system . As an example the domain record file can be transmitted as the body of an http POST request.

The foregoing description describes only some exemplary implementations of the described techniques. Other implementations are available. For example the particular naming of the components capitalization of terms the attributes data structures or any other programming or structural aspect is not mandatory or significant and the mechanisms that implement the invention or its features may have different names formats or protocols. Further the system may be implemented via a combination of hardware and software as described or entirely in hardware elements. Also the particular division of functionality between the various system components described herein is merely exemplary and not mandatory functions performed by a single system component may instead be performed by multiple components and functions performed by multiple components may instead performed by a single component.

The words example or exemplary are used herein to mean serving as an example instance or illustration. Any aspect or design described herein as example or exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather use of the words example or exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X includes A or B is intended to mean any of the natural inclusive permutations. That is if X includes A X includes B or X includes both A and B then X includes A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims should generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form. Moreover use of the term an embodiment or one embodiment or an implementation or one implementation throughout is not intended to mean the same embodiment or implementation unless described as such.

The implementations of the computer devices e.g. clients and servers described herein can be realized in hardware software or any combination thereof. The hardware can include for example computers intellectual property IP cores application specific integrated circuits ASICs programmable logic arrays optical processors programmable logic controllers microcode microcontrollers servers microprocessors digital signal processors or any other suitable circuit. In the claims the term processor should be understood as encompassing any of the foregoing hardware either singly or in combination. The terms signal and data are used interchangeably. Further portions of each of the clients and each of the servers described herein do not necessarily have to be implemented in the same manner.

Operations that are described as being performed by a single processor computer or device can be distributed across a number of different processors computers or devices. Similarly operations that are described as being performed by different processors computers or devices can in some cases be performed by a single processor computer or device.

Although features may be described above or claimed as acting in certain combinations one or more features of a combination can in some cases be excised from the combination and the combination may be directed to a sub combination or variation of a sub combination.

The systems described herein such as client computers and server computers can be implemented using general purpose computers processors with a computer program that when executed carries out any of the respective methods algorithms and or instructions described herein. In addition or alternatively for example special purpose computers processors can be utilized which can contain specialized hardware for carrying out any of the methods algorithms or instructions described herein.

Some portions of above description include disclosure presented in terms of algorithms and symbolic representations of operations on information. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. These operations while described functionally or logically are understood to be implemented by computer programs. Furthermore it has also proven convenient at times to refer to these arrangements of operations as modules or by functional names without loss of generality. It should be noted that the process steps and instructions of implementations of this disclosure could be embodied in software firmware or hardware and when embodied in software could be downloaded to reside on and be operated from different platforms used by real time network operating systems.

Unless specifically stated otherwise as apparent from the above discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system memories or registers or other such information storage transmission or display devices.

At least one implementation of this disclosure relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored on a computer readable storage medium that can be accessed by the computer.

All or a portion of the embodiments of the disclosure can take the form of a computer program product accessible from for example a non transitory computer usable or computer readable medium. The computer program when executed can carry out any of the respective techniques algorithms and or instructions described herein. A non transitory computer usable or computer readable medium can be any device that can for example tangibly contain store communicate or transport the program for use by or in connection with any processor. The non transitory medium can be for example any type of disk including floppy disks optical disks CD ROMs magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards application specific integrated circuits ASICs or any type of media suitable for tangibly containing storing communicating or transporting electronic instructions.

It is to be understood that the disclosure is not to be limited to the disclosed embodiments but on the contrary is intended to cover various modifications and equivalent arrangements included within the spirit and scope of the appended claims.

