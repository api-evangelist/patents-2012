---

title: Method and system for robust hyperlinking
abstract: A method includes analyzing a plurality of electronic documents available via a network service, selecting content of the documents encountered during the analysis to generate signatures for the documents based on the content of the documents, generating an index comprising the signatures, and updating the index by performing additional analysis. The index is updated to include documents having the same signatures.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08577912&OS=08577912&RS=08577912
owner: A9.com, Inc.
number: 08577912
owner_city: Palo Alto
owner_country: US
publication_date: 20120529
---
Many times when a user attempts to access a web page over a network such as the Internet using a web browser the network returns a message indicating an error that prevents the content of the web page from being displayed. For example if a web page request is directed to a valid host but to an invalid Uniform Resource Identifier URI the host may return an error 404 page not found error message which may be displayed within an error page. If a web page does not produce a response from the host at the target address the web browser may display a default message indicating that the requested page cannot be displayed or may hang until the user performs some action.

These and other forms of page load errors can occur for various reasons. For example a URI that is valid at one time may become invalid. In a typical situation a user may find a web page on the Internet with content to which the user wants to save a link such as a hyperlink or bookmark that includes a reference to the URI of the web page. The publisher of the website hosting the web page may later move either the web page the entire content of the web page or portions thereof to another location having a different URI. Furthermore the content of the web page may also be modified in some way before being incorporated into a new location at the different URI. When the user attempts to access the content using the saved hyperlink the network may return an error 404 page not found error message instead of the web page content. It would be beneficial to provide a method and system for robust hyperlinking that may locate the content of a document such as a web page or portions thereof even if such content has been moved or modified.

One embodiment relates to a method. The method includes analyzing a plurality of electronic documents available via a network service selecting content of the documents encountered during the analysis to generate signatures for the documents based on the content of the documents generating an index comprising the signatures and updating the index by performing additional analyses. The index is updated to include documents having the same signatures.

Another embodiment relates to a method of providing a robust hyperlink. The method includes receiving a request to generate a hyperlink selecting content of a document and generating for the document a set of codes based on portions of the selected content. Each code identifies a unique portion of the selected content. The method also includes providing the hyperlink. A portion of the hyperlink includes the set of codes and is configured to facilitate comparison of the set of codes with a plurality of code sets for a plurality of documents in an index.

Another embodiment relates to a method of hyperlinking. The method includes selecting content of a document and generating for the document a set of codes based on portions of the selected content. Each code identifies a unique portion of the selected content. The method also includes updating an index to include the document and the set of codes. The index includes a plurality of code sets corresponding to a plurality of documents. The index is configured to facilitate comparison of codes in a portion of a hyperlink with the code sets in the index to identify documents in the index that are associated with a number of the codes in the portion of the hyperlink.

Another embodiment relates to a method of providing a robust hyperlink. The method includes receiving a request to generate a hyperlink to content of a document generating a set of codes corresponding to the document based on portions of the document content so that each code identifies a unique portion of the document content and providing the hyperlink. A portion of the hyperlink includes the set of codes. The portion of the hyperlink is configured to facilitate comparison of the set of codes with code sets from an index to identify documents in the index that are associated with a number of codes in the set of codes.

Another embodiment relates to a method of hyperlinking. The method includes selecting content of documents and generating for each of the documents a set of codes based on the selected content. Each code identifies a unique portion of the selected content. The method also includes compiling an index. The index includes each set of codes and the corresponding documents. The method also includes receiving a request to generate a hyperlink to content of a particular document generating a set of codes corresponding to the particular document and providing the hyperlink. A portion of the hyperlink includes the set of codes corresponding to the particular document. The portion of the hyperlink is configured to facilitate comparison of the set of codes corresponding to the particular document with code sets from the index to identify documents in the index that are associated with a number of codes in the set of codes.

Another embodiment relates to a method of locating document content using hyperlinks. The method includes receiving a set of codes submitted via selection of a portion of a hyperlink containing the set of codes. The set of codes is generated based on portions of content of a particular document so that each code identifies a unique portion of the content of the particular document. The method also includes comparing the set of codes with code sets from an index. The code sets in the index correspond to a plurality of documents. The method also includes identifying documents in the index that are associated with a number of codes in the received set of codes based on the comparison and providing a list of the identified documents. Each of the identified documents includes the unique portion of content for each of the codes in the received set of codes with which it is associated.

Another embodiment relates to a system for robust hyperlinking. The system includes a content selection engine configured to sample content of documents and a coding engine including computer program logic configured to generate for each of the documents a set of codes based on selected content of the document wherein each code identifies a unique portion of the selected content. The system also includes a database configured to maintain an index. The index includes each set of codes and the corresponding documents. The system also includes a hyperlink engine including computer program logic configured to receive a request to generate a hyperlink to content of a particular document and provide the hyperlink. A portion of the hyperlink includes a set of codes generated for the particular document. The system also includes a comparison engine including computer program logic configured to compare the set of codes in the portion of the hyperlink with code sets from the index to identify documents in the index that are associated with a number of codes in the set of codes in the portion of the hyperlink.

Another embodiment relates to a method. The method includes performing a web crawl selecting the content of web pages encountered during the web crawl to generate unique signatures for the web pages based on the content of the web pages generating an index comprising the unique signatures and updating the index by performing additional web crawls the index being updated to include web pages having the same signatures.

In particular system is configured to provide robust hyperlinking to content documents so that the content may be retrieved using the hyperlink even if the document or content has been moved and or modified. For example a visitor or publisher may find a document with content to which the user wants to create a hyperlink to e.g. a link embedded in an HTML document a bookmark etc. in order to facilitate retrieval of the content when desired. According to an exemplary embodiment system may be configured to generate a set of codes for the document. The set of codes may be hashes or other values that are based on portions of the document content. Each code in the set of codes may identify a different portion of the content of the document. System may also be configured to generate a robust hyperlink to the document content wherein the hyperlink references an identifier such as a file name or URI for the document and also the set of codes. System may also be configured to store a plurality of identifiers and corresponding set of codes for a plurality of documents in an index. The index may be periodically updated to provide current identifiers and code sets.

The publisher providing access to the document may move either the document the entire content of the document or portions thereof to another location such as to a new web address or other storage location having a new identifier after the hyperlink is created. Furthermore the content of the document may also be modified in some way before being incorporated into a new location. As system may periodically update the index to provide updated identifiers and code sets these changes may be captured by the index. For example if the exact document content has been moved to a new location having a new identifier the index will no longer include the old identifier and corresponding set of codes but will include the same code set corresponding to the new identifier. If the content of document content has been copied to a new location and or modified the index may also include some of the same codes in a code set corresponding to a different identifier. When the user attempts to access the content using the stored robust hyperlink the set of codes in the robust hyperlink generated for the original document may by compared by system with the code sets in the index to locate the document content or portions thereof even if such content has been moved and or modified.

Examples of content that may be located by system may include documents from a different or substitute location. For example if the document content has been moved or copied to a different location system may use the set of codes to identify the new location and retrieve the document from the new location. System may also locate cached or archived versions of the requested document using the set of codes in the event that the document content is deleted from its original location. System may also use the set of codes to locate portions of the document content including portions that are exact copies or portions that are similar to or related to the requested document content in the event that portions of the document content are moved and or modified. According to an exemplary embodiment system may be tunable as to the degree of match of located content with the requested content. For example system may be tuned so that only exact matches for the entire content of a document are retrieved or so that documents including exact portions of a subset of the content or modified versions of the content are returned as well.

Within system browser may operate in conjunction with error processor on a computer or other device of visitor . Error processor may be implemented for example as a plug in for browser or may be integrated within the code of browser or may be a stand alone component that monitors the operation of browser and displays messages external to browser . Error processor is generally configured to monitor document requests issued by browser to detect page load errors. The errors detected by error processor may include error 404 page not found error messages timeout errors errors in which a server indicates that the requested document is no longer available and other types of page load errors in which a requested document cannot be displayed. Browser and error processor communicate with linking service over communication network . According to another exemplary embodiment error processor may operate in conjunction with for example a word processing application that facilitates linking among electronic documents such as links to recently viewed documents. In this embodiment error processor monitors document requests issued by the word processing application to detect errors indicating for example that the requested document is no longer available or otherwise cannot be displayed.

Linking service may include a database configured to provide storage of and access to an index . Linking service may also include a coding engine a content selection engine a hyperlink engine a comparison engine and a crawler analyzer . In the illustrated embodiment linking service is shown as a single entity including each of a database index coding engine content selection engine hyperlink engine comparison engine and crawler analyzer . According to other exemplary embodiments one or more of these components or the functionality thereof may be provided as separate entities. For example while coding engine content selection engine and hyperlink engine are shown in as being embodied within linking service the functionality of these engines or a subset thereof may additionally be embodied in for example a computer of user for purposes of generating a robust hyperlink instead of directly accessing this functions from linking service . Linking service is generally configured to provide robust hyperlinking to content of for example websites web pages web page content or portions thereof or other electronic documents so that the content may be retrieved using the hyperlink even if such content has been moved or slightly modified. It should also be understood that while many of the embodiments are described herein in the context of linking to content of web pages over a network such as the Internet other types of content and systems are contemplated as well. For example according to an exemplary embodiment linking service may be configured to link to any type of electronic material. In this embodiment linking service may be provided as part of an API to enable linking to any type of electronic material over a communication network. According to another exemplary embodiment linking service may be provided as part of an API to enable local linking electronic documents within a single system.

Database is a database configured to provide storage of and access to index . Index is a data structure that includes a current name or other identifier such as a URI for one or more documents and a corresponding set of codes for each document. Index may be configured to list the identifiers as a function of each different code in the sets of codes shown in as index or may be inversely configured to list each corresponding set of codes as a function of each identifier shown in as index . The set of codes may be a set of hashes or other values generated by coding engine based on portions of the document content so that each code may identify a different portion of the document content such as a particular unique string of text characters etc.

According to an exemplary embodiment crawler analyzer is used in conjunction with coding engine to crawl numerous locations over most or all publicly available parts of the entire communication network and analyze numerous documents available via communication network e.g. web pages available via the Internet . Coding engine may then generate the corresponding set of codes for each document in index . As will be described in greater detail below the identifiers and corresponding set of codes for each document in index may be compared with those generated for a particular document and included in a hyperlink.

Crawler analyzer and coding engine may also periodically update index by performing additional such crawling operations to maintain a current set of identifiers and code sets to capture changes in the location and content of the documents as well as additions and deletions of documents. For example if the exact document content has been moved to a new location the index will no longer include the old identifier for the location and corresponding set of codes but will include the same code set corresponding to the new identifier. If the content of a document has been copied to a new location and or modified the index may also include some of the same codes in a code set corresponding to a different identifier. In this way when a user attempts to access the content using the stored robust hyperlink the set of codes in the robust hyperlink for the original document may by compared with the code sets in the updated index to locate the document content or portions thereof even if such content has been moved and or modified.

Coding engine is generally configured to analyze documents available via communications network . For example each document identified by crawler analyzer coding engine may calculate a set of codes based on the content of the document. Coding engine may also be configured to analyze documents in response to a request from visitor to generate a robust hyperlink to the content of a document . Each code may identify a unique portion of the content of the document. The set of codes may be used as a signature for the content of the document. According to an exemplary embodiment the set of codes are determined such that the signature for the content of the document represented by the codes will likely remain similar in the event that the content or portions thereof is moved to a new location or even slightly modified.

At a step coding engine calculates a code for each possible substring of a number of characters of the selected content including overlapping strings of characters such that each code represents a unique portion of the selected content. Character strings of approximately fifty to one hundred characters may be used according to various exemplary embodiments although strings of other lengths may be used depending on the desired accuracy. According to an exemplary embodiment all fifty character substrings are used including overlaps and each code is calculated as follows. The code for the first fifty character substring is mod 1 where p and M are constants and where tare the characters. Equation 1 may be evaluated as . . . . . . mod 2 The code for the second fifty character substring is then mod 3 A table of all possible values of trp mod M is pre calculated and used throughout.

At a step a subset of codes from the total number of codes calculated in step may be selected by coding engine . According to an exemplary embodiment approximately one hundred codes are selected for each document. According to another exemplary embodiment approximately one out of every one hundred codes may be selected based on the content of the underlying string of characters according to a defined scheme.

At a step each set of codes generated by coding engine for a document is stored in and accessed from index in database . Index may be updated periodically by coding engine in conjunction with crawler analyzer . According to an exemplary embodiment index may also be updated with a set of codes for content of a document when specifically requested by visitor such as at the time of generating a hyperlink to the document.

Referring again to hyperlink engine is generally configured to receive a request from visitor to generate a hyperlink to content of a particular document . The request may be initiated by visitor using for example a button on a tool bar of browser . For example illustrates a browser screen that may be used to present visitor with a tool bar button for creating a robust hyperlink according to an exemplary embodiment. By selecting button a user may request that a robust hyperlink be created to the content of the document currently displayed which is a web page located at the URI http www.linkA.com document.html and stored in Server A shown in .

Hyperlink engine is also configured to provide the hyperlink with a portion of the hyperlink including a set of codes corresponding to the particular document. The resulting hyperlink may be stored for example as a link embedded in a document e.g. a web page provided by a publisher or as a bookmark or other object on the computer of visitor . For example illustrates a web browser screen in which a robust hyperlink entitled LinkA is embedded in the content of an HTML document. Selecting robust hyperlink will retrieve the content of the document located at the URI http www.linkA.com document.html and stored in Server A.

According to an exemplary embodiment hyperlink engine may be configured to provide the hyperlink with a portion of the hyperlink including the identifier and another portion including the set of codes from index corresponding to the particular document. For example robust hyperlink may be implemented as Link A. The portion href http www.linkA.com document.html may represent an identifier portion and the portion robust codeset1 may represent a robust portion including the set of codes from index . Portions and are shown encircled in broken lines in to indicate that they represent metadata underlying robust hyperlink and are not actually displayed.

If executing the URI portion of the hyperlink fails to return the requested document content error processor may provide an error 404 page not found error message via browser . Visitor may then request that the portion of the hyperlink including the set of codes from index be used by comparison engine to locate the document content. For example illustrates a screen in which an error 404 page not found error message has been returned by error processor according to an exemplary embodiment. Error message may result if for example a visitor clicks on link but the content of the document formerly located at the URI http www.linkA.com document.html and stored in Server A has been moved so that it is now located at the URI http www.linkB.com document.html and stored in Server B shown in .

In the event that error message is returned in response to selection of link web browser and error processor may use the portion of the hyperlink to communicate a set of codes or hashes to linking service when an error event is detected. For example shows a link entitled Click Here that visitor may select to use the robust portion of the hyperlink to communicate a set of codes or hashes to linking service when an error event is detected. Linking service may respond by using the set of codes in conjunction with an index to locate the document content or portions thereof including similar or modified portions as will be described in greater detail below.

Referring again to comparison engine is generally configured to compare the set of codes in the portion of the hyperlink with code sets from index to identify documents in index that are associated with a number of codes in the set of codes in the portion of the hyperlink. Because each code in the set of codes in the hyperlink represents a unique portion of the content of the requested documents documents in index that are associated with a greater number of codes in the set of codes in the hyperlink are more likely to contain the content of the requested document.

As with the number of characters in each unique portion of content and the number of codes selected for the set of codes in method shown in the desired accuracy may be controlled by selecting the number of codes. For example an exact match for the content if it exits is more likely to be the only document identified by comparison engine if all codes in a code set from index are required to match each code in the set of codes in the hyperlink. If a lesser degree of match is desired between the content of the requested page and the content of the identified documents e.g. for locating documents in which only a portion of the content has been included or for locating documents that have otherwise modified the content the number of codes may be lower.

According to an exemplary embodiment the number of codes may be a percentage of codes in the set of codes in the hyperlink that are required to match in a code set from index and this percentage also serves as an estimate of the minimum amount of content from the requested file that will be contained in files identified by comparison engine . According to another exemplary embodiment the number of codes may be an absolute number of codes in the set of codes in the hyperlink that are required to match in a code set from index .

Linking service may also be configured to present the results of the comparison to visitor upon detection of an error event. According to an exemplary embodiment browser and error processor use the portion of the hyperlink including the set of codes to communicate the set of codes or hashes to linking service when an error event is detected. The set of codes may be communicated to linking service as an automatic response to the error event or may be communicated to linking service upon selection of the portion of the hyperlink including the set of codes by visitor as described above with reference to . Linking service may respond by using the set of codes in conjunction with an index to locate the document content or portions thereof including similar or modified portions.

Comparison engine uses the set of codes in the hyperlink in conjunction with index to identify documents including the document content or portions thereof including similar or modified portions. In the case of a single identified document browser may then be redirected to the identifier of the located content or the located content may be retrieved by linking service and sent to browser . In the case of multiple identified documents a message may be displayed to visitor e.g. via a toolbar or screen of browser with links to one or more documents that include located content.

Here and throughout terms such as user publisher visitor and so forth are to be understood in the broadest possible sense. Herein the term user is used generically to refer to publishers and visitors. By way of illustration and not of limitation a publisher is not restricted to persons or entities who purport to be in the on line publishing business or any other kind of publishing business nor to entities who have complete or even primary control over the content of particular websites but rather is used in a more general sense. The term publisher includes any person or entity responsible directly or indirectly for putting content on the network e.g. the Internet whether by hosting or sponsoring websites posting pages frames graphics applets blogs audiovisual content etc. on their own or others websites providing web services that can source content for websites or in any other manner. Still further a visitor may be an individual who visits and views or otherwise perceives the content of a web site and pages therein via a web browser or other client software program running on a personal computer wireless handheld device or the like but may also be for example a corporate or other entity whose servers access published web content and advertisements by invoking web services through appropriate application programming interfaces APIs a visitor may or may not be the intended or actual end consumer of a product or service that is the subject of an advertisement etc. In sum persons of skill in the art will appreciate that a wide variety of actors more than can be conveniently set forth here can play the roles of publisher and visitor for purposes of the present invention. It will be further appreciated that the same person or entity may be both publisher and visitor. In a similar vein and as will be apparent from the foregoing terms such as web page website and so forth are used to give specific illustrative examples of settings in which on line content and advertisements can be presented to and perceived by users. Such examples are not intended to be limiting and persons of skill in the art will appreciate that many other such settings now known or yet to be developed may be suitable to the practice of the present invention in specific embodiments.

It should be noted that although flow charts may be provided herein to show a specific order of method steps it is understood that the order of these steps may differ from what is depicted. Also two or more steps may be performed concurrently or with partial concurrence. Such variation will depend on the software and hardware systems chosen and on designer choice. It is understood that all such variations are within the scope of the invention. Likewise software and web implementations of the present invention could be accomplished with standard programming techniques with rule based logic and other logic to accomplish the various database searching steps correlation steps comparison steps and decision steps. It should also be noted that the word component as used herein and in the claims is intended to encompass implementations using one or more lines of software code and or hardware implementations and or equipment for receiving manual inputs. It is to be understood that any method steps as recited herein e.g. in the claims may be performed by a configuration utility e.g. Java based executed by a computing device based on input by a user. Of course according to various alternative embodiments any suitable configuration utility application system computing device etc. may be used to execute implement and or perform method steps as recited in this disclosure including the claims .

The exemplary embodiments are described above with reference to the drawings. These drawings illustrate certain details of specific embodiments that implement the systems and methods and programs of the present invention. However describing the invention with drawings should not be construed as imposing on the invention any limitations associated with features shown in the drawings. The present invention contemplates methods systems and program products on any machine readable media for accomplishing its operations. The embodiments of the present invention may be implemented using an existing computer processor or by a special purpose computer processor incorporated for this or another purpose or by a hardwired system.

As noted above embodiments within the scope of the present invention include program products comprising machine readable media for carrying or having machine executable instructions or data structures stored thereon. Such machine readable media can be any available media which can be accessed by a general purpose or special purpose computer or other machine with a processor. By way of example such machine readable media can comprise RAM ROM PROM EPROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium which can be used to carry or store desired program code in the form of machine executable instructions or data structures and which can be accessed by a general purpose or special purpose computer or other machine with a processor. When information is transferred or provided over a network or another communications connection either hardwired wireless or a combination of hardwired or wireless to a machine the machine properly views the connection as a machine readable medium. Thus any such connection is properly termed a machine readable medium. Combinations of the above are also included within the scope of machine readable media. Machine executable instructions comprise for example instructions and data which cause a general purpose computer special purpose computer or special purpose processing machines to perform a certain function or group of functions.

Embodiments of the invention are described in the general context of method steps which may be implemented in one embodiment by a program product including machine executable instructions such as program code for example in the form of program modules executed by machines in networked environments. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Machine executable instructions associated data structures and program modules represent examples of program code for executing steps of the methods disclosed herein. The particular sequence of such executable instructions or associated data structures represent examples of corresponding acts for implementing the functions described in such steps.

Embodiments of the present invention may be practiced in a networked environment using logical connections to one or more remote computers having processors. Logical connections may include a local area network LAN and a wide area network WAN that are presented here by way of example and not limitation. Such networking environments are commonplace in office wide or enterprise wide computer networks intranets and the Internet and may use a wide variety of different communication protocols. Those skilled in the art will appreciate that such network computing environments will typically encompass many types of computer system configurations including personal computers hand held devices multi processor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers and the like. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by local and remote processing devices that are linked either by hardwired links wireless links or by a combination of hardwired or wireless links through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

An exemplary system for implementing the overall system or portions of the invention might include a general purpose computing device in the form of a computer including a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit. The system memory may include read only memory ROM and random access memory RAM . The computer may also include a magnetic hard disk drive for reading from and writing to a magnetic hard disk a magnetic disk drive for reading from or writing to a removable magnetic disk and an optical disk drive for reading from or writing to a removable optical disk such as a CD ROM or other optical media. The drives and their associated machine readable media provide nonvolatile storage of machine executable instructions data structures program modules and other data for the computer.

The foregoing description of embodiments of the invention has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed and modifications and variations are possible in light of the above teachings or may be acquired from practice of the invention. For example other types of web page content such as HTML structures or images rather than text content may be analyzed and indexed. The embodiments were chosen and described in order to explain the principals of the invention and its practical application to enable one skilled in the art to utilize the invention in various embodiments and with various modifications as are suited to the particular use contemplated.

