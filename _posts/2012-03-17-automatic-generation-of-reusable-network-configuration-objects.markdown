---

title: Automatic generation of reusable network configuration objects
abstract: A method automatically captures network resources of each individual system of a networked system. The method defines a reusable object name for each class of network resources captured from the individual systems. Each class of network resources has at least one common feature. The method automatically maps each network resource having a particular class of each individual system to the reusable object name defined for that particular class. Embodiments enable individual system-specific resources, such as IP addresses, to be mapped to reusable objects. In some embodiments, reusable objects names may be combined to form higher-level configuration objects, such as network configuration rules.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08612602&OS=08612602&RS=08612602
owner: International Business Machines Corporation
number: 08612602
owner_city: Armonk
owner_country: US
publication_date: 20120317
---
The present application is a Continuation of U.S. application Ser. No. 13 079 792 filed Apr. 4 2011 and titled Automatic Generation of Reusable Network Configuration Objects.

The present invention relates generally to the field of data communication and more particularly to methods of automatically generating reusable network configuration objects in clustered systems.

Clustered systems are defined to work as a unit and they typically appear as such to network clients communicating with target applications running on the individual machines of the cluster. The machines of the cluster are attached to the same communications and storage networks and they run the same applications. The machines of the cluster work together for backup and recovery and load balancing. The clustered systems typically share the same configurations and network policies.

It is desirable to be able to create reusable network configuration objects. Certain configuration resources such as TCP or UDP ports and security encryption and authentication levels for network security policy are the same for each individual system in the cluster. Accordingly such resources are non system specific and it is not difficult to create reusable configuration objects for such resources. However certain resources such as IP addresses are unique to each individual system. Moreover individual systems typically have several different IP addresses. Accordingly it is difficult and time consuming to create reusable configuration objects for system specific resources.

Embodiments of the present invention provide methods of creating reusable configuration objects for use in configuring networked and more particularly clustered systems. In one embodiment the method automatically captures network resources of each individual system of the networked system. The method defines a reusable object name for each class of network resources captured from the individual systems. Each class of network resources has at least one common feature. The method automatically maps each network resource having a particular class of each individual system to the reusable object name defined for that particular class. Embodiments enable individual system specific resources such as IP addresses to be mapped to reusable objects. In some embodiments reusable objects names may be combined to form higher level configuration objects such as network configuration rules.

Referring now to the drawings and first to a system is designated generally by the numeral . System includes a cluster . Cluster comprises individual member computer systems connected to a network which may be a local area network LAN . While four systems are illustrated a cluster may comprise from two to many individual computer systems.

LAN is coupled to a network by a router . Network may comprise the Internet. Cluster communicates with client systems over network and LAN . Although cluster comprises individual member systems cluster appears to client systems as a single entity.

System includes a cluster administration console . Console provides a user interface to cluster administrators and it programmed to provide configuration services to cluster according to embodiments of the present invention. Console communicates with individual systems of cluster via LAN . Console is coupled to a configuration database . Configuration database is adapted to store configuration data according to embodiments of the present invention as well as other configuration information.

As will be described in detail hereinafter console is programmed according to embodiments of the present invention to discover and capture the network configuration resources for each individual system in cluster . System resource configuration may be captured from command output from the active individual system or by using well defined system application programming interface APIs . The captured resources may be stored in configuration database in a table such as table of . Table includes a column for each system in cluster which lists the configuration resources for its respective system.

According to embodiments of the present invention the resources of each individual system of the cluster are mapped to reusable objects as illustrated in table of . Each reusable object is identified by a name shown in column of table . In reusable object names are set out in all capitals. For non system specific resources such well know TCP ports the name may be simply the common name of the port. For system specific resources such as IP addresses the name may be the interface type associated with the IP address resource. It should be recognized however that the names may be arbitrary.

Once the resources have been mapped to the reusable object names configuration of the cluster may be managed using the object names rather than the specific resources themselves. Higher level reusable objects such filter rules that can be applied across the cluster can be created one using the object names rather than creating and applying a rule for each individual system. Reusable objects allow subsequent changes such new IP addresses or port assignments to be made once and applied across the cluster. New individual systems may be added to the cluster simply by updating the mapping table with the resources of the new system.

Peripheral component interconnect PCI bus bridge connected to I O bus provides an interface to PCI local bus . A number of modems may be connected to PCI local bus . Typical PCI bus implementations will support four PCI expansion slots or add in connectors. Communications links to networks may be provided through a modem or a network adapter connected to PCI local bus through add in boards. Additional PCI bus bridges and provide interfaces for additional PCI local buses and respectively from which additional modems or network adapters may be supported. In this manner data processing system allows connections to multiple network computers. A memory mapped graphics adapter and hard disk may also be connected to I O bus as depicted either directly or indirectly.

Those of ordinary skill in the art will appreciate that the hardware depicted in may vary. For example other peripheral devices such as optical disk drives and the like also may be used in addition to or in place of the hardware depicted. The depicted example is not meant to imply architectural limitations with respect to the present invention.

The data processing system depicted in may be for example an IBM eServer pSeries system a product of International Business Machines Corporation in Armonk New York running the Advanced Interactive Executive AIX operating system or LINUX operating system.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium or media having computer readable program code embodied thereon.

Any combination of one or more computer readable medium or media may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

The computer program instructions comprising the program code for carrying out aspects of the present invention may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the foregoing flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the foregoing flowchart and or block diagram block or blocks.

The flowcharts and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

From the foregoing it will be apparent to those skilled in the art that systems and methods according to the present invention are well adapted to overcome the shortcomings of the prior art. While the present invention has been described with reference to presently preferred embodiments those skilled in the art given the benefit of the foregoing description will recognize alternative embodiments. Accordingly the foregoing description is intended for purposes of illustration and not of limitation.

