---

title: Systems and methods for determining user attribute values by mining user network data and information
abstract: Systems and methods for determining one or more attributes and their associated values for a user, by mining the user's social network profiles. The systems and methods determine if the value of an attribute of interest for a user is specified on one or more social networking websites. If so, the systems and methods set the attribute value for the user to the specified attribute value. If not, the systems and methods retrieve, from the social networking websites, attribute values for the attribute of interest for friends of the user to form a group of possible attribute values for the user. The method, selects a value from the group of possible attribute values, and then sets the selected value as the attribute value for the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08965974&OS=08965974&RS=08965974
owner: Board of Regents, The University of Texas System
number: 08965974
owner_city: Austin
owner_country: US
publication_date: 20120817
---
This application claims the benefit of U.S. Provisional Application No. 61 525 614 filed Aug. 19 2011 which is hereby incorporated by reference.

This invention was made with government support under Grant No. HM1582 07 2035 awarded by the National Geospatial Intelligence Agency. The government has certain rights in the invention.

The illustrative embodiments relate generally to data mining and more particularly to determining one or more attributes and their associated values for a user by mining the user s social network profiles.

Online Social Networks OSNs represent an online community of Internet users. Depending on the website in question many of these online community members share common interests in for example hobbies religion politics etc. Online social networks such as Twitter Foursquare and Facebook have emerged only during the last decade and have since become popular tools for public discourse as well as political and social commentary. Other social networks such as LinkedIn also focus on business and professional networking.

As the popularity of social networking is on the rise new uses for the technology are constantly being unearthed. At the forefront of emerging trends on social networking websites is the concept of real time and location based searches. However mining attributes such as the location of a user is not an easy task in itself. For instance traditional text based location extraction techniques often do not perform well in the domain of social networks. A reason for the abridged performance is the presence of multiple locations within the text which makes it difficult to identify a single location for the user. Additionally there is often a lack of relationship between the location of the user and the location mentioned in the text. Thus there is a need for a solution to these limitations as well as others in existing techniques.

According to an illustrative embodiment a method in a data processing system for determining a value of an attribute of a user comprises determining if a value of an attribute of interest for a user is specified on one or more social networking websites. Responsive to a determination that the value of an attribute of the user is not specified the process retrieves from the one or more social networking websites attribute values for the attribute of interest for friends of the user to form a group of possible attribute values for the user. The process then selects a value from the group of possible attribute values and sets the selected value as the attribute value for the user.

According to another illustrative embodiment a method in a data processing system for determining a location of a user comprises extracting text from messages provided by a user on a social networking website wherein the messages include one or more location concepts. The process removes words unrelated to geographical locations from the text. The process assigns a weight to each location concept based on the occurrence of the location concept in the text wherein specific location concepts are assigned a greater weight compared to general location concepts. Responsive to determining a correlation between a specific location concept and a general location concept the process adds the weight of the general location concept to the specific location concept. The process then reorders the location concepts in descending order of weights and assigns a probability score S to each location concept C based on its individual weight. Based on the probability scores the process assigns a location concept to the user.

According to another illustrative embodiment an apparatus for determining a value of an attribute of a user comprises a bus a storage device connected to the bus wherein the storage device contains computer usable code and a processing unit connected to the bus wherein the processing unit executes the computer usable code to determine if a value of an attribute of interest for a user is specified on one or more social networking websites. The processing unit executes the computer usable code to retrieve from the social networking websites attribute values for the attribute of interest for friends of the user to form a group of possible attribute values for the user in response to a determination that the value of an attribute of the user is not specified. The processing unit further executes the computer usable code to select a value from the group of possible attribute values and sets the selected value as the attribute value for the user.

In the following detailed description of the illustrative embodiments reference is made to the accompanying drawings that form a part hereof. These embodiments are described in sufficient detail to enable those skilled in the art to practice the invention and it is understood that other embodiments may be utilized and that logical structural mechanical electrical and chemical changes may be made without departing from the spirit or scope of the invention. To avoid details not necessary to enable those skilled in the art to practice the embodiments described herein the description may omit certain information known to those skilled in the art. The following detailed description is therefore not to be taken in a limiting sense.

The user may connect with one or more social networking websites via network . The techniques technologies or media by which components of the system in may intercommunicate are numerous. For example the system in or any portion thereof may be part of a personal area network PAN a local area network LAN a campus area network CAN a metropolitan area network MAN or any other network type. Also communication between any two elements of the system may be direct or indirect. For example the data communication medium between the user and the social networking websites may be any medium through which data can be communicated. For example the data communication medium may be wired or wireless data connections and may utilize a virtual private network VPN multi protocol label switching MPLS the Internet or any other data communication media. Wireless communication may utilize any wireless standard for communicating data such as CDMA e.g. cdmaOne or CDMA2000 GSM 3G 4G Edge an over the air network Bluetooth etc. Any of the transactions occurring in the system may be performed using secure SSL transactions.

In one example the system in may utilize the Internet with any combination of the data communication media representing a worldwide collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high speed data communication lines between major nodes or host computers consisting of thousands of commercial governmental educational and other computer systems that route data and messages. is intended as an example and not as an architectural limitation for the different illustrative embodiments.

In this particular example social networking websites include Twitter Foursquare LinkedIn Facebook Google among others. The social networking websites utilized by the user may comprise any Internet website that enables user to connect with other users to talk share ideas interests music data and or other information. Any social networking website may be used in the illustrative embodiments. For example social networking websites like Twitter Foursquare LinkedIn Facebook Google etc. enable user to communicate with friends family and followers subscribers around the world as well as make new connections with unknown people based on similar interests or professions.

As user provides his her information to one or more of the social networking websites user attribute value determination engine may extract this information to identify or predict attribute values for the user . In one embodiment user attribute value determination engine may comprise part of an attribute value determination system . User attribute value determination engine lib may access the user s social networking website profiles HQ via network to mine attribute information. In one embodiment user attribute value determination engine may extract an identifier of the user userId from a social networking website. A userId is a unique identifier for each user on a social networking website e.g. Twitter uses a Twitterid of https twitter.com userid . Once a userId is obtained for a user from a social networking website an application programming interface API may be used to obtain other information messages name friends location etc. from the website using the userId. As the user attribute information may be part of the user s profile this information may be publicly available for viewing by others although it should be noted that aspects of the embodiments may also be used for private user profiles as well. This information may be retrievable if the user has provided the information and if the information is public or otherwise visible to the user attribute value determination engine .

User attribute value determination engine may utilize one or more attribute value determination processes to extract attribute information about the user from their social networking website profiles . If attribute information is not available for the user e.g. the user has not explicitly provided attribute information the user attribute value determination engine may also employ the attribute value determination processes to extract attribute information about friends of the user and then assign the user an attribute value based on the friends attribute information. In this manner the user may be assigned an attribute value based on the values of the attribute for the user s social connections.

Consider the following example in which the user attribute value determination engine may identify an explicitly specified or an implicitly determined attribute value for the user by calling one or more of the processes . For instance if one wants to know the geographical location of the user the user attribute value determination engine may call a particular location determination process which first determines whether the user has explicitly provided the user s location in the attributes or profiles stored by one of the social networking websites . If the user has explicitly provided his her location the process may end as the user s location has been determined. However if the user has not explicitly provided his her location in the profiles the user attribute value determination engine lib may examine the location values provided by the user s social connections e.g. friends friends of friends etc. in each of their profiles. The user attribute value determination engine may extract the locations associated with the user s friends or even locations associated with the user s friends of friends. The user attribute value determination engine may then use the locations extracted from the user s friends to determine the probable or implicit location of the user. In this manner the user attribute value determination engine may determine an attribute value of user even though the user has not provided this attribute information on any of his her social networking website profiles.

In this illustrative example the attribute value determination system is shown to comprise various attribute value determination processes including a gazetteer process a simple majority process a closeness process a closest friends process and a fuzzy closest friends process . These processes are described in more detail in below. To determine and identify particular attribute values of the user these processes may utilize data mining to extract attribute information provided to a social networking website by users. Attribute information for the user may include but is not limited to location age age group race ethnicity threat languages spoken religion economic status education level gender interests e.g. cuisines sports politics music etc. among others. For example if the user inputs the user s geographical location in the user s profile on the Twitter website the illustrative embodiments may extract the user s location from this explicitly provided information e.g. Dallas Tex. . Similarly if the user has input the user s bio to the user s profile on the Twitter website the illustrative embodiments may extract the user s bio from this explicitly provided information.

As previously mentioned however there may be situations where the user has not explicitly provided attribute information to the user s social networking websites. illustrates a graph based approach relying on the social graph of the user towards determining the value of an attribute of a user. In particular is a sample undirected graph used to represent the social network of the user in accordance with an illustrative embodiment. Each node in the graph represents a user and each edge line represents friendship between two nodes. The root of the graph represents the user whose location is to be determined. The nodes connected to the user friend F friend F . . . friend F represent the k friends of user . Each friend of the user can also have his or her own network for example friend F is shown to have a network comprising m friends including friends Fthrough F . This example graph has a depth 2 which means the social network to be searched may extend 2 levels from the root user node . However the illustrative embodiment may utilize any number of depth levels e.g. 1 4 8 10 etc. when determining attribute values for the user .

As the example graph of shows the illustrative embodiments may data mine profile information of a user s friends e.g. people in the user s social networks and extract attribute values for these friends to implicitly determine or predict an attribute value for the user . Thus using the same location attribute example above if the user of interest has not provided his her location information to the website the illustrative embodiments may extract the location information of the user s social network friends if provided in their respective user profiles . The depth of friends from which the location information is extracted may depend on the depth setting defined by the extraction process. In other words if the process has a setting of depth 1 then the locations for only the friends immediately or directly connected to user e.g. friends Fto F are extracted to determine the location of the user . Likewise if the process has a setting of depth 2 then the locations for the friends immediately connected to the user e.g. Fthrough F and those friends immediate connections e.g. friends of friends Fthrough F are extracted. Based on the extracted location information of the user s social network the illustrative embodiments may then assign or predict a location for the user .

Examples of location values that may be extracted from friends of user are illustrated for friends of friends Fthrough F . Similar to user who may or may not have explicitly provided the user s location information to a social networking website friends of friends Fthrough F may or may not have provided their respective location information to the social networking website. For example F has provided an explicit location of Seattle Wash. USA in his her user profile for the social networking website. In contrast F has not provided an explicit location to the social networking website and thus his her location shows a null value. The user attribute value determination engine in may extract all of these location values for the user s friends and determine an implicit location for the user based on the extracted locations provided by his her social network of friends.

Prior to running this Location Identification process the user attribute value determination engine may preprocess the data extracted from a user s messages to remove all words from the messages that are not references to geographic locations. In one preprocessing embodiment the CRF Conditional Random Fields Tagger may be used which is an open source Part of Speech POS tagger for the English language with an accuracy of close to 97 and a tagging speed of 500 sentences per second. The CRF tagger may identify all of the proper nouns from the text and term them as keywords K K . . . Kn. Subsequently a gazetteer may be searched to identify geographic city names from among the keywords. One example gazetteer is the TIGER Topologically Integrated Geographic Encoding and Referencing system dataset which is an open source gazetteer consisting of topological records and shape files with coordinates for cities counties zip codes street segments etc. for the entire United States.

The user attribute value determination engine may search the gazetteer for location concepts C C . . . C pertaining to each keyword. A location concept comprises a specified geographical location and is typically of the format City A State B Country C. The focus for each keyword is to pick out the right concept from the gazetteer list such that a disambiguated location is obtained. A weight based disambiguation method may be utilized in the process to perform the disambiguation. In phase of the process a weight may be assigned to each concept based on the occurrence of its terms in the text. For each location depending on the level of detail any of A B and or C can be null. Specific or fine grained concepts may be assigned a greater weight as compared to the more general concepts. For instance a location concept of Dallas may be a more specific location concept as compared to a more general location concept of Texas . Type in step refers to the type of location like city state or country. Weight scores are assigned based on the type in step S .

In phase the process may check for a correlation between concepts in which one concept subsumes the other. Tand Tin step are location concept terms. For example if Cis Dallas TX USA then Chas three terms Dallas Tex. and USA. Similarly if Cis TX USA then Chas two terms TX and USA. Thus for each of the terms in Cand C it may be determined if there is any relationship between them. In such a case the more specific or fine grained concept may get a boosting from the more general concept. For example if a more fine grained concept Cis part of another concept C then the weight of Cis added to that of C. For example city carries 15 points state carries 10 points and a country name carries 5 points. For the keyword Dallas consider the concept of CityDallas State Texas Country USA. The concept gets 15 points because Dallas is a city name and it gets an additional 10 points if Texas is also mentioned in the text.

Thus using the previous example if Dallas Tex. are the keywords appearing in the text then among the various concepts listed for Dallas would be CityDallas State Texas Country USA and one of the concepts for Texas would be State Texas Country USA Now as phase checks for such correlated concepts in which one concept subsumes the other the more specific or fine grained concept gets a boosting from the more general concept. Here the above mentioned Texas concept boosts up the more fine grained Dallas concept.

After the two phases are complete the concepts may be re ordered in descending order of their weights. Each concept C may then be assigned a probability score S depending on their individual weights and the process may return these values. The probability score is used to indicate the likelihood of a location concept being the actual location of the user. The higher the probability score the more likely the location concept is the location of the user. The concept having the highest probability score may then be selected and set as the location for the user.

Using the social network graph in and a location attribute as am example to explore the social network of a user s friend if the location of a friend is not known instead of labeling the friend s location as null the Simple Majority process may use the friend s friends in choosing the location for the user. For instance if the location of friend Fis null the process may examine the locations of the friends e.g. F F of friend F. It is important to note here that each node in the graph has just one label e.g. a single value for each location .

The process Simple Majority userId depth is divided into several steps as shown in . In steps and the explicitly specified location of the user is checked for and if it is present the node is given that location value. At step if the process being called recursively has reached a depth of 0 and is unable to find a location the algorithm returns null to the calling method. It is important to note here that the above two conditions specify the boundary conditions of the recursive function. If either of the two conditions is not met then the location may be determined on the basis of the simple majority of the locations of the user s friends.

In step a list of all friends of the user under scrutiny is obtained. Next for each of the user s friends the location is determined by recursively calling the Simple Majority process with the friend s userId and a depth value decreased by 1. Once the locations for all the friends are extracted aggregation of the locations in step may be performed to obtain unique locations. If the attribute of interest is location step may be performed in which boosting of concepts e.g. a more specific or fine grained concept is boosted by a more general concept is achieved. For example the state concepts boost all city concepts in which the city belongs to that state. Similarly the country level concepts may boost the state and city level concepts. If the attribute of interest is not location step may be omitted. In step the process may then return the location having the maximum frequency and that location value is assigned to the user.

The Closeness userId friendId process takes as input the IDs of the user and a particular friend and returns the closeness measure of this user friend pair. In steps and the IDs of both the friends of the user and friends of the friend are obtained. Next their common friends are calculated and assigned as CF .

If the attribute of interest is location optional steps may be performed to address certain cases in which the friend of a user may be a spammer or a celebrity. A spammer is typically identified by the vast difference between the number of users he is following and the number of users following him back. The Spam Ratio SR of a friend is defined as 

If SR is found to be greater than a threshold value N the friend may be identified as a spammer and CF is set to 0. It may also be desirable to control the influence of celebrities in deciding the location of the user. For instance if the friend is a celebrity it may be desirable to decrease the influence the celebrity has over the determination of the user s location. However it is also important to note that in certain cases the celebrities that the user is following cam be a good bet in guessing the user s location. The closeness effect a celebrity has on a user s location is abbreviated in location optional steps and . If the attribute of interest is not location steps may be omitted.

As shown steps through of the k Closest Friends process remain the same as that of the Simple Majority userId depth process in . However in step of the k Closest Friends process the method k CF userId AllFriends k is called. The k CF method returns an array consisting of userIds of the top k closest friends of the user along with their pair wise closeness to the user as determined from the process in . Note that top k denotes the k closest friends of the user in terms of CF values and can be obtained using an extended form of the process given in . The proposed extension sorts all friends of a user in descending order of CF values and returns an array consisting of the top k friends along with their associated CF values.

As shown in step for each of the k closest friends the location is determined by recursively calling k Closest Friends with the friend s userId and a depth value decreased by 1. Once locations of the k closest friends are obtained supported by their individual closeness as determined by the various location concepts may be aggregated and assigned probability scores. The location concept with the maximum or highest probability weighted score is returned. As an example consider friend Fin . At every depth level of the graph only the location concepts with the maximum weighted scores are selected therefore some location concepts will be discarded. For example since the location of friend Fin is not known the social graph shows that the location with maximum weight is Dallas. All other locations with lesser probabilities in this example Seattle Sydney etc. are discarded and thus friend Fmay be assigned the location of Dallas. Thus with the k closest friends process the location concept having the highest weight at each depth level is selected and retained while all of the other location concepts for that depth level are discarded.

Consider another example of the k closest friends process. The k closest friends process uses two inputs depth d and k the number of closest friends to examine. In this example let depth 2 and k 3. To determine the location of a user which is unknown the process may look at the user s friends. Suppose the user has 100 friends. The process may identify the top k 3 friends of the user as John Jerry and Julie. The corresponding CF value calculated in the Closeness process in for each of them is 15 5 and 5 respectively. Thus a table of this information shows 

Since the process has just examined the user s immediate friends the examined level is depth 1. As maxDepth 2 and John s location is not known the process may further examine John s friends by recursively calling k Closest Friends with John s userId and decreasing the depth value by 1.

Now the process may find John s top friends and each of their locations as shown in the following table 

Although the location of one of John s friend s Mark is not known since this is depth 2 maxDepth the process cannot proceed further. At this point the k closest process determines that John s location is Austin. This determination is made because for John s top friends Mark Michael and Mary the location Austin has a CF of 15 Dallas has a CF of 10 and the third location is unknown and thus ignored. Consequently the locations for the user s immediate friends John Jerry and Julie will change to 

The k closest friends process may then determine the user s location to be Austin since John s location outweighs the other locations.

It should be noted that if the attribute of interest is location optional step may be performed to boost the location as previously described. If the attribute of interest is not location step may be omitted.

In this embodiment of the invention the Fuzzy k Closest Friends process demonstrates the fact that each node of the social graph may be assigned multiple locations each of which is associated with a certain probability. Additionally these labels are propagated throughout the social network and no locations are discarded. At each level of depth of the graph the results may be aggregated similarly to the previous processes so as to maintain a single vector of locations with their probabilities.

The initial input to the Fuzzy k Closest Friends process is the userId of the user and the maximum depth. In step at any depth of recursion the process attempts to determine the explicitly specified location for the user. If the location of the user is specified explicitly then the location is returned with a confidence level of 1.0. Otherwise on reaching a depth of 0 if the process is not able to find the location the process returns a null value with a confidence level of 1.0. If the location is not specified explicitly then the process attempts to determine the user s location on the basis of the locations of the k closest social network friends of the user.

In step a list of all friends of the user under scrutiny is obtained comprising the people the user is following and the people following the user on Twitter. Next the method k CF userId AllFriends k described in the k Closest Friends process is called. In the next step for each of the k closest friends a list of locations and their associated probabilities is determined by recursively calling k Closest Friends with the friend s userId and a depth value decreased by 1. Once all locations and probability distribution of the k closest friends have been determined supported by their individual closeness as determined by the scores of the concepts may be aggregated as described in the Simple Majority process in . The process may then return a vector of location concepts each concept with am individual probability weighted score.

As an example consider again friend Fin . In contrast with the Simple Majority process in and k Closest Friends process in the Fuzzy k Closest Friends approach does not discard the attributes with lower confidence and these attribute values are carried forward. Using the above scenario the location of friend Fmay be for example Dallas with a probability of 0.6 Seattle with a probability of 0.2 and Sydney with a probability of 0.1 etc. the sum is always 1 . To determine the location attribute value for the central user when the process looks at the locations of the user s friends friend Fmay be Dallas 0.6 Seattle 0.2 Sydney 0.1 . Compare this array of probable locations result with the k closest friends process whose probable location result would be just Dallas 0.6 .

Once the central user has been reached and an array of location concepts has been obtained the last step Location is used to determine the location of the user as the concept with the highest probability score. Note This location step is performed for the central main user not for any of his friends.

Consider another example of the fuzzy k closest friends process. Using the same example scenario described in the k closest friends process the fuzzy k closest friends process also uses two inputs depth 2 and the number of closest friends to examine k 3. To determine the location of a user which is unknown the fuzzy k closest friends process may perform a set of steps similar to the k closest friends process. For instance the user in this example has 100 friends. The process may identify the top k 3 friends of the user as John Jerry and Julie. The corresponding CF value calculated in the Closeness process in for each of them is 15 5 and 5 respectively as shown below 

Since the process has just examined the user s immediate friends the examined level is depth 1. As maxDepth 2 and John s location is not known the process may further examine John s friends by recursively calling k Closest Friends with John s userId and decreasing the depth value by 1.

Although the location of one of John s friend s Mark is not known since this is depth 2 maxDepth the process cannot proceed further. At this point the fuzzy k closest friends process diverges from the k closest friends process. The fuzzy k closest friends process may determine that from his friends locations John s location is Austin 15 25 Dallas 10 25 the unknown location of Mark is ignored . Thus the determination of location may be an array and not a single value. Consequently the locations for the user s immediate friends will change to 

As a result the fuzzy k closest friends process may determine that the user s location is Dallas as the user is the primary user of interest and Dallas outweighs the other locations.

While both the k closest friends and the fuzzy k closest friends processes are recursive in contrast with the k closest friends process in the fuzzy k closest friends approach chooses the maximum weighted location at the last step for the primary user and in the other cases e.g. for each depth level of the user s friends the process calculates an array of locations e.g. as done for friend John above . The k closest friends process selects the maximum weighted location at each depth level and discards the other location values.

It should be noted that if the attribute of interest is location optional step may be performed to boost the location as previously described. If the attribute of interest is not location step may be omitted.

With specific regard to determining location of a user at each step of the depth of the recursion the Fuzzy k Closest Friends process may return a vector of location concepts with their individual probabilities. Among the different concepts obtained from the social graph there is also a null concept which originates at 0 depth when a location cannot be found. It is also important to understand that the higher the maxDepth the maximum depth the fewer the nodes in the upper hierarchy that are tagged null which results in a lower score for the null concept in the final vector.

In a further embodiment of the invention an element of Location Confidence Threshold LCT is introduced. The location confidence threshold serves to ensure that when a process reports the possible location of a user it does so with some minimum level of confidence. The location confidence threshold is used in agglomerative clustering to take into account the friends who live in a nearby albeit different city. For example if a user s location is Dallas Tex. the location of friends A and B is Plano Tex. and the location of friend C is Richardson Tex. agglomerative clustering may cluster group locations which are close to each other and combine their individual scores. The concepts may be combined until the location confidence threshold is crossed at which point the clustering process may be terminated. The location confidence threshold may be defined as maxDepth 1 

The location confidence threshold increases with the increasing value of maxDepth and reaches 1 for higher values of maxDepth. Similarly with increasing depth the probability of null concept should also decrease and the confidence level of the result should increase. is a constant whose value lies between 0 and 1 and depends on the social graph of the user. For example the higher the number of immediate friends of the user that are labeled the lower the value is for . Until this point little emphasis has been placed on the geospatial proximity of the different concepts. That is the concepts are treated purely as labels with no mutual relatedness. Since the concepts are actual geographical cities the closely located cities and suburbs may be agglomerated in an effort to improve the confidence and thus the accuracy of the system.

Consider p location concepts C . . . Cwhere each concept has an associated probability. Initially all concepts are presented individually as C C . . . C. If any non null concept has a value greater than the location confidence threshold then the process returns that concept as the location and terminates. Otherwise at the next step a matrix is constructed in which the number in the i th row j th column is an objective function of the distances and cumulative scores between the i th and j th concepts. 

where S S S the combined score of concept clusters Cand C d is the geographic distance between the two clusters and T is a constant with 0

At the first step of agglomeration two concepts with the highest values for the objective function are combined and a check is performed to see if the new concept cluster has a combined score greater than the LCT. If not the process is continued constructing the matrix a gain but this time some of the concepts are replaced by concept clusters. Thus in the subsequent iteration two concept clusters that have the maximum values for the objective function are selected. Note that the mean geographic distance between a concept cluster A and a concept cluster B is defined as

Thus at any step of the agglomeration the two concept clusters with the maximum values for the objective function are selected. If the score of the combined bag of concepts crosses the location confidence threshold the bag of concepts may be returned as the possible location vector and the process is terminated.

The process begins with a determination whether the value of an attribute of a user is specified on one or more social networking websites step . As previously mentioned the attribute may be one or more of inter alia a location age age group race ethnicity threat languages spoken religion economic status education level gender hobby or interest of the user. If the process determines that the attribute value is specified on a social networking website the process may retrieve the specified attribute value as the attribute value for the user from the social networking website step . The process may then set the specified value as the attribute value for the user step .

However if the process determines that the attribute value is not specified for the user the process may obtain from a social networking website the ID of the user step . Using the userId the process may then determine the social network friends of the user step and obtain values for the attribute of interest for friends of the user from their social networking website profiles to form a group of possible attribute values for the user step . The process then determines if an attribute value exists for each of the social network friends of the user step . If the process determines that attribute values exist for all friends of the user the process proceeds to step and selects a value from the group of possible attribute values for the user at the current depth level. In addition the process may return the determined value to lower depth levels when the current depth level is greater than 0. Once attribute values have been selected for a user s immediate friends depth 1 a value can be subsequently selected for the central user at depth 0. The process then sets the value selected for depth 0 as the attribute value for the primary user of interest step .

However if the process determines in step that attribute values are missing for some of the user s social network friends e.g. the user s friends have not explicitly provided values for the attribute of interest on their social networking website profiles the process then checks whether the current depth level is less than maxDepth step . If the process determines that the current depth level is less than maxDepth the process recursively determines an attribute value for each friend with a missing value. However if the process determines that the current depth level is not less than maxDepth the process ignores friends with missing attribute values and selects a value for the user at the current depth level from the attribute values of the remaining friends step . In addition the selected value is returned to lower depth levels when the current depth level is greater than 0 step . Once attribute values have been selected for a user s immediate friends depth 1 a value can be subsequently selected for the central user at depth 0. The process then sets the value selected for depth 0 as the attribute value for the primary user of interest step .

The process begins with a determination whether the value of an attribute of interest for a user is specified on one or more social networking websites step . If the process determines that the attribute value is specified on a social networking website the process may retrieve the specified attribute value as the attribute value of the user from the social networking website step . The process may then set the specified value as the attribute value for the user step .

However if the process determines that the attribute value is not specified for the user the process may obtain from a social networking website the ID of the user step . Using the userId the process may then determine the social network friends of the user step and obtain values for the attribute of interest for social network friends of the user from their social networking website profiles to form a group of possible attribute values for the user step . The process then determines if an attribute value exists for each of the social network friends of the user step . If the process determines that attribute values exist for all friends of the user the process proceeds to step and selects the value having the maximum frequency among the friends of the user for the current depth level. The maximum frequency comprises a simple majority of the attribute values retrieved for the friends of the user. For example if the attribute is location and the majority of the user s social connections friends have a location value of Dallas Tex. USA the process will select this location as the location having the maximum frequency among the user s social connections and set this location value as the user s location for the current depth level. In addition the process may return the determined value to lower depth levels when the current depth level is greater than 0 step . Once attribute values have been selected for a user s immediate friends depth 1 a value can be subsequently selected for the central user at depth 0. The process then sets the value selected for depth 0 as the attribute value for the primary user of interest step .

However if the process determines in step that attribute values are missing for some of the user s social network friends e.g. the user s friends have not explicitly provided values for the attribute of interest on their social networking website profiles the process then checks whether the current depth level is less than maxDepth step . If the process determines that the current depth level is less than maxDepth the process recursively determines an attribute value for each friend with a missing value. However if the process determines that the current depth level is not less than maxDepth the process ignores friends with missing attribute values and selects a value for the user at the current depth level from the attribute values of the remaining friends and the selected value is returned to lower depth levels when the current depth level is greater than 0 step . Once attribute values have been selected for a user s immediate friends depth 1 a value can be subsequently selected for the central user at depth 0. The process then sets the value selected for depth 0 as the attribute value for the primary user of interest step .

The process begins with a determination whether the value of an attribute of interest for a user is specified on one or more social networking websites step . If the process determines that the attribute value is specified on a social networking website the process may retrieve the specified attribute value as the attribute value for the user from the social networking website step . The process may then set the specified value as the attribute value for the user step .

However if the process determines that the attribute value is not specified for the user the process may obtain from a social networking website the ID of the user step . Using the userId the process may then determine the social network friends of the user step and then determine which friends are the closest friends of the user step .

For each of the user s closest friends the process obtains values for the attribute of interest from their social networking website profiles step . Once the attribute values for the closest friends have been obtained the process then determines if an attribute value exists for each of the social network friends of the user step . If the process determines that attribute values exist for all friends of the user the process proceeds to step where the attribute values are aggregated and weighted. The attribute values are weighted to reflect that some friends are closer to the user and should have more influence on the attribute determination. A numeric value is used to reflect this closeness or influence as described in . Thus for example when determining a user s location one may look at the user s friends. If the user and friend A have 10 mutual friends then the weight given to friend A s location Dallas is 10. If the user and friend B have 5 mutual friends then the weight given to friend B s location Piano is 5 and so on. The weights for Dallas Plano etc. may each be combined or aggregated to form a weighted score for each location. The process then selects the value having the highest weighted score as the attribute value for the user at the current depth level and may return the determined value to lower depth levels when the current depth level is greater than 0 step . Once attribute values have been selected for a user s immediate friends depth 1 a value can be subsequently selected for the central user at depth 0. The process then sets the value selected for depth 0 as the attribute value for the primary user of interest step .

However if the process determines that attribute values are missing for some of the user s social network friends at step e.g. the user s friends have not explicitly provided values for the attribute of interest on their social networking website profiles the process then checks whether the current depth level is less than maxDepth step . If the process determines that the current depth level is less than maxDepth the process recursively determines an attribute value for each friend with a missing value. However if the process determines that the current depth level is not less than maxDepth the process ignores friends with missing attribute values and aggregates and weights the attribute values of the remaining friends step . The process then selects the value having the highest weighted score as the attribute value for the user at the current depth level and may return the determined value to lower depth levels when the current depth level is greater than 0 step . Once attribute values have been selected for a user s immediate friends depth 1 a value can be subsequently selected for the central user at depth 0. The process then sets the value selected for depth 0 as the attribute value for the primary user of interest step .

The process begins with a determination whether the value of an attribute of interest for a user is specified on one or more social networking websites step . If the process determines that the attribute value is specified on a social networking website the process may retrieve the specified attribute value as the attribute value for the user from the social networking website step . The process may then set the specified value as the attribute value for the user step .

However if the process determines that the attribute value is not specified for the user the process may obtain from a social networking website the ID of the user and for the null value determination specify a confidence level of 1.0 step . Using the userId the process may then determine the social network friends of the user step and then determine which friends are the closest friends of the user step .

For each of the user s closest friends the process obtains values for the attribute of interest from their social networking website profiles step . Once the attribute values for the closest friends have been obtained the process then determines if am attribute value exists for each of the social network friends of the user step . If the process determines that attribute values exist for all friends of the user the process proceeds to step where the attribute values are aggregated and assigned a probability score and the array of values is propagated to the next lower depth level step . This array of values and associated probability scores are used to determine the unknown value at the next lower depth level. Once attribute value arrays have been obtained for a user s immediate friends depth 1 the value with the highest probability score is selected as the attribute value for the central user at depth 0 and the value selected for depth 0 is set as the attribute value for the primary user of interest step .

However if the process determines that attribute values are missing for some of the user s social network friends e.g. the user s friends have not explicitly provided values for the attribute of interest on their social networking website profiles the process then checks whether the current depth level is less than maxDepth step . If the process determines that the current depth level is less than maxDepth the process recursively determines am array of attribute values with their associated probabilities for each friend with a missing value. However if the process determines that the current depth level is not less than maxDepth the process ignores friends with missing attribute values and aggregates and assigns probability scores to each of the attribute values of the remaining friends step . The process also propagates the array of values to the next lower depth level step . This array of values and associated probability scores are used to determine the unknown value at the next lower depth level. Once attribute value arrays have been obtained for a user s immediate friends depth 1 the value with the highest probability score is selected as the attribute value for the central user at depth 0 and the value selected for depth 0 is set as the attribute value for the primary user of interest step .

The process may using the ID of the user determine the social network friends of the user step . The process may also obtain using the ID of a particular friend of the user the friends of that friend step . A determination is then made by the process as to the common friends between the user and the user s friend step . The process may then return the determined common friends CF between the user and the particular friend step .

The process begins by extracting text from messages provided by a user on a social networking website wherein the messages include one or more location concepts step . Words that are unrelated to geographical locations are removed from the text step . The process assigns a weight to each location concept based on the occurrence of that location concept in the text wherein more specific or fine grained location concepts are assigned a greater weight compared to more general location concepts step . Responsive to determining a correlation between a fine grained location concept and a more general location concept the process adds the weight of the more general location concept to the fine grained location concept step . The process then reorders the location concepts in descending order of weights step and assigns a probability score S to each location concept C based on its individual weight step . The process assigns the location concept with the highest probability score to the user step .

It will be understood that each block of the flowchart illustrations and combinations of blocks in the flowchart illustrations can be implemented by computer program instructions. These computer program instructions may be provided to a processor or other programmable data processing apparatus to produce a machine such that the instructions which execute on the processor or other programmable data processing apparatus create means for implementing the functions specified in the flowchart block or blocks. These computer program instructions may also be stored in a computer readable memory or storage medium that can direct a processor or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory or storage medium produce an article of manufacture including instruction means which implement the functions specified in the flowchart block or blocks.

The flowcharts and block diagrams in the different depicted embodiments illustrate the architecture functionality and operation of some possible implementations of apparatus methods and computer program products. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified function or functions. In some alternative implementations the function or functions noted in the block may occur out of the order noted in the Figures. For example in some cases two blocks shown in succession may be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved.

Referring to a block diagram of a computing device is shown in which the illustrative embodiments may be implemented. In particular the determination of attribute values for a user using the user s social network profiles as described in any of the illustrative embodiments may be implemented on the computing device . Computer usable program code or instructions implementing the processes used in the illustrative embodiments may be located on the computing device . The computing device includes a communications fabric which provides communication between a processor unit a memory a persistent storage a communications unit an input output I O unit and a display .

The processor unit serves to execute instructions for software that may be loaded onto the memory . The processor unit may be a set of one or more processors or may be a multi core processor depending on the particular implementation. Further the processor unit may be implemented using one or more heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example the processor unit may be a symmetric multi processor system containing multiple processors of the same type.

The memory in these examples may be for example a random access memory or any other suitable volatile or non volatile storage device. The persistent storage may take various forms depending on the particular implementation. For example the persistent storage may contain one or more components or devices. For example the persistent storage may be a hard drive a flash memory a rewritable optical disk a rewritable magnetic tape or some combination of the above. The media used by the persistent storage may also be removable. For example a removable hard drive may be used for the persistent storage .

The communications unit in these examples provides communication with other data processing systems or communication devices. In these examples the communications unit may be a network interface card. The communications unit may provide communication through the use of either or both physical and wireless communication links.

The input output unit allows transferring data from to other devices that may be connected to the computing device . For example the input output unit may provide a connection for user input through a keyboard and mouse. Further the input output unit may send output to a processing device. The display provides a mechanism to display information to a user such as a graphical user interface.

Instructions for the operating system and applications or programs are located on the persistent storage . These instructions may be loaded onto the memory for execution by the processor unit . The processes of the different embodiments may be performed by the processor unit using computer implemented instructions which may be located in a memory such as the memory . These instructions are referred to as program code computer usable program code or computer readable program code that may be read and executed by a processor in the processor unit . The program code in the different embodiments may be embodied on different physical or tangible computer readable media such as the memory or the persistent storage .

Program code is located in a functional form on a computer readable media and may be loaded onto or transferred to the computing device for execution by the processor unit . The program code and the computer readable media form computer program product in these examples. In one embodiment the computer program product is the user attribute value determination system described in any of the illustrative embodiments. In this embodiment the program code may include computer usable program code capable of determining attribute values of a user using the user s social network profiles as described in any of the illustrative embodiments herein. Indeed any combination of the processes described in the illustrative embodiments may be implemented in the program code .

In one example the computer readable media may be in a tangible form such as for example an optical or magnetic disc that is inserted or placed into a drive or other device that is part of the persistent storage for transfer onto a storage device such as a hard drive that is part of the persistent storage . In a tangible form the computer readable media also may take the form of a persistent storage medium such as a hard drive or a flash memory that is connected to the computing device . The tangible form of the computer readable media is also referred to as computer recordable storage media.

Alternatively the program code may be transferred to the computing device from the computer readable media through a communication link to the communications unit or through a connection to the input output unit . The communication link or the connection may be physical or wireless in the illustrative examples. The computer readable media may also take the form of non tangible media such as communication links or wireless transmissions containing the program code . In one embodiment the program code is delivered to the computing device over the Internet.

The different components illustrated for the computing device are not meant to provide architectural limitations to the manner in which different embodiments may be implemented. The different illustrative embodiments may be implemented in a data processing system including components in addition to or in place of those illustrated for computing device . Other components shown in can be varied from the illustrative examples shown.

As one example a storage device in the computing device is any hardware apparatus that may store data. The memory the persistent storage and the computer readable media are examples of storage devices in a tangible form.

In another example a bus system may be used to implement the communications fabric and may comprise of one or more buses such as a system bus or an input output bus. Of course the bus system may be implemented using any suitable type of architecture that provides for a transfer of data between different components or devices attached to the bus system. Additionally the communications unit may include one or more devices used to transmit and receive data such as a modem or a network adapter. Further a memory may be for example the memory or a cache such as found in an interface and memory controller hub that may be present in the communications fabric .

Although the illustrative embodiments described herein have been disclosed in the context of certain illustrative non limiting embodiments it should be understood that various changes substitutions permutations and alterations can be made without departing from the scope of the invention as defined by the appended claims. It will be appreciated that any feature that is described in connection to any one embodiment may also be applicable to any other embodiment.

