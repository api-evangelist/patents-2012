---

title: Information processing apparatus, information processing method and printing control method
abstract: When draw data that has been created by an application program is spooled, whether the resolution of the draw data is to be lowered is decided. If it is decided that the resolution of the draw data is to be lowered, printer information in which the resolution of print data to be spooled has been lowered is returned and spooling is performed at the lowered resolution. The draw data thus spooled is rasterized into a raster image at a resolution that conforms to the resolution of an image forming device, and the raster image that has been rasterized is output to a printer to thereby form an image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08670150&OS=08670150&RS=08670150
owner: Canon Kabushiki Kaisha
number: 08670150
owner_city: Tokyo
owner_country: JP
publication_date: 20120105
---
This application is a continuation of U.S. application Ser. No. 10 654 029 filed Sep. 4 2003 now allowed the content of which is incorporated by reference herein.

This invention relates to an information processing apparatus information processing method and printing control program for generating data which is to be formed by an image forming device based upon draw data that includes characters and graphics etc.

A printing system that performs printing by a printer based upon a raster image sent from a host computer is known in the art. Such a printer is referred to as a host based printer . When a raster image in print data transmitted to the host based printer is rasterized draw data such as text graphics and photographs created by an application program referred to simply as an application below running on the host computer is spooled temporarily in a virtual page memory of the host computer as a spool file EMF data via a rendering module referred to as a GDI Graphic Device Interface in Microsoft s Windows registered trademark operating system of the operating system after which the spool file is read out and rasterized by a printer driver or by the rendering module of the operating system.

There is such a system see the specification of Japanese Patent Application Laid Open No. 2003 167701 in which draw data from within an application is spooled in a spool file of an operating system and the file is read out by a print processor and rasterized by a printer driver or by a rendering module of the operating system.

When data is rasterized into such raster image data and the data is text data the application outputs not only the style of a character and the character code but also coordinate information indicating the position of the character. If the data is graphic data then the application outputs the category such as the shape the color and coordinate information. In the case of an image such as a photograph the application outputs the sizes of original image and of the output destination.

The greater functionality of recent applications is accompanied by greater complexity of the data generated by the applications. Accordingly depending upon the printer and the functions of the printer driver there are cases where data that has been accepted from the application cannot be analyzed and rasterized to image data correctly. As a consequence when some applications output text data and graphic data created thereby to a printer there are instances where the data is printed after being rasterized by the application into image data conforming to the rendering resolution of the printer. If data that has been rasterized into an image is spooled using an application of this kind the size of the spool data becomes very large and a problem which arises is that the computer hard disk and memory are put under pressure.

A similar problem is conceivable even if the application is not one that rasterizes images. With the popularization of high resolution digital cameras in recent years it has become possible to deal with high resolution image data in host computers. If high resolution image data is printed upon being pasted to the page of a document there are instances where depending upon the application the original image data is output as is without being made to conform to the number of pixels of the area pasted. If the output data is spooled using such an application the size of the spool data becomes very large and therefore the computer hard disk and memory are put under pressure. Specifically depending upon the operating system there are cases where a print error occurs if the size of the spool data exceeds GB gigabytes because output size supported on the application side is exceeded or because the hard disk does not have enough available storage capacity.

In particular owing to the ever higher rendering resolution that accompanies improvements in printer image quality achieved in recent years the size of spool data increases errors occur in the application or within the spooler and data cannot be rasterized into an image normally. As a result rendering resolution cannot be raised. This is an impediment as far an improving the image quality of a printer is concerned.

Accordingly a feature of the present invention is to provide an information processing apparatus information processing method and printing control program through which the size of a spool file for outputting raster image data to an image forming device can be reduced and a high quality image formed.

A feature of the present invention is to provide an information processing apparatus in which draw data created by an application program is spooled by an operating system the apparatus having a printer driver for accepting draw data from the operating system based upon the draw data that has been spooled said apparatus comprising determination means for determining whether or not to execute a reducing mode which is for reducing spool size in spool processing executed by the operating system first command means which when the determination means has determined that the reducing mode is to be executed issues a command that spooling be performed by the operating system upon reducing output size of the draw data created by the application program and image formation job generating means for generating an image formation job which includes a raster image that has been rasterized at an output size conforming to image forming processing by an image forming device based upon the draw data that has been spooled.

Other features and advantages of the present invention will be apparent from the following description taken in conjunction with the accompanying drawings in which like reference characters designate the same or similar parts throughout the figures thereof.

Preferred embodiments of the present invention will now be described in detail with reference to the accompanying drawings.

Draw data print data such as document data and image data that the application has requested be printed is delivered to a printer driver via a Graphic Device Interface GDI below which is a rendering module in the operating system. As a result a print job is generated by the printer driver and the generated print job is output to the printer as a print request. The GDI ordinarily spools this data temporarily the spool processing is executed as part of the operating system in a spool file as EMF Enhanced MetaFile data. When spooling ends the GDI issues a print request to a print processor . As a result the print processor reads in print output information and draw data from the spool file page by page outputs this to the printer driver one page at a time via the GDI and requests that printing be performed. When the print processor outputs the draw data that has been spooled in the spool file to the printer driver the print processor functions to convert coordinate information in accordance with the resolution of the raster image data that is output from the printer driver . It should be noted that although the print processor is provided as a module in the operating system a print processor customized as by the printer manufacturer is allowed to be provided together with the printer driver and these are allowed to be installed on a hard disk. The printer driver thus requested by the print processor to perform printing renders the draw data into raster image data in accordance with the printing resolution of the printer using a GDI rendering engine which is a rendering function implemented by the operating system subsequently executes color processing and adds on printer commands generates data in the form of a print job and transmits the print job to the printer via a port monitor .

The spool file created by this spool processing of the operating system retains the command by which the application requests printing or a bitmap image etc. as a file. At this time the usual practice is for character style character string character code and coordinate information etc. to be retained in regard to characters. With regard to images such as photographs usually the original image information and coordinate information is retained. After characters graphics and image data are read in by the printer driver rendering is performed by the GDI rendering engine and a conversion is made to raster image data that conforms to the resolution of the printer . As a result even if there is an increase in resolution that accompanies an increase in the image quality of the printer the size of the spool file does not increase and no problems arise. It should be noted that the GDI and GDI rendering engine have been described as being separate in order to facilitate the description. With Microsoft s Windows registered trademark operating system however both are implemented by the same rendering output module. Further the printer driver itself may be equipped with a rendering function. However developing software on each occasion in such a manner that the rendering function of the printer driver is supported in preparation for extension of a plotting and drawing function supported by the GDI would burden printer manufacturers. It is preferred therefore that rendering be carried out using the rendering function GDI rendering engine of the operating system.

In a case where the draw data is complicated data or the like there are instances where printing cannot be performed normally depending upon the functions of the printer and printer driver . Depending upon the application therefore there are instances where rendering is carried out by the application and the resulting raster image is output to the printer driver . In such cases usually the entire image of the page is converted to a raster image and output from the application at a resolution the same as that used when rendering processing is executed by the printer driver . A problem which arises is that the amount of spool data itself becomes very large as the resolution of the raster image the resolution of the printer increases. Further system error ascribable to an increase in spool data size occurs as mentioned earlier even with an application that does not execute rendering processing.

Lowering rendering resolution i.e. lowering the resolution of the raster image also is conceivable as a method of dealing with the above situation. However in case of an application that outputs characters or graphics as a draw command rendering is performed at a low resolution even for character strings output by ordinary character code. This makes it impossible for the printer to print at its original printing quality.

Accordingly the object of this embodiment is to render at high quality draw data which is output independently of resolution as in the manner of a character string output in accordance with a print character code while reducing the size of the spool file that is output from the application which outputs raster image data that has been rendered at a resolution conforming to the rendering resolution namely the resolution of the printer .

First draw data for printing print data such as document data or image data usually is created in accordance with the resolution or print area number of pixels conforming to resolution of the printer of interest. At step S in the application requests the GDI of the operating system to initialize the printer driver and requests the GDI for printer information such as the printing area and resolution of the printer using a predetermined API Application Programming Interface . Control then proceeds to step S at which the GDI initializes the printer driver in response to the request and requests the printer driver for printer information referred to as GDIINFO .

First the printer driver sets paper size and a printing area within bounds of the paper based upon a user set value referred to as DEVMODE . For example ulLogPixelsX and ulLogPixelsY are items of rendering resolution numbers of pixels per logical inch in the horizontal and vertical directions respectively of the image . Examples of values set in accordance with this rendering resolution are ulHorzRes printing width in pixel units ulVertRes printing height in pixel units ptlPhysOffset.x left side offset of the printing area and ptlPhysOffset.y upper side offset of the printing area .

In the data structure of DEVMODE items other than dmDriverData device specific information have specifications common in the operating system. It is possible for dmDriverData to be used freely on a per printer driver basis.

In order to reduce the size of the spool file output from within the application in regard to the raster image data that has been rendered at the above mentioned rendering resolution it will suffice to reduce the value of the rendering resolution. If the rendering resolution is reduced however printing quality will decline even with regard to draw data that is not dependent upon resolution as in the manner of a character string represented by a character code.

There are two cases in which the printer driver is initialized. One is initialization carried out when the application outputs draw data to the GDI . The other is initialization performed when the print processor outputs data of the spool file to the printer .

If the basis is the specifications of the operating system then ulLogPixelsX and ulLogPixelsY set the rendering resolution. Here a conventional printer returns the same resolution for both types of initialization mentioned above. However the printer driver according to this embodiment returns a value of low resolution for the purpose of spool reduction only in the case where initialization is implemented from within the application. When initialization is from the print processor the printer driver returns a high rendering resolution one which corresponds to the resolution of the printer . As a result draw data that is output independently of resolution such as a character string output in accordance with character code can be printed at high quality while the size of the spool file that outputs raster image data rendered at the rendering resolution is reduced in the application.

Accordingly first it is required that the printer driver determine whether it is necessary to return a resolution that is for the purpose of reducing spool size i.e. to lower the resolution of the draw data to be spooled step S .

This determination processing will be described with reference to the flowchart of in which steps identical with those in are designated by like step numbers.

First at step S in the printer driver determines whether initialization is from within the application via the GDI for spool related purposes or is from the print processor through the GDI for the purpose of actual printing. As for one method of making this determination it is possible to investigate the calling module. Accordingly the determination can be made depending upon whether a code indicating the print processor is within the calling module.

Another method is for dealing with a possible situation in which a customized print processor is supplied together with the printer driver . This is for when use is made of a print processor other than one in line with the standard of the operating system. In this case when the print processor initializes the printer driver a flag to the effect that initialization is from the print processor is set in DEVMODE beforehand and the printer driver can determine from where initialization was designated by referring to this value.

If it is found at step S that initialization is from within the application control proceeds to step S. Here the printer driver determines whether the function for reducing spool size is required. A method in which the user makes the selection is one example of a method of making this determination. Specifically in cases where an error occurs during printing and printing halts as a result the time required for printing becomes abnormally long or some or all of the draw data fails to be printed the function for reducing spool size is turned on by a user decision employing a user set function of the printer driver .

This user interface screen is displayed by opening the properties of detailed printer setting of the printer driver and designating a customization setting button not shown . When the user commands the start of printing the user calls the print details screen of the printer driver from the print setting screen of the application thereby causing the customization setting screen to be displayed. This allows the user to set the spool size reducing function. Specifically in the example of the spool size reducing function is set by checking a check box labeled REDUCE SIZE OF PRINT DATA . The printer driver stores information as to whether the spool size reducing function is to be executed or not in dmDriverData see of DEVMODE beforehand. By referring to this information at the time of printing the printer driver can determine whether or not to reduce the spool size.

Another method is for the printer driver to make the determination based upon whether the size of the spool file per page is greater than a predetermined page size this being premised on a case where an entire page is output as an image. According to this method the determination is made based upon dmSize which indicates the size of the paper in DEVMODE or dmPrintQuality printer resolution which indicates printing quality. Other possible methods include one in which the printer driver allows the user to reduce spool size based upon the spool size and one in which a setting function is provided for making the spool size reducing processing always on or always off and determining whether the spool size reducing processing is to be executed or not based upon the set value and spool size.

With reference again to control proceeds to step S if a NO decision is rendered at step S or S meaning that no reduction in spool size is to be made . At step S the printer driver returns printer information to the GDI based upon a rendering resolution for printing purposes i.e. based upon the resolution of printer .

On the other hand if a YES decision is rendered at both steps S and S meaning that spool size is to be reduced control proceeds to step S where the printer driver returns low resolution printer information to the application via the GDI in order to reduce spool size.

According to this embodiment it is assumed that the printing resolution of the printer is 600 dpi and that the resolution for when the spool size reducing function is executed is 300 dpi. In the case of 300 dpi the spool size that accompanies spool processing of the operating system will no longer exceed 1 GB even if draw data is multivalued data even if the application outputs draw data as a raster image. As a result even if available capacity of the RAM area or HDD of the information processing apparatus is taken into consideration it can be predicted that print processing generally cannot lead to spool processing error. Thus the output data size of the spool file from the application that outputs an image that has been rendered at the above mentioned rendering resolution can be reduced. However in a case where the application outputs an image that has been rendered at the rendering resolution the result of rendering is output at the lowered resolution. Consequently the lower the resolution is made the smaller the spool size becomes and the result of printing deteriorates correspondingly. Accordingly it is necessary to decide the resolution in dependence upon paper size and printing quality.

After step S or S is thus executed control proceeds to step S . Here the printer information that has been returned to the GDI is returned to the application via the GDI . As a result on the basis of the printer information returned the application creates draw data based upon the obtained resolution or printing area and outputs the draw data to the GDI .

Next control proceeds to step S. Here the GDI spools the draw data which has been requested by the application as the spool file in accordance with the EMF format. This is the format of the standard spool file according to the Windows registered trademark system. When spooling ends control proceeds to step S at which the GDI requests the print processor to start printing.

Next at step S the print processor commanded at step S to start printing requests the GDI to perform initialization in order to initialize the printer driver . Here if initialization from the print processor has been set in DEVMODE and this is found at the decision of step S in described above the print processor sets information indicating that initialization is from the print processor in DEVMODE at the time of initialization requests the GDI for initialization of the printer driver and requests printer information such as the printing area or resolution of the printer . This is followed by step S at which the GDI for which initialization of the printer driver has been requested from the print processor initializes the printer driver and requests the printer driver for GDIINFO which is printer information.

Control then proceeds to step S at which the printer driver responds by setting GDIINFO and performing initialization. At this time the decision of step S is rendered in a manner similar to that at step S because an initialization function the same as that of step S is called. Here since it is determined that initialization is not from within the application the printer driver sets the printer information in GDIINFO at the resolution for printing which is the resolution of printer and returns this printer information to the GDI .

Next control proceeds to step S at which the print processor outputs draw data to the GDI on the basis of this printer information. At this time the GDI is requested to effect a conversion to resolution change the coordinate space that is in accordance with the printer information obtained via the GDI . Control then proceeds to step S at which the GDI reads out the draw data of the spool file page by page and outputs it to the printer driver in accordance with the command to convert resolution requested by the print processor . As a result even if the resolution is different from that at the time of spooling a resolution conversion is performed within the GDI and then the printer driver is requested to perform printing. This makes it possible to achieve printing in the same page layout.

In a graphic image is the result of printing an output from the application in conformity with the rendering resolution of the printer driver . That is the image is an image of 600 600 pixels and has been output at 600 600 pixels with 200 200 as the starting point. Reference numeral denotes the output area of a character string that has been output in accordance with character code. Here a character string abcdefghijk is output at position 1000 400 at size 200 and a character string 123456789 is output at position 1000 600 at size 200. Reference numeral denotes an enlarged output area of an original image that is not dependent upon the rendering resolution of the printer driver . The image has been output upon enlarging a 100 100 image to a size of 1600 1600 from the starting point 200 1000 . Actually in case of an application in which output is by raster image data of the rendering resolution an entire page is printed upon making a conversion to raster image data of the rendering resolution. In however the print image is set by draw data rather than raster image data. In the example of ordinary printing shown in the output from the application becomes the output from the GDI as is. In the example of therefore the GDI renders by outputting the sizes display positions and display sizes of the images to as is. In other words in the example of an output command from an application and an output command from a GDI are in complete agreement.

As will be evident from a comparison with whereas an image of 600 600 pixels is spooled at reference numeral in an image of 300 300 pixels is spooled at reference numeral in . The size of the spool data therefore is reduced. However with regard to a character string and image which are not dependent upon rendering resolution only the coordinate information and size differ spooling is performed at the same data size. In other words the size of the character string is 100 which is half the size 200 indicated at in and the coordinate information is 500 200 500 300 which also is half of 1000 400 1000 600 respectively. Further in regard to the image indicated at the starting point is 100 500 which is half the starting point 200 1000 of image in and the size is 800 800 which also is half of 1600 1600 of image in .

With the above mentioned output command from application the image is an image of 300 300 pixels and has been output at a size of 300 300 pixels with 100 100 as the starting point. The character string abcdefghijk is output at position 500 200 at size 100 and the character string 123456789 is output position at 500 300 at size 100. Furthermore the image has been output upon enlarging a 100 100 image to a size of 800 800 from the starting point 100 500 .

In an output command from GDI described later the size resolution of the image printed with regard to the graphic is 300 300 which is in comparison with graphic in . Since this is a reduction in size resolution the image quality of the printout declines. However as a result of the resolution conversion of GDI as requested by the print processor rendering is at a size of 600 600 and with regard to the character string and image output is by exactly the same command as that for the character string and image . As a result the character string and image are rendered at a high rendering resolution and these can be printed at an image quality the same as that of the character string and image in step S .

More specifically with the above mentioned output command from GDI the image is a 300 300 pixel image and has been rendered at a size of 600 600 pixels with 200 200 as the starting point. Further the character string abcdefghijk is rendered at position 1000 400 at size 200 and the character string 123456789 is output at position 1000 600 at size 200. Furthermore the image has been rendered upon enlarging a 100 100 image to a size of 1600 1600 from the starting point 200 1000 .

Next control proceeds to step S at which the printer driver renders the spool file as a raster image using the GDI rendering engine . Here as mentioned above the GDI rendering engine is the same module as the GDI . Control then proceeds to step S at which the printer driver converts the raster image data which is the result of the conversion to print data of a printer command and outputs the same to the printer . Processing is then terminated.

In accordance with the first embodiment as set forth above a decline in the quality of a printed image is suppressed. In addition with regard to data for which printing has been specified by an application it is possible to reduce the amount of this data spooled.

The first embodiment set forth above has been described in regard to a method of rendering the EMF formatted spool file which has been spooled for the purpose of low resolution rendering at a high resolution by the printer driver . However there are instances where printing is performed following halting of spooling itself in the EMF format in accordance with a decision rendered by the application . For example there are cases where a change is made to a RAW spool that spools print command data per se transmitted to the printer by the printer driver . In such cases the first embodiment is such that the output command from application is output to the printer driver as is via the GDI as a result of which printing happens to be performed at reduced size.

In the first embodiment data for which printing is requested by the application is spooled in the spool file by the GDI temporarily as EMF data. By contrast in the case of RAW spooling according to the second embodiment the GDI requests the printer driver to perform printing directly. Upon thus being requested to perform printing the printer driver renders the draw data into raster image data using the GDI rendering engine and then outputs the data upon applying color processing and a printer command. The printer command is then spooled as the spool file . The spooled printer command is transmitted to the printer via the print processor and port monitor .

Processing according to the second embodiment will be described with reference to the flowcharts of B focusing on processing that differs from that of the first embodiment. Steps in B identical with those of the flowchart of are designated by like step numbers and are not described again.

When the application creates draw data and outputs this data to the GDI at step S it is possible for the application to inhibit EMF spooling.

The data type of the spool file can be specified by lpszDatatype in DOCINFO . Ordinarily 0 referred to as NULL is specified and printing is performed with the settings of the system as is. However EMF spooling is indicated if the character string is emf and a changeover to RAW spooling is requested if the character string is raw .

Thus at step S the GDI determines based upon lpszDatatype in DOCINFO whether the application has designated something other than the EMF spooling. If the decision rendered is NO i.e. if EMF spooling is designated processing from steps S to S B is executed.

If a YES decision is rendered at step S i.e. if something other than EMF spooling is designated then control proceeds to step S and the GDI outputs the draw data from the application directly to the printer driver .

Thus if steps S to S B are executed or if the processing of step S is executed control proceeds to step S and the printer driver is requested to perform printing via the GDI . However if a YES decision is rendered at step S then rendering would be performed at a low resolution for the purpose of spool reduction.

Accordingly in processing from step S onward the low resolution for reducing the spool is raised to the high resolution for printing before an output is delivered to the printer this being done only in a case where rendering has been performed at low resolution. At step S therefore it is determined based upon the size of the rendered image etc. whether rendering has been performed at the low resolution for reducing spool size. If a NO decision is rendered at step S control proceeds to step S . Since rendering has been performed at the high resolution for printing the printer driver outputs this raster image data to the printer as is.

If a YES decision is rendered at step S on the other hand then control proceeds to step S. In this case since rendering has been performed at the low resolution for reducing the size of the spool the raster image data that has been rasterized at the low resolution is enlarged to the resolution for printing by using an enlarging function possessed by the GDI rendering engine . Finally the enlarged raster image data is converted to a printer command and output to the printer at step S. This processing is then exited.

Thus in accordance with the second embodiment as described above it is possible to render at high quality draw data which is output independently of resolution as in the manner of a character string described by character code while reducing the size of the output spool file from the application which outputs raster image data that has been rendered at a resolution conforming to the resolution of the printer .

By virtue of the higher resolution of printers visual recognition does not suffer even when images are reduced in size. As a result N up printing downscaled layout printing in which a plurality of pages are reduced in size and printing on a single sheet of paper has come into wide use. The N in N up represents the number of pages printed on one sheet of paper. For example in a case where four pages of draw data are printed on a single sheet of paper such printing is called 4 up .

In N up printing draw data of each of a plurality of pages is reduced and printed. As a consequence there are cases where fine lines often used in applications for graphs and charts etc. have their line width reduced to 0 if a size reduction is applied with the result that these lines are not printed.

In the example of some fine lines have not been printed in draw data of Page 1. Accordingly the third embodiment will be described in regard to a technique for preventing loss of fine lines at the time of N up printing. It should be noted that the hardware implementation of the printing system in the third embodiment is similar to that of the first embodiment and need not be described again.

As described in the first embodiment draw data print data such as document data and image data that the application has requested be printed usually is spooled temporarily in the spool file as EMF data by the GDI and the print processor reads in print output information and draw data from the spool file page by page and outputs the same to the printer driver via the GDI one page at a time to print the same.

The GDI has a function for designating an area on part of a sheet of paper per page spooled reducing one page of data and outputting the reduced data in the corresponding area. Until an instruction for ending output to the sheet of paper is issued to the GDI any number of pages can be output to fit within the same sheet of paper. The print processor performs N up printing using this function.

More specifically when the print processor delivers an output to the printer driver the print processor divides the print area which has been returned by the printer driver into N equal portions reads in print output information and draw data from the spool file page by page and outputs the data in order one page at a time to each of the N areas via the GDI .

In the third embodiment the printer driver returns printer information to the application . The printer information is based upon a resolution that is the result of multiplying resolution by a reduction ratio taking into consideration the fact that reduction will be carried out. At the time of printing on the other hand the printer driver returns high resolution printer information for printing purposes whereby lines whose width has been reduced can be printed intact as 1 at the time of printing.

Processing according to the third embodiment will now be described. The hardware implementation of the third embodiment is the same as that of the printing system of first embodiment and need not be described again.

At step S the GDI initializes the printer driver and requests printer information referred to as GDIINFO . Control then proceeds to step S. If it is determined here based upon the printer information that a mode for dealing with loss of fine lines in N up printing has been turned on control proceeds to step S at which the printer driver returns a value of low resolution for dealing with loss of fine lines in N up printing only in case of initialization from the application . When the mode for dealing with loss of fine lines in N up printing is determined to be off or when initialization is from the print processor the printer driver returns a high rendering resolution which corresponds to the resolution of the printer at step S.

If it is determined at step S in that initialization is from within the application control proceeds to step S at which it is determined whether the function for dealing with loss of fine lines in N up printing is on. This is determined depending upon whether the user has set this function to the ON state using the user interface of . If the result of N up printing is that some fine lines are missing from the printout the function for dealing with loss of fine lines in N up printing is turned on based upon the judgement of the user using the user setting function of the printer driver .

When the user starts printing the user can set the printer driver from the print setting screen of the application . The printer driver stores information as to whether the function for dealing with loss of fine lines in N up printing is to be set executed or not in dmDriverData of DEVMODE and can make the determination by referring to this information at step S in .

If a NO decision is rendered at step S or S meaning that the function for dealing with loss of fine lines in N up printing is not to be implemented control proceeds to step S at which the printer driver returns printer information to the GDI based upon a rendering resolution for printing purposes i.e. based upon the resolution of printer .

On the other hand if a YES decision is rendered at both steps S and S meaning that the function for dealing with loss of fine lines in N up printing is to be implemented control proceeds to step S at which the printer driver returns low resolution printer information which is for dealing with loss of fine lines in N up printing to the application via the GDI .

The decision on resolution in this case can be made based upon the N up reduction ratio. If Nv pages of draw data in the vertical direction and Nh pages of draw data in the horizontal direction are printed on a single sheet of paper Nv Nh up the reciprocal S of the reduction ratio will be equal to Nh if Nh Nv holds and Nv if Nh

However in order to enhance viewing ease in N up printing often blank spaces are inserted between pages or surrounding each page.

Assume now that the width and height of a sheet of paper are W and H respectively. The length Ih of each blank space in the horizontal direction and the height Iv of each blank space in the vertical direction are not decided until after the magnification enlargement ratio is decided. Therefore first the minimum value I of the length of each blank space is decided and then the reduction rate is found based upon this value to thereby make the decision.

Since the image width of each page after reduction can be found from W I Nh 1 Nh the reciprocal Sh of the reduction ratio in the horizontal direction is found as follows 1 Similarly the reciprocal Sv of the reduction ratio in the vertical direction is found as follows 1 Further S is decided as follows S Sh holds in case of Sh Sv and S Sv holds in case of Sh

Processing similar to that of the second embodiment set forth above can be executed in the third embodiment as well. In this case enlargement is performed after rendering. However if enlargement is performed at a multiple that is not a whole number a problem that arises is prolonged processing time. A whole number can be obtained therefore by rounding up decimals.

If we let R represent rendering resolution for printing purposes then resolution for dealing with loss of fine lines in N up printing will be R S S

At step S the GDI for which initialization of the printer driver has been requested from the print processor initializes the printer driver and requests the printer driver for GDIINFO which is printer information. In response the printer driver sets GDIINFO and performs initialization. At this time the decision of step S is rendered in a manner similar to that at step S because an initialization function the same as that in the case of step S is called. Here since it is determined that initialization is not from within the application the printer driver sets the printer information in GDIINFO using the high resolution for printing purposes which is the resolution of printer and returns this printer information to the GDI .

Next control proceeds to step S at which the print processor outputs draw data to the GDI on the basis of this printer information. When N up printing is carried out processing for reading the draw data out of the spool file page by page and outputting the data to the printer driver is executed N times. In accordance with the printer information obtained via the GDI page by page the print processor requests the GDI to specify printing position and to effect a resolution conversion a change of coordinate space . When the printing of N pages ends the GDI is notified that writing to the paper has ended.

Control then proceeds to step S at which the GDI outputs the N pages of draw data of the spool file to the printer driver as a single sheet of page data in accordance with the instructed printing position and resolution conversion of the print data of each page requested by the print processor . Next control proceeds to step S at which the printer driver renders the spool file into raster image data using the GDI rendering engine .

If the application attempts to have the printer whose rendering resolution is 600 dpi print one inch of a fine line having a width of one pixel in a case where the function for dealing with loss of fine lines in N up printing is off a draw command that fills in an area of 0 0 to 1 600 is executed because 600 dpi printer information is returned at step S. However in case of e.g. 4 up printing printing is performed upon effecting a reduction to an area that is halved both vertically and horizontally by the coordinate transformation of step S. This means that since a value of less than one pixel is discarded a transformation is made such that an area of 0 0 to 0 300 namely an area of width 0 is filled in. As a result the GDI executes the next draw command without outputting a draw command to the printer driver and therefore the fine line is no longer printed. However since a draw command for filling in an area of 1 0 to 2 600 undergoes a conversion such that an area of 0 0 to 1 300 is printed even though the area is reduced to one half printing is carried out at a width of one pixel. In other words printing is or is not performed depending upon position.

On the other hand if an attempt is made to print one inch of a fine line having a width of one pixel in a case where the function for dealing with loss of fine lines in N up printing is on then the printer driver will return printer information of resolution 300 dpi at step S in case of 4 up printing. The application therefore executes a draw command that fills in an area of 0 0 to 1 300 . However when printing is actually carried out the printer driver returns printer information of resolution 600 dpi at step S. As a result as described above in connection with the first embodiment a function according to which the print processor subjects the spooled draw data to a coordinate transformation in conformity with the resolution of the printer driver and then outputs the result operates and a conversion is made to a draw command that fills in an area of 0 0 to 2 600 . As a result even though printing is performed upon making a size reduction to half in 4 up printing 0.5 inches of a fine line having a width of one pixel is printed by a 0 0 to 1 300 draw command.

Control then proceeds to step S at which the rendered raster image data is converted to a printer command and output to the printer . Processing is then exited.

Thus in accordance with the third embodiment of the present invention as set forth above even though print data of each of a number of pages is reduced in size and printed in N up printing it is possible to avoid a situation in which fine lines employed in applications for graphs and charts etc. are reduced to width 0 . In other words the problem in which fine lines fail to be printed can be avoided.

It goes without saying that the object of the invention is attained by supplying a storage medium storing the program codes of the software for performing the functions of the foregoing embodiments to a system or an apparatus reading the program codes with a computer e.g. a CPU or MPU of the system or apparatus from the storage medium and then executing the program codes. In this case the program codes read from the storage medium implement the novel functions of the embodiments and the storage medium storing the program codes constitutes the invention. Examples of storage media that can be used for supplying the program code are a floppy disk hard disk optical disk magneto optical disk CD ROM CD R magnetic tape non volatile type memory card or ROM etc.

Furthermore besides the case where the aforesaid functions according to the embodiments are implemented by executing the program codes read by a computer it goes without saying that the present invention covers a case where an operating system or the like running on the computer performs a part of or the entire process in accordance with the designation of program codes and implements the functions according to the embodiments.

It goes without saying that the present invention further covers a case where after the program codes read from the storage medium are written in a function expansion board inserted into the computer or in a memory provided in a function expansion unit connected to the computer a CPU or the like contained in the function expansion board or function expansion unit performs a part of or the entire process in accordance with the designation of program codes and implements the function of the above embodiment.

The present invention is not limited to the above embodiments and various changes and modification can be made within the spirit and scope of the present invention. Therefore to apprise the public of the scope of the present invention the following claims are made.

