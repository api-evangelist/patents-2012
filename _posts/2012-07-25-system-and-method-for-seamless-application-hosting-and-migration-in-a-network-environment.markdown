---

title: System and method for seamless application hosting and migration in a network environment
abstract: An example method includes receiving a hypertext transfer protocol (HTTP) request from a client for an application at a first datacenter at which the application is not available; and querying a first global site selector (GSS) configured to identify a second datacenter at which the application is available. The second datacenter can be identified by a selected virtual Internet Protocol (VIP) address. The method can also include forwarding the HTTP request to the selected VIP address; and responding to the client with an HTTP response received from the selected VIP address.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09052955&OS=09052955&RS=09052955
owner: CISCO TECHNOLOGY, INC.
number: 09052955
owner_city: San Jose
owner_country: US
publication_date: 20120725
---
This disclosure relates in general to the field of communications and more particularly to a system and a method for seamless application hosting and migration in a network environment.

Cloud computing can facilitate organizing computing resources into multiple datacenters each datacenter offering a pool of configurable computing resources and storage and physically separated from the other datacenters. Such multi datacenter architectures can offer data distribution services with high availability among other features. These datacenters and other such service provider or enterprise deployment architecture where a single domain name is hosted across multiple datacenters can also offer geographic proximity which can result in low latency and thereby provide better fault migration and load sharing.

An example method is provided and includes receiving a hypertext transfer protocol HTTP request from a client for an application at a first datacenter at which the application is not available and querying a first global site selector GSS configured to identify a second datacenter at which the application is available. The second datacenter can be identified by a selected virtual Internet Protocol VIP address. The method can also include forwarding i.e. communicate in any way the HTTP request to the selected VIP address and responding to the client with an HTTP response received from the selected VIP address.

In example embodiments the first GSS can identify the second datacenter from a VIP uniform resource locator URL configuration VIP URL that includes the selected VIP address corresponding to a URL of the application. In example embodiments the method may further include configuring the application on an application control engine ACE in the second datacenter and pushing the URL VIP pair to a second GSS in the second datacenter. The second GSS may propagate the URL and the selected VIP address to the first GSS. The URL of the application may be added to a URL match policy in the ACE. In some embodiments the URL of the application may be added to the URL match policy when the application is added to the second datacenter and other features.

Turning to is a simplified block diagram illustrating a communication system for seamless application hosting and migration in a network environment in accordance with one example embodiment. illustrates a client that can communicate with a domain name system DNS server . A Domain Name Service running in DNS server may translate queries for domain names e.g. www.company.com into Internet Protocol IP addresses. Client can communicate with an application control engine ACE having a virtual IP VIP address VIP in a datacenter datacenter over a network e.g. Internet . Datacenter may communicate with another datacenter datacenter over another network e.g. wide area network WAN . Datacenter may include another ACE that can communicate with ACE . Datacenters and may include respective global site selectors GSSs and . Datacenter may include servers that host an application .

According to embodiments of communication system ACEs and may be configured to receive hypertext transfer protocol HTTP requests destined to VIP addresses configured locally and to match the request using URL match policies to balance load among servers in respective datacenters and . GSS and may allow deployment of Internet and intranet applications e.g. application such that application users e.g. client may be quickly routed to a standby datacenter e.g. datacenter if a primary datacenter e.g. datacenter is down. GSS and can perform global traffic management and loadbalancing of the applications according to suitable business rules. GSS and may also act as authoritative name servers performing DNS resolution based on client s DNS request for a specific domain name e.g. www.company.com and choosing a suitable datacenter or e.g. amongst multiple datacenters hosting the domain name to respond to client s DNS request.

Certain terminologies are used with regard to the various embodiments of communication system . The term client may be inclusive of devices used to initiate a communication and programs that seek to initiate a communication on behalf of another entity or element and can include computers personal digital assistants PDAs laptops electronic notebooks cellular telephones tablets iPads databases or any other component device element application or object capable of initiating a voice audio video or data exchanges within communication system . As used herein the term datacenter may include a network of hardware and software forming a shared pool of configurable computing resources e.g. networks servers storage applications services etc. that can be suitably provisioned to provide on demand self service network access resource pooling elasticity and measured service among other features.

As used herein the term application may be inclusive of any type of numeric voice video or script data or any type of source or object code or program files software executable file comprising instructions that can be understood and processed on a computer library modules loaded during execution object files system files hardware logic software logic or any other executable modules or other suitable information in any appropriate format that may be communicated from one point to another in electronic devices and or networks.

As used herein the term network element can include computers network appliances servers routers switches gateways bridges loadbalancers firewalls processors modules or any other suitable device component element or object operable to exchange information in a network environment. Moreover the network elements may include any suitable hardware software components modules interfaces or objects that facilitate the operations thereof. This may be inclusive of appropriate algorithms and communication protocols that allow for the effective exchange of data or information.

The term HTTP request may be inclusive of a request message in HTTP or equivalent client server protocols such as HTTP secure HTTPS secure HTTP S HTTP HTTP 1.1 Upgrade header Representational state transfer REST SPDY Waka etc. The HTTP and equivalent protocol is a client server protocol where the client submits the HTTP request message to the server. The HTTP request can contain the following a request line for example GET app1.html HTTP 1.1 HOST www.company.com which requests a resource called app1.html from server located at www.company.com headers such as accept language en an empty line and an optional message body. In a general sense the HTTP request can contain a URL of requested resource.

The server which provides resources such as hypertext markup language HTML files and other content or performs other functions on behalf of the client returns a response message called herein as an HTTP response to the client. The HTTP response can contain completion status information about the request and may also contain requested content in its message body including the following a status line for example HTTP 1.1 200 OK which indicates that the client s request succeeded headers such as content type text html an empty line and an optional message body.

 URL is a specific character string that constitutes a reference to a network resource. In general the URL comprises the following the protocol e.g. http https gopher etc. followed by a colon two slashes then depending on the protocol a server name exp ftp www smtp etc. followed by a dot . then a domain name alternatively IP address and the path of the resource to be fetched or the program to be run. An example of a URL is http www.company.com app1.html which indicates the HTTP protocol the server www located at the domain name company.com with the path indicated by app1.html to the resource identified as app1.html. The domain name or IP address gives the destination location for the URL and the path is used to specify and find the resource requested. The domain name e.g. company.com is an identification string that defines an IP address in a network.

For purposes of illustrating the techniques of communication system it is important to understand the communications that may be traversing the system shown in . The following foundational information may be viewed as a basis from which the present disclosure may be properly explained. Such information is offered earnestly for purposes of explanation only and accordingly should not be construed in any way to limit the broad scope of the present disclosure and its potential applications.

Large multi datacenter deployments are on the rise as also web based enterprise applications with cloud based application hosting. For multiple geographically distributed datacenters the domain name e.g. company.com can be resolved to the IP address of any one of the datacenters however each datacenter may serve a different set of applications under the same domain name. Such asymmetric application distribution over a set of datacenters may be implemented for various reasons different datacenter capacities capabilities service level agreements etc. may lead to different applications being hosted at different datacenters application migration between datacenters can result in temporary asymmetric application distribution application redundancy and fail over between multiple distributed datacenters may lead to multiple datacenters hosting the same applications although only one datacenter has the application active and accessible by users.

Server load balancing devices such as the ACE that are connected to a corporate LAN or the Internet can balance content requests among two or more servers. Server loadbalancing devices ensure that the content consumer is directed to the host that is best suited to handle that consumer s request. GSS typically performs loadbalancing across multiple geographically dispersed datacenters. GSS leverages global content deployment across multiple distributed and mirrored data locations optimizing site selection improving DNS responsiveness and ensuring datacenter availability. The GSS is generally inserted into the traditional DNS routing hierarchy and monitors the health and load of the ACEs in individual datacenters. The GSS uses the ACE supplied information and user specified routing algorithms to select a suitable e.g. least loaded datacenter in real time. The GSS can detect site outages ensuring that web based applications are online and that customer requests to datacenters that suddenly go offline are quickly rerouted to available resources. GSS can also play the role of an authoritative DNS server for specific domain names hosted by certain organizations across the datacenters they own.

DNS is a hierarchical distributed naming system for any resource e.g. computer network service etc. in a network. DNS associates information such as IP addresses with corresponding domain names e.g. company.com in the network. Some of the components in the DNS infrastructure include DNS resolvers e.g. clients that access DNS servers DNS servers e.g. server running DNS software that has the responsibility of finding the requested web site root name servers e.g. server residing at the top of the DNS hierarchy and that can resolve the top level domains such as .com .net etc. intermediate name servers e.g. server used for scaling purposes delegated from the root name server authoritative name servers e.g. server that responds directly to the DNS server with the requested IP address . Information about the domain name space is stored on DNS servers that are distributed throughout the Internet. Each DNS server stores the complete information about its small part of the total domain name space. This space is referred to as a DNS zone. A zone file containing DNS information for each domain e.g. company.com or subdomain e.g. abc.company.com in the DNS zone is stored in the DNS server.

End users needing data from a particular domain e.g. company.com generate a recursive DNS request on their client that is sent first to the local DNS server. The DNS server returns the IP address of the requested domain to the end user. If the local DNS server does not have the information requested by the end user it sends a query to a root name server asking for the IP address. The root name server responds to the request by either referring the DNS server to the specific name server supporting the top level domain or sending the DNS server to an intermediate name server that knows the address of the authoritative name server for the requested domain name.

The local DNS server sends a query to the intermediate name server that responds by referring the DNS server to the authoritative name server for the requested domain name and all the associated subdomains. The local DNS server sends a query to the authoritative name server for the requested domain name. The authoritative name server responds to the DNS server with an appropriate IP address e.g. 172.16.56.76 . The DNS server sends the IP address to the client. The client uses the IP address to initiate a connection to a website at the requested domain name. Note that the DNS protocol cannot resolve the part of URLs that indicates the path such as the part after the domain name in www.company.com app1.html i.e. app1.html as the path is not a domain name or a subdomain name. Thus a DNS query app1.html hosted at www.company.com can be resolved only up to www.company.com.

The GSS supports several e.g. over 4000 separate VIP addresses. It coordinates the activities of ACEs by acting as the authoritative DNS server for the devices e.g. servers under its control. The name space records in local DNS servers point to the GSSs located at the nearest datacenter. The GSS determines which datacenter site should receive the client traffic. As the authoritative name server for a domain or subdomain the GSS considers several factors when responding to a DNS request such as availability e.g. servers that are online and available to respond to the query proximity e.g. server that responded the fastest to a query load e.g. type of traffic load handled by servers in the domain source of the request e.g. DNS server requesting the content and preference e.g. first second or third choice of the loadbalancing algorithm to use when responding to a query among other factors e.g. country specific policies .

When resolving DNS requests the GSS performs a series of distinct operations that take into account the resources under its control and return a suitable VIP to the DNS server. For example an end user types in www.company.com in an address field of the client e.g. browser in order to download an updated version of an application from the website at www.company.com. The domain name may be hosted at three different datacenters. The DNS server processes the request and the request arrives at the GSS in one of the datacenters hosting the domain name. The GSS sends to the client the IP address of the suitable ACE for example at datacenter . The client processes the transmitted IP address and is directed to the ACE at datacenter .

In addition to specifying a resource GSS can also be configured with an option of specifying a keepalive for a resource in the datacenter. GSS periodically checks to determine if a resource is still active using a keepalive protocol e.g. Keep Alive Appliance Protocol KAL AP which is a specific interaction e.g. handshake between the GSS and another device. A keepalive is designed to test if a specific protocol on the device is functioning properly. If the handshake is successful then the device is available active and able to receive traffic. If the handshake fails then the device is considered to be unavailable and inactive. The GSS uses keepalives to collect and track information from the online status of VIP addresses to services and applications running on a server.

GSS devices respond to DNS queries and perform keepalives to provide global server loadbalancing functionality. Additionally a designated GSS may act as a central management device and host an embedded GSS data store e.g. database that contains shared configuration information such as DNS rules and individual device configuration for each GSS that it controls. Configuration changes may be made to the designated GSS and the changes are automatically communicated to each registered GSS. The GSS performs routing of DNS queries based on the DNS rules and conditions created from the designated GSS. Each GSS is known to and synchronized with the designated GSS. Synchronization occurs automatically between the two devices whenever the GSS network configuration changes. Updates are packaged and sent to the designated GSS using a secure connection between the two devices.

Within a single datacenter an ACE typically distributes load across a group of servers in a server farm and represents the group or datacenter by a VIP address. Thus each datacenter may be identified by a corresponding VIP address for a specific domain name each VIP address acts as the publicly addressable front end of the datacenter for that specific domain name. Behind each ACE are transaction servers database servers and mirrored origin servers among other compute storage and network resources offering a wide variety of content e.g. websites applications . The GSS communicates directly with the ACEs representing each datacenter by collecting statistics on availability and load for each ACE and VIP.

Each application in the datacenter may have a distinct URL e.g. www.company.com app1.html www.company.com app2.html albeit with the same domain name e.g. company.com . Generally resolution of DNS queries is performed only on the domain name without distinguishing between the paths of the different applications. The GSS may reply to an incoming client request for DNS resolution with the suitable VIP at that point of time for the client for that domain name. The client may subsequently establish connection with the VIP in the DNS reply but the VIP may represent a datacenter that may not be hosting the requested application. The ACE may send an HTTP redirect back to the client informing the client of the correct VIP. The client can then send another request to the correct VIP. For example an HTTP request from the client may hit the ACE with URL http www.company.com app1.html. The ACE may send an HTTP redirect message back asking the requestor to connect to URL http www app1.company.com. The requestor may subsequently perform a DNS resolution for the redirect URL and reach another datacenter where the application is supported on server app1. However due to branding and security related issues redirecting the HTTP request may not be an acceptable solution in certain deployments.

An alternative mechanism may be to forward the HTTP request from the datacenter that received the request to another datacenter that can serve the request. The ACE may select the other datacenter after a determination about the appropriate datacenter that can serve the request. Thus VIP addresses hosted in other datacenters may have to be configured on the ACE as real servers. Moreover each ACE in each datacenter may have to be configured with all locally non supported applications e.g. identified by URL match criteria and associated remote VIPs in other datacenters where that application is supported. The ACE may also monitor the health of the application in substantially all the other datacenters and select a suitable datacenter that can serve the HTTP request. Such configuration can lead to excessive overhead on the ACEs especially where numerous applications are hosted asymmetrically in myriad datacenters. When a new application is added in one of the datacenters the configuration change may have to be replicated in substantially all ACEs in the system.

Yet another mechanism may be to connect all datacenters in a ring and then if any one ACE cannot serve a request locally it can simply forward the request to the next datacenter. However such an approach can result in suboptimal choice and the request response path could become multiple hops with several nodes in the request response path.

Communication system is configured to address these issues and others in offering a system and method for seamless application hosting and migration in a network environment. Embodiments of communication system include mechanisms for forwarding an HTTP request to suitable datacenters e.g. datacenter when the request cannot be served locally e.g. at datacenter . During operation elements of communication system may implement three distinct flows 1 configuration flow 2 monitor flow and 3 data flow.

In the configuration flow ACE may be configured with an application configuration App Config specifying the appropriate URL e.g. www.company.com app1.html and the specific servers where application is available. App config may be included in a URL match policy within ACE . In one embodiment the user e.g. network administrator may include App Config manually or semi manually in ACE s URL match policy. In another embodiment when application is installed on servers application may push App Config to ACE . ACE may subsequently include App Config in its URL match policy. ACE may respond to HTTP request for application based on information from App Config in its URL match policy. The URL e.g. http www.company.com app1.html of application may be indicated in HTTP request .

According to various embodiments ACE may push information from App Config to GSS in a VIP URL Configuration VIP URL Config which includes the specific VIP e.g. VIP and URL associated with application at the specific domain name. VIP URL Config can indicate the specific datacenter represented by the VIP e.g. VIP at which application identified by its URL www.company.com app1.html may be served. VIP URL Config may be in any suitable format based on particular network needs. For example VIP URL Config may be communicated using Remote Procedure Call RPC DNS request an extension of KAL AP messages or such other message exchange mechanisms. GSS may propagate VIP URL Config to GSS and other GSSs in a cluster of the domain for example using RPC. Thus GSS and GSS may synchronize the application configuration information and store the information at respective local storage devices e.g. databases based on particular needs.

In the monitor flow application may be monitored for various parameters. For example a health of application may be monitored to determine the status of the server it is available on whether or not content being returned by the server is correct and should be delivered to client the status of application and other parameters. In another example the configuration of application may be monitored to determine any changes to its location e.g. such as moving from one datacenter to another or other configuration parameters. Any changes in application determined from the monitoring may be propagated to GSS and through the synchronization mechanism.

The KAL AP mechanism used between GSS and ACE for load monitoring may be enhanced to include load factors per application which may be an improvement from current mechanisms where loadbalancing considers the number of servers but may not consider the actual load on the server at the application level. In specific embodiments KAL AP may be improved with application aware features. In embodiments of communication system an application specific load can be obtained using KAL AP by tag instead of KAL AP by VIP e.g. since the same VIP may support multiple applications to map a tag to application and also to account for actual load on real servers . The information used by KAL AP by tag features may be available from local probing by ACE to real servers .

In the data flow an end user at client may want to load application from a specific URL e.g. www.company.com app1.html . Because the application URL cannot be resolved down to the application location as the DNS protocol only permits resolution up to the domain name level and does not include the path client may send a DNS query to DNS server for the specific domain name www.company.com rather than the entire URL. DNS server may query GSS which may be the nearest authoritative name server for the domain. GSS may determine that VIP is suitable for DNS server and provide VIP to DNS server . DNS server may send a DNS response including VIP to client . Client may send an HTTP request for application e.g. www.company.com app1.html to VIP at which ACE is located.

In various embodiments ACE may look up its URL match policy to determine whether requested application is available at datacenter . ACE may determine that datacenter does not host application . When the determination indicates that application is not available at datacenter the request may reach a default handler in ACE . The default handler may query local GSS with a VIP URL query . VIP URL query may provide the requested URL e.g. www.company.com app1.html and other parameters e.g. IP address of client and inquire about a matching VIP associated with the URL. GSS may respond with a selected VIP address . Selected VIP address may specify VIP at which ACE is located based on VIP URL Config propagated to GSS by GSS . Subsequently ACE may forward HTTP request to ACE . ACE may respond appropriately with an HTTP response based on App Config in its URL match policy. ACE may forward HTTP response to client .

In various embodiments ACEs e.g. ACEs and may be configured with URLs and associated VIP addresses of applications e.g. application available in respective datacenters e.g. datacenters and . For URL forwarding to a datacenter that hosts a requested application e.g. application instead of having all the applications and their associated VIP addresses in various datacenters configured on each ACE in each datacenter it may be sufficient to configure only the specific ACE e.g. ACE in the datacenter e.g. datacenter that supports the application e.g. application . The ACE e.g. ACE may communicate the configuration to its local GSS e.g. GSS and make use of the GSS cluster to propagate the configuration to all GSSs in the cluster across multiple datacenters. Embodiments of communication system can also be used when applications are symmetrically distributed across datacenters to support failover cases. If an application is configured on ACE in datacenter and an incoming request matches the URL but the server or the application is down at that point ACE can be configured to query local GSS to get an alternative VIP from the other datacenters.

According to various embodiments a suitable VIP for forwarding HTTP request may be chosen while avoiding the health monitoring of the datacenters associated with each of ACEs and . In some embodiments GSS and can choose a suitable VIP e.g. VIP as selected VIP address based on their awareness of the specific VIP addresses that each hosted application maps to and the load on each VIP. In such embodiments ACEs and need not be aware of locations where available applications are supported in the domain. Additionally existing health monitoring schemes such as KAL AP may be used to report VIP and real server availability. The processing of HTTP request may be transparent to client . For example client may send HTTP request to ACE at VIP and receive HTTP response from ACE at VIP. Client may not communicate with ACE throughout the session and may not be aware that HTTP request is being served at a different VIP e.g. VIP than VIP.

If application is supported on multiple datacenters with corresponding distinct VIP addresses e.g. VIP VIP VIP etc. GSS may select a specific VIP as selected VIP address based on at least load distribution among substantially all GSSs in the plurality of datacenters geographical proximity of each datacenter to client and or intelligent policies. For example GSS may perform a VIP address selection based on load since GSS already monitors and maintains load of all VIP addresses under the domain name company.com using the KAL AP mechanism or other mechanisms such as SNMP probing simple ping etc. GSS may also support VIP address selection based on geographical proximity e.g. GSS may have a GeoDB database . GSS can even select a datacenter that is closest to datacenter where HTTP request was first received.

Turning to the infrastructure of communication system the network topology can include any number of servers virtual machines switches including distributed virtual switches routers and other nodes inter connected to form a large and complex network. A node may be any electronic device client server peer service application or other object capable of sending receiving or forwarding information over communications channels in a network. Elements of may be coupled to one another through one or more interfaces employing any suitable connection wired or wireless which provides a viable pathway for electronic communications. Additionally any one or more of these elements may be combined or removed from the architecture based on particular configuration needs. Communication system may include a configuration capable of TCP IP communications for the electronic transmission or reception of data packets in a network. Communication system may also operate in conjunction with a User Datagram Protocol Internet Protocol UDP IP or any other suitable protocol where appropriate and based on particular needs. In addition gateways routers switches and any other suitable nodes physical or virtual may be used to facilitate electronic communication between various nodes in the network.

Note that the numerical and letter designations assigned to the elements of do not connote any type of hierarchy the designations are arbitrary and have been used for purposes of teaching only. Such designations should not be construed in any way to limit their capabilities functionalities or applications in the potential environments that may benefit from the features of communication system . It should be understood that communication system shown in is simplified considerably for ease of illustration.

The example network environment including networks and may be configured over a physical infrastructure that may include one or more networks and further may be configured in any form including but not limited to local area networks LANs wireless local area networks WLANs VLANs metropolitan area networks MANs WANs virtual private networks VPNs Intranet Extranet any other appropriate architecture or system or any combination thereof that facilitates communications in a network. In some embodiments a communication link may represent any electronic link supporting a LAN environment such as for example cable Ethernet wireless technologies e.g. IEEE 802.11x ATM fiber optics etc. or any suitable combination thereof. In other embodiments communication links may represent a remote connection through any appropriate medium e.g. digital subscriber lines DSL telephone lines T1 lines T3 lines wireless satellite fiber optics cable Ethernet etc. or any combination thereof and or through any additional networks such as a wide area networks e.g. the Internet .

In some embodiments datacenters and may be physically geographically separated from each other e.g. datacenter located in California and datacenter located in North Carolina . In other embodiments datacenters and may be physically separated by network elements e.g. datacenter separated from datacenter with one or more firewalls that control communication between the two networks although they may be located in close proximity e.g. within the same building . In yet other embodiments datacenters and may be logically separated by virtual network elements in a common physical infrastructure e.g. datacenters and may comprise two distinct distributed virtual switches controlling distinct virtual machines .

ACEs and are server loadbalancers SLBs or other such network elements at which VIP addresses uniform resource locator URL match policies and servers are configured among other features . GSS and are multi datacenter SLBs or other such network elements configured to choose a server or SLB from several servers or SLBs in a multi datacenter network environment. ACEs and and GSS and may be hardware SLBs or software SLBs. In various embodiments ACEs and and GSS and may be collocated with or coupled to a server. In other embodiments they may each be a separate independent network element.

Embodiments of communication system can avoid use of URL redirect and configuration of multiple ACEs in various datacenters for each application. Embodiments can also avoid health monitoring of other datacenters from an ACE in one datacenter as GSS can monitor VIP addresses of all datacenters. Moreover features like KAL AP can be improved with better application aware features.

Turning to is a simplified block diagram illustrating example details of an embodiment of communication system . Representative ACE in representative datacenter may include a URL match policy a service module a default handler a forward module a push module a monitor module a processor and a memory element . Representative GSS may include a VIP URL Configuration module a VIP URL Configuration store a propagate module a selection module a processor and a memory element .

HTTP request for application may specify the URL for application including a domain name and a path e.g. www.company.com app1.html . ACE may lookup URL matching policy to determine if it can serve HTTP request . If HTTP request can be served e.g. application is available in datacenter service module may find appropriate application server in datacenter that hosts application and forward HTTP request to the appropriate server . When server responds with HTTP response HTTP response may be relayed back to client .

The URL of application may be included in URL match policy through App Config . In various embodiments App Config may include the URL and corresponding server s where application is located. In one embodiment when application is installed in datacenter App Config may be included in URL match policy . When application is removed from the datacenter the URL may be removed from URL match policy .

Push module may push information from App Config to GSS in VIP URL Config . VIP URL Config may include the VIP address of ACE and the URL of application . In specific embodiments VIP URL Config may include a URL match condition configured on ACE e.g. represented as a regular expression match . In some embodiments URLs of substantially all applications supported by ACE may be included in VIP URL Config . In other embodiments each application supported by ACE may correspond to a different VIP URL Config . VIP URL Config may be in any suitable format based on particular needs of communication system . In some embodiments VIP URL Config may be periodically pushed to GSS . In other embodiments VIP URL Config may be pushed to GSS only when there is a change in URL match policy e.g. application added or removed . Monitor module may monitor application and push any change to GSS via VIP URL Config . In some embodiments monitor module may use KAL AP or other such mechanisms such as remote procedure call for communicating VIP URL Config .

VIP URL Configuration module may receive VIP URL Config and store it in VIP URL Configuration store . VIP URL Configuration store may be any suitable database storage device or other network element that is configured to store and retrieve information. In some embodiments VIP URL Configuration store may be located at a single GSS e.g. designated GSS that manages the other GSS in the cluster in a remote datacenter and accessible by GSS . In other embodiments each GSS in the cluster may maintain VIP URL Configuration store in respective datacenters. VIP URL Configuration store may store information in VIP URL Config in any suitable format.

Propagate module may propagate VIP URL Config to various remote GSS in communication system . In some embodiments the propagation may be implemented as part of the synchronization mechanism between the various GSS. In other embodiments the propagation may be implemented as a separate process. GSS may store VIP URL Config received via propagation from other GSS in VIP URL Configuration store . Thus VIP URL Configuration store may include a list of VIP addresses and corresponding application URLs supported at the VIP addresses across multiple datacenters.

Referring back to HTTP request if the requested application in HTTP request is not available at datacenter HTTP request may be transferred to default handler . Default handler may send VIP URL query to GSS . VIP URL query may query GSS for a suitable VIP address that can satisfy HTTP request . Selection module in GSS may access VIP URL Configuration store and run a selection algorithm to determine a suitable VIP. For example if only one VIP address is associated with the requested URL GSS may provide that VIP address as selected VIP address . If the application is available at multiple datacenters VIP URL Configuration store may indicate multiple VIP addresses for the requested URL. The selection algorithm may choose a suitable VIP address based on several considerations including loadbalance geographical proximity and or other intelligent policies and return a suitable VIP address. GSS may subsequently provide selected VIP address to ACE .

Forward module in ACE may forward HTTP request to selected VIP address . The ACE at selected VIP address may respond appropriately with HTTP response which may be forwarded to the client by forward module . In various embodiments ACE may use processor and memory element to perform the operations described herein. Likewise GSS may use processor and memory element to perform the operations described herein.

Turning to is a simplified block diagram illustrating a scenario where application is available at multiple datacenters N in communication system . For ease of explanation assume that datacenter does not host application . ACEs N may push respective VIP address and URL of application to respective local GSS N . GSS N may propagate the information to all other GSS so that substantially all GSS N may have information about all VIP addresses associated with application . If ACE receives a request for application and it queries GSS GSS may respond with a suitable VIP address selected from the aggregated propagated information.

Turning to is a simplified flow diagram illustrating example configuration activities that may be associated with an embodiment of communication system . Operations may start at when ACE is turned on. Application may be added to datacenter at . At App Config may be added to ACE s URL match policy . In some embodiments application may push App Config to ACE . In other embodiments a network administrator may configure URL match policy with application s URL. At ACE may push VIP URL Config to local GSS . At local GSS may propagate VIP URL Config to remote GSSs in other datacenters. At GSS may store VIP URL Config in an accessible location e.g. VIP URL Configuration store . At ACE may monitor application . At a determination may be made whether there are any changes in application . If yes the operations loop back to at which the changes are added to URL match policy . If there are no changes to application the process may end at .

Turning to is a simplified flow diagram illustrating example data flow activities that may be associated with an embodiment of communication system . Operations may start at when ACE is activated. At ACE may receive HTTP request for application from client . At ACE may look up application in URL match policy . At a determination may be made whether a match is found. If a match is not found ACE may query local GSS at . At local GSS may respond with selected VIP address . At ACE may forward HTTP request to selected VIP address . At ACE may receive HTTP response from selected VIP address . At ACE may forward HTTP response received from appropriate server to client . The operations may end at . Referring back to if a match is found ACE may forward HTTP request to the locally available server at . The locally available server may respond with HTTP response at and ACE may forward HTTP response to client at .

Turning to is a simplified flow diagram illustrating example operational steps associated with embodiments of communication system . Operations may include a configuration flow a monitor flow and a data flow . Configuration flow may include at which ACE ACE in datacenter adds App Config in URL match policy . At ACE may push VIP URL Config to local GSS GSS in datacenter . Local GSS may propagate VIP URL Config to remote GSS GSS to GSS N GSS N at . At substantially all GSS N may synchronize VIP URL Config .

Monitor flow may include at which application may be monitored. At any change in application may be propagated to substantially all GSS N . In some embodiments the changes may be propagated to URL match policy then pushed to respective local GSS e.g. GSS for example with the KAL AP mechanism and subsequently the change may be propagated to other GSSs e.g. GSS N for example with the synchronization mechanism. By way of examples and not as limitations changes in application can include application is moved to a different server in the same datacenter application is moved to a different datacenter application is brought down for maintenance servers on which application is available are taken off line several copies of application are distributed throughout multiple datacenters etc.

Data flow includes at which ACE ACE at datacenter receives HTTP request for application . At ACE may determine that it cannot serve HTTP request e.g. because application is down at datacenter or application is not available at datacenter etc. . At ACE may query its local GSS for a suitable VIP address. At GSS may access VIP URL Config stored during operation . At GSS may run a selection algorithm to select the suitable VIP address. The selection algorithm may consider load on the different datacenters geographical proximity to client and intelligent policies among other factors to select the suitable VIP address. At GSS may respond to ACE with selected VIP address . At ACE may forward HTTP request to selected VIP address . At ACE may receive HTTP request and look up URL match policy to determine the location of application see operation and respond appropriately with HTTP response .

Note that in this Specification references to various features e.g. elements structures modules components steps operations characteristics etc. included in one embodiment example embodiment an embodiment another embodiment some embodiments various embodiments other embodiments alternative embodiment and the like are intended to mean that any such features are included in one or more embodiments of the present disclosure but may or may not necessarily be combined in the same embodiments.

In example implementations at least some portions of the activities outlined herein may be implemented in software in for example ACE and GSS . In some embodiments one or more of these features may be implemented in hardware provided external to these elements or consolidated in any appropriate manner to achieve the intended functionality. The various network elements may include software or reciprocating software that can coordinate in order to achieve the operations as outlined herein. In still other embodiments these elements may include any suitable algorithms hardware software components modules interfaces or objects that facilitate the operations thereof.

Furthermore ACE and GSS described and shown herein and or their associated structures may also include suitable interfaces for receiving transmitting and or otherwise communicating data or information in a network environment. Additionally some of the processors and memory elements associated with the various nodes may be removed or otherwise consolidated such that a single processor and a single memory element are responsible for certain activities. In a general sense the arrangements depicted in the FIGURES may be more logical in their representations whereas a physical architecture may include various permutations combinations and or hybrids of these elements. It is imperative to note that countless possible design configurations can be used to achieve the operational objectives outlined here. Accordingly the associated infrastructure has a myriad of substitute arrangements design choices device possibilities hardware configurations software implementations equipment options etc.

In some of example embodiments one or more memory elements can store data used for the operations described herein. This includes the memory element e.g. memory elements and being able to store instructions e.g. software logic code etc. in non transitory computer readable media such that the instructions are executed to carry out the activities described in this Specification. A processor can execute any type of instructions associated with the data to achieve the operations detailed herein in this Specification. In one example processors e.g. processors and could transform an element or an article e.g. data from one state or thing to another state or thing. In another example the activities outlined herein may be implemented with fixed logic or programmable logic e.g. software computer instructions executed by a processor and the elements identified herein could be some type of a programmable processor programmable digital logic e.g. a field programmable gate array FPGA an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM an ASIC that includes digital logic software code electronic instructions flash memory optical disks CD ROMs DVD ROMs magnetic or optical cards other types of machine readable mediums suitable for storing electronic instructions or any suitable combination thereof.

These devices may further keep information in any suitable type of non transitory storage medium e.g. random access memory RAM read only memory ROM field programmable gate array FPGA erasable programmable read only memory EPROM electrically erasable programmable ROM EEPROM etc. software hardware or in any other suitable component device element or object where appropriate and based on particular needs. The information being tracked sent received or stored in communication system could be provided in any database register table cache queue control list or storage structure based on particular needs and implementations all of which could be referenced in any suitable timeframe. Any of the memory items discussed herein should be construed as being encompassed within the broad term memory element. Similarly any of the potential processing elements modules and machines described in this Specification should be construed as being encompassed within the broad term processor. 

It is also important to note that the operations and steps described with reference to the preceding FIGURES illustrate only some of the possible scenarios that may be executed by or within the system. Some of these operations may be deleted or removed where appropriate or these steps may be modified or changed considerably without departing from the scope of the discussed concepts. In addition the timing of these operations may be altered considerably and still achieve the results taught in this disclosure. The preceding operational flows have been offered for purposes of example and discussion. Substantial flexibility is provided by the system in that any suitable arrangements chronologies configurations and timing mechanisms may be provided without departing from the teachings of the discussed concepts.

Although the present disclosure has been described in detail with reference to particular arrangements and configurations these example configurations and arrangements may be changed significantly without departing from the scope of the present disclosure. For example although the present disclosure has been described with reference to particular communication exchanges involving certain network access and protocols communication system may be applicable to other exchanges or routing protocols. Moreover although communication system has been illustrated with reference to particular elements and operations that facilitate the communication process these elements and operations may be replaced by any suitable architecture or process that achieves the intended functionality of communication system .

Numerous other changes substitutions variations alterations and modifications may be ascertained to one skilled in the art and it is intended that the present disclosure encompass all such changes substitutions variations alterations and modifications as falling within the scope of the appended claims. In order to assist the United States Patent and Trademark Office USPTO and additionally any readers of any patent issued on this application in interpreting the claims appended hereto Applicant wishes to note that the Applicant a does not intend any of the appended claims to invoke paragraph six 6 of 35 U.S.C. section 112 as it exists on the date of the filing hereof unless the words means for or step for are specifically used in the particular claims and b does not intend by any statement in the specification to limit this disclosure in any way that is not otherwise reflected in the appended claims.

