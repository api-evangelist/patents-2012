---

title: Methods and apparatus to measure exposure to streaming media
abstract: Methods and apparatus to measure exposure to streaming media are described. An example method includes identifying metadata from media. The media is converted into converted media having a streaming format. The converted media is encrypted using an encryption key. A manifest is created in association with the converted media, the manifest identifying a first location of the encrypted media and a second location of a decryption key.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09209978&OS=09209978&RS=09209978
owner: The Nielsen Company (US), LLC
number: 09209978
owner_city: New York
owner_country: US
publication_date: 20120515
---
This disclosure relates generally to measuring media exposure and more particularly to methods and apparatus to measure exposure to streaming media.

Streaming enables media to be delivered to and presented by a wide variety of media presentation devices such as desktop computers laptop computers tablet computers personal digital assistants smartphones etc. A significant portion of media e.g. content and or advertisements is presented via streaming to such devices.

Example methods apparatus systems and articles of manufacture disclosed herein may be used to measure exposure to streaming media. Some such example methods apparatus and or articles of manufacture measure such exposure based on media metadata user demographics and or media device types. Some examples disclosed herein may be used to monitor streaming media transmissions received at client devices such as personal computers tablets e.g. an iPad portable devices mobile phones Internet appliances and or any other device capable of playing media. Some example implementations disclosed herein may additionally or alternatively be used to monitor playback of media which is locally stored in media devices. Example monitoring processes disclosed herein collect media metadata associated with media presented via media devices and associate the metadata with demographics information of users of the media devices. In this manner detailed exposure metrics are generated based on collected media metadata and associated user demographics.

The use of mobile devices e.g. smartphones tablets MP3 players etc. to view media has increased in recent years. Initially service providers created custom applications e.g. apps to display their media. As more types of mobile devices having different software requirements versions compatibilities etc. entered the market service providers began displaying streaming media in a browser of the mobile device. Consequently many users view streaming media via the browser of their mobile device. In view of the increasing popularity of accessing media in this manner understanding how users interact with the streaming media e.g. such as by understanding what media is presented how the media is presented etc. provides valuable information to service providers advertisers content providers manufacturers and or other entities.

In examples illustrated herein media is received from a media provider such as for example a satellite provider a cable provider a physical media provider e.g. a Digital Versatile Disk DVD by mail service etc. . The media is provided to be streamed from a service provider to one or more client devices for presentation thereon. In the illustrated example the media is provided as a transport stream. In some examples metering data having a first format is extracted from the transport stream. In some such examples the transport stream corresponds to a Moving Picture Experts Group MPEG 2 transport stream sent according to a hypertext transfer protocol HTTP live streaming HLS protocol. However the transport stream may additionally or alternatively correspond to and or be sent according to any other past present or future format such as for example MPEG 4 an HTTP Secure protocol HTTPS a file transfer protocol FTP a secure file transfer protocol SFTP .

Audio watermarking is a technique used to identify media such as television broadcasts radio broadcasts downloaded media streaming media prepackaged media Digital Versatile Discs DVDs etc. Existing audio watermarking techniques identify media by embedding audio codes e.g. a watermark such as identifying information into an audio and or video component. As used herein the terms code or watermark are used interchangeably and are defined to mean an identifier that may be transported with inserted in and or embedded in the of media e.g. a program or advertisement or a signal transporting the media for the purpose of identifying the media or for another purpose such as tuning e.g. a packet identifying header .

Unlike media monitoring techniques based on codes and or watermarks included with and or embedded in the monitored media fingerprint or signature based media monitoring techniques generally use one or more inherent characteristics of the monitored media during a monitoring time interval to generate a substantially unique proxy for the media. Such a proxy is referred to as a signature and can take the form of a series of digital values a waveform etc. representative of one or more aspects of the media signal s such as the audio and or video signals forming the media being monitored. A good signature is usually one that is repeatable when processing the same media presentation but that is unique when processing other presentations of other media. Accordingly the term fingerprint and signature are used interchangeably and are defined to mean a proxy for identifying media that is generated from one or more inherent characteristics of the media.

Signature based media monitoring generally involves determining e.g. generating and or collecting signature s representative of a media signal e.g. an audio signal and or a video signal output by a monitored media device and comparing the monitored signature s to one or more references signatures corresponding to known e.g. reference media. Various comparison criteria such as a cross correlation value a Hamming distance etc. can be evaluated to determine whether a monitored signature matches a particular reference signature. When a match between the monitored signature and one of the reference signatures is found the monitored media can be identified as corresponding to the particular reference media represented by the reference signature that matched the monitored signature. Because attributes such as an identifier of the media a presentation time a broadcast channel etc. are known for the reference signature these attributes may then be associated with the monitored media whose monitored signature matched the reference signature.

In some examples metadata embedded in the media is in a first format e.g. a watermark a signature a code etc. . In some examples the metering data having the first format includes an audio watermark that is embedded in an audio portion of the media. Additionally or alternatively the metering data having the first format can include a video e.g. image watermark that is embedded in a video portion of the media. Many client devices do not have access to the metadata in the first format and or in some cases enough processing power to identify the metadata in the first format.

In some examples the streamed media is encrypted. In these examples illustrated herein the service provider encrypts the media and instructs the client device to retrieve a decryption key for decrypting the encrypted media. Encrypting the media facilitates monitoring of media presentations as client devices must request a decryption key prior to decrypting and subsequently presenting the media. In the illustrated example the encryption key is paired with a decryption key. In some examples the keys are a symmetric in that for example the encryption key cannot be used to decrypt media that has been encrypted using the encryption key. However in some other examples the keys are symmetric.

In some disclosed examples the encryption and or decryption keys are based on metadata extracted from media decoded from the transport stream. However in some examples the encryption and or decryption keys are randomly generated.

In some disclosed examples the encryption and or decryption keys are generated by a central facility of an audience measurement entity. In some examples the central facility receives metadata extracted from media decoded from the transport stream by a service provider. The central facility generates the encryption and or decryption keys using the metadata. Further the central facility determines an access location e.g. an address of the decryption key. In some disclosed examples the access location of the decryption key is an address of a web server of the central facility. The encryption key and the address of the decryption key are synchronized with the service provider. The service provider then encrypts the media using the encryption key. When the encrypted media is presented to a client device the address of the decryption key is also presented e.g. in a streaming manifest file . The client device may then request the decryption key via the address of the decryption key. In some disclosed examples the central facility provides the decryption key to the client device.

In some disclosed examples streaming media is delivered to the client device using HTTP Live Streaming HLS via a HyperText Markup Language version 5 HTML5 webpage. However any other past present and or future method of streaming media to the client device may additionally or alternatively be used such as for example an HTTP Secure HTTPS protocol. Additionally or alternatively any other past present and or future script protocol and or language may additionally or alternatively be used. The HyperText Markup Language version 5 HTML5 allows metadata to be included in a timed text track and or otherwise associated with for example a media stream etc. In some disclosed examples a client device uses a browser to display media received via HLS. Additionally or alternatively in some disclosed examples the client device uses a media presenter e.g. a browser plugin an app a framework an application programming interface API etc. to display media received via HLS.

In some examples illustrated herein the client device requests the manifest file from a service provider. In some examples illustrated herein the manifest defines an address of a decryption key that is to be separately requested by the client device. In some examples the decryption key is hosted by the central facility of the audience measurement entity. However in other examples the manifest is hosted by an entity other than the audience measurement entity such as for example the service provider an entity that does not deliver the media to the client etc.

In examples illustrated below media exposure metrics are monitored by recording requests for decryption key s . Because encrypted media cannot be decrypted without the decryption key monitoring requests for the decryption key is a useful indication of whether the media is being presented. In addition requests for the decryption key may be validated thereby enabling media access protection. For example a device requesting a decryption key may not be validated unless a username and or password are provided. Additionally or alternatively other factors may be used to determine whether a device requesting the decryption key is validated such as for example a location of the device e.g. is the device located in a distribution region for the media such as for example North America etc. whether an Internet protocol IP address of the device is provided whether cookie data associated with the user of the device is provided etc.

Example methods apparatus systems and articles of manufacture disclosed herein involve extracting or collecting metadata e.g. metadata stored in an ID3 tag extensible markup language XML based metadata and or metadata in any other past present and or future format associated with streaming media transmissions e.g. streaming audio and or video at a client device. In some examples the metadata identifies one or more of a genre an artist a song title an album name a transmitting station server site etc. In such examples highly granular e.g. very detailed data can be collected. Whereas in the past ratings were largely tied to specific programs or broadcasting stations example methods apparatus systems and or articles of manufacture disclosed herein can generate ratings for a genre an artist a song an album CD a particular transmitting server site etc. in addition to or as an alternative to generating ratings for specific programs advertisements media providers broadcasters and or stations.

Example methods apparatus systems and articles of manufacture disclosed herein collect demographic information associated with users of client devices based on identifiers e.g. an Internet protocol IP address a cookie a device identifier etc. associated with those client devices. Media exposure information may then be generated based on the media metadata and the user demographics to indicate exposure metrics and or demographic reach metrics for at least one of a genre an artist an album name a transmitting station server site media an advertisement etc.

In some examples it is desirable to link demographics to the monitoring information. To address this issue the audience measurement entity establishes a panel of users who have agreed to provide their demographic information and to have their streaming media activities monitored. When an individual joins the panel they provide detailed information concerning their identity and demographics e.g. gender race income home location occupation etc. to the audience measurement entity. The audience measurement entity sets an identifier e.g. a panelist cookie on the presentation device that enables the audience measurement entity to identify the panelist whenever the panelist accesses streamed media and or requests a decryption key. In particular each panelist is provided with a media monitor e.g. a software meter that enables reporting of access es to streamed media to a central facility of the audience measurement entity by requesting and or logging requests for a decryption key used to decrypt the encrypted streaming media. In the illustrated example the media monitor transmits and or logs the identifier along with the request s for the decryption key e.g. in the form of a cookie .

Example methods apparatus systems and articles of manufacture disclosed herein may also be used to generate reports indicative of media exposure metrics on one or more different types of client devices e.g. personal computers portable devices mobile phones tablets etc. . For example an audience measurement entity may generate media exposure metrics based on metadata extracted from the streaming media at the client device and or similar devices. A report is then generated based on the media exposure to indicate exposure measurements e.g. for a type of media e.g. a genre using different types of client devices. Thus for example reports indicating the popularity of watching for instance sports events on certain types of client devices e.g. mobile devices tablets etc. can be compared to other popularities of watching sports events on other types of client devices e.g. televisions personal computers etc. .

Additionally or alternatively popularities of different types of media across different device types may be compared. Such different types of media may be for example news movies television programming on demand media Internet based media games streaming games advertisements etc. Such comparisons may be made across any type s and or numbers of devices including for example cell phones smart phones dedicated portable multimedia playback devices iPod devices tablet computing devices e.g. an iPad standard definition SD televisions high definition HD televisions three dimensional 3D televisions stationary computers portable computers Internet radios etc. Any other type s and or number of media and or devices may be analyzed. The report may also associate the media exposure metrics with demographic segments e.g. age groups genders ethnicities etc. corresponding to the user s of the client device s . Additionally or alternatively the report may associate the media exposure metrics with metric indicators of the popularity of the artist genre song title etc. across one or more user characteristics selected from one or more demographic segment s one or more age group s one or more gender s and or any other user characteristic s .

In some examples the media exposure metrics are used to determine demographic reach of streaming media ratings for streaming media engagement indices for streaming media user affinities associated with streaming media broadcast media and or any other audience measure metric associated with streaming media and or locally stored media. In some examples the media exposure metrics are audience share metrics indicative of percentages of audiences for different device types that accessed the same media. For example a first percentage of an audience may be exposed to news media via smart phones while a second percentage of the audience may be exposed to the same news media via tablets.

The media provider of the illustrated example of corresponds to any one or more media provider s capable of providing media for presentation at the client device . The media provided by the media provider s can be any type s of media such as audio video multimedia etc. Additionally the media can correspond to live e.g. broadcast media streaming media stored media e.g. on demand media etc.

The service provider of the illustrated example of provides media services to the client device via for example web pages including links e.g. hyperlinks embedded media etc. to media provided by the media provider . In the illustrated example the service provider modifies the media provided by the media provider prior to transmitting the media to the client device . In the illustrated example the service provider includes an example media identifier an example transcoder an example metadata generator an example encryption key synchronizer an example encryption key store an example media encrypter an example media transmitter and an example manifest generator .

The media identifier of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but it could additionally or alternatively be implemented by an application specific integrated circuit s ASIC s programmable logic device s PLD s and or field programmable logic device s FPLD s an analog circuit and or other circuitry. The media identifier of extracts metering data e.g. signatures watermarks etc. from the media obtained from the media provider . For example the media identifier can implement functionality provided by a software development kit SDK to extract one or more audio watermarks one or more video e.g. image watermarks etc. embedded in the audio and or video of the media obtained from the media provider . For example the media may include pulse code modulation PCM audio data or other types of audio data uncompressed video image data etc. 

The example media identifier of determines e.g. derives decodes converts etc. the metering data e.g. such as media identifying information source identifying information etc. included in or identified by a watermark embedded in the media and converts this metering data and or the watermark itself into a text and or binary format for inclusion in an ID3 tag and or other data type e.g. text binary etc. . For example the code watermark itself may be extracted and inserted as metadata in for example a text or binary format in the ID3 tag. Thus the metadata and or media identifying metadata included in the ID3 tag may be a text or binary representation of a code a watermark and or metadata or data identified by a code and or watermark etc.

The example transcoder of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but could additionally or alternatively be implemented by an analog circuit ASIC DSP FPGA and or other circuitry. In some examples the transcoder and the media identifier are implemented by the same physical processor. In the illustrated example the transcoder employs any appropriate technique s to transcode and or otherwise process the received media into a form suitable for streaming e.g. a streaming format . For example the transcoder of the illustrated example transcodes the media in accordance with MPEG 4 audio video compression for use via the HLS protocol.

The encryption key synchronizer of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but could additionally and or alternatively be implemented by an analog circuit ASIC DSP FPGA and or other circuitry. In some examples the transcoder the media identifier and or the encryption key synchronizer are implemented by the same physical processor. In the illustrated example the encryption key synchronizer transmits metadata identified by the media identifier to the central facility . The encryption key synchronizer receives encryption keys and addresses of associated decryption keys from the central facility .

The encryption key store may be any device for storing data such as for example flash memory magnetic media optical media etc. Furthermore the data stored in the encryption key store may be in any data format such as for example binary data comma delimited data tab delimited data structured query language SQL structures etc. While in the illustrated example the encryption key store is illustrated as a single database the encryption key store may be implemented by multiple databases. In the illustrated example the encryption key store stores metadata associated with the media identified by the media identifier an encryption key associated with the media received from the central facility and an address of a decryption key associated with the media received from the central facility . However any other data may additionally or alternatively be stored in the encryption key store .

The media encrypter of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but could additionally or alternatively be implemented by an analog circuit ASIC DSP FPGA and or other circuitry. In some examples the media identifier the transcoder and or the encryption key synchronizer are implemented by the same physical processor. In the illustrated example the media encrypter encrypts the media received from the media provider . In the illustrated example the media encrypter encrypts the media using an Advanced Encryption Standard AES . However any other past present and or future encryption standard may additionally or alternatively be used. In the illustrated example the media encrypter encrypts the media using the encryption key received from the central facility and or stored in the encryption key store . However in some examples the media encrypter encrypts the media using an encryption key that is based on the metadata identified by the media identifier .

The media transmitter of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but could additionally or alternatively be implemented by an analog circuit ASIC DSP FPGA and or other circuitry. In some examples the transcoder the media identifier the encryption key synchronizer the media encrypter and or the media transmitter are implemented by the same physical processor.

The media transmitter employs any appropriate technique s to select and or stream the media to a requesting device such as the client device . For example the media transmitter of the illustrated example selects media that has been identified by the media identifier transcoded by the transcoder and undergone metadata embedding by the metadata embedder . The media transmitter then streams the media to the client device via the network using HLS or any other streaming protocol. In some examples the media transmitter provides a manifest to the client device. The manifest describes the available encrypted transport streams to the client device. In the illustrated example the manifest includes the address of the decryption key associated with the media. The address of the decryption key enables the client device to retrieve the decryption key and decrypt the encrypted transport streams.

The manifest generator of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but could additionally or alternatively be implemented by an analog circuit ASIC DSP FPGA and or other circuitry. In some examples the transcoder the media identifier the encryption key synchronizer the media encrypter the media transmitter and or the manifest generator are implemented by the same physical processor. The manifest generator generates a manifest that is provided to a requesting device e.g. the client device and describes addresses for retrieving the encrypted media and or the decryption key.

In some examples the media identifier the transcoder the encryption key synchronizer and or the media encrypter prepare media for streaming regardless of whether e.g. prior to a request is received from the client device . In such examples the already prepared media is stored in a data store of the service provider e.g. such as in a flash memory magnetic media optical media etc. . In such examples the media transmitter prepares a transport stream for streaming the already prepared media to the client device when a request is received from the client device . In other examples the media identifier the transcoder the encryption key synchronizer and or the media encrypter prepare the media for streaming in response to a request received from the client device .

The example network of the illustrated example is the Internet. Additionally or alternatively any other network s communicatively linking the service provider and the client device such as for example a private network a local area network LAN a virtual private network VPN etc. may be used. The network may comprise any number of public and or private networks using any type s of networking protocol s .

The client device of the illustrated example of is a computing device that is capable of presenting streaming media provided by the media transmitter via the network . The client device may be for example a tablet a desktop computer a laptop computer a mobile computing device a television a smart phone a mobile phone an Apple iPad an Apple iPhone an Apple iPod an Android computing device a Palm webOS computing device etc. In the illustrated example the client device includes a media presenter . In the illustrated example the media presenter is implemented by a media player e.g. a browser a local application etc. that presents streaming media provided by the media transmitter . For example the media presenter may additionally or alternatively be implemented in Adobe Flash e.g. provided in a SWF file implemented in hypertext markup language HTML version 5 HTML5 implemented in Google Chromium implemented according to the Open Source Media Framework OSMF implemented according to a device or operating system provider s media player application programming interface API implemented on a device or operating system provider s media player framework e.g. the Apple iOS MPMoviePlayer software etc. or any combination thereof. In the illustrated example the media presenter receives encrypted media and an address of a decryption key from the service provider e.g. via the manifest . The media presenter of the illustrated example retrieves the decryption key from the specified address e.g. from a server that does not deliver the media to the client and decrypts the encrypted media using the decryption key. While a single client device is illustrated any number and or type s of media presentation devices may be used.

In some examples a monitor separate from the media presenter e.g. internal and or external to the client device logs the requests for the decryption key. In some such examples the monitor monitors for and or logs requests made by the media presenter . The monitor then stores e.g. buffers caches etc. the requests before sending the stored requests to a measurement server such as for example the central facility . In some examples the monitor does not store and or only buffers the requests in a transmission queue the monitored requests made by the media presenter and instead transmits e.g. streams the requests to the measurement server e.g. the central facility in real time or substantially real time.

The central facility of the illustrated example of is implemented by a computing device capable of communicating with other devices e.g. the service provider the client device etc. via the network . In the illustrated example the central facility comprises one or more servers. However any other type s of computing device s may additionally or alternatively be used such as for example a desktop computer an Internet appliance a laptop a tablet etc. In the illustrated example the central facility is separate from the service provider . However in some examples the central facility may be included in and or under the control of the service provider .

The central facility of the audience measurement entity e.g. the Nielsen Company US LLC of the illustrated example of includes an interface to receive reported metering information contained within and or received in association with requests for a decryption key from the media presenter of the client device via the network . In the illustrated example the central facility includes an HTTP interface to receive HTTP requests that include the request for a decryption key and or identifying information. The HTTP requests are sent with the identifying information in their payload e.g. as a cookie . The requests may not be intended to actually retrieve data or webpage s but are instead used as a vehicle to convey the metering information and or retrieve a decryption key. In some examples the central facility does not receive the requests for the decryption key s but instead receives one or more log s indicative of requests for the decryption key s . In some such examples the requests for the decryption key s may be sent to a location other than the central facility e.g. an alternate decryption key server . The media presenter a monitor e.g. a monitor internal and or external to the client device the alternate decryption key server etc. may then transmit one or more log s indicative of requests for the decryption key s to the central facility .

The central facility is provided with software e.g. a daemon to extract the metering information e.g. the identifying information from the payload of the request s . Additionally or alternatively any other method s to receive metering information may be used such as for example an HTTP Secure protocol HTTPS a file transfer protocol FTP a secure file transfer protocol SFTP an HTTP and or HTTPS GET request an HTTP and or HTTPS POST request etc. In the illustrated example the central facility stores and analyzes the metering information received from a plurality of different client devices. For example the central facility may sort and or group metering information by media provider e.g. by grouping all metering data associated with a particular media provider . Any other processing of metering information may additionally or alternatively be performed. In some examples the central facility adds a timestamp to the request upon receipt. Timestamping e.g. recording a time that an event occurred enables accurate identification and or correlation of media that was presented and or the time that it was presented with the user s of the presentation device.

In the illustrated example the central facility includes an example key store . The example key store may be implemented by any device for storing data such as for example flash memory magnetic media optical media etc. Furthermore the data stored in the key store may be in any data format such as for example binary data comma delimited data tab delimited data structured query language SQL structures etc. While in the illustrated example the key store is illustrated as a single database the key store may be implemented by multiple databases. In the illustrated example the key store stores encryption key s decryption key s and the address of the decryption key s in association with the media.

While in the illustrated example the central facility receives requests from the client device for decryption key s any other server and or location may receive such requests. For example an alternate decryption key server that is at a different location than the central facility may receive and or respond to the requests for the decryption key s . The example alternate decryption key server may store e.g. record log etc. requests for decryption key s and or identifying information associated therewith. The stored requests may be transmitted from the alternate decryption key server to the central facility for analysis. In the illustrated example the stored requests are transmitted to the central facility periodically e.g. once every hour once every day once every week etc. . However the stored requests may be transmitted to the central facility a periodically such as for example as requests are received e.g. streaming when a certain number of requests are received e.g. ten requests one hundred requests one thousand requests etc. etc.

The alternate decryption key server of the illustrated example of is implemented by a computing device capable of communicating with other devices e.g. the service provider the client device the central facility etc. via the network . In the illustrated example the alternate decryption key server comprises one or more servers. However any other type s of computing device s may additionally or alternatively be used such as for example a desktop computer an Internet appliance a laptop a tablet etc. In the illustrated example the alternate decryption key server is separate from the service provider . However in some examples the alternate decryption key server may be included in and or under the control of the service provider and or the central facility .

In the illustrated example the alternate decryption key server includes an example key store . The example key store may be any device for storing data such as for example flash memory magnetic media optical media etc. Furthermore the data stored in the key store may be in any data format such as for example binary data comma delimited data tab delimited data structured query language SQL structures etc. While in the illustrated example the key store is illustrated as a single database the key store may be implemented by multiple databases. In the illustrated example the key store stores decryption key s and record s of requests for such decryption key s .

The media receiver of the illustrated example of is implemented by a processor executing instructions but it could additionally or alternatively be implemented by an analog circuit an ASIC DSP FPGA and or other circuitry. In the illustrated example the media receiver receives media from the service provider . In the illustrated example the media is encrypted. However in some examples the media may not be encrypted. In the illustrated example the media receiver receives a manifest indicating one or more Universal Resource Locator s URL s identifying address es of the encrypted media and one or more URL s indicating address es of decryption key s associated with the encrypted media. An example manifest is shown in and or .

The example decryption key retriever of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but it could additionally or alternatively be implemented by an analog circuit an ASIC DSP FPGA and or other circuitry. In some examples the media receiver and or the decryption key retriever are implemented by the same physical processor. In the illustrated example the example decryption key retriever requests the decryption key s identified in the manifest to decrypt the encrypted media. The decryption key s may be requested from any suitable location e.g. from a server of the service provider from a third party not involved in the delivery of the media such as the central facility and or the alternate decryption key server etc. . In the illustrated example the decryption key retriever provides additional identifying information to the storage location e.g. the central facility when requesting the decryption key s such as for example a user identifier a device identifier a username a password a cookie an Internet protocol IP address etc.

The media decrypter of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but it could additionally or alternatively be implemented by an analog circuit an ASIC DSP FPGA and or other circuitry. In some examples the media receiver the decryption key retriever and or the media decrypter are implemented by the same physical processor. In the illustrated example the media decrypter decrypts the media according to an appropriate protocol e.g. the AES standard using the decryption key retrieved by the decryption key retriever . Any encryption standard may be used such as for example a Data Encryption Standard DES etc.

The outputter of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but it could additionally or alternatively be implemented by an analog circuit an ASIC DSP FPGA and or other circuitry. In some examples the media receiver the decryption key retriever the media decrypter and or the outputter are implemented by the same physical processor. In the illustrated example the outputter presents the media decrypted by the media decrypter . In the illustrated example the outputter interacts with a QuickTime application programming interface API to present media via the client device . While in the illustrated example the QuickTime API is used any other media presenting framework may additionally or alternatively be employed. For example the example outputter may interact with an Adobe Flash media presentation framework.

The example metadata receiver of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but it could additionally or alternatively be implemented by an analog circuit an ASIC DSP FPGA and or other circuitry. In the illustrated example the metadata receiver receives metadata from the service provider . The metadata represents and or is associated with media identified by the media identifier of the service provider .

The example key generator of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but it could additionally or alternatively be implemented by an analog circuit an ASIC DSP FPGA and or other circuitry. In some examples the example metadata receiver and or the example key generator are implemented by the same physical processor. In the illustrated example the key generator generates an encryption key a decryption key and a URL identifying an address where the decryption key can be retrieved. In some examples the encryption key and the decryption key are a symmetric in that for example the encryption key cannot be used to decrypt media that has been encrypted using the encryption key. However in some other examples the encryption key and the decryption key are symmetric. In the illustrated the encryption key and or the decryption key are generated based on the metadata received by the metadata receiver . For example the metadata may be used as an initialization vector for the encryption keys. However in some examples the encryption key and or the decryption key are generated in another way such as for example by random generation generation based on an identifier of the media etc. In the illustrated example the encryption key and the decryption key are different across different pieces of media. However in some examples the encryption key and the decryption key are re used for different pieces of media.

The example key store may be implemented by any device for storing data such as for example flash memory magnetic media optical media etc. Furthermore the data stored in the key store may be in any data format such as for example binary data comma delimited data tab delimited data structured query language SQL structures etc. While in the illustrated example the key store is illustrated as a single database the key store may be implemented by multiple databases. In the illustrated example the key store stores the encryption key the decryption key and the address of the decryption key in association with the media.

The example encryption key synchronizer of the example of is implemented by a logic circuit such as a processor executing instructions but it could additionally or alternatively be implemented by an analog circuit an ASIC DSP FPGA and or other circuitry. In some examples the example metadata receiver the example key generator and or the example encryption key synchronizer are implemented by the same physical processor. In the illustrated example the encryption key synchronizer synchronizes the encryption key s and the address es of the decryption key s with the service provider . In the illustrated example synchronization is achieved when the encryption key s and address es are transmitted by the encryption key synchronizer to the service provider via the network . However any other form of communication may additionally or alternatively be used such as for example a private network a virtual private network etc. In some examples multiple service providers may exist. When there are multiple service providers the keys may have already been generated for a particular piece of media identified by one of the service providers . In such an example the encryption key s may be transmitted to a service provider that may not have previously received and or transmitted the associated media to the client device . In such an example the service provider may not need to request the encryption key s from the central facility as the encryption key s are already known by the service provider . In the illustrated example the address of the decryption key s varies based on an identifier of the service provider to for example enable identification of the service provider transmitting media to the client device . However in some examples the address of the decryption key s is the same for multiple service providers .

The example decryption key request receiver of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but it could additionally or alternatively be implemented by an analog circuit an ASIC DSP FPGA and or other circuitry. In some examples the example metadata receiver the example key generator the example encryption key synchronizer and or the example decryption key request receiver are implemented by the same physical processor. In the illustrated example the decryption key request receiver receives a request for the decryption key associated with media. The request is received when a client device transmits the request to the URL e.g. an address identifying the location of the decryption key . In the illustrated example the decryption key request receiver receives identifying information along with the request such as for example a user identifier a device identifier a username a password a cookie an Internet protocol IP address etc. In the illustrated example the decryption key request receiver stores the identifying information in the monitoring data store along with the request. In some examples the request is timestamped to identify a time at which the request was received.

The example validator of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but it could additionally or alternatively be implemented by an analog circuit an ASIC DSP FPGA and or other circuitry. In some examples the example metadata receiver the example key generator the example encryption key synchronizer the example decryption key request receiver and or the example validator are implemented by the same physical processor. In the illustrated example the validator validates the request received by the decryption key request receiver . In the illustrated example the validator validates the request to ensure that the client device has appropriate permissions to view the media. In some examples the validator determines whether a user associated with the client device identified by a username and or password is allowed to receive media from the service provider . In some examples a list of users allowed to receive media from the service provider is stored at the central facility .

While in the illustrated example the validator determines whether the client device has permissions to view the media the validator may cooperate with any other device server database etc. to determine whether the client device has permissions to view the media. For example the list of users allowed to receive media from the service provider may be stored at a location other than the central facility such as for example at the service provider and or at a third party such as for example the alternate decryption key server . The validator may query the service provider and or any other appropriate location to determine if the requesting client device identified by for example a username a password a device identifier etc. has permissions to view the requested media. The validator may then receive a response from for example the service provider indicating whether the requesting device has permissions to view the requested media.

In the illustrated example the validator stores an outcome of the validation in the monitoring data store . In the illustrated example the outcome is stored as a Boolean value e.g. a true or a false . However in some examples other information may additionally or alternatively be stored such as for example a reason why validation succeeded or failed etc.

The example monitoring data store may be any device for storing data such as for example flash memory magnetic media optical media etc. Furthermore the data stored in the monitoring data store may be in any data format such as for example binary data comma delimited data tab delimited data structured query language SQL structures etc. While in the illustrated example the storage database is illustrated as a single database the monitoring data store may be implemented by multiple databases. In some examples the monitoring data store and the key store are implemented by a same database. In the illustrated example the monitoring data store stores monitoring information such as for example identifiers of received requests for decryption keys identifying information received along with the requests for decryption keys timestamps associations of the requested decryption keys and the media associated therewith an outcome of the validation performed by the validator etc.

The example decryption key transmitter of the illustrated example of is implemented by a logic circuit such as a processor executing instructions but it could additionally or alternatively be implemented by an analog circuit an ASIC DSP FPGA and or other circuitry. In some examples the example metadata receiver the example key generator the example encryption key synchronizer the example decryption key request receiver the example validator and or the example decryption key transmitter are implemented by the same physical processor. In the illustrated example the decryption key transmitter transmits the decryption key to the client device requesting the decryption key . The client device may then decrypt the encrypted media using the decryption key to for example present the media to a user.

HLS is an adaptive format in that although multiple devices retrieve the same manifest different transport streams may be displayed depending on one or more factors. For example devices having different bandwidth availabilities e.g. a high speed Internet connection a low speed Internet connection etc. and or different display abilities e.g. a small size screen such as a cellular phone a medium size screen such as a tablet and or a laptop computer a large size screen such as a television etc. select an appropriate transport stream for their display and or bandwidth abilities. In some examples a cellular phone having a small screen and limited bandwidth uses a low resolution transport stream. Alternatively in some examples a television having a large screen and a high speed Internet connection uses a high resolution transport stream. As the abilities of the device change e.g. the device moves from a high speed Internet connection to a low speed Internet connection the device may switch to a different transport stream.

In the illustrated example of a high resolution transport stream a medium resolution transport stream and a low resolution transport stream are shown. In the illustrated example each transport stream and or represents a portion of the associated media e.g. five seconds ten seconds thirty seconds one minute etc. . Accordingly the high resolution transport stream corresponds to a first portion of the media a second high resolution transport stream corresponds to a second portion of the media a third high resolution transport stream corresponds to a third portion of the media. Likewise the medium resolution transport stream corresponds to the first portion of the media a second medium resolution transport stream corresponds to the second portion of the media and a third medium resolution transport stream corresponds to the third portion of the media. In addition the low resolution transport stream corresponds to the first portion of the media a second low resolution transport stream corresponds to the second portion of the media and a third low resolution transport stream corresponds to the third portion of the media. Although three transport streams are shown in the illustrated example of for each resolution any number of transport streams representing any number of corresponding portions of the media may additionally or alternatively be used.

In the illustrated example each transport stream and or includes a video stream an audio stream and a metadata stream . The video stream and or includes video associated with the media at different resolutions according to the resolution of the transport stream with which the video stream is associated. The audio stream and or includes audio associated with the media. The metadata stream and or may include metadata such as for example an ID3 tag associated with the media.

In the illustrated example the manifest includes a first decryption key address identifier a first media address identifier a second decryption key address identifier and a second media address identifier . The first decryption key address identifier identifies the address of a decryption key for decrypting media segments e.g. media segments corresponding to the first media address identifier . In the illustrated example the media address identifier is intermediate the first decryption key address identifier and the second decryption key address identifier . Because the decryption key address identifiers apply to subsequent media segments a first media associated with the first media address identifier is decrypted using a first decryption key associated with the first decryption key address identifier . A second media associated with the second media address identifier is decrypted using a second decryption key associated with the second decryption key address identifier . In some examples the first encryption key and the second decryption key are the same. However in some examples the first encryption key and the second encryption key are different.

The decryption key address identifiers identify that the decryption key is in an Advanced Encryption Standard AES 128 bit format. However any other format may additionally or alternatively be used. The decryption key address identifiers identify the address es of the decryption key s with universal resource indicators URIs . However any other way of identifying the address es of the decryption key s may additionally or alternatively be used. In the illustrated example the decryption key address identifiers identify that the decryption keys are to be retrieved from the central facility . However any other location may additionally or alternatively be used such as for example the service provider a third party etc. In the illustrated example the URIs indicate that the decryption keys should be retrieved using HTTPS. However any other communication standard may additionally or alternatively be used such as for example a file transfer protocol FTP HTTP etc.

The media address identifiers identify addresses of media to be presented by the example media presenter . In the illustrated example the media address identifiers indicate that the media should be retrieved using HTTP. However any other communication standard may additionally or alternatively be used such as for example FTP HTTPS etc. In the illustrated example the media address identifiers indicate that the media segments are to be retrieved from the service provider. However the media segments identified by the media address identifiers may additionally or alternatively be retrieved from any other location and or address such as for example an advertisement provider a third party etc.

While example manners of implementing the service provider of the example media monitor of and or and or the example central facility of and or have been illustrated in and or one or more of the elements processes and or devices illustrated in and or may be combined divided re arranged omitted eliminated and or implemented in any other way. Further the example media identifier the example transcoder the example encryption key synchronizer the example encryption key store the example media encrypter the example media transmitter the example manifest generator the example service provider of the example media receiver the example decryption key retriever the example media decrypter the example outputter the example media presenter of and or the example metadata receiver the example key generator the example key store the example encryption key synchronizer the example decryption key request receiver the example validator the example monitoring data store the example decryption key transmitter and or the example central facility of and or may be implemented by hardware software firmware and or any combination of hardware software and or firmware.

Thus for example any of the example media identifier the example transcoder the example encryption key synchronizer the example encryption key store the example media encrypter the example media transmitter the example manifest generator the example service provider of the example media receiver the example decryption key retriever the example media decrypter the example outputter the example media presenter of and or the example metadata receiver the example key generator the example key store the example encryption key synchronizer the example decryption key request receiver the example validator the example monitoring data store the example decryption key transmitter the example central facility of and or could be implemented by one or more circuit s programmable processor s application specific integrated circuit s ASIC s programmable logic device s PLD s and or field programmable logic device s FPLD s etc. When any of the apparatus or system claims of this patent are read to cover a purely software and or firmware implementation at least one of the example media identifier the example transcoder the example encryption key synchronizer the example encryption key store the example media encrypter the example media transmitter the example manifest generator the example media receiver the example decryption key retriever the example media decrypter the example outputter the example metadata receiver the example key generator the example key store the example encryption key synchronizer the example decryption key request receiver the example validator the example monitoring data store and or the example decryption key transmitter are hereby expressly defined to include a tangible computer readable medium such as a memory DVD CD Blu ray etc. storing the software and or firmware. Further still the example media identifier the example transcoder the example encryption key synchronizer the example encryption key store the example media encrypter the example media transmitter the example manifest generator the example service provider of the example media receiver the example decryption key retriever the example media decrypter the example outputter the example media presenter of and or the example metadata receiver the example key generator the example key store the example encryption key synchronizer the example decryption key request receiver the example validator the example monitoring data store the example decryption key transmitter and or the example central facility of and or may include one or more elements processes and or devices in addition to or instead of those illustrated in and or and or may include more than one of any or all of the illustrated elements processes and devices.

Flowcharts representative of example machine readable instructions for implementing the example service provider of the example media presenter of and or and or the example central facility of and or are shown in and or . In these examples the machine readable instructions comprise a program for execution by a logic circuit such as the processor shown in the example processor platform discussed below in connection with . The program s may be embodied in software stored on a tangible computer readable medium such as a computer readable storage medium e.g. a CD ROM a floppy disk a hard drive a digital versatile disk DVD a Blu ray disk or a memory associated with the processor but the entire program and or parts thereof could alternatively be executed by a device other than the processor and or embodied in firmware or dedicated hardware. Further although the example program is described with reference to the flowcharts illustrated in and or many other methods of implementing the example service provider of the example media presenter of and or and or the example central facility of and or may alternatively be used. For example the order of execution of the blocks may be changed and or some of the blocks described may be changed eliminated or combined.

As mentioned above the example processes of and or may be implemented using coded instructions e.g. computer readable instructions stored on a tangible computer readable medium such as a computer readable storage medium e.g. a hard disk drive a flash memory a read only memory ROM a compact disk CD a digital versatile disk DVD a cache a random access memory RAM and or any other storage media in which information is stored for any duration e.g. for extended time periods permanently brief instances for temporarily buffering and or for caching of the information . As used herein the term tangible computer readable medium is expressly defined to include any type of computer readable storage medium and to exclude propagating signals. Additionally or alternatively the example processes of and or may be implemented using coded instructions e.g. computer readable instructions stored on a non transitory computer readable medium such as a hard disk drive a flash memory a read only memory a compact disk a digital versatile disk a cache a random access memory and or any other storage media in which information is stored for any duration e.g. for extended time periods permanently brief instances for temporarily buffering and or for caching of the information . As used herein the term non transitory computer readable medium is expressly defined to include any type of computer readable medium and to exclude propagating signals. As used herein when the phrase at least is used as the transition term in a preamble of a claim it is open ended in the same manner as the term comprising is open ended. Thus a claim using at least as the transition term in its preamble may include elements in addition to those expressly recited in the claim.

The media identifier of the illustrated example identifies the media block . The media identifier identifies the media by extracting metering data e.g. codes signatures watermarks etc. from the media. Based on the extracted metering data the media identifier generates metadata block . In the illustrated example the metadata is generated in an ID3 format. However any other metadata format may additionally or alternatively be used. Further in the illustrated example the metadata is generated based on the extracted metering data. However in some examples the metadata may be generated by querying an external source using some or all of the extracted metering data.

The encryption key synchronizer determines if an encryption key and or decryption key address is known for the identified media block . In the illustrated example the encryption key synchronizer determines if an encryption key and or decryption key address is known for the identified media by performing a lookup on the encryption key store . If the encryption key and or decryption key are not known the encryption key synchronizer transmits the identified metadata to the central facility block . The transmitted metadata enables the central facility to identify the corresponding media by comparing the metadata to lookup tables and determine the appropriate encryption key and or decryption key address. If the media is not known to the central facility the central facility may generate an encryption key a decryption key and a decryption key address associated with the media and or the service provider . The encryption key synchronizer then receives the encryption key and or the decryption key address from the central facility block .

Once the encryption key synchronizer has synchronized the encryption key and or the decryption key address the media encrypter encrypts the media using the encryption key block . The manifest generator generates a manifest identifying an address of the encrypted media and the decryption key address block . The media transmitter then transmits the manifest identifying the address of the encrypted media and the decryption key address to the media presenter block . In response the media presenter of the illustrated example requests the encrypted media in an order specified by the manifest e.g. in a playlist order . In the illustrated example the encrypted media is transmitted in the form of an MPEG stream in response to the request for the encrypted media. However the encrypted media may be transmitted in any other manner.

The key generator determines if an encryption key is known for the given media based on the received metadata block . In the illustrated example the key generator determines if an encryption key is known for the given media by performing a lookup on the key store . While in the illustrated example the key generator determines if the encryption key is known the key generator may additionally or alternatively determine if any other item e.g. a decryption key a decryption key address etc. is known by performing a lookup on the key store . If for example the media was already identified by a service provider other than the service provider the key generator may already have generated the encryption key. Further while in the illustrated example the key generator determines if the encryption key is known based on the received metadata the key generator may additionally or alternatively determine if the encryption key is known based on any other information. For example the key generator may generate e.g. compute determine derive etc. an encryption key using the received metadata and determine if the generated encryption key is known.

If the encryption key is not known the key generator generates e.g. computes determines derives etc. an encryption key e.g. the encryption key a decryption key e.g. the decryption key and or a decryption key address e.g. an address where the decryption key is stored such as the decryption key address . In the illustrated example the encryption key and decryption key are generated based on the received metadata. That is the received metadata is used as a seed value for generating the encryption and or decryption keys. In some examples the key generator generates the encryption key and or decryption key by looking up the information in a media information database based on the received metadata. In some examples the key generator generates the encryption key and or decryption key by using a random seed. The key generator stores the generated encryption key the generated decryption key and or the generated decryption key address in the key store block .

If the encryption key is known block and or after the encryption key is generated block and or stored block the encryption key and decryption key address may be transmitted to the service provider block by the encryption key synchronizer . In the illustrated example the encryption key and decryption key address are transmitted. However any other value and or information may be additionally or alternatively be transmitted such as for example the received metadata the decryption key etc.

The decryption key request receiver receives the request for the decryption key block . In the illustrated example the request is received via an HTTP get request. However any other type of request may additionally or alternatively be used such as for example an HTTP post request. The validator determines whether the requester is authorized to decrypt the media associated with the requested decryption key block . In the illustrated example the validator retrieves an indication of whether the requester has rights to decrypt the media from the monitoring data store . However in some examples the validator may contact the service provider to determine whether the requester has rights to decrypt the media. For example the service provider may have more up to date records of which clients and or customers are allowed to decrypt media requested from the service provider . In some examples the validator does not perform a validation and instead assumes that all requesters have rights to decrypt the media.

If the requester has rights to decrypt the media the validator stores a record in the monitoring data store indicating exposure of the requester to the decrypted media block . In the illustrated example the validator stores the identifying information of the requester and an identifier of the decrypted media. In some examples the validator stores the identifying information in association with a timestamp. Timestamping the information may enable the audience measurement entity to better monitor what media is presented and when media is presented. The decryption key transmitter then transmits the requested decryption key to the requester e.g. the media presenter block . If the requester does not have rights to decrypt the media the decryption key transmitter does not provide the decryption key to the requester block . In some examples the decryption key transmitter informs the requester that the request was denied.

Returning to the decryption key retriever of the illustrated example determines whether the requested decryption key is received block . If the decryption key is received the media decrypter decrypts the media using the received decryption key block . The outputter then presents the decrypted media stream block . If the decryption key is not received the outputter does not present the media block .

While in examples illustrated herein the flowcharts of and or are shown as separate processes in some examples the flowcharts illustrated in and or may be executed together. For example any or all of the flowcharts of and or may be representative of one or more threads that may be operating in parallel to process multiple requests. Further any of the flowcharts may be instantiated in multiple threads e.g. there may be multiple instances of the instructions of and or .

The system of the instant example includes a processor . For example the processor can be implemented by one or more microprocessors or controllers from any desired family or manufacturer.

The processor includes a local memory e.g. a cache and is in communication with a main memory including a volatile memory and a non volatile memory via a bus . The volatile memory may be implemented by Synchronous Dynamic Random Access Memory SDRAM Dynamic Random Access Memory DRAM RAMBUS Dynamic Random Access Memory RDRAM and or any other type of random access memory device. The non volatile memory may be implemented by flash memory and or any other desired type of memory device. Access to the main memory is controlled by a memory controller.

The processor platform also includes an interface circuit . The interface circuit may be implemented by any type of interface standard such as an Ethernet interface a universal serial bus USB and or a PCI express interface.

One or more input devices are connected to the interface circuit . The input device s permit a user to enter data and commands into the processor . The input device s can be implemented by for example a keyboard a mouse a touchscreen a track pad a trackball isopoint and or a voice recognition system.

One or more output devices are also connected to the interface circuit . The output devices can be implemented for example by display devices e.g. a liquid crystal display a cathode ray tube display CRT a printer and or speakers . The interface circuit thus typically includes a graphics driver card.

The interface circuit also includes a communication device e.g. the encryption key synchronizer the media transmitter the media receiver the decryption key retriever the metadata receiver the encryption key synchronizer the decryption key request receiver the decryption key transmitter such as a modem or network interface card to facilitate exchange of data with external computers via a network e.g. an Ethernet connection a digital subscriber line DSL a telephone line coaxial cable a cellular telephone system etc. .

The processor platform also includes one or more mass storage devices for storing software and data. Examples of such mass storage devices include floppy disk drives hard drive disks compact disk drives and digital versatile disk DVD drives.

The coded instructions of and or may be stored in the mass storage device in the volatile memory in the non volatile memory in the local memory and or on a removable storage medium such as a CD or DVD.

Although certain example methods apparatus and articles of manufacture have been described herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all methods apparatus and articles of manufacture fairly falling within the scope of the claims of this patent.

