---

title: System and method of optimization for mobile apps
abstract: A network device provides an agent application to a user device. The network device receives, from the user device, device information that relates to performance of one or more applications residing on the user device. The network device provides, to a device associated with a registered developer account, a portion of the device information that is associated with a particular application. The network device receives, from the device associated with the registered developer account, optimized device configuration settings for the particular application on the user device. The network device stores the optimized configuration settings for the particular application and sends, to the user device, the optimized configuration settings for the particular application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09122560&OS=09122560&RS=09122560
owner: VERIZON PATENT AND LICENSING INC.
number: 09122560
owner_city: Basking Ridge
owner_country: US
publication_date: 20121115
---
Application software also referred to as an app is computer software designed to help a user perform one or more specific tasks. Apps may be downloaded to perform particular tasks for mobile devices such as tablet computers personal digital assistants PDAs smartphones multimedia players gaming systems etc. Apps are typically designed to be executed on different mobile platforms Android iOS etc. . A wide variety of mobile devices exist for each platform. A mobile device may use different hardware and software. Also users of mobile devices may have different behaviors for using their mobile devices. All these difference can affect the performance of applications running on different devices.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.

Systems and methods provided herein may provide a mobile application optimization architecture to improve a mobile user s experience. is a diagram illustrating concepts described herein. As shown in a user device may be used to execute application software.

Different types of user devices e.g. different manufactures models etc. may provide different kinds of hardware e.g. screens memory and central processing units CPUs etc. and software e.g. operating system . Furthermore users may select different software e.g. applications and may exhibit different usage behaviors. Accounting for these differences by for example adjusting configuration settings of particular user device can greatly improve the user experience for running a particular application on a particular user device .

In some instances an application can run more smoothly when it has knowledge of the device hardware. For example when scrolling a images on a screen of user device a large amount of content such as multimedia images can be displayed. Usually an application can use a memory cache to preload the content to improve performance. When the amount of content is extremely large the full content cannot be fully preloaded into memory. Hence during the scrolling the content needs to be loaded from a local hard disk cache or from a remote server through a network in real time. Scrolling the images will use a lot of CPU resources to repaint the screen and loading contents such as images from the local hard disk or the remote server can use a lot of CPU resources. Due to this balance of limited CPU resources an application may run smoothly on one user device but may not be able to run smoothly on other user devices with different hardware or user behavior.

If an application is to run smoothly on different devices the application should account for a combination of particular device parameters and user behavior. In the scrolling screen example above the application may need to account for the following parameters of user device 

Furthermore different users with different copies of the same application may have different user behaviors and preference for their respective user devices. For example a mother may only use a particular movie application to search for theater information and buy tickets while her daughter may like to watch streaming movies directly on her user device with the same movie application. Thus the mom would benefit from an optimized searching system in the application but the daughter may benefit more from optimizing the streaming system in the application.

According to implementations described herein a mobile application optimization architecture is provided. Referring to the architecture may include an agent component for user device a central web service managed by a service provider and an application optimization component for third party application developers . User device may be equipped with a local optimizing agent for monitoring and optimizing the use of particular application software . The local optimizing agent may collect information from user device such as device parameters and user behaviors associated with application software . This information may be sent to service provider and used by third party application developers to generate optimization data for particular device types and or users. The local optimizing agent on user device may receive optimization data via service provider and implement configuration settings based on device parameters and user behaviors and or optimization data to provide an optimized application experience to the user.

User device may include a mobile device or a stationary device that is capable of executing one or more applications. For example user device may include a computational and or communicational device such as a radiotelephone a personal communications system PCS terminal e.g. that may combine a cellular radiotelephone with data processing and data communications capabilities a personal digital assistant PDA e.g. that can include a radiotelephone a pager Internet intranet access etc. a wireless device a smart phone a computer e.g. personal computer a laptop computer or a tablet computer a global positioning system GPS device a gaming device etc. In implementations described herein user device may be provided with a mobile optimization component that may provide an improved user experience for other resident applications by optimizing user device configuration settings for the other applications.

Service provider network may include network devices that provide a backend support system for facilitating optimization for mobile applications. For example service provider network may permit user device to download an optimizing agent e.g. mobile optimization component described below to enable collection of user device information and receiving implementation of optimization data. Service provider network may include for example one or more private Internet Protocol IP networks that use a private IP address space. Service provider network may include a local area network LAN an intranet a private wide area network WAN etc. In one implementation service provider network may implement one or more Virtual Private Networks VPNs for providing communication between devices within service provider network . Service provider network may be protected separated from other networks such as network by a firewall. Although shown as a single element in service provider network may include a number of separate networks.

Web server may include one or more network devices or computing devices that generally facilitate optimization of configuration settings for mobile applications. Web server may receive and store user device information from user devices . Web server may also receive requests e.g. from developer devices for device records e.g. that relate to particular applications and provide appropriate device information to developer devices . Web server may also receive optimization data e.g. configuration settings for user devices from developer devices and provide the optimization data to user devices for implementation.

Optimization database may include a database or another data structure to store data that web server receives from user device and or developer device . In one implementation optimization database may be a distributed component. As described further herein data in optimization database can be organized by third party developer account user device type e.g. make model specific user device s particular applications and or time. Optimization database may store for example device data from user devices for eventual distribution by web server to qualified developer devices . Conversely optimization database may store configuration data from developer device for use by user devices to optimize presentation of particular applications on user devices .

Developer device may include a computational or communicational device such as for example a desktop computer a laptop computer a personal digital assistant PDA etc. used for general computing tasks. In some implementations developer device may be configured to receive user device information from web server and to provide optimization data to web server . Developer device may also be used to register applications accounts with service provider network .

Access network may include a wireless communications network that connects subscribers e.g. user devices to a service provider e.g. server provider network . In one example access network may include a long term evolution LTE network a WiFi network e.g. using IEEE 802.11 standards or other access networks e.g. an E UTRAN an enhanced high rate packet data eHRPD network or another 3G 4G or future access network . In another example access network may include a radio access network capable of supporting high data rate low latency packet optimization large capacity and coverage etc.

Public network may include one or more networks including another wireless network a satellite network the Internet a telephone network such as the Public Switched Telephone Network PSTN a metropolitan area network MAN a wide area network WAN a local area network LAN a mesh network a fiber optics network e.g. passive optical networks PONS an ad hoc network or another type of network. In an exemplary implementation public network may include a combination of networks and other components e.g. switches routers etc. for transmitting data to and from service provider network .

In the particular arrangement and number of components of network are illustrated for simplicity. In practice there may be more user devices service provider networks web servers developer devices access networks and or public networks . For example there may be hundreds or thousands of user devices and or developer devices .

Bus may permit communication among the components of device . Processing unit may include one or more processors or microprocessors that interpret and execute instructions. In other implementations processing unit may be implemented as or include one or more application specific integrated circuits ASICs field programmable gate arrays FPGAs or the like.

Memory may include a random access memory RAM or another type of dynamic storage device that stores information and instructions for execution by processing unit a read only memory ROM or another type of static storage device that stores static information and instructions for the processing unit and or some other type of magnetic or optical recording medium and its corresponding drive for storing information and or instructions.

Input device may include a device that permits a user to input information to device such as a keyboard a keypad a mouse a pen a microphone one or more biometric mechanisms and the like. Output device may include a device that outputs information to the user such as a display a speaker etc.

Communication interface may include any transceiver like mechanism that enables device to communicate with other devices and or systems. For example communication interface may include mechanisms for communicating with other devices such as other devices of network .

As described herein device may perform certain operations in response to processing unit executing software instructions stored in a computer readable medium such as memory . A computer readable medium may include a non transitory memory device. A memory device may be implemented within a single physical memory device or spread across multiple physical memory devices. The software instructions may be read into memory from another computer readable medium or read into memory from another device via communication interface . The software instructions stored in memory may cause processing unit to perform processes described herein. Alternatively hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein. Thus implementations described herein are not limited to any specific combination of hardware circuitry and software.

Although shows exemplary components of device in other implementations device may include fewer components different components differently arranged components or additional components than those depicted in . As an example in some implementations a display may not be included in device . In these situations device may be a headless device that does not include input device . Alternatively or additionally one or more components of device may perform one or more other tasks described as being performed by one or more other components of device .

Application may include software for performing a particular task or group of tasks relating to for example games entertainment news productivity calculations travel social networking etc. Performance of application operating on user device may vary depending on particular device parameters and user behavior. Additionally device parameters and user behaviors for one application may affect another application differently. Applications may obtain optimized configuration settings from mobile optimization component to improve the user experience.

Mobile optimization component may include for example an application that provides a coordinated interface for applications resident system files and remote devices e.g. web server . Mobile optimization component may be obtained for example from service provider network e.g. web server or another device . Mobile optimization component may collect information from user device and send the information to web server . The collected information may include 1 device information such as a device make model network signal strength flash memory size disk usage CPU usage etc. 2 operating system information such as event of an out of memory warning a thread waiting queue size a number of network communication time out etc. 3 application relevant information data such as search category location information media player behavior particular content downloaded etc. and or 4 user usage patterns such as most frequently used applications times most actively using specific applications concurrent use of particular applications etc.

Additionally mobile optimization component may receive and cache optimization information from web server e.g. which may first be sent to web server from developer device . Mobile optimization component may also provide service to mobile applications . Hence mobile applications can use the optimization information such as network cache size animation speed favorite contents preload optimized advertisement etc. to improve the user experience for particular applications .

In one implementation mobile optimization component may provide centralized data collection policy control services for user device such as security privacy services and a time schedule to send receive data to from web server . Mobile optimization component may provide for example a graphical user interface GUI to permit a user to configure particular settings related to data collection for applications . For example a user can decide whether to provide permission for GPS location information data collection for all applications or for only particular or no applications . As another example the user can decide a time to send receive data from web server e.g. daily at midnight during idle times etc. . Mobile optimization component may use a unified and standard format for sending receiving collected data from user device or optimization data from web server . Mobile optimization component is described further in connection with .

Service API may listen to requests from applications e.g. applications running on user device . Service API may include a standardized interface that may be used by any of applications . For example any one of applications can request history performance parameters from service API to adjust current user interface performance for that particular application. Service API may retrieve information from system hardware software detector applications profile table and or self adaptive component to send to applications for use by particular applications .

Service API may also retrieve information from system hardware software detector and or applications profile table to send to web server . In another implementation service API may receive from web server optimization settings for particular applications . Service API may store the optimization settings for example in applications profile table for responding to requests from applications .

System hardware software detector may detect user device hardware and operating system capabilities. For example system hardware software detector may detect screen size screen resolution memory CPU operating system etc. In one implementation system hardware software detector may also collect application relevant information data and user usage patterns. System hardware software detector may store the device parameters and usage data and or provide the device parameters to service API for delivery to for example web server and or applications . Thus any application can also request history performance parameters to adjust current user interface performance.

Applications profile table may include optimization information for each application e.g. applications residing on user device . Application profile table may include for example configuration information received from self adaptive component block and or from developer devices e.g. via web server . Application profile table may include for example settings for scrolling speed waiting thread queue size animation speed favorite contents preload etc. that may optimize the user experience of particular applications .

Self adaptive component may customize the parameters for each applications running on user device . For example self adaptive component may provide application adjustments e.g. configuration settings for applications that do not have optimized settings provided from third party developers e.g. via web server . Self adaptive component may handle application adjustments such as screen scrolling speed waiting thread queue size etc.

Mobile optimization component may provide a standard protocol e.g. service API for applications to reference. Thus the same application may be run on multiple devices with different hardware. Service API may also provide the capability to run applications on future devices. Mobile optimization component may provide a customized optimization parameter for applications such as scrolling speed thread task queue size etc. Mobile optimization component may also provide customized optimization parameters for each application running on device . Additionally mobile optimization component may provide customized optimization parameters based on user behavior.

Registration module may solicit and accept registration input for accounts with third party developers e.g. via developer devices . For example registration module may assign a unique account identifier ID to each third party developer that registers with the central application optimization service. Registration module may include a password management feature to allow a third party developer to select a password that can be used to restrict access to the central application optimization service. Registration module may store e.g. in memory third party developer account information to verify future login attempts and or information requests. Third party developers may also register applications to be associated with a particular third party developer account. Each application may have a unique application identifier ID . For example a single third party developer account may be associated with multiple applications. A user of a third party developer account may retrieve e.g. from data manager device parameters and user behavior data referred to herein generally as device information for applications that are associated with the particular third party developer account.

Data manager may receive data from user device e.g. mobile optimization component and developer device . Data manager may also respond to requests from user device and developer device . For example data manager may receive user device data associated with a particular application and store the user device data in database . Data manager may receive requests for user device information from developer devices . Based on an account and application associated with the request data manager may provide user device data to developer device . Data manager may receive configuration optimization data from developer device and store the optimization data in database . Data manager may provide the optimization data to user devices upon request. In another implementation device manager may actively push data to user devices and or developer devices based on the configuration of specific accounts.

Account ID field may include an alpha numeric string associated with a registered third party developer. For example each third party developer may have a unique account ID.

Device ID field may include a unique identifier for user device or an identifier for a particular device type. For example device ID may correspond to a previously assigned unique identifier such as a mobile directory number MDN or media access control MAC address or an original alpha numeric string that uniquely identifies a particular user device . Alternatively device ID field may include a make model indication for a particular type of user device e.g. that may be used by multiple users .

Application ID field may include a globally unique identifier for a particular application. For example each application and version created by a third party developer and registered with web server may be assigned a unique identifier. The unique identifier may include a designated alpha numeric string a hash value or another form of identification.

Time stamp field may include a date and time indication that a particular communication is received from user device or developer device .

Device data field may include device information received from mobile optimization component of user device . For example device data field may include information from system hardware software detector and or applications profile table of a particular device .

Configuration data field may include configuration information received from developer device . For example configuration data field may include configuration settings to optimize presentation of a particular application for a particular user device or a particular make model of user device .

Although shows exemplary fields of data structure in other implementations data structure may include different fields or additional fields than those depicted in .

Developer optimization agent may generally provide a standardized communication interface to retrieve user device data and to provide configuration information for optimal performance of particular applications. For example developer optimization agent may provide a data request to web server e.g. data manager to obtain user device information relating to a particular application. Data request may include for example a particular account ID and application ID for which data is requested. Data request may be a recurring request e.g. at particular intervals or a specific request for user device information.

Developer optimization agent may receive usage data from web server e.g. data manager . Usage data may be provided in response to data request . In another implementation usage data may be provided according to a pre arranged schedule e.g. hourly daily weekly etc. without need for a particular data request . Usage data may include for example user device data from database .

Based on usage data a third party developer may identify configuration settings for particular user devices or particular makes models of user devices that can be used to provide an optimized user experience. These configuration settings may be provided to developer optimization agent as developer input .

Based on developer input developer optimization agent may provide user optimization configuration and or device optimization configuration to web server e.g. data manager . User optimization configuration may include configuration settings e.g. screen scrolling speed waiting thread queue size memory allocations etc. for a particular user device based on both device parameters and particular user behavior. Device optimization configuration may include configuration settings for a particular make model of user device based on device parameters and or a compilation of different user behaviors. In one implementation developer optimization agent may use a standardized format to provide user optimization configuration and device optimization configuration to permit storage by web server and delivery to user devices .

As shown in process may include providing an optimization agent application to a user device block receive device user information from the user device block and storing the device user information in a database block . For example service provider network may permit user device to download an optimizing agent e.g. mobile optimization component to enable collection of user device information and receiving implementation of optimization data. Web server e.g. data manager may receive user device data associated with particular applications and store the user device data in database . User device data may include for example information collected by mobile optimization component .

Process may also include receiving an application data request from a registered developer block and providing the device user information for the particular application to a registered developer where developer determines optimized user device configuration settings based on the device user information block . For example web server e.g. data manager may receive requests for user device information from developer devices . Based on an account and application associated with the request web server may provide user device data to developer device . Based on the user device data a third party developer may identify configuration settings for particular user devices or particular makes models of user devices that can be used to provide an optimized user experience. For example a third party developer for a particular application may provide settings to adjust the screen scrolling speed and or waiting thread queue size for a particular make model of user device .

Process may include receiving optimized configuration settings block storing the optimized configuration settings block and forwarding the optimized configuration settings to a user device block . For example web server e.g. data manager may receive configuration optimization data from developer device and store the optimization data in database . Web server may provide the optimization data to user devices upon request. In another implementation web server may actively push configuration optimization data to user devices .

As shown in process may include installing an optimization agent application block collecting device information that relates to performance of applications residing on the user device block and sending the device information to a remote network device block . For example user device e.g. mobile optimization component may be downloaded for example from service provider network . Mobile optimization component may collect information from user device and send the information to web server . The collected information may include device information operating system information application relevant information and or user usage patterns. Web server e.g. service API may also retrieve collected information e.g. from system hardware software detector and or application applications profile table and send to web server .

Process may also include receiving different optimized device configuration settings for different applications block storing the different optimized device configuration settings block and implementing the different optimized device configuration settings for the different applications on the user device block . For example user device e.g. service API may receive from web server optimization settings for particular applications. User device may store the optimization settings for example in applications profile table for responding to requests from applications . Applications may obtain optimized configuration settings from mobile optimization component to improve the user experience.

According to implementations described herein a network device may provide an agent application to a user device. The network device may receive from the user device device information that relates to performance of one or more applications residing on the user device. The network device may provide to a device associated with a registered developer account a portion of the device information that is associated with a particular application. The network device may receives from the device associated with the registered developer account optimized device configuration settings for the particular application on the user device. The network device may store the optimized configuration settings for the particular application and may send to the user device the optimized configuration settings for the particular application.

Systems and methods described herein may provide a standard architecture for collecting user device data so that mobile application developers can focus on application business logic and optimization itself without tending to collection data transfer procedures and collection data maintenance. The systems and methods may improve the mobile user experience and provide users with centralized control for the settings of data collection. The systems and methods may simplify user device data collection and eliminate redundancy of data collection components within individual applications.

In the preceding specification various preferred embodiments have been described with reference to the accompanying drawings. Various modifications and changes may be made thereto and additional embodiments may be implemented without departing from the broader scope of the invention as set forth in the claims that follow. The specification and drawings are accordingly to be regarded in an illustrative rather than restrictive sense. For example while series of blocks have been described with respect to the order of the blocks may be modified in other implementations. Further non dependent blocks may be performed in parallel.

Different aspects of the description provided above may be implemented in many different forms of software firmware and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement these aspects is not limiting of the invention. Thus the operation and behavior of these aspects were described without reference to the specific software code it being understood that software and control hardware can be designed to implement these aspects based on the description herein.

Further certain portions of the invention may be implemented as a component or system that performs one or more functions. These components systems may include hardware such as a processor an ASIC or a FPGA or a combination of hardware and software.

No element act or instruction used in the present application should be construed as critical or essential to the invention unless explicitly described as such. Also as used herein the article a and one of is intended to include one or more items. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise.

