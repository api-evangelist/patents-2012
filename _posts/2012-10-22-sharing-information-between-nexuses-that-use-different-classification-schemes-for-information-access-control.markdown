---

title: Sharing information between nexuses that use different classification schemes for information access control
abstract: Systems and methods for sharing information between distributed computer systems connected to one or more data networks. In particular, a replication system implementing methodologies for sharing database information between computer systems where the databases use different classification schemes for information access control is disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09081975&OS=09081975&RS=09081975
owner: Palantir Technologies, Inc.
number: 09081975
owner_city: Palo Alto
owner_country: US
publication_date: 20121022
---
A portion of the disclosure of this patent document may contain material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The present invention relates generally to systems and methods for sharing information between distributed computer systems connected to one or more data networks and more particularly to a system providing a method for sharing information between such computer systems where the computer systems use different classification schemes for information access control.

In a typical replication system information is stored at each replication site of a group of replication sites information changes may be made at any site of the group and information changes made at one site are propagated to the rest of the group. A replication system typically either employs a synchronous replication scheme or an asynchronous replication scheme for propagating an information change made at one site to the rest of the sites in the group.

With typical synchronous replication schemes each information change is applied at all sites in the group immediately or at none of the sites if one or more of the sites in the group cannot accept the information change. For example one of the sites may be offline or unavailable. Many synchronous replication schemes are implemented using a two phase commit protocol.

In contrast with typical asynchronous replication schemes an information change made at a site is immediately accepted at that site but propagation of the information change to other sites in the group may be deferred. Because propagation of information changes may be deferred if one or more of the sites in the group are temporarily unavailable the available sites in the group can continue to accept information changes until they can be propagated to the rest of the group. For this reason a replication system employing an asynchronous replication scheme is typically considered to be more highly available than one employing a synchronous replication scheme. However asynchronous replication brings with it the possibility of information change conflicts that occur as a result of concurrent conflicting information changes at different replication sites.

Computer databases are a common mechanism for storing information on computer systems at replication sites while providing access to the stored information to users. A typical database is an organized collection of information stored as objects or records having properties or fields . As an example a database of criminal suspects may have an object for each suspect where each object contains properties designating specifics about the suspect such as eye color hair color height sex etc.

Operating on the actual database itself i.e. the organized information actually stored on a storage device there is typically a software based database management system or DBMS that among other operations processes requests from users for access to information in the database. Users may interact indirectly with the DBMS through a database application that in turn interacts directly with the DBMS to provide high level database operations to users such as analyzing integrating and visualizing database information. However the distinction between DBMS and database application is not clear cut and functionality provided by one may be provided by the other. Consequently in this description the term nexus will be used to refer broadly to any software that operates directly or indirectly on the actual database itself. A nexus may include a DBMS a database application or applications or components thereof.

Each day more and more organizations and businesses base their operations on mission critical nexuses that retrieve information in databases. As a result carrying out the operations of the organization or business often requires many users at different levels within the organization or business to access information in the database. Because information in the database may be sensitive e.g. social security numbers troop locations medical histories etc. organizations and business need to protect themselves against unauthorized access to the sensitive database information.

One possible approach for protecting against unauthorized access to sensitive information in a database is to label sensitive database information with a classification comprising one or more classification markings. A classification marking is data associated with sensitive information in a database that indicates a necessary classification marking a user must be authorized for in order to access the sensitive information. The possible classification markings are typically specific to a particular classification scheme and may be hierarchical according to authorization level. For example one classification scheme may have as the highest classification marking Top Secret TS followed by Secret S followed by Confidential C followed by Restricted R and finally Unclassified U . A user authorized for classification marking Secret S can access sensitive information with a classification marking of Secret S Confidential C Restricted R or Unclassified U but not Top Secret TS . The foregoing classification markings are NOTIONAL ONLY and provided solely for example purposes.

Today businesses and organizations need to share sensitive database information not only with users within their business or organization but also with other businesses and organizations. Unfortunately different businesses and organizations may use different classification schemes for information access control. Further some businesses and organizations may not use a classification scheme at all. With regard to database replication this poses a special set of problems. In particular a classification marking under one classification scheme may have no inherent equivalent in another information access control scheme. Nevertheless it is desirable to provide support for replication of sensitive information between databases the use different classification schemes. It is also desirable to provide support for replication of sensitive information between a database that uses a classification scheme for information access control and one that does not. Given these expectations that is great interest in providing a replication solution for sharing sensitive information between nexuses that use different classification schemes for information access control.

The approaches described in this section are approaches that could be pursued but not necessarily approaches that have been previously conceived or pursued. Therefore unless otherwise indicated it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.

In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however that the present invention may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.

It will be understood that although the terms first second etc. may be used herein to describe various elements these elements should not be limited by these terms. These terms are only used to distinguish one element from another. For example a first set could be termed a second set and similarly a second set could be termed a first set without departing from the scope of the present invention. The first set and the second set are both sets but they are not the same set.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. Use of criteria may indicate either or both of the singular usage of the term criterion or the plural form criteria or vice versa.

It will also be understood that the term and or as used herein refers to and encompasses any and all possible combinations of one or more of the associated listed items. It will be further understood that the terms comprises and or comprising when used herein specify the presence of stated features integers steps operations elements components and or groups but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

As used herein the term if may be construed to mean when or upon or in response to determining or in response to detecting depending on the context. Similarly the phrase if it is determined or if a stated condition or event is detected may be construed to mean upon determining or in response to determining or upon detecting the stated condition or event or in response to detecting the stated condition or event depending on the context.

All classification markings e.g. TOP SECRET TS in this document and the accompanying drawings are NOTIONAL and are used only for purposes of describing examples.

A classification includes a set of one or more classification markings according to a classification scheme. A classification may be associated with an access controlled information item e.g. an object a record a property a field etc. in a database through an access control list. For example the classification may be an item on an access control list associated with the database information item. The access control list may also contain other access control items for group based or role based access control.

According to one access control semantic of a classification associated with a database information item in a database a user must be authorized for each and every classification marking in the set of classification markings in order to access the information item in that database. Each database in a replication group may use a different classification scheme for information access control and some of the databases may not use a classification scheme at all. Consequently a user that can access an information item in one database of the replication group may not be able to access to the same information item in another database of the replication group.

In this description a replication group refers to a group of databases that participate in the replication of one or more database information items over to a peer to peer replication topology. Each database in the group is operatively coupled to a nexus that accesses that database either directly or indirectly i.e. through a DBMS . The nexus also conducts replication operations with its peers.

The needs discussed in the Background and other needs are addressed with the introduction of the notion of an origin classification . An origin classification represents a classification as it appeared in a database of the replication group when the classification was exported from that database as part of replicating database information over the replication topology. The database from which the classification was exported is referred to herein as the origin database of the origin classification. In some embodiments an origin classification includes a unique identifier of the classification scheme used by the origin database a concise representation of the classification exported from the origin database and a rank.

Origin classifications may be used within a replication system to facilitate translation of classification markings between peer databases that use different classification schemes. In particular the use of origin classifications allows a replication system to support the replication invariant if a classification C with the set of classification markings M under classification scheme S is exported from database D during replication then if that classification C is exported back to database D from another database in the replication group that classification C must have the set of classification markings M when the export back to database D is imported into database D assuming the classification C has not been modified since it was exported from database D.

Modification of a classification includes changing the set of classification markings of the classification in a database of the replication group. Modification of a classification also includes deleting the classification from an access control list. Modification of a classification does not include merely translating the set of classification markings of the classification from one classification to another.

Upholding this replication invariant allows users of the system to distinguish situations that follow the invariant from situations in which the classification is modified after it has been exported.

Upholding this invariant also allows the system to support asymmetrical classification marking translation rules between different classification schemes.

Another benefit of using origin classifications in a replication system includes the ability to replicate classifications over arbitrary peer to peer replication topologies including those with more than three databases.

Yet another benefit of using origin classifications in a replication system includes the ability to replicate classifications over arbitrary peer to peer replication topologies with no inherent limit on the number of different classification schemes that may be used by databases in the system.

Still yet another benefit of using origin classifications in a replication system includes the ability to replicate classifications over arbitrary peer to peer replication topologies where multiple databases in the system use the same classification scheme and some databases in the system use different classification schemes.

Still yet another benefit of using origin classifications in a replication system includes the ability to replicate classifications over arbitrary peer to peer replication topologies where some databases use a classification scheme for information access control and some databases do not use a classification scheme at all for information access control.

These and other benefits are provided by the techniques of using origin classifications in a replication system as described herein.

According to some embodiments a classification is associated with a database information item in a database of the replication group through an access control list stored in the database. is a block diagram of a possible access control list ACL that may be associated with a database information item in a database of a replication group. The ACL includes an identifier a set of zero or more access control items ACI and zero or one classification . Typically an ACL will include at least one ACI or a classification or include at least one ACI and a classification .

The identifier identifies the ACL uniquely and commonly in all databases of the replication group. The identifier is used by a nexus during replication operations to match data representing an update to an ACL received by the nexus in an export from a peer nexus with data representing the ACL in the database accessed by the nexus receiving the export.

Each ACI specifies a group and a permission of that group . A group may also be referred to a role. The group of an ACI identifies a set of users. The permission of the ACI identifies an operation a user in the set can perform on the associated database information item or an operation the user can perform on the ACL . Non limiting examples of a permission include read write owner create delete etc.

According to some embodiments if an ACL has a classification then a user must be authorized for each and every classification marking in the set of classification markings of the classification to have any access to the associated database information item or the ACL . Thus the classification overrides any permission granted to the user that would otherwise allow the user to access the database information item or the ACL .

The database information item may be any access controlled information stored in a database of the replication group. The database information item may correspond to a row an object a property an attribute a field or a record stored in the database as just some examples.

As mentioned above origin classifications may be used within a replication system to facilitate translation of classification markings in accordance with the previously discussed replication invariant between peer databases of a replication group that use different classification schemes. To represent the translations a classification associated with a database information item in a database of the replication group may have in addition to a set of one or more classification markings that represent information access control a set of zero or more origin classifications that represents translations of the classification as the classification is replicated between nexuses that use different classification schemes.

According to some embodiments each classification marking represents a level of authorization needed to access the database information item with which classification is associated in the source database. A marking is specific to the particular classification scheme used by the source database. For example one possible classification scheme may have the following possible markings TOP SECRET TS SECRET S CONFIDENTIAL C RESTRICTED R FOR OFFICIAL USE ONLY FOUO among others while another possible classification scheme may use the markings CLASSIFIED C and RESTRICTED R among others.

In this description for ease of understanding a shorthand notation is used to refer to a set of classification markings once the markings of the set have been introduced by their full names. The shorthand notation consists of a character sequence enclosed by parentheses. For example the notation U FOUO may be used to refer to the set of classification markings UNCLASSIFIED and FOR OFFICIAL USE ONLY with the character sequence used to separate the two abbreviated markings. A classification marking is specific to a particular classification scheme. Thus all classification markings have an inherent classification scheme to which they belong. However two different classification schemes can use the same classification marking.

In some embodiments each marking is character string data representing the classification marking under the classification scheme used by the source database. For example a marking may be the character string U or the character string UNCLASSIFIED to represent the classification marking UNCLASSIFIED. A character string is just one possible data format for representing a classification marking and other formats may be used e.g. a binary representation a numerical representation . Further a marking may indirectly represent a classification marking with a reference pointer or index key or the like to data that actually represents the classification marking.

The set of markings of the classification may be more concisely represented as a formatted classification character string . For example a classification with markings U and FOUO may be represented as the classification string U FOUO where the embedded character string is used as a delimiter to separate markings in the classification string . The character string is just one example of a possible delimiters and other delimiters may be used. The classification string may be stored in the source database as part of the classification . Alternatively the source nexus may derive the classification string from the set of markings as needed. A character string is just one possible representation of the classification string and other data formats for concisely representing the set of markings may be used.

In some embodiments a classification is stored in the source database in response to one of two types of events. First a classification may be stored in the source database in response to creation or modification of the classification in the source database. For example a user may create a classification to associate it with a database information item in the source database. As another example a user may modify the set of classification markings of an existing classification in the source database. When a classification is stored in the source database in response to creation or modification of the classification the set of origin classifications may be an empty set.

Second the classification may be stored in imported into the source database in response to receiving a replication export from a peer nexus of the source nexus. In this case the classification imported into the source database may have a non empty set of origin classifications as described in greater detail below.

The set of origin classifications represents translations between different classification schemes that the classification has undergone as it traversed a replication path through the replication topology of the replication group from a first nexus to the source nexus. The set of origin classifications may be conceptually viewed as a stack where the origin classification at the bottom of the stack represents the set of classification markings of the classification as it was exported by the first nexus under the classification scheme used by the first nexus the next highest origin classification in the stack represents the set of classification markings of the classification as it was exported by a second nexus that translated the set of classification markings from the classification scheme used by the first nexus to the classification scheme used by the second nexus and so on up to the origin classification at the top of the stack that represents the set of classification markings of the classification as it was exported by the peer nexus under the classification scheme used by the peer nexus.

The nexus in the replication group that exported the classification with the classification markings represented by an origin classification is referred to herein as the origin nexus of that origin classification . Similarly the database in the replication group from which the classification with those classification markings was exported by the origin nexus is referred to herein as the origin database of that origin classification . Consequently each origin classification may be viewed as being associated with an origin nexus and an origin database.

According to some embodiments each origin classification of a classification may have a classification scheme field one or more classification markings an optional classification string field and an optional rank field .

The classification scheme field of an origin classification identifies the classification scheme used by the origin nexus of that origin classification . More than one nexus in the replication group may use the same classification scheme. In some embodiments the value of the classification scheme field is an alphanumeric identifier. However the value is not limited to being formatted as an alphanumeric identifier and other data formats may be used.

The classification markings of an origin classification are the set of classification markings of the classification as it was exported by the origin nexus of that origin classification under the classification scheme used by the origin nexus of the origin classification .

The optional classification string field of an origin classification concisely represents the set of classification markings of the origin classification. For example the classification string field may contain a classification string that concisely represents the set of classification markings .

The optional rank field indicates the order of the origin classification in the stack of origin classifications of the classification . No two origin classifications in the stack can have the same rank. As an alternative to using an explicit rank field the rank of an origin classification in the stack may be inferred from the order of the origin classifications as stored in the source database. In this description the lowest ranked origin classification is designated with a rank order of one 1 the next highest ranked origin classification designated with a rank order of two 2 and so on up to the highest ranked origin classification designated with a rank order of N where N is an integer greater than or equal to one 1 . However an ordinal other than an integer may be used to convey the rank of an origin classification .

An example export methodology for exporting a classification from a source database of the replication group to a peer database of the replication group will now be described. The export methodology may be summarized formally as follows given a classification C in the source database that is to be exported to the peer database where the source database uses a classification scheme Sand where the classification C has the set of classification markings M 1 . . . M K where K is greater than or equal to one 1 and has the set of ranked origin classifications O 0 . . . O N where N is greater than or equal to zero 0 a new origin classification is created by the source nexus O N 1 S REP M 1 . . . M K N 1 where 

Once the new origin classification O N 1 is created the classification C is exported with the set of ranked origin classifications O 0 . . . O N O N 1 .

For ease of understanding the steps of the methodology are depicted and described as being performed in a certain order. However it will be understood by those skilled in the art that where a step is not dependent on results of another step or steps that step may be performed in a different order or performed concurrently with respect to other steps. For example block of methodology may be performed after block . As another example block and may be performed in parallel.

At block the source nexus determines an identifier of the classification scheme used by the source database. The source nexus may be configured with the identifier for example by reading the identifier from the source database or reading the identifier from a configuration file or otherwise being provided the identifier by a user or other computing process through an invoke able interface offered by the source nexus. Other manners of determining the identifier of the classification scheme may be used and the source nexus is not limited to using any particular manner. In some embodiments the classification scheme identifier takes the form of a character string. The identifier uniquely identifies the classification scheme amongst all classification schemes used by databases in the replication group.

At block the source nexus determines the classification markings of the classification to be exported. This may involve the source nexus reading information from the source database from among information that represents the classification as stored in the source database.

At optional block the classification markings are formatted by the source nexus as a classification string . In some embodiments each classification marking is a character string representing the classification marking under the classification scheme used by the source database e.g. U for UNCLASSIFIED R for RESTRICTED etc. . The classification string may be produced at block for example by concatenating the classification markings with a character string separator e.g. to separate classification markings in the resulting classification string . However the classification string is not limited to a particular data format and other data formats e.g. a binary representation may be used.

Alternatively at block the source nexus determines the classification string by reading the classification string from the source database. In this case the classification markings were previously formatted as the classification string and then stored in the source database. Consequently the step of block need not be performed as part of methodology .

At block the source nexus determines the set of origin classifications if any of the classification to be exported. This may involve the source nexus reading information from the source database from among information that represents the classification as stored in the source database.

At block the source nexus creates a new set of origin classifications that consists of the existing set of origin classifications if any plus a new origin classification as the highest ranked origin classification in the new set. In some embodiments this new origin classification is assigned the classification scheme identifier determined at block the set of classification markings determined at block the classification string determined at block or and a rank of N 1 where N is the highest rank assigned to an origin classification in the set of origin classifications . This new origin classification is created by the source nexus only for export to the peer nexus. The source nexus at block does not update the set of origin classifications in the source database with this new origin classification.

At block the source nexus formats the classification for export as export data by using the information obtained at blocks . The export data can take any format convenient for packaging and transporting the classification over a data network to the peer nexus. As one example the export data may be formatted as eXtensible Markup Language XML or as JavaScript Object Notation JSON . The export data may include among other information the identifier of the access control list that the classification is an item of the classification string determined at block or and the new set of origin classifications that include the set of origin classifications determined at block if any and the new origin classification created at block . The relative ranking of the set of origin classifications is retained in the exported new set of origin classification with the new origin classification having the highest rank.

At block the export data is exported to the peer nexus over one or more data networks e.g. Local Area Networks or Wide Area Networks in one or more network messages. The network messages are not limited to any particular network message format and can be in any network message format suitable for the requirements of the implementation at hand. Some possible non limiting network message formats include the HyperText Message Transfer Protocol HTTP the Simple Object Access Protocol SOAP and the Simple Mail Transfer Protocol SMTP .

The new origin classification may include a classification scheme identifier corresponding to the classification scheme used by the source nexus and source database determined in accordance with block . The new origin classification may also include a set of classification markings determined in accordance with block . The new origin classification may optionally include a classification string determined in accordance with block or block . The new origin classification may include a rank determined in accordance with block .

According to some embodiments an export data exported at block represents a creation of or an update to database data in the source database. In some embodiments the created or updated database data is the classification in the source database the database information item in the source database associated with the classification in the source database the access control list in the source database that the classification is a part of in the source database or some combination of a creation and or update to the classification the database information item and or the access control list .

According to some embodiments each nexus in the replication group is configured with a user defined translation map. The map is a data structure logic or a combination of logic and data structures that define a set of translation rules. Each translation rule maps a given set of classification markings under a given source classification scheme to classification markings under a given target classification scheme. Translation rules within a translation map need not be symmetrical. For example a set of translation rules of a translation map can have a first rule that maps classification markings U FOUO under scheme Sto classification markings R under scheme Sand a second translation rule that maps classification markings R under scheme Sto classification markings C under scheme S.

An example import methodology for importing export data that represents a classification exported from a source database of the replication group to a peer database of the replication group will now be described. On import assuming the export data satisfies pre conditions for import into the peer database as discussed in greater detail below if the peer database uses a different classification scheme than the source database then the exported classification is translated to the classification scheme used by the peer database according to a set of user defined translation rules and the translated classification is stored in the peer database.

The import methodology may be summarized formally as follows given export data that is to be imported as classification C into the peer database that uses classification scheme Swhere the export data has a set of origin classifications O 1 . . . O N 1 where N is greater than or equal to zero 0 potentially two iterations over the set of origin classifications O 1 . . . O N 1 may be performed by the peer nexus. In each of the two possible iterations the peer nexus iterates over the set of origin classifications O 1 . . . O N 1 one by one from the lowest ranked origin classification O 1 to at most the highest ranked origin classification O N 1 .

In the first iteration if the classification scheme of an origin classification O i matches the classification scheme of the peer database S then the classification C imported into the peer database has the classification markings of that origin classification O i and has the set of origin classifications O 1 . . . O i 1 if i is greater than one 1 or an empty set of origin classifications if i equals one 1 .

The second iteration is performed only if no classification C is imported during the first iteration. In the second iteration if the set of user defined translation rules used by the peer nexus defines a translation for the classification markings of an origin classification O i from the classification scheme of that origin classification O i to the classification scheme of the peer database S then the classification C imported into the peer database has the classification markings under the classification of the peer database Sthat result from translating the classification markings of that origin classification O i from the classification scheme of that origin classification O i to the classification scheme of the peer database Saccording to the set of translation rules in use at the peer nexus. In addition the classification C has the set of origin classifications O 1 . . . O i 1 . In some embodiments described in greater detail below with respect to shortest path translations if the second iteration is performed the classification C imported into the peer database always has the classifications markings translated from the classification markings of the origin classification O 1 and always has the set of origin classifications O 1 .

In some embodiments the methodology is performed only after the peer nexus has determined that certain pre import conditions have been satisfied. One such pre import condition is that the export data actually updates the peer database. In asynchronous replication the export data may not actually update the peer database because the same database information can be updated independently at the same time or at different times. For example the export data does not update the peer database if the peer database contains a later newer version of database data represented by the export data . In this case the export data is not imported into the peer database because the export data represents an out of date version of the database data. The export data also may not update the peer database if the version of the database data in the peer database if there is one conflicts with the version of the database data represented by the export data . In this case the conflict must be resolved before the export data is imported into the peer database.

In some embodiments the peer nexus of the replication group uses a logical clock scheme for detecting casual relationships between database updates such as for example Lamport clocks or vector clocks to determine whether the export data does in fact update the peer database. Such determination may involve the peer nexus using the logical clock scheme to determine whether the database update represented by the export data happened before happened after or neither happened before nor happened after the current version of the database data in the peer database that the export data purports to update if there is a current version of the database data in the peer database. If the update represented by the export data happened after the current version of the database data in the peer database or if there is no current version of the database data in the peer database then the export data does actually update the peer database. If the update represented by the export data happened before the current version of the database data in the peer database then the export data does not actually update the peer database. If the update represented by the export data neither happened before nor happened after the current version of the database data in the peer database then it is unknown whether the export data updates the peer database and further action is necessary to resolve the conflict between the version of the database data represented by the export data and the current version of the database data in the peer database. Depending on how the conflict is resolved e.g. manually by a human or automatically by a heuristic the export data may still update the peer database. More information on the happened before and the happened after relations between events in a distributed computing system can be found in a paper by Leslie Lamport entitled Time Clocks and the Ordering of Events in a Distributed System Communications of the ACM 21 7 pp. 558 565 1978 the entire contents of which is hereby incorporated by reference as if fully set forth herein.

According to some embodiments the export data includes versioning information e.g. vector clock information or Lamport clock information for determining whether the database update represented by the export data happened before happened after or neither happened before nor happened after the current version of the database data in the peer database that the export data purports to update if there is a current version of the database data in the peer database. According to some embodiments the database data in the peer database that the export data purports to update is the current version of the classification in the peer database the current version of the database information item in the peer database associated with the current version of the classification in the peer database the current version of the access control list in the peer database that the classification is a part of in the peer database or some combination of the current version of the classification the current version of the database information item and or the current version of the access control list

In some embodiments another pre import condition is a successful validation of the translations of the classification made by other origin nexuses in the replication group. These translations are reflected by the set of origin classifications of the export data . In particular the peer nexus before importing export data may use its set of translation rules to verify that the translations reflected by the set of origin classifications are the same translations that result under the peer nexus current set of translation rules. By doing so the peer nexus can verify that its set of translation rules are consistent with the sets of translation rules used at the other origin nexuses in the replication group.

In some embodiments this pre import validation involves verifying that the set of classification markings represented by the classification string of the lowest ranked origin classification in the set of origin classifications translates under the set of translation rules used at the peer nexus to the set of classification markings represented by the classification string of the next highest ranked origin classification in the set of origin classifications and then verifying that set of classification markings translates to the set of classification markings represented by the classification string of the next highest ranked origin classification in the set and so on up to verifying that the set of classification markings represented by the classification string of the penultimate origin classification in the set translates to the classification markings represented the classification string of the highest ranked origin classification in the stack . In some embodiments the export data is imported into the peer database only if this validation is successful.

For ease of understanding the steps of the methodology are described and depicted as being performed in a certain order. However it will be understood by those skilled in the art that where a step is not dependent on results of another step or steps that step may be performed in a different order or concurrently with respect to other steps.

At block the peer nexus determines an identifier of the classification scheme used by the peer database. The peer nexus may be configured with the identifier for example by reading the identifier from the peer database or reading the identifier from a configuration file or otherwise being provided the identifier by a user or other computing process through an invoke able interface offered by the peer nexus. Other manners of determining the identifier of the classification scheme may be used and the peer nexus is not limited to using any particular manner.

At block the peer nexus determines the set of origin classification from the export data . For example the export data may be read and parsed and data structures representing origin classifications stored in a computer memory.

At block the peer nexus determines whether any of the origin classifications in the set of origin classifications of the export data correspond to an origin database that uses the same classification scheme as the classification scheme used by the peer database. Block involves iterating over the set of origin classifications of the export data one by one from the lowest ranked origin classification up to at most the highest ranked origin classification until a matching origin classification is found or until the highest ranked origin classification of the set of origin classifications of the export data is reached. A matching origin classification is found if the value of the classification scheme identifier field of the matching origin classification matches the classification scheme identifier of the peer database determined at block . If there is such a matching origin classification in the set of origin classifications of the export data then according to some embodiments the classification imported into the peer database has a set of classification markings that consist of the markings of the classification string of the matching origin classification. In addition the imported classification has an empty set of origin classifications or the set of all origin classifications in the set of origin classifications of the export data that are ranked lower than the matching origin classification of the export data if the matching origin classification of the export data is not the lowest ranked origin classification in the set of origin classification of the export data .

At block if a matching origin classification in the export data is found during the first iteration at block then that origin classification is imported as classification into the peer database as described above and the second iteration at block is not performed.

On the other hand if a matching origin classification in the export data is not found during the first iteration block then a second iteration block over the set of origin classifications of the export data is conducted.

Block involves iterating over the set of origin classifications of the export data one by one from the lowest ranked origin classification up to at most the highest ranked origin classification until a translatable origin classification in the export data is found for which there is a translation rule in the set of translation rules used by the peer database for translating the classification string of the translatable origin classification from the classification scheme of the translatable origin classification to a set of classification markings under the classification scheme used by the peer database. If no such translatable origin classification is found in the export data then the peer nexus may treat this as an error condition and determine not import the export data into the peer database.

Otherwise if a translatable origin classification is found in the export data during the second iteration block then the classification imported into the peer database has a set of classification markings that consist of the classification markings that result from translating the classification string of the translatable origin classification in the export data under the set of translation rules used by the peer database from the classification scheme of the translatable origin classification to the classification scheme used by the peer database. In addition the imported classification has a set of origin classifications consisting of just the translatable origin classification or the set of all origin classifications in the set of origin classifications in the export data that are ranked lower than the translatable origin classification if the translatable origin classification is not the lowest ranked origin classification in the set of origin classification of the export data .

As an example of the export and import methodology just discussed consider the example replication system of . In the system two nexuses Nand Naccess databases Dand Drespectively. Nexuses Nand Npeer with each other over one or more data networks as part of a replication group consisting of databases Dand D. In other words nexus Nsends database information updates to database Dto nexus Nand nexus Nsends database information updates to database Dto nexus N. Databases Dand Duse different classification schemes Sand Srespectively.

The operators of the replication system have agreed on set of translation rules between the two classification schemes Sand S which happen to be asymmetric. In particular as shown in a first rule Rule specifies that the set of classification markings U FOUO under classification scheme Stranslates to the classification marking R under classification scheme S. A second rule Rulespecifies that a classification marking of R under classification scheme Stranslates to C under classification scheme S.

Still referring to according to the replication invariant if classification C with markings U FOUO under scheme Sis created in database Dand then exported from database Dby nexus Nand that classification C is not subsequently modified at database Dor database D when the classification C is exported back to nexus Nit must contain the markings U FOUO under scheme Swhen it is imported by nexus Ninto the database Deven if the markings U FOUO were translated by nexus Nto markings under scheme S. This is shown in .

At time T an access control list with an identifier of 1234 is created in database Daccessed by nexus N. The access control list has one access control item specifying that the ADMINS group has a READ permission . In addition the access control list has a classification with the set of classification markings consisting of U and FOUO .

As a result of the creation of the access control list in database Dat time T at time Tthe access control list is exported by nexus Nto nexus Nin accordance with the export methodology of . The export data contains a classification string of U FOUO and a set of origin classifications consisting of a new origin classification with a classification scheme identifier of S1 a set of classification markings of U FOUO and a rank of 1.

At time T nexus Nreceives the export data exported by nexus Nat time Tand imports the export data into database Das part of a new access control list with a new classification in database Din accordance with the import methodology of . In doing so nexus Ntranslates the set of classification markings of U FOUO of the new origin classification in the export data to classification marking R under scheme Saccording to translation rule Rule. In accordance with step of the import methodology the resulting classification stored in the database Dhas a set of classification markings consisting of R and a set of origin classifications consisting of a single origin classification with a classification scheme of S1 a set of classification markings of U FOUO and a rank of 1.

As a result of the update to the access control list in database Dat time T at time Tthe access control list is exported by nexus Nback to nexus Nin accordance with the export methodology of . The export data contains a classification string of R and a set of origin classifications consisting of the origin classification with a classification scheme identifier of S1 a set of classification markings of U FOUO and a rank of 1 and a new origin classification with a classification identifier of S2 a set of classification markings of R and a rank of 2.

At time T nexus Nreceives the export data exported by nexus Nat time Tand imports the export data into database Das part of updating the access control list with in database Din accordance with the import methodology of . In accordance with step of the import methodology the classification stored in the database Dis not updated thereby upholding the replication invariant.

In some embodiments the translation map is a user implemented logic plugin e.g. a Dynamic Link Library DLL or Java ARchive to a nexus. The plugin implements a programmatic interface that the nexus can invoke when the nexus needs to perform a translation from one classification scheme to another. The following is an example of a possible programmatic interface written in the Java programming language 

In some embodiments a nexus is configured with a user defined classification marking whitelist. The classification marking whitelist is a list of classification markings under the classification scheme used by the nexus that are permitted to be exported by the nexus in export data . When configured with a classification marking whitelist the nexus will not export any classification marking stored in the database that the nexus accesses that are not on the whitelist. The whitelist is useful for keeping secret the existence of certain sensitive classification markings. By extension if a classification is on a classification marking whitelist no translation rule for translating that classification marking need exist in any translation map in the replication group. In some embodiments the nexus will not export a classification as export data unless all classification markings of the classification are on the whitelist.

In replication groups with more than two databases it can be the case that a classification is exported along two different replication paths resulting in a nexus that receives two export data for the same exported classification with two different stacks of origin classifications 220 420. In this case the nexus receiving the two export data may have two different possible translations to classification markings under the classification scheme used by the receiving nexus. According to some embodiments the receiving nexus prefers the translation that results in the shortest stack of origin classifications in the classification imported into the receiving database. In other words the receiving nexus prefers the translation corresponding to the shortest translation path. This preference is based on the expectation that the precision of translation decreases as the length of the translation path increases.

As an example of shortest path translation consider the replication system of . As shown the replication group has three databases D D and Daccessed respectively by three nexuses N N and N. Database Duses classification scheme S. Database Duses classification S. Database Duses classification scheme S.

According to a translation map configured at all three nexuses N N and N the classification markings U FOUO under classification scheme Stranslates to classification markings R under scheme S. The classification markings R under classification scheme Stranslates to markings C under scheme S. The classification markings U FOUO under scheme Salso translates to classification markings C under scheme S.

At time T an access control list with an identifier of 1234 is created in database Daccessed by nexus N. The access control list has one access control item specifying that the ADMINS group has a READ permission . In addition the access control list has a classification with the set of classification markings consisting of U and FOUO .

As a result of the creation of the access control list in database Dat time T at time Tthe access control list is exported by nexus Nto both nexuses Nand Nin accordance with the export methodology of . The export data to each of nexuses Nand Ncontains a classification string of U FOUO and a set of origin classifications consisting of a new origin classification with a classification scheme identifier of S1 a set of classification markings of U FOUO and a rank of 1.

At time T nexus Nreceives the export data exported by nexus Nat time Tand imports the export data into database Das part of a new access control list with a new classification in database Din accordance with the import methodology of . In doing so nexus Ntranslates the set of classification markings of U FOUO of the new origin classification in the export data to classification marking R under scheme Saccording to translation rule Rule. In accordance with step of the import methodology the resulting classification stored in the database Dhas a set of classification markings consisting of R and a set of origin classifications consisting of a single origin classification with a classification scheme of S1 a set of classification markings of U FOUO and a rank of 1.

As a result of the creation of the access control list in database Dat time T at time Tthe access control list is exported by nexus Nto nexus Nin accordance with the export methodology of . The export data contains a classification string of R and a set of origin classifications consisting of the origin classification with a classification scheme identifier of S1 a set of classification markings of U FOUO and a rank of 1 and a new origin classification with a classification identifier of S2 a set of classification markings of R and a rank of 2.

Regardless of which export at time Tor time Tarrives at nexus Nfirst nexus Nimports both exports according the shortest path translation preference discussed above. In particular if the export from nexus Narrives first because of translation rules Ruleand Rule the nexus Nhas a choice at block of the import methodology of translating the origin classification S1 U FOUO 1 or translating the origin classification S1 R 2 . In accordance with the above discussed short path translation preference the nexus Nwill prefer to translate the lowest ranked origin classification in the export for which there is a translation rule in this example S1 U FOUO 1 under Rule. Consequently if the export from nexus Narrives first the classification imported into database Dby nexus Nat time Thas a set of origin classifications consisting of a single origin classification with a classification scheme identifier of S1 a set of classification markings of U FOUO and a rank of 1. If on the other hand the export from nexus Narrives at nexus Nfirst the nexus Ntranslates the one origin classification in the export from nexus Naccording to translation rule Ruleand imports the result into database D. As a result regardless of which export at time Tor time Tarrives at nexus Nfirst nexus Nimports the same classification into database D.

According to some embodiments to handle the possibility that a classification can be translated to multiple different shortest paths under different translation rules the translation map configured at each nexus in the replication group is required to have translation rules between every two classification schemes used in the replication group. As a result there will always be at most one path of translation between classification schemes.

For example suppose a replication group has databases D D D and Daccessed by nexuses N N N and Nrespectively and using different classification schemes S S S and Srespectively. Further suppose that each nexus in the replication group uses the set of translation rules depicted in the table of . The set of translation rules of does not define any translation rules between classification schemes Sand S. As a result a classification of U FOUO exported separately from nexus Nto nexuses Nand Nwhich in turn each export the classification to nexus Nwould result in two different shortest path translated classifications at nexus N. This is undesirable because it is not clear which of the two different shortest path translated classifications should be imported by nexus Ninto database D.

In particular since there is no rule in the set of translation rules translating classification markings U FOUO under scheme S1 to classification markings under scheme S4 two different shortest path translated classifications result at nexus N one with the set of origin classifications S1 U FOUO 1 S2 R 2 and the other with the set of origin classifications S1 U FOUO 1 S3 C 2 . Even though in this example the two different shortest path translated classifications have the same classification markings C it is also possible with a different set of translation rules to also have two different sets of classification markings in addition to different sets of origin classifications.

As discussed above a solution for handling multiple different shortest paths is to require the translation map to have translation rules between every two classification schemes used in the replication group. This requirement can be verified by a nexus when the nexus is configured with a translation map. In particular for every set of classification markings under a classification scheme defined in the map the nexus can verify that the translation map has a rule mapping the set of classification markings to every other classification scheme defined in the map. For example for classification markings U FOUO under scheme S1 in the set of translation rules of the nexus can verify that there are rules in the map translating the classifications markings U FOUO under scheme S1 to classification markings under each of schemes S2 S3 and S4. Since in the example of there is no such rule for scheme S4 the example translation map of would not pass this verification.

According to some embodiments another solution for handling multiple different shortest paths is used in the replication group that does not require the translation map to have translation rules between every two classification schemes used in the replication group. In some embodiments a deterministic ordering of the multiple different shortest paths is used by all nexuses in the replication group and the highest or lowest ordered short path is used as a tie breaker. For example the nexuses can sort the multiple different shortest paths in a lexical order based on classification strings or classification markings of the multiple different shortest paths.

Translating Between Nexuses that Use Classifications for Information Access Control and Nexuses that do not Use Classifications for Information Access Control

According to some embodiments origin classifications are used in a replication system to facilitate translation of classifications between a nexus that uses classifications for information access control and a nexus that does not use classifications for information access control. Each of the databases in the replication system is categorized into one of two groups. Specifically either the database is a classification based access control database or just CBAC database that uses classifications for information access control or a non classification based access control database or just non CBAC database that does not use classifications for information access control. A nexus that accesses a CBAC database is referred herein to as a CBAC nexus. Similarly a nexus that accesses a non CBAC database is referred to herein as non CBAC nexus.

Instead of using classification markings for information access control a non CBAC database may use group based or role based access control. For example a database information item in a non CBAC database may be associated with an access control list having a set of one or more access control items . Each access control item may specify a group or role e.g. EVERYONE ADMINISTRATORS EMPLOYEES etc. and a permission e.g. Read Write Create Delete Owner etc. .

According to some embodiments in addition to an access control list a database information item in a non CBAC database may also be associated with a non CBAC classification that has an empty set of classification markings and thus does not provide any information access control function for the database information item in the non CBAC database. However the non CBAC classification is allowed to have a set of origin classifications just like a CBAC classification stored in a CBAC database to facilitate support of the replication invariant.

Exporting a Classification Originally Created in a CBAC Database from a CBAC Nexus to a Non CBAC Nexus Peer

According to some embodiments for a classification that is originally created in a CBAC database the classification is exported from a CBAC nexus to a non CBAC nexus peer according to the export methodology of discussed above without modification.

Importing Export Data Representing a Classification Created in a CBAC Database into a Non CBAC Database

According to some embodiments for export data representing a classification originally created in a CBAC database that is received by a non CBAC nexus from a CBAC nexus peer the classification imported into the non CBAC database has the same set of origin classifications as the set of origin classifications of the export data but with an empty set of classification markings . No translation of the origin classifications in the export data is performed by the non CBAC nexus. By doing so the classification imported into the non CBAC database does not provide any classification based information access control function in the non CBAC database but does ensure that the replication invariant can be upheld if the classification is exported back to the CBAC nexus peer.

If this classification imported into the non CBAC database that was originally created in a CBAC database is subsequently exported by the non CBAC nexus then it is exported by the non CBAC nexus as is without any new origin classifications in contrast to the export methodology discussed previously. This is so regardless if the peer nexus is a CBAC nexus or non CBAC nexus. A CBAC nexus receiving such an export treats the export the same as under the import methodology of discussed above.

Exporting an Access Control List Created in a Non CBAC Database from a Non CBAC Nexus to a CBAC Nexus Peer

According to some embodiments for an access control list originally created in a non CBAC database the access control list is exported by a non CBAC nexus to a CBAC nexus peer with a classification string that represents a translation of the set of access control items of the access control list to a set of classification markings under the classification scheme used by the CBAC database peer. For doing so the non CBAC nexus may be configured with translation rules for translating sets of access control items to sets of classification markings under the various classification schemes used by the CBAC databases that the non CBAC nexus peers with. Only non CBAC nexuses that peer with CBAC nexuses need be configured with translation rules and non CBAC nexuses that peer only with other non CBAC nexuses need not be configured with translation rules.

The export of the access control list from the non CBAC nexus includes export data where the export data has the classification string resulting from the translation of the set of access control items to the set classification markings under the classification scheme used by the CBAC database peer. Further the non CBAC nexus creates a new origin classification and includes the new origin classification as the only origin classification in the export data . The classification scheme identifier of the new origin classification is assigned a special value that indicates that the classification string of the export data originated at a non CBAC nexus. The special value can be any predetermined value that does not represent an identifier of a classification scheme used by a database in the replication group.

When the access control list originally created in a non CBAC database is exported by a non CBAC nexus to another non CBAC nexus peer the access control list is exported without translating the set of access control items to a set of classification markings and without any export data representing a classification .

Importing Export Data Representing an Access Control List Created in a Non CBAC Database into a CBAC Database

According to some embodiments for export data exported by a non CBAC nexus to a CBAC nexus peer where the export data contains a new origin classification with a classification scheme identifier with the special value then assuming all appropriate pre conditions for import are satisfied the CBAC nexus imports the export data as a classification with a set of classification markings consisting of the markings of the classification string in the export data . Further the imported classification has a set of origin classifications consisting of the new origin classification with the special classification scheme identifier value. If and when that imported classification is exported to by the CBAC nexus either to a CBAC nexus peer or a non CBAC nexus peer it is exported in accordance with the export methodology discussed above. If that export is received by a non CBAC nexus peer the origin classification with the special classification scheme identifier value in the export signals to the non CBAC nexus to discard the classification information in the export and import just the access control list information into the non CBAC database thereby upholding the replication invariant for the access control list that originated in a non CBAC database.

Each site and may have at the site one or more networked computing devices e.g. computer system of such as one or more workstation computers server computers laptop computers mobile computing devices or combinations thereof connected to each other via one or more data networks. Further while only three sites are shown in the environment may comprise tens hundreds or even thousands of geographically distributed sites.

Sites and each have copies and of the same body of data. The body of data may be for example one or more tables in a relational database. However embodiments of the invention are not limited to relational databases and any type of database capable of supporting the techniques described herein may be used.

With respect to that particular body of data nexus may be configured to asynchronously propagate to site changes made to copy and asynchronously propagate to site changes made to copy . Similarly site may be configured to asynchronously propagate to site changes made to copy and asynchronously propagate to site changes made to copy . Site may be configured to asynchronously propagate to both sites and changes made to copy . However it is not necessary that each site be configured to propagate changes made to its copy of the body of data to every other site. In other words a full meshed replication topology is not required to implement embodiments of the invention and partially meshed cascading and other topologies may be used.

As system employs an asynchronous replication scheme each copy and of the body of data is loosely consistent with the other copies. That is each copy may diverge from time to time such that at any given moment one copy s view of the body of data may be different from another copy s view of the body of data. In the absence of new changes the copies are expected to eventually become consistent with one another. Thus as well as being loosely consistent with one another the copies can also be said to be eventually consistent.

Environment also contains nexuses and implementing techniques described herein for sharing information between nexuses that use different classification schemes for information access control. In some embodiments a nexus is implemented as one or more computer software programs one or more field programmable logics hard wired logic or some combination thereof.

Computer system also includes a main memory such as a random access memory RAM or other dynamic storage device coupled to bus for storing information and instructions to be executed by processor s . Main memory also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor s . Such instructions when stored in non transitory media accessible to processor s render computer system into a special purpose computing device that is customized to perform the operations specified in the instructions. For purposes of this description main memory includes any non volatile memory used to implement virtual memory.

Computer system may further include a read only memory ROM or other static storage device coupled to bus for storing static information and instructions for processor s . One or more storage device s such as magnetic disks optical disks or solid state drives may be provided and coupled to bus for storing information and instructions.

Computer system may be coupled via bus to a display such as a liquid crystal display LCD for displaying information to a computer user. One or more input device s including alphanumeric and other keys a touch panel physical buttons a mouse a trackball a cursor control device or other input device may be coupled to bus for communicating information and command selections to processor s . Where an input device is a touch panel the touch panel may be physically integrated with the display for example as a resistive or capacitive sensing touch panel overlay on an LCD screen for detecting the presence and location of touch within the display area.

Computer system may implement the techniques described herein using customized hard wired logic one or more ASICs or FPGAs firmware and or program logic which in combination with the computer system causes or programs computer system to be a special purpose machine. The techniques herein may be performed by computer system in response to processor s executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory from another storage medium such as storage device s . Execution of the sequences of instructions contained in main memory causes processor s to perform the process steps described herein. In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions.

The term storage media as used herein refers to any non transitory media that store data and or instructions that cause a machine to operate in a specific fashion. Such storage media may comprise non volatile media and or volatile media. Non volatile media includes for example optical disks magnetic disks or solid state drives such as storage device s . Volatile media includes dynamic memory such as main memory . Common forms of storage media include for example a floppy disk a flexible disk hard disk solid state drive magnetic tape or any other magnetic data storage medium a CD ROM any other optical data storage medium any physical medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM NVRAM any other memory chip or cartridge.

Storage media is distinct from but may be used in conjunction with transmission media. Transmission media participates in transferring information between storage media. For example transmission media includes coaxial cables copper wire and fiber optics including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio wave and infra red data communications.

Various forms of media may be involved in carrying one or more sequences of one or more instructions to processor s for execution. For example the instructions may initially be carried on a magnetic disk or solid state drive of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over wired e.g. twisted pair coaxial cable optical fiber etc. or wireless e.g. microwave satellite cellular radio etc. networks. A network communications device local to computer system can receive the data on the network and use an infra red transmitter to convert the data to an infra red signal. An infra red detector can receive the data carried in the infra red signal and appropriate circuitry can place the data on bus . Bus carries the data to main memory from which processor s retrieves and executes the instructions. The instructions received by main memory may optionally be stored on storage device s either before or after execution by processor s .

Computer system also includes one or more communication interface s coupled to bus . Communication interface s sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information. Communication interface s provides a two way data communication coupling to a network link that is connected to a wired or wireless local network . For example communication interface s may include a modem an integrated services digital network ISDN card an Ethernet card a cable modem a satellite modem an IEEE 802.11 or other Wireless Local Area Network WLAN interface a 3G 4G or other cellular network interface or other network interface for communicating on wired or wireless local network .

Network link typically provides data communication through one or more networks to other data devices. For example network link may provide a connection through local network to a host computer or to data equipment operated by an Internet Service Provider ISP . ISP in turn provides data communication services through the world wide packet data communication network now commonly referred to as the Internet . Local network and Internet both use electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system are example forms of transmission media.

Computer system can send messages and receive data including program instructions through the network s network link and communication interface s . In the Internet example a server might transmit a requested instructions for an application program through Internet ISP local network and communication interface s .

The received instructions may be executed by processor s as it is received and or stored in storage device s or other non volatile storage for later execution.

In the foregoing specification embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. Thus the sole and exclusive indicator of what is the invention and is intended by the applicants to be the invention is the set of claims that issue from this application in the specific form in which such claims issue including any subsequent correction. Any definitions expressly set forth herein for terms contained in such claims shall govern the meaning of such terms as used in the claims. Hence no limitation element property feature advantage or attribute that is not expressly recited in a claim should limit the scope of such claim in any way. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense.

