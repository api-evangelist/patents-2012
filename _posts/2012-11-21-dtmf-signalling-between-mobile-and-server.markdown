---

title: DTMF signalling between mobile and server
abstract: In a method of processing an incoming sequence of one or more DTMF tones at a mobile device, the sequence is decoded to thereby identify any encoded message. Where the decoding does not identify a message, at least applying an error correction algorithm to the sequence to identify a message. Where the algorithm fails to correct the sequence, the sequence is compared to messages currently expected by the mobile device. If a message is not identified, a negative acknowledgement message may be sent. At a server, upon receipt of a negative acknowledgement message, it is determined if a message was sent to the mobile device in a previous pre-determined time window. If so, the message is re-sent. The server repeatedly sends certain messages to a mobile device until an acknowledgement message indicating receipt of the message by the mobile device is received.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08606256&OS=08606256&RS=08606256
owner: BlackBerry Limited
number: 08606256
owner_city: Waterloo
owner_country: US
publication_date: 20121121
---
This application is a divisional of U.S. application Ser. No. 12 693 055 filed Jan. 25 2010 the contents of which are incorporated herein by reference.

Many cellular devices today are capable of processing both voice calls and internet computer data. These devices are commonly referred to as smartphones . With the advent of Voice over IP VoIP technology it has become possible to deliver voice calls over IP networks or over a combination of IP networks and the public switched telephone network PSTN rather than solely over the PSTN as was conventional.

In some systems voice call services are provided via connection between mobile devices to an enterprise server. These systems may include a suite of call setup features and in call features such as those accessible to a PBX connected desk phone. These features may be implemented by way of a signaling protocol between the mobile devices and the server. For example a request to invoke a particular feature by a mobile device may be encoded into a signal transmitted by the mobile device to the server. Typically signals transmitted between the mobile devices and a server are transmitted over the data channel. However the data channel may sometimes be unavailable for various reasons.

Therefore signals transmitted between the mobile devices and a server may be transmitted over the voice channel in DTMF. However DTMF is not a reliable and efficient data transmission mechanism in general so there is a need for improved signaling between mobile devices and the voice mobility server.

In one aspect the present application provides a method of processing an incoming sequence of one or more DTMF tones at a mobile communications device. The method includes decoding the sequence to identify any message encoded by the sequence where the decoding does not identify a message encoded by a given incoming sequence at least applying an error correction algorithm to the incoming sequence to identify a message from the given incoming sequence. The method further includes where the error correction algorithm fails to correct comparing the given incoming sequence to messages currently expected by the mobile communications device.

In another aspect the present application provides a method at a server of communicating with a mobile communications device. The method includes upon receipt of an indicator indicating receipt by the mobile communications device of an unrecognized message determining if a first message was sent to the mobile communications device in a previous pre determined window of time and re sending the first message if the determining determines that the second message was sent to the mobile communications device in the previous pre determined window of time.

In yet another aspect the present application provides a method of voice call handling at a mobile communications device. The method includes receiving over a voice connection at least one received tone where each of the at least one received tone comprises a dual tone multi frequency DTMF signal decoding the at least one received tone to identify a message and where the message is a call answered message sending at least one reply tone the at least one reply tone encoding an acknowledgement message.

In yet another aspect the present application provides a method of voice call handling at a mobile communications device. The method includes receiving a signal from a server extracting a sequence of DTMF tones from the received signal and identifying a message mapped by the sequence if the sequence maps uniquely to a message. The method further includes where the sequence does not map to any message applying an error correction algorithm to the sequence to produce a corrected sequence and identifying a message mapped by the corrected sequence. The mobile sends a negative acknowledgement message to the server if no message is identified.

Mobile devices implementing and computer readable media containing instructions which when executed implement the disclosed methods are provided.

Other aspects of the present application will be apparent to those of ordinary skill in the art from a review of the following detailed description in conjunction with the drawings.

Embodiments of the present application are not limited to any particular operating system mobile device architecture server architecture or computer programming language.

The present application relates to the control and management of communications. Although reference may be made to calls in the description of example embodiments below it will be appreciated that the described systems and methods are applicable to session based communications in general and not limited to voice calls. It will also be appreciated that the systems and methods may not be limited to sessions and may be applicable to messaging based communications in some embodiments.

Reference is now made to which shows in block diagram form an example system generally designated for the control and management of communications. The system includes an enterprise or business system which in many embodiments includes a local area network LAN . In the description below the enterprise or business system may be referred to as an enterprise network . It will be appreciated that the enterprise network may include more than one network and may be located in multiple geographic areas in some embodiments.

The enterprise network may be connected often through a firewall to a wide area network WAN such as the Internet. The enterprise network may also be connected to a public switched telephone network PSTN via direct inward dialing DID trunks or primary rate interface PRI trunks.

The enterprise network may also communicate with a public land mobile network PLMN which may also be referred to as a wireless wide area network WWAN or in some cases a cellular network. The connection with the PLMN may be made via a relay as known in the art.

The enterprise network may also provide a wireless local area network WLAN featuring wireless access points. Other WLANs may exist outside the enterprise network . For example WLAN may be connected to WAN .

The system may include a number of enterprise associated mobile devices only one shown . The mobile devices may include devices equipped for cellular communication through the PLMN mobile devices equipped for Wi Fi communications over one of the WLANs or dual mode devices capable of both cellular and WLAN communications. WLANs may be configured in accordance with one of the IEEE 802.11 specifications.

It will be understood that the mobile devices include one or more radio transceivers and associated processing hardware and software to enable wireless communications with the PLMN and or one of the WLANs . In various embodiments the PLMN and mobile devices may be configured to operate in compliance with any one or more of a number of wireless protocols including GSM GPRS CDMA EDGE UMTS EvDO HSPA 3GPP or a variety of others. It will be appreciated that the mobile device may roam within the PLMN and across PLMNs in known manner as the user moves. In some instances the dual mode mobile devices and or the enterprise network are configured to facilitate roaming between the PLMN and a WLAN and are thus capable of seamlessly transferring sessions such as voice calls from a connection with the cellular interface of the dual mode device to the WLAN interface of the dual mode device and vice versa.

The enterprise network typically includes a number of networked servers computers and other devices. For example the enterprise network may connect one or more desktop or laptop computers one shown . The connection may be wired or wireless in some embodiments. The enterprise network may also connect to one or more digital telephone sets one shown .

The enterprise network may include one or more mail servers such as mail server for coordinating the transmission storage and receipt of electronic messages for client devices operating within the enterprise network . Typical mail servers include the Microsoft Exchange Server and the IBM Lotus Domino server. Each user within the enterprise typically has at least one user account within the enterprise network . Associated with each user account is message address information such as an e mail address. Messages addressed to a user message address are stored on the enterprise network in the mail server . The messages may be retrieved by the user using a messaging application such as an e mail client application. The messaging application may be operating on a user s computer connected to the enterprise network within the enterprise. In some embodiments the user may be permitted to access stored messages using a remote computer for example at another location via the WAN using a VPN connection. Using the messaging application the user may also compose and send messages addressed to others within or outside the enterprise network . The messaging application causes the mail server to send a composed message to the addressee often via the WAN .

The relay serves to route messages received over the PLMN from the mobile device to the corresponding enterprise network . The relay also pushes messages from the enterprise network to the mobile device via the PLMN .

The enterprise network also includes an enterprise server . Together with the relay the enterprise server functions to redirect or relay incoming e mail messages addressed to a user s e mail address within the enterprise network to the user s mobile device and to relay incoming e mail messages composed and sent via the mobile device out to the intended recipients within the WAN or elsewhere. The enterprise server and relay together facilitate push e mail service for the mobile device enabling the user to send and receive e mail messages using the mobile device as though the user were connected to an e mail client within the enterprise network using the user s enterprise related e mail address for example on computer .

As is typical in many enterprises the enterprise network includes a Private Branch eXchange although in various embodiments the PBX may be a standard PBX or an IP PBX for simplicity the description below uses the term PBX to refer to both having a connection with the PSTN for routing incoming and outgoing voice calls for the enterprise. The PBX is connected to the PSTN via DID trunks or PRI trunks for example. The PBX may use ISDN signaling protocols for setting up and tearing down circuit switched connections through the PSTN and related signaling and communications. In some embodiments the PBX may be connected to one or more conventional analog telephones . The PBX is also connected to the enterprise network and through it to telephone terminal devices such as digital telephone sets softphones operating on computers etc. Within the enterprise each individual may have an associated extension number sometimes referred to as a PNP private numbering plan or direct dial phone number. Calls outgoing from the PBX to the PSTN or incoming from the PSTN to the PBX are typically circuit switched calls. Within the enterprise e.g. between the PBX and terminal devices voice calls are often packet switched calls for example Voice over IP VoIP calls.

The enterprise network may further include a Service Management Platform SMP for performing some aspects of messaging or session control like call control and advanced call processing features. The SMP may in some cases also perform some media handling. Collectively the SMP and PBX may be referred to as the enterprise communications platform generally designated . It will be appreciated that the enterprise communications platform and in particular the SMP is implemented on one or more servers having suitable communications interfaces for connecting to and communicating with the PBX and or DID PRI trunks. Although the SMP may be implemented on a stand alone server it will be appreciated that it may be implemented into an existing control agent server as a logical software component. As will be described below the SMP may be implemented as a multi layer platform.

The enterprise communications platform implements the switching to connect session legs and may provide the conversion between for example a circuit switched call and a VoIP call or to connect legs of other media sessions. In some embodiments in the context of voice calls the enterprise communications platform provides a number of additional functions including automated attendant interactive voice response call forwarding voice mail etc. It may also implement certain usage restrictions on enterprise users such as blocking international calls or 1 900 calls. In many embodiments Session Initiation Protocol SIP may be used to set up manage and terminate media sessions for voice calls. Other protocols may also be employed by the enterprise communications platform for example Web Services Computer Telephony Integration CTI protocol Session Initiation Protocol for Instant Messaging and Presence Leveraging Extensions SIMPLE and various custom Application Programming Interfaces APIs as will be described in greater detail below.

One of the functions of the enterprise communications platform is to extend the features of enterprise telephony to the mobile devices . For example the enterprise communications platform may allow the mobile device to perform functions akin to those normally available on a standard office telephone such as the digital telephone set or analog telephone set . Example features may include direct extension dialing enterprise voice mail conferencing call transfer call park etc.

Reference is now made to which show example embodiments of the enterprise communications system . Again although references are made below to calls or call centric features it will be appreciated that the architectures and systems depicted and described are applicable to session based communications in general and in some instances to messaging based communications.

In this embodiment the SMP assumes control over both call processing and the media itself. This architecture may be referred to as First Party Call Control . Many of the media handling functions normally implemented by the PBX are handled by the SMP in this architecture. Incoming calls addressed to any extension or direct dial number within the enterprise for example are always first routed to the SMP . Thereafter a call leg is established from the SMP to the called party within the enterprise and the two legs are bridged. Accordingly the SMP includes a digital trunk interface and a digital signal processing DSP conferencing bridge . The DSP conferencing bridge performs the bridging of calls for implementation of various call features such as conferencing call transfer etc. The digital trunk interface may be implemented as a plurality of telephonic cards e.g. Intel Dialogic cards interconnected by a bus and operating under the control of a processor. The digital trunk interface may also be partly implemented using a processor module such as for example a Host Media Processing HMP processor.

The SMP may include various scripts for managing call processing. The scripts are implemented as software modules routines functions etc. stored in non volatile memory and executed by the processor of the SMP . The scripts may implement call flow logic business logic user preferences call service processes and various feature applications.

The call control server is coupled to the PBX for example through the LAN enabling packet based communications and more specifically IP based communications. In one embodiment communications between the PBX and the call control server are carried out in accordance with SIP. In other words the call control server uses SIP based communications to manage the set up tear down and control of media handled by the PBX . In one example embodiment the call control server may employ a communications protocol conforming to the ECMA 269 or ECMA 323 standards for Computer Supported Telecommunications Applications CSTA .

The SIP server interacts with the media server using SIP based media handling commands. For example the SIP server and media server may communicate using Media Server Markup Language MSML as defined in IETF document Saleem A. Media Server Markup Language Internet Draft draft saleem msml 07 Aug. 7 2008. The media server may be configured to perform Host Media Processing HMP .

Other architectures or configurations for the enterprise communications system will be appreciated by those ordinarily skilled in the art.

Reference is now made to which shows another embodiment of the enterprise communications system with a Third Party Call Control architecture. In this embodiment the SMP is a multi layer platform that includes a protocol layer a services layer and an application layer . The protocol layer includes a plurality of interface protocols configured for enabling operation of corresponding applications in the application layer . The services layer includes a plurality of services that can be leveraged by the interface protocols to create richer applications. Finally the application layer includes a plurality of applications that are exposed out to the communication devices and that leverage corresponding ones of the services and interface protocols for enabling the applications.

Specifically the protocol layer preferably includes protocols which allow media to be controlled separate from data. For example the protocol layer can include among other things a Session Initiation Protocol or SIP a Web Services protocol an Application Programming Interface or API a Computer Telephony Integration protocol or CTI and a Session Initiation Protocol for Instant Messaging and Presence Leveraging Extensions or SIMPLE protocol . It is contemplated that the interface protocols are plug ins that can interface directly with corresponding servers in the enterprise network which will be further described below.

For the purposes of this disclosure SIP will be utilized although it is appreciated that the system can operate using the above disclosed or additional protocols. As known by those of ordinary skill in the art SIP is the IETF Internet Engineering Task Force standard for multimedia session management and more specifically is an application layer control protocol for establishing maintaining modifying and terminating multimedia sessions between two or more endpoints. As further known by those of ordinary skill in the art the SIP protocol includes two interfaces for signaling SIP Trunk hereinafter referred to as SIP T and SIP Line hereinafter referred to as SIP L . Specifically the SIP T interface is utilized when the endpoint is a non specific entity or not registered i.e. when communicating between two network entities . In contrast the SIP L interface is utilized when the endpoint is registered i.e. when dialing to a specific extension . The specific operation of the system utilizing SIP will be described in further detail below.

The SMP also includes a plurality of enablers among other things a VoIP enabler a Fixed Mobile Convergence or FMC enabler a conference services enabler a presence enabler and an Instant Messaging or IM enabler . Each of the enablers are used by corresponding services in the services layer that combine one or more of the enablers. Each of the applications in the application layer is then combined with one or more of the services to perform the desired application. For example a phone call service may use the VoIP or PBX enabler and an emergency response application may use the phone call service an Instant Messenger service a video call service and email service and or a conference service.

The application layer may include a conference services application that together with the conference services enabler enables multiple communication devices including desk telephones and personal computers to participate in a conference call through use of a centralized conference server . As seen in the conference server is provided in the enterprise network and is in communication with the conference services enabler preferably through the SIP protocol although it is recognized that additional protocols that control media separate from data may be appropriate such as the Web Services protocol or the CTI protocol . As will be described in further detail below the conference call server is configured for directing media and data streams to and from one or more communication devices i.e. mobile devices telephones and computers .

Turning now to the general operation of the system using SIP as the signaling protocol will be discussed although it is recognized that the present system is not limited to the processes discussed herein. The signaling descriptions that follow are based on Third Party Call Control architecture such as that illustrated in or . It will be appreciated that similar but slightly modified signaling may be used in a First Party Call Control architecture wherein the PBX will pass media through to the SMP for direct media handling by the SMP . Variations in the signaling to adapt to various architectures will be appreciated by those ordinarily skilled in the art.

The SMP then sets up the outgoing call leg to the destination. It does this by sending an invite over SIP L to the PBX with the destination number of the target phone block . SIP L is used so that the call can be correctly attributed to the individual within the organization within any call records that are being maintained by the PBX . When the invite is received the PBX dials the destination number to the target phone block and the target phone answers the call block . When the target phone is answered the PBX sends a 200 OK signal to the SMP indicating that the target phone is ready to receive data block . The SMP then sends an invite over SIP T to the PBX and shuffles the SDP Session Description Protocol as known to those of ordinary skill in the art to connect the call legs block . When the call legs are connected the PBX sends a second 200 OK signal to the SMP block and the users of the device and target phone can communicate with each other.

Note that between the cellular call leg being established and the outgoing call leg being answered the mobile user hears ringing tones. These ringing tones may be provided by the PBX using the presentation of early media from the outgoing call leg or they may be generated locally on the device if early media is not available. In the latter case it will be necessary to localize the ringing tone to match the tone normally heard with a call through the PBX .

The above description is known as a mobile initiated call because the SMP provides the mobile device with the DNIS number into which the mobile device has called. Alternatively the mobile originated call could be PBX initiated as shown in . Specifically in a PBX initiated call upon receipt of the mobile originated call request block the SMP confirms receipt of the call to the mobile device with an ANI number block which the mobile device uses to identify the incoming call from the PBX . The PBX then sends an invite over SIP T to the PBX with the cellular number of the device and the ANI number that is attached to the outgoing call block . Upon receipt of the invite the PBX makes a cellular call to the device block which is answered by the device block . The device checks the ANI number in the incoming call to confirm if the number is actually from the PBX . If the ANI number is stripped for any particular reason then the device may be configured to answer the call as a regular cellular call or it may reject the call as unknown. When the device answers the PBX initiated call the PBX sends a 200 OK signal to the SMP indicating that the call leg to the device is established block .

In response the SMP sends an invite over SIP L with the destination number of the target phone to the PBX block . When the invite is received at the PBX the PBX dials the destination number to the target phone block the target phone picks up the call block and a 200 OK signal is sent from the PBX to the SMP block indicating that the target phone is also ready to receive data. In response to the 200 OK the SMP sends an invite to the PBX shuffling the SDP to connect the call legs block . Finally when the call legs are connected the PBX sends a second 200 OK signal to the SMP and the users of the device and target phone are able to communicate with each other.

In both instances the SMP is performing third party call control of the two call legs the PBX remaining in control of the call. The decision of whether to proceed with a mobile initiated call or a PBX initiated call can be set by policy. Specifically the option to select either mobile initiated or PBX initiated calls is a feature provided in the SMP and an administrator for the enterprise network can determine which setting to use. For example in some cases it may be more cost effective for the corporation to utilize PBX initiated calls rather than mobile initiated calls and vice versa. However it is appreciated that the system is not limited to the above processes.

In response to the invite the SMP sends a call request with the DNIS number and source details to the device block which is confirmed to the SMP block . In addition to confirming the call the mobile device sends a cellular call to the DNIS number at the PBX block . Again as the DNIS number is routed in the dialing plans to the SMP upon receipt of the cellular call the PBX sends an invite over SIP T to the SMP with the DNIS number block . In response to the invite a 200 OK signal is sent over SIP T from the SMP to the PBX acknowledging that the call leg to the mobile device is established block . Finally the initial invite block is acknowledged with the 200 OK signal with the cellular SDP at which point the call legs are joined and the target phone and device can communicate with each other on the call.

The diagram shown in illustrates a mobile initiated call because as discussed above with respect to the SMP presents the mobile device with the DNIS number at the PBX into which to call. However it is also possible to employ a PBX initiated mobile terminated call as shown in where the PBX sends an incoming call to the device with the ANI number of the target phone .

Specifically similar to the mobile initiated call described above and shown in the target phone sends an incoming call to the destination number of the device which is received at the PBX block . Upon receipt of the call the PBX sends an invite over SIP L to the SMP block with the source number of the target phone . In response to the invite the SMP sends a call request with the source number to the device block with the ANI number the device should expect in the incoming call the call request being confirmed by the device block . At this point in the PBX initiated call the SMP sends an invite over SIP T to the PBX with the cellular number and ANI number to use block prompting the PBX to make a cellular call to the device with the ANI number block prompting the device to ring. The device answers the call block and a 200 OK signal is sent from the PBX to the SMP acknowledging that the cellular call leg to the device is established block . In response a 200 OK signal is also sent from the SMP to the PBX acknowledging that the call leg to the target phone is also established block . The SMP shuffles the SDP to connect the call legs the call legs are joined and the target phone and device can communicate with each other on the call.

As discussed above with respect to the SMP remains in control of the signaling between the target phone and the mobile device in both the mobile initiated and PBX initiated calls. Again the decision to proceed with a mobile initiated call or a PBX initiated call is based on policy and may be set by a system administrator. In some cases it may be more efficient or cost effective for the administrator to decide that PBX initiated calls should be used and in other cases it may be more efficient or cost effective for mobile initiated calls to be utilized. As these policy decisions may vary by organization and are not imperative to the scope of the present application they will not be discussed in further detail.

As explained previously with reference to the enterprise communications platform may provide mobile voice services to mobile devices so as to allow a given mobile device to act in the same manner as a PBX IP PBX connected desk phone e.g. telephone set . Specifically the enterprise communications platform may provide a suite of call setup features and in call features much like the features available to a PBX IP PBX connected desk phone. These features may be implemented in a message exchange protocol between mobile devices and server . Specifically and as will be more fully explained below a user originated request for a particular feature may initiate a message exchange sequence between the user s mobile device and the server . These messages may be encoded by modulating a signal in accordance with a data modulation technique as will be understood by those of ordinary skill in the art. The resulting data signal may then be transmitted by the mobile device to the server and vice versa via PSTN PLMN or WAN or a combination thereof.

In an exemplary embodiment of system dual tone multi frequency DTMF signaling is used in the exemplary message exchange protocol for message exchange between mobile devices and server . As may be appreciated by a person of ordinary skill in the art DTMF signaling operates as follows each symbol in the set 0 9 A D is laid out in a 4 by 4 matrix and a particular frequency associated with each symbol in the set. The DTMF matrix is provided below 

Specifically each symbol in the DTMF symbol set is represented by a combination of two frequencies. For example to represent the symbol 1 a 697 Hz sinusoidal wave is combined with a 1209 Hz sinusoidal wave. The resulting combined wave may be audible as a DTMF tone . To transmit the symbol 1 the combined wave or DTMF tone associated with the symbol 1 may be transmitted to the intended recipient over the voice channel. The recipient may then decode the received wave or DTMF tone to determine which symbol was sent. In this disclosure the terms DTMF symbol and DTMF tone may be used interchangeably. However in certain contexts the term DTMF symbol may be used to specifically refer to one of DTMF symbols 0 9 A D and the term DTMF tone to refer to the audible representation of a particular DTMF symbol.

The universe of messages in the exemplary exchange protocol may be stored in two tables. The first table may be a device to server message table storing the universe of messages sent by a mobile device to server i.e. possible messages mobile device could send to server . The second table may be a server to device message table storing the universe of message sent by server to mobile devices i.e. possible messages server could send to device .

Table an exemplary device to server message table contains an exemplary list of sixteen possible in call feature control messages that may be sent from a mobile device to the server during an active voice call. Table may be stored in a memory not shown of server . Each of rows and lists an exemplary mapping of control messages to DTMF sequences. For example row specifies that the HOLD CALL control message is mapped to the DTMF sequence C3C . The HOLD CALL message may for example indicate that a user wishes to put an active voice call on hold. To send a HOLD CALL message to server mobile device may send a sequence of three DTMF tones DTMF tone sequence each associated with the DTMF symbols C 3 and C respectively to server in a conventional manner. Upon receipt server may decode the received DTMF tone sequence in a conventional manner to determine that the symbols C 3 and C were sent by the mobile device . Further server may identify that the symbol sequence C3C is mapped to the HOLD CALL message and may thereby determine that that particular mobile device or more accurately the user of that particular mobile device is requesting that the active voice call be put on hold. Server may then take further action as appropriate.

Table an exemplary server to device message table contains an exemplary list of nineteen possible in call feature control messages that may be sent from server to a mobile device during an active voice call. Table may be stored in a memory not shown of mobile device . Each of rows and specifies an exemplary mapping of control messages to DTMF sequences. For example as specified in row the TARGET RINGING control message is mapped to the DTMF sequence C . This message may indicate for example that the called party device is ringing. To send the TARGET RINGING message to a mobile device server may send the tone followed by the C tone to the mobile device in sequence in a conventional manner. Upon receipt the mobile device may decode the received DTMF tone sequence in a conventional manner to determine that the symbols and C were sent by server . Mobile device may further identify that the symbol sequence C is mapped to the TARGET RINGING message and may take further action as appropriate.

Moreover an indicator may be kept in server to device message table indicating that receipt of a particular message should be acknowledged. In particular a value of 1 in the column entitled ACK for a particular message may indicate that receipt of that particular message should be acknowledged. Thus the value of 1 in the ACK column of row indicates that receipt of a TARGET ANSWERED message by mobile device should be acknowledged by sending DTMF tone D to server as further described below . Conversely the values of 0 in the ACK column for all other rows of table indicates that receipt of any one of the other messages need not be acknowledged by mobile device .

Table lists two special non control messages that may be sent by a mobile device to server . Table may be stored in the memory of mobile device . Specifically table specifies that an ACK acknowledge message is mapped to a single DTMF tone D and a NACK negative acknowledgement message is mapped to a single DTMF tone B . The functions of the ACK and NACK messages will become apparent below.

It may be noted that each exemplary control message in tables and consists of a sequence of two to four DTMF tones. The mapping of each control message in the universe of all control messages to a particular sequence of DTMF tones may of course be arbitrary. However as will become apparent strategic mapping of particular sequences of DTMF tones to particular control messages and strategic selection of particular DTMF tones in certain sequences may be advantageous. Notably such strategic mapping may increase the reliability of DTMF signaling between mobile devices and voice mobile server in system as detailed below.

DTMF has traditionally been regarded as an unreliable data transmission mechanism. For example DTMF tones can be lost or corrupted in transmission. DTMF tone detectors may sometimes detect false DTMF tones. Additionally it takes approximately 100 ms to send a single DTMF tone therefore DTMF is a relatively slow method of communication.

Moreover the design of enterprise communications platform further adds to the challenges of using DTMF signaling in system . For example enterprise communications platform is a real time system and thus requires virtually instant communication between server and a mobile device . Thus keeping the number of DTMF tones sent per message to as few as possible and limiting the number of instances of re transmission of messages may be desirable because for example long transmission times may result in user perception of sluggish system response times . Second since DTMF tones are transmitted over the voice channel in the exemplary embodiment and are within human audible range a multitude of DTMF tones may degrade user experience since a user would hear these tones in his or her mobile device earpiece. Thus for this reason also it may be desirable to reduce the number of DTMF tones exchanged between the mobile device and server .

Accordingly a method for increasing reliability of DTMF signaling between mobile device and server is provided which method may minimize signaling. In overview the method includes mapping certain control messages to DTMF tone sequences such that even if only a part of a complete DTMF tone sequence is received e.g. due to transmission error or decoding errors the recipient mobile device may nevertheless identify the intended message. The method may further include repeated transmission by server of certain very important control messages until receipt is acknowledged by an intended recipient mobile device . The method may further include transmission of a negative acknowledgement message by mobile device to server upon receipt of a DTMF tone sequence that it cannot identify as a recognized message.

More specifically the exemplary embodiment includes redundantly coding certain messages so that an error correction algorithm can be applied to a received sequence of tones to recover the sequence of tones that were actually sent. For example the CALL DISCONNECTED row and SECOND CALL DISCONNECTED row messages listed in table map to DTMF sequences 88C and 99C respectively. Notably no other control message that may be sent by server to mobile device as specified in table maps to 88C and 99C or maps to any two sequence sub sequence of 88C and 99C . Further the only single signal that does not uniquely map to 88C or 99C is the signal C . Thus conveniently even if mobile device does not receive the complete sequence of tones 88C but only receives a sub sequence of those tones e.g. 8 88 8C it may be able to identify the received tones as the CALL DISCONNECTED message. Similarly if mobile device receives a sub sequence of the tones 99C it may be able to identify the received tones as the SECOND CALL DISCONNECTED message.

As will be noted from tables and not all messages are redundantly coded. In these instances contextual error correction may be performed. For example the CALL HELD FAILED table row is not redundantly coded. That is if a mobile device were to receive the sequence of tones 2C it would not necessarily be able to uniquely identify a message because the DTMF tones 2C is a sub sequence of DTMF tone sequences for several other messages namely CALL FAILED row TARGET NOT FOUND row TARGET NOT AVAILABLE row CALL RESUME FAILED row and ATTND TRANSFER SUCCESS row . However in this scenario mobile device may still be able to deduce what sequence of tones was actually sent by server by comparing the received sequence of tones to messages currently expected by mobile device . For example if mobile device had previously sent a HOLD CALL control message table row to server it may expect to receive in reply a CALL HELD or CALL HELD FAILED message. Upon sending a particular control message to server it may be determined if server may be expected to reply to that message with a reply message. If so device may store a table of expected reply messages for a pre determined time e.g. 10 minutes but of course other time periods could be used .

Referring to table the CALL HELD message is mapped to the DTMF sequence 31C and the CALL HELD FAILED message is mapped to the DTMF sequence 32C . Therefore since the received sequence of tones detected by mobile device 2C is a sub sequence of the sequence 32C but not of the sequence 31C it may be deduced that voice mobile server actually sent the sequence 32C thus identifying that voice mobile server sent a CALL HELD FAILED message.

For some features it may be desired that receipt of control messages associated with those features be assured. The TARGET ANSWERED message table row is an example of such a message. This message may be sent by server to mobile device to indicate that the called party i.e. the target is connected. In particular voice mobility server may be designed to refrain from sending any voice data signals originating from the called party until the calling party i.e. mobile device acknowledges receipt of the TARGET ANSWERED message. Absent this requirement it is possible that the initial part of the called party s conversation could be dropped because mobile device is not for example in a proper state to receive. Consequently and in accordance with the exemplary embodiment of the present disclosure receipt of a TARGET ANSWERED message should be acknowledged by the recipient i.e. mobile device .

Moreover because the TARGET ANSWERED message is mapped to a single DTMF tone i.e. B in the event that the tone is dropped during transmission the intended recipient mobile device may have no way of knowing that server had sent a message. Even further in the event the tone is corrupted in transmission but nevertheless received by mobile device e.g. as DTMF tone C rather than tone B mobile device may not be able to deduce which message was actually sent. Thus a mechanism for ensuring proper receipt of the message is required. The ACK message may be a suitable mechanism. In exemplary table row specifies that the ACK message is mapped to DTMF sequence D . Therefore to send an ACK message mobile device may send the D DTMF tone to server .

In some cases mobile device may be unable to identify any recognized messages from a sequence of received DTMF tones due to for example errors or corruption of the DTMF tones in transmission. For example if the 1 tone in the sequence 1C mapping to the TARGET ALERTING message Table row was dropped in transmission from server to mobile device mobile device may only receive the C tone. However the C tone is a part of many other possible server to device messages e.g. CALL FAILED 22C row TARGET NOT FOUND 21C row . Thus mobile device may have no way in the event the error correction mechanisms previously described fail to identify a message of ascertaining what sequence of tones server actually transmitted. In such instances mobile device may send a NACK negative acknowledgement message to server . In exemplary table row specifies that the NACK message is mapped to DTMF sequence B . Therefore to send a NACK message mobile device may send the B DTMF tone to server .

In operation and with reference to flow diagram S upon receipt of a sequence of one or more DTMF tones mobile communications device may decode the sequence of tones using for example a conventional DTMF signal decoder component of mobile device not illustrated S . Mobile device may determine whether the sequence of tones encode a message S by for example comparing the tones to tones listed in server to device message table . Table may be stored in a memory of mobile device as previously described.

If it is determined that the sequence of tones identify a message the identified message i.e. the sequence of tones match a sequence of tones mapped to a particular message listed in server to device message table communications device may subsequently determine if the identified message requires acknowledgement S by for example determining if the ACK indicator for the identified message has been set to 1 in table . If the identified message requires acknowledgement mobile device may send an ACK message to server in the manner previously described S .

However if no message is identified at S mobile device may attempt to identify a probable message S using an error correction mechanism further described in conjunction with below. If following application of the error correction mechanism no message is identified S mobile device may indicate an error by for example sending a NACK message to server S in the manner previously described. If following application of the error correction mechanism a message is identified S mobile device may subsequently determine if the identified message requires acknowledgement and if it does acknowledge the message S S .

Operation of the error correction mechanism S will now be described in conjunction with . To identify a candidate message mobile device may determine if the received tones map uniquely to a message i.e. if the received tones are a sub sequence of tones mapping to a redundantly coded message in the manner previously described S . If it does then the received tones may be identified as the candidate message S and further operation of mobile device may proceed on the assumption that the message actually sent by server was the candidate message.

If the received tones do not map uniquely to any messages i.e. if the received tones are a sub sequence of more than one message mobile device may determine if it is expecting any particular reply messages from server . To do so mobile device may examine messages stored in the expected reply message table S . If one or more candidate reply messages are currently expected i.e. there is at least one message stored in the expected reply message table mobile device may determine if the received DTMF sequence maps uniquely to one of the candidate reply messages S in the manner previously described. If it does then mobile device may identify the received tones as the candidate message S . Subsequent operation of mobile device may proceed on the assumption that the message actually sent by server was the candidate message. However if the received tones do not uniquely map to any expected reply messages mobile device may be unable to identify the message S . Similarly if the received tones do not map uniquely to any messages and no reply messages are currently expected from server S then mobile device may be unable to identify any message S i.e. may be unable to map the received tone sequence to any messages .

Operation of the exemplary embodiment from the server perspective will now be described in conjunction with .

Flow diagram depicts the simplest case in which server sends a redundantly coded message e.g. CALL DISCONNECTED row or SECOND CALL DISCONNECTED row to mobile device S . Receipt of the message by mobile device may be assumed. Moreover even if a transmission error occurs resulting in mobile device receiving only a sub sequence of the tones sent by server conveniently mobile device may still identify the intended message in the manner previously discussed.

Flow diagram depicts operation of server upon receipt of a NACK message row from a mobile device which it serves. Upon receipt of a NACK message S server may determine if it sent a message to the mobile device which sent the NACK message in a past window of time S e.g. past 1 minute of course windows of time other than 1 minute could be employed If it has server may resend the message S because for example the DTMF tones may have been corrupted in transmission in such a way that mobile device was unable to identify a candidate message in the manner previously described .

Flow diagram depicts operation of server to send a server message to mobile device that requires an acknowledgement of receipt such as exemplary TARGET ANSWERED message row . Specifically server may send the TARGET ANSWERED message to mobile device S . It may subsequently check whether it has received an ACK message row from mobile device S . If an ACK message is received from mobile device acknowledging receipt of the TARGET ANSWERED message operation may end. However if no ACK message has been received server may re send the TARGET ANSWERED message until it receives an ACK from mobile device .

Exemplary interactions between server and a mobile device in accordance with the present disclosure are provided in . Specifically is a signal diagram showing a call request from mobile device to server block . The call request may be of the form described in and may in particular include the telephone number of the target i.e. called party not shown . Server specifically SMP in conjunction with PBX FIG. A B may set up the connection with the target party in the manner previously described. Upon receiving an indication that the called party has answered e.g. Target Phone Answers block or Answers block FIG. A B server may send a TARGET ANSWERED message to mobile device block . Mobile device may determine that the TARGET ANSWERED message must be acknowledged and may accordingly send an ACK message back to server block .

When mobile device receives an unknown message block it may send a NACK message to server block thus prompting server to check whether it had sent a message to mobile device in a past window of time and to re send the message if required.

Thus as may now be appreciated by implementing a message exchange protocol between server and mobile devices using DTMF signaling over the voice channel server and mobile devices may communicate even when the data channel is unavailable. To account for the fact that DTMF signaling over the voice channel can be unreliable acknowledge and negative acknowledgement mechanisms have been introduced into system . Additionally error correction algorithms such as the contextual error correction and redundant coding may be used to correct some transmission errors thereby reducing the number of instances requiring re transmission of messages.

While not described in detail it will be understood that the disclosed methods exemplary message exchange protocol and components thereof e.g. the message tables may be implemented in software using programming languages such as JAVA C etc. or in a combination of hardware and software. More specifically computer readable medium and computer readable medium may store executable instructions which when executed by a processor not shown of mobile device or server respectively cause mobile device and server to perform the disclosed methods.

Furthermore it may be understood that message tables and need not necessarily be stored as separate tables nor in the locations described above. For example in an another embodiment message tables and may be combined into one table and stored in a location accessible to server and mobile devices over one or a combination of PSTN WAN and PLMN . Moreover the message table s may be stored in the form of a flat file or in a conventional database which may be queried by server and mobile devices .

Even further redundant codes may be selected so that application of certain conventional error correction algorithms known to those of ordinary skill in the art may be applied.

Certain other adaptations and modifications of the described embodiments can be made. Therefore the above discussed embodiments are considered to be illustrative and not restrictive.

