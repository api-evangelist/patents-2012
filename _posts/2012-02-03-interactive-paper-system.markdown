---

title: Interactive paper system
abstract: A printer, scanner device and methods for using same are described herein. A printer device may include a dedicated input that, when actuated, generates and sends a request to a computer for known data or a predetermined print job, e.g., schedule information from a personal information management (PIM) application. A scanner device may include another dedicated input that, when actuated, automatically scans a document fed to the device by the user and sends the scanned image to IM (or other) software on a computer, bypassing the need to manipulate the scanned image using scanner software. The device may be used with printed metapaper, which includes a barcode or other indicia identifying the metapaper and corresponds to a stored template image of the metapaper. When the metapaper is rescanned, the scan can be compared to the stored template information to identify changes and synchronize the changes with the IM software.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08797579&OS=08797579&RS=08797579
owner: Microsoft Corporation
number: 08797579
owner_city: Redmond
owner_country: US
publication_date: 20120203
---
This application is a divisional application of U.S. patent application Ser. No. 11 379 649 filed Apr. 21 2006 the entirety of which is hereby incorporated by reference herein for all purposes

Personal information management PIM software has improved considerably in recent years. People use PIM software everyday to manage email tasks calendars and schedule information and contacts among other information. Businesses rely heavily on PIM software as well to coordinate meetings communications assignments projects contact information etc. PIM software has become a centralized location in which individuals and businesses store more and more information.

PIM users often take their computers with them specifically to have access to this information. Sometimes it is not convenient for a user to take a computer to a location that the user might want to access data in the PIM software. In such instances users may print out the desired information by manually opening a PIM application on his or her computer selecting a data view that displays the desired information and then printing the data view e.g. by performing a File Print selection from a menu of the PIM application. While this provides the desired information such a process is tedious and often inconvenient for a user. For example in a family environment the family computer might be in a room in the family home that is used as an office or den. The user wanting the information might be in a hurry e.g. grabbing her keys and heading out of the house when she realizes that she forgot some important list or other data. The user is inconvenienced by having to go back to the room where the computer is located possibly boot up the computer launch the PIM application select or search for the desired data instruct the PIM application to print the data and then wait for the printout.

While the advent of wireless all in one printer scanner fax devices such as the PSC 2510 by Hewlett Packard Company of Palo Alto Calif. has reduced the number of peripheral devices that need to be attached to a computer the development of such devices has stagnated and there is no integration between such devices and PIM software to speed up data gathering and printing processes that are manually performed by users of these systems.

The following presents a simplified summary in order to provide a basic understanding of some aspects of the invention. This summary is not an extensive overview. It is not intended to identify key or critical elements of the invention or to delineate the scope of the invention. The following summary merely presents some concepts of the invention in a simplified form as a prelude to the more detailed description provided below.

According to a first aspect one or more computer readable media may store executable instructions for performing a method of managing printed data. The method may include receiving a print request to print a known view of a certain data. Template information corresponding to the print request is stored where the template information includes a template index or ID and template region information identifying a layout of one or more regions on a printed document to be printed based on the print request. A print job is generated based on the print request where the print job defines the printed document. The printed document may include a first indicia e.g. a barcode identifying the template index. The print job is sent to a printer for printing the printed document. The template may later be used for comparison to a scanned document to detect changes.

According to another aspect one or more computer readable media may store executable instructions for synchronizing data received from a scanned document. The synchronizing method may include extracting an ID indicia e.g. a barcode from a digital image of a scanned document querying a template database for template information corresponding to the ID indicia e.g. having an index identified by the barcode and comparing the digital image with template information returned by the query to identify on the scanned document a first handwritten annotation made subsequent to a time when the scanned document was printed.

Yet another aspect provides a method and computer readable media storing executable instructions for performing the method of creating an entry in an information management software application. The method may include extracting from a scanned document a first handwritten annotation determining a type of information corresponding to the first handwritten annotation and storing the first handwritten annotation in an information management software application as a description for an entry corresponding to the type of information. In variations of this aspect the method may further include extracting from the scanned document a second handwritten annotation identifying a date converting the second handwritten annotation to a date value identifying the date and storing the date value as being associated with the entry. Another variation may include extracting from the scanned document a third handwritten annotation identifying a time converting the third handwritten annotation to a time value identifying the time and storing the time value as being associated with the entry. In one example the type of information is an appointment the date identifies an appointment date the time identifies an appointment time and the first handwritten annotation describes the appointment. Thus the information management application may convert date and time annotations to data values while retaining the handwritten annotation to describe the entry itself.

In the following description of the various embodiments reference is made to the accompanying drawings which form a part hereof and in which is shown by way of illustration various embodiments in which features may be practiced. It is to be understood that other embodiments may be utilized and structural and functional modifications may be made.

Aspects are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with aspects of the invention include but are not limited to personal computers server computers portable and hand held devices such as personal digital assistants PDAs tablet PCs or laptop PCs multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Aspects of the invention may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Aspects of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

With reference to an illustrative system for implementing one or more aspects of the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus Advanced Graphics Port AGP bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up is typically stored in ROM . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation illustrates operating system application programs other program modules and program data .

The computer may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive is typically connected to the system bus through a non removable memory interface such as interface and magnetic disk drive and optical disk drive are typically connected to the system bus by a removable memory interface such as interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions data structures program modules and other data for the computer . In for example hard disk drive is illustrated as storing operating system application programs other program modules and program data . Note that these components can either be the same as or different from operating system application programs other program modules and program data . Operating system application programs other program modules and program data are given different numbers here to illustrate that at a minimum they are different copies. A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video adapter . Computer may also include a digitizer for use in conjunction with monitor to allow a user to provide input using a stylus input device . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a wired or wireless network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet. Computer may also connect to a WAN via the LAN . The modem which may be internal or external may be connected to the system bus via the user input interface or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. By way of example and not limitation illustrates remote application programs as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

One or more aspects of the invention may be embodied in computer executable instructions i.e. software such as in a notification manager software object routine or function collectively referred to herein as a notification manager stored in system memory or non volatile memory as application programs program modules and or program data . The software may alternatively be stored remotely such as on remote computer with remote application programs . Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types when executed by a processor in a computer or other device. The computer executable instructions may be stored on a computer readable medium such as a hard disk optical disk removable storage media solid state memory RAM etc. As will be appreciated by one of skill in the art the functionality of the program modules may be combined or distributed as desired in various embodiments. In addition the functionality may be embodied in whole or in part in firmware or hardware equivalents such as integrated circuits field programmable gate arrays FPGA and the like.

A programming interface or more simply interface may be viewed as any mechanism process or protocol for enabling one or more segment s of code to communicate with or access the functionality provided by one or more other segment s of code. Alternatively a programming interface may be viewed as one or more mechanism s method s function call s module s object s etc. of a component of a system capable of communicative coupling to one or more mechanism s method s function call s module s etc. of other component s . The term segment of code in the preceding sentence is intended to include one or more instructions or lines of code and includes e.g. code modules objects subroutines functions and so on regardless of the terminology applied or whether the code segments are separately compiled or whether the code segments are provided as source intermediate or object code whether the code segments are utilized in a runtime system or process or whether they are located on the same or different machines or distributed across multiple machines or whether the functionality represented by the segments of code are implemented wholly in software wholly in hardware or a combination of hardware and software. By way of example and not limitation terms such as application programming interface API entry point method function subroutine remote procedure call and component object model COM interface are encompassed within the definition of programming interface.

Aspects of such a programming interface may include the method whereby the first code segment transmits information where information is used in its broadest sense and includes data commands requests etc. to the second code segment the method whereby the second code segment receives the information and the structure sequence syntax organization schema timing and content of the information. In this regard the underlying transport medium itself may be unimportant to the operation of the interface whether the medium be wired or wireless or a combination of both as long as the information is transported in the manner defined by the interface. In certain situations information may not be passed in one or both directions in the conventional sense as the information transfer may be either via another mechanism e.g. information placed in a buffer file etc. separate from information flow between the code segments or non existent as when one code segment simply accesses functionality performed by a second code segment. Any or all of these aspects may be important in a given situation e.g. depending on whether the code segments are part of a system in a loosely coupled or tightly coupled configuration and so this list should be considered illustrative and non limiting.

This notion of a programming interface is known to those skilled in the art and is clear from the provided detailed description. Some illustrative implementations of a programming interface may also include factoring redefinition inline coding divorce rewriting to name a few. There are however other ways to implement a programming interface and unless expressly excluded these too are intended to be encompassed by the claims set forth at the end of this specification.

With further reference to various aspects described herein are directed to a system including a printer scanner device interconnected with a personal information management IM system executing on a data processing device such as computer . Device may include or take the place of or be used in addition to printer . As used herein an information manager IM application refers to an application designed to manage personal family group and or business information as well as communications. Examples of such software include personal information management IM applications such as but not limited to Outlook by Microsoft Corporation of Redmond Wash. Lotus Notes by IBM Corp. of Armonk N.Y. and GroupWise by Novell Inc. of Waltham Mass. Other information management applications may be used as well or instead and such applications are not limited to merely personal information management but may include family information management business information management group information management and the like. All such software is generically referred to herein as IM software or a IM application e.g. residing in computer memory and or in system memory respectively.

Device may include various functional components and subsystems operating under control of a central processing unit or microcontroller unit CPU MCU . Device may include a volatile memory e.g. RAM usable as runtime memory by CPU MCU and may also include nonvolatile memory e.g. flash or ROM storing the software executable by CPU MCU to control overall operation of device as described herein. Device may include a printer module or subsystem that prints on whatever media is fed through device e.g. paper photos transparencies etc. Printer module may further include a motor and motor driver that controls one or more print heads and print head control circuits of the device . Device may include a scanner module or subsystem to scan media into a digital image or format storable on device and or computer . Scanner module may include e.g. a linear CCD scanner and associated interface circuitry as well as a DC motor and motor driver the same or separate from that used for printer module to move the paper and or scan head as needed.

Device may include a video display such as an LCD screen. Other video output displays may alternatively be used. Device may also include an input module through which a user can provide input to device . Input system may include one or more physical buttons on the housing of device that have associated functions or may include one or more soft buttons associated with the display .

Device may further include an interface module through which device communicates with computer . Interface module may include a wired or wireless network interface and or USB and or parallel cable connections. Wireless virtual cable connections are also possible such as a Bluetooth connection to computer . Where interface module includes a wireless network interface e.g. an 802.11 or similar interface device may communicate via antenna with a wireless interface associated with computer . Wireless interface may include a wireless network adapter directly integrated within computer or may include a separate wireless device such as a wireless router wireless access point wireless bridge etc. Computer may execute a device driver corresponding to device which manages communications to and from device and directs communications as described herein.

With further reference to according to an illustrative aspect when a user presses input button corresponding to the print function device generates and sends a print request to computer to print predefined data and prints the data sent back by computer . In step device detects that a user actuated button which indicates a desire by the user to print predefined data e.g. his or her weekly schedule. In step device automatically generates and sends a print request via interface module to computer . The print request may include a code or identifier indicating the print request should be directed to IM software and that the print request is for the predefined data. For example the print request may be coded to correspond to a daily schedule of a default user of IM software . In step a device driver or equivalent service executing on computer analyzes the request and determines that the print request is directed to IM software based on the included code or identifier. In step IM software analyzes the print request based on the included code or identifier and determines that the print request is for the predefined data. In step IM software generates a print job based on the print request and sends the print job to device . For example IM software may generate a Weekly Schedule view and then print the Weekly Schedule view to the printer device corresponding to device . In step device prints the print job received from computer and IM software resulting in printout .

With further reference to according to an illustrative aspect when a user presses input button corresponding to the scan function device scans paper and sends data to computer representing the scanned image of paper . The view of illustrates device after scanning with paper in the paper output tray . In this example paper includes handwritten annotation made by a user. Annotation in this example indicates that the user desires to add a dentist appointment for Olivia at 3 p.m. on Sep. 10 2007. According to an alternative embodiment the scanner device may automatically detect insertion of paper and initiate scanning without waiting for user input. Stated another way the user input or user actuation of the device is the fact that the user inserted a document to be scanned into the scanner.

Device may obtain user information during a setup or initialization phase or may periodically communicate with IM software to obtain an updated list of users e.g. via one or more APIs exposed by IM software . Alternatively IM software or computer may notify device whenever an update to the list of users occurs.

Device may display various options for the type of data based on the selected user and or based on the selected application respectively. According to one example device might store a database or lookup table of corresponding users applications and or types of data. Alternatively as a user manipulates input controls on device the device might send an indication of the user s selection to computer and or IM software which provides to device a list of the corresponding users applications and or types of data. For example if a user selects a IM application such as Microsoft OUTLOOK device might lookup or receive from computer a list of types of data including Daily Schedule Weekly Schedule Monthly Schedule To Do List and Shopping List. Such communications may be performed via one or more APIs

The aforementioned devices may also be used with software other than IM software . For example if a user selects a navigational application such as Microsoft STREETS AND TRIPS device might lookup or receive from computer a list of types of data including Driving Directions and Area Map. Upon selecting driving directions the navigational software provides driving directions to a predefined location e.g. to all appointments on the user s schedule for today. Driving directions may alternatively be an option under the IM software selection in field .

Further options may be included on any aforementioned device to select different or additional types of data or different levels of data. For example device may be modified to include a fourth input field e.g. for use when a user desires to print driving directions associated with a daily schedule. Thus when the user selects Daily Schedule as the type of data from the IM software identified in field the user may select a fourth input defining the type of data to be provided about the Daily Schedule e.g. selecting from Detailed View and Driving Directions among other options. Thus the aforementioned devices are not limited to any specific level or detail of input or any specific types of information.

Any of the aforementioned devices may provide or allow a user to select from additional or different information. For example according to one aspect a user may select a date range on display and the date range is provided back to computer for use in generating the requested data or print job. In another example the user might use a first line of display and input module to select a contact name from IM software . The device then sends the selected contact name to computer and IM software . IM software then sends data corresponding to the selected contact name to the device which displays the information on display and or prints the information. Such communications may be performed via one or more APIs.

In addition while illustrate specific configurations and types of input mechanisms other configurations and or input mechanisms may alternatively be used. For example instead of scroll buttons a device such as device may include a scroll wheel touch pad dial button switch lever etc. to accomplish a similar result i.e. the selection of a user a type of predetermined information etc. According to another alternative any of the aforementioned devices might include one button for printing a first type of data e.g. a weekly schedule and a separate button for printing a second type of data e.g. a to do list . Similar arrangements may be used for scanning.

In addition to varying the types of input mechanisms other embodiments provide different capability levels in the printing device e.g. with respect to memory processing and intelligence. For example a device such as device may locally cache data in a memory of the device such that the device need not communicate with a remotely located computer for each print request. When a print request is received from a user the device generates the print job locally without communicating with host computer . Device may periodically synchronize the cached data with the data managed by IM software similar to a PDA synchronizing data with a host computer. Synchronization may occur at predetermined intervals whenever a connection to the host computer is accessible based on user settings or other criteria. Such an embodiment provides high reliability and availability of the device because device is not required to have an active connection to host computer . Indeed host computer need not even be turned on.

According to another aspect any of the aforementioned devices may store previous print requests and or print jobs in memory and a user may select from a list of recent actions with saved configurations so that user s can easily repeat recent prints and or scans without requiring the device to recreate the request by sending a new request to the host computer .

According to another aspect referred to as a metapaper system a user can print desired information update the information by writing on the printout and scan the printout back to the computer to automatically incorporate the updated information written by the user. Any of the aforementioned devices may be used in such a system whereby a piece of printed paper becomes metapaper i.e. a physical copy of printed matter that can be marked up or annotated by a user and can be intelligently scanned and analyzed for the computer to automatically incorporate the changes into an original source file or document.

A metapaper system combines the distinct virtues of paper with those of digital devices for the purposes of individual or group information management using IM software . That is paper has some advantages over currently available devices both in terms of the properties of paper as a display medium as well as the utility of paper for information management. For example compared to an LCD display e.g. on a device printed paper generally has higher resolution and contrast can be folded never needs recharging and weighs next to nothing. On the other hand digital information devices PDAs PCs etc have their own advantages including their flexibility i.e. can run various application software their ability to participate in an information system wherein information comes from multiple sources and is presented in multiple devices. Stated another way a traditional piece of printed paper could not previously be synchronized with a database. Using metapaper as described herein however printed paper can be synchronized with a database.

As indicated above metapaper refers to a physical copy of printed matter that can be marked up or annotated by a user and can be intelligently scanned and analyzed for a computer to automatically incorporate the changes into or synchronize the changes with an original source file or document. In order to create manage and modify synchronize information using metapaper a computer system such as system may include a metapaper database storing information such as that illustrated in . illustrates database storing information including a template index application identifier user identifier and template information . Database may be stored in any computer memory or storage device e.g. on hard disk drive . Database may also include a database manager module not shown that handles queries for information about or information stored in database .

Template index can be any ID identifier or value that uniquely identifies the corresponding information or row in database and is not limited to text numbers hex or any other identification mechanism so long as index can be uniquely tied to a template. Uniqueness need not be forever but rather represents probabilistic uniqueness such that the same index is not likely repeated within a relevant amount of time. Similarly application identifier need not be readable alphanumeric such as is shown in but rather can be any value that identifies a particular application. For example a name of an executable program may be used to represent an actual executable file associated with the desired application program. User ID identifies a user having an account on computer and or application . The user may be left blank or otherwise indicate a default account. Template stores the template information for a specific printed piece of metapaper. That is each template represents a pattern against which a scanned document can later be compared to identify differences. A template may include a stored representation of a specific piece of printed metapaper e.g. a bitmap or other data from which the document can be regenerated and may include the type and location of various regions of the specific piece of metapaper as well as the contents of the document as printed.

The values and information illustrated in as stored in database are illustrative only and are not intended to limit the scope or type of information in database . As indicated above any data or value can be stored that serves the same function or purpose. Additionally the database may have different or additional data fields as those shown in to further the implementation of metapaper described herein.

Template indicia are shown in broken line format to represent the template regions but that template regions may be stored in template field of database as corresponding to Index value 01004734 and such regions are not necessarily printed when metapaper is printed. Region is stored as corresponding to Sunday Jul. 1 2007 region is stored as corresponding to Monday Jul. 2 2007 region is stored as corresponding to Tuesday Jul. 3 2007 region is stored as corresponding to Wednesday Jul. 4 2007 region is stored as corresponding to Thursday Jul. 5 2007 region is stored as corresponding to Friday Jul. 6 2007 region is stored as corresponding to Saturday Jul. 7 2007 region is stored as corresponding to new appointments or modifications to appointments and region is stored as corresponding to new items for a to do list or modifications to a to do list. Database stores the region information in template field as a sort of map or guide of printout having the index value identified by printable indicia . Template field may also store an indication of the paper size for that template as well as a bitmap or other image of the metapaper as printed for later comparison.

Template regions may be identified and stored using any methodology that can identify physical regions on printed matter. For example according to an aspect where each region is rectangular each region may be defined by the offset of the lower left corner of the region from the lower left corner of the paper based on known paper size and also including length and width values. illustrates metapaper template for metapaper in a markup language format.

For ease of understanding the region information presented in includes region IDs corresponding to the reference numbers of the various regions illustrated in . Actual region IDs may differ or use other values or numbering systems. Some of the representations of data values in may be logical in nature and the actual storage format may differ. For example indicates that the data of region corresponds to Appointment. However the DATA value of a region can be any value or identifier understandable by the application to which the template corresponds. Thus any file text or binary image may be used as the DATA value e.g. a picture digital ink etc. In the example of Appointment may be understood by the application OUTLOOK to indicate that the region stores new appointment information or modifications to existing appointment information.

In this example metapaper template indicates that it corresponds to metapaper having an Index 01004734 User Emily and Application OUTLOOK . Metadata template also indicates that metapaper was printed on paper measuring 8.5 inches wide by 11 inches long. Metapaper template further indicates that region of metapaper has a lower left corner offset of 0.3 inches from the left edge and 8.0 inches from the bottom edge of metapaper the size of this region is 3.8 inches wide by 1.8 inches tall or long and this region corresponds to the date Jul. 1 2007.

Metapaper template further indicates that region of metapaper has a lower left corner offset of 0.3 inches from the left edge and 6.1 inches from the bottom edge of metapaper the size of this region is 3.8 inches wide by 1.8 inches tall or long and this region corresponds to the date Jul. 2 2007. Metapaper template further indicates that region of metapaper has a lower left corner offset of 0.3 inches from the left edge and 4.3 inches from the bottom edge of metapaper the size of this region is 3.8 inches wide by 1.8 inches tall or long and this region corresponds to the date Jul. 3 2007. Metapaper template further indicates that region of metapaper has a lower left corner offset of 0.3 inches from the left edge and 2.3 inches from the bottom edge of metapaper the size of this region is 3.8 inches wide by 1.8 inches tall or long and this region corresponds to the date Jul. 4 2007. Metapaper template further indicates that region of metapaper has a lower left corner offset of 4.8 inches from the left edge and 8.0 inches from the bottom edge of metapaper the size of this region is 3.8 inches wide by 1.8 inches tall or long and this region corresponds to the date Jul. 5 2007. Metapaper template further indicates that region of metapaper has a lower left corner offset of 4.8 inches from the left edge and 6.1 inches from the bottom edge of metapaper the size of this region is 3.8 inches wide by 1.8 inches tall or long and this region corresponds to the date Jul. 6 2007. Metapaper template further indicates that region of metapaper has a lower left corner offset of 4.8 inches from the left edge and 4.3 inches from the bottom edge of metapaper the size of this region is 3.8 inches wide by 1.8 inches tall or long and this region corresponds to the date Jul. 7 2007. Metapaper template further indicates that region of metapaper has a lower left corner offset of 0.4 inches from the left edge and 0.3 inches from the bottom edge of metapaper the size of this region is 3.7 inches wide by 1.9 inches tall or long and this region corresponds to new appointment information. Metapaper template further indicates that region of metapaper has a lower left corner offset of 4.5 inches from the left edge and 0.3 inches from the bottom edge of metapaper the size of this region is 3.6 inches wide by 1.4 inches tall or long and this region corresponds to new items for a to do list.

While illustrates template information in a markup language format other storage formats may be used including other forms of markup language e.g. XML alphanumeric data binary data hex data and or any predefined storage format. In addition while illustrates repetitive storage of Index Application and User information such information need not be included if already stored in another location of database . That is the representation of may be used to replace an entire row of database or may be used as just the template field .

For example another template storage scheme may use a binary map obtained by processing the original printed document into a binary map. The printed matter image may be smoothed and thresholded to obtain the binary map which may then be dilated or eroded to expand or shrink the ink regions. The resulting binary map of each region may then be stored in a compressed form. In yet another approach non rectangular regions defined through unions and intersections of lines arcs and polygons may be used. In each embodiment however database stores information from which the content of the metapaper can be recreated e.g. a bitmap or the original data including format and content used to generate and print the metapaper.

In step IM software or other software working in conjunction with preexisting IM software generates template information corresponding to the metapaper having index value I. Template information may be generated in a variety of ways depending on the software application and the resultant information displayed on the metapaper. According to one aspect default template information for a predetermined view may be stored as part of the view information in the software application from which it is generated. For example IM software might provide various data views or reports to a user including Weekly Schedule and Monthly Schedule. IM software stores information regarding the layout of each view report so that IM software knows how to generate and print each respective report. Such information might include the size and location of the various data regions such as those illustrated with respect to metapaper . According to another aspect a separate metapaper manager application may provide the ability for a user to scan in any document manually highlight template regions and input the data type or value to which each region corresponds. The metapaper manager application then stores the template in database . In such an alternate scenario in step IM software might prompt the user to select a template from database to which the requested printout corresponds and the template data is generated based on the user selection. Other template information generation mechanisms may also be used.

In step the IM software or other software that has access to the IM data spools the print job for the requested data and or data view to print metapaper on a printer e.g. printer or any of the aforementioned devices with ID code representing the index value I. Sometime after printing in step the user makes changes handwritten annotations to metapaper as illustrated in . As shown in the user has added annotation in template region corresponding to new appointments and annotation in template region corresponding to new tasks or items for a to do list. In step the user scans metapaper with the handwritten annotations e.g. using any scanner such as any of the aforementioned scanner devices and the scanned image is provided to a scanner device driver executing on the computer .

In step the scanned image is routed to an appropriate application. Routing may be managed at a variety of levels depending on implementation. For example the device driver might be programmed to recognize the presence of ID indicia . When ID indicia is detected the device driver may query database for the Application corresponding to the value of the ID indicia and then route the scanned image to that application. Alternatively the device driver might simply route all incoming images to a predetermined application. For example when scanned using scanner or the scanner might be associated by default with IM software . In such a scenario the scanned image might be routed directly to IM software or a metapaper manager application that works in conjunction with IM software .

In step the application analyzes ID indicia or the entire scanned image to determine and extract the index value Icorresponding to scanned image and in step queries database for the template information corresponding to the index value I. Upon retrieving the template information corresponding to index value I IM application in step compares the scanned image to the template to identify areas in which the user has made changes. According to one aspect IM software may compare a stored bitmap or image of the original printout of metapaper with the scanned image . For example as illustrated in BITMAP . . . database may store an image of the metapaper as printed. Database may alternatively store data from which the metapaper as printed may be regenerated. IM software may compare the scanned image with the bitmap or other stored data to identify differences between the two.

According to one illustrative aspect where the template includes a bitmap of the original printed document the bitmap may be automatically generated by software using a print driver without the need for a physical printer or scanner. The scanned image may differ from the bitmap due to user markup and possible scanning artifacts. The IM software first aligns corrects for scaling rotation shear etc the scan with the template bitmap. Then the IM software uses the binary map and template to identify inkable regions. The binary map defines page regions where the user could have inked the white regions of the page designed to be marked filled in by the user . Because the original image and the scanned image have been aligned the binary map may be applied to the scanned image to find regions where the user could have inked. These regions are scanned or further processed for user handwriting and markup s . In the present example IM software identifies annotation and annotation .

In step IM software identifies or determines the region s in which each annotation or change is located based on the region information stored as part of the template e.g. as illustrated in . Here IM software determines that annotation occurs in region corresponding to new appointments and determines that annotation occurs in region corresponding to new items for a to do list. In step IM software analyzes the annotations based on the region in which each is located. IM software may expect certain types of data or information in each region and or may make various assumptions about an annotation based on the region in which it is located. Here IM software assumes that markup relates to appointments rather than something else e.g. a request to send an email . Such an assumption may include specifically looking for date time information in annotation markup . Similarly IM software assumes that markup relates to a to do list rather than something else e.g. an address for an address book . Other regions may include other assumptions. For example when a region is associated with a particular date IM software may automatically assign that date as a due date or appointment date for any annotation or markup in that region. When a region is associated with contact information IM software may analyze the annotation or markup with respect to identifying a contact name address telephone email address and or other relevant contact information. Thus each region has default information with which it is associated and such default information may be used to aid in the analysis of the markup or annotation e.g. by using the default information to assist with handwriting recognition.

In step IM software modifies information in a source file accordingly to synchronize the database with the new information. Here IM software creates an appointment on Sep. 10 2007 at 3 pm for Olivia to go to the Dentist and adds the item Game Night to a to do list. If a markup relates to an entry already in IM software that entry might be updated based on the new information provided via scan . For example were the user to cross out the time 4 pm next to Sophia piano lesson in region associated with Jul. 3 2007 and write in 10 am IM software may modify the existing appointment by changing the appointment start time from 4 P.M. to 10 A.M.

While illustrates a method according to various aspects described herein one or more steps may be optional additional steps may be added steps may be combined and or split up and steps may be performed in other than their recited order. In addition methods according to various aspects described herein might only include a portion of the steps illustrated in . For example a printing method might only include steps whereas a scanning method might only include steps .

The modifications based on annotations may be used and presented in various ways. According to a first aspect illustrates a sample screen display of IM software . Screen display illustrates a calendar view for Jul. 7 2007 and includes new appointment based on annotation . According to another aspect illustrates metapaper printed subsequent to the incorporation of annotations using the method of . On metapaper appointment corresponds to annotation and to do list item corresponds to annotation .

According to another aspect when subsequently viewed portions of the annotations may remain in the user s handwriting while other portions may be converted to data values. As is evident in and with respect to appointment IM software determined the date and time for the appointment and converted them to data values date and time information can be extracted from handwritten information with high accuracy using known handwriting recognition techniques . However unlike ink recognition on a tablet PC scanned image provides no context regarding the manner or strokes with which the handwriting was written but rather merely represents the handwriting as a static image. Without such context information handwriting recognition can be inaccurate and accuracy can vary widely depending on the context in which handwriting is analyzed e.g. whether the handwriting represents notes prose poetry technical writing etc. . It may thus be difficult to correctly interpret descriptive markups. To account for this possible inaccuracy IM software may store an image of at least a portion of the handwritten annotation that is not interpreted because a user generally is able to read his or her own handwriting. As illustrated in and appointment includes an image of the user s handwriting representing the text Dentist Olivia. Similarly to do list item GAME NIGHT is represented as an image of the user s original handwriting. According to another aspect IM software might attempt to perform handwriting recognition of all markup information and convert all handwriting to formatted text.

Using any or all of the above recited aspects metapaper enables computer readable items to be added and modified in a IM application or other software by writing on a previously printed document. Such a system may be used to add modify and or delete items including appointments notes tasks lists and list items e.g. groceries among others. Each such item is added in one or more distinct regions on the printed metapaper document. Any writing in each region is understood by the software application to be a description or a deletion of an existing item of a type corresponding to that region. A deletion can be indicated by drawing a line through an existing item.

Metapaper may be integrated with a purpose built device e.g. device described above. With such a pairing a request to print e.g. using input button might always generate a metapaper document. Similarly a request to scan e.g. using input button might always result in the scanned image being sent to an application that can identify a scanned image as scanned metapaper and route manage the metapaper appropriately. Such a device or IM software or other application software may be further configured such that upon receipt of a scanned metapaper image and updating the information accordingly a new schedule or copy of the metapaper is automatically printed including the updated information.

Thus according to one illustrative usage scenario a user may print out a weekly schedule at the beginning of the day and take the metapaper printout with her as she leaves the house to run errands. At the end of a dentist visit the user makes an appointment for her next checkup. She writes the date time and description for the appointment into the new appointments region of her metapaper printout. Back at home the user puts the metapaper printout into her scanner and rescans the document. The software extracts the new appointment and puts an image of the handwritten description into her schedule on the appropriate date and time. The software and or printer scanner device might automatically print an updated schedule including the most up to date information. This is but one possible illustration for the benefits bestowed by various aspects described herein.

Using any of the aforementioned devices and metapaper described herein alone or in combination with each other users gain remote access to important information and the ability to update the information using interactive qualities of printed paper. The aforementioned devices provide quick access to information e.g. schedule tasks lists contacts etc. and functions e.g. printing and scanning and may include an input device for each type of information and or function. Users can then request the desired information to be printed at the press of a button. When used with metapaper a user can quickly mark up a printed document scan the marked up document and synchronize the changes with the original source data. The combination of printing and scanning in a single small form factor device allows users to complete the data synchronization cycle print markup scan using only a single device which can be conveniently located in a primary gathering room or hub room of a household e.g. kitchen family room foyer etc. without taking up often limited space.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

