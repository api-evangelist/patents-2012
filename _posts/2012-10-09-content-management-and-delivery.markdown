---

title: Content management and delivery
abstract: Systems and methods for delivering digital content are provided. In one example, a method may include registering a plurality of content source servers and a plurality of content delivery servers with a content management server. The method may include providing a respective inbound content adapter for each of the content source servers, the inbound adapter configured to generate canonical source data. The method may further include providing a respective outbound content adapter for each of the content delivery servers, the outbound adapter configured to process the canonical source data according to a data contract for the respective content delivery server and generate deliverable content data appropriate for the associated content delivery server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09077765&OS=09077765&RS=09077765
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09077765
owner_city: Redmond
owner_country: US
publication_date: 20121009
---
Digital content developers and other content sources may produce and or host digital content such as games music applications images etc. as well as metadata related to such content. Such sources may publish the digital content and related metadata to various destination systems such as game marketplaces search servers application marketplaces etc. that have a need for the content. Such destination systems may in turn make the digital content available to end users and other client systems.

Each destination system that receives digital content may accept only content that conforms to a particular data structure of that system. Accordingly to publish digital content to a destination system a content source typically transforms its digital content by converting the content to match the destination system s accepted data structure. Thus to publish its digital content to multiple destination systems that each utilize different data structures a content source has to perform separate data structure conversions for each of the destination system data structures.

If a content source desires to publish its content to a new destination system the content source has to build a new data structure conversion that corresponds to the new destination system s data structure. Should a destination system change its accepted data structure each content source that publishes to the destination system has to correspondingly update its data structure conversion processes.

Managing multiple data structure conversion processes and monitoring multiple destination systems accepted data structures for changes increases source system complexities and expenses. Further should a source system provide digital content to a destination system in an unacceptable data structure such content will not be published by the system. In this situation such content may not reach end users and client systems that desire the content.

To address the above issues systems and methods for managing and delivering content are provided. In one example the method may include registering a plurality of content source servers and a plurality of content delivery servers with a content management server. The plurality of content source servers may include game console content servers music content servers and or mobile device application content servers. The content delivery servers may include game console marketplace servers search servers mobile device application marketplace servers and or personal computer application marketplace servers.

Each of the content source servers may be configured to serve raw source content data of a different predetermined type. The predetermined raw source content data types may include game console applications music files and mobile device applications. Each of the content delivery servers may be configured to serve deliverable content data of a different predetermined type to end content consumable clients over a wide area network. The predetermined data types for the deliverable content data may include game console applications searchable images video web pages music files mobile device applications and personal computer applications. The deliverable content data may be formatted according to a data contract for each of the content delivery servers.

The method may include providing a respective inbound content adapter for each of the content source servers. The respective inbound content adapter may be configured to receive the raw source content data from the associated content source server and process the raw source content according to a publishing canonical data model to thereby generate canonical source data.

The method may further include providing a respective outbound content adapter for each of the content delivery servers. The respective outbound content adapter may be configured to process the canonical source data according to the data contract for the respective content delivery server and thereby generate deliverable content data of a data type that is appropriate for the associated content delivery server.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

Aspects of this disclosure will now be described by example and with reference to the illustrated embodiments listed above. Components process steps and other elements that may be substantially the same in one or more embodiments are identified coordinately and are described with minimal repetition. It will be noted however that elements identified coordinately may also differ to some degree. It will be further noted that the drawing figures included herein are schematic and generally not drawn to scale. Rather the various drawing scales aspect ratios and numbers of components shown in the figures may be purposely distorted to make certain features or relationships easier to see.

The content management system may include a content management program that resides on a content management server . As described in more detail below the content management server may communicate with one or more content source servers and one or more content delivery servers via a network such as the internal network described above or a separate WAN PAN or a combination thereof and including the Internet. In one example the content management server communicates with content source servers via WAN . The content management program may include a service core program that facilitates the discovery receiving and processing of raw source content data into deliverable content data that is published and delivered to the content delivery servers.

The content management program comprises instructions that may be stored in mass storage of a computing device. The content management program may be loaded into memory and executed by a processor of the computing device to perform one or more of the methods and processes described in more detail below. Similarly the service core program may be stored in mass storage of a computing device loaded into memory and executed by a processor of the computing device.

The above referenced computing devices may take the form of a desktop computer network computer server or other suitable type of computing device. Additional details regarding the components and computing aspects of the above referenced computing devices are described in more detail below with reference to .

With continued reference to the content management program may be configured to receive raw source content data from a plurality of content source servers . The content management program may also be configured to register the plurality of content source servers . In the example depicted in the registered content source servers include a game console content server a music content server and a mobile device application content server . An unregistered content source server may also provide raw source content data to the content management program . For example the content management program may be configured to dynamically discover raw source content data from a data feed of the unregistered content source server via a public API of the unregistered server.

Each of the content source servers may be configured to serve raw source content data including descriptive metadata of a different predetermined type. In the example depicted in the game console content server may be configured to serve game console applications along with corresponding descriptive metadata. The music content server may be configured to serve music files along with corresponding descriptive metadata. The mobile device application content server may be configured to serve mobile device applications along with corresponding descriptive metadata. The unregistered server may be configured to serve web pages and links to video files and image files along with corresponding descriptive metadata. It will be appreciated that the content management program may receive raw source content data from other content source servers registered and unregistered that produce and or host other types of digital content.

With reference now to one example of raw source content data that may be served by the mobile device application content server is provided. In this example the raw source content data is a video game in the form of a mobile device application. The application includes a game executable and descriptive metadata that provides various information related to the video game. The application may be configured to run on a mobile device and may also be configured to connect to an on line multiplayer gaming service.

The descriptive metadata may include various information that describes identifies characterizes or otherwise relates to the associated video game. In one example the descriptive metadata may include product identification ID data publisher data pricing data SKU information release date data game review data file location data single multiplayer game data game player mode data game level data and game achievement data . The file location data may further include a link to the video game application executable located on the game console content server or on another server. It will be appreciated that in other examples the descriptive metadata may include other information that describes identifies characterizes or otherwise relates to the associated video game. Additionally it will be appreciated that in other examples involving other types of digital content various other types of descriptive metadata that describe identify characterize or otherwise relate to the content may be used.

With reference again to the content management program may also be configured to register a plurality of content delivery servers that are configured to receive deliverable content data of different predetermined types from the content management program. The content delivery servers are also configured to serve such deliverable content data to end content consumable clients over WAN . In the example depicted in the content delivery servers include a game console marketplace server a search server a mobile device marketplace server and a PC application marketplace server .

Each of the content delivery servers includes an associated data contract the game console marketplace server including data contract the search server including data contract the mobile device marketplace server including data contract and the PC application marketplace server including data contract . Each of the data contracts defines one or more particular data structures in which incoming deliverable content data for that content delivery server is to be formatted. In one example the data contracts for each of the content delivery servers prescribe different data structures for incoming deliverable content data.

Each of the content delivery servers may be configured to receive deliverable content data including descriptive metadata of a different predetermined type and to serve such data to end content consumable clients. In the example depicted in the game console marketplace server may be configured to receive and serve game console applications. The search server may be configured to receive and serve searchable images video web pages and music files. The mobile device marketplace server may be configured to receive and serve mobile device applications. The PC application marketplace server may be configured to receive and serve personal computer applications. It will also be appreciated that in some examples two or more content delivery servers may also receive and or serve deliverable content data of the same type.

The content management program may include a plurality of respective inbound content adapters that are configured to receive raw source content data from associated content source servers . As explained in more detail below each inbound content adapter may then process the raw source content data according to a publishing canonical data model to thereby generate canonical source data.

In the example depicted in an inbound game content adapter may be configured to receive raw source content data from the game console content server . An inbound music content adapter may be configured to receive raw source content data from the music content server . An inbound file content adapter may be configured to receive raw source content data from the unregistered server . An inbound mobile device application content adapter may be configured to receive raw source data content from the mobile device application content server .

The content management program may also include a publishing service data store and a publishing canonical data model . Advantageously each of the inbound content adapters processes raw source content data it receives according to the same publishing canonical data model to generate canonical source data. Further the content management program may provide canonical source data to one or more respective outbound content adapters that are each associated with a content delivery server . Each outbound content adapter may be configured to process the canonical source data according to the data contract for the respective content delivery server and thereby generate deliverable content data of a data type that is appropriate for the associated content delivery server.

In the example depicted in an outbound game console content adapter may be configured to receive canonical source data from the service core program and process the data according to the data contract for the game console marketplace server to thereby generate deliverable content data appropriate for this server. The outbound game console content adapter may utilize an application programming interface API provided by the game console marketplace server to process the data according to the associated data contract . An outbound search content adapter may be configured to receive canonical source data from the service core program and process the data according to the data contract for the search server to thereby generate deliverable content data appropriate for this server. The outbound search content adapter may utilize an API provided by the search server to process the data according to the associated data contract .

An outbound mobile device application content adapter may be configured to receive canonical source data from the service core program and process the data according to the data contract for the mobile device marketplace server to thereby generate deliverable content data appropriate for this server. The outbound mobile device application content adapter may utilize an API provided by the mobile device marketplace server to process the data according to the associated data contract . An outbound PC application content adapter may be configured to receive canonical source data from the service core program and process the data according to the data contract for the PC application marketplace server to thereby generate deliverable content data appropriate for this server. The outbound PC application content adapter may utilize an API provided by the PC application marketplace server to process the data according to the associated data contract .

The inbound file content adapter may receive raw source content data portion that includes different descriptive metadata also related to the video game associated with the game executable . In this example the file content adapter may receive the product ID data published review data of the video game and file location data indicating one or more locations from which the game executable may be downloaded. For example the file location data may include a URL of the mobile device application content server hosting the game executable .

In one example the inbound game content adapter and the inbound file content adapter may dynamically discover descriptive metadata related to the game executable and associated video game by locating such metadata that is associated with the product ID data of the video game.

Both the inbound game content adapter and the inbound file content adapter may process the respective descriptive metadata they receive by transforming the descriptive metadata according to the publishing canonical data model to generate canonical metadata. Advantageously and as described in more detail below by utilizing a single publishing canonical data model the content management program provides a convenient content delivery mechanism that allows multiple content source servers to distribute raw source content data to multiple content delivery servers without the need to customize such data to match the various data contracts of the content delivery servers. It will be appreciated that in this example only the descriptive metadata is transformed according to the publishing canonical data model while the binaries of the game executable remain unchanged.

The descriptive metadata in the raw source content data portions and may be transformed to canonical source data that is aggregated into an aggregated canonical data record . More specifically the aggregated canonical data record may include canonical product ID data canonical game level data canonical pricing data canonical review data canonical file location data and the game executable .

The outbound content adapters may be configured to process the canonical metadata of the aggregated canonical data record by transforming the canonical metadata to deliverable metadata according to the data contract for the respective content delivery server thereby generating deliverable metadata. Additionally and with reference also to the service core program may be configured to utilize configuration APIs for each of the content delivery servers to map the canonical source data to one or more of the content delivery servers based on a respective deliverable content data type for the associated content delivery server. In this manner the content management program may select pertinent descriptive metadata from the aggregated canonical data record for one or more of the content delivery servers .

In the example depicted in a game console canonical data subset including the canonical product ID data and the canonical file location data may be selected and provided to the outbound game console content adapter . In this manner a subset of the descriptive metadata that may be pertinent and of particular relevance to the game console marketplace server and its associated client devices may be selected.

Similarly a mobile device marketplace canonical data subset including the canonical product ID data the canonical pricing data the canonical product review data and the game executable may be selected and provided to the outbound mobile device application content adapter . In this manner a subset of the descriptive metadata that may be pertinent and of particular relevance to the mobile device marketplace server and its associated client devices may be selected.

The game console content adapter may be configured to process the game console canonical metadata by transforming the metadata to generate deliverable metadata according to the data contract for the respective game console marketplace server . In this manner and with reference again to the canonical product ID data may be transformed to deliverable product ID data and the canonical file location data may be transformed to deliverable file location data . This deliverable metadata may then be served to the game console marketplace server which may in turn serve the deliverable metadata to a end content consumable client game console over WAN .

In a similar manner the mobile device application content adapter may be configured to process the mobile device canonical metadata by transforming the metadata to generate deliverable metadata according to the data contract for the respective mobile device marketplace server . With reference again to the canonical product ID data may be transformed to deliverable product ID data the canonical pricing data may be transformed to deliverable pricing data and the canonical product review data may be transformed to deliverable product review data . This deliverable metadata along with the game executable may then be served to the mobile device marketplace server which may in turn serve the deliverable metadata to an end content consumable client mobile device over WAN .

Advantageously and as described above the content management system may enable raw source content data such as an application and corresponding descriptive metadata to be published to various content delivery servers . More specifically the content management system may transform the descriptive metadata that is appropriate for each content delivery server according to the data contract for that content delivery server. In this manner for example a content developer may write a single application capable of running on multiple platforms which the content management system may serve to multiple content delivery servers with transformed descriptive metadata that is appropriate for each content delivery server and without changing the application. Advantageously the system thereby enables a developer to write a single application that the system may publish to multiple content delivery servers .

With reference now to an example of an operational sequence of the content management system is provided. With reference also to a subscriber within the service core program may subscribe to read a data feed from one or more content servers. In one example the subscriber may subscribe to a data feed from the game console content server via a game content API . At the subscriber may read a configuration file in the publishing service data store at a predetermined interval. At the subscriber may schedule one or more jobs to review the data feed from the fame console content server and any other subscribed data feeds to identify any newly available raw source content data.

At the subscriber sends a request to retrieve new raw source content data to the inbound game content adapter . At the inbound game content adapter sends a request to the game content API to retrieve new raw source content data. Upon receiving new raw source content data at the inbound game content adapter processes the raw source content data according to the publishing canonical data model to transform the data into canonical source data.

At the subscriber receives an acknowledgement that the transformation into canonical source data has occurred and the canonical source data is saved in the publishing data store . At the subscriber saves to a queue in the publishing service data store a new record that the transformation into canonical source data has occurred. At a publisher may read from the queue in the publishing service data store and locate the new record of the canonical source data. In one example the publisher may read from the queue periodically and asynchronously as compared to the predetermined interval at which the subscriber reviews data feeds from the content server and any other servers.

At the publisher may send a request to the outbound game console content adapter to publish the canonical source data to the game console marketplace server . At the outbound game console content adapter may process the canonical source data according to the data contract of the game console marketplace server to transform the canonical source data into deliverable content data. At the outbound game console content adapter may publish the deliverable content data via the game console marketplace server API to the game console marketplace server . At the game console marketplace server may send a status acknowledgement of receipt of the deliverable content data to the outbound game console content adapter and publisher via the game console marketplace server API . At such status acknowledgement may also be delivered to the queue in the publishing service data store where an updated record may be saved noting that the deliverable content data has been published to the game console marketplace server .

With reference to at the method includes registering a plurality of content source servers and a plurality of content delivery servers with a content management server. At the plurality of content source servers may include game console content servers music content servers and or mobile device application content servers. At each of the content source servers may be configured to serve raw source content data of a different predetermined type. At the predetermined raw source content data types may include game console applications music files and mobile device applications. At the content delivery servers may include game console marketplace servers search servers mobile device application marketplace servers and or personal computer application marketplace servers.

At the method may include providing a respective inbound content adapter for each of the content source servers. At the method may include receiving the raw source content data from the associated content source server. At the raw source content data may include descriptive metadata. At the descriptive metadata may be selected from the group consisting of product pricing release dates product ID publisher SKU information file location product reviews game levels game player modes and game achievements. At the method may further include receiving unregistered raw source content data from an unregistered content source server that is not registered with the content management server.

Turning now to at the method may include processing the registered and unregistered raw source content data according to a publishing canonical data model to thereby generate the canonical source data. At the method may include transforming descriptive metadata according to the publishing canonical data model to general canonical metadata. At in one example the method may include aggregating the canonical source data from a plurality of the content source servers into an aggregated canonical data record.

At the method may include mapping the canonical source data to one or more of the content delivery servers based on a respective deliverable content data type for the associated content delivery server. At the method may include providing a respective outbound content adapter for each of the content delivery servers. At the method may include processing the canonical source data according to the data contract for the respective content delivery server and thereby generating deliverable content data of a data type that is appropriate for the associated content delivery server. At the method may include transforming the canonical metadata to deliverable metadata according to the data contract for the respective content delivery server and thereby generate deliverable metadata.

At the predetermined data types for the deliverable content data include game console applications searchable images video web pages music files mobile device applications and personal computer applications. At in one example the method may include at two of the respective outbound content adapters selecting disparate canonical data subsets from the aggregated canonical data record.

Turning now to at the disparate canonical data subsets may each comprise the canonical data that is pertinent to the respective content delivery server. At the method may include delivering the disparate canonical data subsets in the form of deliverable content data to the respective content delivery server corresponding to the delivering outbound content adapter. It will be appreciated that in other examples disparate canonical data subsets may be selected by more than two outbound content adapters and delivered to respective content delivery servers as described above At each of the content delivery servers may be configured to serve deliverable content data of a different predetermined type to end content consumable clients over a wide area network.

In some embodiments the above described methods and processes may be tied to a computing system including one or more computers. In particular the methods and processes described herein may be implemented as a computer application computer service computer API computer library and or other computer program product in a computing system that includes one or more computers.

As shown in computing device includes a logic subsystem a data storage subsystem a display subsystem and a communication subsystem . Computing device may optionally include other subsystems and components not shown in . Computing device may also optionally include other user input devices such as keyboards mice microphones game controllers and or touch screens for example.

Logic subsystem may include one or more physical devices configured to execute one or more instructions. For example the logic subsystem may be configured to execute one or more instructions that are part of one or more applications services programs routines libraries objects components data structures or other logical constructs. Such instructions may be implemented to perform a task implement a data type transform the state of one or more devices or otherwise arrive at a desired result.

The logic subsystem may include one or more processors that are configured to execute software instructions. Additionally or alternatively the logic subsystem may include one or more hardware or firmware logic machines configured to execute hardware or firmware instructions. Processors of the logic subsystem may be single core or multicore and the programs executed thereon may be configured for parallel or distributed processing. The logic subsystem may optionally include individual components that are distributed throughout two or more devices which may be remotely located and or configured for coordinated processing. One or more aspects of the logic subsystem may be virtualized and executed by remotely accessible networked computing devices configured in a cloud computing configuration.

Data storage subsystem may include one or more physical persistent devices configured to hold data and or instructions executable by the logic subsystem to implement the herein described methods and processes. When such methods and processes are implemented the state of data storage subsystem may be transformed e.g. to hold different data . Data storage subsystem may include mass storage.

Data storage subsystem may include removable media and or built in devices. Data storage subsystem may include optical memory devices e.g. CD DVD HD DVD Blu Ray Disc etc. semiconductor memory devices e.g. RAM EPROM EEPROM etc. and or magnetic memory devices e.g. hard disk drive floppy disk drive tape drive MRAM etc. among others. Data storage subsystem may include devices with one or more of the following characteristics volatile nonvolatile dynamic static read write read only random access sequential access location addressable file addressable and content addressable. In some embodiments logic subsystem and data storage subsystem may be integrated into one or more common devices such as an application specific integrated circuit or a system on a chip.

It is to be appreciated that data storage subsystem includes one or more physical persistent devices. In contrast in some embodiments aspects of the instructions described herein may be propagated in a transitory fashion by a pure signal e.g. an electromagnetic signal an optical signal etc. that is not held by a physical device for at least a finite duration. Furthermore data and or other forms of information pertaining to the present disclosure may be propagated by a pure signal.

Display subsystem may be used to present a visual representation of data held by data storage subsystem . As the above described methods and processes change the data held by the data storage subsystem and thus transform the state of the data storage subsystem the state of the display subsystem may likewise be transformed to visually represent changes in the underlying data. The display subsystem may include one or more display devices utilizing virtually any type of technology. Such display devices may be combined with logic subsystem and or data storage subsystem in a shared enclosure or such display devices may be peripheral display devices.

Communication subsystem may be configured to communicatively couple computing device with one or more networks and or one or more other computing devices. Communication subsystem may include wired and or wireless communication devices compatible with one or more different communication protocols. As nonlimiting examples the communication subsystem may be configured for communication via a wireless telephone network a wireless local area network a wired local area network a wireless wide area network a wired wide area network etc. In some embodiments the communication subsystem may allow computing device to send and or receive messages to and or from other devices via a network such as the Internet.

The terms module and program may be used to describe an aspect of the content management system that is implemented to perform one or more particular functions. In some cases such a module or program may be instantiated via logic subsystem executing instructions held by data storage subsystem . It is to be understood that different modules and programs may be instantiated from the same application service code block object library routine API function etc. Likewise the same module or program may be instantiated by different applications services code blocks objects routines APIs functions etc. The terms module and program are meant to encompass individual or groups of executable files data files libraries drivers scripts database records etc.

It is to be appreciated that a service as used herein may be an application program that is executable across multiple user sessions and available to one or more system components programs and or other services. In some implementations a service may run on a server responsive to a request from a client.

It is to be understood that the configurations and or approaches described herein are exemplary in nature and that these specific embodiments or examples are not to be considered in a limiting sense because numerous variations are possible. The specific routines or methods described herein may represent one or more of any number of processing strategies. As such various acts illustrated may be performed in the sequence illustrated in other sequences in parallel or in some cases omitted. Likewise the order of the above described processes may be changed.

The subject matter of the present disclosure includes all novel and nonobvious combinations and subcombinations of the various processes systems and configurations and other features functions acts and or properties disclosed herein as well as any and all equivalents thereof.

