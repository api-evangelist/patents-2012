---

title: Method and apparatus for determining a network topology during network provisioning
abstract: In one embodiment, a method includes receiving a provisioning instruction including a device identifier from an external management entity, receiving the device identifier from a network device, associating the provisioning instruction the network device, and sending a portion of the provisioning instruction to the network device. The device identifier being associated with a virtual resource. The associating is based on the device identifier of the virtual resource and a device identifier of a network device. The portion of the provisioning instruction is sent to the network device based on the associating.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09032054&OS=09032054&RS=09032054
owner: Juniper Networks, Inc.
number: 09032054
owner_city: Sunnyvale
owner_country: US
publication_date: 20120824
---
This application is a continuation of U.S. patent application Ser. No. 12 346 623 filed Dec. 30 2008 and entitled Method and Apparatus for Determining a Network Topology During Network Provisioning now U.S. Pat. No. 8 255 496 which is incorporated herein by reference in its entirety.

Embodiments described herein relate generally to methods and apparatus for determining a network topology for example during network provisioning. Some embodiments relate more specifically to providing centralized topology management of computing resources including virtual resources within a data center that is accessible to external management entities.

Server management tools typically manage and provision computing resources within networks data centers and enterprises. For example network management tools can manage and provision network devices and network resources in a network. Similarly server management tools can be used to launch applications manage instantiation and migration of virtual machines and balance processing loads on servers and or other computing resources. Network management tools can be used to start and stop network services provided by network devices and set access policies within a network.

Known server management tools and network management tools typically rely on a static description of the network in which the managed resources exist that is provided by a network administrator of the network. For example a server management tool used to manage servers and or virtual machines within a network might rely on for example an internet protocol IP address for each server or virtual machine being managed that is provided by a network administrator to communicate with the servers in the network. Alternatively a resource running on a server in the network can dynamically transmit or broadcast the IP address of the server on which it is running. The server management tool can receive and store the broadcast IP address to communicate with that server.

Similarly known network management tools typically require that a network administrator provide a static description of the topology of the network to a network management tool. Such a static description can include textual and or other files that describe where e.g. on which server in the network particular virtual machines or virtual resources are instantiated. Additionally a static description can describe the interconnections among network devices such as routers hubs switches and gateways and the interconnection between these network devices and servers or virtual machines in the network. These network management tools can interpret such a description to apply for example an access control list ACL for a particular virtual machine to the port of a network device to which the virtual machine is connected. Alternatively network devices can be queried dynamically for information about the interconnections of the network devices. For example the simple network management protocol SNMP provides for some querying and gathering of information from network devices.

Such known methods of server and network management suffer several disadvantages. For example static descriptions of network topology including binding of virtual resources to network devices are problematic in virtualized networks such as data center networks. In a virtualized network multiple virtual resources such as virtual machines run on a single physical server. Typically in virtualized networks virtual machines can migrate or move from one server to another within the network changing dynamically the binding of virtual resources to network devices within the network. Thus static descriptions of the network quickly become outdated e.g. inaccurate or incorrect . When the static description of a network is no longer valid due to for example migration of a virtual resource a network administer typically updates the static description of the network in order to provision network devices to manage the network based on the new topology to further manage the network.

In one embodiment a method includes receiving a provisioning instruction including a device identifier from an external management entity receiving the device identifier from a network device associating the provisioning instruction the network device and sending a portion of the provisioning instruction to the network device. The device identifier being associated with a virtual resource. The associating is based on the device identifier of the virtual resource and a device identifier of a network device. The portion of the provisioning instruction is sent to the network device based on the associating.

A centralized network management entity or network management module can cooperate with network devices to collect and manage network topology information. For example network devices can push information about resources both virtual and physical currently operatively coupled to the network devices to the network management module as resources are attached to or separated from the network devices. An external management entity such as a server management tool and or a network management tool can communicate with the network management module to send network provisioning instructions to network devices and other resources in the network without a static description of the network. Such a system avoids the difficulties of static network descriptions and the network performance degradations resulting from other types of server and network management systems.

In one embodiment a server management tool or external management entity communicates with a network management module to provision network devices for virtual resources and determine the operating state or status e.g. running suspended or migrating and the locations in a network of virtual resources. Virtual resources can be virtual machines executing on servers coupled to a switch fabric via access switches in a data center. Many servers can be coupled to the switch fabric via the access switches. For example 2 048 servers 4 096 servers 9 192 servers or more servers can be coupled to a single switch fabric or multiple interconnected switch fabrics or switch fabric portions configured to function as a single switch fabric . Due to the large number of servers in the data center network the capability of each server to host multiple virtual resources and virtual resource migration a static description of the network is difficult for a network administrator to compile and update. Furthermore a static network description can be problematic because a technician assembling or maintaining the system can inadvertently couple or connect a server to a port of an access switch other than the port specified in the network description for the data center. Additionally an operator or administrator of the network can inadvertently start or instantiate a virtual resource on an incorrect server resulting in improper provisioning for that virtual resource.

Rather than rely on a static network description for discovery and or management of network topology information including binding of virtual resources to network devices the network management module communicates and cooperates with the access switches and external management entity to discover or determine network topology information. After instantiating or starting a virtual machine on a host device the external management entity can provide a device identifier of the virtual machine to the network management module. The device identifier can be for example a medium access protocol MAC address of a network interface of the virtual machine or server a name of the virtual machine or server a globally unique identifier GUID and or a universally unique identifier UUID of the virtual resource or server. The GUID need not be globally unique with respect to all networks virtual resources servers and or network devices but is unique within the network or network segment managed by the network management module. Additionally the external management entity can provide instructions for provisioning a port of an access switch to which the server hosting the virtual machine connected. The access switch can detect that the virtual machine has been instantiated started and or moved to the server. After detecting the virtual machine the access switch can query the server for information about the server and or virtual machine including for example a device identifier of the server or virtual machine.

The access switch can query or request information such as for example the device identifier of the virtual machine using for example the link layer discovery protocol LLDP some other standards based or well known protocol or a proprietary protocol where the virtual machine is configured to communicate via that protocol. Alternatively the virtual machine can broadcast information about itself including the device identifier of the virtual machine after detecting that it has been connected to an access switch using for example an Ethernet or IP broadcast packet and or packets.

The access switch then pushes the device identifier of the virtual device sometimes referred to as a virtual device identifier and in some embodiments other information received from the virtual machine to the network management module. Additionally the access switch can push a device identifier of the access switch and a port identifier of the port of the access switch to which the server hosting the virtual machine is connected to the network management module. This information functions as a description of the location of the virtual machine in the network and defines the binding of the virtual machine to a server for the network management module and an external management entity. In other words after receiving this information the network management module can associate the device identifier of the virtual machine with a particular port on a particular access switch to which the virtual machine or the server on which the virtual machine is hosted is connected.

The device identifier of the virtual machine the device identifier of the access switch the port identifier and the provisioning instructions provided by the external management entity can be stored in a memory accessible to the network management module. For example the device identifier of the virtual machine the device identifier of the access switch and the port identifier can be stored in a memory configured as a database such that a database query based on the device identifier of the virtual machine returns the device identifier of the access switch the port identifier and the provisioning instructions.

Because the network management module can associate a location in the network of a virtual machine based on a device identifier of that virtual machine the external management entity need not be aware of the topology of the network or the binding of virtual machines to servers to provision network resources e.g. network devices virtual machines virtual switches or physical servers . Said differently the external management entity can be agnostic as to the interconnections in the network and the location of the virtual machines in the network e.g. on which server at which port of which access switch in the network and can provision access switches in the network based on device identifiers of the virtual machines hosted by the servers in the network. In some embodiments an external management entity can also provision physical servers. Additionally because the network management module determines and manages the network topology information dynamically the external management entity does not rely on a static description of the network for provisioning network.

As used in this specification provisioning can include various types or forms of device and or software module setup configuration and or adjustment. For example provisioning can include configuring a network device such as a network switch based on a network policy. More specifically for example network provisioning can include configuring a network device to operate as a layer 2 or layer 3 network switch alter routing tables of a network device update security policies and or device addresses or identifiers of devices operatively coupled to a network device selecting which network protocols a network device with implement setting network segment identifiers such as virtual local area network VLAN tags for a port of a network device and or applying access control lists ACLs to a network device. The network switch can be provisioned or configured such that rules and or access restrictions defined by the network policy are applied to data packets that pass through the network switch. In some embodiments virtual devices can be provisioned. A virtual device can be for example a software module implementing a virtual switch virtual router or virtual gateway that is configured to operate as an intermediary between a physical network and is hosted by a host device such as a server. In some embodiments provisioning can include establishing a virtual port or connection between a virtual resource and a virtual device.

As used in this specification the singular forms a an and the include plural referents unless the context clearly dictates otherwise. Thus for example the term a host device is intended to mean a single host device or a combination of host devices network device is intended to mean one or more network devices or a combination thereof.

As illustrated in network management module is operatively coupled to network device network device and network device . Network management module can be operatively coupled to network device network device and network device using a variety of connections. In some embodiments network management module is operatively coupled to network device network device and network device via a common network such as an Ethernet or fiber channel network. In some embodiments network device network device and network device can be directly connected to network management module or a network resource such as a server hosting or executing network management module as a software application or service. In other embodiments network management module can be operatively coupled to network device network device and network device via a control plane of a switch fabric or a network appliance such as a switch fabric control system.

In some embodiments network device network device and network device are coupled to network management module via a command interface port not shown . In some embodiments network device network device and network device are coupled to network management module via a network interface port or communication interface port shown in . In some embodiments network device network device and network device are coupled to network management module via a network interface port and a network not shown .

Network device network device and network device can be configured to communicate with network management module via one or more protocols or methods. For example network device network device and network device can communicate with network management module using a packet based protocol by sending and receiving packets between network device network device network device and network management module via a network. In some embodiments network device network device and network device can each communicate with network management module directly based on a dedicated connection between network management module and each of network device network device and network device .

In some embodiments network device network device and network device can communicate with network management module based on a synchronous protocol. In some embodiments network device network device and network device can communicate with network management module based on an asynchronous protocol. In some embodiments network device network device and network device can communicate with network management module based on a combination of methods such as for example dedicated control lines e.g. interrupts data and or device selection to each of network device network device and network device and or a packet protocol for transmission of data.

Network device is configured to receive data packets and forward the data packets to one or more of network interface port communication interface port communication interface port and or communication interface port based on parameters of the data packets. For example a data packet received via network interface port can include a destination parameter having a value associated with an identifier of a computing device connected to communication interface port . Processor can determine to which communication interface port if any the packet should be forwarded based on for example data stored in memory . Because the data packet includes a destination parameter having a value associated with an identifier of a computing device connected to communication interface port processor can determine that the data packet should be forwarded to communication interface port . In some embodiments memory can include rules and or ACLs provided as provisioning instructions from an external management entity via a network management module that are satisfied by parameters of the data packet before processor forwards the data packet. For example a rule can specify that a source address parameter of the data packet include a value in a range of values specified in the rule. If the value is outside of the specified range of values the data packet will not be forwarded to communication interface .

In some embodiments network device can be configured as a network switch such as an access switch coupled to a switch fabric. For example network device can be an access switch configured to communicate with host devices and or other devices e.g. storage servers database servers and or other computer servers via a protocol such as Ethernet through communication port communication port and communication port and with a core of a switch fabric via another protocol e.g. a cell based protocol or other protocol other than Ethernet through network interface port . In other words network device can provide host devices and or other devices configured to communicate via one protocol with access to a switch fabric configured to communication via another protocol.

More specifically for example the core of a switch fabric can be configured as a strictly non blocking network or rearrangeably non blocking network such as a Clos network and can include a data plane and a control plane. Thus two host devices can be operatively coupled one to another via two network devices each similar to network device operatively coupled to a switch fabric. For example a first host device can send a data packet addressed to a second host device via an Ethernet protocol to a first network device operatively coupled to a switch fabric. The first network device can receive the data packet and send the data packet via the switch fabric using a proprietary protocol to a second network device operatively coupled to the second network device. For example first network device can send the data packet to the second network device by separating or segmenting the data packet into cells that are transported via a cell based switch fabric based on data signals in a data plane and a control plane of the switch fabric. Alternatively in some embodiments the switch fabric can segment the data packet prior to transporting it to the second network device. The second network device can then receive the cells representing the segmented data packet reassemble the data packet and send the data packet to the second host device via an Ethernet protocol. Alternatively the switch fabric can reassemble the data packet based on the cells representing the data packet prior to providing the data packet to the second network device.

Said differently in some embodiments network device can be configured to function as a gateway device between a switch fabric and a host device virtual resources hosted by the host device and or other devices which can be configured to transfer data based on different protocols. As described above the host device an the virtual resources hosted by the host device can be configured to communicate based on an Ethernet protocol and the switch fabric can be a cell based fabric where one or more portions of data e.g. data packets are transmitted via the switch fabric in one or more cells e.g. variable size cells fixed size cells . In other words network device can provide the host device and or other devices configured to communicate via one protocol with access to the switch fabric which can be configured to communicate via another protocol. In some embodiments network device can be configured to function as a router a network hub device and or a network bridge device. In some embodiments a routing can be layer 2 switching and or layer 3 routing. In other words a router can be a device configured to classify and or operate on packets at layer 2 or layer 3.

Additionally in some embodiments network device can be configured to function as a gateway device for multiple host devices. Specifically routing functionality between virtual resources at multiple host devices can be performed at a network device such as network device . This capability can facilitate scaling of host devices configured to access for example a switch fabric via a network device in a desirable fashion.

In some embodiments network device can include a control interface port not shown . The control interface port can be used for communicating with for example a network management module. For example a network management module can be incorporated into a control plane of a network appliance and network device can be operatively coupled to the control plane of the network appliance via the control interface. In other embodiments network device can communicate with a network management module via network interface port and or one or more of communication interface port communication interface port and communication interface port .

Returning to network device includes port and port and is operatively coupled to host device via port . Port and port can be for example communication interface ports as illustrated in . Network device includes port and port is operatively coupled to host device via port and is operatively coupled to host device via port . Ports and can be for example communication interface ports as illustrated in . Network device includes port and port . Port and can be for example communication interface ports as illustrated in .

Virtual resource R and virtual resource R can be for example software modules including network services such as web servers dynamic host configuration protocol DHCP servers file transfer protocol FTP servers file servers and or other software modules. In some embodiments virtual resource R and virtual resource R are virtual machines or virtual network appliances. Virtual machines and virtual network appliances can be software modules configured to emulate computing devices such as general purpose computers and or specialized computing devices including network appliances.

Virtual resource R and virtual resource R are configured to communicate with a network via virtual switch module VS. Virtual switch module VS is configured to operate as a bridge between for example a physical network to which host device is operatively coupled via communication interface and the virtual resources R and R.

Virtual switch module VS can be a software module or a portion of a processor configured to communicate with virtual resource R virtual resource R and communication interface . Communication interface can be a physical communication interface such as a network interface card NIC or a portion of a software network stack associated with a NIC. In some embodiments virtual switch module VS can be integrated with a software network stack associated with a NIC. In other words virtual switch module VS can be a portion of a NIC network stack. More details related to cooperative provisioning and or operation of virtual switch modules and network devices are set forth in U.S. patent application Ser. No. 12 346 608 filed on Dec. 30 2008 and entitled Methods and Apparatus Related to Data Transmissions between Virtual Resources via a Network Device U.S. patent application Ser. No. 12 346 612 filed Dec. 30 2008 and entitled Methods and Apparatus Related to Data Transmissions between Virtual Resources via a Network Device U.S. patent application Ser. No. 12 346 615 filed on Dec. 30 2008 and entitled Methods and Apparatus For Routing between Virtual Resources based on a Routing Location Policy U.S. patent application Ser. No. 12 346 618 filed on Dec. 30 2008 and entitled Methods and Apparatus for Provisioning at a Network Device in Response to a Virtual Resource Migration Notification and U.S. patent application Ser. No. 12 346 625 filed on Dec. 30 2008 and entitled Methods and Apparatus Related to Managing Communications Between Virtual Resources all of which are incorporated herein by reference in their entireties. In some embodiments a virtual switch module or virtual switch can be configured as a multiplexer and or demultiplexer and switching or routing can take place or occur at a network device.

Communication interface is configured to be operatively coupled to a network or other computing or network device. For example host device can be operatively coupled to another host device or a network device via communication interface . Processor can communicate with the network or other computing or network device via communication interface . For example processor can receive a data packet via communication interface . Processor can execute code representing virtual switch module VS to determine to if the data packet should be forwarded to one or both of virtual resource R and virtual resource R. If processor determines that the data packet should be forwarded to for example virtual resource R processor can execute code associated with virtual switch VS and or code associated with virtual resource R such that the data packet is forwarded or transferred to a portion of memory representing a data packet input of virtual resource R. Processor can then execute code representing virtual resource R to process and or respond to the data packet by for example providing a response to the source of the data packet via virtual switch module VS and communication interface .

Referring to external management entity can be for example a server management tool a network management tool and or other software or hardware configured to manage and or provision network devices and and or host devices and . In some embodiments external management entity can provide provisioning instructions to network devices and via network management module and to host devices and without interacting with network management module . In other words as illustrated in external management entity is logically coupled to host devices and . Thus external management entity can communicate with host devices and independent of network management module . In some embodiments external management entity can be directly coupled to host devices and . In some embodiments external management entity and host devices and communicate via a network. In some embodiments external management entity and host devices and communicate via a network using out of band OOB data packets.

External management entity can be for example a server management tool network management tool or other tool or module configured to provide instructions such as provisioning instructions to network devices and via network management module . For example in some embodiments external management entity can be a computer executing a server management tool software application having a graphical user interface GUI for managing servers within a network. A network administrator can for example select and or manipulate icons and or buttons to instantiate migrate suspend and or effect other state changes of a virtual resource. Thus external management entity can initiate direct and or modify provisioning of network devices and or other devices e.g. virtual switches in the network. In some embodiments external management entity can be a dedicated computing device executing a command line utility for provisioning network resources based on provisioning instructions provided to network management module .

External management entity can control or manage virtual resources on host devices and and communicate with network management module to coordinate provisioning of network devices and . In some embodiments external management entity can instantiate a virtual resource R on host device and assign a device identifier to virtual resource R. After instantiating virtual resource R on host device external management entity can also provide the device identifier to network management module . In some embodiments external management entity can provide the device identifier to network management module simultaneously or substantially simultaneously with instantiating virtual resource R on host device . In some embodiments external management entity can provide the device identifier to network management module before instantiating virtual resource R.

In addition to the device identifier of virtual resource R external management entity can provide provisioning instructions to network management module . The provisioning instructions can be commands or code that network device can interpret or execute to provision port such that port is configured with network attributes of virtual resource R. For example port can be provisioned to perform routing for a VLAN with which virtual resource R is associated to implement an ACL related to virtual resource R to enforce access limitations associated with virtual resource R and or otherwise realize network attributes of virtual resource R.

In some embodiments an external management entity can suspend a virtual resource and or migrate a virtual resource. For example an external management entity can migrate virtual resource R from host device to host device . Additionally external management entity can provide status information e.g. device identifier network attributes and or other information about virtual resource R to network management system after migrating or suspending virtual resource R.

In addition to providing a device identifier and provisioning instructions to network management module after instantiating migrating or suspending a virtual resource external management entity can update provisioning in the network. For example a network administrator can use external management entity to change an ACL security attributes or a routing table of a virtual resource by providing a device identifier of the virtual resource and updated provisioning instructions to network management module . In some embodiments network management module can provide the updated provisioning instructions and device identifier to network devices and and network devices and can provision a port operatively coupled to a virtual resource having that device identifier. Thus external management entity can manage provisioning in the network without having access to location information of the virtual resource in the network. In other words external management entity can update provisioning in the network for a virtual resource independent of the location in the network of the virtual resource by providing the device identifier of the virtual resource and the updated provisioning instructions to network management module . In other embodiments provisioning for the network device having that device identifier is not updated until one of network devices and requests provisioning instructions from network management module .

In some embodiments external management entity is referred to as external because it is not integrated into network management system . For example network management system can be a portion of a switch fabric such as for example a processor module within a control plane of a switch fabric and external management entity can be a software application executing on a computer in communication with network management system and or the switch fabric but external to network management system . In some embodiments external management entity is external because it is separate from a data plane and a control plane of a switch fabric but is included in a management plane of the switch fabric.

Network management module can communicate with external management entity and network devices and to provision ports of network devices and . In some embodiments network management module is configured to provide state or status updates of virtual resources to external management entity . In some embodiments network management module can be a processor or a processor module within a control plane of a network appliance a switch fabric or a switch fabric management system. For example network management module can be a processor module within a control plane of a switch fabric including switch fabric data plane and network device network device and network device can be operatively coupled to a data plane of switch fabric of the switch fabric. More details related to switch fabrics and control planes of switch fabrics are set forth in co pending patent application U.S. patent application Ser. No. 12 345 498 filed on Dec. 29 2008 and entitled Control Plane Architecture for Switch Fabrics which is incorporated herein by reference in its entirety.

In some embodiments network management module can be a server or a network appliance separate from a switch fabric and operatively coupled to network device network device and network device . In some embodiments network management module can be a software application or service running or executing on a server or network appliance separate from a switch fabric and operatively coupled to network device network device and network device . Thus in some embodiments network device network device and network device can be controlled e.g. receive provisioning instructions and or other control commands separate from switch fabric and can send and receive data via switch fabric or a data plane within a switch fabric . In some embodiments network management module can be a server or network appliance separate from a control plane of a network and operatively coupled to network devices and via a data plane of switch fabric . In some embodiments network management module can be operatively coupled to more than one switch fabric network and can provision network devices operatively coupled to each of the switch fabric networks. In other words a network management module can manage more than one network.

In some embodiments network management module includes memory . Memory can be configured for example as a database a table or list to store device identifiers of virtual resources or host devices network devices and port identifiers of network device ports received from external management entity . For example is a block diagram of a table including device identifiers and port identifiers according to an embodiment. Table includes column including identifiers of host devices column including device identifiers of network devices column including port identifiers of network device ports and column including provisioning instructions related to virtual machines operatively coupled to a network device. Each row of table can be used to determine a network device and port to which a particular virtual resource is connected. For example virtual device id  is a virtual device identifier associated with a virtual resource connected to port x of a network device having network device id . In some embodiments table can also include a column or other storage element for provisioning instructions received from external management entity . In some embodiments a memory not shown can be external to network management module . In other words network management system can include a memory accessible to network management module but not included in network management module .

After network management module receives a device identifier and provisioning instructions from external management entity it can provision network devices and . In some embodiments network management module can provide the device identifier and provisioning instructions to network devices and . After a network device detects that a virtual resource having the device identifier is operatively coupled to a port of the network device the network device can provision that port based on the provisioning instructions.

In some embodiments network management module does not provide the device identifier and provisioning instructions to each of network devices and . For example to reduce the memory requirements of a network device the network device can request provisioning instructions from network management module after detecting a virtual resource operatively coupled to a port of the network device. Network management module can provide the provisioning instruction to the network device in response to the request and the network device can provision that port of the network device.

Network management module can provide various interfaces such as command interfaces to enable external management entity to communicate with network management module and to enable external management entity to provide device identifiers and provisioning instructions or commands to network management module . In some embodiments network management module can communicate via a proprietary protocol with external management entity . In some embodiments communication between external management entity and network module is encrypted or secured using an encryption scheme such as for example symmetric encryption or public private key encryption and or digital certificates. In some embodiments network management module can provide or support an application programming interface API such that external management entity can send provisioning instructions or commands to network management module via a published API. In other embodiments network management module can provide interfaces to external management entity based on other protocols.

Similarly external management entity can define or provide an API that network management module can access to provide state or status e.g. the operational state of a virtual resource information about a virtual resource to external management entity . For example network devices and can provide the status information to network management module based on network traffic status updates provided by virtual resources or host devices and or other indicators of the status of virtual machines.

In some embodiments an external management entity can define or use three parameters associated with a virtual resource a device identifier a mobility domain and provisioning instructions or parameters . The mobility domain can define host devices on which virtual resources in the mobility domain can be instantiated and or onto which virtual resources in the mobility domain can be migrated. Additionally the mobility domain can define network devices to which the host device in the mobility domain are operatively coupled. The external management entity can provide or push provisioning instructions for virtual resources in the mobility domain to network devices in the mobility domain and not provide provisioning instructions to other network devices in a network. Thus in some embodiments only network devices that are part of a mobility domain receive provisioning information instructions or parameters for virtual resources in that mobility domain. More details related to mobility domains are set forth in U.S. patent application Ser. No. 12 346 630 filed on Dec. 30 2008 and entitled Methods and Apparatus for Distributed Dynamic Network Provisioning and U.S. patent application Ser. No. 12 346 632 filed on Dec. 30 2008 and entitled Methods and Apparatus for Distributed Dynamic Network Provisioning all of which are incorporated herein by reference in their entireties.

After the virtual resource has been instantiated on a host device the device identifier and provisioning instructions associated with the virtual resource are provided to a network management module at . For example a network management module can provide an API to an external management entity that the external management entity can use to communicate with the network management module. In some embodiments the order of steps and can be reversed to pre provision a network device. In other words in some embodiments an external management entity can provide a device identifier and provisioning instructions to a network management module before instantiating a virtual resource associated with the device identifier and the provisioning instructions. In some embodiments a network management module can provide the device identifier and provisioning instructions to a network device to pre provision the network device such that the network device is provisioned before the virtual resource is started.

In some embodiments provisioning instructions are updated based on a device identifier at . For example a network administrator can modify a routing policy of a virtual resource using an external management entity and the external management entity can provide the updated routing policy as a provisioning instruction and the device identifier of that virtual resource to a network management module. The network management module can update the provisioning instructions stored at the network management module or at a network device based on the device identifier. For example a network device can access provisioning instructions in a database based on the device identifier.

In some embodiments process can include more or fewer steps than illustrated in . For example in some embodiments provisioning instructions are not updated after they are provided to a network management module. In some embodiments process can include requesting and or receiving status information about the state of a virtual machine from a network management module.

A device identifier is received from a network device at . The device identifier is associated with a virtual resource or a physical server that the network device has detected at one of the ports of the network device. In some embodiments a network management entity can interpret the device identifier as a request for provisioning instructions and can access the provisioning instructions associated with device identifier and provide the provisioning instructions or provisioning instruction to the network device. For example the network management module can use the device identifier as a key to access the provisioning instructions in a database.

In some embodiments a network management module can also receive location information about the network device in the network. For example a device identifier of the network device and a port identifier of the port at which the virtual resource was detected can be sent to a network management module from a network device. In some embodiments the network management module can store the device identifier of the network device and the port identifier with the device identifier of the virtual resource detected and its associated provisioning instructions. In some embodiments information about the location in a network of a virtual resource can be referred to as a network location descriptor. For example a network location descriptor can include a device identifier of a network device and a port identifier. In some embodiments a network location descriptor defines a binding of a virtual resource to a port in a network.

In some embodiments a state of a virtual resource is determined at . For example a network device can provide a state status to a network management module based on network traffic statistics a status update from a virtual resource and or other status indicators. In some embodiments information about the state of the virtual resource is provided to an external management entity at . External management entity can use this information to for example determine modifications or updates to provisioning instructions associated with the virtual resource. In some embodiments a network management module also provides a location descriptor of the virtual resource.

In some embodiments process can have more or fewer steps than illustrated in . For example in some embodiments a network management module does not provide information about the status of virtual machines to an external management entity.

The device identifier and provisioning instructions are pushed to the network device at . In other words the network management module initiates the transfer of the device identifier. In some embodiments a network device can request for example at periodic intervals device identifiers of virtual resources from a network management module. Thus a network management module can provide the device identifier and provisioning instructions to a network device before the virtual resource associated with the device identifier and provisioning instructions is instantiated. This can be useful to prevent network traffic loss to a virtual resource during for example a migration of the virtual resource from one host device to another.

In some embodiments a state of a virtual resource is determined at . For example a network device can provide a state or status of a virtual resource to a network management module based on network traffic statistics a status update from a virtual resource and or other status indicators. In some embodiments information about the state of the virtual resource is provided to an external management entity at . External management entity can use this information to for example determine modifications or updates to provisioning instructions associated with the virtual resource. In some embodiments a network management module also provides a location descriptor of the virtual resource.

In some embodiments process can have more or fewer steps than illustrated in . For example in some embodiments a network management module does not provide information about the status of virtual machines to an external management entity. Additionally similar to process process can include determining a network location descriptor of the virtual resource and providing the network location descriptor to an external management entity.

A device identifier is received from a host device at . In some embodiments the device identifier is associated with a host device such as a server. In some embodiments the device identifier is received from a virtual resource hosted on the host device. In other words a host device or virtual resource is detected by the network device at . In some embodiments a virtual resource can broadcast or send a device identifier to a network device such as an access switch for example after the virtual resource is instantiated started or moved to a host device operatively coupled to the access switch. In some embodiments a host device such as a server can broadcast or send to a network device a device identifier of the virtual resources hosted by the host device after detecting or determining that the host device is operatively coupled to the network device. In some embodiments a network device can request a device identifier from a virtual resource after the network device detects or determines that the virtual resource is operatively coupled or connected to the network device. For example an access switch can detect that a virtual resource has been instantiated on a host device connected to a port of the access switch and then request information about the virtual resource via LLDP. In some embodiments a host device sends additional information such as information related to for example computational or network load on the host device capabilities of the host device and or one or more virtual resources hosted by the host device or other information related to the host device or virtual resource.

The network device can access for example a memory or database including device identifiers and provisioning instructions to access provisioning instructions for the host device or virtual resource detected at . After the provisioning instructions have been accessed the port of the network device at which the host device or virtual resource was detected is provisioned at . In other words the port is configured based on the provisioning instructions associated with the device identifier of the host device or virtual resource.

In some embodiments a port is provisioned by applying an ACL to the port and or configuring the port to operate on a VLAN specified by a VLAN tag of a provisioning instruction. In other embodiments provisioning includes configuring a port to operate as a layer 2 switch or a layer 3 switch. In other embodiments provisioning can include other configuration and or setup. In some embodiments a class of service parameter is included in a provisioning instruction and a port is provisioned with a class of service. In some embodiments a port of a network device is provisioned to operate as a layer 2 or layer 3 switch or router for a particular virtual resource operatively coupled to that port. In some embodiments a port configured or provisioned for a particular virtual resource can be referred to as a virtual port. In some embodiments a port of a network device can be configured as multiple virtual ports. For example a port can be configured to operate as a layer 2 switch or router for one virtual resource operatively coupled to that port and configured to operate as a layer 3 switch or router for another virtual resource operatively coupled to that port.

At status information about the virtual resource or host device is pushed to a network management module. In some embodiments the network management module pushes the status information to an external management entity. In some embodiments status information includes a device identifier of the network device that detected the virtual resource or host device. In some embodiments status information includes a port identifier of the port on the device identifier that detected the virtual resource or host device to which the virtual resource or host device is operatively coupled. In other embodiments status information can be related to a status or operational state of the virtual resource or host device. In some embodiments process includes more or fewer steps than illustrated in .

In some embodiments provisioning instructions are requested from for example a network management module at in response to receiving the device identifier at . In some embodiments a network device can request provisioning instructions from a network management module based on the device identifier. For example the network management module can store the provisioning instructions such that they are accessible based on the device identifier. The network device can provide the device identifier to the network management module the network management module can access the provisioning instructions e.g. in a database or table in a memory based on the device identifier. The network management module can send the provisioning instructions to the network device and the provisioning instructions can be received by the network device at .

After the provisioning instructions are received at the port at which the virtual resource or host device was detected is provisioned according to the provisioning instructions at . In other words the port is configured based on the provisioning instructions associated with the device identifier of the host device or virtual resource.

In some embodiments a port is provisioned by applying routing policy to the port and or configuring the port to classify data packets based on conditions included in a provisioning instruction. In other embodiments provisioning includes applying bandwidth limits permissions requirements restrictions on a destination transmission control protocol port field of incoming data packets and other rules to the port. In other embodiments provisioning can include other configuration and or setup.

At status information about the virtual resource or host device is pushed to a network management module. In some embodiments the network management module pushes the status information to an external management entity. In some embodiments status information includes a device identifier of the network device that detected the virtual resource or host device. In some embodiments status information includes a port identifier of the port on the device identifier that detected the virtual resource or host device to which the virtual resource or host device is operatively coupled. In other embodiments status information can be related to a status or operational state of the virtual resource or host device.

In some embodiments process includes more or fewer steps than illustrated in . For example a network device can request from a host device the device identifiers of virtual resources hosted by the host device. In some embodiments a network device can determine the state or status of a virtual device based on network traffic statistics a status update from a virtual resource and or other status indicators. In some embodiments the network device provides state or status information related to a state or status of a virtual resource to a network management module. In some embodiments the network device includes the device identifier of the virtual resource to which the status information relates. In some embodiments the network management module stores the status information based on the device identifier. In some embodiments the network management module provides the status information together with the associated device identifier to an external management entity.

After the virtual resource is instantiated host device or the virtual resource provides the device identifier to network device . Receipt of the device identifier notifies network device that the virtual resource is operatively coupled to a port of network device . Additionally the device identifier triggers provisioning of the port operatively coupled to the virtual resource. Network device provisions the port after receiving the device identifier and the provisioning instructions.

In some embodiments as illustrated in location and state information associated with the virtual resource are sent from network device to network management module . In some embodiments state information about the virtual resource is provided to external management entity from network management module . In some embodiments location information related to the virtual resource is provided from network management module to external management entity . The device identifier typically is included in such communication to identify the virtual resource to which the information or communication relates. As illustrated in data such as for example data to and from a web server executing as a virtual resource on host device can be exchanged between host device and a device not shown attached to the network via network device network device after the port has been provisioned. In some embodiments the network can be a multi stage switch fabric within for example a data center network.

After the virtual resource is instantiated host device or the virtual resource provides the device identifier to network device . Receipt of the device identifier notifies network device that the virtual resource is operatively coupled to a port of network device . Additionally receipt of the device identifier triggers a request for provisioning instructions or information from network device to network management module .

Network device requests including the device identifier provisioning information from network management module . Network management module selects provisioning instructions based on the device identifier and provides the provisioning information to network device . Network device provisions the port after receiving the device identifier and the provisioning information.

In some embodiments as illustrated in location and state information associated with the virtual resource are sent from network device to network management module . In some embodiments state information about the virtual resource is provided to external management entity from network management module . In some embodiments location information related to the virtual resource is provided from network management module to external management entity . The device identifier typically is included in such communication to identify the virtual resource to which the information or communication relates. As illustrated in data such as for example data to and from a web server executing as a virtual resource on host device can be exchanged between host device and a device not shown attached to the network via network device network device after the port has been provisioned. In some embodiments the network can be a multi stage switch fabric within for example a data center network.

Some embodiments include a processor and a related processor readable medium having instructions or computer code thereon for performing various processor implemented operations. Such processors can be implemented as hardware modules such as embedded microprocessors microprocessors as part of a computer system Application Specific Integrated Circuits ASICs and Programmable Logic Devices PLDs . Such processors can also be implemented as one or more software modules in programming languages as Java C C assembly a hardware description language or any other suitable programming language. A processor according to some embodiments includes media and computer code also can be referred to as code specially designed and constructed for the specific purpose or purposes. Examples of processor readable media include but are not limited to magnetic storage media such as hard disks floppy disks and magnetic tape optical storage media such as Compact Disc Digital Video Discs CD DVDs Compact Disc Read Only Memories CD ROMs and holographic devices magneto optical storage media such as floptical disks read only memory ROM and random access memory RAM devices such as solid state or FLASH drives. Examples of computer code include but are not limited to micro code or micro instructions machine instructions such as produced by a compiler and files containing higher level instructions that are executed by a computer using an interpreter. For example an embodiment of the invention may be implemented using Java C or other object oriented programming language and development tools. Additional examples of computer code include but are not limited to control signals encrypted code and compressed code.

While certain embodiments have been shown and described above various changes in form and details may be made. For example some features of embodiments that have been described in relation to one embodiment and or process for provisioning network device based on or in response to a virtual resource operatively coupled to the network device can be useful in other embodiments and or processes such as provisioning a network device based on or in response to a host device operatively coupled to the network device. Additionally embodiments described with reference to specific forms of communication such as communication between host device network devices network management modules and external management entities via a network are also applicable to other forms of communication such as communication via a command plane. Some embodiments that have been described in relation to a software implementation can be implemented as digital or analog hardware. Some embodiments that have been described in relation to virtual resources can be applicable to host devices such as physical servers. For example software modules can be implemented on semiconductor chips. Furthermore it should be understood that the systems and methods described herein can include various combinations and or sub combinations of the components and or features of the different embodiments described. Thus features described with reference to one or more embodiments can be combined with other embodiments described herein.

