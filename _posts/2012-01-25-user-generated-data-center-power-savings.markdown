---

title: User generated data center power savings
abstract: Technologies are described herein for providing power savings in a data center. Some example technologies may identify some user-provided hardware independent power saving codes from multiple virtual machines within the data center. The technologies may convert at least a portion of the user-provided hardware independent power saving codes into a device power management message specific to a computing system in the data center. The technologies may provide the device power management message to the computing system. The computing system may be configured to enable or disable one or more devices within the computing system according to the device power management message.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08938634&OS=08938634&RS=08938634
owner: Empire Technology Development LLC
number: 08938634
owner_city: Wilmington
owner_country: US
publication_date: 20120125
---
Unless otherwise indicated herein the materials described in this section are not prior art to the claims in this application and are not admitted to be prior art by inclusion in this section.

Conventionally power optimization of data centers may be performed at the hardware level using basic hardware level optimizations. For example the data center may perform per core power gating of one or more processor cores in the data center. The data center may also provide to a rack an amount of power less than the processor cores would utilize if all of the processor cores in the rack were to peak at once. This approach may take advantage of an observation that the processor cores in the rack rarely operate to peak at once. In the rare occurrences in which all of the processor cores do peak the data center may perform hardware coded frequency throttling.

The above described power optimization techniques are typically initiated and performed by the data center without input from users of the data center. Generally users of the data center may not provide input regarding power optimization to the data center for various reasons. First the data center may not provide a mechanism with which users can submit information regarding power optimization. Second the data center may not be forthright about its hardware specification or configuration. Without such hardware specification or configuration a user may have difficulty submitting relevant information regarding hardware level optimizations to the data center.

The present disclosure generally describes techniques for providing power savings in a data center. Some example methods may identify some user provided hardware independent power saving codes from multiple virtual machines within the data center. Example methods may convert at least a portion of the user provided hardware independent power saving codes into a device power management message specific to a computing system in the data center. Example methods may provide the device power management message to the computing system. The computing system may be configured to enable or disable one or more devices within the computing system according to the device power management message.

The present disclosure generally further describes some computer readable storage media adapted provide power savings in a data center. The computer readable storage media may include computer executable instructions stored thereon which when executed by a computer cause the computer to perform one or more operations. Some example computer executable instructions may cause the computer to identify some user provided hardware independent power saving codes included within application code to be executed by multiple virtual machines within a computing system in the data center. Example computer executable instructions may cause the computer to convert at least a portion of the user provided hardware independent power saving codes into a device power management message specific to the computing system. Example computer executable instructions may cause the computer to provide the device power management message to the computing system. The computing system may be configured to enable or disable one or more devices within the computing system according to the device power management message when the computing system executes the application code.

The present disclosure generally also describes some data centers adapted to provide power savings. Some example data centers may include a first computing system having a first processor based hardware configuration that includes a first device and a first management unit coupled to the first device. Example data centers may include a second computing system having a second processor based hardware configuration that includes a second device and a second management unit coupled to the second device. Example data centers may include a first driver executed by first computing system. The first driver is configured to identify a first portion of some user provided hardware independent power saving codes from application code executing on multiple first virtual machines within the first computing system convert the first portion of the user provided hardware independent power saving codes into a device power management message specific to the first computing system in the data center and provide the device power management message to the first management unit. The first management unit may be configured to enable and disable the first device according to the first device power management message. Example data centers may include a second driver executed by the second computing system. The second driver may be configured to identify a second portion of the user provided hardware independent power saving codes from the application code executing on multiple second virtual machines within the second computing system convert the second portion of the user provided hardware independent power saving codes into a second device power management message specific to the second computing system in the data center and provide the second device power management message to the second management unit. The second management unit may be configured to enable and disable the second device according to the second device power management message.

The foregoing Summary is illustrative only and is not intended to be in any way limiting. In addition to the illustrative aspects embodiments and features described above further aspects embodiments and features will become apparent by reference to the Figures and the following Detailed Description.

In the present Detailed Description reference is made to the accompanying Figures which form a part hereof. In the Figures similar symbols typically identify similar components unless context dictates otherwise. The illustrative embodiments described in the Detailed Description and Figures are not meant to be limiting. Other embodiments may be utilized and other changes may be made without departing from the spirit or scope of the subject matter presented herein. It will be readily understood that the aspects of the present disclosure as generally described herein and illustrated in the Figures can be arranged substituted combined separated and designed in a wide variety of different configurations all of which are explicitly contemplated herein.

This disclosure is generally drawn inter alia to technologies adapted to provide user initiated power management of a data center. The data center may make available to users e.g. customer programmer etc. multiple hardware independent power saving codes. For example the data center may make available to a user an application programming interface API with which the user can define one or more hardware independent power saving codes. The user may utilize the API to insert the defined hardware independent power saving codes into application code of the user s application.

The user may provide the application code to the data center for execution. One or more computing systems in the data center may be assigned to execute the application code. A computing system may include a paravirtualized driver adapted to convert the hardware independent power saving codes into a device power management message specific to the computing system. In particular the device power management message may be specific to the hardware related specification or configuration of the computing system. When the computing system executes the application code the computing system may be adapted to utilize the device power management message in order to manage power utilization. For example the device power management message may instruct an operating system or other hardware manager to enable disable or turn on off one or more hardware devices in the computing system.

Data centers can include multiple computing systems in which one or more of the computing systems include multiple virtual machines. That is multiple virtual machines may operate on the same hardware. In some implementations a hypervisor for example may be configured to aggregate hardware independent power saving codes or corresponding device power management messages from the multiple virtual machines within the same hardware. In some other implementations a web service may aggregate the hardware independent power saving codes or corresponding device power management messages on a separate computing system and provide the aggregated device power management messages to the hypervisor. The hypervisor may be configured to implement the aggregated hardware independent independent power saving codes or aggregated device power management messages.

Through the above technologies a user can initiate hardware level optimizations in the data center. The utilization of the hardware independent power saving codes and the paravirtualized drivers may allow the user to initiate hardware level optimizations without specific knowledge of the hardware related specification or configuration of the data center. Further the utilization of the API may allow a programmer without extensive knowledge of power management techniques to initiate hardware level optimizations by defining broader hardware independent power saving codes. In some instances the data center may also provide incentive to the user to initiate hardware level optimizations by logging power savings caused by the user s hardware independent power saving codes and providing a corresponding benefit to the user.

The first computing system A may include a first paravirtualized driver A. The second computing system B may include a second paravirtualized driver B. The third computing system C may include a third paravirtualized driver C. The paravirtualized drivers A C may be collectively referred to as paravirtualized drivers . The customer computer may include a customer compiler application code of a customer application and a power simulator .

In an illustrative implementation of the network architecture a customer of the data center may utilize the customer computer in order to create customer applications such as the customer application associated with the application code via the customer compiler . The customer may also desire to implement user initiated power management in the customer applications. To this end the customer may have information on a data center API . For example the customer may download sample code for the data center API from a remote data store not shown . In some embodiments the power simulator may also be included in the download or may be retrieved separately from the remote data store.

The data center API may provide a set of high level routines object structures or data structures that a programmer can utilize to insert hardware independent power saving codes into the application code . Each of the hardware independent power saving codes may be associated with a hardware device or some group of hardware devices. For example a particular hardware independent power saving code may be associated with disk access. While disk access may refer to access of a hard drive in some implementations of a computing system disk access may refer to access of a network attached storage in some other implementations of the computing system. The hardware independent power saving code allows the programmer to be unconcerned about the particular hardware specification or configuration of the computing systems in the data center . In some other examples additional hardware independent power saving codes may each be associated with various combinations of processors registers cache memory main memory secondary storage controllers adapters managers or other hardware devices.

The data center API may provide different approaches with which a programmer can define the hardware independent power saving codes inserted into the application code . In one example the programmer may define the hardware independent power saving codes to disable or turn off or keep disabled or turned off a hardware device or a group of hardware devices. In another example the programmer may define the hardware independent power saving codes to enable or turn on or keep enabled or turned on a hardware device or a group of hardware devices. In yet another example the programmer may define the hardware independent power saving codes to indicate that a hardware device or a group of hardware devices will be needed at some point in the future e.g. disk access will be needed in 10 milliseconds . This last example may allow a programmer to warm up a hardware device ahead of when it is needed so that any latency between when the hardware device is enabled or turned on and when the hardware device can be utilized is minimized or eliminated. In addition to the above examples one skilled in the art will appreciate even more detailed definitions of the hardware independent power saving codes .

In some cases the programmer may have little or no experience with creating optimal definitions of the hardware independent power saving codes such that power savings is maximized. In such cases the programmer may utilize the power simulator . The power simulator may analyze an execution of the application code with the hardware independent power saving codes and provide an estimation of power saved on a particular computing system. The programmer may utilize the power simulator in order to try different definitions or arrangements of the hardware independent power saving codes and to estimate an efficacy of each of the definitions or arrangements. The power simulator may also provide insight into the performance impact of power saving codes by for example simulating the delay when deactivated components are called.

After the programmer has inserted the hardware independent power saving codes into the application code the programmer may provide the application code to the data center . The data center may select one or more of the computing systems to execute the application code . In an illustrative example the computing systems may be selected to execute the application code . As the computing systems execute the application code the computing systems may read the hardware independent power saving codes .

When one of the computing systems reads the hardware independent power saving codes a corresponding one of the paravirtualized drivers may identify at least a subset of the hardware independent power saving codes that is applicable to the computing system. Each of the paravirtualized drivers may be configured to recognize certain hardware independent power saving codes as relevant for the particular hardware devices in the corresponding computing system. For example a hardware independent power saving code associated with disk access may not be applicable for a computing system that handles all memory accesses via random access memory without use of an external storage device.

When the paravirtualized drivers identify the corresponding subsets of the hardware independent power saving codes that are applicable to the corresponding computing systems the paravirtualized drivers may convert the subsets of the hardware independent power saving codes into corresponding device power management messages. In particular the first paravirtualized driver A may convert an applicable subset of the hardware independent power saving codes into a first device power management message A. Due to space limitations device power management is labeled as DPM in . The second paravirtualized driver B may convert an applicable subset of the hardware independent power saving codes into a second device power management message B. The third paravirtualized driver C may convert an applicable subset of the hardware independent power saving codes into a third device power management message C. The device power management messages A C may be collectively referred to as device power management messages . The applicable subsets of the hardware independent power saving codes may or may not overlap between the computing systems . Additional details regarding the various subsets of the hardware independent power saving codes associated with the computing systems are provided below with reference to .

In an illustrative implementation a device power management message may be an array of multiple symbols. The array may correspond to one of the computing systems . Each symbol may correspond to a hardware device in the corresponding one of the computing systems . A value representing each symbol may indicate an action performed by the corresponding one of the computing systems . For example each symbol may be represented by a bit value in accordance with some embodiments. Here a zero bit value may be used to instruct the computing system to disable or turn off or keep disable or turned off a particular hardware device and a one bit value may be used to instruct the computing system to enable or turn on or keep enabled or turned on a particular hardware device. In some other embodiments the number of possible values representing each symbol may be greater than two in order to represent additional actions or to represent more detailed actions.

The computing systems may implement the corresponding device power management messages generated by the paravirtualized drivers . In particular an operating system hypervisor or other hardware manager in each of the computing systems may perform the actions contained in or specified by a corresponding one of the device power management messages . The device power management messages may effectively enable disable or turn on off certain hardware devices in the corresponding computing systems at various times as specified or indicated by the programmer. When hardware devices are disabled or turned off the computing systems may utilize less power as power is not running to those hardware devices or is reduced. When hardware devices that are disabled or turned off are needed the device power management messages may enable or turn on those hardware devices. In some cases a hardware device may be turned on prior to being used in order to warm up. This can minimize or eliminate potential latency between when a hardware device is enabled or turned on and when the hardware device is actually ready to be utilized.

As the computing systems are executing the application code the computing systems may also provide current power utilization data to the logging system . The current power utilization data may indicate the amount of power utilized by the computing systems when user initiated power management as previously described was implemented. The logging system may also include original power utilization data . The original power utilization data may indicate the amount of power utilized by the computing systems when user initiated power management was not implemented.

The logging system may compare the current power utilization data with the original power utilization data in order to identify power savings resulting from the user initiated power management. The logging system may maintain a record of the identified power savings in a power savings log . The power savings may be organized by customer for example. The power savings caused by a customer as specified in the power savings log may be passed on to the customer in the form of some benefit such as a monetary benefit. For example the administrator of the data center may reduce the customer s bill by some amount. In this manner the administrator of the data center may utilize the benefit as an incentive to the customers to utilize user initiated power management.

When creating the data center API an administrator of the data center may identify possible device management messages that may be generated by the computing systems . These device management messages may be specific to the hardware specification or configuration of each of the computing systems . For example the computing systems may differ in terms of processors registers cache memory main memory secondary storage controllers adapters managers or other hardware devices. The computing systems may differ not only in the type of hardware devices but also in the number or existence of certain hardware devices. In an illustrative example the first computing system A may include a hard drive. The second computing system B may not include a hard drive or other external storage but may instead handle memory requests via random access memory. The third computing system C may not include a hard drive but may instead handle memory requests via a network attached storage.

The administrator of the data center may collect the possible device power management messages from the computing systems and abstract the collection of device power management messages into multiple classes. Such classes may be created such that groups of the same or related hardware devices shared between the various device power management messages are included in each class. For example a class related to disk access may include hard drives network attached storage and other external storage devices. The administrator may associate each class to a corresponding hardware independent power saving code. The administrator may configure the data center API to enable customers to insert various hardware independent power saving codes into the customer s applications.

The above process for generating the data center API may utilize the computing systems of the data center . As such while the data center API may be suitable for the particular data center the data center API may be sub optimal for other data centers having a different hardware specification or configuration. In some other embodiments the data center API may be a generalized data center API that is suitable for multiple data centers. Some implementations of the generalized data center API may utilize a wider variety of power saving codes than the hardware independent power saving codes in order to account for more possible hardware devices in computing systems. Some other implementations of the generalized data center API may utilize power saving codes that are configured at a higher level of generalization than the hardware independent power saving codes . For example the generalized data center API may be part of an industry standard for data center power management.

As previously described the data center API may enable a programmer to insert the hardware power saving codes in accordance with some embodiments. In some other embodiments the data center API may further enable the programmer to set flags utilized by a hypervisor not shown in of each computing system. Each flag may represent a configurable property of the hypervisor. For example a particular flag may inform the hypervisor that a particular process can be delayed up to a certain amount of time without impacting application performance. Such a delay may allow the hypervisor to proactively manage power peaks.

As previously described each of the paravirtualized drivers may operate in one of the computing systems and may be adapted to convert the hardware independent power saving codes into an appropriate device power management message for the corresponding computer system. In some embodiments a given computing system may operate multiple virtual machines each of which is capable of running a separate application. In such cases each virtual machine may be associated with its own set of hardware independent power saving codes from the corresponding application. A hypervisor operating on the computing system may aggregate the hardware independent power saving codes and corresponding device power management messages from the multiple virtual machines. In another realization the data center API may take the form of a data center service that receives power saving codes in the form of POST or GET Hypertext Transfer Protocol HTTP messages from the customer application. Such an API may then collect the power saving codes emitted by applications on a particular computing system and deliver them to the hypervisor on that machine for example via data center infrastructure management DCIM messaging. The delivered codes may be the original codes or codes combined with relevant instructions only as seen in and .

The multiple power management messages may or may not have some overlapping instructions that relate to the same hardware devices. In order to address the possibility of overlap a hypervisor corresponding to the computing system may be configured to combine the multiple device power management messages into a single power management message. In this manner the computing system may implement the single power management message even when multiple virtual machines are present. Additional details regarding combining multiple power management messages are provided below with reference to .

As previously described a customer can utilize the data center API to define the hardware independent power saving codes in accordance with some embodiments. In some other embodiments the responsibility of defining the hardware independent power saving codes may be shifted in part or in whole from the customer to the customer compiler . In such cases the customer compiler may be an advanced customer compiler adapted to define the hardware independent power saving codes based on an analysis of the application code . In particular the customer may instruct the advanced customer compiler to determine an optimal definition of the hardware independent power saving codes and to insert the hardware independent power saving codes into the application code . The advanced customer compiler may also be adapted to override or modify user determined hardware independent power saving codes with computer determined hardware independent power saving codes.

The first virtual machine A may be associated with a first instance of a paravirtualized driver A. The second virtual machine B may be associated with a second instance of the paravirtualized driver B. In an illustrative example the first virtual machine A may be assigned to run a first application having a first application code and the second virtual machine B may be assigned to run a second application having a second application code. The first instance of the paravirtualized driver A may convert relevant hardware independent power saving codes retrieved from the first application code into a first device power management message. The second instance of the paravirtualized driver B may convert relevant hardware independent power saving codes retrieved from the second application code into a second device power management message.

Paravirtualization may generally refer to techniques for presenting a software interface to the virtual machines that is similar to the underlying hardware of the computing system . For example the hypervisor may present paravirtualized network access to the virtual machines . When the virtual machines transmit data via the paravirtualized network access the data is not provided directly to network access hardware in the computing system . Rather the data may be provided to a buffer managed by the hypervisor . The hypervisor may be adapted to perform higher level management of the data in the buffer with respect to the network access hardware.

In the example illustrated in the hypervisor may be adapted to perform higher level management of multiple device power management messages associated with multiple virtual machines. Here the first device power management message may be a bit array having a value 00101 and the second device power management message may be a bit array having a value 01100 . In this example each bit in the bit array may correspond to a particular hardware device.

Here a one bit value may instruct the operating system or other hardware manager to enable or turn on or keep enabled or turned on the corresponding hardware device. A zero bit value may instruct the operating system or other hardware manager to disable or turn off or keep disabled or turned off the corresponding hardware device. Thus the first device power management message may contain instructions to enable or turn on or keep enabled or turned on the third and fifth hardware devices and to disable or turn off or keep disabled or turned off the first second and fourth hardware devices should be disabled or turned off or stay disabled or turned off . The second device power management message may contain instructions to enable or turn on or keep enabled or turned on the second and third hardware devices and to disable or turn off or keep disabled or turned off the first fourth and fifth hardware devices.

The hypervisor may be configured to perform a logical OR operation on the two bit arrays. In this example the hypervisor may compute a result of 01101 when performing the logical OR operation on the bit array 00101 and the bit array 01100 . The resulting bit array 01101 may instruct the operating system or other hardware manager to enable or turn on or keep enabled or turned on the second third and fifth hardware devices and to disable or turn off or keep disabled or turned off the first and fourth hardware devices.

The process may begin at block Identify Hardware Independent Power Saving Codes where a driver such as one of the paravirtualized drivers may be configured to identify at least a subset of the hardware independent power saving codes within application code to be executed by a computing system in a data center. The subset of the hardware independent power saving codes may be applicable to the computing system. In some implementations the subset of the hardware independent power saving codes may be identified from multiple virtual machines operating on the computing system. The computing system may include one or more hardware devices. Block may also be realized as a data center service that identifies hardware independent power saving codes in messages sent to it by applications using existing data center API messaging techniques. Block may be followed by block .

At block Convert the Hardware Independent Power Saving Codes into a Device Power Management Message the driver may be configured to convert the identified subset of hardware independent power saving codes into a device power management message specific to the specific hardware specification or configuration of the computing system. In some embodiments the device power management message may be implemented as an array of symbols where each symbol may represent one of the hardware devices in the computing system. The value represented by each symbol may be used to indicate an action to be performed on the corresponding hardware device. For example the action may be to enable disable or turn on off the corresponding hardware device. Block may be followed by block .

At block Provide the Device Power Management Message to a Computing System of a Data Center the driver may be configured to provide the device power management message to computing system. The computing system may be configured to implement the device power management message. In particular an operating system or other hardware manager within the computing system may enable disable or turn on off the appropriate hardware devices in accordance with the device power management message. In this manner power savings can be achieved within the data center. After block the process either repeat e.g. periodically continuously or on demand as needed or terminate.

The drives and their associated computer storage media provide storage of computer readable instructions data structures program modules and other data for the computer . The drives can include an operating system application programs program modules and a database . The computer further includes user input devices through which a user may enter commands and data. Input devices can include an electronic digitizer a microphone a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices may include a joystick game pad satellite dish scanner or the like.

These and other input devices can be coupled to the processor through a user input interface that is coupled to a system bus but may be coupled by other interface and bus structures such as a parallel port game port or a universal serial bus USB . Computers such as the computer may also include other peripheral output devices such as speakers which may be coupled through an output peripheral interface or the like.

The computer may operate in a networked environment using logical connections to one or more computers such as a remote computer coupled to a network interface . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and can include many or all of the elements described above relative to the computer . Networking environments are commonplace in offices enterprise wide area networks WAN local area networks LAN intranets and the Internet.

When used in a LAN or WLAN networking environment the computer may be coupled to the LAN through the network interface or an adapter. When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the WAN such as the Internet or the network . The WAN may include the Internet the illustrated network various other networks or any combination thereof. It will be appreciated that other mechanisms of establishing a communications link ring mesh bus cloud or network between the computers may be used.

According to some embodiments the computer may be coupled to a networking environment. The computer may include one or more instances of a physical computer readable storage medium or media associated with the drives or other storage devices. The system bus may enable the processor to read code and or data to from the computer readable storage media. The media may represent an apparatus in the form of storage elements that are implemented using any suitable technology including but not limited to semiconductors magnetic materials optical media electrical storage electrochemical storage or any other such storage technology. The media may represent components associated with memory whether characterized as RAM ROM flash or other types of volatile or nonvolatile memory technology. The media may also represent secondary storage whether implemented as the storage drives or otherwise. Hard drive implementations may be characterized as solid state or may include rotating media storing magnetically encoded information.

The storage media may include one or more program modules . The program modules may include software instructions that when loaded into the processor and executed transform a general purpose computing system into a special purpose computing system. As detailed throughout this description the program modules may provide various tools or techniques by which the computer may participate within the overall systems or operating environments using the components logic flows and or data structures discussed herein.

The processor may be constructed from any number of transistors or other circuit elements which may individually or collectively assume any number of states. More specifically the processor may operate as a state machine or finite state machine. Such a machine may be transformed to a second machine or specific machine by loading executable instructions contained within the program modules . These computer executable instructions may transform the processor by specifying how the processor transitions between states thereby transforming the transistors or other circuit elements constituting the processor from a first machine to a second machine. The states of either machine may also be transformed by receiving input from the one or more user input devices the network interface other peripherals other interfaces or one or more users or other actors. Either machine may also transform states or various physical characteristics of various output devices such as printers speakers video displays or otherwise.

Encoding the program modules may also transform the physical structure of the storage media. The specific transformation of physical structure may depend on various factors in different implementations of this description. Examples of such factors may include but are not limited to the technology used to implement the storage media whether the storage media are characterized as primary or secondary storage and the like. For example if the storage media are implemented as semiconductor based memory the program modules may transform the physical state of the semiconductor memory when the software is encoded therein. For example the software may transform the state of transistors capacitors or other discrete circuit elements constituting the semiconductor memory .

As another example the storage media may be implemented using magnetic or optical technology such as drives . In such implementations the program modules may transform the physical state of magnetic or optical media when the software is encoded therein. These transformations may include altering the magnetic characteristics of particular locations within given magnetic media. These transformations may also include altering the physical features or characteristics of particular locations within given optical media to change the optical characteristics of those locations. It should be appreciated that various other transformations of physical media are possible without departing from the scope and spirit of the present description.

While the subject matter described herein is presented in the general context of program modules that execute in conjunction with the execution of an operating system and application programs on a computer system those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the subject matter described herein may be practiced with other computer system configurations including hand held devices multi core processor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like.

The present disclosure is not to be limited in terms of the particular embodiments described in this application which are intended as illustrations of various aspects. Many modifications and variations can be made without departing from its spirit and scope as will be apparent to those skilled in the art. Functionally equivalent methods and apparatuses within the scope of the disclosure in addition to those enumerated herein will be apparent to those skilled in the art from the foregoing descriptions. Such modifications and variations are intended to fall within the scope of the appended claims. The present disclosure is to be limited only by the terms of the appended claims along with the full scope of equivalents to which such claims are entitled. It is to be understood that this disclosure is not limited to particular methods reagents compounds compositions or biological systems which can of course vary. It is also to be understood that the terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting.

With respect to the use of substantially any plural and or singular terms herein those having skill in the art can translate from the plural to the singular and or from the singular to the plural as is appropriate to the context and or application. The various singular plural permutations may be expressly set forth herein for sake of clarity.

It will be understood by those within the art that in general terms used herein and especially in the appended claims e.g. bodies of the appended claims are generally intended as open terms e.g. the term including should be interpreted as including but not limited to the term having should be interpreted as having at least the term includes should be interpreted as includes but is not limited to etc. . It will be further understood by those within the art that if a specific number of an introduced claim recitation is intended such an intent will be explicitly recited in the claim and in the absence of such recitation no such intent is present. For example as an aid to understanding the following appended claims may contain usage of the introductory phrases at least one and one or more to introduce claim recitations. However the use of such phrases should not be construed to imply that the introduction of a claim recitation by the indefinite articles a or an limits any particular claim containing such introduced claim recitation to embodiments containing only one such recitation even when the same claim includes the introductory phrases one or more or at least one and indefinite articles such as a or an e.g. a and or an should be interpreted to mean at least one or one or more the same holds true for the use of definite articles used to introduce claim recitations. In addition even if a specific number of an introduced claim recitation is explicitly recited those skilled in the art will recognize that such recitation should be interpreted to mean at least the recited number e.g. the bare recitation of two recitations without other modifiers means at least two recitations or two or more recitations . Furthermore in those instances where a convention analogous to at least one of A B and C etc. is used in general such a construction is intended in the sense one having skill in the art would understand the convention e.g. a system having at least one of A B and C would include but not be limited to systems that have A alone B alone C alone A and B together A and C together B and C together and or A B and C together etc. . In those instances where a convention analogous to at least one of A B or C etc. is used in general such a construction is intended in the sense one having skill in the art would understand the convention e.g. a system having at least one of A B or C would include but not be limited to systems that have A alone B alone C alone A and B together A and C together B and C together and or A B and C together etc. . It will be further understood by those within the art that virtually any disjunctive word and or phrase presenting two or more alternative terms whether in the Detailed Description claims or Figures should be understood to contemplate the possibilities of including one of the terms either of the terms or both terms. For example the phrase A or B will be understood to include the possibilities of A or B or A and B. 

In addition where features or aspects of the disclosure are described in terms of Markush groups those skilled in the art will recognize that the disclosure is also thereby described in terms of any individual member or subgroup of members of the Markush group.

As will be understood by one skilled in the art for any and all purposes such as in terms of providing a written description all ranges disclosed herein also encompass any and all possible subranges and combinations of subranges thereof. Any listed range can be easily recognized as sufficiently describing and enabling the same range being broken down into at least equal halves thirds quarters fifths tenths etc. As a non limiting example each range discussed herein can be readily broken down into a lower third middle third and upper third etc. As will also be understood by one skilled in the art all language such as up to at least greater than less than and the like include the number recited and refer to ranges which can be subsequently broken down into subranges as discussed above. Finally as will be understood by one skilled in the art a range includes each individual member. Thus for example a group having 1 3 elements refers to groups having 1 2 or 3 elements. Similarly a group having 1 5 elements refers to groups having 1 2 3 4 or 5 elements and so forth.

While various aspects and embodiments have been disclosed herein other aspects and embodiments will be apparent to those skilled in the art. The various aspects and embodiments disclosed herein are for purposes of illustration and are not intended to be limiting with the true scope and spirit being indicated by the following claims.

