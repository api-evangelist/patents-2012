---

title: Allocating and distributing labels for packet encapsulation
abstract: In one example, a network device receives a packet to be forwarded according to a label switching protocol, determines a service to be performed on the packet by a service network device, sends a label request message to the service network device, wherein the label request message indicates support for labels having a particular length, wherein the particular length is larger than twenty bits (e.g., forty bits), and wherein the label request message specifies the service to be performed on the packet, receives, in response to the label request message, a label mapping message defining a label of the particular length, appends the label to the packet to form a Multi-Protocol Label Switching (MPLS)-encapsulated packet, and forwards the MPLS-encapsulated packet according to the label switching protocol.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09088519&OS=09088519&RS=09088519
owner: Juniper Networks, Inc.
number: 09088519
owner_city: Sunnyvale
owner_country: US
publication_date: 20120615
---
The techniques of this disclosure relate to computer networks and more particularly to routing packets within computing networks.

A computer network is a collection of interconnected computing devices that exchange data and share resources. In a packet based network such as the Internet the computing devices communicate data by dividing the data into small blocks called packets. The packets are individually routed across the network from a source device to a destination device. The destination device extracts the data from the packets and assembles the data into its original form. Dividing the data into packets enables the source device to resend only those individual packets that may be lost during transmission.

Packet based computer network increasingly utilize label switching protocols for traffic engineering and other purposes. In a label switching network network devices often referred to as Label Switching Routers or LSRs use Multi Protocol Label Switching MPLS signaling protocols to establish Label Switched Paths LSPs . The LSRs utilize these MPLS protocols to receive MPLS label mappings from downstream LSRs and to advertise MPLS label mappings to upstream LSRs. When an LSR receives an MPLS packet from an upstream router it switches the MPLS label according to the information in its forwarding table and forwards the packet to the appropriate downstream LSR. In some cases upstream label allocation may be used.

Typically LSRs at the edge of the MPLS network referred to as Label Edge Routers LERs establish paths through the MPLS network in accordance with the MPLS signaling protocols. LERs may forward signaling messages throughout the network to distribute the appropriate labels in accordance with the MPLS signaling protocol. The LSRs which typically reside at the core of the MPLS network along a given path may then update their respective forwarding tables with the appropriate labels. Often LSRs update the forwarding tables to indicate whether to append swap or remove one of the labels corresponding to a given path.

Upon receiving a unit of data such as an IP packet entering the MPLS network LERs may then inspect the packet pre pend one or more MPLS labels to the packet based on the result of the inspection and forward the packet via the LSP associated with the label. Upon receiving the labeled packet downstream LSRs may append an additional label swap labels or remove the label based on the LSR s forwarding table. The LSR however need not inspect the MPLS packet but may instead base forwarding strictly on the one or more MPLS labels included within a label stack pre pended to the packet. In this respect the LSR may perform protocol independent forwarding and may be used to encapsulate other types of packets. As a result the LSRs may by forgoing detailed packet inspection more efficiently and quickly forward packets throughout the MPLS network.

In general techniques are described for allocating and distributing labels for packet encapsulation within a computer network such as a network including devices implementing Multi Protocol Label Switching MPLS protocols. Conventional MPLS provides techniques for encapsulating packets with 20 bit fixed format labels which may be used for tunneling the packets through the network via one or more network tunnels providing indications of services to be applied to packets or for other uses. In accordance with the techniques of this disclosure network devices are configured to utilize other sizes of labels such as 40 bit labels sometimes referred to as doublewide labels as well as to interpret the contents of a 40 bit label. Devices also advertise the use of a 40 bit label so that other devices can differentiate 20 bit labels from 40 bit labels.

In one example a method includes sending by a first network device a label request message to request a label mapping from a second network device wherein the label request message indicates support for labels having a particular length larger than twenty bits and wherein the label request message specifies a service provided by the second network device and to be performed on packets subsequently forwarded to the second network device in accordance with the label mapping receiving in response to the label request message a label mapping message defining a label of the particular length appending by the first network device the label to a packet to form a Multi Protocol Label Switching MPLS encapsulated packet and forwarding by the first network device the MPLS encapsulated packet according to a label switching protocol.

In another example a network device includes one or more network interfaces configured to send and receive network data and a control unit configured to send via the one or more network interfaces a label request message to request a label mapping from a service network device wherein the label request message indicates support for labels having a particular length larger than twenty bits and wherein the label request message specifies a service provided by the service network device and to be performed on packets subsequently forwarded to the service network device in accordance with the label mapping receive via the one or more network interfaces in response to the label request message a label mapping message defining a label of the particular length append the label to a packet to form a Multi Protocol Label Switching MPLS encapsulated packet and forward the MPLS encapsulated packet according to a label switching protocol.

In another example a computer readable storage medium includes instructions for causing a processor to send a label request message to request a label mapping from a second network device wherein the label request message indicates support for labels having a particular length larger than twenty bits and wherein the label request message specifies a service provided by the second network device and to be performed on packets subsequently forwarded to the second network device in accordance with the label mapping receive a label mapping message defining a label of the particular length append the label to a packet to form a Multi Protocol Label Switching MPLS encapsulated packet and forward the MPLS encapsulated packet according to a label switching protocol.

In another example a system includes a network device and a service network device. The network device is configured to send a label request message to request a label mapping from the service network device wherein the label request message indicates support for labels having a particular length larger than twenty bits and wherein the label request message specifies a service provided by the service network device to be performed on packets subsequently forwarded to the service network device in accordance with the label mapping. The service network device is configured to receive the label request message associate a label of the particular length with the service and send in response to the label request message a label mapping message defining the label of the particular length associated with the service to the network device. The network device is further configured to receive the label mapping message append the label to a packet to form a Multi Protocol Label Switching MPLS encapsulated packet and forward the MPLS encapsulated packet according to a label switching protocol. Moreover the service network device is configured to receive the MPLS encapsulated packet and perform the service on the packet based on the label.

In another example a method includes receiving by a first network device a label request message from a second network device wherein the label request message indicates support for labels having a particular length wherein the particular length is larger than twenty bits and wherein the label request message specifies a service to be performed on a packet associating a label of the particular length with the service sending in response to the label request message a label mapping message defining the label of the particular length associated with the service receiving a packet encapsulated with the label and performing the service on the packet based on the label.

The details of one or more examples are set forth in the accompanying drawings and the description below. Other features objects and advantages will be apparent from the description and drawings and from the claims.

Some of the labels in the MPLS stack sometimes referred to as doublewide MPLS labels in this disclosure have a width that is different than e.g. twice as wide as the width conventionally allocated to labels for MPLS. Such labels may for example have a width of 40 bits rather than 20 as conventionally used. Moreover a doublewide MPLS label may include two or more portions that define a service instance and service information within the corresponding service instance. Rather than having 20 bits allocated to the service instance and 20 bits allocated to the service information the labels of this disclosure may have any width. Thus the service instance portion may comprise fewer than or more than 20 bits and the service instance portion may also comprise more or fewer than 20 bits. Thus these portions may cross a conventional label boundary. Use of labels having a number of bits other than 20 bits such as 40 bits is also described in Guichard et al. USING NETWORK LABELS WITHOUT STANDARD DEFINED SYNTAX AND SEMANTICS U.S. patent application Ser. No. 13 243 310 filed Sep. 23 2011 which is hereby incorporated by reference in its entirety.

Although generally described as 40 bit labels or doublewide labels the labels of this disclosure may correspond to any labels other than conventional 20 bit labels without predefined semantics. Thus techniques described with reference to 40 bit labels or doublewide labels should also be understood as being applicable to other label lengths. An example of a 40 bit label forming part of a label stack is illustrated in as discussed in greater detail below.

In general 40 bit labels do not have predefined semantics. In accordance with the techniques of this disclosure network devices may define semantics for portions of the labels. For example network device A may associate a label with a service allocating a first portion of the label to define a service instance associated with the service and a second portion of the label to define service information associated with the service. As another example network device A may allocate a first portion of the label e.g. eight bits to identify a service instance associated with a service and a second portion of the label e.g. 32 bits to identify a subscriber of that service where the subscriber may correspond to one of client devices .

Network devices may support various label widths and various protocols for exchanging MPLS labels. For example network devices may support any or all of service labels having 20 bit widths 40 bit widths or other widths e.g. a number of bits greater than 20 bits. In general network devices indicate support for 40 bit label widths or other non 20 bit widths during session initialization which may be performed using techniques similar to those described in RFC 5036 Andersson et al. LDP Specification Network Working Group October 2007 available at http http tools.ietf.org html rfc5036 which is hereby incorporated by reference in its entirety. For example network devices may indicate support of 40 bit widths using procedures similar to those documented in RFC 5561 Thomas et al. LDP Capabilities Network Working Group July 2009 available at http tools.ietf.org html rfc5561 which is hereby incorporated by reference in its entirety.

For example using techniques similar to those of RFC 5561 but in accordance with this disclosure a network device such as network device A may advertise support for labels other than 20 bit labels such as 40 bit labels during session initialization according to RFC 5036. For example as discussed in greater detail with respect to below network device A may advertise support for 40 bit labels using a type length value TLV structure such as a TLV structure defined according to service instance capability indicator of . In accordance with the techniques of this disclosure the TLV structure may comprise a L4 L7 Service Instance capability indicator which indicates support for 40 bit labels. In some examples the L4 L7 Service Instance capabilities indicator is included as a forwarding equivalence class FEC element within a label request message such as label request message of as discussed in greater detail below.

Network device A acts as an ingress router to network in the example of . Because network device A represents an interface between the ingress to a network tunnel through network and devices external to network network device A may be referred to as a Label Edge Router or LER. Network device A receives packets from devices external to network determines tunnels through which to forward the packets determines next hops along the corresponding tunnel service instances and service information for the packets and constructs MPLS packets by prepending one or more labels representative of this determined information to the packets. In some examples network device A prepends a doublewide service label to a packet including information defining the service instance and service information for the packet and a transport label identifying a next hop along the tunnel. Collectively the service label and the transport label along with any additional or alternative labels form an MPLS label stack for the packet.

In order to obtain appropriate 40 bit labels for various service instances network device A may issue label requests to one or more of network devices B E that provide various services. For example after receiving a packet from one of client devices e.g. client device A network device A may determine that the packet is to be encapsulated according to MPLS and that client device A has subscribed to a service that is performed by network device B. Network device A may then determine whether MPLS labels have been already allocated for encapsulating and forwarding the packets to network device B. If not network device A sends to network device B which may be referred to as a service network device a label request message specifying the FEC to which client device A and the requested service correspond. The label request message also indicates that network device A supports 40 bit labels in this example.

In response to the label request message network device B associates a label with the service instance specified by the FEC of the label request message. Alternatively the label may have already been previously associated with the FEC and network device B may simply determine the label that is associated with the FEC. In any case network device B constructs a label mapping message that associates a label with the service instance of the label request message and sends the label mapping message to network device A. illustrates an example label mapping message as discussed in greater detail below. The label assigned to the service instance generally has a length that corresponds to the length of label indicated in the label request message e.g. 40 bits.

In either case network device A encapsulates the packet from client device A with a label along with other labels and label stack information in accordance with a label mapping message issued by network device B. Thus the label stack used to encapsulate the packet may include one or more 40 bit labels for one or more services as well as other labels such as labels associated with label switched paths e.g. a tunnel through network and a next hop along the tunnel.

Other network devices of network may use data of the label stack to determine next hops along the tunnel the tunnel itself and services to be applied to the packet. Because the next hop changes for each network device along the tunnel network devices other than network device A may swap the transport label of the MPLS label stack with another label that defines the next hop along the corresponding tunnel. Accordingly each of network devices may represent and be referred to herein as a Label Switching Router or LSR. While described with respect to this particular type of network device any MPLS enabled network device capable of routing and forwarding packets according to MPLS labels may implement MPLS to facilitate debugging troubleshooting or other actions within a network system such as network system . Service network devices of network device may use 40 bit labels or labels of other widths e.g. labels greater than 20 bits that were previously allocated by the service network devices to determine services to be applied to packets encapsulated by such labels.

As shown in network system includes network and client devices A N client devices . Client devices may be computing devices such as mobile devices tablets PDAs laptop or desktop computers or any other computing devices. Network may represent a public network that is owned and operated by a service provider to connect with numerous client devices such as client devices . As a result network may be referred to herein as a Service Provider SP network or alternatively as a core network. Example service providers include Verizon Communications Inc. or American Telephone Telegraph AT T Company.

Client devices may be networks or devices including mobile devices. The devices and networks of client devices may operate according to a wide variety of network protocols such as any of the 802.3X family of network protocols related to the Ethernet protocol any of the 802.1X family of wireless networking protocols Global System for Mobile Communications GSM Carrier Division Multiple Access CDMA High Speed Packet Access HSPA Long Term Evolution LTE an Internet Protocol IP protocol an Asynchronous Transfer Mode ATM protocol and a Transmission Control Protocol TCP . Moreover in the case where one or more of client devices is a network the network may comprise a Virtual Private Network VPN a Large Area Network LAN or a Wide Area Network WAN . Although not shown in for ease of illustration purposes each network may include a wide variety of interconnected computing devices or nodes such as web servers print servers application servers data servers workstations desktop computers laptop computers cellular or other mobile devices Personal Digital Assistants PDAs and any other device cable of connecting to a computer network via a wireless and or wired connection.

Network may interconnect the plurality of client devices according to any number of protocols. Commonly however a transit network such as network that interconnects various client devices to one another implements a mechanism or protocol for quickly switching packets which may comprise packets or any other discrete unit of data. Often these transit networks that implement these mechanisms are referred to as a data switched network or packet switched network. Multi Protocol Label Switching MPLS refers to one example of a mechanism that network may implement to switch packets via one or more paths through network . And according to the techniques of this disclosure network may also implement MPLS to provide service information on a per packet basis. For purposes of illustration it is assumed herein that network implements the MPLS data carrying and service identification mechanisms and network may therefore be referred to herein as an MPLS network. While described below with respect to MPLS the doublewide label distribution techniques may be utilized by any network device that employs labels to forward packets through a network.

The MPLS data carrying mechanism of network may be viewed as lying between layer 2 and layer 3 of the Open Systems Interconnection OSI model and is often referred to as a layer 2.5 protocol. Network may implement one or more MPLS protocol to negotiate and establish LSPs for encapsulating and forwarding many different types of packets through the network including IP packets. MPLS may be considered a protocol in the sense that it comprises a suite of protocols that network may implement to exchange MPLS labels within a network such as a Label Distribution Protocol LDP and for establishing traffic engineered LSPs such as a Resource Reservation Protocol RSVP or extensions thereof e.g. a so called RSVP Traffic Engineering or RSVP TE protocol . Further information regarding MPLS and the various features of MPLS as well as general architectural information regarding MPLS can be found in Request for Comments RFC 3031 titled Mutiprotocol Label Switching Architecture prepared by the Network Working Group of the Internet Engineering Task Force IETF dated January 2001 which is hereby incorporated by reference in its entirety.

The techniques described in this disclosure extend MPLS to provide information about OSI layer 4 referred to as the transport layer through layer 7 referred to as the application layer services and applications as well as subscriber information about those services and applications. In this manner service instances may be referred to as L4 L7 service instances. The techniques of this disclosure extend MPLS to provide information about higher level OSI model services to network devices such as network devices of network .

As stated above network devices form and utilize doublewide MPLS labels in accordance with the techniques of this disclosure where the doublewide MPLS labels may include service instance portions and service information portions. The service instance portions generally define a context in which values of the service information portions are interpreted. Thus the service information portion of a service label may also be referred to as a context portion of the service label. Network devices supporting the use of context portions of service labels such as network devices read a context value from the context portion of the label in the MPLS label stack.

The value of the context portion of the label may be used to identify a table within the network device in which to look up data for a service information portion of the label following context portion of the label. The context or service instance may generally correspond to any or all of a client device from which the packet originated and or a destination of the packet. Thus a context portion of a label may assign a specific context to a service information portion of label immediately following the context portion of the label. As an example of how context labels affect an underlying MPLS label a network device would interpret differently two MPLS encapsulated packets with the same values for service information portions of MPLS labels but with different context portions of the labels. Further information regarding conventional use of context labels may be found in Request for Comments RFC 5331 titled MPLS Upstream Label Assignment and Context Specific Label Space prepared by the Network Working Group of the Internet Engineering Task Force IETF dated August 2008 which is hereby incorporated by reference in its entirety. Rather than having two separate labels one for context and one for service information within the context network devices in the techniques of this disclosure utilize a single label having a context or service instance portion and a service information portion. The label may be wider than conventional MPLS labels and the portions allocated to service instance and service information may be more or less than the conventional width of MPLS labels.

In addition to MPLS labels having a greater number of bits compared to ordinary MPLS labels network devices may interpret doublewide MPLS labels flexibly and free from standard defined semantics. As an example a user such as an administrator may configure network devices to interpret doublewide labels as having two or more portions. Typically a doublewide MPLS label is interpreted as having two or more portions such as a service instance portion and a service information portion. A network device may associate the value of the service instance portion of a doublewide label with a context for interpreting values of the service information portion. The service information portion defines one or more network services or applications network devices apply to the packet encapsulated by the doublewide MPLS label. Some services and or applications that a network device may provide based on the value of a service instance portion of a doublewide MPLS label includes content caching or any other information related to a network service application or protocol. This disclosure also provides techniques for using TLVs to define syntax and semantics for service labels having more than 20 bits e.g. 40 bit labels.

Network devices supporting the use of doublewide MPLS labels also allow network devices that do not interpret doublewide MPLS labels on the same network while still allowing the use of doublewide MPLS labels. That is the use of doublewide MPLS labels may provide for backwards compatibility with conventional network devices that are configured to perform MPLS. To allow a mix of the two types of network devices on the same network a user such as a network administrator may configure network devices to interpret the service instance and service information portions as having the same width. Network devices supporting doublewide MPLS labels in accordance with the techniques of this disclosure interpret the first portion as the service instance label and the second portion as the service information portion.

As an example of a mixed network of doublewide supporting and non supporting devices works network device A may support doublewide MPLS labels. Network devices A and C may support doublewide MPLS labels whereas network device B may not. Network device A may apply a doublewide MPLS label with equal service instance and service information portions to a packet of data and forward the MPLS encapsulated packet to network device B. Because network device B does not support doublewide MPLS labels network device B may interpret the service information and service information portions of the doublewide MPLS label as a context label and a standard MPLS label respectively. Network device B may be ignorant of the service information associated with the label and may simply forward the MPLS encapsulated packet to a next hop in this example network device C. Network C interprets the service instance and service information portions may apply one or more services to the encapsulated packet and may forward the packet onto its next hop.

One of the flexible aspects of doublewide MPLS labels is that a user such as an administrator may configure and or reconfigure network devices using a programming interface such as an application programming interface API to change the widths associated with the different portions of doublewide MPLS labels and any associations the portions of the labels may have with contexts and services within those contexts. In this manner doublewide labels in accordance with the techniques of this disclosure are considered to have no standard specified syntax or semantics. Instead the doublewide labels are assigned syntax and semantics after devices implemented to recognize and interpret doublewide labels have been deployed. The administrator may select the width in bits of the service instance portions of MPLS labels based on the number of services that network devices may provide or is expected to provide. To allocate space for a higher number of services the administrator may configure network devices to allocate a larger number of bits to the service information portions of doublewide MPLS labels and fewer bits to the service instance portions. If the number of services or the amount of service information is lower the administrator may configure network devices to allocate fewer bits to the service information portions.

An administrator may configure network devices to allocate the size of the service instance portion in a similar manner to the service information portion of a doublewide MPLS label. As stated above the service instance portion of a doublewide MPLS label may contain subscriber identifiers or other data for identifying a service context. As an example an administrator may configure how network devices interpret the size of the service instance portion of a doublewide MPLS label depending upon the number of clients and or servers or number of service instances that are to be represented within network . An administrator may also allocate more bits to the service instance portion of the label if the administrator wants to provide additional room that may be needed later for additional subscribers but is not currently needed.

As another example of an administrator reconfiguring network devices the administrator may choose to reconfigure network devices to allocate more bits to the service information portions of doublewide MPLS labels and fewer bits to the service instance portion of the label if the number of subscribers to one or more services becomes larger and the amount of label space allocated to the service information portion is insufficient to give each subscriber a unique identifier.

In yet another example the network administrator may choose to reconfigure network devices to allocate more bits to the service instance portions of doublewide MPLS labels. An administrator may choose to allocate more bits to the service information portion of the labels if the administrator wishes to add additional services to the network and the number of bits available in the service information portion of the label is insufficient to allocate each service provided a particular service instance value without having duplicates. The administrator may also choose to allocate additional bits to the service information portion so there is additional space available for future services that the administrator may add.

To configure network devices a user such as an administrator may use a software development kit SDK . The SDK may allow the user to compile native code object code bytecode or other programs which may be executed on a network device with a compatible programming interface and to provide instructions to network devices via APIs provided by network devices . The administrator may create the configuration information on a computing device not connected to and with a different hardware architecture from the network device to be configured. The computing device executes the SDK allowing the user to develop configuration data for network devices . In this manner the administrator may create the configuration information on the device. The computing device may then provide the configuration data to network devices via the APIs. Additionally or alternatively one or more of network devices may implement the SDK and a user may log into the network device execute the SDK on the network device via a remote device and cause the network device to distribute the configuration data throughout network .

As an example the administrator may use a desktop computer to compile configuration information for network device A using an SDK such as the Junos or Junos Space SDKs. The SDK may allow the administrator to create configuration information for the one or more network devices using one or more programming languages such as C C Java a domain specific language such as a routing language or any other programming language.

Once the administrator has created configuration information detailing how one or more of network devices may interpret doublewide MPLS labels and wishes to upload it to one or more network devices the administrator may use a variety of techniques to reconfigure the network device. The administrator may initiate a network transfer such as secure copy protocol SCP file transfer protocol FTP or another similar network file transfer session which transmits the administrator s network configuration information to the one or more network devices to be configured. The administrator may also configure the one or more network devices using a command line interface CLI which may be executed locally or remotely.

Rather than configure each of network devices individually an administrator may configure one network device using a network transfer or command line interface and rely on network devices to use an extended version of a protocol such as Label Distribution Protocol LDP Resource Reservation Protocol Traffic Engineering RSVP TE Multi Protocol Border Gateway Protocol MP BGP or another protocol capable of distributing MPLS label information to distribute configuration information associated with one or more portions of doublewide MPLS labels over network . As an example an administrator may configure one network device such as network device A using a command line interface or a network transfer mechanism described above. Network device A may utilize a label distribution protocol to establish an LSP for one or more service instances and transmit the configuration information related to the one or more service instances to other network devices on the same LSP.

In some examples network devices implement LDP or another protocol such as MP BGP to establish at least one path through network . For the purposes of example LDP is discussed as one example implementation. A network device may also implement LDP to establish other paths such as path through network . In addition to establishing routes through network network may utilize an extended version of LDP to communicate service information to other network devices on network such as network devices B and D. That is devices implementing a protocol may communicate information about one or more level through level services to provide for an MPLS encapsulated packet as well as specific information about those one or more services. Network device A may communicate the syntax of the service labels such as doublewide labels including service instance and service information portions in accordance with the techniques of this disclosure to one or more upstream or downstream network devices such as network devices in network . In accordance with the techniques of this disclosure label request messages specify a service instance as well as support for a particular length of label e.g. a 40 bit label and request a label of that particular length for the service instance. In response label mapping messages associate a label of that particular length for the service instance.

More particularly network may include the above described plurality of network devices which may as described above represent LSRs. Network devices A C and E may each reside at an edge of network and as a result may each be referred to herein as a Label Edge Router or LER. Typically LERs such as network devices A C and E establish the one or more paths through network in accordance with a network protocol such as LDP. Further information regarding LDP the various services and features of LDP as well as general information regarding labels and the applicability of LDP to MPLS can be found in Request for Comments RFC 3037 titled LDP Applicability prepared by the Network Working Group of the Internet Engineering Task Force IETF dated January 2001 which is hereby incorporated by reference in its entirety.

In the example of network device A establishes a first label switched path through network that flows from network device A to network device B via link A and from network device B to network device C via link B. Network device A also establishes a second label switched path that flows from network device A to network device D via link A and from network device D to network device E via link B. Paths such as paths and typically represent a unidirectional flow of network traffic that is established according to one of the MPLS signaling protocols for example LDP . Thus when network device A establishes paths and in accordance with a version of LDP path may only transmit or carry network traffic from network device A to network device C but may not transmit or carry network traffic from network device C to network device A. Similarly path may only transmit or carry network traffic from network device A to network device E but may not transmit or carry network traffic from network device E to network device A.

Considering this unidirectional flow of network traffic along a given path for each path one network device may be referred to as an ingress network device while another network device may be referred to as an egress network device. With respect to path network device A may represent the ingress network device and network device C may represent the egress network device. With respect to path network device A may again represent the ingress network device and network device E may represent the egress network device. Network devices B and D neither act as an ingress point for traffic entering path nor an egress point for traffic leaving path and may be referred to as transit network devices. When network devices B and D swap labels e.g. transport labels of the MPLS label stack network devices B and D may be referred to as label switching routers or LSRs.

Network device A may establish paths and by first discovering other of network devices that implement LDP. These other network devices may be referred to as LDP peers. Upon discovering each LDP peer network device A may initiate an LDP session with the discovered one of network devices . Network device A may then via the LDP session negotiate parameters for the LDP session such as a method by which to exchange labels including doublewide MPLS labels. After negotiating the parameters network device A and the other one of network devices exchange one or more labels in accordance with the negotiated parameters.

Network device A may for example establish an LDP session with network device B to exchange labels. Network device A may via the established LDP session advertise bindings between a Forwarding Equivalence Class FEC and a label or a portion of a label such as a service instance portion. A FEC refers to a set of packets that a given network device forwards to the same next hop out of the same interface with the same treatment such as applying the same service or services applied to the packets. A portion of a doublewide MPLS label may uniquely identify a FEC and each of network devices may maintain a plurality of FECs. Network device A may also receive bindings between FECs and labels from network devices B and D. Network device A may resolve the bindings received from network devices B and D with those already maintained by network device A to resolve paths through network . Network devices may each perform this exchange until each of network devices maintains a representation of a topology of network .

As an example of how establishing a FEC works with doublewide MPLS labels an administrator may configure network device A which is an LER in the example of with doublewide MPLS label configuration information as described above. The configuration information may include data about how many portions are present in one or more doublewide MPLS labels the width in bits of each portion of the labels data type information about each portion one or more services to provide for packets encapsulated with the one or more doublewide MPLS labels and other information about how to interpret the portions of the labels. Information about how to interpret the portions may instruct network devices on what operations to perform on the various portions of doublewide MPLS labels and what services to provide for packets encapsulated in a doublewide MPLS label stack.

Example operations that a network device may perform on a label stack including one or more doublewide MPLS labels include removing a label adding a label swapping a label or performing an operation on a portion of a label. A network device such as an LSR may remove a label corresponding to one or more services when those one or more services have been completed. An LSR may also remove a label when MPLS encapsulated traffic is leaving the MPLS enabled portion of the network.

Network device A may utilize a protocol such as LDP or MP BGP to establish a first label switched path through network that flows from network device A to network device B via link A and between B and C over link B. Network device A may further establish a FEC with network device B which associates the values one or more portions of one or more doublewide MPLS labels with a next hop one or more services and with an interface over which to send the one or more labels. Additionally network device A may send configuration information about MPLS labels to network device B via link A using an extended form of LDP or MP BGP. Network device B may communicate the same information via link B to network device C also using a form of LDP or MP BGP and may also establish a FEC between one or more service instance values a network interface and a next hop to network device C.

Based on this topology network devices may resolve the topology to determine the one or more paths through network by which to forward packets associated with each FEC. In some instances these bindings may be referred to as a binding or association between a label or portion of a label and a next hop as the FEC may be used to determine the next hop along a given path and one or more services to apply to MPLS encapsulated packets associated with the FEC. Based on these bindings each path through network may be associated with one or more and often a plurality of labels identifying each subsequent next hop along the path and the services to provide for packets associated with each FEC. Network device A may also reserve bandwidth or other resources via the managing aspect or protocol of MPLS e.g. RSVP. By using the managing aspect of various protocols network devices A may also ensure a particular quality level or class of service for a given path. For example network device A may reserve 50 mega bits per second Mbps of bandwidth for path and or path in accordance with RSVP.

After establishing path in accordance with MPLS network device A may receive a packet from one of client devices . Upon receiving the packet network device A may determine to which FEC the packet belongs by inspecting the packet and based on the FEC append an MPLS stack including a corresponding doublewide MPLS label to the packet. Network device A may push a plurality of labels onto the label stack. Network device A may then route the packet along a given path e.g. path through network according to the label.

Assuming network device A forwards the packet via path network device B receives the packet with the appended label stack. Network device B may examine the top label which may comprise a transport label that defines a next hop corresponding to network device B relative to network device A for path . Based on stored configuration information network device B interprets one or more portions of a doublewide label of the label stack and applies one or more services to the MPLS encapsulated packet based on the doublewide label. Network device B may then swap all or a portion of the label with another label or portion of a label that network device B associates with path where the swap may comprise removing or popping the original label appended by network device A and pushing or appending a new label or altering one or more portions of a current label. For example network device B may pop the transport label that identifies network device B as the next hop then push a label that identifies network device C as the next hop.

After receiving the MPLS encapsulated packet network device B may also alter one or more portions of one or more labels in the MPLS label stack. Network device B may add to subtract from or perform another mathematical or Boolean operation such as an XOR or NAND operation on one or more portions of one or more doublewide MPLS labels. Network device B may alter portions of a label because altering the portions may provide state information about one or more services to a next network device receiving the packet. In an instance where network device B is performing a subscriber billing service to the received packet for example a portion of a label may indicate the usage of a quantity such as bandwidth or traffic that a customer has used. Network device B may increment a portion of a doublewide MPLS label to indicate to the next network device that the customer associated with the MPLS label has used some additional amount of the resource.

After receiving the packet network device B may forward the packet via link B to network device C along path . Network device C may inspect the label and determine that a label or label portion identifies path which may cause network device C to remove the packet from path and forward the packet to its destination. Network device C may remove or pop the label from the label stack of the MPLS header and forward the packet to the destination indicated in the original packet header such as an IP header instead of forwarding the packet based on the MPLS header. Network device C may then forward the packet to the destination via any one of a number of routes as indicated in by the plurality of arrows exiting network device C. In this manner network may implement the MPLS protocol to establish paths and switch packets along the paths according to the labels associated with the paths. In this respect paths such as path may be referred to as a Label Switched Path LSP .

Similar to LSP network may also form other LSPs such as LSP . In forming LSP network devices A D and E may discover each other and build a network topology using a protocol such as LDP or MP BGP. LSP flows from network device A via link A to network device D and then via link B to network device E. As with link packets flowing over LSP may flow unidirectionally from ingress device A to egress device E. Network devices A D and E may establish one or more FECs over LSP using a protocol such as LDP RSVP or MP BGP. The labels that network devices A D and E transmit may differ from labels transmitted over path however. As stated above a network device may associate a FEC with one or more services a next hop and an interface of a network device. Network device A may transmit MPLS encapsulated packets with labels having one set of label portions over with one set of widths over one interface such as the interface between network device A and network device B and another set of label portions with a different set of label widths over another interface such as the interface between network device A and network device D.

Network may implement MPLS for a number of reasons. First MPLS moves path selection and route decisions to the edges of the network thereby improving forwarding performance in the core of the network. To illustrate in the example of only network device A or LERs inspect the packet to determine to which FEC the packet belongs and the destination indicated by the original packet respectively. Transit network devices B and D however forward packets based on the appended label and may forgo further packet inspection. While LERs such as network devices A C and E may establish and terminate paths and therefore act as ingress and egress network devices that perform this inspection prior to admitting packets to and removing packets from paths transit network devices such as network device B and D may forgo the inspection and instead forward packets based on the labels regardless of the protocol to which each packet corresponds. As a result transit network devices such as network device B may more efficiently forward packets as network device B may forward packets based on labels without having to perform additional inspection of packets.

Second MPLS networks such as network may transmit any type of packet or network traffic that corresponds to a number of different protocols including IP. In this respect MPLS may not require any protocol specific hardware architecture in the core of the network and may be considered protocol independent. Thus service providers may employ MPLS network to service a wide variety of customers that implement a wide variety of network architectures to form customer networks such as customer networks .

Network device A may push the determined label into the label stack of the packet and forward the packet with this MPLS header to network device B. Network device B of network may receive the packet from network device A of network via a path established in accordance with LDP or another protocol as described above. The received packet may include one or more labels each containing two or more portions such as a service instance portion and a service information portion. The service instance portion may define one or more services to provide for the MPLS encapsulated packet and the service information portion may indicate something about the one or more services associated with the packet.

Network device B may typically examine the service instance and service information portions of the encapsulated packet. Based on the contents of the service instance portion and service information portion network device B may apply one or more services to the packet. Services may include one or more of traffic logging subscriber identification content information or another network service or application. Network device B may swap the top label of the stack with a new label maintained by network device B where the new label is associated with network device C as a next hop along path . Network devices B may then forward the packet according to the new label to network device C via path . Network device C may pop all labels of the MPLS label stack before forwarding the original packet e.g. the packet as received by ingress network device A to a destination indicated by the packet.

In the example of router includes interface cards A N collectively IFCs that receive and send packets such as packet flows via network links A N and A N respectively. Router may include a chassis not shown having a number of slots for receiving a set of cards including IFCs . Each card may be inserted into a corresponding slot of the chassis for electrically coupling the card to routing engine via high speed switch and internal data paths A N collectively internal data paths .

Switch also provides an interconnect path between each of IFCs . Switch may comprise for example switch fabric switchgear a configurable network switch or hub or other high speed switching mechanisms. Internal data paths may comprise any form of communication paths such as electrical paths within an integrated circuit external data busses optical links network connections wireless connections or other communication paths. IFCs may be coupled to network links A N and A N via a number of physical interface ports not shown . Generally IFCs may each represent one or more network interfaces by which router may interface with links of a network such as links of network .

In general routing engine operates as a control unit for router . Routing engine may comprise one or more of a processor a programmable processor a general purpose processor an integrated circuit an Application Specific Integrated Circuit ASIC a Field Programmable Gate Array FPGA or any type of hardware unit capable of implementing the techniques described herein. Routing engine may further include computer readable storage medium such as dynamic memory for example Random Access Memory or RAM dynamic RAM or DRAM and a cache and or static memory for example static RAM or SRAM a Read Only Memory or ROM and Flash memory and storage devices such as Compact Disc ROMs or CDROMs hard drives RAM drives and Digital Video Disc DVD drives. In some instances the computer readable storage medium may include instructions that cause a programmable processor to perform the techniques described herein.

Routing engine may further include an MPLS protocol module and a user interface UI module . MPLS protocol module represents a hardware and or software module that implements the above described signaling and path management protocols such as the above described LDP the above described RSVP the above described MP BGP or other protocols. When implemented in software it is assumed that router includes corresponding hardware for executing the software such as a processor and for storing software instructions such as a computer readable storage medium. MPLS protocol module may be extended to implement not only these protocols but also the doublewide MPLS transmission techniques described herein. User interface module may represent a hardware and or software module that presents a user interface with which an administrator or other user such as administrator admin may interact to configure and or view label service information as described below in more detail.

Routing engine may further include and maintain routing information that reflects a topology of a network. Router may maintain routing information in the form of one or more tables databases link lists radix trees databases flat files or any other data structure. Based on routing information routing engine generates forwarding information A N forwarding information for IFCs .

Each of the IFCs includes a forwarding component not shown that forwards packets in accordance with forwarding information and MPLS forwarding tables A N MPLS forwarding tables generated by routing engine . Specifically the forwarding components of IFCs determine a next hop for each inbound packet based on forwarding information identify the corresponding one of IFCs associated with the next hop and relay the packets to the appropriate one of IFCs via switch and corresponding ones of data paths .

IFCs may further include and maintain MPLS forwarding tables . MPLS forwarding tables correlate labels or portions of labels associated with incoming MPLS packets with next hops. In accordance with the techniques of this disclosure MPLS forwarding tables may be extended to associate one or more services associated with one or more portions of a doublewide MPLS label. The forwarding table may include definitions for a type and length or set amount of information of each portion of a doublewide MPLS label. That is each of MPLS forwarding tables may comprise an entry for one or more portions of a label where each label entry includes one or more fields indicating the number of fields and size of each portion of the label one or more actions to take with respect to the label one or more services to provide for the label and or a scope or data type and a set length or amount associated with each portion of the label. This aspect of MPLS forwarding table is illustrated in as service information to denote that this service information is a derivative of service information .

In one example routing engine maintains master copies of MPLS forwarding tables and distributes copies of these tables to each of IFCs . Routing engine may add remove or modify entries to MPLS forwarding tables and may distribute updated copies to IFCs . In another example routing engine may parse the information in MPLS forwarding tables and send only that forwarding information needed by each of IFCs based on the interfaces associated with each of IFCs .

According to the label distribution techniques e.g. of LDP router may resolve paths through a network such as network to which router belongs. To resolve paths routing engine of router may employ MPLS protocol module to swap or alter routing information with other peer network devices. In the case of LDP MPLS protocol module may establish one or more LDP sessions with LDP peers to exchange routing information . Routing information may therefore include the label space utilized by routing engine in routing MPLS packets through the network. Routing engine may therefore establish or participate in one or more paths through the network in accordance with the MPLS protocol as implemented by MPLS protocol module .

When establishing paths MPLS protocol module may dynamically negotiate or otherwise specify service information associated with portions of doublewide MPLS labels used in forwarding MPLS packets along a given path to be established. Admin may configure MPLS protocol module with one or more FECS each with two or more label portions and a type and length or set amount of information to negotiate for each path via interactions with a user interfaces presented by user interface module . Alternatively admin may statically configure a MPLS protocol module similar to MPLS protocol module of each network device such as router within a given network to define the type and the length or set amount of service information to transmit with each corresponding label or portion of a label.

While shown as directly interacting with user interface module admin may interact with another intermediate device such as a provisioning system or device to facilitate more efficient configuration of network devices. That is admin may specify either the negotiation parameters to be used in dynamically determining the scope e.g. the type and length or set amount of the service information associated with each portion of a label or scope of the service information itself when statically configured . The provisioning system may then interact with each network devices such as router on behalf of admin to configure these devices according to the input entered by admin to the provisioning system. In this instance user interface module may present a user interface by which the provisioning system or any other computing device may interact to input configuration information such as that discussed above. The user interface may in these instances accept as input scripts or other files that define a list of commands to quickly input the configuration. The user interface in these instances may comprise a Command Line Interface CLI for example.

After establishing the path and possibly negotiating the scope of service information to be associated with labels used along the path routine engine may update routing information to reflect the path and install within one or more of forwarding information and MPLS forwarding tables the bindings or correlations between labels and next hops for the particular path as well as define service information within respective MPLS forwarding tables . Routine engine may continue to resolve paths and update IFCs in this manner and as a result routing engine may resolve and install a first and second path or in other words a plurality of paths within IFCs .

IFCs may meanwhile receive packets. As router is assumed for purposes of illustration to represent a transit network device IFCs may generally receive MPLS packets that correspond to a particular one of the plurality of paths resolved by routing engine . IFCs may inspect for each MPLS packet a top most or first label included within the label stack defined by the MPLS header of the MPLS packet. IFC A may for example upon receiving an MPLS packet via link A and inspecting the MPLS packet in this above manner use the determined top most label as a key into MPLS forwarding table A. IFC A may retrieve a label entry based on the top most label and determine a next hop associated with the label an action to take e.g. pop swap or push and the scope of the service information e.g. a type and length or set amount of service information based on service information .

IFC A may then take the action specified by the corresponding label entry. If the action indicates a swap as is most likely considering that router is assumed to be a transit network device IFC A may replace swap the top most label with the label indicated by the action and possibly add remove and or update the service information associated with the previous label based on service information . That is the label entry may indicate that the service information associated with the label needs to be swapped with other service information or that a portion of the service information associated with a label need to be replaced or removed. Alternatively IFC A may swap the label leaving any corresponding service information unaltered.

If the action indicates a pop IFC A may remove the top most label from the label stack. If the action indicates a push IFC A may remove the top most label of the label stack and any service information associated with the label in a manner similar to that of the pop only the push action adds the set amount of service information defined by label entry below the associated label in the stack.

After taking the above described action IFC A may forward the MPLS packet to the one of IFCs associated with the next hop as specified by forwarding information A. That is IFC A accesses forwarding information A using the next hop as a key to retrieve an entry associated with the next hop. The next hop entry may comprise a label assigned to the next network device along the path associated with the top most label. The next hop entry may identify one of IFCs that couples to the next hop and IFC A may forward the MPLS packet via switch and data paths to the identified one of IFCs which proceeds to forward the MPLS packet via a corresponding one of outbound links .

Admin may further interact with a user interface either the same user interface described above or a different or second user interface to view information associated with one or more doublewide MPLS packets. In particular admin may interact with the user interface to cause routing engine to configure IFCs to begin monitoring the traffic associated with one or more portions of one or more MPLS labels.

Once configured in this manner IFCs may upon accessing a particular label entry determine a type and length of each portion of service information associated with a particular label as described above. To log this information IFCs may each access the label portions associated with one or more labels in the label stack of each MPLS header as defined by each corresponding label entry in MPLS forwarding table A e.g. as defined by service information . IFCs may copy parse or otherwise determine this service information according to the corresponding scopes of the service information and forward this service information to routing engine . Routine engine may maintain this logged service information as service information . Service information may include an entry for each label that identifies a type and scope of the service information as well as the actual service information extracted by IFCs .

User interface module may access service information to retrieve one or more entries of service information . Admin either directly or via another computing device such as a provisioning system may filter service information by providing criteria by which user interface module retrieves entries of service information . For example admin may indicate that the user interface only present service information corresponding to a particular criteria such as a particular service. User interface module may then access service information and retrieve only service information that corresponds to the criteria specified by admin . Moreover admin may indicate a particular source address identified by the service information and user interface may only retrieve that service information that indicates the particular value specified by admin .

Further user interface module may perform other operations to facilitate the ease with which admin views and retrieves the data. In this respect user interface module may pre process the retrieved portions of service information to present these portions graphically in a chart table graph or other graphical manner via the user interface. As a result admin may more quickly view and understand service information and possibly better troubleshoot or debug paths such as path through a network such as network .

Router shown in is illustrated for the purposes of example. Alternatively router may have a centralized control unit having a routing engine and a forwarding engine. In this example forwarding functionality is not distributed to IFCs but centralized within the forwarding engine. However for ease of illustration the principles of the techniques of this disclosure are illustrated in the context of router .

Router represents an example of a network device that may issue a label request message. Likewise router also represents an example of a service network device that may provide services to packets encapsulated by a service label e.g. a 40 bit label issued in a label mapping message. A control unit such as one or more hardware based processing elements configured to execute routing engine may be configured to perform one or more tasks associated with generating a label request message and or a label mapping messages as well as to perform services when router is configured as a service network element.

Thus router represents an example of a network device including one or more network interfaces configured to send and receive network data. Router may further include a control unit configured to receive via the one or more network interfaces a packet to be forwarded according to a label switching protocol. The control unit may then determine a service to be performed on the packet by a service network device. The control unit may also send via the one or more network interfaces a label request message to the service network device. In accordance with the techniques of this disclosure the label request message may indicate support for labels having a particular length where the particular length is larger than twenty bits. The label request message may also specify the service to be performed on the packet. The control unit of router may then receive via the one or more network interfaces in response to the label request message a label mapping message defining a label of the particular length. Accordingly the control unit may append the label to the packet to form a Multi Protocol Label Switching MPLS encapsulated packet and forward the MPLS encapsulated packet according to the label switching protocol.

Router also represents an example of a service network device that is configured to receive a label request message from a second network device. The label request message may indicate support for labels having a particular length such that the particular length is larger than twenty bits. The label request message may also specify a service to be performed on a packet by router . The control unit may then associate a label of the particular length with the service. The control unit may also send in response to the label request message a label mapping message defining the label of the particular length associated with the service. Subsequently the control unit of router may receive a packet encapsulated with the label and perform the service on the packet based on the label.

A 40 bit label such as 40 bit label has no pre defined semantics and may be programmed with any format suitable for the forwarding and identification of traffic to or from service nodes e.g. one or more of network devices of . The programmability of a label in accordance with the techniques of this disclosure may provide a more flexible service deployment model as the format of the label may be tailored to meet specific service requirements. For example the first 8 bits may be programmed to identify a service instance and the next 32 bits may be used to identify a subscriber of that service. Network devices may program a 40 bit label such as 40 bit label using the techniques of this disclosure e.g. as described with respect to .

As described in RFC 5561 LDP enhancements requiring LDP capability advertisements are specified in a capability document that describes the motivation for the enhancement specifies the behavior of LDP when the enhancement is enabled includes an IANA considerations section that requests IANA assignment of a code point from a TLV namespace and describes the interpretation and processing of associated capability data if present. Indicator fulfills these requirements of RFC 5561 to describe an L4 L7 service instance capability when instantiated as discussed below.

Indicator includes U bit F bit type length value TLV code point length value S bit reserved field and compatibility data . U bit corresponds to an Unknown TLV bit as described in RFC 5036. The value of U bit can be either 0 or 1 as specified in the associated capability document. F bit corresponds to a Forward Unknown TLV bit as described in RFC 5036. In this example the value of F bit is set to 0 because a Capability Parameter TLV is sent only in Initialization and Capability messages which are not forwarded.

TLV code point is a TLV that identifies a specific capability. In this example TLV code point has a length of 14 bits and a value that is an Internet Assigned Numbers Authority IANA assigned code point from a TLV namespace for a given capability as requested in the associated capability document. S bit is a state bit that indicates whether a sender of indicator is advertising or withdrawing the capability corresponding to TLV code point . In this example the value of S bit is assigned and interpreted as follows 

Reserved field represents 7 bits of data that are reserved for future use. Length value is a 16 bit field that describes a length of compatibility data . Compatibility data includes any information about the capability in addition to TLV code point needed to fully specify the capability. The method for interpreting and processing compatibility data is specific to TLV code point and is described in the capability document that specifies the capability as described in RFC 5561. As noted above the length of compatibility data is variable as described by length value .

In accordance with the techniques of this disclosure compatibility data describes a particular capability associated with a particular 40 bit label. Thus when one of network devices advertises a capability associated with a particular 40 bit label and the corresponding TLV code point does not fully describe the capability the network device includes data in compatibility data that further describes the capability. This description may include for example syntax descriptions that partition the 40 bits of a 40 bit label into two or more fields and semantics for each of the fields of the 40 bit label. The semantics generally indicate how values for the fields are to be interpreted and may depend on values of other fields.

Thus in some examples a network device advertising an L4 L7 Service Instance capability constructs an L4 L7 Service Instance capability indicator according to the format of indicator including data in the fields based on the description of these fields above. For example in accordance with the techniques of this disclosure the network device sets the value of TLV code point for a L4 L7 Service Instance based on an IANA value for the TLV code point of the capability and further describe the capability in capability data .

Length field describes the length of 40 bit label field which in this case is 40 bits. In other examples for other lengths of labels length field describes the appropriate length of the label being advertised. That is if an N bit label is being advertised where N is an integer length field has a value indicating that the field corresponding to 40 bit label field which in this case would be an N bit label field has N bits. Moreover in this example 40 bit label TLV includes the actual 40 bit label value in 40 bit label field . Thus as opposed to the 20 bit labels advertised using the Generic Label TLV of RFC 5036 an N bit label TLV similar to 40 bit label TLV may be used to advertise N bit e.g. 40 bit labels in accordance with the techniques of this disclosure.

FEC element includes L4 L7 service instance address family field and PreLen field . Address family field includes data that encodes an address family for the forwarding equivalence class of the L4 L7 service instance. PreLen field generally corresponds to a field that describes a length in bits of an address prefix that follows PreLen field . In this example FEC element does not include an address prefix field and therefore PreLen field has a value of zero. FEC element represents an example of a FEC Element having a type name of L4 L7 Service Instance with a type of 0x99 and a value of no value. That is the value indicates zero value octets.

In this example L4 L7 Service Instance TLV includes U bit F bit type field length field vendor ID field and L4 L7 service instance parameters data . U bit and F bit may conform substantially to U bit and F bit respectively in terms of their semantics. Type field includes a value in the range of 0x3E00 to 0x3EFF. The leading zeros of the hexadecimal 3 of Type field may be omitted such that type field has a length of fourteen bits to represent the value in the range of 0x3E00 to 0x3EFF rather than sixteen bits. That is the binary prefix of the value of type field may comprise 1 1 1 1 1 0 rather than 0 0 1 1 1 1 1 0 where underscores   represent non prefix bits having values of either 0 or 1. 

In this example label request message includes zero bit label request field message length field message identifier ID field FEC TLV field and optional parameters field . Label request field generally indicates that label request message is a request for a label e.g. a 40 bit label. Message length data includes data specifying the length of label request message e.g. of message ID field FEC TLV field and optional parameters field .

Message ID field generally includes data specifying a unique identifier for label request message . FEC TLV field includes the L4 L7 Service Instance TLV elements described with respect to . Thus a service node receiving label request message can use the data of FEC TLV field to determine procedures for allocating a 40 bit label and for extracting optional parameters for the network node that requested the label. Optional parameters field includes data that contains an instantiation of the L4 L7 Service Instance TLV of .

Although the lengths of FEC TLV 40 bit label TLV and optional parameters are shown as 32 bits it should be understood that the lengths of these fields may be other than 32 bits in various examples. For example 40 bit label TLV may have a length of 72 bits as discussed with respect to 40 bit label TLV of .

In this example 40 bit label TLV includes data defining a 40 bit label TLV such as 40 bit label TLV of . Label mapping field includes data indicating that label mapping message includes a mapping from a 40 bit label to a label request such as label request message . A service node may use the data of a label request message to construct a label mapping message. That is a service node may receive a label request message similar to label request message and respond with a label response message such as label mapping message . In this manner label mapping message generally includes data of a label that is mapped to a service specified in a label request message such as label request message .

Initially in this example a network device e.g. an LER constructs a label request message that specifies a service and support for a label of a particular length e.g. 40 bits . The label request message may conform to label request message of . Thus the label request message may include a forwarding equivalence class FEC TLV that specifies a FEC for the corresponding client device as well as optional parameters. The FEC TLV may conform to FEC element of while the optional parameters may conform to L4 L7 Service Instance TLV of . In any case the network device sends the label request message for the service to the service network device.

The service network device receives the label request message from the network device . In response the service network device associates a label with the service instance . In particular the label has a length as indicated by the label request message. For example when the label request message indicates support for 40 bit labels the label mapping message includes a 40 bit label that is mapped to the service instance. The label mapping message may conform to label mapping message of . Thus the label mapping message may include a 40 bit label TLV which may conform to 40 bit label TLV of . Of course similar data structures may be used to support other lengths of labels e.g. other labels having lengths longer than 20 bits.

The service network device then sends the label mapping message including the label of the particular length to the requesting network device . Accordingly the network device retrieves the label from the label mapping message . For example the network device may extract data corresponding to 40 bit label of 40 bit label TLV included in a 40 bit label TLV of the label mapping message assuming that the label mapping message conforms to label mapping message of . These label distribution techniques may therefore be described as downstream on demand in nature in that a network device requests a label from a downstream service network device as the label is needed. The network device may then program elements of the forwarding plane of the network device based on the data of the label. For example assuming that the network device conforms to router routing engine may update routing information using data of the label which may further cause reprogramming of forwarding information in IFCs . Steps through may be performed for each service requiring a label. Thus the network device may obtain labels having lengths greater than 20 bits for one or more services of one or more various service instances using these techniques.

In this example after receiving labels for one or more services a client device sends a packet which is to be tunneled through a network e.g. network of . In addition the client device is a subscriber to one or more particular services namely the services provided by the service network device for which labels were distributed as discussed above. The network device receives the packet from the client device and determines service instances for the services to be performed on the packet . For example the network device may determine a FEC for the packet based on the client device from which the packet was received. The network device then encapsulates the packet with the label corresponding to the service within that service instance . Of course the network device may also encapsulate the packet with other labels e.g. other service labels for other services and or labels associated with a network tunnel through network .

The network device then forwards the encapsulated packet . In particular the network device forwards the encapsulated packet along a network tunnel of which the service network device is also an element. The service network device may therefore comprise one of the hops along the network tunnel. Upon receiving the encapsulated packet the service network device performs the corresponding service on the packet . The service network device may examine labels of the label stack that encapsulates the packet to determine services to be performed on the packet as well as a next hop along the network tunnel.

After performing the service on the packet the service network device forwards the packet to the next hop. In some examples the service network device swaps a label at the top of the label stack prior to forwarding the packet. Thus the service network device may comprise a label switch router LSR of the network. If the service network device is the last device along the network tunnel e.g. an egress LER the service network device may decapsulate the packet by removing the label stack from the packet. Alternatively in some examples the penultimate device along the network tunnel may decapsulate the packet by removing the label stack from the packet.

In some examples rather than requesting one or more labels for one or more service instances prior to receiving packets of the service instances the network device may request a label for a service in response to receiving a packet from a subscriber to that service.

In this manner represents an example of a method including sending by a first network device a label request message to request a label mapping from a second network device wherein the label request message indicates support for labels having a particular length larger than twenty bits and wherein the label request message specifies a service provided by the second network device and to be performed on packets subsequently forwarded to the second network device in accordance with the label mapping receiving in response to the label request message a label mapping message defining a label of the particular length appending by the first network device the label to a packet to form a Multi Protocol Label Switching MPLS encapsulated packet and forwarding by the first network device the MPLS encapsulated packet according to a label switching protocol.

Likewise also represents an example of a method including receiving by a first network device a label request message from a second network device wherein the label request message indicates support for labels having a particular length wherein the particular length is larger than twenty bits and wherein the label request message specifies a service to be performed on a packet associating a label of the particular length with the service sending in response to the label request message a label mapping message defining the label of the particular length associated with the service receiving a packet encapsulated with the label and performing the service on the packet based on the label.

The techniques described in this disclosure may be implemented at least in part in hardware software firmware or any combination thereof. For example various aspects of the described techniques may be implemented within one or more processors including one or more microprocessors digital signal processors DSPs application specific integrated circuits ASICs field programmable gate arrays FPGAs or any other equivalent integrated or discrete logic circuitry as well as any combinations of such components. The term processor or processing circuitry may generally refer to any of the foregoing logic circuitry alone or in combination with other logic circuitry or any other equivalent circuitry. A control unit comprising hardware may also perform one or more of the techniques of this disclosure.

Such hardware software and firmware may be implemented within the same device or within separate devices to support the various operations and functions described in this disclosure. In addition any of the described units modules or components may be implemented together or separately as discrete but interoperable logic devices. Depiction of different features as modules or units is intended to highlight different functional aspects and does not necessarily imply that such modules or units must be realized by separate hardware or software components. Rather functionality associated with one or more modules or units may be performed by separate hardware or software components or integrated within common or separate hardware or software components.

The techniques described in this disclosure may also be embodied or encoded in a computer readable medium such as a computer readable storage medium containing instructions. Instructions embedded or encoded in a computer readable medium may cause a programmable processor or other processor to perform the method e.g. when the instructions are executed. Computer readable media may include non transitory computer readable storage media and transient communication media. Computer readable storage media which is tangible and non transitory may include random access memory RAM read only memory ROM programmable read only memory PROM erasable programmable read only memory EPROM electronically erasable programmable read only memory EEPROM flash memory a hard disk a CD ROM a floppy disk a cassette magnetic media optical media or other computer readable storage media. It should be understood that the term computer readable storage media refers to physical storage media and not signals carrier waves or other transient media.

Various examples have been described. These and other examples are within the scope of the following claims.

