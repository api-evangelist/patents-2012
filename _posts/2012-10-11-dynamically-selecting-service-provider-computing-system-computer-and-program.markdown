---

title: Dynamically selecting service provider, computing system, computer, and program
abstract: To enable a service consumer that can use multiple service providers to dynamically select a service provider that satisfies a service level requested for each processing method to be called at the time of execution of an application. A cloud service directory (CSD) provides an evaluation table indicative of the evaluation of resource information on each cloud service provider (CSP), and each cloud service consumer (CSC) defines service levels requested by itself and items of resource information associated with each processing method as a request table and an association table, respectively. Then, the formats of these tables and the definitions of the service levels are standardized throughout the entire computing system. This enables each CSC to use a distribution table in order to select and use an appropriate CSP for each processing method.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09176710&OS=09176710&RS=09176710
owner: International Business Machines Corporation
number: 09176710
owner_city: Armonk
owner_country: US
publication_date: 20121011
---
This application claims priority under 35 U.S.C 119 to Japanese Patent Application No. 2011 229031 filed Oct. 18 2011 the entire text of which is specifically incorporated by reference herein.

The field of the invention is data processing or more specifically methods and systems for dynamically selecting a service provider a computing system a computer and a program.

There has been known a federated cloud service environment for transparently providing interoperable multiple incompatible cloud services for example Japanese Patent Application Publication 2011 129117 . There have also been known a primary cloud server a method of providing a service and a computer program for example see Japanese Patent Application Publication 2011 118451 where a service level agreement is dynamically determined based on the actual level of a service provided by a primary cloud or updated preference information to select and provide the service including a secondary cloud.

Various service providers provide software and data through networks such as the Internet in the form of services. Service consumers use infrastructures provided by the service providers to build applications for services provided by themselves.

Since building an application depending only on one service provider is risky for the service consumer a configuration for using multiple service providers to disperse risk has been closely watched. In such a configuration it is desired that the service consumer should select the optimum service provider as needed even after building and running an application.

It is an object of the present invention to enable a service consumer that can use multiple service providers to dynamically select a service provider that satisfies a service level requested for each method to be called at the time of execution of an application.

In view of such an object a first aspect of the present invention provides a method of sending methods to a service provider from a service consumer using the service provider to provide a service to end users the method including a step of acquiring an evaluation table representing in a common format resource information on multiple service providers as information indicative of each service provided by each service provider and or the quality or state of the service provider which is the basis of selection of a service provider made by the service consumer a step of referring to the acquired evaluation table to extract for each method to be called by the service consumer a service provider that satisfies a service level requested by the service consumer for the method from multiple service providers and a step of converting the method into an instruction to the service provider extracted for the method when the service consumer calls the method and sending the instruction to the service provider.

A second aspect of the present invention is based on the method of the first aspect further including a step of updating the evaluation table each time the resource information on any of multiple service providers is changed wherein in the acquiring step the updated evaluation table is acquired.

A third aspect of the present invention is based on the method of the second aspect wherein in the extracting step when a failure occurs in one of multiple service providers the evaluation table in which resource information indicating that the one service provider is unavailable is reflected is referred to extract for each method to be called by the service consumer a service provider that satisfies the service level from the multiple service providers except the one service provider.

A fourth aspect of the present invention is based on the method of any one of the first to third aspects wherein in the extracting step the acquired evaluation table is referred to extract for each method to be called by the service consumer a service provider that satisfies a service level from multiple service provider where the service level is requested by the service consumer for an associated item as an item of the resource information predefined to be associated with the method.

A fifth aspect of the present invention is based on the method of the fourth aspect wherein in the extracting step the acquired evaluation table is referred to extract for each method to be called by the service consumer a service provider that satisfies a service level from multiple service provider where the service level is requested by the service consumer for the associated item of the method including an item of information indicative of a state of the service provider in which the quality of a service provided by the service provider could be affected.

A sixth aspect of the present invention provides a method of sending methods to a service provider from a service consumer using the service provider to provide a service to end users the method including a step of acquiring resource information respectively from multiple service providers at predetermined intervals where the resource information is information indicative of each service provided by each service provider and or the quality or state of the service provider which is the basis of selection of a service provider made by the service consumer a step of creating or updating an evaluation table representing in a common format the resource information on the multiple service providers based on the acquired latest resource information a step of acquiring the updated evaluation table each time the evaluation table is updated a step of referring to the evaluation table in response to acquiring the updated evaluation table to extract for each method to be called by the service consumer a service provider that satisfies a service level from multiple service providers where the service level is requested by the service consumer for an associated item of the method as an item of the resource information predefined to be associated with the method and including an item of information indicative of a state of the service provider in which the quality of a service provided by the service provider could be affected and a step of converting the method into an instruction to the service provider extracted for the method when the service consumer calls the method and sending the instruction to the service provider wherein in the extracting step when a failure occurs in one of the multiple service providers the evaluation table in which resource information indicating that the one service provider is unavailable is reflected is referred to extract for each method to be called by the service consumer a service provider that satisfies the service level from the multiple service providers except the one service provider.

A seventh aspect of the present invention provides a computing system including a service consumer using a service provider to provide a service to end users and a service directory for providing an evaluation table representing in a common format resource information on multiple service providers as information indicative of each service provided by each service provider and or the quality or state of the service provider which is the basis of selection of a service provider made by the service consumer wherein the service consumer includes a table acquiring section for acquiring the evaluation table from the service directory an extraction section for referring to the evaluation table acquired by the table acquiring section to perform processing for extracting for each method to be called by an own terminal thereof a service provider that satisfies a service level requested by the own terminal for the method from the multiple service providers and a conversion section for converting the method into an instruction to the service provider extracted for the method when the own terminal calls the method and sending the instruction to the service provider.

An eighth aspect of the present invention is based on the computing system of the seventh aspect wherein the service directory includes a resource information acquiring section for acquiring the resource information respectively from multiple service providers at predetermined intervals a creation section for creating or updating the evaluation table based on the latest resource information acquired by the resource information acquiring section and a notification section for notifying the service consumer of the evaluation table created or updated by the creation section.

A ninth aspect of the present invention is based on the computing system of the eighth aspect wherein the extraction section performs the extraction processing when the table acquiring section acquires a new evaluation table.

A tenth aspect of the present invention provides a computer for using a service provider to provide a service to end users the computer including a table acquiring section for acquiring an evaluation table representing in a common format resource information on multiple service providers as information indicative of each service provided by each service provider and or the quality or state of the service provider which is the basis of selection of a service provider made by an own terminal thereof an extraction section for referring to the evaluation table acquired by the table acquiring section to perform processing for extracting for each method to be called by the own terminal a service provider that satisfies a service level requested by the own terminal for the method from multiple service providers and a conversion section for converting the method into an instruction to the service provider extracted for the method when the own terminal calls the method and sending the instruction to the service provider.

An eleventh aspect of the present invention is based on the computer of the tenth aspect wherein the table acquiring section acquires the evaluation table created or updated based on the latest resource information acquired respectively from multiple service providers at predetermined intervals and the extraction section performs the extraction processing when the table acquiring section acquires a new evaluation table.

A twelfth aspect of the present invention provides a computer for providing an evaluation table for multiple service providers to a service consumer using a service provider to provide a service to end users the computer including a resource information acquiring section for acquiring resource information respectively from multiple service providers at predetermined intervals wherein the resource information is information indicative of each service provided by each service provider and or the quality or state of the service provider which is the basis of selection of a service provider made by the service consumer a creation section for creating or updating the evaluation table representing in a common format the resource information on multiple service providers based on the latest resource information acquired by the resource information acquiring section and a notification section for notifying the service consumer of the evaluation table created or updated by the creation section.

A thirteenth aspect of the present invention provides a program for causing a computer which uses a service provider to provide a service to end users to send methods to the service provider the program causing the computer to function as a table acquiring section for acquiring an evaluation table representing in a common format resource information on multiple service providers as information indicative of each service provided by each service provider and or the quality or state of the service provider which is the basis of selection of a service provider made by the computer an extraction section for referring to the evaluation table acquired by the table acquiring section to extract for each method to be called by the computer a service provider that satisfies a service level requested by the computer for the method from multiple service providers and a conversion section for converting the method into an instruction to the service provider extracted for the method when the computer calls the method and sending the instruction to the service provider.

According to the present invention a service consumer that can use multiple service providers can dynamically select a service provider that satisfies a service level requested for each method to be called at the time of execution of an application.

A preferred embodiment of the present invention will now be described with reference to the accompanying drawings.

The end user client is for example a terminal such as a PC. The end user accesses an application of each CSC to use a service provided by the CSC .

The CSC is a server for providing its own service to the end users via an application built by using the infrastructure provided by each CSP . Examples of the CSCs include a financial institution a municipal office a retailer and the like.

The CSP is a server for providing software and data to each CSC through a network in the form of services. Examples of the CSPs include Amazon.Com Inc. Google Inc. Microsoft Corporation and the like. In the embodiment a form implemented by multiple CSPs like the computing system in is called a multi cloud.

The CSD is a server for publishing resource information on each CSP collectively on a network. This resource information is information indicative of each service provided by the CSP and or the quality or state of the CSP which is information used by each CSC as the basis for selecting a CSP . For example the resource information includes information on each service provided by each CSP the kind of service performance security level and the like information on the operational status of each CSP operating non operating the presence or absence of a failure power efficiency and the like and information indicative of the financial health the continuity of the service of each CSP . The CSD plays a role in evaluating each CSP so to speak from the position of a third party.

In the meantime some libraries called meta cloud APIs for enabling each CSC to use multiple CSP on a common API Application Program Interface have been introduced. This will enable the developer of a CSC to describe in a standardized API an application running on any given CSP . However in a meta cloud API there is a need to give a parameter indicating which CSP is targeted when a method is used for a CSP .

Under present circumstances the following steps are considered in order for a CSC to always use the optimum CSP even after an application of the CSC corresponding to the multi cloud is developed and brought into operation First the developer develops an application in consideration of which CSP is best for each method while referring to resource information on each CSP provided by the CSD to give a parameter for specifying a CSP in order to use a meta cloud API. Then when referring to the information provided by the CSD after the application is in operation and finding a more suitable CSP the developer rewrites the application to change the parameter for specifying a CSP to be passed to the meta cloud API and replaces it with the rewritten application to use the CSP in a new combination.

Thus under present circumstances since correspondences between methods and CSPs are determined at the time of developing the application there are problems in dynamically selecting a CSP as follows First after the application is in operation a person in charge of a CSC must periodically check on the CSD to make a point by point comparison with the CSP currently used in order to determine whether the combination between the method and the CSP is optimum at present. Further when there is a need to change the CSP to be used code is rewritten each time. In this case the application in operation is stopped to replace the application with another involving a number of man hours and risk.

Therefore it is desired that the CSC should select and use the optimum CSP as needed rather than that the person in charge determines the optimum CSP . Conventional dynamic optimization techniques generally used for this purpose include workload balancing and the like. This technique has a task dispatcher or equivalent check on the performance or the like of each resource arbitrarily to conduct dynamic allocation of a task and the like. However applying such a technique to the selection of a CSP causes the following problems 

First in order to check on the performance of a CSP by means of the dispatcher there is a need to subscribe to the CSP and get an evaluation account. Thus to check dynamically on the performance or the like the user account has to be acquired from all CSPs which could be targets including CSPs not currently being used requiring extra acquisition and management costs. Further the evaluation of a CSP can be affected by the financial health of the CSP or the like but the conventional means such as the dispatcher cannot acquire such a parameter.

Therefore in the embodiment the evaluations of multiple CSPs not only about information on the qualities of services provided but also about information including the financial health and the like that could affect the qualities of the services are provided in a common format by the CSD on a network. Then each CSC dynamically determines an appropriate CSP in the level of an API used by the CSC to provide a framework capable of using the CSP . In other words in the embodiment an application of the CSC in a multi cloud environment selects in real time an appropriate CSP for each method at present without being aware of each CSP to provide a library capable of issuing a request to the CSP .

The application is executed to cause the CSC to provide its service to the end user . The application is for example made of JSP JavaServer Pages and a servlet including a request table .

The request table is a table in which service levels requested by the CSC are listed in a format such as XML for the CSP selection library . Each CSC predefines for each item of the resource information how much performance or security level is required for its own application and holds the information as the request table . The request table is loaded at the time of startup of the application or the like by a method for loading the request table of the CSP selection library .

The CSP selection library dynamically acquires and analyzes the information on the service levels requested by the CSC and the resource information provided by the CSD creates inside the library information on an appropriate CSP for each method request and executes the method for the appropriate CSP . The CSP selection library includes an evaluation table acquiring section an association table a verification section a distribution table and a CSP selection section .

The evaluation table acquiring section acquires from the CSD through the network an evaluation table see to be described later as a table in which an evaluation on the item of service level of each CSP is expressed in a format such as XML for the CSP selection library . In the embodiment the evaluation table acquiring section is provided as an example of a table acquiring section for acquiring an evaluation table.

The association table is a table in which the items of service levels associated with respective methods called at the time of execution of the application are listed in a format such as XML. In other words the association table is to predefine for each method an item of a service level which is requested by the CSC upon calling a certain method and is to be secured among the items of the resource information listed in the request table .

The verification section checks the request table the association table and the evaluation table acquired by the evaluation table acquiring section against one another to create a distribution table to be described later. In this regard the verification section checks the tables against one another for all items of the resource information defined in the association table to be associated with a certain method to extract for each method a CSP that satisfies the service level requested in the request table . In the embodiment the verification section is provided as an example of an extraction section for extracting a service provider.

The distribution table is a table in which an appropriate CSP for each method is listed in a format such as XML. Here the term appropriate means a state in which all items of the resource information defined in the association table to be associated with a certain method satisfy the service levels requested in the request table . The distribution table is internally created by the CSP selection library when the CSC calls a method of creating a distribution table of the CSP selection library at specific timing such as at the time of startup of the application .

The CSP selection section refers to the distribution table when a certain method is called by the execution of the application to select an appropriate CSP for the method. Then the CSP selection section uses the API of the CSP selection library to convert the method to an instruction to the appropriate CSP and send it to the CSP . In the embodiment the CSP selection section is provided as an example of a conversion section for converting the method to an instruction to the service provider extracted and sending the instruction.

The CSP information acquiring section acquires resource information as mentioned above from each of the CSPs in the example of CSP to CSP through the network. For this acquisition each CSP may send the resource information to the CSD at predetermined intervals or each time the resource information on any of the CSPs is changed the CSP may send the resource information to the CSD . In the embodiment the CSP information acquiring section is provided as an example of a resource information acquiring section for acquiring the resource information and a creation section for creating or updating the evaluation table.

The evaluation table is a table in which an evaluation on each item of resource information on each CSP is represented in a format such as XML for the CSP selection library . The CSP information acquiring section acquires the updated content of the resource information so that the latest evaluations of each CSP will be listed in the evaluation table .

The evaluation table notifying section notifies each CSC of the evaluation table through the network. For example the evaluation table notifying section may send the evaluation table passively based on a request from the evaluation table acquiring section in each CSC Pull type . Alternatively the evaluation table notifying section may send the evaluation table from the CSD to each CSC actively at predetermined intervals or each time the evaluation table is updated Push type . In the embodiment the evaluation table notifying section is provided as an example of a notification section for notifying a service consumer of the evaluation table.

Next specific examples of the request table the association table the evaluation table and the distribution table will be described. and are diagrams showing an example of each table used by the CSC in the embodiment of the present invention. shows an example of the request table the association table and the evaluation table and shows examples of the distribution table . Although the request table the association table the evaluation table and the distribution table are actually written in a format such as XML these contents are interpreted by using tables for convenience sake.

In it is assumed that the level of 1 is highest and the levels are going down as the figures become large. Note that the scale of ten numeric values is just an example. For example the levels can be defined more specifically such as that in the case of utilization rate level 1 is some percent or more and level 2 is from less than that up to any other percent or that in the case of security the level is 1 if it corresponds to a certain function and the level is 2 if it does not correspond to some functions.

Information indicative of a level of importance to each item may also be included in the association table together with the associated items. Then when the verification section refers to the association table to create the distribution table the item may be weighted by the level of importance such as to preferentially select a CSP having a high rating of an associated item to which this level of importance is high.

The CSP selection library predefines the associated items of resource information in the association table as shown in for all methods to be called at the time of execution of the application . However depending on the method a default CSP can be used without selecting an appropriate CSP . In this case there is no need to list the method in the association table .

In the embodiment as shown in to the formats of the request table the association table and the evaluation table contained in each CSC and the CSD and the definition of the service level for each item of the resource information are set as open industry standard specifications and predefined commonly throughout the entire computing system.

The following will describe the operation of each CSC and the CSD in the embodiment. is a flowchart showing an example of operation for creating the distribution table method of creating the distribution table used by the CSC when selecting a CSP in the embodiment of the present invention.

First the CSP information acquiring section of the CSD acquires resource information from each of the CSPs CSP to CSP through the network step . As mentioned above the CSP information acquiring section acquires the resource information at predetermined intervals or each time resource information on any CSP is changed. Next the CSD creates or updates the evaluation table from the resource information acquired by the CSP information acquiring section step . Then the evaluation table notifying section notifies each CSC of the evaluation table through the network for example at predetermined intervals or each time the evaluation table is updated step .

On the other hand in each CSC the evaluation table acquiring section of the CSP selection library acquires the evaluation table from the CSD step . Next the verification section acquires this evaluation table the association table held in advance by the CSP selection library and the request table contained in the application step . Then the verification section checks the request table against the evaluation table on one method listed in the association table step . As the CSP to be used for the method the verification section lists in the distribution table a CSP that satisfies the service levels requested in the request table for all items of the resource information defined in the association table to be associated with the method step . When there is any other method the procedure returns to step while when listing in the distribution table for all methods is completed the operation is terminated step .

Processing in step and step performed by the verification section will be described in detail by using the example shown in to . First for Method since items defined as associated items in the association table are network performance and CSP s financial health a CSP satisfying such a requested level that the network performance is 1 and the CSP s financial health is 5 or more defined in the request table as the highest is found from the evaluation table . Since only CSP satisfies this requested level among CSP to CSP the CPS to be used for Method is listed as CSP. 

For Method since the associated items are security and CSP s financial health according to the association table a CSP satisfying such a requested level that the security is 3 or more and the CSP s financial health is 5 or more defined in the request table is found from the evaluation table . Although there are two CSPs CSP and CSP that satisfy this requested level it is assumed in this example that CSP is selected listing CSP as the CSP to be used for Method. This is because a higher level is requested for security than CSP s financial health and a comparison between evaluations of CSP and CSP about security shows that 2 for CSP is higher than 3 for CSP. Thus when there are two or more CSPs that satisfy the conditions attention may be given to an item higher in requested service level among the associated items for the method to preferentially select one higher in evaluation on the item.

For Method since the associated items are virtual system performance utilization rate and CSP s financial health according to the association table a CSP satisfying such a requested level that the virtual system performance is 3 or more the utilization rate is 2 or more and the CSP s financial health is or more defined in the request table is found from the evaluation table . Since only CSP satisfies this requested level the CPS to be used for Method is listed as CSP. 

The distribution table thus created is shown in . If there is no CSP that satisfies the requested level for all the associated items a default CSP for example may be set as the CSP to be used for the method. Alternatively a CSP having the largest number of associated items that satisfies the requested level may be set as the CSP used.

Next operation when each CSC uses the distribution table to send a method to an appropriate CSP will be described. is a flowchart showing an example of operation when the CSC sends a method to the CSP in the embodiment of the present invention.

First the CSC starts the application step . Upon startup the application loads the CSP selection library step . In the application for example a library of the CSP selection library is loaded upon startup of the servlet . Then the CSP selection library may conduct the method of creating the distribution table in at appropriate timing such as upon this startup at each predetermined interval or when the evaluation table acquiring section has acquired the evaluation table from the CSD to create the distribution table .

Here the application of the CSC accepts a request transaction from an end user step . In general the request is divided into multiple methods to be called one by one. However in the embodiment the application itself does not need to specify which CSP is used to call each method. Instead the CSP selection library uses the distribution table to select an appropriate CSP for executing the method step . Then the CSP selection section of the CSP selection library converts the method to an instruction to the selected CSP to make a request to the CSP step . In other words the application uses the API of the CSP selection library to send the method to the selected CSP . When there is any other method to be executed the procedure returns to step while when there is no method to be executed the operation is terminated step .

In the embodiment as a technique for the CSC to receive an update of the evaluation table from the CSD a Push notification from the CSD can be particularly used. A configuration using such a Push notification will be described below.

In the embodiment for example when any CSP is broken down due to a disaster or any other failure the CSP information acquiring section of the CSD acquires at the timing when the resource information on the CSP has been changed breakdown has occurred information on the change. Then the CSD updates the evaluation table and the evaluation table notifying section sends a Push notification of the updated evaluation table to all the CSCs . This enables each CSC to receive the latest evaluation table timely when the evaluation table has been updated. Further in response to acquiring the latest evaluation table push notified if the CSP selection library of each CSC conducts the method of creating the distribution table in each CSC can have the distribution table in which an appropriate CSP for each method at present is listed. This enables each CSC to dynamically select an appropriate CSP at present when calling each method.

For example in the example shown in to it is considered a case where CSP is broken down. As mentioned above there are CSP and CSP as candidates for the appropriate CSP with respect to Method. However in this case since the CSP selection library of each CSC acquires the evaluation table including information indicating that CSP has been broken down to conduct the method of creating the distribution table in CSP is selected as the CSP to be used for Method. As a result the distribution table created in this case is shown in . Thus since each CSC acquires the latest evaluation table from the CSD through a Push notification a CSP can be selected to minimize the influences on the end user and each CSC even if a disaster or the like has occurred.

As described above in the embodiment the CSD provides the evaluation of the resource information on each CSP in the form of the evaluation table and each CSC defines service levels requested by itself and items of resource information associated with each method in the forms of the request table and the association table respectively. Then the formats of these tables and the definition of the service level for each item of the resource information are standardized throughout the entire computing system. This enables each CSC to use the distribution table to select and use an appropriate CSP for each method.

Further in the embodiment each time the resource information on each CSP is changed the CSD updates the evaluation table and sends a Push notification to each CSC . In response to acquiring the latest evaluation table each CSC updates the distribution table . This enables each CSC to select and use an appropriate CSP for each method at present.

Finally a hardware configuration of a computer to which it is suited to apply the embodiment will be described. is a diagram showing an example of the hardware configuration of a computer for implementing a CSC or the CSD . As shown the computer includes a CPU Central Processing Unit serving as computing means a main memory connected to the CPU through an M B motherboard chip set and a display mechanism connected also to the CPU through the M B chipset . Further a network interface a magnetic disk drive hard disk drive HDD an audio mechanism a keyboard mouse and a flexible disk drive are connected to the M B chip set through a bridge circuit

In each component is connected through a bus. For example the CPU and the M B chip set and the M B chip set and the main memory are connected through a CPU bus. Although the M B chip set and the display mechanism may be connected through an AGP Accelerated Graphics Port if the display mechanism includes a PCI Express capable video card the M B chip set and this video card will be connected through a PCI Express PCIe bus. Further for connection with the bridge circuit PCI Express for example can be used for the network interface . For the magnetic disk drive for example serial ATA AT Attachment parallel transfer ATA or PCI Peripheral Components Interconnect can be used. Further a USB Universal Serial Bus can be used for the keyboard mouse and the flexible disk drive

Here all the functions of the service consumer and the service directory of the present invention may be implemented in either hardware or software or in both hardware and software. Further the present invention can be implemented as a computer a data processing system or a computer program. This computer program can be stored on a computer readable medium and provided. Here the medium may be an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or a propagation medium. Specific examples of computer readable media will include a semiconductor or solid state storage device a magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Examples of optical disks so far include a compact disk read only memory CD ROM a compact disk read write CD R W and a DVD.

While the present invention is described with reference to the embodiment the technical scope of the present invention is not limited to the aforementioned embodiment. Those skilled in the art will appreciate that various modifications and alternative embodiments are possible without departing from the scope and spirit of the present invention.

