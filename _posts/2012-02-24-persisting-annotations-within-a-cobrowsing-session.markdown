---

title: Persisting annotations within a cobrowsing session
abstract: A request to navigate to a Uniform Resource Identifier (URI) can be received within a cobrowsing session. The cobrowsing session can be associated with a unique session identifier of a cobrowsing application. The cobrowsing application can be part of a collaboration software. An annotation previously associated with the URI from a historic cobrowsing session can be retrieved. Content associated with the URI can be obtained and presented within an interface associated with the cobrowsing session. The annotation can be presented within the content associated with the URI of the interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09141711&OS=09141711&RS=09141711
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09141711
owner_city: Armonk
owner_country: US
publication_date: 20120224
---
This application is a continuation of U.S. patent application Ser. No. 12 913 367 filed Oct. 27 2010 pending which is incorporated herein in its entirety.

The present invention relates to the field of collaboration software and more particularly to persisting annotations within a cobrowsing session.

Cobrowsing is becoming an increasingly important tool within the enterprise collaborative software domain. Cobrowsing can permit multiple users to joint navigate one or more Web resources e.g. Web pages . That is several users can view the same Web pages simultaneously while participating in a collaboration session. For example users participating in a Web conference can be presented with a Web page which a moderator has selected based on a navigation action e.g. selecting a hyperlink . These cobrowsing sessions are enabled typically through cobrowsing applications which can often take the form of Web applications and or widgets which execute inside a Web browser. These applications are typically initiated from a special Uniform Resource Locator URL associated with the application. This URL initializes the application and permits synchronized navigation e.g. cobrowsing within the application to occur.

Traditional annotations are stored via associating the URL of a Web page with the annotation. This approach however fails when a cobrowsing session is initiated. Consequently these annotations are lost when the cobrowsing session is terminated due to the mechanism in which the annotations are handled. Web page navigation is performed by the application and thus the browser URL remains unchanged regardless of the URL e.g. Web page requested within the cobrowsing session. That is the browser reflects a URL of the cobrowsing application which is different from the URL managed by the application e.g. the URL requested . Due to this mechanism it is often difficult for cobrowsing applications to permit user created annotations to persist between sessions.

One mechanism is to store Web browser session data externally via third party tools by obtaining the URL of the Web browser. However since the URL of the Web browser is the cobrowser application URL the annotations cannot be extracted since application data is private to the application and cannot be accessed by third party tools readily. Further this technique can be cumbersome and limited in its usability. Once exported from the cobrowsing session the annotations can lose meaning because it has been removed from the context of the session e.g. the Web page associated with it . For instance when an annotation is extracted the metadata and or contextual information that it is associated with is not exported leaving the annotation without a context which can erode the usability of the annotation. Further this technique requires manual manipulation of annotations which can be a time consuming and error prone process.

A request to navigate to a Uniform Resource Identifier URI can be received within a cobrowsing session. The cobrowsing session can be associated with a unique session identifier of a cobrowsing application. The cobrowsing application can be part of a collaboration software. An annotation previously associated with the URI from a historic cobrowsing session can be retrieved. Content associated with the URI can be obtained and rendered within an interface associated with the cobrowsing session. The annotation can be presented within the content associated with the URI of the interface.

The present disclosure is a solution for persisting annotations within a cobrowsing session. In the solution annotations created within a cobrowsing session of a cobrowsing application can be automatically persisted natively. That is annotations can be retrieved after the cobrowsing session is terminated and a new cobrowsing session is initiated. The annotation associated with a Uniform Resource Identifier URI can be presented when the URI is requested and presented within a cobrowsing session. Permissions associated with the annotation can permit the annotation to be shared among participants of a cobrowsing session. For example an annotation can configured to be visible and editable to selected participants of a cobrowsing session.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing. Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

As used herein cobrowsing can be the joint navigation of two or more communicatively linked interfaces accessing a Web resource. Cobrowsing session include a semi permanent interactive exchange between two or more interfaces participating in cobrowsing. An interface can refer to a user interface associated with a computing device and or a participant. A participant can include but is not limited to a user a group of users and the like utilizing an interface to interact within a cobrowsing session. Annotations can be presented within the interface which can include but is not limited to a Web browser an application interface and the like.

In step a cobrowsing session is initiated. The cobrowsing session can be associated with a cobrowsing application including but not limited to desktop collaboration software Web based application widget and the like. In step a Uniform Resource Identifier URI can be specified within an interface associated with the application. For example a participant can manually input a Uniform Resource Locator URL within a Web browser to initiate a cobrowsing session. In step if an annotation is associated with the URI from a historic cobrowsing session the method can proceed to step else return to step . In step an annotation from a historic cobrowsing session is automatically selected.

In step the selected annotation can be retrieved from a data source. The data source can include but is not limited to an application server remote data store local data store and the like. In step if the annotation visibility property is configured to private the method can proceed to step else continue to step . The visibility property can dictate which interfaces and consequently which participants can view an annotation. The visibility property can be configured based on user identity groups computing device identifiers and the like. In step an interface associated with the cobrowsing session can be selected. The interface can be associated with a cobrowsing application executing on a computing device utilized by a participant of the cobrowsing session. In step if the interface e.g. participant utilizing an interface is authorized to receive the selected annotation the method can proceed to step else proceed to step . Authorization can include user credentials verified against a user group associated with the visibility property of the annotation. For example if an annotation is configured for the group customer service representatives only users of the group can be permitted to receive e.g. view the annotation.

In step the selected annotation can be synchronized to the authorized interface. In step if there are more interfaces within the session then the method can return to step else continue to step . In step if there are more annotations available the method can return to step else proceed to step . In step the URI content e.g. Web page can be presented within the interface. In step synchronized annotations can be presented within the relevant interfaces. In step the cobrowsing session can be terminated. In step annotations within the interfaces can be automatically persisted appropriately upon session termination.

Drawings presented herein are for illustrative purposes only and should not be construed to limit the invention in any regard. Steps can be performed continuously throughout the cobrowsing session enabling annotations to be used in real time during the session. It should be understood when annotation visibility is public the method can convey and or synchronize annotations to each interface participating in the cobrowsing session e.g. steps . It should also be appreciated that the cobrowsing session can be initiated via one or more automated and manual mechanisms.

In interface annotation can be presented within the cobrowsing application via an annotation frame . Annotation frame can comprise of but is not limited to annotation title annotation visibility property pagination controls and the like. Annotation frame can include frame controls including but not limited to minimize frame maximize frame hide frame and the like. For example annotation frame can inherit interface properties from the cobrowsing application such as window controls. Annotation can be presented within frame based on user specified configuration including but not limited to font size font face font family font color and the like. For instance annotation frame can include ruled lines which annotation can be presented upon mimicking a handwritten note.

In one instance annotation can be associated with media including but not limited to images video audio and the like. In the instance the associated media can be presented within frame . In another instance annotation can include Uniform Resource Identifiers URIs URLs and the like. In the instance additional resources can be linked to via a hyperlink presented within frame . It should be appreciated that annotation frame can be optionally omitted based on configuration options permitting annotation to be presented as a simple text overlay. In one embodiment Cascading Style Sheet CSS can be utilized to overlay annotation within content .

In one instance annotation can be presented within a customized graphic. In the instance annotation can be conformed to a handwritten note displayed within an adhesive note graphic. For example annotation frame can be a graphic of a yellow sticky note comprising of note which can be positioned next to content .

In one embodiment annotation can be positionable permitting customizable location placement. In the embodiment annotation position can be tracked utilizing one or more traditional and or proprietary mechanisms. In one instance annotation can be mapped to a Cartesian coordinate system. Annotation position can include multiple position values utilized to present frame placeholder and the like.

In one embodiment annotation placeholder can be presented within interface proximate to content indicating an annotation is associated with content . In the embodiment placeholder can be a graphic icon text block and the like. In one configuration of the embodiment interface frame can be dynamically presented upon interaction with placeholder . For example when a mouse cursor hovers over placeholder annotation can be presented within annotation frame . In one instance annotation can be linked to other features including but not limited to highlight underline and the like. For example an annotation can be linked to a highlighted portion of content .

In one embodiment annotation toolbar can be a component of a cobrowsing application and or cobrowsing widget enabling persistent annotations to be utilized customized and or managed. Annotation toolbar can include but is not limited to mode identifier functions configuration options and the like. In one instance toolbar can be an overlay e.g. floating toolbar which can be optionally presented based on application settings.

Visibility property can be an automatically and or manually established value for controlling the propagation of annotation . Visibility property can be configured through toolbar context menu settings drop down menu options and the like. In one embodiment an annotation visibility setting can be presented within frame indicating which participants can view the annotation and which participants cannot. For instance an annotation can be visible by a participant Mark but hidden from participant Ryan.

Mode identifier can be used to indicate and or control the operational mode for annotations. Operational mode can include but is not limited session persistence intra session persistence and the like. For instance selection of session persistence can enable annotations to behave similar to traditional cobrowsing annotation expiring after the session is terminated. Mode identifier can be a drop down selection box radio dialog and the like.

Functions can permit management of annotations within interface . Functions can include but is not limited to annotation creation modification history copying sharing features e.g. email and the like. In one instance functions can permit toggling visibility of annotations within interface . In another instance functions can permit access to annotation history. In the instance annotation history can include but is not limited to session history intra session history and the like.

Configuration options can permit user specific settings to affect annotation behavior and or presentation. Options can include annotation options e.g. interface synchronization settings filter settings and the like. Annotation options can include but is not limited to visibility configuration expiration settings and the like. Synchronization settings can include but is not limited to prioritization settings synchronization timing options and the like. In one instance synchronization settings can permit priority values to be associated with annotations to enable real time resource allocation to be achieved. For instance in scenarios where network bandwidth is limited annotation priority can be configured to a low priority to permit cobrowsing navigation to take precedence. Filter settings can permit selective filtering of annotations based on one or more criteria including but not limited to annotation content title visibility property color and the like. For example a filter can be established to show only annotations from a specific user and or group.

In interface annotation configuration can be customized based on user specific settings and or system default settings. Interface can comprise of annotation settings including but not limited to title annotation visibility property expiration setting template option and the like. In one instance interface can be a pop up dialog which can permit dynamic and or real time configuration of an annotation within a cobrowsing session. In another instance interface can be a component of an administrative configuration interface associated with system .

In section details of an annotation can be modified including but not limited to title annotation text media URL and the like. Section can conform to traditional text editing fields such as a Hypertext Markup Language HTML text box. Customized tools can be integrated into section including but not limited to a spell checker dictionary thesaurus auto completion and the like.

In section the visibility property of an annotation can be easily configured. In one embodiment the visibility property can be presented as a drop down selection box permitting user selection of available visibility settings. Visibility settings can include but is not limited to public private and the like. In one embodiment visibility setting can be dynamically adjusted enabling real time configuration of an annotation visibility. In one embodiment visibility settings can permit an administrator e.g. moderator to tie annotations to particular users.

In section annotation expiration options can be configured based on one or more criteria. Options can include but is not limited to session expiration intra session expiration timestamped expiration and the like. In one embodiment an annotation can be configured to persist indefinitely.

In section annotations can be derived from pre defined templates which can enable rapid creation and customization. Section can enable selection of a template which can automatically configure an annotation based on template settings. Template settings can include but is not limited to title annotation visibility expiration and the like. For example a template for customer specific notes can be established to allow a customer service representative to rapidly create customer specific notes during a cobrowsing session.

Drawings presented herein are for illustrative purposes only and should not be construed to limit the invention in any regard. Functionality of interface described herein can be encapsulated within a drop down menu context menu and the like. Interface elements can include but is not limited to checkboxes radio dialogs drop down selection boxes text box text areas and the like. In one instance interface can be a screen from a desktop cobrowsing application. In one embodiment annotation can support redaction capabilities. For example a user within a cobrowsing session can redact one or more portions of an annotation in real time. In one instance free form annotations and or hand drawn annotations can be supported within interface . It should be appreciated that functionality described herein can be a portion of a DOJO toolkit permitting rapid development and modification of interface features.

As used herein content can include but is not limited to Web based content Web application content document content and the like. It should be understood that content can remain unmodified by annotation .

In system a cobrowsing application can be associated with an interface . Interface can be a user interface including but not limited to graphical user interface text interface mixed mode interface and the like. For example interface can be a dynamically generated Rich Internet Application RIA interface.

Annotation table can be a portion of a cobrowsing session metadata stored within data store . Table can be utilized to track annotation which can store annotation as persisted annotation . Table can be a portion of a database including but not limited to Relation Database Management System RDBMS Object Oriented Database Management System OODBMS and the like. It should be appreciated table can be stored within a network attached storage NAS element storage attached network SAN client and the like.

Persisted annotation can be an instance of annotation which can be stored within table . Persisted annotation can comprise of but is not limited to annotation identifier Unified Resource Identifier URI interface identifier annotation visibility property expiration value and the like. Persisted annotation can be communicated to application upon initiation of session . Upon termination of session annotation can be conveyed to server which can store the annotation within table . In one embodiment changes to annotation can overwrite persisted annotation . In another embodiment changes to annotation can be stored separately from persisted annotation enabling a change history to be cataloged. In one configuration of the embodiment changes can be stored as deltas of the original annotation .

Widget can be a Web based application able to execute within application . For example widget can be an IBM IWIDGET. Annotation can be a user specified note presented within cobrowsing application which can be manipulated via widget . In one embodiment widget can be utilized to manage every annotation within session . In another embodiment multiple instances of widget can be executed to manage each annotation within session . In yet another instance widget can be an optional component.

Cobrowsing application can be a software entity permitting annotated cobrowsing within session to occur. Cobrowsing application can be used to initiate manage and terminate session . For instance cobrowsing application can be a Web browser able to navigate to a Uniform Resource Locator URL associated with a collaboration application. Application technology can include but is not limited to JAVA 2 ENTERPRISE EDITION J2EE Javascript Hypertext Markup Language HTML Extensible Markup Language XML and the like.

Session can be initiated through user interaction within interface . In one instance session can be initiated from a cobrowsing invitation presented within interface . In another instance session can be automatically instantiated when application is executed. Session can comprise of widget annotation and like. It should be appreciated that session can be stateful stateless and the like.

Collaboration server can be a hardware software entity permitting annotations within a cobrowsing session to be persisted. Server can include but is not limited to annotation manager synchronization engine security handler settings data store and the like. Server can be associated with additional server and or services to enable system functionality. For example server can be associated with a network time protocol NTP service enabling accurate timing to be maintained for synchronization processes within system . In one embodiment server can be a component of a proxy server e.g. Hypertext Transport Protocol proxy .

Annotation manager can be a hardware software component for handling annotations within a cobrowsing session . Manager can provide annotation functionality associated with application . Manager can be used to create modify and or delete annotations within a cobrowsing session. In one instance manager can utilize unique annotation identifiers to manipulate annotations. In the instance each annotation can be associated with a unique identifier enabling each annotation to be accessed independently of a cobrowsing session. In one embodiment manager can expose an application programming interface API enabling widget to perform annotative functions. That is service side functionality can be exposed to client side interfaces. In one instance manager functionality can be encapsulated within a portion of interface and or widget . For example manager can be a portion of a client side widget . Annotation event can be received by annotation manager which can process event based on event type.

Synchronization engine can be a hardware software component permitting synchronization of annotation for each application participating in a cobrowsing session. Synchronization engine can permit synchronous and asynchronous modes of execution based on settings . Engine can respond to annotation event which can trigger a synchronization event to occur. In one instance synchronization engine can utilize annotation identifiers to determine relevant annotations which require synchronization.

Annotation event can be a user triggered generated event based on user interaction with application and or widget . Event can be distinguished by event types which can include but is not limited to annotation creation annotation modification annotation deletion annotation synchronization and the like. In one instance event can be a custom event defined within settings permitting robust customization to be achieved. For example event can be a specialized batch processing command allowing easy manipulation of numerous annotations.

Synchronization event can be a programmatically generated event enabling harmonizing of annotation within session . Event can trigger synchronization of one or more annotations within session . Event can include but is not limited to annotation content annotation settings and the like. Event can be conveyed to widget which can present synchronized content of annotation . In one instance event can be manually triggered via a user initiated event e.g. synchronization command .

Security manager can be a hardware software component for handler annotation visibility within session . Manager functionality can include but is not limited to authentication validation login management and the like. Manager can be utilized to escalate and or demote annotation visibility privileges. Manager can be communicatively linked to services which can be used to authenticate and or validate interface authorization. In one instance a directory service can be utilized to identify a user and determine user privileges for an interface associated with session . In another instance third party authentication mechanisms can be communicatively linked to provide extensible security functionality. For instance manager can be integrated with an OPENID authentication framework permitting users to utilize existing digital identities.

Settings can be one or more configuration parameters for establishing the behavior of server . Settings can include but is not limited to synchronization settings annotation specific settings security settings e.g. visibility controls administrative settings and the like. Settings can be accessible through one or more interfaces including but not limited to interface interface and the like. Settings can permit customization of persisted annotation including client side settings server side settings and the like.

Client can be a hardware software entity able to execute cobrowsing application . Client can include but is not limited to hardware software and the like. Client can be but is not limited to desktop computer laptop computer mobile phone portable computing device tablet computing device portable digital assistant PDA and the like. Hardware can be one or more physical component comprising of processor volatile memory non volatile memory bus and the like. Software can comprise of cobrowsing application an operating system not shown and the like.

Drawings presented herein are for illustrative purposes only and should not be construed to limit the invention in any regard. System can be a component of a distributed computing system networked computing environment cloud computing system and the like. Network can include but is not limited to public network private network Virtual Private Network VPN and the like. It should be appreciated system can be integrated within an existing collaboration infrastructure enabling functionality of traditional collaboration software to be easily extended.

System architecture can include but is not limited to publish subscribe event driven and the like. In one embodiment system can employ a Representational State Transfer Architecture REST . In one instance system can be a component of a Service Oriented Architecture. It should be noted that system can function in real time and or near real time. In one instance system can utilize a real time protocol to achieve real time functionality. In the instance system can include but is not limited to Real Time Transport Protocol RTP Session Initiated Protocol SIP Transport Control Protocol Internet Protocol TCP IP and the like. For example annotation features of system can be associated with a telephony collaboration application.

It should be appreciated system can support annotation locking enabling granular control over annotation properties. In one instance annotation position can be locked disallowing movement of annotations within interface .

In one instance annotation can be cached within client prior to synchronization to compensate for communication outages. In the instance memory can be employed to temporarily store annotation which can be conveyed to relevant interfaces when client is communicatively linked to server .

It should be appreciated manager can permit traditional and or proprietary security mechanisms to be utilized within system . Further system can be associated with multiple security mechanisms including but not limited to Public Key Infrastructure PKI private key encryption and the like.

In one embodiment server can be a component of an IBM WEBSPHERE software middleware. In the embodiment server can be a functionality of an IBM COMMUNICATIONS ENABLED APPLICATIONS software.

The flowchart and block diagrams in the illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

