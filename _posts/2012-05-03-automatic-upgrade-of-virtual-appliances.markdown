---

title: Automatic upgrade of virtual appliances
abstract: A software application distributed as a virtual appliance is automatically installed, updated and removed in a virtual machine system running on top of a virtual machine monitor in a computer. The software application virtual appliance comprises a virtual disk, which is automatically detected and installed or removed at the customer by a virtual disk activation manager program, which executes scripts including commands through an API to the virtual machine monitor. The virtual appliance virtual disk is also created automatically by the software manufacturing using the virtual disk activation manager program. The virtual appliance virtual disk stores the binaries of the software application, a software package created by the software manufacturer using a software package tool, an installer to execute the software package, installation and un-installation scripts and a unique identifier which is a signature for the virtual machine virtual disk.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09146727&OS=09146727&RS=09146727
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09146727
owner_city: Armonk
owner_country: US
publication_date: 20120503
---
This application is a continuation of U.S. patent application Ser. No. 13 215 288 filed Aug. 23 2011 entitled AUTOMATIC UPGRADE OF VIRTUAL APPLIANCES now pending which claims priority to European Patent Application No. 10174377.1 filed Aug. 27 2010 the disclosures of which are incorporated herein by reference.

Aspects of the present invention relate generally to the installation and upgrade of software distributed as virtual appliances and more particularly to the automatic activation of virtual disks containing virtual appliances.

The utilization of a virtual appliance represents a new way of deploying software applications. Virtual appliances are virtual machine images comprising at least one software application and at least one virtual machine VM . A virtual appliance can be directly installed on a virtual machine monitor operating on a physical machine.

From a software packaging and distribution point of view software developers can create a single platform reducing the cost and complexity of software development and management. Virtual appliances are provided to the user or customer as files via either electronic downloads or physical distribution. By distributing virtual appliances the software application manufacturers deliver a turnkey software service to the end user.

However a single virtual machine is not sufficient to create a virtual appliance for distributing a multi tier architecture application such as a client server application comprising as many tiers as separate processes. Rather a virtual appliance of a multi tier architecture includes at least as many virtual machines as the number of tiers. For instance compared to current virtual appliances that contain a single virtual machine only modern enterprise applications modeled as service oriented architectures SOA implement a multi tier architecture where each tier contains one or more machines. Accordingly a single virtual machine model is not sufficient to distribute a multi tier service. Rather the virtual appliance will be composed of multiple virtual machines. For a Web application that consists of three tiers one tier implementing the presentation logic an application server tier implementing the business logic and a back end database tier the virtual appliance will include three virtual machines one for each tier.

Today the components of a virtual appliance can be separated into virtual disks. A virtual disk image is a file on a physical disk which has a format that can be interpreted by a virtual machine monitor as a hard disk. In most cases it is possible to separate the base operating system of the virtual machine from the other software applications and other components creating multiple virtual disks forming the virtual appliance. Almost all the applications distributed for UNIX comprise a binary section containing all the binaries to run the application that do not depend on the specific system where they are installed. A configuration data section is also provided which contains configuration and data files specific to the current installation. The two sections can be installed on two different file system paths potentially pointing to two different virtual disks.

There are many interests in delivering a virtual appliance on multiple disks. For instance delivering a virtual appliance on multiple disks simplifies maintenance of the software application product binaries. As an example the software application manufacturer can update the binaries and provide a new virtual disk with updated binaries to the customer. The customer can stop the virtual machine replace the corresponding virtual disk image and restart the virtual machine. The customer can also modify the operating system virtual disk of the virtual appliance and replace the operating system with a different version.

In order to support different virtual environments such as VMware VMware is a registered trademark of VMware Inc. or Xen Xen is a trademark of Citrix Systems Inc. the application software manufacturer converts for instance the VMware formatted virtual disk for the product application binaries product disk into a Xen formatted virtual disk. However the virtual disk containing the operating system has no need to be converted. The product disk can be used to support different virtual machines. By using the Xen img virtual disk format the user can mount a virtual disk containing the product application binaries in a Linux system Linux is a registered trademark of Linus Torvalds into the appropriate mount point and configure the virtual disk using software application activation scripts. This is equivalent to installing the product in a Linux Server. In this context the same product disk can be installed on the same operating system family. For each version of the same operating system the scripts can be different. Consequently all the scripts provided with the product disk apply to the same operating system family. Moreover the product itself can be divided into multiple disks for separating the product binaries from the configuration data. In this case it will be possible to update the binaries without losing any configuration and or data.

However installing or replacing the virtual disk containing the application binaries distributed on virtual disks requires execution of manual operations. For instance the user has to manually run configuration installation scripts to install the virtual disk in order to create and or update system files under the virtual machine system directories.

According to aspects of the present invention a software application distributed as a virtual appliance in a virtual machine system is automatically upgraded comprising detecting by an application programming interface of a virtual machine monitor a change in a previously stored version of a list of virtual appliance virtual disks attached to a corresponding virtual machine. The automatic upgrade is further implemented by performing if a new virtual appliance virtual disk is detected the operations of storing deactivation scripts on the new virtual disk on at least one operating system virtual disk and executing an installation script on the new virtual disk. Execution of the installation script is performed by modifying the operating system according to instructions stored on the new virtual disk by starting execution of an installing un installing program stored on the new virtual disk which installs the software application stored on the new virtual disk and by adding an entry for the new virtual appliance virtual disk in the list of the virtual disks currently attached. Aspects of the invention described more fully herein may be implemented for instance as a method for automatically upgrading a software application distributed as a virtual appliance in a virtual machine system comprising at least one OS virtual disk running on top of a virtual machine monitor in a computer. Alternatively aspects set out more fully herein may be implemented as a computer usable storage memory with executable program code the program code instructing a processor to perform the approach set out above aspects of the invention.

A new software component is installed on the virtual management server that is referred to herein as a virtual disk activation manager VDAM . The virtual disk activation manager is provided to create in a file repository all the necessary files to create a final image of the virtual appliance that will be distributed to the customer. These files comprise a virtual machine image that will be used to create a base operating system virtual disk of the virtual appliance. Particularly the files will be used to create a self activating virtual disk SAVD containing the application. For the first creation the virtual image will contain a virtual disk for the virtual machine base operating system and a SAVD for the application. For upgrading of the application only one SAVD will be created.

The virtual disk activation manager more particularly creates the virtual disk of the virtual appliance which will include the software application libraries and the product disk. The product disk according to aspects of the invention is a self activating virtual disk. The virtual disk activation manager communicates with the Host environment using an existing application programming interface API . More particularly the virtual disk activation manager may use a set of scripts to interact with the VMware virtual machine monitor leveraging a VIX interface provided by the VMware server to send commands both to the VMware virtual machine monitor and the VMware virtual machine. The VIX API automates the VMware virtual machine operations and runs programs or manipulates files within guest operating systems. The VIX interface is a programming interface for automating both virtual machine operations such as stop VM start VM take VM snapshots . . . and guest operations such as running an application inside the guest operating system copying files between guest and host . . . . Similar APIs could be used in different virtualization environments besides VMware. The virtual disk activation manager component particularly can detect any change in the virtual machine related to the disk processing add replace remove and invoke the proper configurations in order to make the virtual appliance disk connected or disconnected to the virtual machine.

An existing software package tool such as the AUTOPACK function of the IBM Tivoli Provisioning Manager IBM and Tivoli are trademarks of IBM Corporation and a Software Package Installer Engine SIE are used in the preparation site to create the SAVD product disk. A software package includes operations that are necessary to install a software application on a system. The software package installer by reading the software package is able to prepare the target operating system for installation of the software application. The SIE program depends on the architecture of the target virtual machine.

The different exchanges of information between the components are explained hereunder in relation with the method for setting up the preparation and creating the virtual appliance as respectively described in relation with description of and in the rest of the document.

The method consists in installing a virtual machine for the required guest operating system at . Preferably the virtual machine image is created from the file repository on the host environment machine which is a virtual machine manager for instance the VMware virtual machine monitor .

The virtual machine then needs to be configured in the virtual machine manager using its API at . This configuration consists in registering the new virtual machine referring to the just copied image. The result is the creation of the base operating system virtual disk.

Next still executed on the host environment a new virtual disk is configured at from which an image has to be created. This new virtual disk is attached to the virtual machine image. This disk will become the SAVD product disk at the end the process.

The guest operating system virtual machine is then powered on at and the program codes of a tool for creating software packages such as AUTOPACK the corresponding software package installer SIE and a virtual disk activation manager are copied at on the guest operating system. The libraries are copied into the SAVD still through a VIX based script in the case of VMware. In fact only the installer SIE will be necessary at the customer site and for simplification the software package tool such as AUTOPACK may be not stored on the final SAVD to be distributed to the customer.

All the steps to create a SAVD product disk are automatically performed by the virtual disk activation manager component interfacing the with the host environment virtual machine monitor using API based scripts VIX for VMware environment .

The installation image of the software application including the product binaries is copied from the repository file to the host environment and from the host environment to the guest operating system.

A software package for the software application to be distributed is first created in the guest operating system virtual machine by the tool to create software packages. For instance the AUTOPACK tool automates the creation of software packages using a differencing technology by comparing two successive system snapshots of the preparation machine system before and after the software application installation. By this way AUTOPACK detects file and system changes made by the installation of an application and creates the operations to be executed to adapt the target system to the software application. The installer SIE is then able to execute these operations automatically install the software application libraries for their execution on a target system.

The virtual disk activation manager through API based script performs a first AUTOPACK snapshot of the system in the guest operating system virtual machine. AUTOPACK just captures the changes occurring to the system related files and registry entries on the operating system base virtual disk. Then the software application is installed referring to the software application installation images directories in the SAVD product disk. The installation is performed in silent mode if silent mode is supported by the guest operating system and this application. The installation is alternatively performed in an operator assisted mode. A second AUTOPACK snapshot is run in the guest operating system virtual machine. AUTOPACK differencing is run and the software package is built in the guest operating system virtual machine. The software package created by AUTOPACK is then stored into the SAVD product disk created at during setting up of site preparation.

It is noted that in using some existing tools to create software packages some software packages may contain not only the instructions to be executed to create modify system files but also may contain the binaries libraries of the application. This is just an option of implementation. In the case described in the illustrated embodiment the software package and the application binaries libraries are separated and are stored at on the SAVD product disk.

The virtual disk activation manager creates specific activation de activation API based scripts at to be used by the virtual disk activation manager at installation of the software application on a user target system. A software application once installed may need to have specific host name used etc. As an example some applications need to be reconfigured in the case where the IP address of the machine where it is installed has changed. A specific reconfiguration command has to be executed for this purpose. The created activation de activation API based scripts are copied into the SAVD product disk.

A unique identifier e.g. universally unique identifier UUID identifying the SAVD product disk is created at and is stored in the SAVD product disk. The unique identifier is a kind of signature of the SAVD product disk. The unique identifier can be calculated for example composing different attributes of the SAVD such as using the SAVD name size its version the virtual appliance name and so on. Several algorithms already exist in the field for the calculation of a UUID. The unique identifier is used during the phase of activation of the SAVD product disk at the customer site when the customer installs for the first time or upgrades the software application.

The guest operating system is powered off and the SAVD product disk is detached. The SAVD product disk image is copied at from the host environment to the file repository. The SAVD product disk includes software application installation images which includes the software application binaries the software package the activation de activation scripts which are executed by the virtual disk activation manager when an activation de activation event occurs the virtual disk activation manager SIE and AUTOPACK libraries. The just created SAVD product disk can be part of the initial delivery of the virtual appliance image or the SAVD product disk can be created when a new version of the product is distributed to the customers.

At first installation of the software application a virtual machine image that may have been provided in the virtual appliance of the first installation is installed by the customer as a target operating system with its base operating system virtual disk . In the case where the application virtual appliance even for the first version contains only a SAVD the customer has installed the customer s own virtual machine and has ordered a SAVD for the operating system of the corresponding virtual machine. The customer has now to install a SAVD product disk which is a self activating virtual disk used to install the software application on the target operating system virtual machine.

For activating deactivating SAVDs the virtual disk activation manager and SIE are both started on the target operating system. The virtual disk activation manager uses the SIE as a tool to perform installation. The virtual disk activation manager is preferably started as a service as a daemon component to continuously monitor the system for events related to addition or removal of disks.

It is noted that the virtual disk activation manager needs to be installed once on the customer virtual machine to execute scripts of commands to the virtual machine monitor. Once installed the virtual disk activation manager will be reused for the install update and remove of the next SAVDs. Optionally the customer may execute a set up of the virtual disk activation manager program. The set up program can be stored on the SAVD and can be performed at attachment of the virtual disk using an existing tool in the operating system of the virtual machine such as AUTORUN with Windows .

Assuming a SAVD product disk is attached to the target operating system the virtual disk activation manager collects at the list of all the SAVDs attached to the virtual machine by reading the UIDs. It compares the current list with the list stored locally in the base operating system and corresponding to the last starting of the virtual disk activation manager service. At creation of the target operating system the list is empty and when the virtual appliance is installed for the first time one SAVD is identified.

If the virtual disk activation manager has detected a new SAVD answer yes to test the virtual disk activation manager copies the deactivation script at in the SAVD to the base operating system virtual disk. Then the virtual disk activation manager starts installation of the software package in the SAVD by the SIE and the activation scripts to install the software application at . The virtual disk activation manager updates at the local list of active SAVDs in the base operating system disk adding the entry of the new SAVD. If necessary the target operating system is rebooted if required by the installation of the software package or by the activation scripts.

If the virtual disk activation manager has detected that a SAVD is removed answer yes to test the related deactivation script copied in the base operating system virtual disk from the SAVD at its activation is executed at . The virtual disk activation manager runs the SIE to undo the installation of the software package corresponding to the SAVD to be removed. The de activation script of this SAVD is removed at from the base operating system virtual disk. The virtual disk activation manager deletes at the entry of the SAVD to be removed in the list of SAVDs. If necessary the target operating system is rebooted if required by the un installation of the software package or by the deactivation scripts.

To work as a service the virtual disk activation manager may start a loop answer no to test to collect and process virtual system events related to the addition removal of virtual disks in the target operating system. If an event for a new SAVD is received the virtual disk activation manager performs the steps for activating the new SAVD. If an event for a removed SAVD is received the virtual disk activation manager performs the steps for de activating the removed SAVD. Because of the loop on the virtual disk activation manager started as a daemon to detect system events a loop is performed at after execution of the installation or removal of the virtual disk at .

According to aspects of the invention distribution of virtual appliances on different virtual disks is implemented by methods and systems that allow the software manufacturer to build a SAVD that comprises software application binaries the product disk this SAVD product disk being automatically installed by the user or replaced on the user s site virtual machine so as to avoid performing manual operations.

One aspect for the software manufacturer distributing the applications with SAVDs is that the creation of a SAVD product disk by the software manufacturer in the software manufacturer s preparation site can also be automated as described in relation with the description of . This method may allow the software manufacturer to avoid distributing an operating system in the virtual appliance. The virtual appliance may only comprise one SAVD as virtual disk containing the application binaries and all the artifacts necessary to an auto installation or replacement of the application in the virtual machine environment of the customer. When upgrading the application by replacing the SAVD product disk the customer will not change the virtual machine operating system virtual disk on which the customer may have included additional data and configurations that could get lost if the operating system disk had been distributed with the application upgrade virtual appliance. Furthermore the overall size of the artifacts required to install the appliance is reduced since all the operating system related files are not included.

One additional aspect is that the operating system is not distributed with a new version of the application. Thus the manufacturer avoids issues related to the licensing agreement required when the operating system needs to be re distributed along with a new version of the virtual appliance. In fact usually the operating system comes with a proprietary license that prevents a free redistribution of the image.

According to aspects of the invention the software manufacturer may choose to distribute an operating system virtual disk and a SAVD product disk in the first version of the application virtual appliance and to distribute an SAVD product disk only for each new version the application. The manufacturer could also distribute an operating system disk with a SAVD containing an application upgrade. However the distribution of an operating system disk with a SAVD containing an application upgrade may not be necessary as one aspect of the invention will be lost which is that the customer avoids modifying the customer s operating system base system when replacing the SAVD to upgrade the application binaries on the customer s site.

Aspects set out more fully herein rely on a particular sequencing and usage of APIs and commands that the specific virtualization vendor provides to implement such product installation upgrade. As an alternative to the silent and full automatic approach a user interface is provided that guides and assists the administrator in the reconfiguration process.

Aspects also rely upon the use of software packages to deliver software application libraries which include automatic operations to be executed on the target machine when installing the software application.

The virtual machine of the customer uses a new program the virtual disk activation manager which using a SAVD product disk unique identifier is able to detect and install uninstall a new or removed SAVD product disk and to start the automatic installation or replacement of the corresponding software on the target virtual machine.

The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. Aspects of the invention were chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

