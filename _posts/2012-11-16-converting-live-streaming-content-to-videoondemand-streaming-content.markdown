---

title: Converting live streaming content to video-on-demand streaming content
abstract: Systems and methods are provided for converting live streaming content or other streaming content to video-on-demand streaming content. In one embodiment, a stream conversion application receives a request to access electronic content from a target stream, such as a live stream. The request identifies the live stream. The request includes at least one time code specifying a start time for accessing electronic content in the live stream. The stream conversion application obtains the at least one time code from the request. The stream conversion application retrieves content segments from the live stream based on the at least one time code during or after publication of the live stream. The content segments include the requested electronic content from the live stream. The stream conversion application generates a video-on-demand stream by combining the content segments. The stream conversion application provides access to the video-on-demand stream.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09357239&OS=09357239&RS=09357239
owner: Adobe Systems Incorporated
number: 09357239
owner_city: San Jose
owner_country: US
publication_date: 20121116
---
This disclosure relates generally to computer implemented methods and systems and more particularly relates to converting live streaming content to video on demand streaming content.

Online content providers can provide electronic content to computing devices via data networks such as but not limited to the Internet a private intranet or a local area network. The term electronic content refers to any type of media that can be displayed or played on mobile and other computing devices. Online content providers can include an entity that produces electronic content or an entity that broadcasts electronic content produced by others. Electronic content can be streamed from a server system to a client computing device. Streaming electronic content can include for example live and on demand audiovisual content provided using connection oriented or connectionless i.e. dynamic streaming protocols such as but not limited to real time messaging protocol RTMP hypertext transfer protocol HTTP dynamic streaming HDS HTTP Live Streaming HLS and Dynamic Adaptive Streaming over HTTP DASH also known as MPEG DASH . Content providers also provide streaming electronic content depicting live events in real time.

Existing solutions for streaming electronic content include deficiencies with respect to converting live streaming content into video on demand streaming content. Content providers record the content of an entire live stream and store the stream to be provided as a video on demand stream. Recording and storing an entire live stream may inefficiently consume resources such as storage capacity and processing capacity. For example recording an entire live stream and later extracting desired portions of a live stream can consume more processing cycles and storage capacity than extracting only the desired portions of the live stream. Recording and storing the content of an entire live stream does not allow for slicing live streaming content to generate video on demand streaming content. Recording and storing the content of an entire live stream also does not allow for slicing and stitching multiple streams to create a customized on demand streaming experience.

One embodiment involves a processor receiving a request to access electronic content from a live stream or other target stream. The embodiment further involves obtaining at least one time code from the request specifying a start time for accessing the requested electronic content in the live stream. The embodiment further involves the processor retrieving content segments from the live stream or other target stream based on the at least one time code during or after publication of the live stream. The content segments include the requested electronic content from the live stream or other target stream. The embodiment further involves the processor generating a video on demand stream by combining the content segments and or portions thereof. The embodiment further involves the processor providing access to the video on demand stream. In some embodiments providing access to the video on demand stream for a given streaming protocol can include generating a media orchestration file used to access the video on demand stream.

These illustrative embodiments are mentioned not to limit or define the disclosure but to provide examples to aid understanding thereof. Additional embodiments are discussed in the Detailed Description and further description is provided there.

Computer implemented systems and methods are disclosed for converting live streaming content to video on demand streaming content. For example a live stream for broadcasting Olympic events may depict different events each of which occur during the same time period. For example a first source for the live stream may depict a javelin throw event a second source for the live stream may depict a badminton competition and a third source for the live stream may depict a racing event. Although the live stream may sequentially depict excerpts from each of the events a viewer may wish to view only the badminton competition. A stream conversion application can generate a separate video stream from different portions of the live stream that includes only streaming content for the badminton competition. The stream conversion application can generate the separate video stream by analyzing time codes embedded in the live stream and or identifying the portions of the live stream including the badminton competition. The stream conversion application can extract portions of the live stream including the badminton competition as the live stream is being published. The stream conversion application can thereby allow a broadcaster or other content provider of the video stream to extract specific content from a live stream as the live stream is published thereby allowing the content provider to make the extracted content available as a video on demand stream.

In accordance with one embodiment a stream conversion application or other suitable application can be provided for converting live streaming content to video on demand streaming content. The stream conversion application can receive a request to access electronic content from a live stream. The request can specify the requested task of converting a streaming content and can include request parameters regarding the requested stream conversion process. In some embodiments the request can be a local request that is communicated using the resources of a local computing device such as a processor and or data bus. In other embodiments the request can be a remote request that is transmitted from a remote computing device through a data network such as the Internet. The request identifies the live stream. The stream conversion application obtains at least one time code from the request specifying a start time for accessing the requested electronic content in the live stream. The parameters of request can include at least one uniform resource identifier URI or uniform resource name URN of the live stream and at least one time code specifying the start time code for accessing the electronic content of that live stream. In some embodiments the request can also include a parameter identifying an end time for accessing the electronic content in the live stream. In other embodiments the stream conversion application can subsequently receive an additional request including at least one additional time code as a request parameter that identifies an end time for accessing content in the live stream. In some embodiments the stream conversion application can provide a response that includes at least one unique conversion process identifier that identifies the conversion process such that further requests can reference the conversion process. The response can also include a current status of the conversion process if the conversion process commences immediately after receiving the request. The stream conversion application can retrieve content segments also known as content slices from the live stream based on the at least one time code during or after publication of the live stream. The content segments include the requested electronic content from the live stream. The stream conversion application can generate a video on demand stream by combining the content segments and or portions thereof. The stream conversion application can provide access to the video on demand stream. In some embodiments the stream conversion application provides access by generating or otherwise providing a media orchestration file that may be used by a video on demand protocol for accessing the video on demand stream.

As used herein the term electronic content is used to refer to any type of media that can be rendered for display or use at a computing system or other electronic device. Electronic content can include text or multimedia files such as images video audio or any combination thereof. Electronic content can also include application software that is designed to perform one or more specific tasks at a computing system.

As used herein the term converting is used to refer to extracting or slicing one or more portions of one or more streams stitching together or otherwise combining the portions from the stream s and generating a video on demand stream. In some embodiments converting involves extracting portions from one or more live streams and combining the portions in a video on demand stream. In other embodiments converting involves extracting portions from one or more video on demand streams and combining the portions in a customized video on demand stream.

As used herein the term live stream is used to refer to a stream or other feed of electronic content delivered in real time over the Internet or another data network. For example a camera or other suitable device can capture an event. An encoder can digitize the captured event to generate electronic content depicting the event. A content provider of live streaming content can publish or otherwise provide the electronic content in real time over a data network as the event occurs. Content providers can include an entity that produces electronic content or an entity that broadcasts or otherwise distributes electronic content produced by others. A non limiting example of a live stream is a stream of electronic content provided via HTTP Dynamic Streaming HDS .

As used herein the term video on demand is used to refer to systems and procedures for providing electronic content over the Internet or another data network in response to a request from a client. One example of video on demand content is a file that can be downloaded to a client device for playback at a later time by a client application executed at the client device. Another example of video on demand content is a video on demand stream that can be streamed to a client device for playback in real time by a client application executed at the client device.

As used herein the term video on demand VoD stream is used to refer to a stream or other feed of electronic content delivered over the Internet or another data network in response to a request from a client. A non limiting example of a video on demand is a stream of electronic content provided via HDS or HLS.

As used herein the term client is used to refer to an application and or a device executing an application to access streaming content provided by a content provider.

As used herein the term media orchestration file is used to refer to a file or other data identifying one or more sources from which a client can access electronic content such as streaming media content. A media orchestration file can also describe how electronic content is to be rendered by a client application as a media presentation at the client application. Non limiting examples of a media orchestration file include an index file a playlist a manifest file such as an .f4m file used for HDS or an .m3u8 used for HTTP Live Streaming HLS etc. A media orchestration file can include information such as but not limited to a date time frame numbers segment information and or bootstrap information for electronic content such as a streaming video.

As used herein the term time code is used to refer to a structured data format including but not limited to fields for time date user data frames per second FPS etc. A time field corresponds to a clock time in an appropriate format such as but not limited to HH MM SS FF format where FF denotes a frame number. A date field corresponds to a calendar date in an appropriate format such as but not limited to YYYY MM DD. A user data field can include any string such as but not limited to an event name. An optional FPS field can identify the FPS for the current stream.

In some embodiments the request can be a local request provided by another application or software module executed at the same computing device as the stream conversion application. The local request can include parameters specifying a source of the live stream a duration of the requested electronic content and a destination for the media orchestration file. In other embodiments the request for a stream conversion process to convert streaming electronic content is a remote request invocation interface RRII request. The RRII request can be transmitted by a client application executed at a remote computing device over a data network such as but not limited to the Internet. The RRII request can identify the requested electronic content using time codes. The RRII request can include any or all parameters that can be included in a local request including parameters specifying a source of the live stream a duration of the requested electronic content and a destination for the media orchestration file. A non limiting example of an RRII request is a Representational State Transfer REST request.

As used herein the term remote request invocation interface request is used to refer to a structured format for defining a stream conversion request and parameters included in the stream conversion request. RRII can be used for communicating the stream conversion request from a remote computing device to a stream conversion application via a data network. An RRII request can be transmitted using any suitable transport protocol e.g. TCP IP and or any suitable application protocol e.g. HTTP . An RRII request can be generated using any suitable programming language such as but not limited to extensible markup language XML . Interfaces for transmitting and receiving RRII requests can use any suitable interface standard such as but not limited to REST.

As used herein the term Representational State Transfer is used to refer to systems and processes used to implement application to application communication. A REST request can include information such as an identifier for the application requesting electronic content one or more identifiers for the requested electronic content a source for the requested electronic content etc.

A non limiting example of a time code is an SMPTE time code. An SMPTE time code is a time code for labeling individual segments of video or other electronic content such as frames of a video. SMPTE time code can be defined by the Society of Motion Picture and Television Engineers in an SMPTE specification.

In additional or alternative embodiments the request for a stream conversion process can include additional parameters to customize the VoD stream content. Non limiting examples of such additional parameters include a stream segment size bit rates encryption parameters a storage location for the VOD stream etc.

In additional or alternative embodiments the stream conversion application can wait for a relevant segment or portion of the electronic content to become available before beginning the stream conversion process. For example a relevant segment or portion of the electronic content may become available when a content provider publishes or otherwise makes the relevant segment or portion of the electronic content accessible via a live stream over a data network such as the Internet. The stream conversion application can determine that the content segments are available from the live stream. In one example the stream conversion application can check the live stream at regular intervals such as every five seconds to determine whether a desired content segment is available from the live stream. In another example the stream conversion application can execute an intelligent algorithm based on the latest time code of live media content to determine when the desired content segment will be available. If a desired content segment is not available from the live stream the stream conversion application can pause or terminate the stream conversion process. The stream conversion application can retrieve the content segments in response to determining that the content segments are available. At least some of the content segments are retrieved prior to an end time for the live stream.

In additional or alternative embodiments the stream conversion application can combine multiple content segments from the same live stream to generate a VoD stream. The request for a stream conversion process can include at least one time code specifying a start time for a first portion of the live stream at least one time code specifying an end time for the first portion of the live stream and at least one additional time code specifying a start time for a second portion of the live stream.

In additional or alternative embodiments the stream conversion application can combine electronic content from multiple live streams into a single VoD stream. A request for a stream conversion process can include at least one additional identifier e.g. an additional URI URN identifying at least one additional live stream and at least one additional time code specifying an additional start time for accessing content in the additional live stream. The stream conversion application can retrieve additional content segments from the additional live stream based on the at least one additional time code. The stream conversion application can retrieve the additional content segments during or after publication of the additional live stream. The stream conversion application can generate the VoD stream by combining the content segments from the live stream and the additional content segments from the additional live stream in a sequence specified as per the format of stream conversion request and using the at least one time code and the at least one additional time code. In some embodiments the live stream and the at least one additional live stream can have different bit rates. Generating the VoD stream can include converting the bit rates for the content from the respective streams to a common bit rate for providing the VoD stream.

In additional or alternative embodiments the source live stream s may have multi bit rate MBR stream components. The stream conversion application can retrieve all of the stream components simultaneously in a multi threading process. The stream conversion application can create a VoD stream that is a MBR stream.

In additional or alternative embodiments the stream conversion application can retrieve at least some of the content segments from a failover source for the live stream. For example a live stream can be provided from more than one server system. Providing the live stream from more than one server system can allow the live stream to be continuously published or otherwise provided in the event that one of the server systems experiences a failure such as a loss of network connectivity. The stream conversion application can determine that a primary server providing the live stream has experienced a failure. In response to determining that the primary server has experienced the failure the stream conversion application can select a failover server for retrieving the requested electronic content from the live stream.

Although the stream conversion application is described with respect to extracting content from one or more live streams other implementations are possible. In additional or alternative embodiments the stream conversion application can extract content from other streaming content such as video on streams during or after publication of the streaming content using time codes embedded in the streaming content. The stream conversion application can create a customized video on demand stream from another video on demand stream multiple video on demand streams or a combination of video on demand streams and live streams.

Referring now to the drawings is a block diagram depicting exemplary computing systems for implementing certain embodiments. The exemplary computing systems include a live streaming server system a video on demand VoD VoD server system and a computing device in communication via a network .

The live streaming server system can provide live streaming content to the VoD server system . The live streaming content may be resident in any suitable computer readable medium and execute on any suitable processor. In one embodiment the live streaming content can reside in memory at the live streaming server system . In another embodiment the live streaming content can be accessed by the live streaming server system from a remote location via the network and provided by the live streaming server system to the VoD server system .

The live streaming server system can include any suitable computing system for hosting or otherwise providing the live streaming content . In one embodiment the live streaming server system may be a single computing system. In another embodiment the live streaming server system may be a virtual server implemented using a number of computing systems connected in a grid or cloud computing topology.

The VoD server system comprises a computer readable medium such as a processor communicatively coupled to a memory that executes computer executable program instructions and or accesses information stored in the memory . The processor may comprise a microprocessor an application specific integrated circuit ASIC a state machine or other suitable processing device. The processor can include any of a number of computer processing devices including one. Such a processor can include or may be in communication with a computer readable medium storing instructions that when executed by the processor cause the processor to perform the steps described herein.

A computer readable medium may comprise but is not limited to electronic optical magnetic or other storage device capable of providing a processor with computer readable instructions. Other examples comprise but are not limited to a floppy disk CD ROM DVD magnetic disk memory chip ROM RAM an ASIC a configured processor optical storage magnetic tape or other magnetic storage or any other medium from which a computer processor can read instructions. The instructions may comprise processor specific instructions generated by a compiler and or an interpreter from code written in any suitable computer programming language including for example C C C Visual Basic Java Python Perl JavaScript and ActionScript.

The VoD server system may also comprise a number of external or internal devices such as input or output devices. For example the VoD server system is shown with an input output I O interface . A bus can also be included in the VoD server system . The bus can communicatively couple one or more components of the VoD server system .

Although depicts the RRII module and the stream conversion core module as separate modules the features provided by one or more of the modules can be provided by a single software module of the stream conversion application . Although depicts the RRII module and the stream conversion core module as modules of the stream conversion application one or more of the RRII module and the stream conversion core module can be separate applications accessed or otherwise used by the stream conversion application .

The VoD server system can include any suitable computing system for hosting the stream conversion application . In one embodiment the VoD server system may be a single computing system. In another embodiment the VoD server system may be a virtual server implemented using a number of computing systems connected in a grid or cloud computing topology.

The computing device comprises a computer readable medium such as a processor communicatively coupled to a memory that executes computer executable program instructions and or accesses information stored in the memory . The processor may comprise a microprocessor an ASIC a state machine or other processor. The processor can include any of a number of computer processing devices including one. Such a processor can include or may be in communication with a computer readable medium. The computer readable medium stores instructions that when executed by the processor cause the processor to perform the steps described herein.

The computing device may also comprise a number of external or internal devices such as a mouse a CD ROM DVD a keyboard a display audio speakers one or more microphones or any other input or output devices. For example the computing device is shown with an input output I O interface and a display device . A bus can also be included in the computing device . The bus can communicatively couple one or more components of the computing device .

The computing device can include any suitable device for communicating via a network and executing the client application . Non limiting examples of a computing device include a desktop computer a tablet computer a smart phone or any other computing device suitable for rendering electronic content.

Although depicts a client application executed at a computing device that is separate from the VoD server system other implementations are possible. In additional or alternative embodiments a client application and a stream conversion application can be executed at the same computing system or computing device. Requests for a stream conversion process can be communicated between a client application or other locally executed application and the stream conversion application via a bus processor or any other suitable mechanism for communicating data between software modules or software applications at a common computing system or common computing device.

The network can include any data network suitable for communicating streaming media content. Non limiting examples of a network include the internet a private intranet a local area network LAN a wide area network WAN an ad hoc network a cellular network such as but not limited to a code division multiple access CDMA network a Global System for Mobile Communications GSM network or a Universal Mobile Telecommunications System UMTS network a cable network a digital subscriber line DSL network a fiber network a Worldwide Interoperability for Microwave Access WiMAX network or any combination of some or all of these networks.

The live streaming server system can publish or otherwise make available the live streaming content . A non limiting example of live streaming content is a stream provided via HDS or HLS. The encoding module can encode the segments of each of the live streaming content with time codes for editing synchronization and identification as described in detail below. For example an encoding module can use an Action Message Format 0 AMF0 data packet to embed time codes in the live streaming content such as HDS streams or HLS streams. For the case of a stream provided via HLS customized data packets such as but not limited to AMF0 data packets can be inserted in a custom data elementary stream within a transport stream. HDS streams and HLS streams can otherwise be processed in a similar manner.

A non limiting example of a time code is an SMPTE time code. The SMPTE time code data packet or other time code message can include fields such as a time field a date field a user data field and a frame per second field. The time field for an SMPTE time code data packet can have a format for specifying an hour minute second and frame. An hour entry can have a two digit value between 00 and 23. A minute entry can have a two digit value between 00 and 59. A second entry can have a two digit value between 00 and 59. In some embodiments a frame entry can have a two digit value between 00 and the number of frames per second under the SMPTE standard. In other embodiments for which an NTSC standard is used a frame entry can have a two digit value between 2 and the number of frames per second under the SMPTE standard for cases in which the second entry is zero and the minute entry is selected not equal to 0 10 20 30 40 or 50. The date field for an SMPTE time code data packet can identify the date in a YYYY MM DD format. The user data field for an SMPTE time code data packet can include a string specifying user data using hexadecimal characters. Each hexadecimal character can correspond to 4 bits of each user data group of a linear time code frame or a vertical interval time code frame of a raw data stream. The frame per second field for an SMPTE time code data packet can specify the frames per second for the SMPTE time code.

An SMPTE time code or other time code can be included at multiple points in live streaming content . An SMPTE time code or other time code can be included at one or more points in the live streaming content . Non limiting examples of points at which an SMPTE time code can be inserted include but are not limited to the start of content identified by a group of pictures GOP code a point at which the date changes a point at which user data describing the live streaming content changes e.g. a change of event a point where the frame per second of the stream changes a point at which a gap in the stream of electronic content exists a point at which where there is some drop in the frame or any other arbitrary location.

An SMPTE time code data packet can be an AMF0 encoded data packet or other encoded data message. The encoding module can embed an AMF0 encoded data packet in live streaming content . In some embodiments the encoding module can calculate a time code for each access frame or data packet using a time code algorithm. For a video access frame that follows an SMPTE data packet the time code algorithm can generate a time code from a time code for the SMPTE data packet. For example the time code algorithm can select the value of the field SMPTE.time from a previous video frame. The time code algorithm can increment the frame entry. The time code algorithm can increase the value of the frame field by one for every video access frame encountered after an associated SMPTE data packet. The time code algorithm can set the frame entry to 0 and increment the seconds entry if the value for the frame entry is greater than a frame per second rate the same as that of an immediately preceding SMPTE data packet. For an audio frame access frame SMPTE.time can be the same as that of an immediately preceding video or SMPTE data packet. For a video and audio access frame SMPTE.date SMPTE.userData and SMPTE.fps can be the same as that of the previous SMPTE data packet.

Time codes can be embedded into a live stream or other stream at given intervals. A start time code included in a request for a stream conversion process can allow a stream conversion application to retrieve a first available content segment and approximate at least one second segment to be retrieved as per the starting time code. The stream conversion application can do so based upon the timestamp and time code include in the first time code data packet in the first available content segment. The stream conversion application can retrieve one or more content segments starting with the second content segment when the second content segment becomes available. The stream conversion application can calculate a respective time code value for all the media access units contained in content segments as per the algorithm described above. The stream conversion application can extract all media access unit having a time code value that is greater than or equal to a start time code included in the request for the stream conversion process and less than or equal to an end time code included in the request. In additional or alternative embodiments the stream conversion application can extract all media access unit having a time code value that is greater than or equal to a start time code included in the request for the stream conversion process until an end of stream marker is encountered.

In additional and alternative embodiments as time codes can include time and data fields the stream conversion process can be also used to slice or otherwise extract content from 24 7 running live stream.

The live streaming server system can provide live streams such as the live streaming content . Although the live streaming server system is depicted as providing two streams of live streaming content the live streaming server system can provide any number of live streams depicting any number of events.

A computing device can transmit a RRII request to the VoD server system . In some embodiments the RRII module can receive more than one request simultaneously. A RRII request can be for example an HTTP request in an extensible markup language XML format. The RRII request can include one or more request parameters for identifying requested content segments of the live streaming content . One example of a request parameter is a network address for the live streaming server system such as but not limited to a uniform resource locator. Another example of a request parameter is a duration of a VoD content segment or other media fragment. Another example of a request parameter is a duration of a VoD content segment or other media segment. Another example of a request parameter is a start time for a content segment. Another example of a request parameter is an end time for a content segment. Another example of a request parameter is a network address for a combined VoD stream .

Although depict a computing device separate from the VoD server system that transmits a request via the network other implementations are possible. In additional or alternative embodiments a client application and a stream conversion application can be executed at the same computing system or computing device. A request generated locally by a client application executed at the same computing system or computing device as the stream conversion application can be communicated via a bus processor or any other suitable mechanism for communicating data between software modules or software applications at a common computing system or common computing device. A locally generated request can include the same request parameters as a remotely generated request as described above.

The RRII module of the VoD server system can extract the request parameters . The RRII module can provide the request parameters to the stream conversion core module thereby invoking the stream conversion core module to perform stream conversion. In some embodiments the RRII module can launch multiple instances of stream conversion core module for multiple respective processes. Each process can include a separate stream conversion process. Each process can be executed by the processor . In some embodiments a request can specify a time and date in the time and date fields of a time code. The stream conversion core module can match the time and date fields of the time code of the request with time and date fields of time codes embedded in a live stream. The stream conversion application can extract or otherwise retrieve access frames based on matching the time and date fields of the time code of the request with time and date fields of time codes embedded in a live stream. In other embodiments a request can specify an event name in a user data field of a time code that can be matched with an event name specified in a user data field of time codes embedded in the live stream. The stream conversion application can extract or otherwise retrieve access frames having the same value in user data fields of live stream time codes.

The RRII module and or the stream conversion core module can additionally or alternatively provide additional request types and or interfaces for performing different operations with respect to conversion processes such as but not limited to initiating a conversion process stopping a conversion process specifying an end time code changing an end time code retrieving the status of conversion process etc.

In additional or alternative embodiments a computing device and or an application executed at the same computing device or system executing the stream conversion application can access the status of a stream conversion process executed by the stream conversion core module . The status of a stream conversion process can be accessed by transmitting or otherwise communicating an additional RRII or local request. The additional RRII or local request can include additional request parameters identifying the stream conversion process via a process identifier provided by the stream conversion core module in response to the request . The stream conversion core module can generate a status report to be provided to the computing device via the network .

In additional or alternative embodiments one or more of the request parameters can be provided in separate stream conversion requests. For example an end time for a content slice can be specified in an additional stream conversion request after the stream conversion core module has initiated the conversion of the live streaming content into the VoD stream in response to the request initiating a stream conversion process. Separate stream conversion requests can be RRII requests communicated by a remote computing device such as a computing device or local requests communicated by an application executed at the same computing device or computing system at which the stream conversion application is executed.

The stream conversion core module can retrieve bootstrap data for live streaming content provided via live streams. The bootstrap data can describe the live streaming content . For example an .f4m orchestration file in an XML format can include a bootstrap element such as a tag that includes bootstrap data as per the HDS streaming protocol. In some embodiments the stream conversion core module can retrieve the bootstrap data from the live streaming server system immediately upon receiving the request . In other embodiments if the live streaming server system has not commenced providing the live streaming content the stream conversion core module can wait for a pre determined amount of time to retrieve the bootstrap data.

The stream conversion core module can retrieve content segments from the live streaming content . The stream conversion core module can retrieve content segments using the request parameters extracted from the RRII request or provided to the stream conversion core module via a locally generated request . The content segments include the requested electronic content from the live streaming content 

To retrieve the content segments the stream conversion core module can traverse each segment of the live streaming content delineated by a time code data packet. The stream conversion core module can extract requested video audio and or data packets from each of the requested content segments . The stream conversion core module can extract the requested content segments until a slice end time corresponding to the end time for the requested electronic content is encounted. The stream conversion core module can additionally or alternatively extract the requested content segments until an end time marker for the live streaming content is encountered.

The stream conversion core module can generate a VoD stream by combining the retrieved content segments and or portions thereof. The VoD stream can be for example an HDS stream. In some embodiments the stream conversion core module can package data packets extracted from the live streaming content to generate VoD streaming content such as VoD stream .

In some embodiments the stream conversion core module can store VoD streaming content at a specified destination location such as a memory or a separate content provider server accessible by the VoD server system . For example the computing device can access the stored VoD streaming content at a desired time other than the time of publication for the live streaming content . The stream conversion core module can generate the VoD streaming content and host the VoD streaming content locally or at a remote server. Access information for the VoD streaming content such as a URI or URN of a system hosting the VoD streaming content can be provided in a response to a request or in response to a conversion process status request.

In some embodiments publish or otherwise provide a media orchestration file for a generated VoD stream to a computing device . A media orchestration file can be provided depending upon type of video on demand streaming content. The computing device can access the VoD stream using the media orchestration file . The VoD stream can be rendered for display at the display device of the computing device .

The stream conversion core module can retrieve content segments from the live streaming content using the request parameters . For example as depicted in the request parameters can specify that segments are requested by a client computing device . The stream conversion core module can retrieve the segments simultaneously as the live streaming content is published or otherwise made available by the live streaming server system . The stream conversion core module can allow a stream conversion process to begin before an end time marker for the live streaming content is encountered.

The speed of publishing the live streaming content by the live streaming server system may be slower than the conversion speed of the stream conversion core module . In some embodiments the stream conversion core module can wait for the live streaming content to reach a specified start time. The stream conversion core module can retrieve requested electronic content from the live streaming content as the respective segments and are published or otherwise made available by the live streaming server system .

In additional or alternative embodiments the stream conversion core module can configure the processor to execute a respective process for each of multiple live streams. Executing a respective process for each of multiple live streams can allow the stream conversion core module to account for different bit rates between different live streams to be combined or for live streaming content provided using multiple bit rate MBR streaming.

In one example the stream conversion core module can slice MBR streams and create a corresponding MBR VoD stream . An encoding module of the live streaming server system can provide multiple renditions of live streaming content . Each rendition can be a version of the live streaming content encoded at a different bit rate. For example a rendition encoded at a higher bit rate may be suitable for high speed network connections between a client device and a content provider and a rendition encoded at a lower bit rate may be suitable for low speed network connections between the client device and the content provider. The stream conversion application can generate a VoD stream that includes multiple renditions encoded at different bit rates. The computing device can select different renditions of the VoD stream in order to minimize interruptions in the rendering or other use of the VoD stream at the computing device . The stream conversion core module can configure the processor to execute a respective process for converting each rendition of the requested content from the live streaming content . Executing a respective process for each rendition can allow for independent conversion of each rendition.

In another example the live streaming content can have a first bit rate that is different from a bit rate for the live streaming content . Executing a respective process for each live stream respectively providing in the live streaming content can allow for independent conversion of each live stream.

In additional or alternative embodiments the stream conversion core module can calculate a start timestamp compute a segment number for the timestamp and retrieve the fragment of media content. The stream conversion core module can calculate the timestamp based on bootstrap information for the live streams and time code data packets to calculate a time code for each media access frame. The stream conversion core module can retrieve the requested segments that contain time code data packets or other time code messages identifying a time marker greater than the time code specified as a conversion start time. For example if a segment of the live streaming content is being published future segments are not available. The stream conversion core module module can switch to a waiting mode in which the stream conversion process is paused if the specified start time code is greater than the time code found in the available content segments. The stream conversion core module can resume a stream conversion process to retrieve the requested segments upon detecting that a time marker for one of the segments has a time code greater than a stream conversion process start time.

In some embodiments the stream conversion core module can retrieve content from the live streaming content using failover handling technology. For example a live streaming server system can include multiple servers for providing the live streaming content . Providing the live stream from more than one server can allow the live stream to be continuously published or otherwise provided in the event that one of the servers experiences a failure such as a loss of network connectivity. The stream conversion application can determine that a primary server of the live streaming server system has experienced a failure. In response to determining that the primary server has experienced the failure the stream conversion application can select a failover server of the live streaming server system for retrieving the content segments 

Although depict extracting content from live streaming content to generate a VoD stream other implementations are possible. In additional or alternative embodiments the stream conversion application can extract content from one or more target streams such as another video on demand stream multiple video on demand streams or a combination of video on demand streams and live streams. The stream conversion application can create a customized video on demand stream from the one or more target streams using the same or similar processes described in above with respect to the live streaming content 

The stream conversion application can be executed at the VoD server system by the processor to convert live streaming content to a VoD streaming content. is a flow chart illustrating an example method for converting live streaming content to video on demand streaming content. For illustrative purposes the method is described with reference to the system implementations depicted in . Other implementations however are possible.

The method involves receiving a request to access electronic content from a live stream or other target stream as shown in block . For example a computing device can provide a request to a VoD server system to access live streaming content and or live streaming content . The processor of the VoD server system can execute the RRII module to receive the request . The request can identify the live streaming content and or live streaming content . The request can additionally or alternatively include request parameters identifying the live streaming server system as a source of the live streaming content a duration of the requested electronic content corresponding to the content segments and a destination for a media orchestration file .

The method further involves obtaining at least one time code from the request that specifies a start time for accessing the requested electronic content in the live stream or other target stream as shown in block . The processor of the VoD server system can execute the RRII module to receive a request from a remote computing device such as a computing device or from another application executed at the computing system in which the processor is included.

In some embodiments the request can include at least one time code specifying a start time for accessing electronic content in the live stream. For example the request can include SMPTE time codes identifying content segments 

The RRII module can configure the processor to execute the stream conversion core module in response to the RRII module receiving the request . In some embodiments the RRII module can provide time code s from the request to the stream conversion core module . In other embodiments the RRII module can provide the request including request parameters to the stream conversion core module .

The method further involves retrieving content segments from the live stream based on the at least one time code included in the request during or after publication of the live stream or other target stream as shown in block . The processor of the VoD server system can execute the stream conversion core module to retrieve content segments such as content segments of live streaming content . In some embodiments retrieving the content segments includes slicing each content segment using one or more time markers specified by one or more respective time codes.

In additional or alternative embodiments the stream conversion core module can determine whether the content segments are available from the live streaming content . The stream conversion core module retrieves the content segments in response to determining that the content segments are available. At least some of the content segments are retrieved prior to an end time for the live streaming content 

The method further involves generating a VoD stream by combining the content segments and or portions thereof as shown in block . The processor of the VoD server system can execute the stream conversion core module to combine the content segments into the VoD stream as described above with respect to .

The method further involves providing access to the VoD stream as shown in block . The processor of the VoD server system can execute the stream conversion core module to provide access to the VoD stream .

In some embodiments the stream conversion core module can provide access to the VoD stream by generating and or otherwise providing a media orchestration file for accessing the VoD stream . The stream conversion core module can generate and or otherwise provide the media orchestration file as specified in the protocol of for the destination VoD stream . The processor can provide the media orchestration file to a client such as the computing device via the network . The media orchestration file can identify a source from which a client such as the computing device can access the VoD stream . For example the VoD stream may be stored at a content server separate from the VoD server system . A media orchestration file can include a network address or other identifier that the computing device can use to access the VoD stream . Non limiting examples of a media orchestration file include an index file a manifest a playlist etc.

Numerous specific details are set forth herein to provide a thorough understanding of the claimed subject matter. However those skilled in the art will understand that the claimed subject matter may be practiced without these specific details. In other instances methods apparatuses or systems that would be known by one of ordinary skill have not been described in detail so as not to obscure claimed subject matter.

Unless specifically stated otherwise it is appreciated that throughout this specification discussions utilizing terms such as processing computing calculating determining and identifying or the like refer to actions or processes of a computing device such as one or more computers or a similar electronic computing device or devices that manipulate or transform data represented as physical electronic or magnetic quantities within memories registers or other information storage devices transmission devices or display devices of the computing platform.

The system or systems discussed herein are not limited to any particular hardware architecture or configuration. A computing device can include any suitable arrangement of components that provide a result conditioned on one or more inputs. Suitable computing devices include multipurpose microprocessor based computer systems accessing stored software that programs or configures the computing system from a general purpose computing apparatus to a specialized computing apparatus implementing one or more embodiments of the present subject matter. Any suitable programming scripting or other type of language or combinations of languages may be used to implement the teachings contained herein in software to be used in programming or configuring a computing device.

Embodiments of the methods disclosed herein may be performed in the operation of such computing devices. The order of the blocks presented in the examples above can be varied for example blocks can be re ordered combined and or broken into sub blocks. Certain blocks or processes can be performed in parallel.

The use of adapted to or configured to herein is meant as open and inclusive language that does not foreclose devices adapted to or configured to perform additional tasks or steps. Additionally the use of based on is meant to be open and inclusive in that a process step calculation or other action based on one or more recited conditions or values may in practice be based on additional conditions or values beyond those recited. Headings lists and numbering included herein are for ease of explanation only and are not meant to be limiting.

While the present subject matter has been described in detail with respect to specific embodiments thereof it will be appreciated that those skilled in the art upon attaining an understanding of the foregoing may readily produce alterations to variations of and equivalents to such embodiments. Accordingly it should be understood that the present disclosure has been presented for purposes of example rather than limitation and does not preclude inclusion of such modifications variations and or additions to the present subject matter as would be readily apparent to one of ordinary skill in the art.

