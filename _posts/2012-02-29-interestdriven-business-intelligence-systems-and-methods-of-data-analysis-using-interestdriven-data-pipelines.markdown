---

title: Interest-driven business intelligence systems and methods of data analysis using interest-driven data pipelines
abstract: Interest-driven Business Intelligence (BI) systems in accordance with embodiments of the invention are illustrated. In one embodiment of the invention, a data processing system includes raw data storage containing raw data, metadata storage containing metadata that describes the raw data, and an interest-driven data pipeline that is automatically compiled to generate reporting data using the raw data, wherein the interest-driven data pipeline is compiled based upon reporting data requirements automatically derived from at least one report specification defined using the metadata.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08447721&OS=08447721&RS=08447721
owner: Platfora, Inc.
number: 08447721
owner_city: San Mateo
owner_country: US
publication_date: 20120229
---
The current application claims priority to U.S. Provisional Patent Application No. 61 505 271 filed Jul. 7 2011 the disclosure of which is incorporated herein by reference.

The present invention relates to business intelligence systems specifically interest driven business intelligence systems and methods of data analysis using interest driven data pipelines.

Business intelligence refers to techniques for identifying processing and analyzing business data. Business intelligence systems can provide historical current and predictive views of business operations. Business data generated during the course of business operations including data generated from business processes and the additional data created by employees and customers may be structured semi structured or unstructured depending on the context and knowledge surrounding the data. In many cases data generated from business processes is structured whereas data generated from customer interactions with the business is semi structured or unstructured. Due to the amount of data generally generated during the course of business operations business intelligence systems are commonly built on top of and utilize a data warehouse.

Data warehouses are utilized to store analyze and report data for example business data. Data warehouses utilize databases to store analyze and harness the data in a productive and cost effective manner. A variety of databases are commonly utilized such as a relational database management system RDBMS such as the Oracle Database from the Oracle Corporation of Santa Clara Calif. or a massively parallel processing analytical database such as Teradata from the Teradata Corporation of Miamisburg Ohio. Business intelligence BI and analytical tools such as SAS from SAS Institute Inc. of Cary N.C. are used to access the data stored in the database and provide an interface for developers to generate reports manage and mine the stored data perform statistical analysis business planning forecasting and other business functions. Most reports created using BI took are created by database administrators and the underlying database may be tuned for the expected access patterns. A database administrator may index pre aggregate or restrict access to specific relations allow ad hoc reporting and exploration.

Online transaction processing OLTP systems are designed to facilitate and manage transaction based applications. OTLP may refer to a variety of transactions such a database management system transactions business or commercial transactions. OLTP systems typically have low latency response to user requests.

Online analytical processing OLAP a modification of OLTP is an approach to answering multidimensional analytical queries. OLAP tools enable users to analyze multidimensional data utilizing three basic analytical operations consolidation aggregating data drill down navigating details of data and slice and dice take specific sets of data and view from multiple viewpoints . The basis for any OLAP system is an OLAP cube. An OLAP cube is a data structure allowing for fast analysis of data with the capability of manipulating and analyzing data from multiple perspectives. OLAP cubes typically are composed of numeric facts called measures categorized by dimensions. These facts and measures are commonly created from a star schema or a snowflake schema of tables in a RDBMS.

A snowflake schema is an arrangement of tables in a RDMBS with a central fact table connected to one or more dimension tables. The dimension tables in a snowflake schema are normalized into multiple related tables for a complex schema there will be many relationships between the dimension tables resulting in a schema which looks like a snowflake. A star schema is a specific form of a snowflake schema having a fact table referencing one or more dimension tables. However in a star schema the dimensions are normalized into a single table the fact table is the center and the dimension tables are the points of the star.

Returning to OLAP systems measures are derived from fact tables which are typically composed of the measurements or data of a business process. Dimensions are derived from the dimension tables. In other words a measure has a set of labels where the description of the labels is described in the corresponding dimension. Two varieties of OLAP took are commonly used relational. OLAP ROLAP and multidimensional OLAP NOLAN. Both ROLAP and MOLAP are designed to allow analysis of data through the use of a multidimensional data model.

ROLAP took access the data in a relational database and generate SQL queries to calculate information at the appropriate level when an end user requests it. With ROLAP it is possible to create additional database tables summary tables or aggregations which summarize the data at any desired combination of dimensions. While ROLAP uses a relational database source generally the database must be carefully designed for ROLAP use. A database which was designed for OLTP will not function well as a ROLAP database. Therefore ROLAP still involves creating an additional copy of the data. However since it is a database a variety of technologies can be used to populate the database. One example of a ROLAP tool is the Pentaho BI Suite from the Pentaho Corporation of Orlando Fla.

MOLAP took differ from ROLAP took in that MOLAP took often involve the pre computation and storage of information in an OLAP cube. Most MOLAP solutions store this data as an in memory multidimensional array rather than in a relational database. This pre processing and storage of data allows for fast query performance due to optimized storage multidimensional indexing and caching and automated computation of higher level aggregates of the data. However the pre processing and storage of data has some disadvantages such as a long processing step especially when dealing with large volumes of data. MOLAP took traditionally have difficulty querying models with dimensions with very high cardinality or a large number of dimensions. One example of a MOLAP tool is the Cognos Powerplay system from International. Business Machines of Armonk N.Y.

Predictive analytics encompasses a variety of statistical techniques from modeling data mining and game theory that analyze current and historical facts to make predictions about future events. Generally when referring to business intelligence systems the term predictive analytics is used to mean predictive modeling scoring data with predictive models and forecasting.

Businesses are increasingly capturing and storing machine generated data such as server logs or records of user interactions with a system resulting in the generation of extremely large amounts of data. Accordingly machine generated data is exposing many of the limitations of traditional. BI systems that are not designed to handle such large volumes of data. The systems used to store such large volumes of data are typically high latency and therefore provide very poor interactivity. Traditional business intelligence systems often utilize an in memory processing model where datasets are loaded into system memory for analysis from a data warehouse using a data pipeline. Existing systems utilizing this method require a significant amount of labor by highly trained engineers and business intelligence analysts to build the data pipeline to populate the in memory dataset based upon the raw data. Further there is no active updating of the in memory dataset once the data pipeline has been built. Changes or updates to the data pipeline typically involve further efforts from the supporting engineers and analysts and the end user typically does not have visibility concerning data that is not in the in memory data set that may be available for analysis.

Interest driven Business Intelligence BI systems in accordance with embodiments of the invention are capable of managing huge datasets in a way that provides a user with complete visibility into the available data and the ability to dynamically reconfigure the BI system s data pipeline to provide access to desired information.

Systems and methods for interest driven business intelligence systems in accordance with embodiments of the invention are illustrated. In one embodiment of the invention a data processing system includes raw data storage containing raw data metadata storage containing metadata that describes the raw data and an interest driven data pipeline that is automatically compiled to generate reporting data using the raw data wherein the interest driven data pipeline is compiled based upon reporting data requirements automatically derived from at least one report specification defined using the metadata.

In another embodiment of the invention the interest driven data pipeline is automatically compiled based upon at least one change selected from the group consisting of a change to the reporting data requirements a change to the metadata and a change to the raw data.

In an additional embodiment of the invention the data processing system further includes source data storage configured to store source data wherein the interest driven data pipeline is configured to create source data by performing an extract transform and load ETL process on raw data using a source model.

In yet another embodiment of the invention the data processing system further includes aggregate data storage configured to store aggregate data wherein the interest driven data pipeline is configured to generate aggregate data by performing aggregations using the source data.

In still another embodiment of the invention the interest driven data pipeline is configured to generate aggregations utilizing the reporting data requirements.

In still yet another embodiment of the invention the data processing system further includes an intermediate processing layer wherein the intermediate processing layer includes a data manager configured to store data models and an interest driven data pipeline compiler.

In yet another embodiment of the invention the intermediate processing layer accesses data within the raw data storage.

In still another embodiment of the invention the interest driven data pipeline is automatically compiled utilizing the interest driven data pipeline compiler.

In still yet another embodiment of the invention the intermediate processing layer is configured to perform raw data intake comprising updating raw data and updating reporting data.

In yet another embodiment of the invention the data processing system is configured as an interest driven business intelligence system including a business intelligence reporting engine wherein the business intelligence reporting engine includes reporting data storage configured to store reporting data.

In still another embodiment of the invention the business intelligence reporting engine comprises a user interface configured to display data and receive requests for data.

In still yet another embodiment of the invention the interest driven business intelligence system further includes report specification storage configured to store report specifications wherein the interest driven business intelligence system is configured to receive at least one report specification.

In yet another embodiment of the invention the interest driven data pipeline is configured to automatically generate reporting data requirements using at least one report specification.

In still another embodiment of the invention the business intelligence reporting engine is configured to generate a report utilizing the report specification and the reporting data.

In still yet another embodiment of the invention the interest driven business intelligence system includes an interest driven data pipeline compiler wherein the interest driven data pipeline is configured to convert the raw data into source data utilizing an extract transform and load ETL process utilize the reporting data requirements to generate aggregation processes that are applied to the source data to generate aggregate data and generate a data model based upon the reporting data requirements and to populate the data model using the aggregate data to generate reporting data wherein the interest driven data pipeline compiler is configured to automatically compile the interest driven data pipeline in response to the interest driven business intelligence system receiving a report specification modifying the reporting data requirements.

In yet another embodiment of the invention the interest driven data pipeline compiler is configured to update the ETL process in response to the modifications to the reporting data requirements.

In still another embodiment of the invention the interest driven data pipeline compiler is configured to generate new aggregations in response to the modifications to the reporting data requirements.

In still yet another embodiment of the invention the interest driven data pipeline compiler is configured to generate a new data model in response to the modifications to the reporting data requirements.

In yet another embodiment of the invention the report comprises at least one visualization where the at least one visualization is configured to process and display reporting data.

Yet another embodiment of the invention includes an interest driven business intelligence system including raw data storage system configured to contain raw data and perform ETL processes metadata storage configured to contain metadata that describes the raw data aggregate data storage configured to contain aggregate data generated using ETL processes from the raw data a business intelligence reporting engine configured to receive user explorations of the metadata that define at least one report specification and an intermediate processing layer where the intermediate processing layer is configured to automatically derive reporting data requirements from the at least one report specification and compile an interest driven data pipeline based upon the reporting data requirements where automatically compiling the interest driven data pipeline includes generating ETL processing jobs to generate aggregate data from the raw data and generating reporting data using the aggregate data wherein the business intelligence reporting engine is configured to generate at least one report based upon the at least one report specification using the reporting data wherein the business intelligence reporting engine is configured to provide interactive exploration of the at least one report wherein the business intelligence reporting engine is configured to update the reporting data requirements in real time based upon the interactive exploration of the at least one report and wherein the intermediate processing layer is configured to automatically recompile the interest driven data pipeline in to generate additional reporting data in response to changes in the reporting data requirements.

In still another embodiment of the invention the data warehouse is implemented utilizing a system selected from the group consisting of a distributed computing system a database management system and a NoSQL database.

In still yet another embodiment of the invention the data warehouse is a distributed computing system implemented utilizing Hadoop.

In yet another embodiment of the invention the data warehouse is configured to store data generated utilizing the intermediate processing layer.

In still another embodiment of the invention the intermediate processing layer is configured to generate data warehouse requests.

In still yet another embodiment of the invention the data warehouse requests are requests selected from the group consisting of Hive queries and MapReduce operations.

In yet another embodiment of the invention the intermediate processing layer is implemented utilizing a system selected from the group consisting of a distributed computing system a database management system and a NoSQL database system.

In still another embodiment of the invention the business intelligence reporting engine is configured to display an indication based upon the interactive exploration of the at least one report.

In still yet another embodiment of the invention the indication is an estimate of the time needed to update the reporting data requirements.

Yet another embodiment of the invention includes creating a report utilizing an interest driven business intelligence system including storing raw data in raw data storage receiving report definitions generated utilizing metadata describing the raw data using the interest driven business intelligence system automatically generating reporting data requirements derived from report definitions using the interest driven business intelligence system automatically compiling an interest driven data pipeline that is part of the interest driven business intelligence system using the reporting data requirements and the raw data generating reporting data from the reporting data requirements using the interest driven data pipeline populating reports with the reporting data using the interest driven business intelligence system providing interactive exploration of the reports using the interest driven business intelligence system and automatically compiling the interest driven data pipeline to generate additional reporting data in response to changes in the reporting data requirements defined during the interactive exploration of the reports using the interest driven business intelligence system.

Turning now to the drawings interest driven Business Intelligence BI systems in accordance with embodiments of the invention are illustrated. BI systems are a specific kind of data processing systems adapted for business uses however the systems and methods described below are applicable to any data processing system. The term interest driven can be used to describe a class of BI system that is able to dynamically build a data pipeline to provide an end user with information of interest. In many embodiments interest driven BI systems are capable of managing huge datasets in a way that provides a user with complete visibility into the available data and the ability to dynamically reconfigure the BI system s data pipeline to provide access to desired information.

In several embodiments an interest driven BI system accumulates raw data in a raw data storage system. An interest driven data pipeline can then load source data into a data warehouse using and Extract Transform Load ETU process. In a number of embodiments the ETL process involves extracting data from data sources transforming the data and loading the data into data storage in accordance with data processing techniques known to those of ordinary skill in the art. The interest driven data pipeline then fillers and or aggregates the source data based upon a schema to create reporting data. A data aggregation is typically understood as referring to a function where multiple pieces of data are grouped together to form a single value filtering involves creating subsets of data. Throughout the specification the term aggregation is used to describe aggregation and or filtering processes. Common data aggregations include but are not limited to taking an average counting summing finding the maximum value the minimum value the median value and or the mode. In many embodiments the reporting data is stored in a data mart and used to generate visualizations in reports displayed to a user by the BI system. Due to the interest driven nature of the data pipeline the ETL processes and the filtering and aggregation processes utilized to generate the reporting data can be dynamically reconfigured based upon the data that is of interest to a user. At each stage in the interest driven data pipeline metadata concerning the underlying data is passed forward to the user. Accordingly the user is aware of all available data. In the event that data of interest is not included in the reporting data provided by the interest driven data pipeline then the interest driven BI system dynamically rebuilds the interest driven data pipeline to make the data available within the reporting data for exploration by the user.

Utilizing an interest driven data pipeline can reduce or eliminate the need for engineers or business intelligence analysts to hand tune a data pipeline. Instead of relying upon engineers or business intelligence analysts to build a data set for analysts to query an interest driven data pipeline is automatically modified in real time in response to a variety of human and non human factors including incoming data changing schema evolutions in the business intelligence data or in response to actions taken by an analyst. An example of an interest driven data pipeline in action is when an additional data source or field within an existing data source becomes available. The description of this additional data can either be specified or automatically detected and then this metadata can be automatically pushed forward all the way through the interest driven BI system so that end users can utilize the additional data without having to pay the upfront cost of transforming and materializing the additional data which would require an investment of time and labor from supporting engineers and analysts in a traditional data pipeline.

In a number of embodiments the accumulation of raw data the ETL processing of the raw data to create source data and the storage of the source data in a data warehouse are performed using a distributed computing platform such as but not limited to Apache Hadoop which is often referred to simply as Hadoop. Distributed computing platforms provide a relatively inexpensive reliable and scalable storage layer capable of growing to store petabytes of data utilizing commodity hardware. In addition distributed computing platforms are capable of parallel processing of data utilizing MapReduce queries and other processing methods.

While distributed computing platforms can store massive amounts of data distributed computing platforms commonly have a very poor response time where jobs or queries can take minutes or even hours. Additionally while MapReduce is a powerful tool for those engineers highly skilled in parallel processing techniques the use of MapReduce is beyond the scope of most engineers and analysts. In order to achieve highly interactive performance an interest driven BI system can dynamically build the stages of a multi stage data pipeline to load data of interest into system memory based on the desired end consumption of the data. Changes specified at the report level can be automatically compiled and traced backward by the interest driven BI system to create an appropriate data pipeline to meet the new report requirements.

In a number of embodiments the interest driven data pipeline is built by an intermediate processing layer that sits between a business intelligence front end used by business analysts and a distributed computing platform. This intermediate processing layer can receive requests from business analysts or other users and automatically create an interest driven data pipeline to retrieve data from the distributed computing platform perform any necessary processing and return reporting data for in memory exploration by the user. Often the intermediate processing layer stores reporting data in data marts for exploration by users. The intermediate processing layer can be implemented on a single machine or parallelized across multiple systems providing for a platform which can respond as quickly as an in memory business intelligence system without the limitations of a conventional in memory business intelligence system. Accordingly an analyst using an interest driven BI system can rapidly generate frequently used reports using data retrieved and held in memory by the intermediate processing layer and at the same time has the ability to drill down into the underlying raw data utilizing the interest driven data pipeline. Interest driven BI systems and methods for dynamically building interest driven data pipelines in accordance with embodiments of the invention are discussed further below.

An interest driven BI system in accordance with an embodiment of the invention is illustrated in . The interest driven BI system includes a distributed computing platform configured to store raw business data. The distributed computing platform is configured to communicate with an intermediate processing system via a network . In several embodiments of the invention the network is a local area network. In many embodiments the distributed computing platform communicates with the intermediate processing system via the Internet . The intermediate processing system is also configured to communicate with one or more client devices including cellular telephones personal computers and presentation devices utilizing a network . In many embodiments of the invention the client devices include any computing device capable of receiving and or displaying data. In several embodiments of the invention the client devices are configured to communicate with the intermediate processing system . In a number of embodiments the client devices are configured to communicate with the data warehouse .

In many embodiments of the invention the distributed computing platform is a cluster of computers configured as a distributed computing platform utilizing Hadoop. Hadoop is a software library which allows for distributed processing of data sets across clusters of nodes. Hadoop is designed to scale from one to thousands of nodes where each node is a computer responsible for its own processing and storage of data. In order to provide reliability as the number of computers scales Hadoop is designed to detect and handle failures in software and or hardware overcoming unreliability in the individual nodes. Hadoop is capable of storing data utilizing the Hadoop Distributed File System HDFS running parallel processes utilizing Hadoop MapReduce and supports SQL like querying utilizing Hive along with other functionality provided by various projects many of which are supported by the Apache Foundation. In a number of embodiments the distributed computing platform is configured to run jobs generated by the interest driven BI system utilizing Hadoop MapReduce and queries utilizing Hive. In this way the distributed computing platform can be configured to act as a raw data storage system and a data warehouse within the interest driven BI system. In other embodiments alternative distributed processing systems can be utilized the distributed processing system can be replaced with a Massively Parallel. Processing architecture and or a separate data warehouse may be populated by the distributed processing system or an equivalent system configured to manage massive data sets.

In several embodiments the intermediate processing system is also implemented using one or a cluster of computing devices. The intermediate processing system enables users to specify reports including data visualizations that enable the user to explore the raw data stored within the distributed computing platform . Based upon the visualizations specified by the users the intermediate processing system automatically creates and or updates one or more interest driven data pipelines to create or update reporting data. The interest driven data pipeline is typically configured by pushing down jobs to the distributed computing platform to create source data and then applying various filler and or aggregation processes to the source data using the intermediate processing system to produce reporting data that is stored in memory. The process of budding an interest driven data pipeline is discussed further below.

In many embodiments of the invention the distributed computing system the intermediate processing system and the client devices are implemented utilizing a Service Oriented Architecture SOA where for example the distributed computing system and intermediate processing system are services communicating through the cloud. In several embodiments the distributed computing system intermediate processing system and client devices are implemented utilizing a multi tier architecture.

Interest driven BI systems such as the system illustrated in can be understood in terms of conceptual layers that can be developed and deployed independently of each other. A layer diagram illustrating layers of an interest driven BI system in accordance with an embodiment of the invention is illustrated in . The system contains a BI reporting engine . The BI reporting engine includes the user interface and other programming interfaces allowing users and systems to interact with the interest driven BI system. The interest driven BI system also contains an intermediate processing layer . The intermediate processing layer contains a data manager and an interest driven data pipeline compiler . The intermediate processing layer is designed to process requests from the BI reporting engine manage the data and data models stored in the data manager create configure and update an interest driven data pipeline using the interest driven data pipeline compiler . The interest driven data pipeline is created by pushing down ETL jobs that load desired source data into a data warehouse layer from a raw data storage layer . As discussed above both the raw data storage layer and the data warehouse layer can be implemented using a distributed computing system such as Hadoop. The interest driven data pipeline built by the intermediate processing layer also applies filtering and or aggregation processes to the source data stored in the data warehouse layer to generate reporting data that is held in memory by the intermediate processing layer for exploration via the BI reporting engine .

The intermediate processing layer is not limited to recompiling the interest driven data pipeline based upon user interactions. When new data becomes available the intermediate processing layer can dynamically update the models stored in the data manager . Metadata concerning the new data is passed to the user via the BI reporting engine and the user can initiate the rebuilding of the interest driven data pipeline using the data pipeline compiler in order to explore the new data. In a number of embodiments of the invention the intermediate processing layer provides an application programming interface capable of providing access to a variety of data stored in the intermediate processing layer . The application programming interface provides data access to both the BI reporting engine and third party programs.

Although specific architectures for an interest driven BI system are illustrated in any of a variety of architectures configured to store large data sets and to automatically build interest driven data pipelines based upon reports built by users in accordance with embodiments of the invention can also be utilized. Systems and methods for creating utilizing and updating interest driven data pipelines utilizing interest driven BI systems in accordance with embodiments of the invention are discussed further below.

The primary purpose of an interest driven BI system is to enable users to explore the raw business data being collected by the BI system. Before the raw data can be explored the data is characterized and an interest driven data pipeline is constructed. A high level overview of the processes that enable the exploration of raw business data using an interest driven BI system in accordance with an embodiment of the invention is illustrated in . The process involves wrangling data which involves creating metadata describing the structure to the raw data stored in the interest driven BI system. The data is then modeled . Modeling data involves determining which aspects of the data should be made available and any desired aggregations or fillers. In many embodiments the aspects of the data are dimensions of a fact table in a star or snowflake schema. A dataspace is constructed using a schema. In many embodiments of the invention the schema may be a star or snowflake schema. Once the dataspace is constructed reports may be built . Using the reports users can explore the data. Exploring the data typically involves visualizing the data and identifying various aspects of the data for further exploration. Based on the exploration of data the dataspace may be updated or a new dataspace may be constructed .

Although a specific process for exploring data using an interest driven BI system is illustrated in any of a variety of processes that enable the dynamic building of an interest driven data pipeline can be utilized in accordance with embodiments of the invention. The manner in which the processes described above enable the automatic creation of an interest driven data pipeline in accordance with embodiments of the invention are discussed further below.

An interest driven BI system in accordance with embodiments of the invention can dynamically build a data pipeline to load reporting data in memory based upon descriptions of the raw data and report specifications provided by users. Stated another way the interest driven BI system takes a description of the raw data provided by a user and a description of the manner in which a user wishes to explore the raw data and dynamically builds a data pipeline to extract the desired data from a raw data storage system for in memory interactive exploration by a user.

A process for budding an interest driven data pipeline in accordance with an embodiment of the invention is illustrated in . The interest driven data pipeline uses a source model generated utilizing metadata created during a data wrangling process to automatically build an ETL process that takes raw data and generates source data . In embodiments where the raw data is stored within a distributed computing system the ETL processes are generated as jobs that are passed to the distributed computing platform.

Report requirements specified by a user and or defined within the BI system are used to determine aggregations and or fillers . The aggregations and or fillers are applied to the source data using an aggregation process that creates aggregate data . Where a distributed computing platform generates the source data the interest driven BI system can automatically generate jobs that are provided to the distributed computing platform to perform the aggregation and or filtering associated with the aggregation process .

A schema budder can also utilize the report requirements to create a schema . In a number of embodiments the schema is a star schema or a snowflake schema. In other embodiments any schema appropriate to a specific application can be utilized. A process is applied to the aggregate data to populate the schema to provide reporting data that can be loaded in memory and used in the interactive generation of reports by users to facilitate the visualization and exploration of the data. In many embodiments an intermediate processing system builds the schema using the aggregate data generated by a distributed computing platform that holds the raw data. At which point the reporting data is held in memory and can be utilized interactively i.e. in a low latency fashion . In many embodiments the reporting data may be utilized in a data processing system other than an interest driven business intelligence system.

Although a specific process for dynamically building an interest driven data pipeline is illustrated in any of a variety of processes can be utilized to automaticatty transform raw data according to the data consumption of end users in accordance with embodiments of the invention. The manner in which interest driven data pipelines can be dynamically reconfigured in response to user interactions and the addition of new data sources to an interest driven BI system in accordance with embodiments of the invention are discussed further below.

In many embodiments of the invention an interest driven data pipeline is dynamically created or compiled based on user interactions with the system and as new data enters the system. For example as a user explores the data using the interest driven BI system the user can configure a report. Based on the configuration an interest driven data pipeline is created or updated by compiling a set of transformations which structure and summarize the data and make it available in a low latency format for the user to interactively explore. The following five examples further detail how the user interactions with the interest driven BI system cause changes in the interest driven data pipeline.

First as illustrated in the user interaction involves the user exploring reporting data using a user interface . The user may perform actions supported by the BI reporting engine which involve the user viewing the reporting data such as changing visualizations changing fillers or changing aggregating levels. In many embodiments the reporting data is a schema populated with data from an interest driven data pipeline. Because the underlying reporting data is unchanged by user actions the BI reporting engine does not cause any changes in the interest driven data pipeline.

Turning now to a second user interaction is illustrated. The user uses a user interface provided by a BI reporting engine to create new derived data based on the reporting data such as calculated derived measures computed columns or sets and populations. The new derived data is fed back into an interest driven data pipeline causing the interest driven data pipeline to update the reporting data based on the new derived data . Further the interest driven data pipeline may update itself based on the update to the reporting data .

A third user interaction is illustrated in . The user interaction involves the user using a user interface provided by the BI reporting engine in order to modify the aggregation process by changing the data present in the reporting data . The modifications provided by the user may take a variety of forms such as pulling in new source data from the raw data via the ETL process changing the fillers used in the ETL process and the aggregation process changing the aggregation levels used by the aggregation process and or altering how the reporting data is populated utilizing the aggregate data . By changing the reporting data the user causes the interest driven data pipeline to compile a new aggregation process in order to create the aggregate data used in the population of the reporting data . The new aggregation process may involve changes in the ETL process in order to support necessary changes in the source data used by the aggregation process . As the interest driven data pipeline is updated the reporting data is updated and the user is able to interact with the updated reporting data .

A fourth user interaction is illustrated in . The user interaction involves the user using the user interface provided by the BI reporting engine in order to modifying aspects of the data generator e.g. adding data sources or modifying the data obtained from the data sources the ETL process and the aggregation process . By modifying the data generator the ETL process and or the aggregation process the user causes the interest driven data pipeline to dynamically update causing new raw data source data and aggregate data to be created and propagating reporting data to the BI reporting engine by utilizing the aggregate data to populate the reporting data . Here the user is able to dynamically reconfigure the interest driven data pipeline and receive updated reporting data without any hand tuning by engineers or business analysts.

Finally a fifth user interaction is illustrated in . The user interaction involves adding new data generators causing new raw data to become available to the interest driven data pipeline. The user interaction may also involve updates to the ETL process such as updated data processing and normalization based on the new raw data made available. Based on these changes the interest driven data pipeline is dynamically reconfigured causing new source data to be made available for the aggregation process creating new aggregate data which can be utilized to populate new reporting data . The BI reporting engine makes the new reporting data available to a user via a user interface . In this way the interest driven data pipeline dynamically provides access to new data generators.

In the above examples the user interface may be provided by a BI reporting engine. Although specific examples of user interactions and subsequent effects on interest driven data pipelines within an interest driven BI system are described above these are purely illustrative and any variety of user interactions may be utilized in accordance with embodiments of the invention. Methods for processing and interacting with data utilizing interest driven BI systems in accordance with embodiments of the invention are discussed further below.

Interest driven data pipelines often involve applying an ETL process to raw data generating source data for use by users of interest driven BI systems. A process for processing raw data into source data in accordance with an embodiment of the invention is illustrated in . The process begins with retrieving raw data. In many embodiments the raw data is machine generated data. Fillers and transformations are applied to the raw data. In a number of embodiments the fillers and transformations are defined by characterizing the data. The raw data may also be aggregated . In several embodiments aggregating the data involves reducing the dimensionality of the raw data. Optimizations may also be applied to the raw data. In a number of embodiments optimizing raw data involves formatting the data for low latency access.

After process is complete source data has been created from raw data. In many embodiments the raw data is preserved to support the creation of new source data or refinement of existing source data at a later time. Although a specific process for generating source data from raw data is illustrated in any of a variety of processes can be utilized to generate source data from raw data in an interest driven data pipeline in accordance with embodiments of the invention. Methods for processing and interacting with source data including methods for creating fillers and transformations utilizing interest driven BI system in accordance with embodiments of the invention are discussed further below.

In order to support a variety of visualizations and user interactions in interest driven BI systems aggregate data is often created utilizing source data in order to provide a variety of views of the data. A process for creating aggregate data in accordance with an embodiment of the invention is illustrated in . The process begins with obtaining source data. A check if aggregation is utilized in the data pipeline is performed. If aggregation is not utilized the source data may be returned as aggregate data. If aggregation is utilized in the data pipeline aggregate data is generated utilizing the source data. The aggregate data may be returned . Another check is performed to determine if further aggregations are required. If so additional aggregate data is generated . The process completes when no further aggregations are required.

In many embodiments of the invention the aggregations used to generate aggregate data are determined based on user interactions with the interest driven BI system. In several embodiments of the invention the aggregations used to generate aggregate data are determined utilizing an interest driven data pipeline.

Although a specific process for aggregating source data is described above any process which aggregates data may be utilized in accordance with embodiments of the invention. Methods for handling data utilizing interest driven BI systems in accordance with embodiments of the invention are discussed further below.

In order to create a source model which can be utilized in an ETL process to generate source data from raw data a user first wrangles the raw data. Data wrangling involves creating metadata providing a structure for parsing raw data and analyzing information related to the raw data. A process for wrangling data in accordance with an embodiment of the invention is illustrated in . Raw data may be structured semi tructured or unstructured. While the structure of structured raw data is already known the data wrangling process may involve identifying the structure of semi structured or unstructured raw data. In several embodiments additional structure may be identified for structured raw data. Identifying the structure of raw data involves defining the meaning and structure of the raw data such as users selecting and identifying data fields present in the raw data.

Fillers and transformations are applied to the raw data. In many embodiments the filters and transformations are used to create datasets which may include sample data rows. Statistics can also be generated . The generated statistics can include aspects such as how many rows are in the raw data how large is the raw data number of available dimensions or attributes various statistical distributions or any other relevant statistical measurement. In many embodiments of the invention metadata containing the dataset and the generated statistics are utilized by users and interest driven data pipelines to create and refine source models. Although a specific process for performing data wrangling is shown in any of a variety of processes for preparing raw data for processing by an interest driven data pipeline can be utilized in accordance with embodiments of the invention.

Once data wrangling has occurred the interest driven data pipeline is capable of utilizing the metadata to construct and populate a variety of in memory data models. Processes for defining and populating schemas utilizing interest driven BI systems in accordance with embodiments of the invention are described in more detail below.

In order to support user interactions with data it is often useful to construct a schema defining the structure and content of reporting data. A process for creating and populating a schema for an in memory data model for use in data exploration in accordance with an embodiment of the invention is illustrated in . The process involves receiving a request. This request may be a user request related to a new visualization the user wants to create a modification to an existing report or visualization or any other action supported in an interest driven BI system. In several embodiments the request may be automatically generated by an interest driven data pipeline. Requests are translated into a schema for an in memory data model. In several embodiments the schema is a star or snowflake schema based on the data present in the interest driven BI system. A containment analysis may be performed in order to determine if a schema capable of partially or fulfilling the request already exists in the interest driven BI system. The interest driven data pipeline may re write the definition of existing schemas. Schemes may be re written for a variety of reasons including optimizing performance and or resource utilization. Any creation or modification of schemas may also involve additional aggregations to be performed on the data.

In a number of embodiments if an existing schema fulfills the request the interest driven data pipeline can re write the schema in order to fulfill the request. Schemes may be created or re written for a variety of reasons such as including new data alterations to the fillers applied to data modifying aggregations of data or any other modification or alteration to the schema necessary to support the needs of the users or the interest driven data pipeline.

Once schemas have been created data may be loaded into in memory data models using the schemas. The in memory data models can be explored in a low latency fashion using a BI reporting engine. Although a specific process for building a schema is illustrated in any of a variety of processes for budding schemas appropriate for use in an interest driven data pipeline can be utilized in accordance with embodiments of the invention. Processes for using schemas to load data into in memory data models utilizing interest driven BI systems in accordance with embodiments of the invention are described in more detail below.

To provide a low latency interactive user experience interest driven BI systems utilize in memory data structures to contain the reporting data used to support the reports and visualizations with which the users interact. A process for populating an in memory data structure in accordance with an embodiment of the invention is illustrated in . The process involves obtaining a schema. In a number of embodiments the schema is a star or snowflake schema. An in memory data structure is then created utilizing the schema. In many embodiments the structure created is an OLAP cube based on the facts and dimensions defined in the schema.

Measures and dimensions are derived for the in memory data structure. Deriving measures and dimensions may be based on the levels of aggregation desired for the data stored in the in memory data structure providing for levels of granularity in the levels of aggregation for the data. The in memory data structure is populated with aggregated data utilizing an interest driven data pipeline.

Although a specific process for loading in memory data structures is illustrated in any process for loading data into low latency storage for use by a BI system can be utilized in accordance with embodiments of the invention. Aside from loading data so that it may be analyzed and used by users interest driven BI systems are also responsible for the continuous intake of raw data. Processes for processing incoming raw data in interest driven BI systems in accordance with embodiments of the invention are discussed further below.

In real world operation an interest driven BI system is continuously adding new raw data and new data sources even as users and interest driven data pipelines are interacting with the data present in the interest driven BI system. A process for raw data intake in accordance with an embodiment of the invention is illustrated in . The process involves receiving raw data. The raw data received may be raw data generated in accordance with existing business processes or a new source of raw data. The raw data is added to the data warehouse. The raw data is also matched to existing schemas. In a number of embodiments the matching of raw data to existing schemas is performed utilizing an interest driven data pipeline. If the raw data matches any existing schemas updates to the schemas are performed. The updates may involve updates to the aggregations of the data utilized by the schema and any related updates to the interest driven data pipeline.

In order to provide users with the most up to date view of the data without incurring the overhead and latency of storing raw data in a data warehouse and retrieving that data to update the interest driven data pipeline a number of embodiments of the invention support adding raw data to the data warehouse and match data to existing schemas independently of each other using a data manager. The data manager ensures the data warehouse contains the latest version of the raw data for later exploration and mining while the data models currently present in the interest driven data pipeline can be updated as quickly as possible providing users and interest driven data pipelines with the latest version of the data.

Although a specific process for analyzing real time data using an interest driven BI system is illustrated in any of a variety of processes can be utilized to integrate new data into an interest driven data pipeline in accordance with embodiments of the invention. In order to utilize the data stored in an interest driven BI system a user interface is provided in order to allow users the ability to visualize and interact with the data. Processes for user interaction with data in accordance with embodiments of the invention are discussed further below.

Reports are the primary method for users to visualize explore and present data stored in interest driven BI systems in accordance with many embodiments of the invention. Reports generated by users also define and cause updates to interest driven data pipelines. A process for generating reports in accordance with an embodiment of the invention is illustrated in . The process involves creating a report and selecting visualizations to include in the report. In many embodiments the users are creating and interacting with reports utilizing a BI reporting engine provided by the interest driven BI system. Visualizations are capable of displaying any data stored in the interest driven BI system. Users may define the data shown in visualizations including defining various levels of aggregation of the data and combining data from multiple sources.

Based on the requirements for the visualizations the interest driven BI system utilizes interest driven data pipelines to generate the data required to support the visualizations. Generating reports involves populating the visualizations present in the report using data provided by interest driven data pipelines. Once the reports are generated they can be used and modified by users. Although a specific process for generating a report is illustrated in any of a variety of processes appropriate to a specific application can be utilized to explore data using an interest driven BI system in accordance with embodiments of the invention. Processes for creating visualizations selecting data for reports and exploring data in accordance with embodiments of the invention are discussed further below.

Visualizations as the name suggests are the actual viewable embodiment of data stored in an interest driven BI system. Visualizations may take many forms such as pie charts bar charts tables or any other form which enables the viewing of data. A process for defining and populating visualizations in accordance with an embodiment of the invention is illustrated in . The process involves defining a visualization. In several embodiments defining a visualization includes defining filters and or aggregations on data stored in an interest driven BI system. In many embodiments defining a visualization involves performing operation on an OLAP cube such as slicing dicing and drilling down. Defining visualizations may also involve the creation of and interaction with a variety of data summarizations such as pivot tables or rollups.

Once the visualization is defined the data space containing the data that supports the visualization is retrieved . In a number of embodiments a data space may be any number of in memory data models such as an OLAP cube a relational model or objects stored in memory. Using the data space the visualization is populated enabling the viewing of the data present in the visualization. In a number of embodiments visualizations are created and displayed using a BI reporting engine. Although a specific process for generating visualizations is illustrated in any of a variety of processes can be utilized in data exploration using a BI engine in accordance with embodiments of the invention. Additional processes for interacting with interest driven BI systems in accordance with embodiments of the invention are discussed further below.

Interest driven BI systems dynamically provide the user with access to a variety of raw data utilizing interest driven data pipelines. However the interest driven BI system may not be able to provide this dynamic data access in a low latency fashion in all cases. A process for estimating the amount of time involved in providing a particular piece of data or visualization to a user in accordance with an embodiment of the invention is illustrated in . The process involves presenting a catalog overview the catalog overview includes a listing of data present in the interest driven BI system. In a number of embodiments the catalog overview presented is a product of a data wrangling process.

In many embodiments the interest driven BI system suggests visualizations which may be of interest to the user. In a number of embodiments the interest driven BI system suggests data which the user may be interested in exploring. The desired data is selected from the catalog. The availability of the data is determined and a visual indicator is displayed indicating the amount of time to retrieve the desired data. For example a stoplight system may be utilized to indicate the amount of time to retrieve the desired data green indicates the data can be accessed quickly yellow indicates the data may be accessed in a few minutes and red indicates that accessing the data may take several hours due to the need to completely rebuild the data pipeline and or run MapReduce processes over a significant proportion of the raw data.

In many embodiments the determination of the availability of data depends on whether the data is present in an interest driven data pipeline and if so what stage of the interest driven data pipeline the data is in. Interest driven BI systems are capable of dynamically creating and updating interest driven data pipelines in order to provide access to any data present in the system. The visual indicator displayed regarding the availability of data not present in an existing interest driven data pipeline may depend on the time involved in re compiling the interest driven data pipeline to provide the desired data.

Although a specific process for estimating data access times is described above any of a variety of processes may be utilized in accordance with embodiments of the invention. These processes may be based on a variety of metrics such as a processing power estimation instead of the time based stoplight system described above. Processes for exploring data in accordance with embodiments of the invention are discussed further below.

An important feature of many interest driven BI systems is the ability for users to explore the data stored in the interest driven BI system and to interact with that data enabling the users to find additional data for creating reports. A process for data exploration using an interest driven BI system in accordance with an embodiment of the invention is illustrated in . In a number of embodiments the process is performed by a user utilizing a BI reporting engine. The process involves presenting a catalog overview to the user the catalog overview includes a listing of data present in the interest driven BI system. Users are able to create queries utilizing the data present in the catalog overview. The query is processed . In many embodiments of the invention the processing of the query is performed utilizing an interest driven data pipeline. The result of the query is added to the catalog.

In a number of embodiments the results of the query are capable of being used by all users of the interest driven BI system. This sharing of query results can lead to many interesting features in an interest driven BI system. For example a collaborative aspect is added to many interest driven BI systems by incorporating communication functionality along with sharing query results. Additionally interest driven BI systems in accordance with many embodiments of the invention include a store where particular queries and custom visualizations can be bought and sold across different businesses utilizing interest driven BI systems.

Although the present invention has been described in certain specific aspects many additional modifications and variations would be apparent to those skilled in the art. It is therefore to be understood that the present invention may be practiced otherwise than specifically described. Thus embodiments of the present invention should be considered in all respects as illustrative and not restrictive.

