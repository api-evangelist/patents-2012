---

title: Control system for prosthetic limb
abstract: A controller for a prosthetic device includes a processing section, an interface section connected to the processing section, and a power supply connected to both the processing section and the interface section. A dorsal indicator and a dorsal switch are disposed in a hand portion of the prosthetic device, and are both connected to the interface section.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08999003&OS=08999003&RS=08999003
owner: The Johns Hopkins University
number: 08999003
owner_city: Baltimore
owner_country: US
publication_date: 20120831
---
This invention was made with government support under contract number N66001 06 C 8005 awarded by the Defense Advanced Research Projects Agency DARPA Defense Sciences Office DSO . The government has certain rights in the invention.

The present disclosure relates generally to prosthetic devices. More particularly the present disclosure relates to controllers and interfaces for modular prosthetic limbs.

There is an ongoing need for improved upper extremity prostheses that restore full motor and sensory capability to upper extremity amputees. Modular prosthetic limb systems typically include motors sensors controllers power supplies mechanical and electrical connectors interfaces and feedback mechanisms all of which are in addition to the prosthetic components themselves limbs hands fingers joints etc. . Other hardware and software components are also often required. However these prosthetic devices have very constrained space and power limitations so that the devices remain lightweight and portable. Technologies capable of controlling such a large number of devices included in a conventional modular prosthetic limb are currently orders of magnitude larger than the limb itself and consume substantial amounts of power. Accordingly conventional control systems must currently be mounted external to the prosthetic components themselves and therefore must be separately carried by the amputee or mounted on a wheelchair for example. Moreover as prosthetic limbs become modular such that individual components of the limbs can be swapped out as desired needed and as other advances are made in prosthetic technologies there is an ongoing and increasing need for controllers and interfaces that provide flexible accommodations for multiple prosthetic components while still minimizing the hardware and software footprints associated with the limbs and their associated controllers.

Accordingly there is a significant need for improved modular prosthetic limb controllers and interfaces.

Embodiments of the present invention include a controller for a prosthesis such as an upper extremity e.g. arm prosthesis that is patient controlled is recognized via neural interfaces is compact e.g. is contained within a hand or palm portion of the prosthesis and is perceived as natural with respect to function weight durability and comfort.

In accordance with one or more embodiments a controller for a prosthetic device includes a processing section an interface section connected to the processing section and a power supply connected to the processing section and the interface section. A dorsal indicator is disposed in a hand portion of the prosthetic device and is connected to the interface section and a dorsal switch is also disposed in the hand portion and connected to the interface section.

In accordance with another embodiment a system for controlling a prosthetic device includes a limb controller a power supply a controller area network bus connected to the limb controller and finger buses connected to the limb controller. The limb controller includes a processing section an interface section connected to the processing section an indicator disposed in a hand portion of the prosthetic device and connected to the interface section and a dorsal switch disposed in the hand portion and connected to the interface section. The power supply is connected to the processing section and the interface section.

Other embodiments including but not limited to apparatuses systems and methods for example will be readily apparent from the detailed description and drawings presented herein.

Exemplary embodiments of the present invention include a control system for a prosthesis such as an upper extremity arm prosthesis for example. As can be determined from the embodiments described herein the control system is compact is patient controlled is recognized via neural interfaces and is perceived by the patient as natural with respect to function weight durability and comfort .

In general example embodiments of a control system include an ultra compact controller for a hand and limb which communicates and controls numerous motors sensors and devices in a modular prosthetic limb MPL . In addition to being very small e.g. capable of being located completely within the hand portion of the MPL the controller is separated into both a processing section as well as an interface section which is physically separate from the processing section to allow flexible interfaces without changing the associated control software. This architecture also provides for flexible power management of the MPL considerably increasing battery life. The controller according to one or more embodiments includes five main interfaces each described in further detail below but which generally speaking include a controller area network which provides a modular reliable and fault tolerant path for communications between the controller and the rest of the limb system and which provides the controller intent from a neural system RS 485 compatible custom finger buses designed to have small hardware and software footprints and which provide communication with all motor controllers and sensor nodes in the hand allowing easy adaptability to more conventional devices as desired a power source from which the controller receives a single direct current DC power input from the limb and distributes this power to all electronics in the hand via microminiature connectors a multi color dorsal light emitting diode LED indicator located in the hand which the limb controller drives to provide patient feedback and a dorsal pushbutton switch also located in the hand through which the controller interfaces with the controller area network bus to provide a variety of signals to the power system.

Conventional controllers that might be capable of controlling the volume and variety of interfaces and devices in the MPL described herein would be orders of magnitude larger and consume considerably larger amounts of power than in one or more embodiments of the present invention described herein. Although some conventional single board computers might have computational capabilities approaching those of the controller according to example embodiments of the present invention described herein these single board computers are too large to fit within a prosthetic hand and additionally lack interfaces that could communicate with the number of external devices used in the MPL.

In contrast example embodiments described herein are constructed by pairing a mobile processor with a low power field programmable gate array FPGA over simple high speed serial interfaces. The use of the FPGA together with the mobile processor allows for combining numerous interfaces into a single package and also allows for customization of the interface. Specifically for example using an FPGA allows the combination of multiple streams of communication traffic into a single serial link thus enabling fast direct memory access DMA transfers from the processor to multiple destinations. In addition the FPGA allows the inclusion of other additional features in the limb controller such as wakeup sleep timers for the processor for example. Accordingly the FPGA provides a large amount of standard custom and semi custom interfaces as generally described above and which are described in further detail below while using a separate processor for the complex control algorithms that control the limb. This hybrid segmented approach also allows for a clean division providing a 2 board system which naturally follows the curvature of the prosthetic hand but also allows for alternative mounting options at least one of which will be described below.

Example embodiments of the present invention will now be described in greater detail with reference to the accompanying drawings. Referring to which is a block diagram of a system for controlling a prosthetic device the system includes a controller e.g. a limb controller a system controller area network CAN bus and a plurality of finger buses only one shown in . The system CAN bus and the finger buses are connected to the limb controller by input output I O interfaces . Relative to the system CAN bus the finger buses have small hardware and software footprints since motor controllers and sensor nodes within the fingers have extremely restrictive space and power requirements.

The limb controller is one component of an MPL not shown . More particularly the limb controller is the central processor and manager of the MPL. Thus the limb controller which in one or more embodiments is packaged inside the hand of the MPL and more particularly may be packaged completely within a palm portion of the hand is responsible for high level coordinated control of the hand and large motor joints as well as assorted system housekeeping activities and functions. However it will be noted that since the MPL system is a modular system the limb controller is also amenable to being mounted in other locations in or proximate to the MPL.

One function of the limb controller is to control movement of the arm hand and fingers of the MPL. Accordingly user intent commands are received from a neural fusion unit NFU which is connected to the limb controller by the system CAN bus and the I O interface as shown in . Commands from the NFU as well as position statuses from a large motor controller LMC and a plurality of small motor controllers SMCs only one shown in which are received via the system CAN bus and the finger buses respectively allow control algorithms in the limb controller to generate new commands for the motor controllers and .

In additional embodiments the limb controller uses the system CAN bus for interfacing to additional devices accessories such as radio frequency identification RFID readers cellular smart telephones and personal digital assistants PDAs for example although additional or alternative embodiments are not limited thereto.

In one or more embodiments the limb controller is responsible for at least the following operations in the system accepting user e.g. patient or amputee intent commands from the NFU acquiring status information from the large motor controller and providing user intent and status information to a limb control algorithm for processing calculating new commands for the large motor controller using the limb control algorithm sending commands to the large motor controller based on the output of the limb control algorithm acquiring status information from the small motor controllers in the hand providing user intent and status information to a hand control algorithm for processing calculating new commands for the small motor using the hand control algorithm sending commands to the small motor controllers based on the output of the hand control algorithm collecting sensor information and forwarding the data to a percept encoding algorithm accepting configuration commands from a virtual integration environment VIE NFU pass thru and forwarding the configuration commands to the appropriate limb node accepting application programs from the VIE NFU pass thru and forwarding the application programs to the appropriate limb node and or storing the programs locally accepting and processing mode change commands received from the VIE via the NFU sending state commands to all of the nodes in the limb system providing configuration parameter storage and distribution and interfacing to a light emitting diode LED for visual user feedback.

The limb controller also provides sensory data to the percept encoding algorithm from the sensors within the limb. This feedback allows the patient to sense external conditions without being limited to visual feedback.

As noted above example embodiments include two types of motor controllers with which the limb controller communicates. More specifically the LMC is used to move the upper arm forearm and wrist of the MPL based on commands received from the limb controller . The LMC also provides position feedback to the limb controller for use by the abovementioned control algorithms. Communications between the LMC and the limb controller are accomplished by exchanging messages on the system CAN bus. Similarly the SMCs are used to move the fingers and thumb of the MPL. In an example embodiment the LMC and the SMCs communicate with the limb controller using a serial interface although alternative embodiments are not limited thereto.

The limb controller also reports sensory information such as position temperature torque and vibration for example to the patient using the abovementioned percept encoding algorithm . Accordingly temperature position contact and torque sensors and respectively are located in the hand portion of the MPL. More specifically as shown in a given SMC has connected to it a temperature sensor a position sensor a contact sensor and a torque sensor . Although only one of the respective temperature position contact and torque sensors and are connected to the SMC in it will be noted that additional example embodiments are not limited thereto rather alternative embodiments may include more than one of each of the foregoing sensors connected to the SMC or to other components for that matter . Specifically for example in a particular alternative embodiment two or more position sensors may be connected to the SMC . Additionally the LMC may have sensors connected to it e.g. one or more of a position sensor and or a torque sensor as is shown in .

In one or more embodiments a serial interface is used to communicate sensor feedback to the limb controller as well as to the NFU via the system CAN bus . The limb controller maintains the status of various data structures which contain configuration parameters. These configuration parameters are maintained for real time tuning and observation. Accordingly the user can monitor and modify the content of these values as desired. These data structures include but are not limited to limb positions battery status system state and sensor information e.g. temperature torque force and vibration. 

Management of system updates for nodes on the hand as well as for the limb controller itself is performed by the limb controller . The limb controller also maintains a record of transactions and system information for the limb. This includes a mechanism for storing information in memory e.g. a flash memory for later recall as will be described in further detail below with reference to .

Still referring to to ensure that the MPL uses the available power efficiently the limb controller monitors the battery charge state such as by measuring the battery s voltage for example and sets an appropriate operating mode for the MPL based on the estimated available power remaining. If the available power is at a reduced level for example the limb controller reduces the amount of current supplied to the motor controllers and . To further conserve power the limb controller may enter a low power mode when a processor shown in and described below is idle. The limb controller subsequently comes out of the low power mode when an event that utilizes the processor occurs. In an example embodiment a system CAN message or serial input from a sensor will cause the limb controller to exit the low power mode.

The system CAN bus is the MPL s system interface between the major nodes. In an example embodiment the system CAN bus is a multi master interface that allows each device to send information to one or more of the other nodes on the system bus in a single or multiple message frame transmission. A priority messaging scheme is used by the system CAN bus such that high priority messages are transmitted first. Based on this priority messaging capability the system messages are defined to ensure that the messages are given sufficient priority to meet the system timing criteria.

As shown in the system according to an example embodiment further includes at least one fingertip sensor node FTSN connected to the limb controller via the finger bus es as well as a socket controller SC connected to the limb controller via the system CAN bus .

The FTSN has a number of sensors not shown including but not being limited to position sensors e.g. potentiometer or Hall sensors contact sensors e.g. polyvinylidene difluoride contact sensors fingertip sensors and strain gauges each of which provide various position torque and or tactile feedback inputs to the limb controller . These sensors distributed throughout the entire limb provide the inputs for advanced control algorithms executed on the limb controller as well as for sensory feedback to the patient.

The socket controller is a module that sits directly at the attachment point of the MPL and controls the direct physical connection point. This module is responsible for the attachment interface as well as maintaining vacuum and a solid connection between the amputee patient and the MPL.

Referring now to which is a block diagram of an example embodiment of the limb controller the limb controller includes a processing section and an interface section connected to each other by a flex connect . In an example embodiment the flex connect includes multi channel buffered serial ports McBSPs but alternative embodiments are not limited thereto. The interface section is connected to the system CAN bus and the finger buses by corresponding I O interfaces .

The interface section includes a an FPGA which in a one embodiment is an Actel IGLOO AGL250 FPGA although it will be understood that additional example embodiments are not limited thereto. A board on which the FPGA is disposed is connected to a standard single pole momentary normally open switch which is located in a palm portion of the hand of the MPL as will be described in further detail below with reference to .

The FPGA provides a connection between a processor and the MPL. More particularly the FPGA acts as a universal asynchronous receiver transmitter UART interface in which the FPGA takes a high speed e.g. about 13 megabits per second Mbps or greater serial stream from the processor parallelizes the high speed serial stream and dispatches messages to the appropriate destination in the MPL. Further to its UART role the FPGA buffers transmit messages so that the processor can use an extremely efficient mechanism or protocol e.g. direct memory access and or high speed buffered serial to burst all message traffic in a short or compressed period of time if desired. The FPGA also receives messages from one or more of the aforementioned interfaces encodes them with the appropriate source information and sends them over the flex connect which includes McBSPs for example to the processor . In one embodiment this data is not buffered by the FPGA or is minimally buffered since buffers not shown in the processor may buffer these messages without CPU intervention.

The FPGA also supports system CAN bus transmission where the FPGA takes a high speed serial stream containing a CAN message from the processor and sends the message over the main limb CAN bus . More specifically the FPGA provides two software modalities interrupt driven message transmission on a message by message basis and buffered transmission of multiple messages without intervention from the processor .

In addition the FPGA also supports CAN bus reception e.g. taking CAN messages from the main limb system bus serializing and sending the messages to the processor for processing while providing hardware filtering to discard messages that the limb controller does not need to reduce interrupt burden on the processor while still interrupting the processor for specially tagged CAN messages thus allowing the processor to ignore certain messages for a time while still being made aware of other relatively urgent messages.

Still referring to the processing section also includes a memory as well as the aforementioned processor that runs limb control and supervisory functions connected to the memory . In an example embodiment the memory includes one or more NAND flash and or synchronous dynamic random access SDRAM memories in a common package such as a die stacked package and the processor CPU is a Texas Instruments OMAP 3503 processor although alternative example embodiments are not limited to the foregoing components. In an example embodiment the memory is implemented in a package on package POP configuration which is to say that in the memory two or more packages are installed on top of each other e.g. are vertically stacked.

A power supply supplies power to the abovementioned components of the processing section and the interface section . In an example embodiment the power supply provides DC power and is located separate from the limb controller in a wrist portion of the MPL. Alternatively the power supply may be integral to i.e. may be a part of the limb controller located completely in the palm portion of the MPL. More specifically in an alternative example embodiment the power supply may be physically disposed in the processing section although additional embodiments are not limited to the components or arrangements thereof described above.

Still referring to the interface section includes I O interfaces which include but are not limited to the controller area network bus and finger bus es shown in and was described in greater detail above. A dorsal switch is disposed in the interface section as will be described in further detail below with reference to .

As shown in the CPU board and the FPGA board are physically separate from each other and are offset e.g. are not located directly above each other in the hand portion but are electrically connected to each other by the flex connect . In an example embodiment planes defined by the boards and are angled with respect to each other by an angle such that the boards and conform to the contour of the dorsal shell e.g. to conform to the shape of the hand in the MPL and more particularly to the shape of the MPL palm. The angle may be from about e.g. approximately 10 degrees to about 20 degrees and in one example embodiment the angle is about 15 degrees although alternative embodiments are not limited to the foregoing angles. Moreover additional embodiments are not limited to the foregoing general arrangement of the boards and at all rather as will be described in further detail below with references to the boards and may be stacked directly on top of each other in the hand portion of the MPL.

As can be seen in the FPGA board is disposed above as viewed in but is offset from the CPU board . Further the boards and both include jacks e.g. mating receptacles for connecting the boards and to other components of the MPL. Although not specifically labeled in non limiting examples of the mating receptacles include a thumb mechanical hardware MHW section abduction and adduction AbAd MHW sections finger e.g. index middle ring and little finger MHW sections a wrist MHW section a debug section and the dorsal switch .

Using the two separate boards and in the palm portion of the MPL in the manner described above makes efficient use of available space in the hand portion . Specifically this arrangement provides extra area on the boards and allows for connection of multiple interfaces. Implementing the memory in a POP configuration as described above further saves space in the hand portion .

Using two separate boards also allows both of the boards and to be completely rigid which provides a significantly wider range of options related to fabricating the boards and . Further the CPU board and the FPGA board can be connected with a minimum of signals and a logical separation between the processing section and the interface section of the limb controller allows for easier debugging as well as reduced operational risk in that any problems the CPU board will not affect the FPGA board and vice versa .

As shown in the dorsal switch and dorsal indicator are disposed in the palm portion of the MPL. The FPGA board connects through two pins for example to the dorsal indicator which in an example embodiment is a dual LED device. The FPGA sources or sinks current to the two pins lighting either a red or green yellow LED for example. Additionally by lighting one LED or rapidly cycling between the two LEDs the dorsal indicator can display red green orange or other color indicators to provide information feedback to the user of the MPL.

During normal MPL operations e.g. when the MPL is powered on and not in receipt of a power up or power down command from the FPGA a CAN interface chip electrically connects the FPGA to the system CAN bus . For power down and power up operations however the FPGA is also connected to the dorsal switch via an associated mating receptacle . In an example embodiment the dorsal switch is a single pole normally open momentary switch but alternative example embodiments are not limited thereto. Thus the contact in the dorsal switch will normally be pulled up by a resistor not shown on the FPGA board and will be shorted to ground when the dorsal switch is pressed. The dorsal switch is also connected to a center tap of a split terminator for the system CAN bus which allows button presses to be seen locally by both the FPGA and the processor in the limb controller and additionally allows button presses to be seen outside the limb controller such as by the power supply in embodiments when it is external to the limb controller so that the power supply uses the switch signal to control power to the MPL. Additionally the FPGA provides the status of the dorsal switch to the processor . Furthermore the FPGA determines if a switch press indicates impending power down in which case the FPGA interrupts the processor .

Thus the user is able to turn the MPL on and off with a simple press of the dorsal switch . In addition the limb controller is able to command power off in response to system errors or other criteria. In an example embodiment when the MPL is turned off it is in an exceptionally low power state e.g. the processor is completely powered off i.e. does not require or use any power. Moreover the MPL does not require any additional wires between the limb controller in the hand portion and the power system which may in some embodiments be located as far away from the hand portion as the forearm of the MPL . This allows for only having four wires cross the wrist joint via a slip ring for example .

To implement the above and other advantages the limb controller according to one or more example embodiments sends power on and power off signals to the power supply via lines of the system CAN bus that cross the wrist in an example embodiment the CAN bus lines are the only electrical lines that cross the wrist . This is accomplished simply without a complex signaling protocol since the processor is not running i.e. is completely without power during the power off state of the MPL. Specifically in an example embodiment a CAN common node voltage at the power supply is monitored. Power on and power off commands are piggybacked on top of the normal communications lines and the system CAN bus uses a differential standard where high and low levels are determined by a relative difference between two lines e.g. between a CAN high line and a CAN low line which connect to a main limb power system P S not shown which is different from the power supply and is disposed in the MPL outside of the hand portion e.g. above the wrist portion of the MPL. This provides noise immunity and further provides for back channel signaling in which the power on and power off commands appear as noise to the communications bus chips while the power supply is still able to interpret the signal and use it to control power to the MPL.

As shown in the limb controller controls power to the MPL by sending a power down command via the FPGA to drive the gate of a transistor to a high level to connect the CAN common node voltage measured between a first resistor and a second resistor to ground. Alternatively the user can command power down by mechanically connecting the CAN common node to ground by pressing the dorsal switch .

Similarly the user commands power up by pressing the dorsal switch and the power up is actuated using a small bias voltage on the CAN common node lines without requiring any power or signals from the processor thereby allowing the processor to be completely powered down when the MPL is turned off which considerably reduces power consumption of the MPL while still allowing the user full and simple control of power to the MPL.

Referring now to which are cut away palm views of a hand portion of an MPL according to an alternative example embodiment the processing section having disposed thereon the CPU board and the interface section having disposed thereon the FPGA board described above with reference to are stacked disposed directly on top of one another i.e. are not offset from each other in the hand portion of the MPL. Specifically as shown in processing and interface sections and are both disposed in a single tray of a hand portion endoskeleton of the hand portion of the MPL. More specifically the processing section is disposed above the interface section as viewed in although alternative embodiments are not limited thereto.

In addition in an example embodiment the processing section is mounted in the tray of the hand portion such that the processing section can be folded e.g. pivoted away from the interface section to expose the interface section without the need to physically remove or unplug the processing section as shown in . This considerably improves the ease of performing testing repairs or maintenance on both the processing section and the interface section and further improves the lifetime and reliability of the limb controller since there is no need to repeatedly disconnect and reconnect components physically and or electrically to perform testing repairs or maintenance.

Having herein described various embodiments of improved modular prosthetic limb controllers and interfaces it will be understood that additional modifications can be made thereto. Therefore the above description shall not be construed as limiting the scope of the invention. Rather those of ordinary skill in the art will readily envision additional modifications within the spirit and scope of the present invention as defined by the appended claims.

