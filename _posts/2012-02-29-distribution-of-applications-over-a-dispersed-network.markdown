---

title: Distribution of applications over a dispersed network
abstract: Disclosed are various embodiments for facilitating anticipatory distribution of applications to a network of remote hosts. A demand for each of the applications is calculated. Based on criteria within the demand and computing resources available, remote hosts are selected to receive the applications. Transmissions of the applications to the selected remote hosts are scheduled and monitored for completion according to the schedule.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08924515&OS=08924515&RS=08924515
owner: Amazon Technologies, Inc.
number: 08924515
owner_city: Seattle
owner_country: US
publication_date: 20120229
---
Many interactive applications require a prompt responsive user interface for the application to be operable and for users to receive a satisfactory experience. Additionally users may prefer an application to be available for use at the time it is requested.

The present disclosure relates to facilitating remote execution of applications through anticipatory distribution of the applications to a network of computing devices. Many interactive applications require a prompt responsive user interface for the application to be operable and for users to receive a satisfactory experience. Various embodiments of the present disclosure are configured to execute applications in computing devices selected based at least upon the ability to provide a responsive user interface for the application. To this end computing devices may be chosen to provide execution of an application based on various factors such as network and computing resources available network path latency reliability and or other factors.

Under some circumstances a dispersed network of computing devices may provide an improved level of responsiveness due to the potential to be located in close proximity to the clients and the ability to easily scale to meet demand. However in order to employ a given computing device for remote execution the application should reside on the computing device or be promptly transferable to it upon request. Due to the large size of many applications limited network bandwidth limited computing resources and or other factors an on demand distribution of an application to remote computing devices may not be practicable for many applications. Therefore in order to have a given application resident on a computing device proximate to a potential client by the time it may be requested an anticipatory distribution of the application may be used. In the following discussion a general description of the system for distribution and its components is provided followed by a discussion of the operation of the same.

With reference to shown is a networked environment according to various embodiments. The networked environment includes a computing environment in data communication with one or more clients and remote hosts by way of a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks.

The computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively the computing environment may comprise a plurality of servers or other computing devices that are arranged for example in one or more server banks or computer banks or other arrangements. For example the computing environment may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. The computing environment may be located in a single installation or may be distributed among many different geographical locations.

Various applications and or other functionality may be executed in the computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the computing environment . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing environment for example include an electronic commerce system a component forecast service a component distribution service and other applications services processes systems engines or functionality not discussed in detail herein. The electronic commerce system is executed in order to facilitate the online purchase of items from one or more electronic marketplaces over the network . The electronic commerce system also performs various backend functions associated with the online presence of an electronic marketplace in order to facilitate the online purchase of items. For example the electronic commerce system generates content pages such as for example web pages and or other types of network content that are provided to clients for the purposes of promoting and selecting items for purchase rental download lease or any other forms of consumption.

The component forecast service is executed in order to facilitate generating a distribution of remote hosts to receive an application. The distribution of remote hosts may include specific individual remote hosts criteria for selecting the remote hosts alternate remote hosts a schedule for distribution and or other data related to the distribution of the application as can be appreciated. As is described in further detail herein the distribution of remote hosts may be based upon demand forecast data usage data resource data user data and or other data stored in the data store .

The component distribution service is executed in order to facilitate the timely distribution of applications to the remote hosts . To this end the component distribution service may communicate with remote hosts over various protocols such as for example hypertext transfer protocol HTTP file transfer protocol FTP HTTP Secure HTTPS simple object access protocol SOAP representational state transfer REST user datagram protocol UDP transmission control protocol TCP and or other protocols for communicating data over the network . In various embodiments the component distribution service may support the use of any cast services and or peer to peer P2P protocols such as for example BitTorrent for data communications. Additionally the component distribution service may monitor the progress of the scheduled distributions to ensure completion of the transfers occur according to the schedule.

The data stored in the data store includes for example distribution data user data usage data demand forecast data distribution state data resource data electronic marketplace and potentially other data. The distribution data may include information related to a plurality of applications that are or will be made available through the electronic marketplace for execution on remote hosts . Alternatively the applications may correspond to code that is executable within another type of device but is not executable directly by the central processing unit CPU of the remote hosts . Such applications may be referred to as binaries read only memory images ROMs and other terms. The various other data stored in distribution data may include for example virtual machines audio encoders video encoders and or any other data related to applications .

The user data includes various data related to the users of the applications and operators of the remote hosts such as for example security credentials application preferences billing information location recent network addresses and so on. Security credentials may comprise passwords digital certificates secret keys digital watermark identifiers and or other security related data. The usage data includes various data related to past usage of the applications by a user. The usage data may include the time and duration of each application session by a user performance metrics associated with the application session network addresses of the client and the remote host and other data associated with usage of the application.

The demand forecast data includes data that may be used in order to project demands for remote execution of the applications . To this end the demand forecast data may include historical demands for specific applications and or for general classes of applications release dates for applications dates for release of updated versions of applications and or other data relevant to forecasting demand for applications . Additionally the demand forecast data may specify portions of the demand data by location of users by age of the application by network service provider and other demand criteria as can be appreciated.

The distribution state data includes the current state of transmissions of the application to the selected remote hosts . The distribution state data may include the transmission start and target finish times schedule thresholds or milestones transfer rate estimated finish time alternate remote hosts communications protocol used and or other data associated with transmission of the application . The resource data may describe the computing and network resources of the remote hosts . The resource data may include the computing and network resources that are presently available and utilized as well as the schedule for both. The resources described may include CPU utilization CPU benchmark results graphics processor benchmark results memory available location storage available applications and associated data resident in storage network bandwidth network latency network service provider and or other resource data as can be appreciated.

The electronic marketplace corresponds to a network site through which users may initiate remote execution of applications submit requests for new applications pre order remote execution sessions of applications prior to release date and or potentially other data. The offerings relate to applications that are available or may be made available for remote execution by a remote host .

The client is representative of a plurality of client devices that may be coupled to the network . The clients may be geographically diverse. The client may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. The client may include a display . The display may comprise for example one or more devices such as cathode ray tubes CRTs liquid crystal display LCD screens gas plasma based flat panel displays LCD projectors and or other types of display devices.

The client may be configured to execute various applications such as a client application a browser and or other applications. The client application is executed to allow a user to launch join play or otherwise interact with an application executed in the remote host . In some embodiments the client application may also provide geographic location data through the use of the Global Positioning System GPS cell network positioning Wi Fi positioning and or other location techniques. The browser may be executed in a client for example to access and render network pages such as web pages or other network content served up by the computing environment and or other servers. The client may be configured to execute applications beyond the client application and the browser such as for example email applications instant message applications and or other applications. Any applications executed on the client may render a user interface on the display .

The remote host may comprise for example a personal computer or any other system providing computing capability. Alternatively a plurality of remote hosts may be employed that are arranged for example in one or more computer banks or other arrangements. For example a plurality of remote hosts together may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. Such remote hosts may be located in a single installation or may be distributed among many different geographical locations. For purposes of convenience the remote host may be referred to herein in the singular. Even though the remote host is referred to in the singular it is understood that a plurality of remote hosts may be employed in the various arrangements as described above.

Various applications and or other functionality may be executed in the remote host according to various embodiments. Also various data is stored in a data store that is accessible to the remote host . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store includes for example applications and potentially other data associated with the operation of the various applications and or functional entities described below. The components executed on the remote host for example include various embodiments of the component distribution service and other applications services processes systems engines or functionality not discussed in detail herein.

Next a general description of the operation of the various components of the networked environment is provided. As discussed previously in order to provide a satisfactory user experience for remote execution of applications remote hosts that are proximate to clients may be employed to execute the applications . However due to the large size of many applications an on demand distribution of an application to remote hosts may not be practicable for many applications . Therefore in order to have a given application resident on a remote host that is proximate to a potential client at the time it may be requested an anticipatory distribution of the application may be used.

To begin an application is evaluated by the component forecast service for distribution to the remote hosts . The component forecast service may first generate a demand forecast for a given application using usage data demand forecast data and or other data. The demand forecast includes the anticipated demand for remote execution of the application by clients and may be based upon several factors such as for example recent demand for the application demand for other applications within a similar classification pre orders or requests for offerings of an application upcoming releases of new versions of and or competitors to a given application and other factors influencing demand as can be appreciated.

Furthermore the demand forecast may include at least the computing resources needed within one or more time periods and may be segmented by geographic location by network service provider specific computer resources specific network resources and or other classifications. The computing resources may include a number of remote hosts a session capacity for an application and or other expressions of computing resources. As a non limiting example the demand forecast may identify an anticipated demand for the vicinity of Honolulu Hi. of 1000 simultaneous sessions of the newest 3D game by 12PM on December 25th. The demand forecast may further specify a minimum graphics processor benchmark score and that 300 of the users may be connecting from network provider X and 700 of the users connecting from network provider Y.

Upon creating the demand forecast the component forecast service may proceed to determine the remote hosts to receive the application as well as a schedule by which the transmission should be complete. To this end the component forecast service may employ the resource data and or other data. The remote hosts may be determined by selecting remote hosts from the resource data that satisfy the criteria and or classifications specified in the demand forecast. In various embodiments the component forecast service may choose alternate remote hosts in the event the eventual distribution of the application fails to complete on schedule.

In some instances remote hosts may not be available that meet each selection criteria specified. Under these circumstances the component forecast service may determine the remote hosts that would satisfy the demand forecast as nearly as possible based on the selection criteria the resource data and or other data. The selection of the remote hosts may be carried out using pattern matching correlation and or other methods of selection as can be appreciated. In some embodiments the selection criteria may be weighted to indicate necessity or relative preference such that for example the component forecast service prefers to select remote hosts that already have the application in storage. Additionally the weights may indicate for example that the geographic location of a remote host is more important for selection than the network service provider.

The remote hosts selected by the component forecast service for distribution of the application as well as the scheduled completion time any alternate remote hosts and or other associated data may be passed to the component distribution service . The component distribution service schedules transmission of the application to the remote hosts based on the usage data distribution state data resource data and or other data. As a non limiting example a given remote host may presently report sufficient network and storage resources in the resource data to complete transmission of the application within one day. However the distribution state data indicates the remote host has two other applications scheduled for transmission. In light of the eventual contention for the resources the component distribution service may adjust the transmission schedule for one or more of the transmissions.

The component distribution service may transmit the application to the remote hosts directly and or P2P protocols may be employed to supplement distribution to the remote hosts . As a non limiting example the component distribution service may choose to use the P2P protocol BitTorrent to distribute the application to some remote hosts using the same network service provider while using the traditional client server model for distribution to other remote hosts . Furthermore the method of distribution chosen may be limited by the network service provider preferences of the operators of the remote hosts and or for other reasons that may be discovered or specified in the resource data . Additionally the component distribution service executing on the computing environment may delegate a portion of the transmission tasks to the component distribution service executing in one or more remote hosts . In some embodiments the component distribution service executing on the remote hosts may communicate with the computing environment to access and store various data in the data store .

In various embodiments the component distribution service may modify all or a portion of the copies of the applications transmitted to the remote hosts . The modifications may include an identifier such as for example a digital watermark that may uniquely identify the application provided to a remote host a user a group and or other objects to be identified. Furthermore the modification may include encryption of the application using various methods of public key and or secret key cryptography such as for example advanced encryption standard AES triple data encryption standard 3 DES Diffie Hellman and or other encryption techniques as can be appreciated.

The component distribution service may maintain the state of the various transmissions active and scheduled within the distribution state data . Additionally the component distribution service may monitor the transmissions of the applications to the selected remote hosts . In some embodiments the component distribution service may preemptively begin transmissions to alternate remote hosts based on various factors such as for example failure of a remote host to meet one or more schedule thresholds interruptions of the transmission and or other factors as can be appreciated.

Referring next to shown is a flowchart that provides one example of the operation of a portion of the component forecast service according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the component forecast service as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box an application is identified by the component forecast service for potential distribution to the remote hosts . Next in box the component forecast service may first generate a demand forecast for a given application . As described previously the demand forecast includes the anticipated demand for remote execution of the application by clients and may be based upon several factors such as for example recent demand for the application demand for other applications within a similar classification pre orders or requests for offerings of an application upcoming releases of new versions of and or competitors to a given application and other factors influencing demand as can be appreciated. Furthermore the demand forecast may include at least the computing resources needed within one or more time periods and may be segmented by geographic location by network service provider specific computer resources specific network resources and or other classifications. The computing resources may include a number of remote hosts a session capacity for an application and or other expressions of computing resources.

Subsequently in box the component forecast service may proceed to determine the remote hosts to receive the application . The remote hosts may be determined by selecting remote hosts from the resource data that satisfy the criteria and or classifications specified in the demand forecast. In various embodiments the component forecast service may choose alternate remote hosts in the event the eventual distribution of the application fails to complete on schedule. If in box a sufficient number of remote hosts currently exist that satisfy the criteria of the demand forecast and also have the application in the data store execution of the component forecast service proceeds to box .

Alternatively in box the component forecast service may proceed to determine the remote hosts to which to transmit the application as well as a schedule by which the transmission should be complete. Next in box the component forecast service may evaluate any additional applications for distribution. If additional applications exist execution of the component forecast service may return to box . Alternatively if no further applications exist execution of this portion of the component forecast service ends as shown.

Moving on to shown is a flowchart that provides one example of the operation of a portion of the component distribution service according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the component distribution service as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the component distribution service receives the remote hosts selected by the component forecast service for distribution of the application as well as the scheduled completion time any alternate remote hosts and or other associated data. Next in box the component distribution service schedules transmission of the application to the remote hosts as described previously. In various embodiments the component distribution service may modify all or a portion of the copies of the applications transmitted to the remote hosts . The modifications may include an identifier such as for example a digital watermark that may uniquely identify the application provided to a remote host a user a group and or other objects to be identified. Furthermore the modification may include encryption of the application using various methods of public key and or secret key cryptography such as for example AES 3 DES Diffie Hellman and or other encryption techniques as can be appreciated.

Subsequently in box the component distribution service evaluates the progress of the various active and schedule transmissions. If each transmission is on schedule execution proceeds to box . However if one or more transmissions of the applications have failed are behind schedule and or are in other suspect states in box the component distribution service may begin transmissions to alternate remote hosts . If in box additional applications remain to be scheduled execution of the component distribution service returns to box . Alternatively if no further applications exist to be scheduled execution proceeds to box where the component distribution service determines if transmissions are currently scheduled or active. If transmissions are currently active or scheduled execution returns to box . Alternatively if no such transmissions exist this portion of the component distribution service ends as shown.

With reference to shown is a schematic block diagram of the computing environment according to an embodiment of the present disclosure. The computing environment may comprise one or more computing devices . The computing device includes at least one processor circuit for example having a processor and a memory all of which are coupled to a local interface . To this end the computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the electronic commerce system component forecast service component distribution service and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in the memory and are executable by the processors as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Delphi Flash or other programming languages.

A number of software components are stored in the memory and are executable by the processor . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory and run by the processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory and executed by the processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory to be executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memory is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor may represent multiple processors and the memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor may be of electrical or of some other available construction.

Although the electronic commerce system component forecast service component distribution service and potentially other applications. and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits having appropriate logic gates or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts of show the functionality and operation of an implementation of portions of the component forecast service and component distribution service . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowcharts of show a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the electronic commerce system component forecast service and component distribution service that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system. The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

