---

title: Establishing network connections
abstract: In one implementation, a computer-implemented method includes receiving, at a computing device and from an application installed on the computing device, a request to establish a network connection to transmit and receive data over a network, wherein the request includes information that indicates one or more parameters identified by the application for the requested network connection and data transmission. The method can further include delaying, by the computing device, establishing the requested network connection until i) an available network connection is identified that satisfies the one or more parameters provided as part of the request, or ii) a time period specified for the request has expired. The method can additionally include, in response to identifying an available network that satisfies the one or more parameters before the time period has expired, establishing the requested network connection for the application using the identified available network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08650325&OS=08650325&RS=08650325
owner: Google Inc.
number: 08650325
owner_city: Mountain View
owner_country: US
publication_date: 20120928
---
This application is a bypass continuation filed under 35 U.S.C. 111 a that claims priority under 35 U.S.C. 120 and 365 c to International Application No. PCT US2012 053660 filed Sep. 4 2012 which claims priority to U.S. Provisional Application Ser. No. 61 530 395 filed on Sep. 1 2011. The entire contents of which are incorporated herein by reference.

Applications on a computing device often use a network connection to transmit data to and to receive data from other computing devices. For example an internet browser which is installed on a computing device connected to the internet via a local area network LAN may send a request to a remote server for a web page. The remote server can respond to the request by transmitting data associated with the web page to the computing device fulfilling the internet browser s request. A network connection between computing devices can be established by opening network sockets that create channels over available network connections for bilateral communication of data between the computing devices.

In another example mobile computing devices such as smartphones often run software applications that use network connections to send data to and receive data from other computing devices. Mobile computing devices can transmit data over wireless network connections such as an IEEE 802.11 WI FI connection and or through a public land mobile network PLMN that uses cellular radiotelephone network standards such as the Enhanced Data GSM Environment EDGE Code Division Multiple Access CDMA and or Long Term Evolution LTE . A mobile computing device can establish a network connection that is usable by one or more applications by opening a socket for bilateral communication of data between an application and another computing device. Once a socket is open and a network connection is established transmission of data between a mobile computing device and another computing device can commence.

This document generally describes methods techniques and systems for establishing network connections and transmitting data between computing devices. Computing devices can use information provided with network connection requests to select an optimal network on which to establish the requested connection.

For example an application on a computing device can request that the computing device establish a network connection over which data may be communicated e.g. transmitted and or received . The request may include parameters associated with the communication such as the identity of the requesting application the amount and type of data to be communicated across the network and the maximum latency and or minimum bandwidth of a network that is sufficient to carry the communication. The parameters may also include for example a delay parameter that indicates an acceptable delay for the computing device to establish a network connection that satisfies the parameters provided by the application. The computing device can then use the parameters from the request to find a suitable network with which to connect. If a suitable network is not immediately available the computing device for instance may delay establishing a connection within the acceptable delay period until a suitable network is found. Or if the acceptable delay period expires and no suitable network has been found the computing device may discard the request.

Additional implementations can include mechanisms for selecting and or delaying network connections based on costs. For example the computing device may have a budget that limits the costs associated with network connections. The computing device may delay establishing a network connection until a network is available that can service a request at a price within the budget. If no networks are available to service a request within budget the request can be discarded. The computing device can also manage costs by negotiating among networks to service requests at the lowest cost possible. If more than one network can service a request within budget the computing device may select an optimal network on which to establish a network connection based in part on the network s cost.

In one implementation a computer implemented method includes receiving at a computing device and from an application installed on the computing device a request to establish a network connection to transmit and receive data over a network wherein the request includes information that indicates one or more parameters identified by the application for the requested network connection and data transmission. The method can further include delaying by the computing device establishing the requested network connection until i an available network connection is identified that satisfies the one or more parameters provided as part of the request or ii a time period specified for the request has expired. The method can additionally include in response to identifying an available network that satisfies the one or more parameters before the time period has expired establishing the requested network connection for the application using the identified available network.

These and other implementations can optionally include one or more of the following features. The one or more parameters identified by the application can include a minimum network bandwidth parameter that indicates a minimum network bandwidth for the requested network connection and a maximum network latency parameter that indicates a maximum network latency for the requested network connection. The available network connection can satisfy the minimum network bandwidth parameter when the available network connection has an available bandwidth that is greater than or equal to the minimum network bandwidth and satisfies the maximum network latency parameter when the available network connection has a current latency that is less than or equal to the maximum network latency. The one or more parameters identified by the application can include a total data size parameter that indicates a total size of the data to be transmitted and received for the requested network connection. The available network connection can satisfy the total data size parameter when the available network connection has a minimum bandwidth sufficient to transmit and receive the total size of the data within a threshold period of time. The one or more parameters identified by the application can include an acceptable delay parameter that indicates a period of time within which the requested network connection is permitted to be delayed. The available network connection can satisfy the acceptable delay parameter when the available network connection is identified within the period of time from when the request was received.

The method can further include ranking the received request among a group of other requests for network connections from other applications installed on the computing device. The requested network connection can be established when the received request has at least a threshold ranking among the other requests. The requests can be ranked based on at least a cost of transmitting and receiving data for each request. The cost of transmitting and receiving each request can be based on a total size of data to be transmitted and received for each request and a cost per data unit to transmit and receive data over one or more available networks. The threshold ranking can be determined based on a network connection budget for the computing device that indicates an amount of money that is available for the computing device to spend to transmit and receive data over network connections. The requests can be ranked based on at least an inferred importance of each of the requests. The inferred importance of each of the requests can be determined based on at least a type of data to be transmitted and an indication of whether a user of the computing device is currently interacting with one or more applications that are associated with each of the requests.

The method can further include in response to identifying one or more available networks requesting bids from the one or more available networks receiving bids for the one or more available networks wherein the bids indicate costs for transmitting and receiving the requested data over the one or more available networks selecting an available network from the one or more available networks based on at least the received bids and establishing the requested network connection with the selected available network. Each of the one or more available networks from which the bids are requested can satisfy the one or more parameters.

The one or more parameters can include a quality parameter that indicates a plurality of levels of quality that are permitted to be used for the requested network connection and data transmission. The method can further include identifying one or more available networks that are able to transmit and receive the requested data at one or more of the plurality of levels of quality specified by the quality parameter and selecting one of the identified available networks that is able to transmit and receive the requested data at a greatest level of quality from among the plurality of levels of quality. The requested network connection can be established using the selected available network.

In another implementation a mobile computing device includes a wireless networking antenna and a network connection manager that is programmed to receive a request to establish a network connection to transmit and receive data over a network. The request can include information that indicates one or more parameters identified for the requested network connection and data transmission. The mobile computing device can further include a request manager that is programmed to i delay establishing the requested network connection until an available network connection is identified that satisfies the one or more parameters provided as part of the request and ii in response to identifying an available network that satisfies the one or more parameters and before a time period specified for the request has expired establish the requested network connection with the identified available network using the wireless networking antenna.

These and other implementations can optionally include one or more of the following features. The mobile computing device of can further include a connection pricing negotiator that is programmed to request and receive bids from the one or more available networks wherein the bids indicate costs for transmitting and receiving the requested data over the one or more available networks. The mobile computing device can further include a request ranking module that is programmed to rank the received request among a plurality of other requests for network connections based at least in part on the bids received by the connection pricing negotiator. The network connection manager can further programmed to select one or more requests from among the received request and the plurality of requests based at least in part on the ranking generated by the ranking request module.

In another implementation a computer program product embodied in a computer readable storage device including instructions that when executed by one or more computing devices cause the one or more computing devices to perform operations including receiving from an application installed on the one or more computing devices a request to establish a network connection to transmit and receive data over a network wherein the request includes information that indicates one or more parameters identified by the application for the requested network connection and data transmission. The operations can further include delaying establishing the requested network connection until i an available network connection is identified that satisfies the one or more parameters provided as part of the request or ii a time period specified for the request has expired. The operations can further include in response to identifying an available network that satisfies the one or more parameters before the time period has expired establishing the requested network connection for the application using the identified available network.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Various advantages can be provided. For example delaying the establishment of a network connection until a network is available that has sufficient capacity e.g. acceptable bandwidth and latency characteristics to meet an application s minimum requirements for an effective data communication more efficiently uses both client computing resources and network resources. Additionally automatic delays in establishing network connections to transmit and receive data can reduce costs to the application s user for example by reducing the use of inadequate connections and the costs associated with such usage. Automatic delays can also restrict transmissions until a time when the user s budget allows for network usage. Further users can save money by client computing devices negotiating with one or more available networks to connect to a lowest cost network that satisfies the parameters of an application s request.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features objects and advantages will be apparent from the description and drawings and from the claims.

This document generally describes techniques methods systems and computer program products for more optimally establishing network connections. For example computing devices such as smartphones often run multiple applications at times simultaneously that each require connections to a network to transmit or receive data. For instance a user may configure an e mail application to periodically synchronize with a remote e mail server and to download recent e mail messages which requires the smartphone to connect with the server over a network. Generally smartphones today will automatically service the e mail application s request by immediately opening a socket and transmitting and receiving the e mail data over any network on which the smartphone is connected. However immediately establishing a connection is not always necessary or desirable. For instance if the smartphone is connected to a slower network then downloading e mail messages such as those having multimedia attachments could strain the network s bandwidth and the smartphone s processing capacity for a prolonged time which may reduce available computing power and drain a device s battery unnecessarily.

A computing device can manage requests from applications to establish network connections to improve network performance of the device. For instance a computing device can delay establishing a connection or transmitting and receiving data until a network with sufficient bandwidth becomes available or until performance characteristics e.g. bandwidth latency of currently available network s improve to at least a threshold level. The likelihood that a mobile computing device will encounter networks having varying performance and or cost characteristics over a period of time may be quite high. For instance as mobile computing devices e.g. smartphones travel with their users between home work and other locations for example computing devices may have access to multiple WI FI EDGE and or LTE networks depending on where the computing devices are located geographically. A mobile computing device that only has access to an EDGE network at a time when an application makes a request to establish a network connection can delay establishing the connection until a later time when the device has access to a faster network such as a WI FIl or LTE network.

A variety of techniques can be used to manage competing requests from multiple applications for network connections. For instance computing devices may receive requests for network connections at or around the same time from multiple applications but the computing device and or the available networks may not have sufficient capacity to establish each of the network connections with their associated parameters e.g. minimum bandwidth maximum latency . Such competing network connection requests can be ranked according to a variety of factors e.g. an inferred importance based on whether the request was made in response to user input or from a background process to identify which if any requested network connections a computing device should establish at a given time.

A variety of techniques can also be used to manage money that is spent to establish network connections. For instance network providers e.g. wireless network providers internet service providers ISP can charge users for access to and usage of their networks. For example network providers can charge users fees for unlimited use over a period of time session fees based on the length of time the user accesses the network session fees proportional to the amount of data transmitted and received and or fixed fees that allow any amount of network use up to a predetermined maximum which can be expressed as a cap on the amount of data that can be transmitted and received over the network by the user s devices. To manage an amount of money that is spent over such paid connections computing devices can negotiate pricing with network providers and or can select network connection requests to establish based on associated costs and available funds for such connections. For example a user can provide his her computing device with a monthly budget e.g. 30 month for paid network connections and the computing device can use this budget in addition and or alternatively to other techniques to determine which requested network connections to establish.

These features as well as other features not previously mentioned are described below in greater detail with regard to the figures.

The client computing device can be any of a variety of electronic computing devices such as smartphones tablet computing devices electronic readers laptop computers and or desktop computers. The client computing device is depicted as running application which can be one or more computer programs e.g. software firmware hardware whose operation includes to some extent transmitting and or receiving data over a network. The application can be any of a variety of applications such as web browsers games email clients system update routines voice over IP VoIP services. The application can be run locally as a standalone application and or can be run as a thin client on computing device that interacts with another computing device over a network to provide features to a user e.g. application running in the cloud .

In step A the application produces a request for a network connection that is communicated to a network connection manager . For instance the application can make a call to an application programming interface API to establish a network socket that the application can use to communicate to another computing device. Such an API can include and or be associated with the network connection manager and can direct the call made by the application to the network connection manager . The request from the application can include one or more parameters that specify one or more preferences and or requirements for the requested network connection e.g. minimum bandwidth . For instance the application can provide the parameters with a call to an API to establish a network socket e.g. socket min bandwidth max latency max delay . The network connection manager can use the parameters to determine how and when to establish a network connection for the request .

The particular parameters may vary among different applications as well as among the various requests produced from an individual application . The parameters can include any combination of information and or constraints associated with network connections such information relating to an identity and or status of an application types of data to be transmitted and or received e.g. video text quantities of data to be transmitted and or received minimum bandwidth required for a network connection a maximum acceptable delay to establish a network connection and or a maximum latency allowable for a network connection. In example parameters include an amount of data three MB to be transmitted and or received as part of the requested network connection a minimum bandwidth of one megabits per second a maximum latency of one hundred microseconds ms and an acceptable delay of twelve hours for establishing the requested network connection .

The parameters provide the network connection manager with information that it can use to determine which requested connections to establish and when to establish them. For example the application can be a digital music and multimedia application e.g. ITUNES that makes a request to download an audio file e.g. song from a remote server system in response to a user providing input to the application to purchase the audio file. The application can provide the parameters as part of the request based on a variety of factors such as user specified settings e.g. user indicated that he she is willing to wait twelve hours for audio file downloads a type of data being transmitted and or received and or default configurations for the application e.g. minimum performance for application requires the parameters .

Once the network connection manager receives the request the client computing device proceeds to check for available networks as depicted in step B . In two available networks are illustrated as Network A and Network B . Depending on the type of client computing device and the hardware and software associated with the device the range of available networks that the device may connect to can vary. Laptop and desktop computers may have access to various local area networks LANs wireless area networks WANs or even to broadband wireless networks such as EDGE CDMA and or LTE networks. Mobile computing devices such as smartphones and or tablet computing devices also may have access to a host of networks through WI FI BLUETOOTH and or broadband wireless networks such as EDGE CDMA and or LTE networks. For instance the network connection manager can cause the client computing device to scan for available networks using one or more network interfaces.

In checking for available networks in step B the client computing device can register various characteristics and or parameters and of the available networks A and B respectively. The client computing device can determine the network parameters and in a variety of ways such as through classification of the network technology network signal strength to the device and or through the receipt of network information and or parameters provided directly from the networks A and B.

In at time the client computing device detects two available networks and after checking for networks in step B . The parameters of Network A indicate that the network permits data transactions of no more than 10 MB has a bandwidth of 500 Kb s and its current latency is 90 ms. The parameters of Network B indicate that Network B permits data transactions of no more than 2 MB has a bandwidth of 1.5 Mb s and that its current latency is 120 ms. However in the depicted example the request made by application is for a 3 MB transaction over a network having at least a 1 Mb s bandwidth and at most a 100 ms latency. Based on the parameters and for the networks A and B respectively the currently available networks A and B at time do not satisfy the parameters for the requested network connection . For example the bandwidth of Network A is inadequate and Network B similarly fails to meet the requirements of the request because it will not transmit or receive more than 2 MB of data and it has an unacceptable latency. Based on this determination the client computing device can delay establishing the requested network connection until a later time when a network is available that satisfies the request parameters as shown in step C .

The network connection manager can store the request until an available network is encountered that satisfies the parameters and or until the acceptable delay for establishing the network connection as indicated in the parameters has been exceeded. In the example of the client computing device can continue to search for available networks that satisfy the parameters of the request for 12 hours which is the acceptable delay period. The computing device can continually loop through steps B and C within the delay period checking for available networks and delaying establishing the requested network connection until a network is found that satisfies the parameters .

At time after continuing to search for an available network and delaying establishment of network connections as shown in step B and step C at time the client computing device finds Network C . Unlike Network A and Network B at time Network C satisfies the parameters of the application request . For instance Network C has sufficient data transaction capacity bandwidth and sufficiently low latency such that its parameters exceed the threshold network requirements of the application s network connection request and the request s associated parameters .

If the computing device finds a network that meets the requisite parameters before expiration of the request s acceptable delay period a network connection may be established. For example once the computing device finds Network C to be a suitable network to service request the network connection manager depicted in step D checks whether the acceptable delay period from the parameters has expired. If the request has expired then a network connection will not be established. However in the example of the elapsed time between time and time is less than the acceptable delay period of twelve hours therefore the client computing device through the network connection manager establishes a connection in step F with Network C . For example the network connection manager can create a network socket for the application and can establish a connection with Network C e.g. authenticate the client computing device with Network C . In conjunction with establishing the network connection at step F the network connection manager can notify the requesting application that the requested network connection has been established with an available network and that the application can transmit or receive data using the established connection.

The client computing device can be any of a variety of appropriate electronic computing devices such as a laptop computer a desktop computer a netbook a mobile telephone a smartphone a tablet computing device and or a computer server system. The client computing device is depicted as running the applications which can be one or more computer programs e.g. software firmware hardware or any combination thereof whose operation includes to some extent transmitting and or receiving data over a network. The applications can be any of a variety of applications such as web browsers games e mail clients system update routines and or VoIP services. The applications can be run locally as standalone applications and or can be run as a thin client on the computing device that interacts with another computing device over a network to provide features to a user e.g. application running in the cloud . The example applications are depicted as including Application A Application B and Application N .

The applications can make and provide the requests to the computing device to establish and or use a network connection. The requests can include one or more request parameters such as network constraints associated with the request e.g. minimum bandwidth maximum latency an acceptable delay parameter indicating a timeframe for the device to service the requests one or more data parameters indicating the quantity of data to be transmitted and or received cost constraints indicating how much money and or how much of a user s network budget the is available for each of the requests and or other information that the computing device may use in establishing and using network connections such as the identity of a requesting application e.g. e mail client game web browser information indicating whether the requests are based on user input or are part of a background task and or whether a user is actively using the applications .

For example the request from Application A includes parameters indicating that the request is to transmit and or receive up to 5 MB of data over a network. In another example the request from Application B includes parameters indicating that the request is to transmit and or receive 100 KB of data. In a further example the request from Application N includes parameters indicating that the request is to transmit and or receive 500 MB of data.

The applications can also include information in the requests that indicates which transmission qualities are acceptable for a requested network connection. For example an application that receives and plays streaming video content from an Internet video service such as YOUTUBE may include information indicating that streaming high medium or low quality versions of videos is permissible for the network connection. In contrast some network connections requests may specify that only a particular connection quality is permissible. The applications and or a user can prioritize which quality level is preferred and which quality levels are permissible. Each quality level may also be associated with different network parameters. For instance streaming a high quality video may need a network connection having a minimum bandwidth of 5 Mb s whereas a low quality video can be streamed using only 1 Mb s connection. The requests can include information identifying one or more minimum quality levels for a requested network connection and associated network parameters. Or the requests can simply indicate which quality levels are acceptable such that the computing device can infer the network parameters associated with each acceptable quality level. Thus in Step A the applications A B and N each make a request and respectively for a network connection. Request A includes a quality parameter indicating that a network connection for either a high quality or low quality data transmission is acceptable. On the other hand Request B indicates that a network connection capable of carrying a high quality data transmission is required for the requested network connection.

The computing device can manage incoming requests for network connections and determine when to connect to an available network and which available network s to connect to. For example in the computing device is depicted as having a network connection manager . The network connection manager can be located on the computing device as a standalone application integrated into software hardware and or firmware or run as a thin client on the computing device . The network connection manager receives incoming requests for network connections and determines how to service the requests by establishing connections to available networks .

In order to minimize the costs of network usage the network connection manager includes a connection pricing negotiator that can find and or negotiate pricing information regarding network connections from one or more of the available networks . For example in a basic implementation the pricing negotiator may query each available network or just those available networks that satisfy the parameters of one or more requests for the costs of establishing a connection to the networks and or the costs of servicing the requests . Thus in Step B the connection pricing negotiator sends a request for pricing information to Network A Network B and Network N . In Step C each of the available networks e.g. Network A Network B and Network N transmit their pricing information back to the computing device where the network connection manager can use the information in determining which networks to connect to and in other aspects of managing network connections.

The computing device can also use more sophisticated routines for negotiating prices among one or more available networks . For instance the connection pricing negotiator can send information to the network that includes more details about the connection requests that the device is attempting to establish such as information about the quantity of data to be transmitted the type of content to be transmitted e.g. HTML audio video the anticipated length of time for using the network connection the bandwidth intended to be used and other factors that can affect a network s pricing bid. Further pricing negotiations could involve dynamic communications among the computing device and one or more of the available networks to allow the available networks to compete to offer a lowest bid.

The network connection requests can also be ranked in the order in which they are to be serviced. In ranking takes place in Step D by a request ranking module . Ranking can be based on one or more factors such as the importance of a request the cost of a request the order and time in which the requests were received and or the remaining time that a request can be delayed. For example the request ranking module ranked Request A Request B and Request C based on the cost of each request and the importance of each request. The cost of the requests can be determined by the connection pricing negotiator . The importance of the requests can be determined based on factors such as the identity of an application e.g. e mail client game web browser that provided the request information as to whether a request originates from user input or is provided as part of a background task and or whether the user is actively using an application from which the request was received. The importance may also be influenced by parameters communicated by the applications in the requests itself. Request ranking module shows for instance that a low quality connection for Request A is ranked first due to its combination of low cost and high importance. Request B is ranked second despite having a lower cost than low quality Request A because it is only of medium importance. However Request B is ranked higher than a high quality version of Request A because of its substantially lower cost despite have a lower importance than Request A .

The computing device can also use a budget to manage how network connections are established and or which requests are serviced. For instance the costs of establishing network connections and using network resources can sometimes exceed the costs that a user desires to spend over a given time period e.g. an hour a day a week a month . The user can provide the computing device with a budget that limits the expenses the device can spend on network connections. A budget can be implemented in various forms including daily and or monthly allowances.

In the network connection manager includes a budget manager that restricts establishing network connections which would cause the budget to be exceeded. For example the budget in includes 15 to spend on network connections monthly. In a 30 day month this equates to an average of 0.50 available to spend daily. A user can exceed a daily or monthly budget for instance if the user instructs the computing device to do so. In the budget example shown in budget manager 0.42 have been carried over from previous days when the amount s spent on network connections fell below the budgeted maximum. Combining the amount rolled over and the daily allocation gives a total of 0.92 to spend on network connections for the day.

The user and or the computing device can reserve portions of the budget for use by one or more applications. For example security software may perform periodic checks for updates or an e mail client may periodically ping a remote server and download new e mails. To ensure that enough money is budgeted each day for these tasks some portion of the budget can be dedicated to those requests. The user may indicate which applications or tasks should have a reserved budget and the size of the reserves or they may be inferred by the computing device such as by tracking and analyzing which programs historically have required frequent use and the associated costs. A reserve budget can be maintained based on other factors as well such as estimations of how much additional network use will be required for the remainder of the day. In Application D and Application F which are not explicitly shown among the applications have a reserved daily budget of 0.05 and 0.10 respectively. The budget manager discounts the reserved costs from the day s total available budget leaving 0.77 0.92 0.05 0.10 of non reserved funds available for network connections for the day.

The budget manager manages the costs of establishing and or using network connections in order to stay within a budget. In the exemplary depiction of the network connection manager proceeds through the requests in ranked order selects requests to use for network connections as indicated by Step E and establishes a connection on one or more of the available networks for requests that are permitted within the available budget. For instance in Step F the computing device establishes a connection with Network B to service low quality Request A at a cost of 0.05 and then a connection is made with Network A to service Request B at a cost of 0.03. No connection is made for Request C because the connection cost would exceed the available budget after servicing Request A and Request B . The connection might be made for instance if a user granted special permission to exceed the budget.

The computing device can include an input output I O interface that connects the computing device to one or more of a plurality of available networks such as Network A Network B and or any other available network as indicated by Network N . The I O interface can transmit data from the computing device to available network s and receive data on a computing device from available network s . The I O interface can be a wired and or wireless interface. For example a wired I O interface can be any of a variety of interfaces including Ethernet IEEE 1394 parallel port PS 2 serial port USB VGA Digital Visual Interface DVI and or USB. Likewise a wireless I O interface can be any of a variety of interfaces including an IEEE 802.11 WI FI transceiver a 3G radio transceiver an LTE radio transceiver a BLUETOOTH transceiver and or others.

The computing device can connect to one or more available networks via the I O interface . Network A Network B and Network N represent a range of available networks to which the computing device may connect. The available networks can include wired networks and or wireless networks such as local area networks LANs wireless area networks WANs and or broadband wireless networks such as EDGE CDMA and or LTE networks. The available networks have been similarly represented in as Networks A and B and respectively and in as the available networks .

The computing device can run one or more applications . The applications may be one or more computer programs including software firmware and or hardware. The operation of one or more of the applications can include to some extent transmitting and or receiving data over a network. Specific applications can include web browsers games e mail clients system update routines VoIP services and or other computer programs. The applications in the system can be similar to the application and the applications described above with regard to and respectively.

The computing device can also include various data repositories that store information relevant to managing and establishing network connections. For example one or more of the data repositories can be stored in volatile memory media such as a random access memory RAM device and or the data repositories can be stored in non volatile memory media such as a compact disc CD DVD hard disk drive FLASH memory EPROM EEPROM magnetic disk drive or holographic storage. The data repositories may be stored locally on the computing device in removable memory such as an SD card and or can be stored remotely such as on a server.

A request data repository can include stored information regarding requests for network connections that the applications have provided. The information associated with the network connection requests can be stored in the request data repository such as the identity of the requesting program a timestamp marking a time when the request was received the request s cost and importance as described above with regard to parameters associated with the request such as the parameters described above with regard to including data size minimum bandwidth acceptable delay and maximum latency and or any combination thereof.

A budget data repository can include information relating to a budget that limits and or manages the costs expended on network connections. For example the budget data repository can include data representing a monthly budget a daily budget carryover amounts reserved budgets for one or more applications and or a current total daily budget. The budget data repository can include data similar to the budget data shown and described above in budget manager in .

An available network data repository can include information relating to available networks . For instance the available network data repository may include information regarding which networks are presently available historical data regarding available networks and or parameters associated with one or more available networks such as the type of network e.g. IEEE 802.11g IEEE 802.11n Ethernet LAN CDMA LTE and or network characteristics e.g. latency bandwidth signal strength .

The computing device can include also include a network connection manager which can manage requests for network connections and determine when and how to service the requests. For example the network connection manager may comprise one or more computer programs which may be software firmware and or hardware. The network connection manager can be similar to the network connection manager described above with regard to and the network connection manager with regard to . The network connection manager can include access to requests provided by applications . In addition the connection manager can access stored data used in managing the establishment of network connections from resources such as the request data repository budget data repository and or the available network data repository .

The network connection manager can include a variety of functional aspects including a connection pricing negotiator a request ranking module a request delay manager a budget manager and or any combination thereof.

The connection pricing negotiator can find and or negotiate pricing information from one or more of the available networks . For example the connection pricing negotiator can perform operations that are similar to those described above with regard to the connection pricing negotiator described with regard to .

The request ranking module can manage one or more requests from the applications by sorting and or ranking the requests based on factors including a known or estimated cost for servicing the request an importance associated with the request and or any combination thereof. The request ranking module can perform operations that are similar to those described above with regard to as the request ranking module described above with regard to .

The request delay manager can manage the requests that are pending in the request data repository and can remove requests from the repository that have exceeded their acceptable delay. When a request is removed from the repository an application that provided the request can be notified that the network connection manager was unable to fulfill the request. The request delay manager can perform operations that are similar to those described above with regard as the network connection manager described above with regard to .

The budget manager can manage the costs of establishing and or using network connections in order to stay within a budget. The budget manager can perform operations that are similar to those described above with regard as the budget manager described above with regard to .

The networks A N can each include one or more wireless access points e.g. wireless transceivers cellular network towers wireless routers wireless range extenders repeaters from which wireless signals for the networks A N are transmitted and received. For instance the networks A N are depicted in as being associated with example access points . Each of the networks A N can be associated with include multiple access points.

The networks A N can also each be associated with computer systems that manage network access and use by client computing devices such as the computing device . For example the network A is associated with a computer system and the network N is associated with computer system . The computer systems and can each include one or more computing devices such as a desktop computer a computer server a distributed computing system e.g. cloud computing system networked computer servers and or other appropriate computing devices. Although not depicted the network B can be associated with a computer system similar to the computer systems and .

The computer systems and are depicted as including bid generators and network monitor units and and access control units and . The bid generators and can generate bids for client computing devices such as the computing device that are requesting access to the networks and . The bids generated by the bid generators and can be based a variety of information such as predetermined pricing information e.g. predetermined pricing ranges within which bids are bound pricing schedules based on data quantities and transmission speed current network usage information e.g. current number of connected client computing devices current bandwidth usage current available bandwidth future network usage commitments e.g. agreements entered into with other computing devices for network access minimum network performance parameters for such agreements and or information that indicates current supply and demand for network access e.g. number of requests for bids from client computing devices network parameters included on client bid requests previous bid amounts that have been accepted and or declined by client computing devices . The bid generators and can provide bids to the computing device using the access points and respectively.

The network monitor units and of the computer systems and respectively can monitor and determine current network usage statistics for the networks A and N and . The network monitor units can collect usage statistics e.g. latency information used bandwidth available bandwidth from various components of the networks and such as usage information from routers switches access points and or other appropriate computing devices. The network monitor units and can provide network usage statistics to the bid generators and which can generate bids based on current usage information. The network monitor units and may additionally and or alternatively provide some network usage statistics to client computing devices such as the computing device to inform the client computing devices as to current network conditions for the networks and which the client computing devices can use to determine whether to establish network connections with the networks and using the access points and .

The access control units and can control access to the networks and by client computing devices such as the computing device through the access points and . The access control units and can instruct the access points and to restrict access to only client computing devices which are currently authorized to use the networks and which may be indicated by various identifying information provided by the client computing devices such as unique identifiers e.g. MAC addresses usernames and or authentication information e.g. authorization credentials . The access control units and may restrict access to the networks and to client computing devices that have accepted bids from the bid generator and for which a payment method has been established e.g. credit card has been verified debit account has been identified with sufficient available balance .

Referring to portions of the example technique are performed by the computing device a network A and a network B . The computing device can be any of a variety of appropriate computing devices such as the computing device the computing device and or the computing device . The networks A and B can be any of a variety of appropriate wireless networks such as the networks and the networks and and or the networks and . The networks A and B can each include one or more access points such as the access points and can include one or more associated computer systems such as the computer systems and .

The computing device can receive a request to establish a network connection . For example the computing device receives a request to establish a network connection from the application . The received request can include one or more parameters for the requested network connection such as the example parameters discussed above with regard to . In response to receiving the request the computing device can detect available networks . For example the computing device can use a wireless transceiver to scan for beacon signals from nearby networks such as a wireless beacon signal that is transmitted by the network A . In response to detecting the beacon signal transmitted by an access point for the network A the computing device can transmit a request to the network A current network information e.g. available bandwidth current latency .

The network A can receive the request from the computing device and in response to receiving the request can identify current network information . For example the network monitor unit of the computer system can identify current network information for the network A . The network A can provide the current network information and the computing device can receive the current information for the network A .

Using the current network information the computing device can determine whether the network A satisfies the parameters for the network connection that were included in the request to establish the network connection . For example the network connection manager of the client computing device can compare the requested parameters with the current network information and for the networks and respectively to determine whether to establish a connection with the networks and or . When the current network information does not satisfy the parameters set forth in the request the computing device can delay establishing a network connection .

In response to detecting another available network based on a beacon signal transmitted by another network the computing device can determine whether a permissible duration of time to establish the requested network connection has expired . For example the network connection manager of the client computing device can check whether an acceptable delay for establishing a network connection requested by the application has elapsed in response to detecting the presence of network C . In response to determining that the duration of time for the request has not expired the computing device can request network information from the network B . If the duration of time for the request has expired the computing device can discard the request and or provide an indication to the requesting entity e.g. an application a user another computing device that is tethered to the computing device that the requested network connection was not established based on a time period for the request having expired. The network B can receive the request from the computing device identify current network information for the network B and can provide the current network information to the computing device which the computing device can receive and use to determine whether the network B satisfies the parameters set forth in the request . The steps for network B can be similar to the steps for network A .

In the depicted example the network B has current network conditions e.g. available bandwidth latency that satisfy the parameters of the request similar to the current network conditions of the network C satisfying the parameters of the request described above with regard to . In response to determining that the network B satisfies the parameters of the request the computing device can establish a network connection with the network B . Establishing a connection can include the computing device transmitting information to the network B that indicates a request from the computing device to use the network B and any additional information that may be requested by the network B for access such as payment information and or identifying information for the computing device and or an associated user.

Referring to portions of the example technique are performed by the computing device a network A and a network B . The computing device can be any of a variety of appropriate computing devices such as the computing device the computing device the computing device and or the computing device . The networks A and B can be any of a variety of appropriate wireless networks such as the networks and the networks and the networks and and or the networks and . The networks A and B can each include one or more access points such as the access points and can include one or more associated computer systems such as the computer systems and .

The computing device receives requests to establish network connections from one or more requesting entities such as one or more applications users of the computing device services that are running on the computing device and or devices that are tethered to the computing device . The requests received by the computing device can each be received separately over a period of time. For example the client computing device receives the requests from the applications .

In response to receiving the requests the computing device can detect available wireless networks such as the network A and the network B based on beacon signals that are transmitted by the networks A and B . In response to detecting that networks A and B are within range of the computing device the computing device can provide requests for bids to the networks A and B . Such requests for bids can include information that identifies parameters for the network connection requests that were received by the computing device . For example the requests for network connection requests can each include one or more connection parameters such as a minimum connection bandwidth a maximum latency a connection quality and or an amount of data to be transmitted. The computing device can provide at least a portion of the network connection parameters for the received requests to the networks A and B and as part of the requests for bids.

The networks A and B and can receive the requests can identify current use information for the networks and based at least in part on the current use information can generate bids to provide to the computing device . For example the computer systems and can use the network monitor units and to identify the current use of the networks and and can use the access control units and to identify future commitments network use by other computing devices. The bid generators and can generate bids based at least in part on the information identified by the network monitor units and and the information identified by the access control units and . The networks A and B and can wirelessly transmit the generated bids to the computing device .

The computing device can receive the bids and can proceed to use the bid information and or other information regarding the requests to rank the received requests to determine which if any of the requested network connections should be established. For instance the computing device can determine the importance of the requests determine the costs for requests based on the received bids from the networks A and B and or determine timeframes within which the requests will expire . Based on such information e.g. request importance costs expiration timeframe the computing device can rank the requests. For example the request ranking module of the client computing device can rank the requests based on determined costs determined based on the pricing information from the networks and determined importance of the requests .

The computing device can access budget information for the computing device and or one or more users associated with the computing device and based on the ranked requests and the budget information can select one or more of the requests . For example the budget manager of the client computing device can use the information from the request ranking module and budget information e.g. monthly budget avg. daily spend amount carry over amount reserved budget information and or remaining budget for current time period to select one or more of the requests. The computing device can establish one or more connections with the networks A and or B for the selected requests .

Computing device includes a processor memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . Each of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . In one implementation the storage device may be or contain a computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device or memory on processor .

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of functions is exemplary only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as device . Each of such devices may contain one or more of computing device and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory an input output device such as a display a communication interface and a transceiver among other components. The device may also be provided with a storage device such as a microdrive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. Additionally the processor may be implemented using any of a number of architectures. For example the processor may be a CISC Complex Instruction Set Computers processor a RISC Reduced Instruction Set Computer processor or a MISC Minimal Instruction Set Computer processor. The processor may provide for example for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display may be for example a TFT Thin Film Transistor Liquid Crystal Display display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provide in communication with processor so as to enable near area communication of device with other devices. External interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the computing device . The memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory may also be provided and connected to device through expansion interface which may include for example a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provide as a security module for device and may be programmed with instructions that permit secure use of device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory or memory on processor that may be received for example over transceiver or external interface .

Device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication may occur for example through radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition GPS Global Positioning System receiver module may provide additional navigation and location related wireless data to device which may be used as appropriate by applications running on device .

Device may also communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. Audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smartphone personal digital assistant or other similar mobile device.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN peer to peer networks having ad hoc or static members grid computing infrastructures and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

Although a few implementations have been described in detail above other modifications are possible. Moreover other mechanisms for establishing network connections may be used. In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. Other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other implementations are within the scope of the following claims.

