---

title: Printing system, control method, information processing apparatus, and computer-readable medium
abstract: An information processing apparatus comprises a first installer for installing a driver corresponding to the image output apparatus, wherein the first installer is executed to install, in the information processing apparatus, a first driver and a second installer for installing a second driver, the installed first driver includes: unit configured to generate a first print queue to connect to a first connection port of the image output apparatus; unit configured to transmit an address acquisition request and acquire an address of a second connection port of the image output apparatus; and unit configured to, upon accepting an instruction to generate a second print queue using the print server as a connection destination, launch the second installer to install the second driver, and generate the second print queue, and the launched second installer generates the second print queue using the address of the second connection port that is acquired.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08767226&OS=08767226&RS=08767226
owner: Canon Kabushiki Kaisha
number: 08767226
owner_city: Tokyo
owner_country: JP
publication_date: 20120201
---
The present invention relates to a printing system a control method an information processing apparatus and computer readable medium. Specifically the present invention relates to a method of installing a printer driver and generating a print queue in a printing system including an image output apparatus print server and client apparatus which are connected to a network.

When a client apparatus is to output an image using a network connected image output apparatus it is necessary to install a printer driver corresponding to the image output apparatus in the client apparatus and register a print queue. This operation generally adopts the following method. The user acquires and executes a printer driver installer installing a printer driver. Then he registers the print queue of an image output apparatus for use in the system.

A network connected image output apparatus often employs a plurality of connection protocols and can cope with various connection forms. For example a client apparatus is directly connected to an image output apparatus via a local network using a protocol such as LPR Line PRinter daemon protocol . Also a client apparatus print server and image output apparatus can be connected via an Internet print server using IPP Internet Printing Protocol or the like.

From various connection forms the user needs to install and set a printer driver by himself at much expense in time and effort.

To solve this Japanese Patent Laid Open No. 2002 366502 discloses a method of searching by a client apparatus for a printer in the same segment automatically downloading and installing a printer driver from a web site or the like and adding a print queue. In a method disclosed in Japanese Patent Laid open No. 2006 134245 a client apparatus searches for a printer and presents the result to the user. Then a printer driver for a printer selected by the user is automatically acquired from a predetermined server and installed. Further the print queue is registered and print settings are made.

However even when the user has already registered a print queue on a local network and uses an image output apparatus he may want to connect this image output apparatus in another connection form and print. For example the user uses an Internet print service in addition to printing via the local network connection. By using the image output apparatus via the Internet print service the user can print from the image output apparatus even in a network environment where he cannot print via the local network connection. For example assume that the user uses a local network connected image output apparatus from a notebook type client apparatus in the office. When the user moves the client apparatus to a different network environment no packet may reach the designated image output apparatus via the local network connection failing to print. In this case by designating printing via the Internet print service the user can obtain an output from the image output apparatus.

In this case a print queue for connecting to the Internet print service needs to be additionally registered in the client apparatus in addition to a print queue for the local network connection. Upon the additional registration the print queue in the client apparatus is connected to the Internet print service and the print server and image output apparatus are connected.

In this manner even after the print queue of a given image output apparatus has already been registered the user may want to additionally register a print queue in accordance with the application purpose. In a conventional technique the user needs to prepare again another installer corresponding to a different connection method launch the installer again and set another connection form. It is cumbersome for the user to acquire and execute an installer again set a connection and register a print queue.

According to one aspect of the present invention there is provided a printing system in which a print server a client apparatus and an image output apparatus are connected via a network wherein the image output apparatus includes a first connection port for local connection and a second connection port for receiving a print job via the print server reply unit configured to send back an address of the second connection port upon receiving an address acquisition request and printing unit configured to print a print job received via the first connection port or the second connection port the print server includes image output apparatus registration unit configured to register an image output apparatus serving as a transmission destination of a print job and transmission unit configured to transmit a print job via a designated connection port to the image output apparatus which is set or designated by the print job and registered by the image output apparatus registration unit the client apparatus includes a first installer for installing a driver corresponding to the image output apparatus the first installer is executed to install in the client apparatus a first driver and a second installer for installing a second driver the installed first driver includes generation unit configured to generate a first print queue to connect to the first connection port of the image output apparatus address acquisition unit configured to transmit the address acquisition request and acquire the address of the second connection port of the image output apparatus and execution unit configured to upon accepting an instruction to generate a second print queue using the print server as a connection destination launch the second installer to install the second driver and generate the second print queue and the launched second installer generates the second print queue using the address of the second connection port that is acquired by the address acquisition unit.

According to another aspect of the present invention there is provided a control method in a printing system in which a print server a client apparatus and an image output apparatus are connected via a network the image output apparatus including a first connection port for local connection and a second connection port for receiving a print job via the print server comprising in the image output apparatus a reply step of sending back an address of the second connection port upon receiving an address acquisition request and a printing step of printing a print job received via the first connection port or the second connection port in the print server an image output apparatus registration step of registering an image output apparatus serving as a transmission destination of a print job and a transmission step transmitting a print job via a designated connection port to the image output apparatus which is set or designated by the print job and registered in the image output apparatus registration step and in the client apparatus including a first installer for installing a driver corresponding to the image output apparatus the first installer being executed to install in the client apparatus a first driver and a second installer for installing a second driver by the installed first driver a generation step generating a first print queue to connect to the first connection port of the image output apparatus an address acquisition step of transmitting the address acquisition request and acquiring the address of the second connection port of the image output apparatus an execution step of upon accepting an instruction to generate a second print queue using the print server as a connection destination launching the second installer to install the second driver and generating the second print queue and a step of causing the launched second installer to generate the second print queue using the address of the second connection port that is acquired in the address acquisition step.

According to another aspect of the present invention there is provided an information processing apparatus connected to a print server and an image output apparatus via a network comprising a first installer for installing a driver corresponding to the image output apparatus wherein the first installer is executed to install in the information processing apparatus a first driver and a second installer for installing a second driver the installed first driver includes generation unit configured to generate a first print queue to connect to a first connection port of the image output apparatus address acquisition unit configured to transmit an address acquisition request and acquire an address of a second connection port of the image output apparatus and execution unit configured to upon accepting an instruction to generate a second print queue using the print server as a connection destination launch the second installer to install the second driver and generate the second print queue and the launched second installer generates the second print queue using the address of the second connection port that is acquired by the address acquisition unit.

According to another aspect of the present invention there is provided a non transitory computer readable medium storing an installer program for installing a driver corresponding to an image output apparatus wherein the installer program installs in a computer a first driver and another installer program for installing a second driver the installed first driver causes the computer to function as generation unit configured to generate a first print queue to connect to a first connection port of the image output apparatus address acquisition unit configured to transmit an address acquisition request and acquire an address of a second connection port of the image output apparatus and execution unit configured to upon accepting an instruction to generate a second print queue using a print server as a connection destination launch the other installer program to install the second driver and generate the second print queue and the launched other installer program causes the computer to generate the second print queue using the address of the second connection port that is acquired by the address acquisition unit.

According to another aspect of the present invention there is provided a non transitory computer readable medium storing a device driver program causing a computer to function as generation unit configured to generate a first print queue to connect to a first connection port of an image output apparatus address acquisition unit configured to transmit an address acquisition request and acquire an address of a second connection port of the image output apparatus and execution unit configured to upon accepting an instruction to generate a second print queue using a print server as a connection destination launch an installer program to install a second driver and generate a second print queue.

According to the present invention a print queue to connect to a print server is automatically generated by only issuing a registration instruction from the user to the print server. This can obviate a cumbersome operation required in the conventional technique in which when adding a print queue for print server connection an installer is acquired again and launched to add a print queue.

A print queue to connect to the print server can be registered even in smother image output apparatus on the same network. Further even other users registered in a client apparatus can be registered at once in the print server.

Further features of the present invention will become apparent from the following description of exemplary embodiments with reference to the attached drawings .

The first embodiment according to the present invention will now be described with reference to the accompanying drawings. is a block diagram showing the schematic configuration of a printing system according to the first embodiment of the present invention. The printing system according to the embodiment includes a client apparatus serving as an information processing apparatus which is operated by the user and a plurality of image output apparatuses which receive and output print jobs. The client apparatus and image output apparatuses are connected via a network formed from Ethernet or the like. The client apparatus and a print server are connected via a gateway apparatus present on the network and the Internet . The image output apparatus receives a print job generated by the client apparatus via the network and prints it. In addition the image output apparatus can receive even a print job from the print server and print it. In this specification a plurality of image output apparatuses in the local network network will be collectively described as image output apparatuses . Each image output apparatus will be individually described as for example image output apparatus A . Note that the image output apparatus described in this specification corresponds to a printer or MFP Multi Function Peripheral having the print function. In this specification a simple network indicates a local network such as the network .

An external memory I F controls access to an external memory such as a flash memory or SSD Solid State Disk . The external memory stores an OS Operating System an application corresponding to various functions and a printer driver print driver program . The external memory functions as a storage medium writable readable by the client apparatus . A network I F is a control unit for the network and enables connection to the network via a network terminal.

Next the arrangement of the image output apparatus will be explained. A CPU controls the whole operation of the image output apparatus . A RAM functions as a main memory work memory and the like for the CPU and is also used as an image information rasterization area and environmental data storage area. The RAM includes even an NVRAM Non volatile RAM area and is configured to expand the memory capacity by an optional RAM connected to an expansion port not shown . A ROM stores various fonts control programs and the like to be executed by the CPU and various data.

A network I F transmits receives data between the image output apparatus and the client apparatus . A printer I F controls processing with a printer unit serving as a printer engine. An external memory I F controls access to an external memory . The external memory includes a flash memory SSD and the like and can store hardware information . Note that when the external memory such as a hard disk is not connected the ROM stores information and the like to be used in the client apparatus .

An operation unit I F controls processing with an operation unit used to set scan processing of the image output apparatus . The operation unit includes an operation panel not shown for accepting a user operation and the operation panel includes a switch LED display and the like for the operation. The operation unit may include an NVRAM not shown and store print setting information from the operation panel. The CPU can communicate with the client apparatus via the network I F and receives a print job from the client apparatus . In addition the CPU can notify the client apparatus of information and the like in the image output apparatus .

In the embodiment the network I F supports a service protocol. The network I F supports a plurality or protocols such as LPR and Port3100 capable of receiving a print job on a local network as a protocol for receiving a print job and IPP suited to receive a print job via the Internet. Note that supportable protocols are not limited to the above ones and a protocol to be supported may be added as needed. The CPU transmits image data to the printer unit via the printer I F and executes printing based on a control program or the like stored in the ROM or the like.

The arrangement of the print server will be explained with reference to . In the print server a CPU comprehensively controls devices connected to a system bus in accordance with a program stored in for example a RAM serving as a storage unit. The RAM functions even as a main memory work memory and the like for the CPU . A ROM stores various programs and data. A keyboard I F controls inputs from a keyboard and a pointing device for example mouse not shown . A display unit I F controls display on a display unit . An external memory I F controls access to an external memory such as a hard disk HD or SSD.

The external memory includes an OS web service library and print service program corresponding to various print service processes. Further the external memory stores user files other setting files and the like and functions even as a computer writable readable database . The print service program includes programs such as a printer registration program user registration program print job reception program print data transmission program and rendering program .

A network I F is connected to the client apparatus via the Internet and indirectly performs communication control processing with the image output apparatus connected to the client apparatus .

Prior to a description of a processing sequence in each apparatus processing to be executed between the respective apparatuses will be explained with reference to a sequence chart shown in . After that processing in each apparatus will be described with reference to a flowchart.

In the embodiment there are two print instruction paths. One is a local connection path for directly issuing an output instruction from the client apparatus to the image output apparatus via the network and outputting an image. In this specification an image output connection form via this path will be called a local printer . On the other path a print job generated by the client apparatus is temporarily transmitted to the print server via the Internet . Then the print server issues an output instruction again to the image output apparatus via the Internet and the image output apparatus outputs an image. In this specification an image output connection form via this path will be called a server printer . Note that a printer driver used upon connection as the local printer will be called a local printer driver first driver . A printer driver used upon connection as the server printer will be called a server printer driver second driver .

Also assume that the user has already acquired a predetermined printer driver installer installer program and saves it in the client apparatus . The printer driver installer can be acquired by downloading the printer driver installer from the web site of a vendor or loading it by the client apparatus from a CD medium packaged in the product. The arrangement of the printer driver installer will be described in detail after the sequence.

The image output apparatus includes a plurality of connection ports. For example among the image output apparatuses connected to the network the image output apparatus A includes a local connection port first connection port capable of connecting it as a local printer and a server connection port second connection port capable of connection from the print server . The local connection port allows connection by the TCP IP protocol such as LPR or Port9100. The server connection port allows connection by a protocol conscious of communication via the Internet such as IPP. Even the image output apparatus B supports the same connection ports as those of the image output apparatus A . Unlike the image output apparatus A and image output apparatus B the image output apparatus C includes neither a connection port for the print server nor a function of receiving print data from the print server . In other words the image output apparatus C can be connected only as a local printer.

A print queue connected to the local connection port will be referred to as a local print queue first print queue and a print queue connected to the server connection port will be referred to as a server print queue second print queue .

Further assume that the image output apparatuses can send back device profiles in response to a device information inquiry from the client apparatus . More specifically the client apparatus transmits a device query packet to the network by multicast by SNMP Simple Network Management Protocol or the like. In response to this multicast each image output apparatus sends back a device profile containing its device information. Note that the device profile contains information such as the addresses of the local connection port and server connection port details of which will be described later.

In step S the user designates launch of a printer driver installer on the client apparatus . The printer driver installer first installer to be launched is an installer containing a local printer driver module set and a server printer driver installer second installer . A general printer driver installer contains one type of printer driver module and the installer is launched to install the printer driver module in a client apparatus. However the printer driver installer launched in step S characteristically contains a general local printer driver module and in addition a server printer driver installer for installing a server printer driver module.

When the printer driver installer is launched the printer driver installer is executed in the client apparatus in step S and a local printer driver module necessary for the local printer is installed. In installation in step S a server printer driver installer for the print server is also installed. The server printer driver installer for the print server is used in a subsequent step. Thus the server printer driver installer is saved in the external memory of the client apparatus . The storage location is for example a directory where a general application is installed. After the end of installing the printer driver in step S the printer driver notifies the user of the completion of installation in step S. For example the client apparatus displays a message indicative of the completion on the display unit .

Then the user generates a print queue for actually printing by the image output apparatus . First in step S the user instructs the client apparatus to generate a local print queue for using the local printer by using the function of the OS . In this case the user generates the print queue of the image output apparatus A . In response to this generation instruction a local print queue is generated in the client apparatus in step S. In step S the client apparatus requests the image output apparatus A serving as the connection destination to acquire a device profile by using an execution code executed in generating a print queue. In response to this acquisition request a connection port address acquisition request is issued. The image output apparatus A responds to the acquisition request from the client apparatus in step S and sends back a device profile containing server connection port information to the client apparatus in step S.

The execution code executed in generating a print queue saves the device profile sent back in step S in the external memory of the client apparatus . Note that the storage location is for example the registry of the OS or a specific file on the user directory. After that the client apparatus notifies the user that generation of the local print queue is complete. For example the client apparatus displays a message indicative of the completion on the display unit . When a general local printer is used generation of the print queue ends after these steps.

However in the embodiment a server print queue can be easily generated using device profile information automatically acquired in steps S to S. More specifically the user opens the local print queue clicks a server printer registration button provided on the local print queue in the embodiment and can generate a server print queue. In general a print queue allows arranging a control to execute a vendor specific execution code.

In step S the user opens the local print queue of the image output apparatus A clicks the server printer registration button and designates registration of a server printer. In step S the client apparatus generates a server print queue using the server connection port information acquired in steps S to S by the execution code corresponding to the server printer registration button. In step S the client apparatus requests the print server to register the image output apparatus and user. The information to be registered includes connection port information of an image output apparatus serving as the transmission destination when the print server transmits a print job and the ID of the user of the image output apparatus. These pieces of information are transmitted together with the registration request from the client apparatus . Note that the transmitted information is not limited to these pieces of information and information to be managed in the print server is transmitted as needed. Handling of the user ID used here will be explained with reference to the flowchart of a software operation in the client apparatus to be described later.

In step S the print server registers the image output apparatus and user ID based on information corresponding to the registration request received from the client apparatus . This implements an image output apparatus registration unit. In step S the print server notifies the server printer registration execution code in the client apparatus of the completion of registration. In step S the server printer registration execution code in the client apparatus transmits a device search query packet by multicast to the network . In step S upon receiving the multicast packet the image output apparatus responds to it by transmitting its device profile. In step S the server printer registration execution code in the client apparatus receives the device profile serving as a query reply from the image output apparatus . Since a plurality of image forming apparatuses are arranged on the network a plurality of responses query replies to the multicast packet transmitted from the client apparatus are sent back. From the sent back responses an image output apparatus which holds a connection port connected to the network can be detected.

In step S based on the query replies received from a plurality of image forming apparatuses the client apparatus checks whether there is an image output apparatus other than one which has been registered in the print server in step S. The client apparatus extracts an unregistered image output apparatus. In step S the server printer registration execution code in the client apparatus generates the server print queue of the unregistered image output apparatus extracted in step S.

In step S similar to step S the server printer registration execution code requests the print server to register the image output apparatus and user by using the server connection port information acquired in steps S to S. The information to be registered includes connection port information of an image output apparatus serving as the transmission destination when the print server transmits a print job and the ID of the user of the image output apparatus. These pieces of information are transmitted together with the registration request from the client apparatus .

In step S the print server registers the image output apparatus and user ID based on information corresponding to the registration request received from the client apparatus . In step S the print server notifies the server printer registration execution code in the client apparatus of the completion of registration. Finally in step S the server printer registration execution code notifies the user that registration of the server print queue in the print server is complete. For example the client apparatus displays a message indicative of the completion on the display unit .

Processing between the apparatuses until the local print queue and server print queue are generated after the user launches the printer driver installer has been described.

Processing sequences in the client apparatus print server and image output apparatus will be described in detail. The processes described briefly with reference to will also be explained in detail for the respective apparatuses with reference to the drawings. The embodiment assumes that the print queues of image output apparatus A image output apparatus B and image output apparatus C serving as printer A printer B and printer C are registered.

In step S the user instructs the OS to generate the print queue of the local printer. shows a dialog which displays each print queue registered in the OS . In a printer dialog an add button to designate addition of a print queue and a list of registered print queues are displayed. Note that the dialog shown in is merely an example and some OSs adopt other display methods.

When registering a print queue the user presses the printer add button provided on the printer dialog . In response to this instruction the OS displays a dialog for adding a print queue. On this dialog the user selects a printer product and designates a connection port. Upon completion of adding the print queue the printer dialog displays the newly added print queue. Note that a general OS can execute a vendor specific execution code when adding a print queue. The execution code is provided in the form in which for example it is contained in the driver. The purpose of the execution code is for example to acquire configuration information from a printer when adding a print queue and set the print queue in accordance with the acquired configuration information. Also the execution code can acquire locale information of the running OS set the Letter size as the default setting of the paper size in North America and A4 in other regions.

In step S the print queue registration execution code issues a request packet to acquire device profile information of a printer to be connected. This request is issued using WSD Web Service on Devices SNMP MIB Management Information Base or the like. In step S the execution code determines whether acquisition of the device profile has succeeded. If acquisition of the device profile has succeeded YES in step S the process advances to step S.

If acquisition of the device profile has failed NO in step S the process advances to step S and the execution code displays an address input dialog via the display unit and prompts the user to input she server connection port of the image output apparatus whose device profile could not be acquired.

In step S the print queue registration execution module saves the acquired server connection port in the external memory . The storage location may be the registry or sandbox of the OS or the server connection port may be saved as a file in a directory accessible by the print queue registration execution module. In step S the OS displays the newly registered local print queue on the printer dialog . By this processing the client apparatus and image output apparatus are locally connected and the client apparatus can output an image from the image output apparatus via the network .

In subsequent steps a print queue for outputting an image from the client apparatus to the image output apparatus via the print server is registered. Assume that the print queue of a server printer is registered for printer A having a print queue already registered as a local printer.

In step S the user opens the driver dialog of the local print queue and designates generation of a print queue for printing via the print server . More specifically the user displays the printer dialog on the client apparatus . Then the user double clicks the icon of printer A on the printer dialog . By this operation a print dialog for the print queue of printer A appears. exemplifies the print dialog of printer A. In a print dialog of printer A summary information of printer A a display button and a print server registration button are displayed. The summary information is the summary of she image output apparatus. In this example the outer appearance of printer A the printer name printer A a status representing the printing status of the image output apparatus and the type of image output apparatus are displayed. The display button is a button for displaying a print queue representing the processing status of a print job. The print server registration button is a button for registering a print queue for connecting to the print server .

To register a print queue for printing via the print server the user presses the print server registration button . As described above a vendor specific execution code which is executed upon pressing the print server registration button can be defined. By this operation the execution code is executed.

In step S the execution code of the print server registration button acquires a value set as the default of the driver of the local print queue. In step S the execution code checks whether the acquired driver setting value is a factory default. The factory default is a value which is defined in advance in shipment of the image output apparatus. If the acquired driver setting value is a factory default YES in step S the process advances to step S. In step S the execution code of the print server registration button launches the server printer driver installer and transfers the address of the print server and the server connection port address of printer A for the print server as parameters. Assume that the execution code of the print server registration button holds in advance the address of the print server for use. This is because the address of the print service provided by the print server is generally defined and rarely changed.

In step S the server printer driver installer generates a print queue using as the output port the address of the print service provided by the print server which has received the parameters. The server printer driver installer receives the server connection port address of printer A as a parameter. This address is held in the print queue and when transmitting a print job to the print server is designated in the print job as the address of an image output apparatus which actually outputs an image. The server printer driver installer installs even a server printer driver module which forms the print queue. Note that the timing to install the server printer driver module is not limited to this processing. It suffices to execute the installation until all print queues are registered. The server printer driver module may be installed when the print server registration button is pressed for the first time. Once the server printer driver module is installed it need not be installed in subsequent processing.

If the driver setting of the local print queue is not a factory default NO in step S the process advances to step S. The operation in step S is almost the same as that in step S except that the execution code of the print server registration button transfers the acquired driver setting value to the server printer driver installer as a parameter. The operation in step S is the same as that in step S except that the driver setting received as a parameter by the server printer driver installer is used as the driver setting of a server print queue to be generated. By this processing the print queue of the server printer is generated by only pressing the print server registration button on the print queue of printer A by the user.

In the following steps the execution code of the print server registration button subsequently performs processing to provide an additional function.

In step S the execution code of the print server registration button acquires the login ID of the user who logs in now. The login ID can be acquired via the system API Application Programming Interface of the OS or from the registry or usr directory information. In step S the execution code of the print server registration button compares the acquired login ID and a service ID provided by the print server to determine whether they have the same format ID system . More specifically by an inquiry to the print service the execution code of the print server registration button can check whether these formats coincide with each other. The format system corresponds to for example the usable character count or character format.

If the formats coincide with each other as a result of the comparison YES in step S the execution code of the print server registration button acquires in step S information of another login ID having a user right registered in the client apparatus . In general a user who can perform work to change the system such as print queue registration is one having an administrator right. To the contrary a user having a user right cannot perform print queue registration and the like. Therefore registering a user having a user right in the series of processes can reduce the burden on the administrator. Note that information of a user ID having a user right can be acquired from the registry of the OS or from usr directory information.

If the format of the login ID differs from that of the service ID of the print service NO in step S the acquired login ID cannot be used for use service registration. Hence in step S the execution code of the print server registration button displays an ID input dialog and prompts the user to enter the print service ID of the print server . Note that this dialog is a simple dialog for only entering a user ID and is not illustrated. In step S the execution code of the print server registration button registers in the print service the server connection port address of printer A for transmitting a print job from the print server . Registration of the user and printer for use in the print service provided by the print server is complete through these steps.

In subsequent steps the execution code of the print server registration button registers an image output apparatus present on the network other than the image output apparatus A that is printer A.

In step S the execution code of the print server registration button transmits a device search query packet to the network by multicast. In this step each image output apparatus sends back a device profile as a reply packet to the query. Note that the device profile is identical to one shown in and a detailed description thereof will not be repeated.

In step S the execution code of the print server registration button receives the device profile sent back from each image output apparatus. In step S the execution code of the print server registration button generates a list of the acquired device profiles and image output apparatuses. This list is used to process the image output apparatuses one by one in subsequent loop processing steps S to S and is simply the table of a device profile corresponding to the image output apparatus and a detailed description thereof will be omitted.

In step S the execution code of the print server registration button acquires information of one printer from the generated printer list. Assume that information of the image output apparatus B is acquired first. Since the list contains information of the image output apparatus to be acquired in step S YES in step S the process advances to step S. In step S it is checked whether there is a server printer connection protocol in the corresponding device profile. In this case the image output apparatus B supports at least IPP as the communication protocol in the device profile. IPP is a server printer connection compatible protocol so it is determined in step S that there is a compatible protocol. Upon this determination YES in step S the process advances to step S.

In step S the execution code of the print server registration button launches the server printer driver installer and transfers the address of the print server and the server connection port address of printer B for the print server as parameters. Assume that the execution code of the print server registration button holds in advance the address of the print server for use as described in the above example. In step S the server printer driver installer generates a print queue using as the output port of the print queue the address of the print service of the print server which has received the parameters. The server printer driver installer receives the server connection port address of printer B as a parameter. This address is held in the print queue and when transmitting a print job to the print server is designated in the print job as the address of an actual output printer.

In step S the execution code of the print server registration button registers in the print service of the print server the user ID and the address of the server printer connection port which have been acquired in step S and step S or S.

Referring back to step S the execution code of the print server registration button acquires information of one printer from the generated printer list. Assume that information of the image output apparatus C is acquired. Also assume that the image output apparatus C does not support a protocol coping with the server printer as a communication protocol that is does not support IPP.

Since the list contains information of the image output apparatus to be acquired in step S YES in step S the process advances to step S. In step S it is checked whether there is a server printer connection protocol in the corresponding device profile. In this case the image output apparatus C does not support IPP as the communication protocol in the device profile. IPP is a server printer connection compatible protocol so it is determined in step S that there is no compatible protocol. Upon this determination NO in step S the process advances to step S. In step S the execution code of the print server registration button launches the server printer driver installer. At this time the execution code of the print server registration button transfers as parameters the address of the print server the server printer connection port address of the registration source print queue that is printer A and the local printer connection port address of printer C serving as an actual job output destination. Assume that the execution code of the print server registration button holds in advance the address of the print server for use as described in the above example.

In step S the server printer driver installer generates a print queue using as the output port of the print queue the address of the print service of the print server which has received the parameters. The server printer driver installer receives the server connection port address of printer A as a parameter. This address is held in the print queue and when transmitting a print job to the print server is designated in the print job as the address of an image output apparatus which actually outputs an image.

In this case the image output apparatus A receives a print job from the print service. However the server printer driver installer has received as a parameter the local connection port address of the image output apparatus C serving as an actual output destination. The print queue generated in this case designates as print job attributes the image output apparatus A as the transmission destination of a print job from the print service and the image output apparatus C as an actual printout destination. In this case the print server transmits a print job to the image output apparatus A . However this job is output from the image output apparatus C . Thus the image output apparatus A functions as a proxy and transfers the received print job to the image output apparatus C . In step S the execution code of the print server registration button registers in the print service of the print server the user ID and the address of the server printer connection port which have been acquired in step S and step S or S.

Referring back to step S again no printer information to be acquired remains in the printer list NO in step S so the process ends.

The image output apparatus B and image output apparatus C have been added through these processes. shows a printer dialog in which a print queue is added. In a printer dialog a printer add button and a print queue of registered printer A printer B and printer C are displayed. A server print queue newly registered in the above described steps for printing by printer B and printer C via the print server is further displayed.

Next processing in the print server will be described with reference to the flowchart of . In step S the print server receives a network packet. After receiving the network packet the process advances to step S and the print server determines whether the packet is directed to it. If the packet is not directed to the print server NO in step S the process returns to step S and the print server receives a network packet again. If the packet is directed to the print server YES in step S the process advances to step S and the print server determines the type of packet. If the type of packet indicates registration of an image output apparatus and user ID the process advances to step S. In step S the print server registers the received image output apparatus information that is information about the print server connection port address of an image output apparatus and the ID of the user of the image output apparatus. This registration is executed by the printer registration program and user registration program of the print server . Upon the execution the image output apparatus information and user information are saved in the database of the print server.

If the type of packet indicates a print job in step S the process advances to step S. In step S the print server checks an attribute contained in the print job and checks whether the image output apparatus serving as the output destination and the user of it have been registered in the database . If the image output apparatus and user have not been registered NO in step S the process advances to step S and the print server cancels the job. If the image output apparatus and user have been registered YES in step S the process advances to step S and the rendering program renders the print job received by the print job reception program . Further the print data transmission program transmits the rendered print data to the image output apparatus serving as the output destination. After that the process returns to step S and the print server waits until it receives a network packet.

Processing in the image output apparatus will be described with reference to the flowchart of . In step S the image output apparatus receives a network packet. After receiving the network packet the process advances to step S and the image output apparatus determines whether the packet is directed to it. If the packet is not directed to the image output apparatus NO in step S the process returns to step S and the image output apparatus receives a network packet again.

If the packet is directed to the image output apparatus YES in step S the process advances to step S and the image output apparatus determines the type of packet. If the type of packet indicates a query packet the process advances to step S. In step S the image output apparatus generates the packet of its device profile and sends it back to the inquiry source. If the type of packet indicates a print job packet in step S the image output apparatus receives print data and executes the print job in step S.

By the series of processes the user can register an image output apparatus of his choice in the print server by only pressing the print server registration button of the print queue of the image output apparatus. When other image output apparatuses exist on a local network the user can register them together.

The second embodiment according to the present invention will be described with reference to the accompanying drawings. and are views for explaining the second embodiment according to the present invention. In the second embodiment the printing system additionally includes a document server. An image output apparatus which is registered in the print server and is used when the document server and print server cooperate with each other can be easily registered in the document server.

The image output apparatus receives a print job generated by the client apparatus via the network and prints it. In addition the image output apparatus can receive even a job from the print server and print it. The document server is a server which provides application services such as editing management and printing of a document from the browser or application of the client apparatus via the Internet . The document server can perform processing in cooperation with the print server .

More specifically the user refers to a management screen for the document server and registers the image output apparatus registered in the print server . Then the user generates a document using an application service provided by the document server and instructs the image output apparatus registered in the print server to print. The document server transmits the print job to the print server . This implements job transmission. The print server renders the received print job and transmits the print data to the designated image output apparatus .

In this way the document server and print server are used from the browser of the client apparatus . A document held in the document server can therefore be printed.

In the configuration apparatuses and elements except for the document server are the same as those in described in the first embodiment and a detailed description of each apparatus with reference to a block diagram will not be repeated.

The arrangement of the document server will be explained with reference to . In the document server a CPU comprehensively controls devices connected to a system bus in accordance with a program stored in for example a RAM serving as a storage unit. The RAM functions even as a main memory work memory and the like for the CPU . A ROM stores various programs and data. A keyboard I F controls inputs from a keyboard and a pointing device for example mouse not shown . A display unit I F controls display on a display unit .

An external memory I F controls access to an external memory such as an HD or SSD. The external memory includes an OS web service library and document service program . Further the external memory functions as a computer writable readable storage medium which stores user files other setting files and the like as a database . The document service program includes a user registration program printer registration program print job generation program print data transmission program and application script . A network I F is connected to the client apparatus and print server via the Internet and performs communication control processing.

Processing sequences in the respective apparatuses will be explained with reference to the flowcharts of . Note that registration of a local print queue and server print queue is the same as that in the first embodiment and a description thereof will not be repeated. Processing concerning the second embodiment will be described.

If the network packet is directed to the document server YES in step S the process advances to step S and the document server determines the type of network packet. If the received network packet indicates document service processing the process advances to step S and the document server performs various document service processes. This document service processing is for example a web browser based application service. In this case for example upon accepting a URL page request from the client apparatus the document server transmits an application script to the client apparatus .

If the type of network packet indicates printer registration in step S the process advances to step S and the document server performs printer registration processing. This is executed by the printer registration program saved in the external memory of the document server .

If the type of packet indicates user registration in step S the process advances to step S and the document server performs user registration processing. This is executed by the user registration program saved in the external memory of the document server . Upon completion of processing corresponding to the type of network packet the process returns to step S and the document server waits until it receives the next network packet.

In step S the user logs in to the OS of the client apparatus . In step S the OS launches the login script saved in the external memory of the client apparatus . In step S the launched login script checks whether the document service ID of the logged in user has already been saved. This information contains for example authentication information used to execute the document service. Assume that the document service ID is stored in the external memory of the client apparatus that is accessible by the login script. More specifically the document service ID is an accessible key or file in the OS register or usr directory. If the document service ID has been saved YES in step S the process ends. If no document service ID has been saved NO in step S the process advances to step S and the login script displays a document service ID input dialog on the client apparatus .

After the end of input to the check box and the controls and in document service ID registration the user presses an OK button . When canceling registration the user presses a cancel button . In step S the login script saves in the external memory of the client apparatus for each document service the login ID and password input by the user in step S. As a result authentication information containing the login ID and password corresponding to the document service is held.

Summary information is the summary of information about printer A print server . In this example the outer appearance of printer A the printer name printer A print server a status representing the printing status of the image output apparatus and the type of image output apparatus are displayed. Note that the summary information is not limited to these pieces of information and another information acquired from the image output apparatus may be displayed. A display button is a button for displaying a print queue representing the processing status of a print job. A document service registration button is a button for registering an image output apparatus in the document service of the document server . By pressing this button the user registers an output destination.

To register an image output apparatus in the document service in use the user presses the document service registration button . Note that a vendor specific execution code which is executed upon pressing this button can be defined. By this operation the execution code is executed. This execution code is provided by for example the printer driver.

In step S the user presses the document service registration button . In response to this instruction in step S the execution code of the document service registration button searches for the login ID and password of the document service that are saved in the OS. If the detected authentication information is not saved NO in step S the process ends. If the authentication information is saved YES in step S the process advances to step S. In step S the execution code of the document service registration button logs in to the document service using the saved login ID and password. By using the web API of the document service or the like the execution code registers in the document service the image output apparatus which is used by the user and registered in the print server. In this case the user wants to register printer A print server so the execution code registers the address of the print server and the server connection port address information of the image output apparatus. Accordingly the port is registered in the document service.

By inputting document service information for use the user can register an image output apparatus of his choice in the document service by only pressing the print queue button.

Aspects of the present invention can also be realized by a computer of a system or apparatus or device such as a CPU or MPU that reads out and executes a program recorded on a memory device to perform the functions of the above described embodiment s and by a method the steps of which are performed by a computer of a system or apparatus by for example reading out and executing a program recorded on a memory device to perform the functions of the above described embodiment s . For this purpose the program is provided to the computer for example via a network or from a recording medium of various types serving as the memory device for example computer readable medium .

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of Japanese Patent Application No. 2011 032632 filed Feb. 17 2011 which is hereby incorporated by reference herein in its entirety.

