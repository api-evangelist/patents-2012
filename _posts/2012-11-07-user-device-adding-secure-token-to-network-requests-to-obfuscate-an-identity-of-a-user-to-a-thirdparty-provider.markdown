---

title: User device adding secure token to network requests to obfuscate an identity of a user to a third-party provider
abstract: A user device is configured to receive a request to obtain a service, an application, or content from a provider; obtain, based on receiving the request, a token that may correspond to a user of the user device and may obfuscate an identity of the user to the provider; modify the request to include the token and to form a modified request; provide the modified request to the provider; receive, based on providing the modified request, information regarding the service, the application, or the content from the provider; and present the information for display on a display screen.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08799172&OS=08799172&RS=08799172
owner: Cellco Partnership
number: 08799172
owner_city: Basking Ridge
owner_country: US
publication_date: 20121107
---
Service provider networks transport network traffic associated with a variety of services applications and content. Over time such networks transport more and more network traffic between user devices and content providers. Service provider networks have an interest in protecting identities of its users and or safeguarding confidential information associated with the users.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.

Systems and or methods described herein may facilitate the provisioning of services applications and or content to users while obfuscating the identities of the users to the providers of the services applications and or content.

The user device may transmit the modified HTTP request to the third party provider. The third party provider may receive the modified HTTP request. The third party provider may analyze the modified HTTP request to identify the requested service application and or content. Based on the secure token included in the modified HTTP request the third party provider may initiate a particular process such as a content targeting process e.g. to target advertisements to the user an authentication process e.g. to authenticate the user a billing process e.g. to bill the user for the requested service application and or content . The third party provider may provide the requested service application and or content to the user device without the third party provider ever being aware of the identity of the user.

User device may include a communication device that is capable of communicating via wireless provider network and WLAN . For example user device may include a radiotelephone a personal communications system PCS terminal e.g. that may combine a cellular radiotelephone with data processing and data communications capabilities a personal digital assistant PDA e.g. that can include a radiotelephone a pager Internet intranet access etc. a laptop computer a personal computer a tablet computer a personal gaming system or another type of communication device. The description to follow will generally refer to user device as a wireless mobile communication device. The description is not limited however to a wireless mobile communication device and may equally apply to other types of user devices.

PGW may include one or more network devices that gather process search store and or provide information in a manner described herein. For example PGW may include a gateway a router a switch a firewall a network interface card NIC a hub a bridge a proxy server an optical add drop multiplexer OADM or some other type of device e.g. a home agent HA that processes and or transfers traffic.

In some implementations PGW may perform a network address translation NAT operation for user device when a request to communicate with network is received from user device . Additionally or alternatively PGW may obtain from the request information associated with a user of wireless provider network and may communicate with HSS AAA to authenticate the user based on the information associated with the user.

Token system may include one or more network devices that gather process search store and or provide information in a manner described herein. For example token system may generate a secure token for a user based on an identifier associated with user device or the user of user device . In some implementations the identifier may correspond to a user identifier such as a username a password an email address a personal identification number PIN or the like. In some implementations the identifier may correspond to a user device identifier such as a mobile equipment identifier MEID an international mobile equipment identifier IMEI a mobile directory number MDN an international mobile subscriber identity IMSI an electronic serial number ESN a universal integrated circuit card UICC identifier a mobile identification number MIN a mobile subscriber integrated services digital network MSISDN number a national access identifier NAI or the like. In some implementations the identifier may correspond to a combination of a user identifier and a user device identifier.

Token system may subject the identifier to a cryptographic hash function e.g. a message digest algorithm MDA a secure hash algorithm SHA such as a hash based message authentication code HMAC SHA or the like and or some other mathematical function to generate the secure token. The secure token may be valid for a period of time after which the secure token may no longer be used. Token system may store the secure token and provide the secure token for secure storage by user device . In some implementations token system may provide an application programming interface API via which user device may retrieve the secure token.

Token system may also process requests for user authentication services. For example token system may register third party provider application developers etc. to receive user authentication services in exchange for a fee and or other value. Token system may receive from third party provider a request to authenticate an attribute associated with a user e.g. an identity an MDN a billing address payment information etc. . Token system may obtain a secure token from the request and may determine whether the secure token is valid e.g. has not expired . When the secure token is valid token system may perform a look up operation to identify a stored secure token that matches the received secure token. Token system may retrieve an attribute associated with the stored secure token. Token system may also or alternatively determine whether the retrieved attribute matches an attribute obtained from the request. Token system may provide to third party provider a notification that the user is authenticated when the retrieved attribute matches the attribute obtained from the request. Token system may provide to third party provider a notification that the user cannot be authenticated when the retrieved attribute does not match the attribute obtained from the request.

HSS AAA may include one or more server devices that gather process search store and or provide information in a manner described herein. For example HSS AAA may manage and or store in a memory associated with HSS AAA a user profile of a user associated with user device . The user profile may identify services for which the user has subscribed applications used by the user a usage history user preferences etc. The user profile may also or alternatively identify whether the user has authorized e.g. opted in or not authorized e.g. opted out some or all of the user profile to be used to obtain targeted content. Additionally or alternatively HSS AAA may perform AAA operations when registering user device with wireless provider network . Additionally or alternatively HSS AAA may authenticate a user associated with wireless provider network based on information associated with the user received from PGW and or token system .

Third party provider may include one or more server devices that provide any type or form of content. For example third party provider may provide video audio images advertising content web pages text data or some combination thereof. Additionally or alternatively third party provider may provide applications and or services such as games scripts messaging applications services banking applications services communication applications services etc. Third party provider may communicate with a particular user device being used by a user of wireless provider network to perform electronic transactions to provide a good and or a service in exchange for payment information from user device . Third party provider may receive from ad provider targeted content such as advertising content that corresponds to a secure token and may provide via the particular user device the targeted content and or other content to the user with which the secure token is associated.

Ad provider may include one or more server devices that provide advertising content. Ad provider may for example maintain targeted content such as advertising content that corresponds to secure tokens associated with users. Particular advertising content corresponding to one or more secure tokens may for example conform to attributes of the users with which the secure tokens are associated. Ad provider may also or alternatively provide advertising content to third party provider that corresponds to a secure token received from third party provider .

Wireless provider network may include one or more wired and or wireless networks via which user devices communicate and or receive content. For example wireless provider network may include a cellular network the Public Land Mobile Network PLMN a second generation 2G network a third generation 3G network a fourth generation 4G network e.g. a long term evolution LTE network a fifth generation 5G network and or another network. Additionally or alternatively wireless provider network may include a wide area network WAN a metropolitan area network MAN an ad hoc network an intranet a fiber optic based network and or a combination of these or other types of networks.

WLAN may include a local wireless network such as a wireless fidelity WiFi network a wireless distribution system a wireless peer to peer network or the like. As shown in WLAN may permit user device to connect to network without connecting via wireless provider network . In some implementations WLAN may be part of network .

Network may include one or more wired and or wireless networks. For example network may include a cellular network the PLMN a 2G network a 3G network a 4G network e.g. a LTE network a 5G network and or another network. Additionally or alternatively network may include a WAN a MAN a telephone network e.g. the Public Switched Telephone Network PSTN an ad hoc network an intranet the Internet a fiber optic based network and or a combination of these or other types of networks.

The quantity of systems devices and or networks illustrated in is provided for explanatory purposes only. In practice there may be additional systems devices and or networks fewer systems devices and or networks different systems devices and or networks or differently arranged systems devices and or networks than illustrated in . For example while shows PGW token system and HSS AAA server as being located outside of wireless provider network in practice PGW token system and or HSS AAA server may be network devices located in wireless provider network . Additionally or alternatively while shows PGW communicating with network via token system in practice PGW may communicate with network without going through token system and may communicate with token system either directly or via one or more devices of wireless provider network and or network .

Also in some implementations one or more of the devices of environment may perform one or more functions described as being performed by another one or more of the devices of environment . Systems devices and or networks of environment may interconnect via wired connections wireless connections or a combination of wired and wireless connections.

Device may include a bus a processor a memory an input component an output component and a communication interface .

Bus may include a path that permits communication among the components of device . Processor may include one or more processors microprocessors or processing logic e.g. application specific integrated circuits ASICs field programmable gate arrays FPGAs etc. that interprets and executes instructions. Memory may include any type of dynamic storage device e.g. random access memory RAM that stores information and instructions for execution by processor any type of non volatile storage device e.g. read only memory ROM that stores information for use by processor and or any other type of storage device such as a flash memory.

Input component may include a component that permits a user to input information to device such as a keyboard a keypad a button a switch etc. Output component may include a component that outputs information to the user such as a display a speaker a light emitting diodes LED etc.

Communication interface may include any transceiver like mechanism that enables device to communicate with other devices and or systems via wireless communications e.g. radio frequency infrared and or visual optics etc. wired communications e.g. conductive wire twisted pair cable coaxial cable transmission line fiber optic cable and or waveguide etc. or a combination of wireless and wired communications. For example communication interface may include components for communicating with another device or system via a network such as wireless provider network WLAN and or network . In one implementation communication interface may be a logical component that includes input and output ports input and output systems and or other input and output components that facilitate the transmission of data to other devices.

Device may perform certain operations described herein. Device may perform these operations in response to processor executing software instructions contained in a computer readable medium such as memory . A computer readable medium may be defined as a non transitory memory device. A memory device may include space within a single physical storage device or spread across multiple physical storage devices. The software instructions may be read into memory from another computer readable medium or from another device. The software instructions contained in memory may cause processor to perform processes described herein. Alternatively hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein. Thus implementations described herein are not limited to any specific combination of hardware circuitry and software.

Although shows example components of device in other implementations device may contain fewer components additional components different components or differently arranged components than depicted in . For example device may include one or more switch fabrics instead of or in addition to bus . Additionally or alternatively one or more components of device may perform one or more tasks described as being performed by one or more other components of device .

Application may include a program that interacts with an external device such as third party provider . Some examples of application include a browser application a word processing application a drawing application a spreadsheet application a messaging application a communication application and a presentation application. In some implementations application may communicate with third party provider to receive and present content on a display screen associated with user device to obtain a service from third party provider and or to purchase a product or service from third party provider .

Application may generate a request. In some implementations the request may take the form of an HTTP request. Application may provide the request to rendering engine .

Rendering engine may be responsible for presenting content on a display screen associated with user device . Rendering engine has knowledge of the display screen size and the area of the display screen to use to render the content. In some implementations rendering engine may take the form of WebKit which is a rendering engine designed to allow applications to render web pages. In some other implementations rendering engine may take the form of WebView which is another rendering engine designed to render web content.

Rendering engine may receive the request from application and obtain the secure token associated with user device . To obtain the secure token rendering engine may output a request for the secure token to token engine . Rendering engine may receive the secure token from token engine . Rendering engine may modify the request with the secure token e.g. insert the secure token into or attach the secure token to a portion of the request e.g. a header a trailer or a payload to form a modified request and may output the modified request to third party provider via wireless provider network or WLAN .

In some implementations rendering engine may modify the request insert or attach the secure token only when user device connects to WLAN . Thus in these implementations when user device connects to wireless provider network rendering engine may not modify the request not insert or attach the secure token and may output the request to third party provider via wireless provider network . In some other implementations rendering engine may modify the request with the secure token to form a modified request and may output the modified request regardless of whether user device connects to wireless provider network or WLAN .

Token engine may run on user device as a service that has access to the inner layers of user device . Token engine may store the secure token in storage . Token engine may receive a request for the secure token from rendering engine and based on the request may determine whether the secure token is stored in storage and or whether the secure token stored in storage is valid. If the secure token is not stored in storage or the secure token stored in storage is invalid token engine may communicate with token system to obtain the secure token. Token engine may have an API that communicates with token system to obtain the secure token.

Storage may correspond to secure memory space within user device . Storage may store the secure token in a particular location in memory of user device .

The functional components illustrated in are provided for explanatory purposes only. In practice there may be additional functional components fewer functional components different functional components or differently arranged functional components than illustrated in . Also in some implementations one or more of the functional components of user device may perform one or more functions described as being performed by another one or more of the functional components of user device . Also or alternatively two or more of the functional components of user device may be implemented within a single device and or a single functional component of user device may be implemented within two or more devices which may be co located or remotely located.

In some implementations proxy may take the form of proxy files stored on user device . Proxy may receive the request from application and obtain the secure token associated with user device . To obtain the secure token proxy may output a request for the secure token to token engine . Proxy may receive the secure token from token engine . Proxy may modify the request with the secure token e.g. insert the secure token into or attach the secure token to a portion of the request e.g. a header a trailer or a payload to form a modified request and may output the modified request to third party provider via wireless provider network or WLAN .

In some implementations proxy may modify the request insert or attach the secure token only when user device connects to WLAN . Thus in these implementations when user device connects to wireless provider network proxy may not modify the request not insert or attach the secure token and may output the request to third party provider via wireless provider network . In some other implementations proxy may modify the request with the secure token to form a modified request and may output the modified request regardless of whether user device connects to wireless provider network or WLAN .

The functional components illustrated in are provided for explanatory purposes only. In practice there may be additional functional components fewer functional components different functional components or differently arranged functional components than illustrated in . Also in some implementations one or more of the functional components of user device may perform one or more functions described as being performed by another one or more of the functional components of user device . Also or alternatively two or more of the functional components of user device may be implemented within a single device and or a single functional component of user device may be implemented within two or more devices which may be co located or remotely located.

As shown in process may include receiving a request from an application block . For example an application such as a browser application on user device may generate a request to obtain a service an application and or content in response to an instruction from a user of user device . Assume that a user desires to obtain content from a third party provider e.g. a particular website by entering a URL of third party provider into a user interface of application . In some implementations the request may take the form of an HTTP request. Depending on the implementation as described above with regard to application may provide the request to rendering engine or proxy . For the description to follow assume that the implementation of applies. With regard to the implementation of operations described below as being performed by rendering engine may be performed by proxy .

Process may include obtaining a secure token block . For example rendering engine may communicate with token engine to obtain a secure token. Token engine may determine whether a valid secure token is stored in storage . If the secure token is not stored in storage token engine may communicate with token system to obtain the secure token may store the secure token in storage and may provide the secure token to rendering engine . If the secure token is already stored in storage token engine may determine whether the secure token stored in storage is valid. As explained above a secure token may be valid for only a period of time. If the secure token is valid token engine may provide the secure token to rendering engine . If the secure token is no longer valid token engine may communicate with token system to obtain a valid secure token may store the valid secure token in storage and may provide the valid secure token to rendering engine .

Process may include modifying the request with the secure token to form a modified request block . For example in some implementations rendering engine may form the modified request by inserting the secure token into a portion of the request such as into a header of the request a trailer of the request or a payload of the request. In some other implementations rendering engine may modify the request by attaching e.g. adding the secure token to a portion of the request such as to a header of the request a trailer of the request or a payload of the request.

Process may include outputting the modified request block . For example rendering engine may transmit the modified request to third party provider e.g. a website server associated with the particular website via wireless provider network or WLAN . Third party provider may receive the modified request and may obtain the content identified by the modified request.

In some example implementations as further described with regard to third party provider may read the secure token from the modified request and use the secure token to obtain targeted content. Third party provider may transmit the requested content and the targeted content to user device . User device may display the content and the targeted content on a display screen associated with user device .

In some example implementations as further described with regard to third party provider may read the secure token from the modified request and initiate an authentication process to authenticate the user or user device associated with the modified request. Third party provider may operate based on a result of the authentication process and transmit the requested content to user device when the authentication result indicates that the user or user device is authenticated. User device may display the content on a display screen associated with user device .

In some example implementations as further described with regard to third party provider may read the secure token from the modified request and initiate a billing process. Third party provider may operated based on a result of the billing process and transmit the requested content to user device when the billing result is successful. User device may display the content on a display screen associated with user device .

The above identified implementations are merely three use cases which may occur separately or in combination. In other implementations other use cases are possible.

While a series of blocks has been described with regard to the blocks and or the order of the blocks may be modified in other implementations. Further non dependent blocks may be performed in parallel.

For example in some other implementations user device may modify a request to include the secure token only when user device connects to WLAN not when user device connects to wireless provider network .

Additionally or alternatively in a situation where user device connects to wireless provider network in some implementations token system may receive the modified request from user device and may modify the modified request to include the secure token even though the modified request already includes the secure token thereby forming a re modified request. Token system may provide the re modified request to third party provider . Third party provider may process the re modified request by for example discarding one of the two instances of the secure token.

The browser application provides the HTTP request to the rendering engine or the proxy hereinafter referred to as rendering engine proxy shown as A in . The rendering engine proxy invokes an API for the token engine to obtain a secure token from the token engine shown as B in . The token engine determines whether a valid secure token is stored in the storage shown as C in . In this case the token engine determines that a valid secure token is not stored in the storage. As a result the token engine invokes an API for the token system to obtain the secure token from the token system shown as D in .

The token engine provides the secure token to the rendering engine proxy shown as E in . The rendering engine proxy modifies the HTTP request to include the secure token thereby forming a modified HTTP request. The rendering engine proxy sends the modified HTTP request to the EPSN website provider shown as F in . The EPSN website provider analyzes the modified HTTP request including the secure token included with the modified HTTP request. The EPSN website provider generates a request for targeted content and includes the secure token in the request. The EPSN website provider sends the request to the ad provider shown as G in .

The ad provider receives the request from EPSN website provider and matches the secure token obtained from the request to a secure token that is stored in a memory associated with the ad provider. The ad provider retrieves from memory targeted content that corresponds to the stored secure token and provides the targeted content to the EPSN website provider shown as H in . The EPSN website provider receives the targeted content and combines the content with the targeted content to create a response. The EPSN website provider transmits as the response the content and the targeted content to the user device shown as I in . The rendering engine proxy receives the response and provides the response to the browser application shown as J in . The browser application receives the response and provides the response for display on a display screen associated with the user device.

The browser application provides the HTTP request to the rendering engine or the proxy hereinafter referred to as rendering engine proxy shown as A in . The rendering engine proxy invokes an API for the token engine to obtain a secure token from the token engine shown as B in . The token engine determines whether a valid secure token is stored in the storage shown as C in . In this case the token engine determines that a valid secure token is stored in the storage. As a result the token engine retrieves the secure token from the storage shown as C in .

The token engine provides the secure token to the rendering engine proxy shown as D in . The rendering engine proxy modifies the HTTP request to include the secure token thereby forming a modified HTTP request. The rendering engine proxy sends the modified HTTP request to the AMB website provider shown as E in . The AMB website provider analyzes the modified HTTP request including the secure token included with the modified HTTP request. To determine whether the user is a subscriber to the AMB website the AMB website provider generates a request to authenticate the user or the user device and includes the secure token in the request. The AMB website provider sends the request to the token system shown as F in .

The token system receives the request from the AMB website provider and determines whether the user or the user device is a subscriber to the AMB website provider by for example comparing the secure token to a stored set of secure tokens associated with subscribers of the AMB website provider. The token system informs the AMB website provider of the authentication result shown as G in . Assume that the authentication result indicates that the user or the user device is a subscriber to the AMB website. The AMB website provider receives the authentication result and creates a response based on the authentication result. The AMB provider transmits as the response a notification that the user has been authenticated and or the requested content to the user device shown as H in . The rendering engine proxy receives the response and provides the response to the browser application shown as I in . The browser application receives the response and provides the response for display on a display screen associated with the user device.

The browser application provides the HTTP request to the rendering engine or the proxy hereinafter referred to as rendering engine proxy shown as A in . The rendering engine proxy invokes an API for the token engine to obtain a secure token from the token engine shown as B in . The token engine determines whether a valid secure token is stored in the storage shown as C in . In this case the token engine determines that a valid secure token is stored in the storage. As a result the token engine retrieves the secure token from the storage shown as C in .

The token engine provides the secure token to the rendering engine proxy shown as D in . The rendering engine proxy modifies the HTTP request to include the secure token thereby forming a modified HTTP request. The rendering engine proxy sends the modified HTTP request to the movie stream website provider shown as E in . The movie stream website provider analyzes the modified HTTP request including the secure token included with the modified HTTP request. Assume that the movie stream website provider wants to bill the user for the video before providing the video to the user device. In this case the movie stream website provider generates a request to bill the user and includes the secure token in the request. The movie stream website provider sends the request to the token system shown as F in .

The token system receives the request from the movie stream website provider and determines that the request is associated with a request to bill the user for the video purchase from the movie stream website provider. The token system generates a billing request and sends the billing request to a billing system shown as G in . The token system may map the secure token to an identifier for the user or the user device and send the identifier to the billing system with the billing request. In this case the billing system may bill the user based on the identifier. Alternatively the token system may send the secure token to the billing system with the billing request and the billing system may map the secure token to an identifier for the user or the user device and may bill the user based on the identifier.

The token system notifies the movie stream website provider that the user billing has been completed shown as H in . The movie stream website provider receives the notification from the token system and creates a response that includes the requested video or a link to the requested video. The movie stream provider transmits the response to the user device shown as I in . The rendering engine proxy receives the response and provides the response to the browser application shown as J in . The browser application receives the response and provides the response for display on a display screen associated with the user device.

Systems and or methods described herein may enable a user device to insert a secure token into a request for a service an application and or content. The secure token can then be used to provide the service the application and or the content to a user of the user device while obfuscating the identity of the user. The user device may provide a modified request which includes the secure token to a third party provider to enable the third party provider to for example provide targeted content authenticate the user or bill the user using the secure token and without knowing the identity of the user.

The foregoing description provides illustration and description but is not intended to be exhaustive or to limit the implementations to the precise form disclosed. Modifications and variations are possible in light of the above implementations or may be acquired from practice of the embodiments.

It will be apparent that systems and or methods as described above may be implemented in many different forms of software firmware and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement these systems and methods is not limiting of the embodiments. Thus the operation and behavior of the systems and or methods were described without reference to the specific software code it being understood that software and control hardware can be designed to implement the systems and or methods based on the description herein.

Further certain portions described above may be implemented as a component that performs one or more functions. A component as used herein may include hardware such as a processor an ASIC or an FPGA or a combination of hardware and software e.g. a processor executing software .

Even though particular combinations of features are recited in the claims and or disclosed in the specification these combinations are not intended to limit the disclosure of the possible implementations. In fact many of these features may be combined in ways not specifically recited in the claims and or disclosed in the specification. Although each dependent claim listed below may directly depend on only one other claim the disclosure of the possible implementations includes each dependent claim in combination with every other claim in the claim set.

No element act or instruction used in the present application should be construed as critical or essential unless explicitly described as such. Also as used herein the article a is intended to include one or more items and may be used interchangeably with one or more. Where only one item is intended the term one or similar language is used. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise.

