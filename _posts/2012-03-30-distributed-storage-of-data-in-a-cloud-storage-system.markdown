---

title: Distributed storage of data in a cloud storage system
abstract: Provided are apparatus and method for distributedly storing an object in a plurality of data centers included in a cloud storage system. In the method, an object may be divided into a plurality of sub-objects each having a fragmentation size. Then, the sub-objects may be distributedly stored in at least one data center based on weights of the plurality of data centers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09052962&OS=09052962&RS=09052962
owner: KT CORPORATION
number: 09052962
owner_city: Gyeonggi-do
owner_country: KR
publication_date: 20120330
---
The present application claims priority under 35 U.S.C. 119 to Korean Patent Application No. 10 2011 0029851 filed on Mar. 31 2011 which is hereby incorporated by reference in its entirety.

The present invention relates to a cloud storage system and in particular to distributed data storage within data centers of the cloud storage system.

Lately cloud computing has been introduced allowing for computing as a service using resources distributed over a network. For example cloud computing may provide computation software applications data access data management and storage resources without requiring users to know the location other details of the computing infrastructure. Such cloud computing can be defined as an on demand outsourcing service provided through a communication network. In a cloud computing environment a service provider may form cloud centers by virtually integrating resources distributed over a communication network and provide a cloud service to a user through the cloud centers. Such a cloud center may be a basic unit to provide a cloud service in cloud computing environment. In order to provide the cloud service to a client the cloud center may create at least one virtual machine using associated resources such as a computing node and a storage node.

The cloud service may include a storage service. The storage service may be referred to as cloud storage data storage as a service or storage as a service SaaS . That is the cloud storage service may denote a storage service provided through a network. The cloud storage service may be easily expandable and easily applicable to a commercial system. S3 of Amazon Rackspace of Nirvanix and Mosso cloud division of Hosting may be well known examples of a cloud storage system.

A cloud storage system may be a virtual storage system that may integrate physical heterogeneous storage devices into one logical virtual storage pool using software program or hardware equipment for virtualization function. The cloud storage system may allocate storage resources to clients when necessary. The cloud storage system may have many advantages such as high resource utilization cost reduction high expandability and high availability. Such advantages may be achieved through virtualization of physical storage devices. For example a cloud storage system may virtually allocate storage devices according to various demands. Accordingly virtual allocation may prevent unnecessary storage devices from being added and increase utilization of existing storage devices. A cloud storage system may reallocate storage devices having low utilization or be not used for a predetermined time period among distributed storage devices through virtualizing the storage devices. Accordingly reallocation may reduce costs for adding new storage devices into a cloud storage system. Furthermore a cloud storage system may easily and conveniently add new storage devices through virtualization of storage devices without interrupting storage services. Moreover a cloud storage system may mirror or duplicate the same data through virtualizing storage devices. Accordingly the cloud storage system may prevent data loss even though a particular storage device malfunctions.

As described above a cloud storage system may control and manage a plurality of storage devices as one storage pool. Each storage device in the storage pool may have different performance according to a storage capability. Accordingly discriminately managing each storage device according to a storage capacity might be advantageous or even required.

A typical cloud storage system may control timing of storing data in storage devices. Particularly the data storing times of each storage device may be decided in proportion to a storage capacity of each storage device. However the typical cloud storage system does not distribute data to storage devices according to storage capacities of storage devices. Distributed storage of data may result in data that is split into a plurality of fragments having a certain size and the plurality of fragments are distributedly stored in different storage devices.

For example a storage device A has a storage capacity of about 20 GB and a storage device B has a storage capacity of about 100 GB. The data storing time ratio of storage devices A and B may be discriminately defined as 1 5 according to the storage capacities of storage devices A and B. After 10 GB data is stored in the storage device B five times the data storing time of the storage device B reaches its maximum data storing time. In this case the typical cloud storage system cannot store data in the storage device B anymore even though the storage device B still has available space to store data.

Embodiments of the present invention overcome the above disadvantages and other disadvantages not described above. Also the present invention is not required to overcome the disadvantages described above and an embodiment of the present invention may not overcome any of the problems described above.

In accordance with an aspect of the present invention a cloud storage system may distribute data to a plurality of data center based on storage resources of the data centers.

In accordance with another aspect of the present invention a cloud storage system may divide an object into a plurality of sub objects based on a fragmentation size and distributedly store the plurality of sub objects in at data centers based on storage capacities of the data centers.

In accordance with an exemplary embodiment of the present invention a method may be provided for distributedly storing data in a plurality of data centers in a cloud storage system. The method may include dividing an object into a plurality of sub objects each having a fragmentation size and distributedly storing the sub objects in at least one data center based on weights of the plurality of data centers.

The method may include determining each fragmentation size based dividing an average object size by a sum of the weights of the plurality of data centers.

The method may include determining the weights based on storage resources of each of the plurality of data centers.

For the distributedly storing a corresponding weight of a data center may be based on a ratio of a storage capacity of the data center to storage capacities of other data centers. The distributedly storing the sub object may include determining a number of sub objects to be stored in each data center based on a weight of each data center.

For the distributedly storing the sub objects more sub objects may be stored in a data center having a higher weight than a data center having a lower weight.

The method may include receiving the object from a client with a request of storing the object in the cloud storage system.

The method may further include calculating a first hash value of the object and assigning the first hash value to the sub objects as a correlation value.

The method may include storing and managing the hash value of the object and the correlation value of the sub objects as metadata.

The method may include determining with the hash value of the object and the correlation value of the sub objects whether the object is related to the sub objects and whether the sub objects are related to each other.

The method may further include calculating a second hash value of each sub object based on a filename of each sub objects and determining at least one data center to store sub objects based on the second hash value of a corresponding sub object.

The method may include processing the second hash value of each sub object into a reference number and indicating based on the second hash value at least one data center in metadata stored in a metadata database.

In accordance with another embodiment of the present invention a method may be provided for retrieving an object in a cloud storage system including a plurality of data centers. The method may include receiving from a client a request of retrieving an object from the cloud storage system determining data centers in the cloud storage system which store sub objects divided from the object requesting the determined data centers to transmit the sub objects receiving the sub objects from the determined data centers restoring the object by combining the received sub objects and transmitting the restored object to the client.

The determining data centers may include determining whether a sub object is divided from the object based on a correlation value of the sub object and a hash value of the object.

The method may include determining sub objects having a correlation value identical to a hash value of the object as the sub objects divided from the object.

In accordance with another embodiment of the present invention an apparatus may be provided for distributedly storing an object in a plurality of data centers included in a cloud storage system. The apparatus may include a divider and a distributor.

The divider may be configured to divide an object into a plurality of sub objects each having a fragmentation size and the distributor may be configured to distributedly store the plurality of sub objects in at least one data center based on weights of the data centers. The fragmentation size may be determined based on a result of dividing an average object size by a sum of the weights of the data centers. A weight of a data center may be a ratio of a storage capacity of the data center to storage capacities of other data centers.

The apparatus may further include a correlation unit and a storage location decider. The correlation unit may be configured to calculate a first hash value of the object and assign the first hash value to the sub objects as a correlation value. The storage location decider may be configured to calculate a second hash value of each sub object based on a filename of each sub object and to determine at least one data center to store the sub objects based on the second hash value of each sub object.

The storage location decider may be configured to i obtain reference numbers that indicate the at least one data center in metadata stored in a metadata database by processing the second hash value of each sub object and ii determine data centers to store the sub objects based on the reference numbers. The distributor may be configured to determine a number of sub Objects to be stored in the determined data centers based on weights of the determined data centers. Furthermore the distributor may be configured to store more sub objects in a data center having a higher weight than a data center having a lower weight.

Reference will now be made in detail to embodiments of the present invention examples of which are illustrated in the accompanying drawings wherein like reference numerals refer to like elements throughout. The embodiments are described below in order to explain the present invention by referring to the figures.

In accordance with an embodiment of the present invention a cloud storage system may distributedly store an object in a plurality of data centers in consideration of storage capacities of the data centers. For example an object may be divided into a plurality of sub objects based on a fragmentation size and the plurality of sub objects may be distributedly stored into a plurality of data centers according to a storage capacity of each data center. Hereinafter an apparatus and method for distributedly storing an object in a cloud storage system in accordance with an embodiment of the present invention will be described with reference to the accompanying drawings.

Referring to cloud storage system may provide various types of cloud storage services to clients and through a network. For example clients and may access elements of cloud storage system through a web service application programming interface API or through a web based user interface and provided requests for cloud storage system to store or retrieve data. In addition to data storing and retrieving cloud storage service may include data sharing data back up and common data processing.

Cloud storage system may include cloud storage server and a plurality of data centers show as data centers and . Cloud storage server may control and manage one or more of data centers and . For example cloud storage server may virtually integrate data centers and and control data centers and as one virtual storage unit. When expansion of an overall storage capacity of cloud storage system is desired cloud storage system may virtually add a new data center or add a new storage device into an existing data center. Furthermore cloud storage system may replace an existing data center having a small storage capacity with another new data center having a large storage capacity.

Data centers and may be scattered over numerous and distinctly separated geographic regions. Each data center or may include at least one corresponding storage device. For example each of data centers or may include a corresponding plurality of storage devices each storage device having different storage capacity. Data centers and may perform an operation such as storing and or retrieving data in response to control of cloud storage server but the present invention is not limited thereto. Data centers and may perform the operation in response to a request directly received from clients and . Such data centers and may receive data from clients and store the received data in storage devices selected by cloud storage server . Furthermore data centers and may retrieve data from at least one storage devices in response to the control of the cloud storage server and transmit the retrieved data to clients through cloud storage server .

Clients and may access cloud storage system through a network and be provided with a cloud storage service. Due to advantages of various networks clients and are not necessarily limited in their geographic locations for accessing cloud storage system or receiving the cloud storage service from cloud storage system . Particularly clients and may be connected to cloud storage system through at least one network and access data centers and through cloud storage server . Client or may use the cloud storage service without knowledge of storage capacities of data centers and and without knowledge of information on synchronization status between data centers and .

In general cloud storage system may be classified into a block based cloud storage system and an object based cloud storage system according to a basic unit of processing data. Hereinafter a block based cloud storage system and an object based cloud storage system will be described with reference to and to .

Referring to a block based cloud storage system may be a storage system that processes data in a unit of a block. In the block based cloud storage system a file system may be divided into fixed sized blocks and data may be processed in a unit of a block. As shown in the blocks fixed sized blocks blocks of a protocol such as SCSI and ATA and be mixed data and meta data. For example the block based cloud storage system may establish an interface between cloud storage server and clients and in a unit of a block. Furthermore cloud storage server may store and access data in a unit of a block in the block based cloud storage system. The stored and accessed block may have a fixed size and each block may include data and corresponding metadata.

Referring to the object based cloud storage system may be a storage system that processes data in a unit of an object. The object may denote a logical unit of storing data in a storage device. In the object based cloud storage system data may be split into objects each have a variable size. Such objects may be stored separately from corresponding metadata. The object based protocols such as OSD and ReST might typically be supported. In the object based cloud storage system an interface between cloud storage server and clients may be established in a unit of an object. Cloud storage server may store and access data in a unit of an object in the object based cloud storage system.

As shown in the object based cloud storage system of may virtualize storage and store data by a logical object unit. Furthermore the object based cloud storage system may separately manage metadata from data. The object based cloud storage system may allow clients or cloud storage server to access metadata independently from corresponding object.

Unlike the block based cloud storage system the object based cloud storage system may logically manage data such as files and directories as well as physically managing storages for example allocating data blocks to a disk and mapping data blocks to a disk. The object based cloud storage system may perform the physical storage management in an object based storage device and may apply an object based interface to the physical storage management.

As described above the object based cloud storage system may manage data and storage devices in a unit of an object. The object based cloud storage system may not restrict a plurality of clients to a physical structure of cloud storage server . Accordingly a processing load of cloud storage server may be reduced. Each client may independently access the same data. The object based cloud storage system may set up a security policy differently per each object. Hereinafter an apparatus and method for distributedly storing data in data centers according to storage resources of data centers in an object based cloud storage system will be described with reference to .

Referring to object based cloud storage system may distributedly store data into data centers and based on a storage resource of each data center in accordance with an embodiment of the present invention. The storage resource may denote a resource of each data center and . For example the storage resource may be a storage capacity of each data center and .

Object based cloud storage system in accordance with an embodiment of the present invention may include data distributing and storing apparatus and metadata database coupled to data centers and . Data distributing and storing apparatus may perform similar operations of cloud storage server of . Unlike typical cloud storage server of data distributing and storing apparatus may distributedly store objects to data centers and based on a storage resource for example storage capacity of each data center in accordance with an embodiment of the present invention. Such data distributing and storing apparatus may also be referred to herein as data distributing and storing server. A structure of data distributing and storing apparatus will be described subsequently in detail with reference to

Data center or may respectively include object servers or and storage devices and . Although data center or are each illustrated in as including one storage device the present invention is not limited thereto. For example each data center and may include a plurality of storage devices. In this case a storage capacity of a data center may be a sum of storage capacities of corresponding storage devices.

Object servers and may communicate with data distributing and storing apparatus . Object servers and may receive data from data distributing and storing apparatus and store the received data in storage devices and . Object server and may retrieve particular data stored in storage devices and and transmit the retrieved data to data distributing and storing apparatus .

Particularly cloud storage system may split an object into a plurality of sub objects and distributedly store the sub objects into data centers and according to storage capacities of data centers and . The storage capacities of data centers and may be storage capacities of storage devices and . For example the object may be particular data such a movie file. Cloud storage system may split the movie file into a plurality of sub objects and distribute the plurality of sub objects to data centers and based on the storage capacities of the data centers and . Such splitting and distributing will be described in detail subsequently.

In order to distribute a plurality of sub objects according to a storage capacity of each data center a weight may be assigned to each data center and in proportion to a storage capacity of a corresponding storage device. For example data center may include one storage device having a storage capacity of about 20 GB. Data center may include one storage device having a storage capacity of about 20 GB. Data center may include one storage device having a storage capacity of about 40 GB. Data center may include one storage device having a storage capacity of about 40 GB. The storage capacity ratio of data centers may be 20 GB 20 GB 40 GB 40 GB. That is the storage capacity radio of data centers may be 1 1 2 2. Accordingly weights of 1 1 2 and 2 may be respectively assigned to data centers and . In this case data center may have a weight of 1 data center may have a weight of 1 data center may have a weight of 2 and data center may have a weight of 2. As described above the weight of each data center and may denote a storage capacity compared to that of others.

The weights of data centers may be used to allocate sub objects to data centers. Such a weight of each data center may be decided by an operator when an object based cloud storage system is initialized. In accordance with an embodiment of the present invention data distributing and storing apparatus may determine a storage capacity ratio using storage capacities of storage devices of corresponding data centers and assign weights to data centers according to the storage capacity ratio. An operator or data distributing and storing apparatus may newly add delete and modify weights of data centers when a new data center is added to cloud storage system when a data center is released from cloud storage system or when a storage device is added to or deleted from an existing data center.

Data distributing and storing apparatus may allocate sub objects to data centers according to weights of data centers and and distributedly store sub objects of a target object to data centers and based on the allocation. Data distributing and storing apparatus may store more sub objects in a data center having a higher weight than a data center having a lower weight. For example data distributing and storing apparatus may store one sub object in data centers and because data centers and have a weight of 1. Data distributing and storing apparatus may store two sub objects in data centers and because data centers and each have a weight of 2.

Data distributing and storing apparatus may store the weights in metadata database and manage the weights as metadata. Such metadata may include information on mapping relation of a weight to each data center as well as other information such as a first hash value of an object a correlation value of sub object second hash values of sub objects a filename of an object filenames of sub objects and mapping relations between sub objects and data centers. When data distributing and storing apparatus may refer to such metadata to allocate sub objects to each data center. Such metadata may be stored in metadata database in a form of a data center allocation table. The data center allocation table may be set up by an operator but the present invention is not limited thereto. Data distributing and storing apparatus may select data centers to store sub objects and determine the number of sub objects to be stored to each data center using the data center allocation table. The data center allocation table may be prepared in consideration of locations distribution status processing power and network status as well as weights of data centers. Such a data center allocation table may have a matrix form. Particularly the data center allocation table may include information on a first hash value of an object a correlation value of sub objects second hash values of sub objects a filename of an object filenames of sub objects weights of data centers and mapping relations between sub objects and data centers.

Data distributing and storing apparatus may receive a request of storing an object for example target data from clients. In response to the storing request data distributing and storing apparatus may divide the object into sub objects and distributedly store the sub objects in data centers according to storage capacities of data centers.

Data distributing and storing apparatus may receive a request of retrieving an object from a client. In response to the retrieving request data distributing and storing apparatus may collect sub Objects distributedly stored in a plurality of data centers restore the original object by combining the collected sub objects and transmit the restored object to the client. Data distributing and storing apparatus may manage necessary information for distributing and storing objects in a form of metadata or a table such as a data center allocation table. For example the necessary information for distributing and storing data may include a fragmentation size weights of data centers a first hash value of an object correlation values of sub objects and second hash values of sub objects. Data distributing and storing apparatus may store such information in metadata database .

When data distributing and storing apparatus receives a storing request from a client with an object data distributing and storing apparatus may divide the received object into a plurality of sub objects as follows. Data distributing and storing apparatus may divide an object into a plurality of sub objects by a fragmentation size K . The fragmentation size K may be determined by dividing an average size of an object by the sum of weights of data centers. The fragmentation size K may be determined as the division result or may be a value close to the division result within a certain range. The average size of objects may denote an average size of objects stored in cloud storage system . The average size of objects may be determined by an operator or data distributing and storing apparatus . The determined average size may be stored and managed by data distributing and storing apparatus . An operator or data distributing and storing apparatus may periodically and regularly calculate the average size of objects and update the result.

As described above the object may be divided into a plurality of sub objects each having the fragmentation size. Accordingly an object may be uniformly and efficiently distributed to data centers and in cloud storage system .

After dividing the object into the plurality of sub objects the plurality of sub objects may be distributedly stored in data centers and as follows. For example when data distributing and storing apparatus receives a storing request with a 60 GB object data distributing and storing apparatus may divide the object into a plurality of sub Objects each having a fragmentation size of 10 GB. That is the received 60 GB size object may be divided into six 10 GB size sub objects.

After dividing data distributing and storing apparatus may assign a correlation value to each sub object. The correlation value may denote interrelationship between an object and sub objects. For example data distributing and storing apparatus may calculate a first hash value of the object and assign the first hash value to corresponding sub objects as the correlation value. That is the correlation value may be identical to the first hash value. Such correlation value and first hash value may be stored in metadata database and managed as metadata or a table. The first hash value may be transmitted with sub objects to object servers and . As described above an object and corresponding sub objects may have the same first hash value. Accordingly when the sub objects have the same first hash value a device can determine that those sub objects may be related to each other. Furthermore when sub objects and an object have the same first hash value a device can determine that the sub objects and the object are related to each other and the sub objects are divided pieces derived from the related object.

After assigning the correlation value data distributing and storing apparatus may automatically create a file name for each sub object. The file names of sub objects may be automatically created to consistently maintain interrelationship between the object and the sub objects.

For example data distributing and storing apparatus may create a file name of each sub object to include a certain part of a file name of an object. When a file name of an object is object name data distributing and storing apparatus may create file names of sub objects to include object name. That is data distributing and storing apparatus may create file names of sub objects such as object name  object name  object name  . . . object name N.

Due to such naming scheme data distributing and storing apparatus may easily or conveniently collect sub objects related to a target object to retrieve. For example when a client requests . . . retrieval of a movie file having a file name of matrix data distributing and storing apparatus may easily collect sub objects distributed to a plurality of data centers based on file names of the sub objects. That is sub objects having a part of the file name such as master may be collected from the plurality of data centers. For example sub objects having filenames of master  master  master  and master  may be collected from data centers. The present invention however is not limited thereto. The correlation value may be used to collect sub objects related to a target object instead of the file names of the sub objects.

Data distributing and storing apparatus may determine whether a sub object is related to a particular object based on a file name of a sub object. Sub objects having similar file names may be stored in a same virtual storage device. Such information on a virtual storage device may be provided to a client as a form of a directory.

After creating the file names of the sub objects data distributing and storing apparatus may generate a second hash value based on a file name of a sub object. The second hash value may be stored in metadata database and may be managed as metadata. The second hash value may be transmitted to a corresponding object server with a sub object. The second hash values of the sub objects may be used to select data centers to be stored corresponding sub objects. The second hash values of the sub objects are different from each other because the names of the sub objects are different from each other. Since the second hash value of each sub object is unique the second hash values may be processed using a certain scheme and data centers may be selected based on the processing result. For example the second hash values may be processed to obtain a reference number that indicates at least one data center included in metadata. For another example when a data center allocation table in a matrix form is prepared and stored in metadata database the second hash values may be processed to generate a matrix coordinate value for example x y . After obtaining the matrix coordinate value based on the second hash value data centers indicated by the matrix coordinate value may be selected as data centers to store the sub objects. The present invention however is not limited thereto.

In response to a retrieving request from the client data distributing and storing apparatus may collect sub objects distributedly stored in a plurality of data centers and and restore an original object by combining the collected sub objects. Upon the receipt of the retrieving request data distributing and storing apparatus may determine data centers storing related sub objects. In order to determine the data centers data distributing and storing apparatus may obtain information on data centers storing sub objects associated with a requested object. Such information may be obtained based on metadata or a data center allocation table associated with the requested object. That is data distributing and storing apparatus may compare a first hash value of the requested object and correlation values of sub objects to obtained information on the data centers of corresponding sub objects. The sub object location information may be information on data centers storing corresponding sub objects associated with the requested object.

Data distributing and storing apparatus may request the determined data centers to transmit corresponding sub objects. Data distributing and storing apparatus may receive sub objects and restore the requested object by combining the received sub objects. After restoring the requested object data distributing and storing apparatus may transmit the restored object to a client.

As described above cloud storage system may distributedly store sub objects into a plurality of data centers according to storage capacities of the data centers. Hereinafter a method for distributedly storing data in accordance with an embodiment of the present invention will be described in detail with reference to and .

Referring to a request of storing a target object may be received from a client with a target object at step S. For example clients may transmit a storing request to data distributing and storing apparatus but the present invention is not limited thereto. Clients may transmit the storing request to directly a data center and the data center may transmit the request to data distributing and storing apparatus .

The target object may be divided into a plurality of sub Objects at step S. For example data distributing and storing apparatus may divide the target object into N sub objects by a fragmentation size. As described above the fragmentation size may be determined by dividing an average size of an object by a sum of weights of data centers. The fragmentation size may be previously determined by an operator or may be dynamically determined by data distributing and storing apparatus . The present invention however is not limited thereto. Since the method for dividing the target object was already described with reference to the detailed description thereof will be omitted herein.

At step S a correlation value may be assigned to each sub object. For example a first hash value of the target object may be calculated and the first hash value may be assigned to each sub object as the correlation value. The correlation value may denote interrelationship between the requested object and sub objects. The correlation value and the first hash value may be stored in metadata database as a form of metadata or a form of a table.

At step S file names of sub objects may be created. For example data distributing and storing apparatus may create file names of sub objects to have consistency. For example the file names of sub objects may include a part of a file name of the target object. When the target object has a name of object meeting sub objects may be named with object meeting  object meeting  . . . object meeting  N. Due to such naming scheme data distributing and storing apparatus may easily or conveniently determine whether sub objects are related to each other or whether sub objects are related to the target object.

At step S a second hash value may be calculated for each sub object. For example data distributing and storing apparatus may calculate the second hash value of each sub object based on a corresponding file name. Since file names of sub objects are different from each other each sub object has a different hash value. The second hash value may be calculated using a file name of each sub object. Accordingly the second hash value of each sub object is unique and different from others.

At step S data centers to store sub objects may be decided based on the second hash value. For example data distributing and storing apparatus may use the second hash values of sub objects to decide data centers to store the sub objects. The second hash values may be processed to obtain a reference number that indicates at least one data center included in metadata. When a data center allocation table in a matrix form is prepared and stored in metadata database the second hash values may be processed to genera a matrix coordinate value for example x y . After obtaining the matrix coordinate value based on the second hash value data centers indicated by the matrix coordinate value may be selected as data centers to store the sub objects. As described above the data center allocation table may include information on a first hash value of an object a correlation value of sub objects second hash values of sub objects a filename of an object filenames of sub objects weights of data centers and mapping relations between sub objects and data centers. The present invention however is not limited thereto. Such format metadata or data center allocation table may be modified in other embodiments of the present invention.

At step S sub objects may be transmitted to and stored in the selected data centers according to weights of the selected data centers. For example data distributing and storing apparatus may allocate sub objects to the selected data centers according to weights of the data centers. As described above a weight is assigned to each data center according to a storage capacity of each data center. A higher weight may be assigned to a data center having a larger storage capacity than a data center having a lower storage capacity. Accordingly more sub objects may be stored in a data center having a higher weight than a data center having a lower weight. The weights of the data centers may be stored in metadata database in a form of metadata or a form of a data center allocation table. Data distributing and storing apparatus may refer to the metadata or the data center allocation table to allocate sub objects to the data centers. After allocating sub objects are transmitted to and stored in the allocated data centers according to the weights of the allocated data centers.

Referring to at step S a request for retrieving a target object may be received from a client. Such a retrieving request may be transmitted from a client to data distributing and storing apparatus . At step S locations of sub Objects may be determined. For example data distributing and storing apparatus may obtain information on data centers storing sub objects of the requested object using associated metadata. Data distributing and storing apparatus may refer to metadata or a data center allocation table stored in metadata database to determine the data centers storing sub objects. For example data distributing and storing apparatus may calculate a hash value of the requested object and compare the calculated hash value with correlation values of the sub objects which are included in associated metadata. The sub objects having the correlation value identical to the first hash value of the requested object are sub objects divided from the requested object. Metadata of the sub object having the correlation value identical to the hash value of the requested object may include information on a data center or a storage device of a data center which store the sub object. Such information may be an identifier of a data center. Accordingly the locations of sub objects may be determined.

At step S the determined data centers may be requested to transmit corresponding sub objects. For example data distributing and storing apparatus may request the determined data centers to transmit the corresponding sub objects.

At step S sub objects may be received from the determined data centers the received sub objects may be combined and an original object may be restored. For example data distributing and storing apparatus may receive sub objects from the data centers combine the received sub objects and store the combining result with a file name identical to the file name of the requested object.

At step S the restored object may be transmitted to the client. For example data distributing and storing apparatus may transmit the restored object to the client.

Referring to data distributing and storing apparatus may include divider correlation unit naming unit storage location decider and distributor .

Divider may uniformly divide an object into a plurality of sub objects based on a fragmentation size K . The fragmentation size K may be decided as a result of dividing an average size of an object by a sum of weights or decided as a value close to the division result.

Correlation unit may calculate a first hash value of an object and assign the first hash value to sub objects as a correlation value. The first hash value may be a hash value of the requested object. That is correlation unit may define interrelationship between an object and related sub objects by assigning the correlation value to sub objects. Based on the correlation value sub object having the same correlation value may be stored in the same virtual storage space. Such operation may be performed by a memory not shown .

Naming unit may create file names of sub objects to maintain interrelationship to an object. For example naming unit may create file names of sub objects to include a part of a file name of an object. That is file names of sub objects may include the same part of the file name of the object. When the file names of sub objects have an identical part data distributing and storing apparatus may determine that the sub objects are related to each other or that the sub objects are related to the same object. Since naming a file name of a sub object was already described with reference the detailed description thereof will be omitted herein.

Storage location decider may calculate a second hash value of each sub object based on a file name of sub object. Since the file names of sub objects are different from each other the second hash values of sub objects are different from each other. Data centers to store sub objects may be selected based on the second hash value of sub objects. For example storage location decider may process the second hash values to obtain a reference number that indicates at least one data center included in metadata. Accordingly storage location decider may select data centers to store sub objects by referring to metadata using the obtained reference number. For another example when a data center allocation table in a matrix form is prepared and stored in metadata database storage location decider may generate a matrix coordinate value for example x y by processing the second hash values. After obtaining the matrix coordinate value based on the second hash value storage location decider may select data centers indicated by the matrix coordinate value from the data center allocation table stored in metadata database . Storage location decider may determine the selected data centers as data centers to store the sub objects. As described above the data center allocation table may include information on a first hash value of an object a correlation value of sub objects second hash values of sub objects a filename of an object filenames of sub objects weights of data centers and mapping relations between sub objects and data centers. The present invention however is not limited thereto. Such format of metadata or data center allocation table may be modified in another embodiment of the present invention.

Distributor may distribute the sub objects to the selected data centers according to weights of the decided data centers. For example distributor may allocate sub objects to the selected data centers according to weights of the data centers. As described above a weight is assigned to each data center according to a storage capacity of each data center. A higher weight may be assigned to a data center having a larger storage capacity than a data center having a lower storage capacity. Accordingly more sub objects may be stored in a data center having a higher weight than a data center having a lower weight. The weights of the data centers may be stored in metadata database in a form of metadata or a form of a data center allocation table. Distributor may refer to the metadata or the data center allocation table to allocate sub objects to the data centers. After allocating distributor may transmit sub objects to and store the sub objects in the allocated data centers according to the weights of the allocated data centers.

Reference herein to one embodiment or an embodiment means that particular feature structure or characteristic described in connection with the embodiment can be included in at least one embodiment of the invention. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment nor are separate or alternative embodiments necessarily mutually exclusive of other embodiments. The same applies to the term implementation. 

As used in this application the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion.

Additionally the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims should generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Moreover the terms system component module interface model or the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

The present invention can be embodied in the form of methods and apparatuses for practicing those methods. The present invention can also be embodied in the form of program code embodied in tangible media such as magnetic recording media optical recording media solid state memory floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the invention. The present invention can also be embodied in the form of program code for example whether stored in a storage medium loaded into and or executed by a machine or transmitted over some transmission medium or carrier such as over electrical wiring or cabling through fiber optics or via electromagnetic radiation wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the invention. When implemented on a general purpose processor the program code segments combine with the processor to provide a unique device that operates analogously to specific logic circuits. The present invention can also be embodied in the form of a bitstream or other sequence of signal values electrically or optically transmitted through a medium stored magnetic field variations in a magnetic recording medium etc. generated using a method and or an apparatus of the present invention.

It should be understood that the steps of the exemplary methods set forth herein are not necessarily required to be performed in the order described and the order of the steps of such methods should be understood to be merely exemplary. Likewise additional steps may be included in such methods and certain steps may be omitted or combined in methods consistent with various embodiments of the present invention.

As used herein in reference to an element and a standard the term compatible means that the element communicates with other elements in a manner wholly or partially specified by the standard and would be recognized by other elements as sufficiently capable of communicating with the other elements in the manner specified by the standard. The compatible element does not need to operate internally in a manner specified by the standard.

No claim element herein is to be construed under the provisions of 35 U.S.C. 112 sixth paragraph unless the element is expressly recited using the phrase means for or step for. 

Although embodiments of the present invention have been described herein it should be understood that the foregoing embodiments and advantages are merely examples and are not to be construed as limiting the present invention or the scope of the claims. Numerous other modifications and embodiments can be devised by those skilled in the art that will fall within the spirit and scope of the principles of this disclosure and the present teaching can also be readily applied to other types of apparatuses. More particularly various variations and modifications are possible in the component parts and or arrangements of the subject combination arrangement within the scope of the disclosure the drawings and the appended claims. In addition to variations and modifications in the component parts and or arrangements alternative uses will also be apparent to those skilled in the art.

