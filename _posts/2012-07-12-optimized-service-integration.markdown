---

title: Optimized service integration
abstract: An optimized service mediation framework may use customized tokens for reducing cost and latencies per transaction. In particular, a token service and an integration service may function together to generate customized tokens for use by network components within a transaction pathway. Each network component may access information with the token for a predetermined time period and/or for a predetermined number of service calls for service processing tasks related to mapping, security, governing, bridging, transforming, orchestrating, generating events, managing workloads, routing, validating, managing cache, encrypting, queuing and staging, commodity services, transaction management, and quality of service (QoS)/resiliency, among other things.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09369307&OS=09369307&RS=09369307
owner: Bank of America Corporation
number: 09369307
owner_city: Charlotte
owner_country: US
publication_date: 20120712
---
This application is a continuation in part of U.S. application Ser. No. 13 181 145 filed on Jul. 12 2011 and entitled Service Mediation Framework. This application is also a continuation in part of U.S. application Ser. No. 13 181 141 filed on Jul. 12 2011 and entitled Dynamic Provisioning of Service Requests. This application is also a continuation in part of U.S. application Ser. No. 13 181 151 filed on Jul. 12 2011 and entitled Virtual Private Internet. All three of these applications are herein incorporated by reference in their entirety.

Aspects of the invention generally relate to an optimized implementation of service integration via the use of extensible tokens. Each component of a network may use these tokens to perform common service processing tasks driven by standardized service policies that may be managed in a centralized repository.

The Internet provides ubiquitous connectivity that is quick open and enables clear communication and exchange of ideas. Unfortunately the Internet is not secure enough for many confidential proprietary exchanges that occur within private networks such as those maintained by corporations schools governmental agencies and the like.

A private network e.g. a corporate network utilizes encryption to create a protected network that is secure. However a private network is not open enough and instead creates barriers to agility. In particular services within a private network are routed and accessed by point to point connections that are customized for each service. When changes need to be made to how services are provisioned and or when new services need to be offered there is no central place to advertise or manage access to the changes and or new services. There is also no consistent way to connect users to each service in a secure reliable and easy to provision way.

Today in large corporations there are tens of thousands of servers that function as hard wired and hand configured components. Under this scenario it is very difficult to connect together a system that provides adequate speed security agility and extensibility. In particular this network configuration makes organizing cross connectivity and integration across groups of people in a corporation challenging.

Moreover network processes in private networks are implemented manually and in an ad hoc way using information technology IT systems for performing steps such as defining designing procuring building developing testing promoting certifying and launching physical servers network connectivity and or security capabilities. To implement these processes conventional networks within an organization such as a corporation include tightly coupled layers of network components manual configurations and or embedded code.

Increasingly businesses need the ability to deploy IT systems in a fast robust secure and extensible way. Moreover services within and across business domains need to be connected in a governed and agile way.

Therefore there is a need for a network implementation that would allow network components within a private network e.g. corporate network and the like to have the same ease of connectivity as the Internet but also allow the ability to enforce policies and security as in a private network

In light of the foregoing background the following presents a simplified summary of the present disclosure in order to provide a basic understanding of some aspects of the invention. This summary is not an extensive overview of the invention. It is not intended to identify key or critical elements of the invention or to delineate the scope of the invention. The following summary merely presents some concepts of the invention in a simplified form as a prelude to the more detailed description provided below.

Aspects of the disclosure address one or more of the issues mentioned above by disclosing methods non transitory computer readable media and apparatuses for implementing common tasks such as security content based routing logging message format translation and protocol bridging via extensible tokens within a private network. This scheme may be implemented by using tokens that are valid for predetermined time intervals and conditions to reduce the latencies and cost per transaction within a service mediation framework.

Other aspects of the disclosure relate to an enhanced service DNS server which may resolve service uniform resource locators URLs into service addresses an enhanced service router that may be configured to interpret the services being called and to route the requests in a way that delivers the best quality of service an enhanced service repository that may serve as a secure central easy to use storage device to discover and publish new services or content within a private network and an enhanced service gateway that may aid in deploying and registering services.

Yet other aspects of the disclosure relate to an optimized service mediation framework that allows devices within a network to communicate with one another in a standardized format and handle service requests via extensible tokens.

Aspects of the disclosure may be provided in a computer readable medium having computer executable instructions to perform one or more of the process steps described herein.

As discussed above there is a need for entities to deliver services and or products better faster and cheaper in a way that allows for high availability maximizing flexibility and improving speed to market. The islands of infrastructure common in today s network systems need to be changed into networks that deliver composite services across business domain boundaries.

The disclosure is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the disclosed embodiments include but are not limited to personal computers PCs server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

With reference to the computing system environment may include an enhanced network services device wherein the processes discussed herein may be implemented. The enhanced network services device may have a processor for controlling overall operation of the enhanced network services device and its associated components including random access memory RAM read only memory ROM communications module and memory . Processor and its associated components may allow the enhanced network services device to run a series of computer readable instructions related to providing common service functions such as security routing and logging of messages by accessing information stored in an extensible token. Processor may also direct enhanced network services device to perform tasks such as orchestration message format translation and protocol bridging within a private network.

Enhanced network services device typically includes a variety of computer readable media. Computer readable media may be any available media that may be accessed by enhanced network services device and include both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable media may comprise a combination of computer storage media and communication media.

Computer storage media include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media include but is not limited to random access memory RAM read only memory ROM electronically erasable programmable read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that can be used to store the desired information and that can be accessed by enhanced network services device .

Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. Modulated data signal includes a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

Computing system environment may also include optical scanners not shown . Exemplary usages include scanning and converting paper documents e.g. correspondence data and the like to digital files.

Although not shown RAM may include one or more applications representing the application data stored in RAM while the enhanced network services device is on and corresponding software applications e.g. software tasks are running on the enhanced network services device .

Communications module may include a microphone keypad touch screen and or stylus through which a user of enhanced network services device may provide input and may also include one or more of a speaker for providing audio output and a video display device for providing textual audiovisual and or graphical output.

Software may be stored within memory and or storage to provide instructions to processor for enabling enhanced network services device to perform various functions. For example memory may store software used by the enhanced network services device such as an operating system application programs and an associated database . Also some or all of the computer executable instructions for enhanced network services device may be embodied in hardware or firmware.

Enhanced network services device may operate in a networked environment supporting connections to one or more remote computing devices such as computing devices and . The computing devices and may be personal computing devices or servers that include many or all of the elements described above relative to the enhanced network services device . Computing device may be a mobile device communicating over wireless carrier channel .

The network connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. When used in a LAN networking environment enhanced network services device may be connected to the LAN through a network interface or adapter in the communications module . When used in a WAN networking environment the enhanced network services device may include a modem in the communications module or other means for establishing communications over the WAN such as the Internet or other type of computer network. It will be appreciated that the network connections shown are illustrative and other means of establishing a communications link between the computing devices may be used. Various well known protocols such as TCP IP Ethernet FTP HTTP and the like may be used and the system can be operated in a client server configuration to permit a user to retrieve web pages from a web based server. Any of various conventional web browsers can be used to display and manipulate data on web pages.

Additionally one or more application programs used by the enhanced network services device according to an illustrative embodiment may include computer executable instructions for invoking functionality related to communication including for example email short message service SMS and voice input and speech recognition applications e.g. for transmitting service request information and or receiving service responses and the like . In addition the application programs may include computer executable instructions for invoking user functionality related to accessing a centralized repository for performing various service tasks like routing logging and protocol bridging.

Embodiments of the disclosure may include forms of computer readable media. Computer readable media include any available media that can be accessed by an enhanced network services device . Computer readable media may comprise storage media and communication media and in some examples may be non transitory. Storage media include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions object code data structures program modules or other data. Communication media include any information delivery media and typically embody data in a modulated data signal such as a carrier wave or other transport mechanism.

Although not required various aspects described herein may be embodied as a method a data processing system or as a computer readable medium storing computer executable instructions. For example a computer readable medium storing instructions to cause a processor to perform steps of a method in accordance with aspects of the disclosed embodiments is contemplated. For example aspects of the method steps disclosed herein may be executed on a processor on enhanced network services device . Such a processor may execute computer executable instructions stored on a computer readable medium.

Referring to an illustrative system for implementing example embodiments according to the present disclosure is shown. As illustrated system may include one or more workstation computers . Workstations may be local or remote and may be connected by one of communications links to computer network that is linked via communications links to enhanced network services device . Workstations may include many of the same hardware software components as enhanced network services device . In some embodiments workstations may represent data stores for storing service policy data and metadata used by enhanced network services device . In other embodiments workstations may represent various types of enhanced network services devices within network including a device offering an integration service a device offering a token service an enhanced service DNS server enhanced service router enhanced service repository and or an enhanced service gateway. In system enhanced network services device may be any suitable server processor computer or data processing device or combination of the same. Enhanced network services device may be used to process the instructions received from one or more users or one or more other devices e.g. workstations .

Computer network may be any suitable computer network including the Internet an intranet a wide area network WAN a local area network LAN a wireless network a digital subscriber line DSL network a frame relay network an asynchronous transfer mode ATM network a virtual private network VPN or any combination of any of the same. Communications links and may be any communications links suitable for communicating between workstations and enhanced network services device such as network links dial up links wireless links hard wired links and the like.

The steps that follow in the Figures may be implemented by one or more of the components in and or other components including other computing devices.

In accordance with various aspects of the disclosure methods computer readable media and apparatuses are disclosed that allow an entity such as a company government agency university and the like to implement advanced methodologies for the creation of a framework that may allow network components to receive service policy information in a standardized format from a centralized repository. In general within the framework the content of various messages and or tokens associated with service requests transported within the network may drive the integration of the network components. The data within a message and or token may be used to describe how a message may need to be processed by any one of the network components. The framework may define common functions such that any vendor or technology implementation within the network will be the same. The framework may facilitate standard network tasks such as routing authentication authorization auditing and transformations. These tasks may be executed dynamically based on the content of the message token.

As used herein a service request may relate to a variety of services provided by the network maintained by an organization. For instance if the organization is a bank the network maintained by the bank may provide services such as opening a bank account registering for a credit card and or applying for a loan.

Each network component within the service framework may possess enhanced features that allow the component to access a datastore of detailed service policy metadata and data and implement service functions based on the service policy metadata data. For instance when the enhanced network services device is an enhanced service router and or an enhanced service DNS server the device may access routing policy information to determine a service address of a service provider and or service routing policy information to transmit the service request to a preferred service provider of the requested service. In addition when the enhanced network services device is an enhanced service gateway the device may access and implement other types of service policy information such as those related to security e.g. authentication and or authorization protocol bridging and format translation. Moreover when the enhanced network services device is a service repository the device may store and or export service policy data metadata in a common format e.g. based on a standard and may include information on all of the common service policies commonly used within a private network. When the enhanced network services device is a device offering an integration service device may analyze information associated with a service request to populate fields of a customized token for use by other network components. In addition when the enhanced network services device is a device offering a token service device may generate and digitally sign tokens for use by network components.

In the network a client device e.g. user terminal network server and the like within the bank may request a service in a variety of ways including by a user inputting a service uniform resource locator URL into a browser running on device and or through a message transmitted from the client device . In some embodiments client device may actually represent multiple client devices . When a user of client device initiates a web service by inputting a service URL into a browser the service request may be transmitted to an enhanced DNS server and the enhanced service DNS server may resolve the service URL e.g. the URL of a service provider into a service address of a service provider for the service URL. For example a service URL for accessing sports content may be sports meaning that a user may access a preferred service provider for sports content within a private network by typing in the word sports into a browser. Similarly the service URL for accessing the latest news content may be news and the service URL for accessing the latest weather information may be weather. One of ordinary skill in the art would recognize that alternative naming conventions may be used to designate a service URL.

In general a service request may represent a higher order construct that specifies a desired resource. For instance if a user initiates a service request for sports the enhanced service DNS server may access policy definition metadata stored on an enhanced service repository that specifies a particular sports content provider. If the same user initiates this service request at a later date the policy definition metadata for this service request may have changed during the interim if so the enhanced service DNS server may access policy definition metadata that specifies that the service request for sports should be routed to a different sports content provider.

Other types of service requests may not involve a user web service interaction these service requests may be communicated directly between different network components. These server server service interactions may involve various network resources e.g. enhanced service gateways enhanced service router and the like and may request that a service provider e.g. one of the servers within the network perform various network service tasks e.g. authentication logging format translation and the like for a service requestor server. Similar to the user web service interaction described in the previous paragraph the service requestor e.g. enhanced service router enhanced service gateways and the like may access relevant service policy information stored in enhanced service repository to perform the requested service. Also as before the service requestor may access and implement a service task that is consistent with the latest version of the service policy information stored in enhanced service repository .

In general when the service request is a web based browser interaction the request may first be routed to an enhanced service DNS server within the bank network which may access routing policy metadata and data for the service request from the enhanced service repository . In some aspects the enhanced service repository may export a file including the routing policy information in Extensible Markup Language XML format to the enhanced service DNS server . Once the enhanced service DNS server obtains the routing information e.g. a destination service address server may route the service request to an appropriate enhanced service gateway that may handle the service request.

For server server service interactions when a client device requests a service the service request may not be first routed to the enhanced service DNS server . Instead these service requests may be routed directly to an enhanced service router and or enhanced service gateways discussed further below . For instance the service router may aid in routing a service request to a predetermined queue for any message oriented middleware.

In the process of routing the service request to one or more enhanced service gateways the service request may also be routed to enhanced service router which may also aid in routing the service request to an appropriate destination e.g. across firewalls and the like . In conventional systems to access a service a user must select a conventional URL on a web browser to call a web page. When the URL is selected the user is connected to a single backend system e.g. the service provider server based on the URL. The enhanced service router on the other hand may allow a client device to request a service using content based routing. With this approach instead of always using the same route to connect to a service provider or instead of using the same service provider to handle a given type of service request the enhanced service router may access routing policy metadata and data in enhanced service repository to dynamically determine the best possible route and or the best possible service provider for a given service request at the time that the service request is made. For instance one service provider may be better than another service provider because of lower cost associated with providing the service.

Each of the enhanced service gateways and the enhanced service router may access metadata and data stored in enhanced service repository to determine relevant policies that may need to be enforced on the service request. In some aspects each of the components within network may be appliances configured to receive transmit data from to any other component in XML format among other formats. In addition each appliance may be configured to employ Extensible Stylesheet Language Transformations XSLT to allow one appliance to communicate with another appliance in a standard format.

Once the service request is routed to the appropriate destination e.g. one of the enhanced service gateways one of the enhanced service gateways may transmit an appropriate response back to client device . Once again in order to route the response to the service request back to client device one of the enhanced service gateways may access routing policy information from service repository .

In some aspects the information stored within the enhanced service repository may be updated periodically when the need arises. For instance when a new service comes online within one of the departments within the bank a set of policies governing that service may be added to enhanced service repository . Similarly information within the enhanced service repository may be updated when a service needs to be routed differently e.g. because an older service URL has now become inactivated and the like . In this way the implementation of service policies may be automated and data driven rather than driven through manual intervention.

The enhanced service gateways may be configured to control a variety of service policies. Just as the enhanced service DNS server and the enhanced service router may access and implement routing policies by accessing policy metadata and data from the enhanced service repository the enhanced service gateways may access and implement other service policies stored in enhanced service repository as outlined below.

The enhanced service repository may store data related to operational e.g. run time policies such as those relating to mapping security governing bridging transforming orchestrating generating events managing workloads routing validating managing cache encrypting queuing and staging commodity services transaction management and quality of service QoS resiliency among other things for use access by any network component. Policies related to mapping may involve mapping abstract service names to concrete service names based on information within a service request e.g. mapping an easy to understand term to a complex information technology IT function operation and or endpoint and the like . Policies related to security may include details on security functions such as authentication e.g. establishing identity through a credential authorization e.g. determining if access is authorized for a privileged resource and auditing of services and or service requests.

Meanwhile policies related to governing may describe various methodologies for policy enforcement e.g. at runtime and the like . For instance policies may be enforced at various levels such as at the contract client operation level option level quality of service QoS or service level management SLM level audit level and or the user level. Consider a scenario where bank is trying to open a new credit card account for a user. A policy enforced by contract client operation may dictate that only those authorized persons in the credit card department of the bank may request to open a bank account. In other words authorized personnel in the credit card department may possess a contract that allows them to request the client operation of opening a credit card account. Enforcing a policy at an option level may allow for control of service requests at a more granular level. For instance a policy may specify options of how to open a variable interest rate credit card account or a fixed interest rate credit card account. In addition a policy enforced at the QoS and or SLM level relates to controlling concurrency and or timeouts by client provider operation contract or option. For instance a policy enforced at the QoS and or SLM level may specify how many authorized personnel in the credit card department in one branch location may request to open a credit card account at the same time. Another policy enforced at the QoS and or SLM level may specify the frequency and or duration with which a given bank employee may request to open a credit card account for a customer.

In addition a policy enforced at the audit level may relate to capturing data needed for triage or for rejected requests. For instance a policy enforced at the audit level may specify how to notify e.g. immediately via a phone call and the like a customer when a wire transfer over a predetermined threshold value fails. Finally a policy enforced at the user level may specify how different users should be treated differently. For example a bank customer who is a high net worth individual may obtain a higher level of service e.g. more prompt service and the like than an upper middle class individual and user policies may specify these differences in service level for the two types of individuals.

Policies related to bridging may govern conversion of protocols and or credentials so that they are compatible with one another e.g. to allow one application to communicate with another . For instance bridging policies may allow for compatibility between various types of credentials such as certificates X.509 and the like and tokens e.g. tokens based on the Security Assertion Markup Language SAML OAuth and the like . In addition bridging policies may allow for converting data between various types of protocols such as Simple Mail Transfer Protocol SMTP Hypertext Transfer Protocol HTTP File Transfer Protocol FTP Short Message Service SMS and the like.

Policies related to transforming may govern translation of data from one format e.g. Simple Object Access Protocol SOAP fixed positional format that delimits fields variable delimited format such as those that use commas to separate fields industry standard formats custom formats and the like to another. In yet other embodiments policies in this category may also relate to enriching e.g. adding supplementing data messages and or filtering e.g. removing a few fields characters data messages. Policies related to filtering may define techniques e.g. via style sheet filters and the like to strip away information that is not needed in a service transaction. For instance if a network is providing a service related to obtaining a credit card a filtering policy may specify that confidential and or sensitive information such as the social security number of the service requestor be removed from the service request before transmitting the service request to a company that prints credit cards.

Policies related to orchestration e.g. business process management may govern how multiple messages are split merged and how complicated service requests may be divided into sub requests. In some embodiments business process management policies may describe orchestration of discrete services into a composite service. These policies may also govern process choreography e.g. creating a workflow or sequence of steps and complex event processing e.g. analyzing a pattern trend of events and making conclusions based on the pattern trend to take an action .

Policies related to generating events may govern handling of performance logging error logging alerts fraud events and business events. Performance logging may relate to measuring logging and displaying e.g. asynchronously so that these steps do not interfere with a transaction message the performance of any transaction or message so that users may track the performance. Meanwhile error logging may relate to recording error messages for triage. Policies related to alerts may govern how when and under what protocol e.g. Simple Network Management Protocol SNMP and the like alerts are generated for a variety of different events including usage e.g. for detailing how often a certain service is being used and availability e.g. for detailing the availability of a given service provider . Policies related to fraud events may detail how fraud events e.g. unauthorized accessing of an account and the like are detected and logged. Finally policies related to business events may detail how sales opportunities within an entity such as a company are generated logged and analyzed to determine if there are future sales opportunities for the entity. In general policies related to logging may include information on when to log data e.g. when a service request is made to measure performance metrics of the network such as the amount of time that the network takes to fulfill the service request when access to a privileged network resource is granted or denied when fraud is committed on the network and the like .

Policies related to workload management may govern how workloads are distributed across multiple devices within a network e.g. through load balancing . In other words policies related to workload management may include information on how many and which network components may participate in responding to a service request connection distribution local load balancing virtual machine VM level workload management and the like . These policies may include those related to load balancing of incoming service requests e.g. via self balancing of workloads to distribute workloads to peer devices or load balancing of outgoing service requests e.g. based on a list of load balancer groups or endpoints based on instances of Java virtual machines JVMs and the like .

Policies related to routing may govern various types of routing mechanisms in a service oriented architecture including fixed routing content driven routing and context driven e.g. cost availability and the like routing. Policies related to fixed routing may allow for a one to one mapping for each service request e.g. a single destination for each request . Meanwhile policies related to content driven routing may allow for profiling of content within each request to determine a destination. Finally context based routing may allow for routing requests based on dynamically evaluating criteria such as cost availability and performance e.g. response time of various service providers.

In general policies related to routing may define how to decide where to route a given service request or a response to a service request e.g. DNS QUEUE resolution site selection content or context based routing and the like . The service mediation framework may employ a sophisticated and dynamic means of routing a message which is ultimately decoupled from the mediation logic. For a given service there may be distinct data types which may be marshaled from consumer to one or more providers. For any given service there may be a single canonical data type on which the service may route the message. Across multiple services there may be multiple canonicals which may be employed to facilitate normalization of data from service consumer to service provider. To maximize reuse common routing implementations or strategies may need to be defined which work across all services with varying canonical data types. Furthermore different routing strategies may utilize varied logical parameters depending on the business requirement.

To facilitate dynamic content based routing across this diverse system each routing strategy may contain a capability to support multiple data formats. In this implementation the service may contain a reference to a strategy. After mediating to the service canonical the service mediation framework may pass the underlying canonical message to the strategy. Based on the type of message the routing strategy may contain metadata for extracting logical routing fields from the specific payload content based on the data type. Once the varied routing formats are normalized through the logical routing field extraction process the routing strategy may execute the business logic to determine the service provider to which the message needs to be routed.

For instance an example of context based routing or decisioning triggered by a run time context includes cost performance based routing based on comparative costs per transaction and availability to lower cost cloud computing versus higher cost and more resilient internal services on an entity controlled network . In this example a service request may be routed in network based on the lowest cost provider that meets the minimum availability and performance service level agreements SLAs for each request type. Another example of context based routing or decisioning triggered by a run time context includes value based service level management where the business value transaction amount or business impact of failure for each transaction type or service request type may be coded as metadata in enhanced service repository and is used to determine which transactions or requests may be guaranteed processing and which may be throttled or redirected when resources become constrained or demand exceeds rated capacity. Yet another example of context based routing or decisioning triggered by a run time context includes resource based timing where the amount of resources e.g. threads memory connections timeout values and the like may be allocated based on granular measurements of available resources by provider and service type. A final example of context based routing or decisioning triggered by a run time context may include the use of alternate path triggers. In this example when virtual machine workload management is configured a service gateway may determine that only some traffic may be served using dynamic content from the active service provider virtual machine instances . Service gateways may then route excess traffic to alternate internal service providers or adjust cache parameters in the message response header to trigger service of some requests via cached content that is still relevant but aged to a greater degree until demand subsides or additional dynamic service providers become available or more responsive.

In general the ability of an enhanced service repository to define significant triggers driven by environment or run time context and to render resultant actions in a common way e.g. XML which may be acted upon by a diverse set of vendor tools throughout the network or even across multiple divisional or corporate boundaries may represent a breakthrough extension of federated connectivity and service management.

Policies related to validating may include those that validate files such as those written in Extensible Markup Language XML validate a schema of a service request e.g. reject malformed request formats that do not conform to a prescribed format and validate against a broad range of other threats e.g. Structured Query Language SQL injection distributed denial of service DDoS cross site scripting recursion attacks and the like .

Policies related to managing cache may govern various types of caching methodologies e.g. based on representational state transfer REST based on Hypertext Markup Language HTML objects based on web services and the like . Polices that govern REST based caches e.g. those that allow standard integration for name value pairs of content may enable stateless integration without losing the state across a cluster policies that govern caching based on HTML objects may enable standard HTML and image caching and policies that govern web service level caching may enable service and database caching to reduce backend service calls and or database reads.

Policies related to encrypting may govern various types of encryption e.g. coding methodologies such as encryption at the transport layer e.g. creation of a tunnel and encryption of data that is transported through the tunnel encryption at the field level e.g. encryption of data elements for Payment Card Industry PCI compliance and encryption via a hardware security module HSM e.g. to store private keys used for encryption to deliver Federal Information Processing Service FIPS level and or .

Policies related to queuing and staging may govern various communication methodologies including publication subscription e.g. for creating a one to many publication path involving creation and updating of topics so that those that subscribe to a given topic receive the updates request response e.g. transmitting a message and receiving a response datagrams e.g. one way communication asynchronous communication e.g. receiving a response anytime e.g. without waiting in the future after a request is sent synchronous communication e.g. waiting for a response to be received immediately after a request is sent and messaging e.g. delivering a string of messages stored in a queue when appropriate .

Policies related to commodity services may govern log services and token services. Policies related to log services may enable recording of performance data audit data business events fraud data and the like onto a disk. Policies related to a token service may enable issuance of tokens in a predetermined format with predetermined fields to protect the tokens from tampering and to realize integration as a service.

Policies related to transaction management may specify details about transactions such as whether a unit of work UOW can be defined e.g. defining a set of required steps for a transaction to occur and how each step of the transaction should be rolled back e.g. undone if any one of the steps in the transaction fail to occur.

Policies related to QoS resiliency may govern service level agreements SLAs e.g. determining if a service provider is meeting a predetermined service level such as a time expectation for performing a service taking actions based on whether a service provider is meeting or not meeting the predetermined service level timeouts e.g. waiting for a predetermined amount of time for an event to occur and releasing resources required for the wait even if the event has not occurred after the predetermined amount of time has elapsed and sliding timers e.g. a method to vary the wait time for an event to occur based on various factors .

In a typical multinational firm or federated enterprise that spans many large divisions there may be multiple distributed information repositories e.g. enhanced service repositories . Each may use a different vendor solution for storing and managing services or integration flows or connections. By including an integrated metadata repository e.g. enhanced service repository network may have the flexibility to store and manage service or connectivity related metadata such as service or operation names Web Services Description Language WSDL or interface details authentication credentials authorization credentials authorization contracts or entitlements either at the user or system level triggers for actions such as logging service level management and throttling and multi factor content based routing end point and load balancer details transformation and orchestration logic or rules service bus or segment mapping or other decisioning criteria across this flexible array of departmental or divisional repositories while still being able to federate into a common repository that can normalize the information via a common application programming interface API or file interface specification and translate the enterprise view of the design time data into run time flows routes or policies that can be enforced or executed in real time as part of the cross vendor service mediation framework potentially interfacing to off premise resources or entities via a virtual private internet connectivity. 

As an example assume that a multi division bank stores web service information in each division using division specific repositories e.g. enhanced service repositories . In this example division A may use a first commercially available repository division B may use a second commercially available repository division C may use a home grown repository and division D may use a third commercially available repository. All of this service metadata may be integrated imported using a common repository with a common interface or file format e.g. a common API . This federated data may drive enterprise level reports showing holistic cross divisional service interactions. The enterprise metadata may be used to create XML formatted control files that enable any node of the network comprising a vast array of diverse vendor tools configured to act as service mediation framework components such as service routers or service gateways . This implementation may transform what used to be thousands of independent and uncoordinated vendor point solutions into a grid of interconnected and highly integrated common components that respond to centrally managed instructions or policies.

A common set of policies can be described via various tools and ultimately stored in open formats such as a common XML format to describe run time policy statements. The enterprise repository e.g. enhanced service repository may manage this combination of enterprise service metadata and enterprise policies to control and manage connectivity security failover route away logging transformation and translation orchestration and context based decisioning. The run time context real time performance cost availability quality of service QoS run time characteristics such as resource usage and availability may be measured and fed back or made available to any node of the service mediation framework or to the enterprise repository itself to enable situation specific actions context aware decisions .

Examples of the types of metadata stored in enhanced service repository may include the name of a given service request the network route that needs to be taken to reach a service provider for each service request logging information related to the service request the expected amount of time for getting a response to the service request and the like. In general metadata may include any piece of information that defines the interaction between a service requestor and a service provider determines the route that a service request must take to get to a service provider and or authenticates or authorizes a service request. The enhanced service repository may also include a list of common functions for a given service and or the policies that guide the use of these functions. The enhanced service repository may export a file in a standardized format e.g. XML that any element e.g. server may process. The exported file may include information that allows the servers within a network to communicate about services via common protocols.

The specific service policy information stored in enhanced service repository may be driven by a variety of factors including which client device is requesting the service the type of service that the client device is requesting the time of day the content of the service request message and or an overriding policy of the bank among other things.

In certain aspects the enhanced service repository may define enough policies and metadata to cover all or a vast majority of all of the interaction points within an entity such as an organization. In some embodiments the enhanced service repository may export the policy information for service requests in a standard way. The data stored in and transmitted by the enhanced service repository and or the enhanced service DNS server may be in a variety of formats including XML.

In this way if an organization e.g. a financial institution and the like adds a new feature that depends on a service to its corporate network the wait time for integrating the new feature to the corporate network may be reduced drastically. Also if changes are made to existing services these changes may also be implemented in network much more quickly. Thus potential delays to market share that depend on this new feature may also likewise be reduced.

Then in step the appropriate enhanced service gateway may then access authentication authorization policy metadata within enhanced service repository to authenticate and or authorize the requesting server for access to the bank account. The policies accessed by the enhanced service gateway may include verifying the identity credential e.g. a security token a cryptographic key and the like of the requesting server entitlement policies for information related to the bank account and the like.

The process may then move to step where the enhanced service gateway may analyze the authentication authorization service policies retrieved from the enhanced service repository to determine if the service requestor should be given access to information in the bank account.

Assume that in this case one of the policies accessed includes a verification of the encryption algorithm used by the requesting server in the service request for access to the bank account. Assume also that an approved list of encryption algorithms for service requests for accessing bank accounts as stored in enhanced service repository has been recently modified to exclude the type of encryption algorithm used by the requesting server in this case. In this case the process may then move to step where the enhanced service gateway may deny the requesting server access to the bank account based on the use of an unapproved encryption algorithm e.g. a security risk . The requesting server may then modify the encryption algorithm used to make the service request and resubmit the request in step .

Finally if the requesting server is authorized authenticated to receive access to information in the bank account the enhanced service gateway may grant the requesting server access to the bank account information in step .

In accordance with at least one aspect of the disclosure an incoming service request may include content which will uniquely identify how to process the transaction. To identify the service mediation implementation a token may be used to lookup a specific implementation in a shared metadata repository via a specific component the service repository both of which may be variations of service repository . Information in the service repository may reference the location of a distinct component in the shared metadata repository called the integration specification. The contents of the integration specification may identify all facets of integration between the service consumer and provider and the service mediation framework operates on this set of data for the execution of the mediation.

An example of the dynamic mediation logic captured in the integration specification of the service may be the metadata related to the publication of audit or logging data. Via the integration specification the service mediation framework may use bits of data specifically defined for audit to specify an alternative location for auditing as well as the specific data to be sent to the auditing system.

In accordance with aspects of the disclosure extensible tokens e.g. a set of computer readable and or computer executable instructions may be used to provide an integration service to determine and implement relevant policies. Each token may serve as a virtual service gateway and may be valid for a predetermined interval and or for a predetermined number of service calls thereby reducing the latencies associated with repeated service calls to a given resource over a period of time. After the predetermined interval has elapsed and or after the predetermined number of service calls has been reached a new token may need to be requested by one of the network components. In this way instead of having a network device e.g. a service gateway as the policy enforcement point for each transaction policies could be enforced once per interval thereby reducing risk overhead and associated cost. In general tokens establish the system service or end to end identity across a context. Tokens may be extended to add more information to each context delivering more and more of the core integration functions that may otherwise be only possible via an in line e.g. in the communication path from a service requestor to service provider service gateway.

The process of creating a customized token for a given service request may involve calculation of complex parameters e.g. parameters related to where to route what transformations to make and the like based on knowledge of the service requestor service provider and policies e.g. all of the policies associated with the integration functions discussed earlier associated with the service request.

Once device receives a token responsive to a given service request device may cache the token in a local memory for future use. Device may also use the information within the token to route the service request to the correct service provider . In doing so device may transmit the token to the next intermediate device not shown in in the communication path to service provider . The intermediate device may also cache a copy of the received token prior to transmitting the token to any other intermediate devices which may similarly cache the received token in the communication path. In this way each network device in the communication path to a service provider may maintain a local copy of the token and may access the token when future service requests require access of the information in the token. Thus as long as a relevant token stored within a network device remains valid the network device may use the information stored in the token to implement policies such as routing and protocol bridging to communicate with a service provider .

In accordance with aspects of the disclosure a customized token may specify the conditions under which it is valid. For instance a token may be valid for 100 service requests to the same service provider alternatively or additionally a token may be valid for a predetermined length of time e.g. 30 days . After the token is no longer valid device may request another token from integration service .

Similar to the implementation shown in the tokens generated through the implementation shown in may specify the conditions e.g. length of time number of service calls and the like under which the token is valid.

One of ordinary skill in the art would understand that devices shown in may include one or more components of enhanced network services device .

Through implementation of tokens and a token service aspects of the disclosure allow for dramatic reduction of overhead from integration and the generation of new modes of operation such as transaction tracing via a trace token and or cost performance or availability based routing. For instance a token may store information related to the path that the token traversed to complete each service request e.g. a transaction the performance e.g. time reliability and the like of each network component in completing each step of the service request and the function accomplished at each network component during each step of the service request. Once a token has stored all of this information the token service may cause display of the information onto a dashboard for easy analysis by users. In this way a token may serve as a trace token to allow users to determine the performance cost and availability of network components in the service pathway during the lifecycle of the service request. Using the information gathered by the token and displayed on the dashboard future service requests may be routed differently to increase performance reduce cost and the like.

A service token may include a requestor application ID field provider segment field abstract service name field abstract operation name field rules table field end point field concrete service name field concrete operation name field time to live field refresh time field usage limit field and timeout field . The requestor application ID field may represent an identification associated with a service requestor application e.g. application located at a predetermined branch of a company at a predetermined location .

The requestor application ID field of the service token may be the same as the original requestor ID field of the end to end token for the first hop of a transaction pathway. For instance if an application stored on a computing device associated with a bank teller transmits a first service request to open an account to a first network component e.g. a customer database and the first network component in turn transmits a second service request to a second network component e.g. credit card account database each network component or associated application will have an associated requestor ID. For the first hop of the transaction pathway in this example the original requestor ID field and the requestor application ID field will be the same e.g. the ID associated with the application stored on the computing device associated with the bank teller . For the second hop of the transaction pathway in this example the original requestor ID field and the requestor application ID field will be different in particular the original requestor ID field will remain the ID associated with the application stored on the computing device associated with the bank teller whereas the requestor application ID field will be the ID associated with a relevant application in the customer database that calls an application within the credit card account database. In this way the values of fields within end to end token may persist over the entire transaction pathway whereas the values of fields of service token may change from hop to hop of the transaction pathway.

The provider segment field may represent a pool of gateways or an endpoint for a given pool of gateways through which a service request must travel to arrive at a given service provider e.g. a first pool of gateways associated with a given branch location in a first state versus a second pool of gateways associated with a given branch location in a second state . The abstract service name field may represent an easy to understand name e.g. open an account associated with a service being requested by a service requestor. The abstract operation name field may represent an easy to understand sub category e.g. open a fixed interest rate account open a variable interest rate account and the like under the abstract service name field .

The rules table field may represent a list of information e.g. an XML table provided by a service requestor to an integration service that includes metadata to distinguish between various service names operation names that may be used by integration service to map between a concrete and abstract service name and or between a concrete and abstract operation name.

The end point field may represent the address e.g. uniform resource locator URL and or queue of the end point for providing a concrete service and or operation. The concrete service name field may represent the specific service name e.g. open credit card account associated with a service being requested by a service provider. The concrete operation name field may represent the specific operation name e.g. open a credit card account with a fixed interest rate open a credit card account with a variable interest rate and the like associated with a service being requested by a service provider.

The time to live field may represent the amount of time e.g. in seconds for which a given service request is valid. The refresh time field may represent the amount of time e.g. in seconds after which the service token may need to be refreshed with a new token. The usage limit field may represent the maximum number of invocations of a service specified by service token after which the service token may need to be refreshed with a new token. The timeout field may represent the amount of time e.g. in milliseconds that a service requestor should wait for a response to a given service request.

A trace token may include a requestor application ID field concrete service name field concrete operation name field and a list of applications and timestamps along the transaction path field . The requestor application ID field of trace token may include the same information as the requestor application ID field of service token . The concrete service name field of trace token may include the same information as the concrete service name field of service token . The concrete operation name field of trace token may include the same information as the concrete operation name field of service token . Finally the list of applications and timestamps along the transaction path field may represent an up to date list of service requestor applications and timestamps associated with these applications for each service requestor up to a given hop in the transaction path. Using this field as a service request is transmitted to each successive hop the list of service requestor applications and timestamps along the transaction path field is extended with the service requestor application and timestamp information for that hop.

Each of the tokens mentioned above may be digitally signed to prevent tampering. Also each token may be cached at different points along the transaction pathway. For instance the end to end token may be cached at the first hop e.g. a service gateway in the transaction pathway. Meanwhile a different service token may be cached at each hop of the transaction pathway e.g. because the requestor application ID changes from one hop to the next . A different trace token may be cached at each service provider in a transaction pathway e.g. because the list of service requestor applications and timestamps along the transaction path field is extended at each successive hop of the transaction path .

In addition to the three tokens mentioned above aspects of the disclosure also allow for the use of system certificates which may include various fields related to authentication. For instance a system certificate may include fields related to a system ID e.g. an identifier associated with a hardware component that represents a given service requestor and or a test production indicator e.g. an indicator that prevents a test system from calling a production provider and vice versa . System certificates may be cached at a service requestor and may prevent man in the middle attacks e.g. mutual secure socket layer SSL or authentication .

One of ordinary skill in the art would understand that tokens and and system certificates may include additional or alternative fields that allow the tokens certificates to implement each function of an integration service .

It should be noted that the term policy as used throughout this disclosure may be a generalization that describes the definition of any run time decision or action driven by an implicit decision automatically without any pre configuration on the part of the user or an explicit decision driven by the presence of content in the request or via configuration of metadata in a repository or system of record where the threshold or data to drive that action is maintained .

Embodiments of the disclosure allow for the creation of a run time agent in any language or programming construct running on any platform that can understand and execute a given policy or conditional run time action driven by either content in the message or response by context based on local measurement of conditions or via configuration and relationships between associated data elements or objects. This agent may then act on a service token or similar policy token which contains policy information such as routing transformation or SLA management data. Any intermediate agent may identify the context of the message and inject a suitable service or policy token for action either within that node or on a node downstream from that node that will later interact with the message.

In addition any number of design time systems or tools may be created that allow both the definition of policy or run time actions groups or bundles and their association with service objects such as the service requestor service provider the service the operation or some combination of the four often called the service contract .

Policies may also be expressed in any number of industry standard or proprietary policy dialects. If expressed in these formats the policy may be more readily reused and attached across diverse systems but this complicates the application of logic to limit the possible combinations and attachments of policies to service objects. Keeping the policies as centralized configurations defining relationships within a single user interface may afford the ability to manage all interactions and combinations assuring that only valid certified pretested or desired combinations or attachments are permitted.

Aspects of the invention have been described in terms of illustrative embodiments thereof. Numerous other embodiments modifications and variations within the scope and spirit of the appended claims will occur to persons of ordinary skill in the art from a review of this disclosure. For example one of ordinary skill in the art will appreciate that the steps illustrated in the illustrative figures may be performed in other than the recited order and that one or more steps illustrated may be optional in accordance with aspects of the invention.

