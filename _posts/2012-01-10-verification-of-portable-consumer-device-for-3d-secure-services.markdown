---

title: Verification of portable consumer device for 3-D secure services
abstract: Apparatuses, methods, and systems pertaining to the verification of portable consumer devices for 3-D Secure Systems are disclosed. In one implementation, a verification token is coupled to a computer by a USB connection so as to use the computer's networking facilities. The verification token reads identification information from a user's portable consumer device (e.g., credit card) and sends the information to a validation entry over a communications network using the computer's networking facilities. The validation entity applies one or more validation tests to the information that it receives from the verification token. If a selected number of tests are passed, the validation entity sends a 3-D Secure datum to the verification token. The verification token may enter the 3-D Secure datum into a hidden field of a Purchase Authentication Page appearing on the computer's display.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08313022&OS=08313022&RS=08313022
owner: 
number: 08313022
owner_city: 
owner_country: 
publication_date: 20120110
---
This application is a continuation of U.S. Ser. No. 13 107 715 filed on May 13 2011 entitled Verification of Portable Consumer Devices for 3 D Secure Services which application is a continuation of PCT US2010 055500 filed Nov. 4 2010 entitled Verification of Portable Consumer Devices for 3 D Secure Services which claims priority to U.S. Provisional Patent Application No. 61 258 194 entitled Apparatuses Methods and Systems Pertaining to the Verification of Portable Consumer Devices for 3 D Secure Services filed Nov. 4 2009 the contents of which are hereby incorporated in their entirety by reference for all purposes. U.S. Ser. No. 13 107 715 is also a continuation in part of prior application Ser. No. 12 780 657 entitled Verification of Portable Consumer Devices filed May 14 2010 which is a continuation in part of prior application Ser. No. 12 712 148 entitled Verification of Portable Consumer Devices filed Feb. 24 2010 now U.S. Pat. No. 7 891 560 which claims priority to U.S. Provisional Patent Application No. 61 178 636 entitled Dynamic Data Authentication filed May 15 2009 the contents of these applications being hereby incorporated in their entirety by reference for all purposes.

As methods and devices for engaging in financial transactions have increased old problems such as fraud and counterfeiting persist.

One of the primary sources of fraud which is prevalent in the credit card industry is skimming. Skimming refers to the electronic copying of a card s magnetic stripe data to create counterfeit cards.

Skimming is predominantly a phenomenon afflicting static magnetic stripe based transactions. This is because the magnetic stripe which is placed on the back of a transaction card and stores a variety of data on three separate tracks is a passive medium. In other words the digital content of the magnetic stripe can be perfectly copied without any difference between the copy and the original.

One of the primary means by which skimming can be prevented is for the consumer to closely monitor the whereabouts of his transaction card. This may allow the consumer to prevent the card from being swiped through inappropriate devices. However as contactless cards evolve the classic skimming problem comes along with it when using static data. In fact in a wireless environment the opportunity to skim magnetic stripe data is more prevalent. In a wireless environment a potential skimmer need not physically possess the card to be skimmed nor have access to any of the physical equipment e.g. POS terminal communication lines etc. which is required for skimming in a wire based environment. A skimmer can without the knowledge of the consumer or merchant intercept the wireless transaction and copy the data being transmitted from the card to POS terminal.

To address the above problems a dCVV or a dynamic card verification value can be used. For example various systems and methods for generating dCVV s are discussed in U.S. patent application Ser. No. 10 642 878 entitled Method and System for Generating a Dynamic Verification Value filed on Aug. 18 2003 and in U.S. patent application Ser. No. 11 764 376 entitled On Line Payment Transactions filed on Jan. 29 2008. Both of these applications are incorporated herein by reference in their entirely for all purposes.

In addition to generating a dCVV a dCVV can be more effective for preventing fraud when it is securely received by a consumer. However securely receiving and using a dCVV cannot overly interfere with a consumer s experience conducting a transaction. A consumer might not use the dCVV or a consumer might conduct fewer transactions if the inconvenience of receiving and using a dCVV is too great.

Embodiments of the invention are directed to addressing the above problems and other problems individually and collectively.

Apparatuses methods and systems pertaining to the verification of portable consumer devices particularly within the framework of 3 D Secure Services e.g. Verified by Visa are disclosed.

One exemplary embodiment of the invention is directed to a verification token for obtaining a device verification value for a portable consumer device. The exemplary verification token comprises a peripheral interface adapted to communicatively couple to a peripheral interface of a computer a reader adapted to read identification information from portable consumer devices a computer readable medium a data processor electrically coupled to the peripheral interface of the verification token the reader and the computer readable medium and a plurality of codes embodied on the computer readable medium that direct the data processor to conduct various tasks. One code directs the data processor to receive identification information read from a portable consumer device by the reader. Another code directs the data processor to communicate with a computer by way of the peripheral interface of the verification token and to gain access to a networking facility of the computer. Another code directs the data processor to transmit by way of the networking facility of the computer at least a portion of the received identification information to an entity that can provide a 3 D Secure datum. And another code directs the data processor to receive after transmitting said identification information 3 D Secure datum from the entity by way of the networking facility of the computer. The verification token may send the identification information to the computer in a number of forms including 1 unaltered form clear form 2 encrypted form 3 hashed formed e.g. encoded 4 signed form 5 or any combination of these forms. These forms may be generated by the portable consumer device the verification token the computer or any combination thereof. In addition the verification token and the entity e.g. validation entity or gateway may perform a mutual authentication process before the verification token sends the identification information. As used in the claims the term entity that can provide a 3 D secure datum encompasses a validation entity a gateway or any combination thereof.

In a further embodiment of this the token includes a code that directs the data processor to cause the received 3 D Secure datum to be inserted into a posting field of a Purchase Authentication Page sent to the computer by an entity of a 3 D secure system.

In some implementations of these exemplary embodiments the above codes and identification information are stored independently of the computer and are secure from programs including spyware and other malicious programs running on the computer. In this implementation the identification information is put in secure form e.g. encrypted hashed signed or combination thereof by the verification token before the information is provided to the computer. Accordingly securing the information is not dependent upon the security of the computer. Symmetric or asymmetric keys may be used for encryption and signing. The keys for a verification token may be unique with respect to other verification tokens. Keys and particularly symmetric keys may be based upon a uniquely assigned serial number for the verification token which the token communicates to the validation entity and or gateway. Both the verification token and the validation entity and or gateway may have a shared secret on how to derive a key from the serial number such as by manipulating and or replacing selected digits of the serial number. A number of keys may be derived from the unique serial number using respective shared secrets. Thus the challenge and response messages used in a mutual authentication process may be signed using respective keys derived from the serial number.

Another exemplary embodiment of the invention is directed to a method of obtaining a 3 D Secure datum for a portable consumer device. The exemplary method comprises establishing a communications link between a verification token and a computer the computer having a networking facility reading identification information from a portable consumer device into the verification token transmitting the read identification information from the verification token to an entity that can provide a 3 D Secure datum e.g. a validation entity or a gateway in communication a validation entity through the networking facility of the computer and after transmitting the identification information receiving at the verification token a 3 D Secure datum from the entity by way of the networking facility of the computer. The identification information may be transmitted from the token to the computer in a number of forms including 1 unaltered form clear form 2 encrypted form 3 hashed formed e.g. encoded 4 signed form 5 or any combination of these forms. These forms may be generated by the portable consumer device the verification token the computer or any combination thereof. In addition the method may include causing the verification token to authenticate the validation entity and or gateway such as through a mutual authentication process before transmitting the identification information to the validation entity and or gateway.

Another exemplary embodiment of the invention is directed to a validation entity that provides 3 D Secure datums to verification tokens. The exemplary validation entity comprises a computer readable medium a data processor electrically coupled to the computer readable medium and code embodied on the computer readable medium that directs the data processor to perform various actions. The exemplary validation entity further comprises code that directs a data processor to receive a request for a 3 D Secure datum for a portable consumer device associated with a user the request comprising identification information pertaining to the portable consumer device code that directs the data processor to apply at least one validation test pertaining to the received request and code that directs the data processor to send if the at least one validation test is passed a 3 D Secure datum to a verification token associated with the user or to an entity configured to forward the 3 D Secure datum to the token.

Another exemplary embodiment of the invention is directed to a computer program product that provides 3 D Secure datums. The exemplary product comprises code that directs a data processor to receive a request for a 3 D Secure datum for a portable consumer device associated with a user the request comprising identification information pertaining to the portable consumer device code that directs the data processor to apply at least one validation test pertaining to the received request and code that directs the data processor to send if the at least one validation test is passed a 3 D Secure datum to a verification token associated with the user or to an entity configured to forward the 3 D Secure datum to the token.

In each of the embodiments described above and in each of the embodiments described below the communications between the computer and the validation entity may be facilitated by and or conveyed through a gateway e.g. a proxy server server entity etc. that is disposed between the computer and the validation entity. The gateway may act as an intermediary between a plurality of verification tokens and their associated computers on the one side and a plurality of validation entities on the other side. The gateway may receive one or more initial communications from a verification token via a computer in communication with the token and may determine from information in the one or more initial communications an appropriate one of the validation entities to use to fulfill the token s request for a 3 D Secure datum. For example each verification token may be configured to operate with portable consumer devices issued by many different issuing banks or other such entities and one or more of the validation entities may be configured to process requests from portable consumer devices issued by respective issuing banks or other such entities. The gateway may determine an appropriate one of validation entities to use based upon the identification information that the token read from a portable consumer device and sent to the gateway in an initial communication. In one implementation the gateway redirects the token to the determined appropriate validation entity with further communications occurring directly between the verification token and the appropriate validation entity. In another implementation the communications between the verification token and the appropriate validation entity may be conveyed through the gateway after the gateway has initially determined the identity of the appropriate validation entity based upon one or more initial communications with the token . This latter implementation may comprise relatively simple passing through of communications between the token and the appropriate validation entity with minimal processing by the gateway or may comprise having the gateway virtually present itself as the appropriate validation entity to the verification token. Such virtual presentation may involve the gateway decrypting each message from the verification token communicating with the appropriate validation entity to formulate a response to the token s message and encrypting and sending a response message to the verification token. The gateway may also conduct one or more validation tests on behalf of the appropriate validation entity particularly those related to validating the verification token. In this case the gateway does not need to send to the appropriate validation entity those communications it receives from the token that pertain to validation tests that the gateway is handling. The gateway may be associated with or operated by a payment processing network.

Other exemplary embodiments of the invention are directed a computer program product that can be used by an exemplary Access Control Server to utilize 3 D Secure datums. The exemplary Access Control Server comprises a computer readable medium a data processor electrically coupled to the computer readable medium and various code embodied on the computer readable medium that directs the data processor to perform various actions. The exemplary computer program product comprises code that directs the data processor to send a Purchase Authentication Page to a computer the Purchase Authentication Page having a user response posting field to receive a response from a user code that directs the data processor to receive a returned Purchase Authentication Page from the computer the returned Purchase Authentication Page having a user response disposed in the user response posting field and a 3 D secure datum code that directs the data processor to compare at least a portion of the received user response to a stored user response to make a first determination of whether a match exists code that directs the data processor to compare the received 3 D secure datum to a stored 3 D secure to make a second determination of whether a match exists and code that directs the data processor to generate a Payer Authentication Response message based on at least the first and second determinations.

Other exemplary embodiments of the invention are directed a computer program product that can be used by an exemplary 3 D Secure Gateway to manage the flow of messages among selected components of a 3 D Secure System.

To reiterate the communications between the computer and the validation entity in each of the above embodiment may be conveyed through a server disposed between the computer and the validation entity as described above.

Further embodiments and details regarding embodiments of the invention are provided below in the Detailed Description with reference to the Figures.

Embodiments disclosed herein pertain to the verification of portable consumer devices. A portable consumer device comprises a device that holds identification information pertaining to an account held by a user with another entity which is typically an entity that holds extends or credits items of value to the user e.g. monetary funds credits debts etc. . Portable consumer devices encompass credit cards charge cards debit cards bank cards prepaid cards access cards security cards and other cards that identify an account held by a user with another entity. The cards are capable of existing in both passive forms e.g. card with a magnetic stripe and active forms e.g. integrated circuit cards smartcards and further encompass portable electronic devices that in whole or in part function as such cards. Such portable electronic devices can include memory cards account tokens fobs stickers cellular telephones including near field communications phone keychain devices such as the Speedpass commercially available from Exxon Mobil Corp. personal digital assistants other mobile electronic devices transponders smart media and pagers.

The identification information held by e.g. embodied on a consumer portable device comprises at least an account number and preferably at least one of the following a digital fingerprint of a magnetic stripe of the portable consumer device or a variable datum that varies each time the portable consumer device is read for its identification information as illustrated in . The magnetic stripe carries at least the account number of the device. The account number identifies the consumer account within at least one payment processing network and may comprise a primary account number PAN it may also comprise alphanumeric characters. The digital fingerprint of the magnetic stripe is representative of the distribution of magnetic particles that form the magnetic stripe and is generated by a specialized card reader that samples the distribution of magnetic particles when the card is swiped. The variable datum typically comprises number characters but may comprise alphanumeric characters. The values of the variable datum vary in a way that is known to both the portable consumer device and an authorization entity the latter of which may be an issuing bank or a payment processing network. The variable datum encompasses the dynamic CVV dCVV and CVC3 card verification values generated by smartcards both the contact and contactless forms as well as cryptograms generated by many smartcards e.g. cryptogram 17 . The datum values may be pre stored in a computer readable medium of the device and in a computer readable medium of the authorization entity or may be generated by each of the device and the entity as needed e.g. generated on the fly using a confidential algorithm known to the device and the entity or by a known algorithm that uses confidential keys or confidential information. The variable datum may comprise or may be accompanied by a counter value that indicates the number of times the portable consumer device has generated the variable datum the counter value may assist the authorization entity in retrieving the variable datum from the entity s computer readable medium or in generating the variable datum from the algorithm. However a counter value is not necessary and the authorization entity may deduce the number of times the device has generated the variable datum from the history of authorization requests made for the device or an algorithm that does not require a counter may be used.

The identification information may further comprise the name of the account holder e.g. the user the expiration date of the card service codes and discretionary data. As an example the identification information may include the conventional payment data stored on the tracks of the magnetic stripe of a conventional credit card e.g. Track 1 Track 2 and or Track 3 .

The identification information of a portable consumer device is read by a reader which is an electrical component that can read the identification information from a portable consumer device and provide the identification information to another electrical component. A reader may comprise one or more of the following a magnetic stripe reader which may include fingerprint sampling circuitry a card contact reader and a contactless reader the latter of which is commonly known as an RFID reader RFID being an acronym for radio frequency identification . A reader for reading fingerprints of magnetic stripes may include a security module that comprises a proprietary algorithm that generates a digital fingerprint from the sampled fingerprint data and that encrypts the digital fingerprint with a nonce word using an encryption key. Readers are predominantly found at point of sales locations of merchants.

General Card Processing. A typical credit card transaction flow using a portable consumer device at a point of sales location is described next. The user s portable consumer device is provided to the user by or on behalf of an issuing bank. The issuing bank extends credit to the user represents the user in credit card transactions and pays merchants for the purchases made by the user. A user presents his or her portable consumer device to a merchant at a point of sales location to pay for an item or service. The merchant uses a reader to read the user s portable consumer device and sends the identification information read from the device along with merchant s information and the transaction amount to an acquiring bank. The merchant may also read the portable consumer device for the printed card verification value e.g. the CVV value printed on the backs of many credit cards and may send this along as part of the transaction information sent to the acquiring bank. The acquiring bank represents and vouches for the merchant in credit card transactions. The acquiring bank forwards the transaction information to a payment processing network such as VisaNet for authorization. A payment processing network generally encompasses a collection of one or more data processing server computers subsystems networks and operations used to support and deliver one or more of the following authorization services exception file services and clearing and settlement services. Payment processing networks encompass bank processing networks credit card payment processing network etc. An exemplary payment processing network may include VisaNet . Exemplary payment processing networks are able to process one or more of the following credit card transactions debit card transactions and other types of commercial transactions. A payment processing network may use any suitable wired or wireless network including the Internet to communicate with acquiring banks and issuing banks.

Prior to the occurrence of a credit card transaction the payment processing network has established a protocol with each issuing bank on how the bank s transactions are to be authorized. In some cases such as when the transaction amount is below a threshold value the payment processing network will authorize the transaction based on information that it has about the user s account without consulting the issuing bank and will accept the liability if the transaction turns out to be fraudulent. In other cases such as when the transaction amount is above a threshold value the payment processing network will forward the transaction information on to the issuing bank for verification and authorization. As part of the authorization process the payment network or the issuing bank may verify the digital fingerprint or the varying datum provided by the portable consumer device. The digital fingerprint is stored at the issuing bank and may be securely provided to the payment processing network by the issuing bank for storage and subsequent use. The algorithm for generating the varying datum is stored at the issuing bank and may be securely provided to the payment processing network for storage and subsequent use. As also part of the authorization process the payment network or the issuing bank may verify the printed card verification value e.g. CVV which is stored at the issuing bank and may be securely provided by the issuing bank to the payment processing network for storage and subsequent use. The degree to which the payment processing network is involved in the verification of the consumer portable device and the authorization of the transaction is typically configured according to the wishes of the issuing bank. Once the transaction is authorized the payment processing network sends an authorization indication e.g. authorization code to the acquiring bank which sends the authorization indication on to the merchant. In order to reduce fraud merchants are not allowed to store digital fingerprints variable datum and printed card verification values CVVs for more than 24 hours.

In the credit card industry the authorization indication takes the form of an authorization code which is five or six alphanumeric characters by convention. It serves as proof to the merchant and the card holder that the issuing bank or payment processing network has authorized the transaction and may be used by the merchant or the card holder as proof of authorization if the issuing bank later disputes the transaction such as during settlement. The authorization code is not the same as the card verification value or the dCVV2 value described below since it does not have the same purpose as the card verification value which is to serve as proof that the card was presented to the merchant when the transaction was conducted and cannot be entered into the CVV field of a merchant POS terminal or merchant website which only accepts 3 or 4 numeric digits . The authorization code is also not the same as a 3 D Secure datum since it does not have the same purpose as the 3 D Secure datum which is to serve as proof that the card was presented to the merchant when the transaction was conducted.

When a user wishes to make an online purchase with a merchant over the Internet the user types in the credit card account number cardholder name expiration date and the printed card verification value into respective fields on the merchant s checkout page. In this case the card s magnetic fingerprint or the card s variable datum is not used in the transaction and they are not available to the payment processing network or the issuing bank to aid in verifying that the card was actually present during the transaction. Accordingly there is a greater risk of fraud with such online purchases. For example a store clerk can copy down the account information and printed verification value during a transaction at a point of sales location and can later use the copied information to make an online purchase. As another example a hacker can install spyware on the user s computer to intercept the account information and printed verification value and use it to make fraudulent purchases at other online merchants. Other avenues of potential fraud exist. Embodiments of the invention are directed to mitigating these types of fraudulent activity.

The Existing 3 D Secure System. To provide a more secure on line transaction process the 3 D Secure System Verified by Visa system has been previously developed and deployed. This system defines a three domain 3 D model within which the entities involved in 3 D Secure System Verified by Visa system work together to authenticate and authorize an online payment transaction. Referring to the 3 D model divides payment systems as follows 1 Issuer Domain Systems and functions of the issuer and its customers cardholders 2 Acquirer Domain Systems and functions of the acquirer and its customers merchants and 3 Interoperability Domain Systems functions and messages that allow Issuer Domain systems and Acquirer Domain systems to interoperate worldwide. Third parties operate many of the systems in the Issuer and Acquirer Domains on behalf of Visa members in accordance with Visa nonmember agent requirements. provides a simple illustration of the participants in their associated domains. The Three Domain Model enables issuers to authenticate their cardholders during online purchases. Acquirers and merchants have a flexible framework that can embrace a variety of technical approaches. Interoperability between the issuer and acquirer is achieved through the use of a common protocol and the Visa interoperability services.

The cardholder shops online providing the account holder name card number and expiration date on the Merchant Checkout page either directly or by way of software such as a digital wallet and then indicates readiness to finalize the transaction. In response a software module at the Merchant website called a Merchant Server Plug in MPI contacts a Directory Server in the Interoperability Domain to see if the card number can be authenticated through the 3 D Secure System. If so the Merchant Server Plug in opens a communication frame or window on the cardholder s browser on the cardholder s computer and directs the communication frame or window to contact an Access Control Server ACS associated with the Issuer . The MPI is in the Acquirer domain and the ACS is in the Issuer domain. The direction to the communication frame or window may comprise a URL to the ACS along with a parameter or datum that the ACS can use to ascertain the account number PAN of the cardholder s card. The Access Control Server takes control of the communication frame or window and presents a Purchase Authentication Page to the cardholder which requests information such as a password or an answer to a question needed to authenticate the cardholder. The cardholder provides information needed for authentication and the Access Control Server conducts an authentication procedure which may include testing the received information against information stored at the Access Control Server. The Access Control Server then sends a message to the Merchant Server Plug in MPI indicating whether or not the cardholder could be authenticated. In this manner the cardholder s computer browser acts as a conduit to transport messages between the Merchant Server Plug in in the Acquirer Domain and the Access Control Server in the Issuer Domain . If the cardholder is indicated as being authenticated the Merchant may proceed to process the transaction under the 3 D Secure System program. If the cardholder is not indicated as being authenticated the Merchant may decline the transaction or select another authorization route.

An issuer in the 3 D Secure service system is a Visa member financial institution that 1 enters into a contractual relationship with the cardholder for issuance of one or more Visa cards 2 determines the cardholder s eligibility to participate in the 3 D Secure service 3 defines card number ranges eligible to participate in the 3 D Secure service 4 provides data about those card number ranges to the Directory Server and 5 performs enrollment of the cardholder for each payment card account via the Access Control Server a separate Enrollment Server or manually . The Access Control Server ACS performs the following tasks functions 1 to verify whether 3 D Secure authentication or proof of attempted authentication is available for a particular card number and 2 to authenticate the cardholder for a specific transaction or to provide proof of attempted authentication when authentication is not available. Although these functions are described as belonging to a single logical ACS implementations may divide the processing by function or by other characteristics such as card number range among multiple physical servers.

The Acquirer Domain has the Merchant Merchant Server Plug in MPI and the Acquiring Bank the Acquirer . Existing merchant software handles the shopping experience obtains the card number and then invokes the Merchant Server Plug in MPI to conduct payment authentication. After payment authentication the merchant software may submit an authorization request to the acquirer if appropriate. The Merchant Server Plug in MPI creates and processes payment authentication messages then returns control to the merchant software. As part of processing the authentication response message from the issuer the MPI may validate the digital signature in the message alternatively a separate server the acquirer or a third party may perform this function. The Acquirer is a Visa member financial institution that 1 enters into a contractual relationship with a merchant for purposes of accepting Visa cards and 2 determines the merchant s eligibility to participate in the 3 D Secure service. Following payment authentication the acquirer performs its traditional role 1 receives authorization requests from the merchant 2 forwards them to an authorization system payment processing system such as provided by VisaNet 3 provides authorization responses to the merchant and 4 submits the completed transaction to the settlement system such as provided by VisaNet .

The Interoperability Domain has a Directory Server a Commercial Certificate Authority a Certificate Authority a Authentication History Server and a payment processing network such as VisaNet . The Directory Server is operated by a credit processing company or association such as Visa MasterCard etc. and performs the following actions 1 receives messages from merchants querying a specific card number 2 determines whether the card number is in a participating card range 3 directs the request for cardholder authentication to the appropriate Access Control Server ACS which may or may not provide attempts functionality or responds directly to the merchant 4 receives the response from the ACS indicating whether payment authentication or proof of attempted authentication is available for the cardholder account and 5 forwards the response to the merchant . The Commercial Certificate Authority generates selected certificates for the use of 3 D Secure entities including SSL TLS client and server certificates. The Certificate Authority generates selected certificates for the use of 3 D Secure entities including 1 Signing certificates and 2 Root certificates. The Authentication History Server which may be operated by a credit processing company or association such as Visa MasterCard etc. performs the following actions 1 receives a message from the Access Control Server ACS for each attempted payment authentication whether or not authentication was successful and 2 stores the records received. A copy of the data stored by the Authentication History Server is available to acquirers and issuers in case of disputes. Following payment authentication the payment processing network performs its traditional role 1 receives authorization requests from the acquirer 2 forwards them to the issuer 3 provides responses from the issuer to the acquirer and 4 provides clearing and settlement services to the acquirer and issuer .

The Payment Authentication Process in the conventional 3 D Secure system is described next with a high level narrative outline of the major actions in a 3 D Secure payment authentication. When checking out at the conclusion of shopping the cardholder supplies billing and payment card information or uses merchant capabilities or software such as a digital wallet to do this. When the cardholder indicates the decision to buy Merchant Server Plug in MPI software is activated. MPI software may be located at the merchant shopping site at the acquirer or at a third party processor site. The MPI sends a message to the Directory Server to determine whether authentication services are available for the cardholder the cardholder has previously enrolled in the 3 D Secure system . If the response indicates that the cardholder is enrolled and authentication is available or if proof of authentication attempt is available the response message instructs the MPI on how to contact the Access Control Server ACS of the associated issuer . If the account number of the cardholder falls outside of participating card ranges the Directory Server returns the transaction to the merchant s commerce server via the MPI and the merchant proceeds with a standard authorization request.

If the cardholder is enrolled in the 3 D Secure system service the MPI sends an authentication request to the Access Control Server ACS of the associated issuer . This is usually sent via the cardholder s browser. The Access Control Server authenticates the cardholder by causing an authentication dialog window or frame to be displayed to the cardholder asking for a password or an answer to a question. The user provides the password or answer and returns it to the Access Control Server which verifies the password or answer. The Access Control Server formats and digitally signs an authentication response the authentication response may be derived from the authentication request then returns it to the Merchant Server Plug in MPI . If the authentication response indicates successful authentication or proof of authentication attempt the merchant forwards an authorization request with the requisite data to its acquirer or the acquirer s processor for submission into the payment processing network such as VisaNet.

The system is illustrated in further detail with the following actions shown in . In action the cardholder user browses at a merchant site selects items and then finalizes the purchase. At this point the merchant has all the necessary data to process the transaction including card number PAN and expiration date and information about the cardholder s user device information e.g. information about the computing device that the cardholder is using to make the transaction . In action the Merchant Server Plug in MPI sends the device s card number account number PAN and user device information if applicable to the Directory Server. In action the Directory Server queries the appropriate Access Control Server ACS to determine whether authentication or proof of attempted authentication is available for the card number PAN and device type in other words determines whether device participates in the 3 D Secure System . If an appropriate ACS is not available the Directory Server creates a response for the MPI and processing continues with action described below. In action the Access Control Server ACS responds to the Directory Server indicating whether authentication or proof of attempted authentication is available for the card number. In action the Directory Server forwards the ACS response or its own response to the Merchant Server Plug in MPI . If neither authentication nor proof of attempted authentication is available the merchant acquirer or payment processing network submits a traditional authorization request and the remaining below actions are not performed. If the above services are available for the card the Directory Server provides the Merchant Server Plug in MPI with a URL of the Access Control Server ACS to which the MPI can contact the ACS for authentication which is done in the next action.

In action the MPI sends a Payer Authentication Request PAReq to the Access Control Server ACS via the cardholder s computing device using the URL for the ACS provided to it by the Directory Server. The PAReq message requests the issuer to authenticate its cardholder and contains the cardholder information e.g. PAN expiration date etc. merchant information and transaction specific information necessary to do so. As part of sending the PAReq the Merchant Server Plug in can open a communication frame or window on the cardholder s browser and can direct the communication frame or window to contact an Access Control Server ACS associated with the Issuer and provide the PAReq message. Other contact approaches are possible using the XML language. In action the Access Control Server receives the PAReq and takes control of the communication frame or window and presents a Purchase Authentication Page to the cardholder which requests information such as a password or an answer to a question needed to authenticate the cardholder. In action the Access Control Server ACS receives back a filled out Purchase Authentication Page from the cardholder and either authenticates the cardholder by using processes applicable to the card number password chip PIN etc. or if attempts ACS functionality is available creates the proof of authentication attempt. The Access Control Server then formats a Payer Authentication Response PARes message with the appropriate values and signs it. In action the Access Control Server returns the PARes to the Merchant Server Plug in MPI via the cardholder s computing device. The Access Control Server sends selected data to the Authentication History Server AHS . In action the MPI receives the Payer Authentication Response PARes . In action the MPI validates the PARes signature either by performing the validation itself or by passing the message to a separate Validation Server . In action if appropriate the merchant proceeds with the authorization exchange with its acquirer . Following action the acquirer processes the authorization request with the payment processing network and returns the authorization response to the merchant .

Integration of Card Presentation and Verification into the 3 D Secure System. The present invention provides the ability to verify that a personal consumer device e.g. credit card is present during an online transaction under the 3 D secure system and to provide the issuing bank with an assurance that the card was presented during the transaction by the user. Referring to a user is provided with a verification token that is communicatively coupled to the user s computer such as through a USB port or a Bluetooth wireless connection. The verification token may have a peripheral interface adapted to communicatively couple to a peripheral interface of computer . Verification token is capable of reading one of the user s portable consumer devices e.g. credit card for the device s identification information shown in of preferably reading merchant and or transaction information from a web page on the user s computer and of securely conveying the read information to a validation entity via a first communications network using a networking facility of the user s computer that is coupled to network . Both the user s computer and validation entity are coupled to a first communications network which is described below in greater detail and which may include the Internet. Validation entity performs one or more validation tests on read information that it has received and if the one or more validation tests are passed it sends a 3 D secure datum to verification token via first communications network and the networking facility of the user s computer . The 3 D secure datum may comprise a sequence of binary digit values preferably selected to be difficult for a fraudster to guess and may represent number alphanumerical character sequence a cryptogram or a signed message. The 3 D secure datum may be generated by the Access Control Server ACS of the 3 D secure system previously described with reference to and provided to validation entity or it may be generated by validation entity and provided to the Access Control Server. The value of the 3 D secure datum may depend upon one or more of the following the identification information of the user s portable consumer device the identity of the merchant the transaction amount the day of the transaction the time of the transaction a serial number of the Token the IP address or other information about the user s computer . The 3 D secure datum is not an authorization code and does not serve as proof that the issuing bank has authorized the transaction.

Verification token then inserts the received 3 D secure datum into the Purchase Authentication Page in step of the 3 D Secure System process described above with reference to . Then in step the Access Control Server ACS receives the Purchase Authentication with the 3 D secure datum provided by token and compares it to the 3 D secure datum that it previously gave to validation entity or previously received from validation entity . If the two versions of the 3 D secure datum match then the ACS has a degree of assurance based on the validation tests performed by validation entity that the user s portable consumer device was physically presented to token during the transaction. Validation entity and the merchant website may communication with the Access Control Server and other entities of the 3 D Secure System through a second communications network which may include the Internet and or one or more private networks thus networks and may have some overlap or may be the same depending upon implementation .

At the time the verification token and validation entity seek to obtain the 3 D secure datum neither know whether merchant is a participant in the 3 D secure system. As another option for verifying that the user s consumer portable device was presented as part of the transaction validation entity may be further configured to provide a dynamic card verification value called a dCVV2 value herein to verification token and verification token may be further configured to insert the dCVV2 value into the card verification value CVV field of the merchant s checkout page or may be configured to present the dCVV2 value to user so that user can enter the dCVV2 value into the CVV field. Validation entity may provide the dCVV2 value to a payment processing network or the issuing bank which may then check the value against the dCVV2 value received from the merchant to verify that the user s portable consumer device was physically presented to token during the transaction.

Given that that broad outline of the processes and entities involved a more detailed description is given next. The 3 D secure system described in may be modified to utilize the services provided by verification token and validation entity in the following exemplary manner. In the modified 3 D secure system the following actions A H are performed prior to action of the 3 D Secure system previously described in . In action A the cardholder browses at a merchant site merchant selects items and then presents his portable consumer device to token while at the merchant s checkout page. This action is illustrated in . In response token reads the identification information from the device optionally reads merchant and or transaction information from payment page of the merchant s site and sends the collected information as a validation request to validation entity over first communications network . This action is illustrated as action B in . The validation request preferably includes the account number of device e.g PAN a variable datum or digital fingerprint as described above in preferably a merchant identifier that identifies the merchant in some way and preferably a transaction identifier that identifies the transaction in same way such as transaction amount. The validation request may also contain information about the user s computer such as CPU serial number and or may contain the serial number of the token. These pieces of information may however be communicated to validation entity before the validation request is made.

In response the validation entity compares the received identification information e.g. PAN and variable datum or fingerprint with its records for portable consumer device to obtain a degree of assurance that device was actually presented to token . If a sufficient degree of assurance is obtained validation entity sends a message to the Directory Server with the account number PAN of device the merchant identifier and or the transaction identifier and optionally a 3 D Secure datum as described above. This is illustrated as action C in . Action C may before or occur after validation entity has performed one or more validation tests which are described below in greater detail. In action D the Directory Server identifies the Access Control Server ACS for the PAN received from validation entity and forwards the account number PAN the merchant identifier and or the transaction identifier and optionally a 3 D Secure datum to the identified Access Control Server ACS . The forwarded message may include an indication that information from the portable consumer device has been collected by token and that token is present with the user s computer . In action E the Access Control Server ACS responds to the Directory Server by sending an indication of whether the card number is participating in the 3 D Secure service the participation indication and by sending a 3 D Secure datum if one was not previously provided by validation entity . The Access Control Server also saves the account number PAN the merchant identifier and or the transaction identifier the indication of token being present in computer and the 3 D Secure datum in a computer record for later reference when modified action is performed as described below.

In action F the Directory Server forwards to validation entity the participation indication and the 3 D Secure datum if the datum was not previously provided by validation entity . In action G validation entity sends the dCVV2 value 3 D Secure participation indication and the 3 D Secure datum to verification token which receives these items. The participation indication may be incorporated into the 3 D Secure datum by having one or more selected values such as a NULL value indicate non participation and all other values indicate participation. In action H verification token fills in the merchant checkout page with the payment information and dCVV2 value if appropriate as described below in greater detail. If a CVV field is present token fills the field in with the dCVV2 value. At this point token may not know whether the merchant is a participating member of the 3 D Secure system. 

The actions previously described with reference to may now take place with the following modifications to Actions and . In modified action the Access Control Server receives the PAReq and takes control of the communication frame or window as described above and presents a Purchase Authentication Page to the cardholder. The Purchase Authentication Page is modified to include a posting field to receive a 3 D Secure datum from token . In one implementation the posting field is hidden and not visible to user . Validation token is further modified to include instructions that direct its processor to monitor the user s browser for the presences of the Purchase Authentication Page and to insert the 3 D Secure datum received from validation entity into the posting field present in the Purchase Authentication Page. The user then enters his password or gives the answer to a question and submits the filled out Purchase Authentication Page to the Access Control Server.

In modified action the Access Control Server ACS receives the back a filled out Purchase Authentication Page from computer and authenticates user by comparing the 3 D Secure datum provided in the posting field with the earlier 3 D Secure datum that it provided to or received from validation entity . The Access Control Server can find the earlier 3 D Secure datum from the computer record that it stored in the above described action E. The computer record has the account number the merchant identifier and or the transaction identifier and the 3 D Secure datum the computer record and other such records for other cards can be stored according to account number and the Access Control Server can find the record by a search according to account number . If the two 3 D Secure datums match then the Access Control Server gains a high degree of assurance that consumer portable device was in the possession of user the cardholder shopper at the time the purchase transaction was made. The Access Control Server also may use its standard verification approach using the password or answer entered by user the cardholder shopper to gain additional assurance. If the two 3 D Secure datums do not match the Access Control Server may still use its standard verification approach or may decide to not authenticate the cardholder.

In the above described embodiments validation token enters the 3 D Secure datum into a dedicated posting filed of the Purchase Authentication Page where the positing field is preferable hidden. However the provision of the 3 D Secure datum to the Access Control Server by Token can be done in other ways called herein variations. These variations are briefly described here and more fully described below after Token is fully described. In a first variation token enters the 3 D secure datum into the password field of the Purchase Authentication Page rather than a dedicated posting field. In a second variation token appends the 3 D secure datum to the password that the user has entered into the password field of the Purchase Authentication Page. In a third variation the Purchase Authentication Page is initially presented to the user in hidden form e.g. not visible on the computer screen to the user and token returns the Purchase Authentication Page to the Access Control Server with the 3 D Secure datum placed in a dedicate posting field or an existing field such as the password field and without the user having to enter the password e.g. returns the Purchase Authentication Page to the Access Control Server regardless of whether the user response positing field is filled in by the user . If token does not receive a valid 3 D Secure datum it changes the display properties of the Purchase Authentication Page to make it visible to the user and leaves it to the user to provide the password and submit the filled in Purchase Authentication Page to the Access Control Server. In a fourth variation the Access Control Server performs a fraud risk assessment of the transaction based on the information that the Directory Server has provided about the transaction. If the assessed risk of fraud is below a selected threshold the Access Control Server presents the Purchase Authentication Page in hidden form to the user e.g. invisible to the user and allows token to process the Purchase Authentication Page as it does in the third variation. If the assessed risk of fraud is above the selected threshold Access Control Server presents the Purchase Authentication Page in visible form to the user and token provides the 3 D Secure datum to the Purchase Authentication Page but defers to the user to submit the Page to the Access Control Server. As indicated below the Access Control Server can comprise codes that direct its data processor to perform the above tasks.

Token the user s computer and validation entity are described in greater detail with reference to . Shown in the figure are icons for a user the user s portable consumer device the user s communication device such as a cell phone the user s computer the merchant s website and the first communications network that enables the user s computer and the merchant s website to communicate with one another. The first communications network may include the Internet a telecommunications network e.g. a wireless network cell phone network a telephone network a cable network or any combination thereof a wide area network WAN a local area network LAN a home router or gateway coupled to one of the above networks or any combination of the above. Also shown in is acquiring bank for the merchant issuing bank for the portable consumer device a payment processing network and second communications network that enables the payment processing network to communicate with each of the banks and . The second communications network may comprise the Internet and therefore may overlap and share facilities with the first communications network or may comprise one or more private networks or combination of one or more private networks with the Internet. A private network may comprise a telecommunications network a wide area network WAN a local area network LAN or any combination thereof. In some instances the first and second communications networks and may be the same such as a network using the Internet as the backbone . A communications network generally comprises a network of one or more communications links and two or more nodes that pass messages from one part of the network to another part. Each node comprises one or more pieces of electrical machinery and each link may comprise one or more of the following optical fibers optical links radio links electrical wires. The components described so far are for the most part conventional and arranged in a conventional manner.

In cases where the user s portable consumer device generates a cryptogram e.g. cryptogram 17 card reader provides the user s device with dummy transaction information that is known to both token and validation entity . The dummy transaction information may include a static transaction amount and a static merchant name depending upon the type of cryptogram to be generated. The dummy transaction information may be different for each token . The user s device uses the transaction information to generate the cryptogram. The user s device typically has a counter value often called the Application Transaction Counter ATC which is included in the cryptogram computation and which is incremented with each transaction. The counter reduces the chances of a fraudster guessing the cryptogram value. In some cases user s device may need a PIN to activate the computation of the cryptogram. For this token may display a pop up window on the user s computer that requests the entry of a PIN by the user and token may provide the pin to the user s device along with the request for the cryptogram.

A first validation test that validation entity may apply pertains to verifying that verification token is authentic. For this verification token may send its serial number to validation entity along with a message encrypted by an encryption key with the message and encryption key being known to token and entity but not the general public and with the encryption key further being uniquely assigned to the token s serial number uniquely assigned to the token . Validation entity has a database of serial numbers and corresponding uniquely assigned encryption keys and can validate that verification token has sent the correct message for the serial number. Validation of the correct message serves to authenticate verification token . If the first validation test is failed validation entity may record the serial number of the failed token and the source IP address from which the failed token made the request in a database such as a database described below . A second validation test that validation entity may apply pertains to verifying that verification token has not been involved in fraudulent transactions. For this validation entity may also have a database that tracks the serial numbers of verification tokens that have been used in fraudulent activities and may check the serial number of verification token against this database. The second validation test may further comprise checking the token serial number and or the IP address from which an incoming dCVV2 request was originated the source IP address of the message against the previously described database that stores token serial numbers and IP addresses associated with requests that have failed the first validation test. If a token serial number or IP address is found in this database the second validation test may be deemed to have been failed. Checking the token serial numbers and or the IP addresses in this way prevents replay attacks by fraudsters. It may be appreciated that the database of serial numbers of tokens that failed the first validation test may be combined with the database of serial numbers of tokens involved in fraudulent activities. This combined database as well as the two other databases may be generically termed as a database of serial numbers of suspicious tokens. If the first and second validation tests are passed e.g. encrypted serial number matches value in database and no fraudulent use and or suspicious activity by the token validation entity may send a dCVV2 value to verification token or may apply additional validation tests before sending a dCVV2 value. Such an additional validation test pertains to checking the digital fingerprint or variable datum of portable consumer device . Validation entity may have a stored record of the digital fingerprint of portable consumer device or the algorithm for generating the variable datum of device and can validate the received identification information by comparing the fingerprint or variable datum provided in the received information with the fingerprint or variable datum that it obtains from its stored record for device . If the additional validation test is passed validation entity may send a 3D secure datum and optionally a dCVV2 value to verification token . The additional validation test may be performed in addition to or instead of the previously described validation tests.

The dCVV2 value provided by validation entity comprises a variable datum e.g. a multi digit number and is used by the user to complete the purchase transaction. Verification token may display the dCVV2 value to the user so that the user may enter the dCVV2 value into CVV field of the checkout page of the merchant s website or verification token may enter the dCVV2 value directly into the CCV field of the merchant s checkout page. After the dCVV2 value has been entered into the CVV field the user may complete the purchase. This form of the dCVV2 value enables it to work within existing payment processing systems and flows. The merchant s website then uses the dCVV2 value for the CVV in its authorization request for the purchase. The authorization request is sent to acquiring bank which then forwards it to payment processing network for authorization. Through a separate channel validation entity may send the dCVV2 value to payment processing network and or issuing bank along with the account information e.g. account number so that the merchant s authorization request can be processed. This serves to notify payment processing network and or issuing bank that a dCVV2 value for portable consumer device was requested and provided to a merchant and to expect the merchant to provide the dCVV2 value in an authorization request for the account.

Payment processing network can compare incoming authorization requests from merchants such as forwarded by acquiring banks against the information it receives from validation entity such as by looking at account numbers and can match e.g. correlate incoming authorization requests with validation information sent by validation entity . If a match is found payment processing network has a high degree of assurance that consumer portable device was in the possession of user at the time the purchase transaction was made. This provides a greater degree of assurance in comparison to the reliance on CCV values printed on the backs of credit cards. Payment processing network and issuing bank can then undertake the other actions that they perform to authorize the transaction such as checking whether the merchant is in good standing and checking the account limit of user to ensure that there are sufficient funds to cover the purchase amount of the transaction. In this case payment processing network does not need to validate the digital fingerprint and or the variable datum of the portable consumer device if those actions have been done by validation entity . Payment processing network may however perform those validation actions for merchant point of sales transactions. 

As a further feature which is useful when multiple devices have been allocated under one account number e.g. multiple cards under one PAN for a household the identification information that token collects and provides to validation entity may include a device identifier alone with the account number. This device identifier uniquely identifies one of the devices allocated under the account number. Provision entity may further use the device identifier to obtain different 3D secure datum values and or different dCVV2 values for the different devices allocated under the account number. As a further feature validation entity may send to token shipping address information and or billing address information of the user that has been previously associated to the device and token may fill this information into corresponding fields on the merchant checkout page.

Computer . The user s computer may comprise a desktop computer a laptop computer or any portable electronic device that has a networking facility and a peripheral interface for communicating with one or more peripheral devices. Computer has one or more processors a tangible computer readable medium coupled to processor s that stores instruction codes software that direct processor s and that stores data used by processor s and a user interface coupled to processor s . Networking facility and peripheral interface which were previously described above are also coupled to processor s with networking facility also being coupled to first communications network . User interface comprises one or more video output devices e.g. displays screens and one or more input devices e.g. keyboard mouse trackball etc. for user to receive information from computer and to provide input to computer . Computer readable medium may comprise a combination of semiconductor memory and non volatile storage such as one or more disk drives and or non volatile memory. Computer readable medium stores an operating system for computer which enables processes and applications to be run by processor s . The operating system provides services to these processes and applications and enables these processes and applications to access components of user interface portions of computer readable medium networking facility peripheral interface and other components of computer . The operating system may be complex and full featured such as found on desk top computers or simplified such as found on cell phones PDAs and many other types of portable electronic devices.

Networking facility of computer may comprise software and hardware that enable a process running on computer to communicate with a communications network such as network to send and receive messages data and the like to one or more entities coupled to the communications network. The hardware of facility may comprise dedicated hardware separate from processor s or the shared use of processor s or a combination thereof. The software of facility may comprise firmware software stored in computer readable medium or another computer readable medium portions of the operating system or a combination of any of the preceding items. Networking facility is preferably a non exclusive resource allowing access to the communications network by other processes and applications being run by computer . Peripheral interface of computer comprises one or more wired and or wireless connections that enables a peripheral device e.g. a device that is separate from the computer s CPU and memory but which can be located inside or outside of the computer s housing to communicate with the computer. Conventional wired connections include universal serial bus USB connectors USB ports serial ports parallel ports and PCMCIA ports. Conventional wireless connections include infra red IR base stations and Bluetooth base stations that are built into computer or that are coupled to a peripheral interface of computer .

Verification Token . In addition to reader and peripheral interface described above verification token further comprises a processor a tangible computer readable medium coupled to processor holding data and codes that direct the operation of processor a security module coupled to processor and adapted to securely store one or more encryption keys and to encrypt and decrypt data for token a reader coupled to processor and adapted to read portable consumer devices and a peripheral interface coupled to processor and adapted to communicate to computer by way of peripheral interface . Processor may comprise a conventional microprocessor and computer readable medium may comprise a combination of semiconductor memory and non volatile storage such non volatile memory. illustrates an exemplary implementation of computer readable medium which include the storage of several datum elements described in greater detail below processor codes that direct the operation of processor and processor memory which processor may use in carrying out its tasks. Referring back to security module may comprise encryption and decryption circuitry which may include one or more processors and may comprise one or more encryption keys stored in a secured memory. Security module may also include firewall security circuitry that protects verification token from attacks from hackers conducted through peripheral interface . Reader may comprise a convention reader as described above. Peripheral interface may comprise a wired or wireless connection adapted to communicate with peripheral interface of computer . As indicated above conventional wired connections include universal serial bus connectors USB ports serial ports parallel ports and PCMCIA ports. Conventional wireless connections may include infra red and Bluetooth remote stations. When using a conventional wired connection with peripheral interface verification token may be detachably coupled to computer at peripheral interface such as at a USB port connector. illustrates an exemplary verification token with a USB port connector male type as part of its peripheral interface . Also illustrate in is computer its peripheral interface having a USB port connector female type to which USB connector is plugged into the user interface of computer e.g. screen and keyboard the user s portable consumer device RFID type card user and the presentation of a dCVV2 value on user interface . Token may further include a visual indicator such as a light emitting diode LED that it lights when it is ready to read a user s device and may further include an audible indicator such as a piezoelectric buzzer that sounds when token is finished with reading a user s device . The visual and audible indicators may be operated by the circuitry of reader . In other implementations one or more of these indicators may be operated by processor through I O commands. Although illustrates an embodiment of verification token as something similar to a USB stick the token may come in other forms. For example it may be piece of hardware or other module installed into a computer consumer device or other device. In such implementations verification token is still adapted to communicatively coupled to a peripheral interface of computer as described above. In an implementation where verification token is physically located within computer token may be communicatively coupled to computer by way of an internal peripheral interface such as to an internal USB hub located on the motherboard of computer thereby providing an internal USB interface connection.

Referring back to verification token further comprises various codes embodied on computer readable medium that direct data processor to perform respective actions e.g. processor codes shown in . A first code directs data processor to communicate with computer by way of peripheral interface so as to gain access networking facility of computer . The first code may comprise code that directs data processor to send a device driver to computer and an instruction to install the device driver in the computer s operating system wherein the device driver is a collection of instructions to be run by computer that enables computer to recognize the verification token and communicate with the verification token and enables the token s data processor to make function calls to various application program interfaces API s of the computer s operating system such as those related to networking and accessing networking facility . So called self installing drivers are known to the art and can be used here. They comprise one or more function calls to an application programming interface API of the computer s operating system such as the device manager s API. The first code may be configured to work with a selected operating system such as Windows or Symbian OS or may be configured to work with several operating systems. In the latter case the first code may include several device drivers for the various operating systems and instructions that query computer for its operating system type and select and install the driver most appropriate for the computer s operating system. The device drivers may be stored in a section of computer readable medium as illustrated in the example of . The first code may further include as an option instructions that direct processor to generate an I O signal that causes the above described visual indicator to be lit in response to processor gaining access to networking facility of computer .

Referring back to a second code of verification token directs data processor to receive identification information read from portable consumer device by the reader . The second code may include code that directs the data processor to receive a universal resource identifier URID of a validation entity as read from portable consumer device by the reader . The second code may comprise instructions that direct processor to contact reader at periodic intervals through an I O command to determine if the reader has any data for the processor and to read the data when data is indicated as being present. The second code may further direct processor to contact reader through an I O command to clear the data after processor has read it or reader may be configured to clear the data after it has sensed that processor has read it or after a period of time greater than the periodic contact interval used by processor . In another implementation reader may be configured to generate an interrupt signal to processor when data is present and the second code may include instructions that direct processor to respond to the interrupt signal by reading the data from reader and clearing the interrupt. The second code may further include as an option instructions that direct processor to generate an I O signal that causes the above described audible indicator to sound in response to processor receiving data from reader . The above instructions may include conventional I O instructions that direct the communications with reader and the indicators. Different portable consumer device may store and provide different URID s to different validation entities . A uniform resource identifier URID may comprise a uniform resource locator URL an Internet protocol address IP address or any other type of identifier that can identify an entity on a communications network. If a portable consumer device does not provide a URID to validation entity verification token may store a URID to a default validation entity . In some configurations some verification tokens may be co branded with respective issuing banks and only work for portable consumer devices that are co branded with the same issuing banks and each issuing bank may have its own validation entity with its own URID. In such a configuration these verification tokens may store the URIDs to their respective co branded validation entities . Instead of or in addition to this configuration some verification tokens may be associated with respective payment processing networks and each such network may have its own validation entity . In such a configuration these verification tokens may store the URIDs to their respective associated validation entities . Accordingly the second code of verification token may be further configured to direct data processor to only use a default URID stored by token or to use a default URID if consumer portable device does not provide token with a URID to entity . As yet another implementation verification token may include code that directs processor to select one of a number of URIDs stored in token based on a bank number provided in the identification information or embedded in the account number. The above further direction and codes may be implemented with conventional I O instructions memory access instructions and CPU logical and control instructions. One or more URIDs to validation entities may be stored in computer readable memory as illustrated in the example shown in .

Referring back to a third code of verification token directs data processor to establish communications with validation entity using networking facility of computer . The operating system of computer comprises one or more software modules and application programs generically called network services modules herein that can access networking facility and set up communications sessions to entities on communications network . Such network services modules include Microsoft s Windows Communications Foundation e.g. .NET 3.0 .NET 4.0 etc. Apple s CFNetwork Framework the networking section of the Unix and Linux operating system kernels the OS Services Layer and the Base Services Layer of the Symbian operating system Internet browsers and the like. Each of these network services modules is non exclusive e.g. capable of serving more than one processor and more than one process application and provides an application programming interface API to a collection of functions that a processor can access using respective function calls. With these API facilities a collection of function calls can be readily constructed for a processor to execute that enables the processor to establish a communications channel with an entity on a communications network coupled to networking facility and to exchange messages and data with the entity. The third code of verification token comprises such a collection of function calls to the API of a network services module of computer including one or more function calls that provide the universal resource identifier URID for validation entity and an instruction to establish a session with the validation entity. The session may be a secure socket layer or secure transport layer session e.g. SSL session with mutual authentication. As part of establishing the session in some implementations the third code of verification token may include directing data processor to provide or to cause to be provided a network address for the token to the computer s network services module and to validation entity . The network address may be static or dynamic the latter of which may be obtained through API function calls to the computer s network services module. The network address may an IP address.

If token wishes to use an Internet browser for a network services module it may further comprise API function calls to the computer s operating system to initiate an instance of the browser and provide it with access to the browser instance. In some implementations such as when verification entity stores the URID of validation entity the third code may direct the data processor to establish communications with validation entity well before user presents consumer portable device to reader and before processor reads device data from reader . Verification token and validation entity may keep the communications session active until device is presented to reader and between times that device is presented to reader by intermittently exchanging heartbeat messages. For example verification token may periodically aperiodically or randomly send messages to validation entity confirming its presence in the session and validation entity may send a reply message confirming its presence in the session.

The third code may be executed in response to data being received by processor from reader or may be executed prior to receiving data from reader . In the latter case the third code may include as an option instructions that direct processor to send an I O command to reader to enable its reading capability after processor has established communications with validation entity .

A fourth code of verification token directs the data processor to transmit at least a portion of identification information to validation entity by way of networking facility of computer wherein the identification information is transmitted in encrypted form. If an SSL session has been established the fourth code may direct data processor to pass the identification information to the computer s network services module using appropriate function calls to the API for the network services module and the identification information may be transmitted in the SSL session where the transmitted and received data are encrypted by a session key. For an additional layer of security the fourth code may further comprise code that directs processor to encrypt the identification information with the help of security module using an encryption key stored in token before providing it to networking facility . These instructions may include conventional I O instructions that direct the communications with security module to pass the identification information to module and to receive back the encrypted information. An encryption key for this may be stored in computer readable medium or in security module .

A fifth code for some implementations of verification token directs data processor to obtain merchant identification information that identifies the merchant of merchant website and or a transaction information that identifies the transaction such as cost amount of the transaction a merchant transaction number or the IP address of the user s computer and the previously described fourth code may further include code that directs the data processor to transmit the merchant identification information and or transaction information to validation entity by way of the networking facility of computer . The fifth code may further include code that directs data processor to display a dialog box to user on computer that prompts the user to enter a merchant name or identifier into a dialog box and or transaction information such as a transaction amount where the merchant identifier and transaction amount may be displayed on the merchant s checkout page. The code may comprise function calls to the graphical user interface of the operating system of computer to open read and then close a dialog box on user interface . This code may also comprise code that directs processor to execute function calls to the computer s internet browser to query the browser for the URL or URID or network address e.g. IP address of the entity that provided the content of its active browser session which presumed to be the merchant s checkout page and instructions that direct processor to extract the merchant s name or identifier from the obtained URL or URID. Instead of extracting the merchant name or identifier from the obtained URL or URID the fifth code may include code that directs processor to execute function calls to the computer s internet browser to query a special field on its active browser session which is the merchant s checkout page where the special field has been pre arranged by the merchant to contain the merchant s identifier and is known to token for this purpose. The fifth code may further include code that directs processor to collect a merchant transaction identifier or transaction amount both being forms of transaction information along with the merchant identifier either by asking the user to enter this transaction identifier or transaction amount into the above described dialog box or by obtaining it from another special field on the merchant s checkout page which has been pre arranged by the merchant to contain this transaction identifier. The above described codes can be readily augmented to implement this collection of the transaction identifier.

The above described transaction identifier may comprise the network address e.g. IP address of the user s computer . Validation entity merchant and the Access Control Server will see the same network address for the user s computer within any given time period for conducting a transaction. Validation entity may obtain the network address of computer from the token which in turn obtains it from the active browser session or may obtain the network address from the source IP address of the network packets it receives from computer token .

A sixth code of verification token directs data processor to receive after transmitting said identification information a 3 D secure participation indication a 3 D secure datum and an optional device verification value e.g. dCVV2 value from validation entity by way of networking facility of computer . This code may comprise function calls to the API of the computer s network services module to retrieve data sent by entity in the session. Each of the 3 D secure participation indication 3 D secure datum and the dCVV2 value may be encrypted by validation entity in which case the sixth code of verification token may further direct data processor to decrypt the encrypted items such as by using security module with input output instruction calls to module . As indicated above the participation indication may be incorporated into the 3 D Secure datum by having one or more selected values such as a NULL value indicate non participation and all other values indicate participation.

The sixth code further directs data processor to examine the participation code which may be the 3 D secure datum to determine if the cardholder e.g. device participates in the 3 D secure system. If so the six code further directs the data processor to monitor the browser sessions of computer to detect the presence of the Purchase Authentication Page sent to the user s computer by the Access Control Server of the 3 D Secure System and to insert the 3 D Secure datum that it received from validation entity into the posting field located on the Purchase Authentication Page for the 3 D Secure datum. The sixth code may comprise function calls to the API of the Internet browser to obtain the page titles associated with the browser sessions to find a session that has a title indicative of the Purchase Authentication Page and function calls to access the Purchase Authentication Page and insert the 3 D Secure datum in the posting field. These actions may involve accessing the data objects that the Internet browser stores for each of its browser sessions to view the page title or web address of the browser sessions to find the data object for the Purchase Authentication Page and to write the 3 D Secure datum to the appropriate positing field of the found data object. Token can then leave it to user to fill in the other requested information in other positing fields on the Purchase Authentication Page according to the conventional 3 D secure system flow and to return the page to the Access Control Server such as by clicking a submit button. As is known in the art returning the page can be accomplished by having the browser repost e.g. refresh the Purchase Authentication Page with additional parameters added to the URL the original URL to the Access Control Server that contain the information of the posting fields preferably in encrypted form under an SSL session e.g. an https posting .

In other implementations Token may be configured to send the Purchase Authentication Page back to the Access Control Server before the user has the opportunity to fill in the password or answer and the Access Control Server may be configured to not look for the conventional user provided information if the 3 D secure datum is present in the returned Purchase Authentication Page. For this the sixth code may comprise function calls to the API of the Internet browser to direct the browser to return the Purchase Authentication Page back to the Access Control Server. The function calls to the API of an Internet browser are known to the art and in view of this disclosure it would be within the skill of a person in the art to construct the above described function calls for the sixth code.

The sixth code may also include code that directs data processor to display the received dCVV2 value to User such as by way of the user interface of computer or a miniature LCD screen or the like integrated with verification token . In the former case this code may comprise API function calls to the graphical user interface of the operating system of computer to open a display box on user interface to display the dCVV2 value in alphanumeric and or graphical form. In the latter case this code may comprise I O instructions to the miniature LCD screen or the like. User may then enter the dCVV2 value into the CVV field of the merchant checkout page. In another implementation verification token may insert the received dCVV2 value in the CVV field of the merchant purchase page. In this case the sixth code may further include code that directs data processor to locate a browser session on the computer that has a form field for a device verification value and to fill the field with the device verification value received from the validation entity. This can include function calls to the API of the Internet browser to search the active web page or all open web pages for an input field marked as CVV and to input the dCVV2 value into the CVV field. Unlike an authorization code described above a dCVV2 value in its clear form e.g. not encrypted and not encoded is preferably configured to be enterable into a CVV field of a merchant web page e.g. checkout page .

In some implementations the CVV field on the merchant s page may be configured as a hidden field that is not visible to the user. This may be done to ease the difficulty for the user in conducting the transaction and to lessen the chances of the transaction falling through because of user confusion technical difficulties or the apparent demand for too much information. In this case and as an option the sixth code may comprise instructions that direct data processor to locate a browser session on the computer that has a hidden field for a device verification value e.g. the merchant s check out page and to fill the field with the device verification value received from the validation entity. In this case the device verification value need not be presented in visual form to the user. The hidden field can in many web programming languages be readily indicated by a tag identifier or browser variable that is known to both the merchant and token . If processor cannot locate the hidden field then the fifth code may further direct processor to present the received device verification value to the user. These instructions can include function calls to the API of the Internet browser to search the active web page or all open web pages for the hidden field as marked by the identifier or variable name to input the dCVV2 value into the hidden field and I O instructions to an LCD screen or to computer to visually present the dCVV2 value if the hidden field cannot be located or function calls to the API of the Internet browser to visually present the dCVV2 value in a temporary browser window if the hidden field cannot be located.

In some configurations validation entity may provide a dynamic account number often called a dPAN in the art along with the dCVV2 value. For these configurations the sixth code may be augmented to receive the dPAN along with the dCVV2 value and to display the dPAN value to user or to fill the value into an account field of the merchant purchase page and include instructions similar to those described above for processing the dCVV2 value. Specifically the sixth code may further include code that directs data processor to display the received dPAN value to user such as by way of the user interface of computer or a miniature LCD screen or the like integrated with verification token . In the former case this code may comprise API function calls to the graphical user interface of the operating system of computer to open a display box on user interface to display the dPAN value in alphanumeric and or graphical form. In the latter case this code may comprise I O instructions to the miniature LCD screen or the like. In another implementation verification token may insert the received dPAN value in the account field of the merchant purchase page. In this case the sixth code may further include code that that directs data processor to locate a browser session on the computer that has form fields for an account number and device verification value e.g. CVV field and to fill the account field with the dPAN value and the device verification value field with the dCVV2 value received from the validation entity. This can include function calls to the API of the Internet browser to search the active web page or all open web pages for an input fields marked as account number or credit card number and CVV and to enter the dPAN value into the account number field and the dCVV2 value into the CVV field.

In some configurations validation entity may provide a billing address and or shipping address e.g. the user s residence address and or business address associated with the portable consumer device along with the dCVV2 value. The address information may have been previously associated with the device by the issuing bank or the user through the user s online management account for the device or token. For these configurations the sixth code may be augmented to receive the billing address and or shipping address along with the other information received from validation entity and to fill the address into a corresponding fields of the merchant purchase page using instructions similar to those described above for processing the dCVV2 value. Specifically the sixth code may further include code that directs data processor to receive the billing and or shipping address information from validation entity which may be provided in a specific format with field indicators to locate a browser session on the computer that has form fields for billing and or shipping address es e.g. street address city state postal code country and to fill these fields with the address information received from the validation entity. These instructions can include function calls to the API of the Internet browser to search the active web page or all open web pages for input fields marked with indicators of billing address and or shipping address and function calls to fill these fields. Typically the actions of token to display or form fill the dPAN dCVV2 value and or shipping address occur before the Purchase Authentication Page is sent to computer and before token provides the 3 D Secure value to the Purchase Authentication Page.

The use of function calls to various application programming interfaces APIs of the operating system of computer its support modules facilities and its applications is well known to the software art and one of ordinary skill in the art will be able to construct instructions and API function calls to implement the above described codes and tasks in view of this disclosure without undue experimentation.

As indicated above validation entity may use a first validation test to validate verification token . For this verification token may send its serial number to validation entity along with a message encrypted by an encryption key with the message and encryption key being known to token and entity but not the general public and with the encryption key further being uniquely assigned to the token s serial number. Validation entity has a database of serial numbers and the corresponding uniquely assigned encryption keys or stored algorithms for generating said keys and can validate that verification token has sent the correct message for the serial number. For this verification token may comprise a serial number and unique encryption key embodied in a computer readable medium the unique encryption key being unique to verification token see for an exemplary implementation Serial Number and Datum for Encrypted message and code that directs data processor to send the serial number and a message encrypted by the unique encryption key to validation entity . The message may be pre stored on the computer readable medium e.g. stored in Datum for Encrypted message in or derivable from information known to both verification token and validation entity such as a message derived from an algorithm applied to the current date serial number of token and or session key of the communications session between token and entity . In this manner the message sent by token to validation entity is verifiable by validation entity using information stored at the validation entity. The computer readable medium for the above tasks may be located in computer readable medium and or security module . The above codes may include I O instructions to security module and function calls to the API of the computer s network services module.

As an option verification token may send from time to time one or more pieces of machine unique information of computer to validation entity which may check this information against a database of computer information associated with known fraudsters. Such machine unique information may include the serial numbers of processors disk drives and operating systems of computer . Verification token may comprise code that directs data processor to obtain one or more pieces of machine unique information from computer and to send the machine specific information to validation entity . This code may include function calls to the API of the computer s operating system to obtain the information and function calls to the API of the computer s network services module to send the information to validation entity .

As another option verification token may be configured to prompt user for a password to activate one or more features of token . The password may be stored on a computer readable medium located in security module or in computer readable medium see for an exemplary implementation of the latter . The password may be provided to user on a piece of paper by the provider or seller of token . Token may be sent to user through the mail by or on behalf of an issuing bank or may be purchased by user in a store. Token may be configured to require that the password be entered each time the user wishes to present a consumer portable device and or each time token is coupled to a computer . For this verification token may further comprise code embodied on computer readable medium that directs data processor to prompt the user to enter a password on a keyboard of computer to read a password entered by the user and to compare the entered password against a stored password embodied on the computer readable medium. This code may comprise API function calls to the graphical user interface of the operating system of computer to open a display box on user interface to request and receive a password from user I O instructions memory access instructions and CPU logical and control instructions. Verification token may further comprise one or more of the following 

These codes may be done with I O instructions memory access instructions and CPU logical and control instructions. They alone or in combination prevent the transmission of identification information to entity when the entered password is not the same as the stored password and thereby comprise code embodied on the computer readable medium that directs the data processor for doing so. One of ordinary skill in the art will be able to construct the instructions and API function calls to implement the above described codes in view of this disclosure without undue experimentation. As further protection validation token may further comprise code embodied on computer readable medium that directs data processor to establish a user name for the token by presenting user with a dialog box to receive input designating a username and by storing the username in computer readable medium example shown in . The above codes for processing the password may be further augmented to include requesting a username for the token and comparing the received username with the stored username for a match and including a match as a condition that must be met in each of the four above codes that initiate or allow various actions to be done. These codes may be done with I O instructions memory access instructions and CPU logical and control instructions.

In further implementations as further protection validation token may further comprise code embodied on computer readable medium that directs data processor to establish one or more shipping addresses and or billing addresses in the token that token can use to fill into form fill locations of a merchant page. Each shipping address and or billing address may be associated with a portable consumer device. The code may direct processor to present a series of dialog boxes to the user by way of the computer s user interface to receive the address information and the account number or last four digits thereof of the portable consumer device that is to be associated to the address information and to store the address information in a computer readable medium such as medium as illustrated by the example shown in . Token may further comprise code embodied on computer readable medium that directs data processor to access the address information in response to a request being sent to validation entity the address information may be selected among many stored addresses based on the account number sent in the request and to fill the address information into appropriate locations of a merchant checkout page such as when a dCVV2 value is received back from validation entity . The code may be configured to direct processor to only fill in the address information when the locations for the information on the merchant checkout page are blank and when validation entity has not provided address information as described above. The filling code may be further configured to direct data processor to use shipping and or billing information stored on portable consumer device when shipping and or billing information is not store in token for the account number of device and further if the locations for the shipping information on the merchant checkout page are blank and validation entity has not provided address information as described above. The filling code may include code that directs data processor to locate a browser session on the computer that has a form fields for address information and or a device verification value and to fill the address fields with the selected address information. This can include function calls to the API of the Internet browser to search the active web page or all open web pages for an input field marked as name address city postal code country and CVV and to input the datum of the selected address information into the appropriate fields. The above codes may be implemented with API function calls I O instructions memory access instructions and CPU logical and control instructions.

In each of the embodiments described herein pertaining to verification token token may send the identification information pertaining to portable consumer device to computer in a number of forms including 1 unaltered form clear form 2 encrypted form 3 hashed formed e.g. encoded 4 signed form 5 or any combination of these forms. These forms may be generated by portable consumer device verification token computer or any combination thereof. In addition verification token and validation entity may perform a mutual authentication process before verification token sends the identification information. The merchant information and transaction information may also be sent in any of the above forms.

In each of the embodiments described herein pertaining to verification token the above codes of token and the identification information read from device by token may be stored independently of computer and may be secure from programs including spyware and other malicious programs running on computer . In such implementations the identification information is put in secure form e.g. encrypted hashed signed or combination thereof by verification token before the information is provided to computer . Accordingly securing the information is not dependent upon the security of computer . Symmetric or asymmetric keys may be used for encryption and signing. The keys for a verification token may be unique with respect to other verification tokens that is the keys for a token may be unique to that token . Keys for a token and particularly symmetric keys may be based upon a uniquely assigned serial number for the verification token which the token can communicate to validation entity in an initial communication. Both the verification token and the validation entity may have a shared secret on how to derive a key from the token s serial number such as by manipulating and or replacing selected digits of the serial number. A number of keys may be derived from the unique serial number using respective shared secrets. Thus the challenge and response messages used in a mutual authentication process between a verification token and a validation entity may be signed using respective keys derived from the serial number of the verification token.

Variations on the Token Providing the 3 D Secure Datum to the Purchase Authentication Page. As briefly described above token can provide the 3 D Secure datum to the Access Control Server in a variety of ways variations besides placing the 3 D Secure datum on the Purchase Authentication Page in a dedicated posting field where the field may be hidden from the user s view. In a first variation validation token enters the 3 D secure datum into the password field or answer field of the Purchase Authentication Page instead of the dedicated posting field and returns the Page to the Access Control Server for the user. In this case the Purchase Authentication Page does not need to include the posting field for the 3 D secure datum. The above described sixth code for toke remains unchanged except that 1 token uses the password or answer posting field as the field to enter the 3 D Secure datum and the API function call for writing the datum is changed accordingly and 2 Token returns the Purchase Authentication Page to the Access Control Server without user involvement e.g. regardless of whether the user response positing field is filled in by the user which may be implemented with the API function calls previously described above for the Token s sixth code. The Access Control Server is further configured to read the 3 D secure datum from the password field or answer field of the returned page. This enables the 3 D Secure datum to be more easily incorporated in the existing 3 D secure system since no modifications to the Purchase Authentication Page are needed. The Access Control Server may test the value of returned password or answer field against both its stored value of the user s password answer or its stored value of the 3 D Secure datum in order to validate the purchase from which point is continues with the processing flow of the 3 D Secure System. Security at the token side for this modification can be increased by password protecting access to token as described above so that the user must unlock the token with a password before the token can perform this action.

In a second variation token is further configured to append the 3 D Secure datum to password that the user s enters into the password field after the user enters the password and before the page is sent to the Access Control Server. The Access Control Server which has knowledge of the user s password is further configured to separate the password and the 3 D Secure datum from the returned password field. Like the previous variation this variation enables the 3 D Secure datum to be more easily incorporated in the existing 3 D secure system since no modifications to the Purchase Authentication Page are needed. This variation can be readily implemented by having the Access Control Server add script code to the Purchase Authentication page that 1 adds a variable to the data object for the page s browser session said variable being configured to receive the 3 D Secure datum from Token and that 2 modifies the control of the page s submit button to include the action of appending the contents of this added variable to the contents of the posting field for the page s password answer before the control sends the page back to the Access Control Server. In this implementation token writes the 3 D Secure datum to the added variable before the page is sent back. It is also possible for token to replace the control script for the page s submit button to include new script that directs the browser to append the 3 D Secure datum to the contents of the posting field for the page s password answer before the control sends the page back to the Access Control Server. In this case the 3 D Secure datum can be incorporated into the modified script. The above changes can be accomplished by using well known programming commands of the web page language.

In the first variation the Purchase Authentication Page may be briefly visible to the user before token is able to return the page. This may cause some confusion for the user. To prevent this potential confusion a third variation similar to the first variation is provided. In the third variation the MPI or the Access Control Server sets the display characteristics of the Purchase Authentication Page so that the page is effectively invisible to the user. This can be accomplished by using well known programming commands of the web page language e.g. HTML XML Java script Perl script etc. that place the web page or page frame in an off screen location or make the display size of the page or frame very small. The Access Control Server then checks its records for any information for the transaction that it may have previously stored during action E described above and specifically looks for an indication in its records on whether token is present and communicatively coupled to computer . If such an indication is found the Access Control Server waits for a selected period of time for token to enter the 3 D Secure datum on the Purchase Authentication Page and to return the page. In this case the sixth code of the Token may take any of the above described forms which enter the 3 D secure datum in a dedicated posting field or in an existing posting field. If the Purchase Authentication Page is returned within the selected period of time the Access Control Server proceeds in the manner describe in the previous embodiments. If the page is not returned within the selected period of time the Access Control Server can send a message to the Internet browser to change the display characteristics of the page so that it is visible or resend the page with visible display characteristics. Also script code may be included in the page itself to change its display characteristics after a selected period of time to make the page visible to the user. In this way the Access Control Server can continue with the conventional 3 D Secure processing flow in the case that token is not able to post the 3 D Secure datum and or return the page.

In a fourth variation the Access Control Server performs a fraud risk assessment of the transaction based on the information that the Directory Server has provided to it about the transaction. If the assessed risk of fraud is below a selected threshold the Access Control Server presents the Purchase Authentication Page in hidden form to the user e.g. invisible to the user which may comprise maintaining the page in hidden form if the merchant plug in MPI previously placed the page in that form and allows token to process the Purchase Authentication Page as it does in the third variation. If the assessed risk of fraud is above the selected threshold Access Control Server presents the Purchase Authentication Page in visible form to the user and token provides the 3 D Secure datum to the Purchase Authentication Page but defers to the user to enter the password or answer in the existing field of the Page and to submit the Page to the Access Control Server. In this latter case the Access Control Server can send a message to the Internet browser to change the display characteristics of the page so that it is visible or resend the page with visible display characteristics. This variation enables improves the easy of use of the 3 D Secure System for low risks transactions while only imposing additional security tests for high risk transactions. The Access Control Server may look at several factors in generating the assessment of risk fraud for the transaction such as the transaction amount identity of the merchant IP address of the user s computer whether it is within a geographical location of the user etc. As describe below the Access Control server may comprise a data processor coupled to a computer readable memory and network services component and code disposed on the memory that directs the data processor to perform the above tasks for one or more of the above variations.

Validation Entity . Having described various embodiments and implementations of verification token various embodiments and implementations of validation entity are now described. Validation entity comprises a system having one or more servers coupled to a communications network that can receive a request from a verification token to process e.g. to validate the identification information that the token has read from a portable consumer device and to provide a 3 D Secure participation indication and a 3 D Secure datum to token and optionally a device verification value dCVV2 to the token and to payment processing network if the identification information passes one or more validation tests. One of the servers of entity is shown in the server comprises one or more processors electrically coupled to each of a tangible computer readable medium a user interface one or more databases and a networking facility the latter of which is coupled to first and second communications networks and . User interface comprises one or more video output devices e.g. displays screens and one or more input devices e.g. keyboard mouse trackball etc. which enable an administrator of entity to receive information from the server and to provide input to the server. Computer readable medium may comprise a combination of semiconductor memory and non volatile storage such as one or more disk drives and or non volatile memory.

Computer readable medium stores an operating system for the server which enables processes and applications to be run by processor s and enables codes for directing the operation of processor s to be run. The operating system provides services to these processes and applications and enables these processes and applications to access components of user interface portions of computer readable medium networking facility and other components of entity . The operating system may be full featured. Specifically the operating system provides one or more I O communications modules that enable processor s to communicate with user interface and databases . Each I O communications module has an application programming interface API with a collection of functions that a processor can call in order to access the components. The operating system of entity also comprises one or more network services modules that can access networking facility and set up communications sessions to entities on communications networks and and with SMS relay server . Such network services modules include Microsoft s Windows Communications Foundation e.g. .NET 3.0 .NET 4.0 etc. Apple s CFNetwork Framework the networking section of the Unix and Linux operating system kernels and the OS Services Layer and the Base Services Layer of the Symbian operating system and the like. Each of these network services modules can be non exclusive e.g. capable of serving more than one processor and more than one process application and each provides an application programming interface API which has a collection of functions that a processor can call in order to manage communications with another entity. With these API facilities a collection of API function calls can be readily constructed for a processor to execute that enables the processor to establish a communications channel with an entity on a communications network coupled to networking facility and to exchange messages and data with the entity. The above operating system modules and APIs all include instructions that direct the operation of processor s .

One or more databases may be configured as database servers which processor s can access via networking facility over a private communications network which is illustrated by the dashed line in . Validation entity conventionally has a clock for tracking time and dates for various applications. Clock may be a simple counter of seconds or fractions thereof that can be read by processor by an I O operation or may comprise a more complex arrangement of hardware or firmware that can provide the various components of the current date and time year month day hour minute and second in various registers that can be read by processor through the execution of one or more I O operations.

Validation entity can process identification information transmitted from a plurality of different verification tokens e.g. millions of tokens and can process any number of transmissions by a particular token . Validation entity applies one or more validation tests to verification token and or the identification information to obtain a level of confidence that the portable consumer device was actually presented to verification token to request 3 D Secure datum and optionally the dCVV2 value. When the one or more validation tests are passed and preferably when none of the tests are failed validation entity sends a 3 D secure participation indication and 3 D secure datum to verification token and optionally a dCVV2 value token and payment processing network along with the account number present in the identification. For these tasks validation entity may comprise code embodied on computer readable medium that directs data processor to communicate with computer and verification token using networking facility over communications network . This code may include instructions that establish a communications session with computer including the option of establishing an SSL session with mutual authentication and encryption based on a triple DES algorithm and instructions for sending and receiving messages to verification token through the communications session. Validation entity may further comprise code embodied on computer readable medium that directs data processor to receive encrypted information e.g. identification merchant and transaction information sent by verification token and code that directs data processor to decrypt the encrypted information. The information may be encrypted by a session key of an SSL session or by an encryption key stored in verification token and known to validation entity or may be doubly encrypted by both keys. The latter key may be uniquely assigned to the token. Validation entity may further comprise code embodied on computer readable medium that directs data processor to apply one or more validation tests as previously described above and to send the 3 D secure indication 3 D secure datum and dCVV2 value to token and to optionally send the dCVV2 value and account number to payment processing network if a selected number of validation tests are passed. Data processor may access databases in performing the one or more validation tests. The validation tests and codes therefor are described below in greater detail. These codes and codes described below for validation entity may be implemented in any number of programming languages. Furthermore one of ordinary skill in the art will be readily able to construct instructions to implement these codes in view of this disclosure without undue experimentation.

As described above a first validation test that validation entity may apply pertains to verifying that verification token is authentic. For this verification token may send its serial number to validation entity along with a test message encrypted by an encryption key with the test message and encryption key or corresponding decryption key being known to token and entity but not the general public and with the encryption key further being uniquely assigned to the token s serial number. Validation entity may access a database of token serial numbers and corresponding uniquely assigned encryption keys or corresponding decryption keys in one of databases and may determine whether verification token has sent a correct test message for the serial number that the token provided. The test message may be fixed or variable in the latter case it may be generated based on information known to both token and entity . The test message may be encrypted and decrypted by a triple DES algorithm which can be implemented by a number of well known sets of computer instructions using a single symmetric encryption key. The test message may also be encrypted by a first key of an asymmetric encryption key set at the verification token and decrypted by the second key the decryption key of the asymmetric encryption key set at validation entity which can be implemented by a number of well known sets of computer instructions. To validate the encrypted test message sent by token entity can decrypt the test message using the key that it has and can compare the decrypted test message to a set of acceptable messages for a match. Entity may also validate the encrypted test message in the reverse way by encrypting the set of acceptable messages and comparing the encrypted test message sent by token to its set of encrypted acceptable messages. If the sent test message is correct the first validation test can be deemed to have been passed otherwise the first validation test is deems to have failed.

To implement the above validation test validation entity may comprise code embodied on computer readable medium that directs data processor to receive one or more messages from verification token via networking facility that has the token s serial number and encrypted test message code that directs data processor to obtain from one of databases a key that has been assigned to the received serial number of the token and one or more acceptable messages that can be accepted as the correct test message and code that directs the data processor to validate the encrypted test message from the token using the encrypted test message the obtained key and the obtained one or more acceptable messages. The latter validation code may comprise code that directs data processor to decrypt the encrypted test message using the obtained key and code that directs data processor to compare the decrypted test message to the one or more acceptable messages to determine if the first validation test has been passed in the case of a match between the decrypted test message and an acceptable message or has been failed in the case of no such match . In addition or as another approach the above validation code may comprise code that directs data processor to encrypt the obtained acceptable messages with the encryption key for token as found in the database according to the token s serial number to compare the encrypted test message from token to the one or more encrypted acceptable messages to determine if the first validation test has been passed in the case of a match between the encrypted test message and an encrypted acceptable message or has been failed in the case of no such match . An acceptable message may be obtained by accessing it directly from one of databases or by generating it from information stored in one or more of databases . As an option if the first validation test is failed validation entity may record the serial number of the failed token and the source IP address from which the failed token made the request in one of databases . For this validation entity may further comprise code that directs data processor to obtain the source IP address from the request message and to store the source IP address and the token s serial number as one record or two separate records in one of databases which may be called the failed validation database . This information may be accessed as port of the second validation test described below. The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU arithmetic and logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As a second validation test validation entity may have a database in databases that tracks the serial numbers of verification tokens that have been used in fraudulent activities e.g. suspicious tokens and validation entity may check the serial number of verification token against this database. If a check of this database indicates that verification token has not been involved in fraudulent activity or is not otherwise suspicious the second validation test can be deemed to have been passed. To assist in tracking fraudulent activity back to a verification token validation entity may send the serial number of token along with the dCVV2 value and account number that it sends to payment processing network . If network later finds out that the transaction processed with the account number provided by token was fraudulent it can send a message to that effect to validation entity and entity may then enter the serial number of the token into the database of tokens used in fraudulent activities. To implement the second validation test validation entity may comprise code embodied on computer readable medium that directs data processor to receive a message from verification token via networking facility that has the token s serial number code that directs data processor to have the received serial number compared with serial numbers stored in a database of databases that stores serial numbers of suspicious tokens used in fraudulent transactions to determine if the second validation test has been passed no fraudulent activity or has been failed fraudulent activity . This code may further include instructions that direct processor to obtain the source IP address of the message from token and to compare the source IP address and the serial number of token to IP addresses and serial numbers in the failed validation database for a match. If a match is found the second validation test may be deemed to have been failed. Checking the token serial numbers and IP addresses in this way prevents retry attacks by fraudsters. The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As a third validation test validation entity may send a message to verification token requesting that token send it one or more pieces of computer specific information about computer such as the serial numbers of one or more of the following the computer s processor one or more of the computer s disk drives the computer s operating system. Validation entity may receive this information and check it against a database storing computer specific information of suspicious computers known to have been involved in fraudulent activity. If a check of this database indicates that the computer used by verification token has not been involved in fraudulent activity the third validation test can be deemed to have been passed. To assist in tracking fraudulent activity back to computer validation entity may send the serial number of token and the computer specific information along with the dCVV2 value and account number that it sends to payment processing network . If network later finds out that the transaction processed with the account number provided by token was fraudulent it can send a message to that effect to validation entity and entity may then enter the serial number of the token into the database of suspicious tokens used in fraudulent activities and the computer specific information into the database of suspicious computers known to have been involved in fraudulent activity. To implement the third validation test validation entity may comprise code embodied on computer readable medium that directs data processor to send a message to verification token requesting computer specific information if verification token has not sent such information beforehand without prompting code that directs data processor to receive one or more data messages from verification token via networking facility that have the token s serial number and the computer specific information and code that directs data processor to have the received computer specific information compared with computer specific information stored in a database of databases that stores computer specific information of suspicious computers used in fraudulent transactions to determine if the third validation test has been passed no fraudulent activity or has been failed fraudulent activity . The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

By conducting one or more of the above three validation tests validation entity can obtain some degree of confidence that the identification information sent by token is valid and can in some implementations provide the 3 D Secure datum to token and optionally the dCCV2 value to token and payment processing network . In this case verification token does not need to send the digital fingerprint or the variable datum of the portable consumer device in the identification information and does not need to obtain these datum from device .

To increase the degree of confidence validation entity may perform a fourth validation test that compares a digital fingerprint received in the identification information if present with the stored copy of the valid digital fingerprint that entity has for the account number specified by the identification information. If the digital fingerprints match to an acceptable degree e.g. the degree of similarity or correlation of the two fingerprints being above a selected level of similarity validation entity can deem the fourth validation test as being passed. The degree of similarity between the two fingerprints may be assessed by applying a correlation function to the two fingerprints. Such correlation functions are well known to the art. Before receiving identification information for a portable consumer device from a token the issuing bank for the device may provide validation entity with the valid digital magnetic fingerprint of the device which entity may store in one of databases . When validation entity receives identification information from a verification token for a specific portable consumer device it accesses databases for its record of the valid digital fingerprint and compares the received fingerprint against the valid digital fingerprint to assess a degree of similarity and to determine if the fourth validation test has been passed e.g. the degree of similarity between the two fingerprints is above a selected level or has been failed e.g. the degree of similarity between the two fingerprints is below the selected level . To implement the fourth validation test validation entity may comprise code embodied on computer readable medium that directs data processor to obtain the stored valid digital fingerprint for the account from one of databases and code that directs data processor to compare the received digital fingerprint and the stored valid digital fingerprint for similarity to determine if the forth test is passed sufficient similarity or failed not sufficient similarity . The latter code may comprise code that directs data processor to generating a value representative of the similarity between the two fingerprints by applying one or more correlation functions to the fingerprints and comparing the value against a selected level. Such correlation functions also known as probabilistic models are known to the credit card art. The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

To also increase the degree of confidence over that provided by the first three validation tests described above validation entity may perform a fifth validation test that compares a variable datum e.g. CVC3 dCVV cryptogram received as part of the identification information if present with a set of one or more acceptable values for the variable datum that validation entity has for the account number provided as part of the identification information. If the values match validation entity can deem the fifth validation test as being passed. There are number of ways that the variable datum can be configured to vary with time. As some examples the variable datum can be configured to have its value vary with each use of portable consumer device and device can provide a counter value in the datum or along with the datum. Validation entity or a payment processing network can use the counter value to determine what value the variable datum should have for the given counter value. This determination may be done based on an algorithm that is a function of the counter value and or other possible variables or a look up table whose entries are correlated to the counter value the table may be cyclically repeated . The algorithm may comprise one or more random number generators each of which accepts a starting seed value whose value can be selected to customize the algorithm to a particular portable consumer device . The values of the look up table may be based on the output of the algorithm. The variable datum may also be based on time date or other information known to both verification token and entity which may or may not use a counter value. Additional ways of generating the values of a variable datum are discussed in U.S. patent application Ser. No. 10 642 878 entitled Method and System for Generating a Dynamic Verification Value filed on Aug. 18 2003 and in U.S. patent application Ser. No. 11 764 376 entitled On Line Payment Transactions filed on Jan. 29 2008. Both of these applications are incorporated herein by reference in their entirely for all purposes. In some implementations there may be slight differences in the starting information that device and entity use in generating their respective datum values such as differences in the times of their clocks and entity may generate a set of acceptable datum values based on possible slight differences in the starting information and may compare the datum value received from device with each member of the set to determine if a match exists.

A cryptogram which typically has more characters than a CVC3 value or a dCVV value may be generated by an algorithm in a similar way as described above except that a piece of transaction information is usually included as an input to the algorithm. As previously described below if token seeks a cryptogram from a cryptogram enabled device it provides device with dummy transaction information which is known to both token and validation entity but not known to the general public. When the variable datum received by entity from token comprises a cryptogram which may be deduced from the character length of the variable datum or the account number of the device validation may look up the dummy transaction information in one of its databases based upon the serial number of token . Validation entity may determine the identity of the issuing bank for the device based on the device s account number and may request the current value of the card s Application Transaction Counter ATC from the issuing bank . Entity may then generate the cryptogram based on the dummy transaction information the ATC and other information used in the algorithm and compare the generated cryptogram with the cryptogram received from token . If the cryptograms match validation entity can deem the fifth validation test as being passed. In some implementations there may be slight differences in the ATC values that device and entity use in generating their respective cryptograms and entity may generate a set of acceptable cryptograms based on small incremental differences in the ATC value and may compare the cryptogram received from device with each member of the set to determine if a match exists. If a match cannot be found the fifth validation test is deemed to have been failed. As another approach validation entity may forward a request for the cryptogram s value to the issuing bank along with a copy of the dummy transaction information. Validation entity may then compare the cryptogram received back from the issuing back to that received from token to determine whether there is a match. As yet another approach validation entity may forward the dummy transaction information and the cryptogram received from token to the issuing bank with a request that the bank determine whether the cryptogram is valid or not and to send its determination to validation entity . Validation entity may then determine that the fifth validation test is passed if the bank sends an indication that the cryptogram received from token is valid and failed otherwise.

Before receiving identification information for a portable consumer device from a token the issuing bank for the device may provide validation entity with the look up table algorithm including any seed values or other data elements that the device uses to generate the device s variable datum e.g. CVC3 dCVV or cryptogram which entity may store in one of its databases . When validation entity receives identification information from a verification token for a specific portable consumer device it accesses its record of the look up table algorithm or other data elements for the specific device to determine its value or set of values for the device s variable datum and compares the received value for a variable datum e.g. CVC3 dCVV or cryptogram against its value or set of acceptable values for the variable datum to determine if the fifth validation test has been passed e.g. a match in values is found or has been failed e.g. a match has not been found . To implement the fifth validation test validation entity may comprise code embodied on computer readable medium that directs data processor to access the one or more stored data elements used to obtain the variable datum for the account from one of databases code that directs data processor to obtain one or more acceptable values for the variable datum from the one or more stored data elements and code that directs data processor to compare the received variable datum and the one or more acceptable values for a match to determine if the fifth test is passed a match is found or failed a match is not found . The code that directs data processor to obtain one or more acceptable values may be based upon the look up table method described above or any of the algorithm based methods described above. The codes may include instructions that direct data processor to determine if a received variable datum comprises a cryptogram and if so to obtain the dummy transaction information from a database based upon the serial number of the token. Depending upon the implementation for processing cryptograms the code may further include instructions that direct data processor to determine the identity of the issuing bank and to obtain an ATC value for the device from the bank and to generate one or more acceptable values of the cryptogram using the dummy transaction information the ATC value and other inputs used in the algorithm. Also the code may further include instructions that direct data processor to send the account information and the dummy transaction information to the identified issuing bank with a request for one or more acceptable cryptogram values. Also instead of directing processor to obtain one or more acceptable cryptogram values and to compare the cryptogram received from token to the acceptable cryptogram values the code may include instructions that direct data processor to obtain the dummy transaction information as described above to identify the issuing bank as described above to send the account information dummy transaction information and the cryptogram received from token to the identified bank with a request that the bank send back an indication of whether or not the cryptogram is valid and to pass or fail the fifth validation test based on the indication sent back by the issuing bank. The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

Validation entity may be configured to perform one or more of the above validation tests and may be configured to send the 3 D secure indication 3 D secure datum and dCVV2 value to token and to optionally send the dCVV2 value and account number to payment processing network if one or more of the tests are passes. Validation entity may comprise code embodied on computer readable medium that directs data processor to execute a selected one or more of the validation tests and track the pass fail results and code that directs data processor to send a message to the 3 D Secure System Directory Server Action C of with the account number PAN of device the merchant identifier and or the transaction identifier and optionally a 3 D Secure datum. If a 3 D secure datum is sent the entity has code embodied on computer readable medium that directs data processor to obtain the 3 D Secure datum. The 3 D Secure datum is preferably dynamic meaning that it changes value for each transaction fully dynamic or each set of transactions partially dynamic . In response as previously described above the Directory Server identifies the Access Control Server ACS for the PAN received from validation entity and forwards the account number PAN the merchant identifier and or the transaction identifier and optionally a 3 D Secure datum to the identified Access Control Server ACS . The Access Control Server ACS responds to the Directory Server by sending an indication of whether the card number is participating in the 3 D Secure service the participation indication and by sending a 3 D Secure datum if one was not previously provided by validation entity . The Access Control Server also saves the account number PAN the merchant identifier and or the transaction identifier and the 3 D Secure datum in a computer record for later reference. the Directory Server then forwards to validation entity the participation indication and the 3 D Secure datum if one was not previously provided by validation entity . Validation entity includes instructions that direct processor to receive this message from the Directory Server which may include an indication of the PAN such as the PAN itself the participation indication and the 3 D Secure datum if entity did not previously generate it. The code then directs processor to send the participation indication the 3 D secure datum and optionally the dCVV2 value described below to verification token . The code may include instructions that direct processor to determine if the received participation indication indicates a non participation status if so the code directs processor to modify the 3 D Secure datum to indicate a non participation status in the case when validation entity initially generated the 3 D secure datum.

Validation entity may obtain the 3 D Secure datum by obtaining it from an entity of the 3 D Secure system such as from an Access Control Server or by generating the datum itself. The 3 D Secure datum may be generated according to any desired method which one of ordinary skill in the art can readily implement without undue experimentation. The 3 D Secure datum may be generated by using a pseudorandom number generator or by using an algorithm that takes a set of inputs. The advantage of the algorithm is that it can used by several entities of the 3 D secure datum to recreate the 3 D Secure datum from the base inputs in order to verify the authenticity of the 3 D Secure datum. The algorithm may comprise a hashing function that uses the inputs as variables to the hashing function. The inputs may include one or more of the following a dynamic value and or fixed value from the token e.g. a incrementing counter value a fixed serial number a dynamic value and or fixed value from portable consumer device e.g. the device s variable datum the fixed PAN a dynamic and or fixed value from the issuer bank e.g. counter value bank name or identifier a dynamic or fixed value from computer e.g. dynamic IP address fixed CPU serial number a dynamic or variable value from Merchant e.g. transaction amount merchant counter merchant name or identifier a dynamic or variable value from Validation entity . Validation entity comprises code that directs its data processor to obtain or generate the datum. The code can be implemented with conventional I O instructions memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As indicated above validation entity may be further configured to obtain and send a dCVV2 value along with the 3 D Secure datum. Since the dCVV2 value is being sent to both the merchant relayed through verification token and the payment processing network which may forward it to the issuing bank validation entity may use any method to generate the dCCV2 value and need not use the method used by portable consumer device to generate the variable datum e.g. the CVC3 or dCVV . Validation entity may generate the dCVV2 values using a pseudo random number generator or a look up table or a sequential counter such as when distributing the values from that counter over different accounts . The dCVV2 generation process can be done on a per transaction basis fully dynamic or for a group of transactions semi dynamic the latter being for a particular device or a group of devices . If two or more devices are assigned under a common account number the identification information sent by token may comprises a device identifier as well as an account number and validation entity may use the device identifier to distinguish between the devices and to generate different dCVV2 values for the devices that are under a common account number. Validation entity may use a particular dCVV2 value for a particular device over a selected time period such as three days and then select another dCVV2 value for the particular device for the next selected time period and so on. Moreover validation entity may receive the dCVV2 values to use during the selected time periods from the issuing bank of the device in advance of the selected time periods and store them for later use as determined by entity s clock. This permits validation entity to omit the action of sending the dCVV2 values to payment processing network . The device verification value provided by validation entity may have the same format as the CVC3s and dynamic CVVs dCVVs output by existing smartcard credit cards e.g. a string of 3 or 4 numbers . As another approach validation entity may send a message to the issuing bank for portable consumer device to request a value to provide as the dCVV2 value this request may include the account number and any device identifier. The above codes and actions can be implemented with conventional I O instructions memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As described above validation entity may send to token the user s shipping address information and or billing address information that has been previously associated to device . The association may be stored in a database of validation entity or at the issuing bank for device . Validation entity may further comprise code that directs data processor to obtain address information for the consumer account indicated by the account number in the received identification information either from a database or from an issuing bank and to send the address information to token along with the device verification value if a selected number of validation tests have been passed as described above. The above codes and actions can be implemented with conventional I O instructions database function calls network function calls memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As indicated above validation entity may be configured to send a dynamic account number dPAN to verification token and the payment processing network along with 3 D Secure datum and the dCVV2 value. Validation entity may contact the issuing bank for device to obtain the dPAN or may read it from a list of dPANs previously sent to entity by bank or created by entity or network or may generate it from an algorithm previously provided to entity by bank . Validation entity may comprise code embodied on computer readable medium that directs data processor to execute these actions as desired by the issuing bank. When payment processing network received the dCCV2 value dPAN value and the account number for device it may forward all three datum to the issuing bank so that the issuing bank can correlate the dPAN to the account number of device . The above codes and actions can be implemented with conventional I O instructions memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

Verification entity may further comprise code that directs processor to send an alert text message to the personal communication device of user or send an alert e mail message to an e mail account of user when one or more of the following events occurs 1 when verification token initiates communications with entity 2 when verification token reads a portable consumer device of user 3 when verification entity receives identification information from a portable consumer device or a verification token associated with user 4 when verification entity validates said identification information 5 when verification entity sends a 3 D Secure datum and or a dCVV2 value to verification token and 6 when verification entity denies a request for a 3 D Secure datum and or a dCVV2 value. The alerts sent by entity may include information related to the events that triggered the alerts such as a portion of the account number involved. The alert text messages may be sent from networking facility to an SMS relay server that is coupled to one of communications networks and along with the phone number or network address of the user s communication device . The SMS relay server has an interface to one or more mobile communication networks and can relay the text message to the phone number or network address provided by processor . Validation entity may comprise the relay server. Email alerts may be sent directly to the user s e mail account from networking facility . For this networking facility may comprise a conventional mail agent which is well known to the art.

Validation entity may comprise a website accessible to the user that enables the user 1 to create a password protected management account associated with the serial number of the token the latter of which may be provided on a slip of paper originally sent with the token 2 to associate an e mail address to be used for one or more of the above described alerts 3 to associate a mobile number and or URID e.g. network address of the user s communications device to be used for one or more of the above described alerts and 4 to select one or more of the above described alert conditions The website may also enable the user to provide and associate the account numbers for one or more of the user s devices with the password protected account and may further enable the user to associate the e mails and mobile numbers for the alerts to particular devices according to their account numbers. The website may also enable the user to associate a shipping address and or billing address to one or more specific device account numbers which validation entity may provide to token for each 3 D Secure datum and or dCCV2 request made for such a specified device account number. This association may include an option that the user can select for a specified device account that directs entity to obtain the address information from the issuing bank for the specified device account. The website may also enable the user to associate a shipping address and or billing address to the token itself which validation entity may provide to token for each validation request in which a shipping address and or billing address has not been associated to the device account number contained in the validation request.

One of databases may be assigned to hold the above described password protected accounts of the users. When validation entity receives a validation request from verification token code in entity can direct processor to query this database to find the user s password protected account e.g. identify the user from the token s serial number and or the account number sent in the identification information to determine what text message alerts and emails are to be generated and sent based on the parameters stored in the password protected account to identify the mobile phone number or universal resource identifier e.g. network address of the personal communication device to which to sent the messages and or to identify the email address to which to send the messages and to send the determined messages to the identified destinations. One or more alerts pertaining to a particular validation request may be combined together into a single text message or email to the user. Entity can also have code that directs data processor to determine from the account record if any shipping address information or billing address information is to be sent with the validation fulfillment message e.g. message having the 3 D Secure datum and or dCVV2 value by looking up the settings that the user may have provided for the device account number indicated in the dCVV2 request message and to send the address information to token according to the found settings. The above codes and actions can be implemented with HTML page codes XML page codes and the like e.g. web pages conventional I O instructions memory access instructions database API function calls CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

In cases where validation entity sends a dPAN to a verification token it may send an e mail alert and or text alert to the user providing the user with a transaction number that has been associated with the dPAN. The transaction number can enable the user to more easily return goods purchased in the transaction. The transaction number is different from the dPAN and the account number but enables the transaction conducted with the dPAN to be traced back to the merchant and the issuing bank. For this entity may comprise code that directs data processor to access the user s management account based on the account number obtained from the identification information received from token to obtain a mobile phone number or universal resource identifier e.g. network address of a personal communication device associated with the account number or an email address associated with the account number and to which the transaction number is to be sent. Entity may further comprise code that directs data processor to send the transaction number along with the dPAN date time and dCVV2 value to the obtained phone number or universal resource identifier of the personal communication device or the obtained email address. The code also directs data processor to send this information to payment processing network and or issuing bank along with the account number for correlation purposes. The code may also direct data processor to send the transaction number to token and token may have code that directs its processor to enter this information in a visible or hidden field of the merchant s checkout page. Token s code for this may be implemented in the same way as the code for entering the dCVV2 value. The above codes and actions can be implemented with database function calls conventional I O instructions memory access instructions database API function calls CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

It may be appreciated that some implementations of verification token may be configured to work with selected consumer payment devices such as those issued by a selected bank or configured to work with a selected merchant website .

In yet further implementations verification token may contain the URID of validation entity which handles validation requests for several different co branded portable consumer devices . In addition each of these co branded devices may hold a URID to a co branding merchant. The merchant URID is read by verification token and provided to a validation entity along with the device s identification information. Validation entity can send the validated identification information to the merchant URID.

Embodiments of the invention are not limited to authentication systems involving transactions. The same approach could be applied for other authentication systems. For example embodiments could be used to authenticate a user using an online banking application. A cardholder may enter his user ID into a banking website. The cardholder can then present his or her portable consumer device to a verification token. The banking website can validate the User ID and the token credentials by communicating with a validation entity.

Embodiments of the invention are not limited to the above described embodiments. For example although separate functional blocks are shown for an issuer payment processing system and acquirer some entities perform all of these functions and may be included in embodiments of invention.

Access Control Server Embodiments. An exemplary access control server may have the same components operating system and network services and other software services as validation entity described above. This illustrated in . The description of the components and operating system and services of entity are incorporated here by reference and applied to the Access Control Server shown in . The ACS has various codes disposed on the tangible computer readable medium directs the operation of the ACS s data processor to perform the various tasks described above. A specific description of some of these codes is provided here. A first code directs the ACS s data processor to send a Purchase Authentication Page to a computer the Purchase Authentication Page having a user response posting field to receive a response from a user. This code may comprise code that generates conventional secure web pages. A second code directs the ACS s data processor to receive a returned Purchase Authentication Page from the computer the returned Purchase Authentication Page having a user response disposed in the user response posting field and a 3 D secure datum. These codes may comprises the same instructions that entity uses to receive communications as described above. A third code directs the ACS s data processor to compare at least a portion of the received user response to a stored user response to make a first determination of whether a match exists. A fourth code directs the ACS s data processor to compare the received 3 D secure datum to a stored 3 D secure to make a second determination of whether a match exists. A fifth code directs the data processor to generate a Payer Authentication Response message based on at least the first and second determinations. The third fourth and fifth codes may be implements by ALU arithmetic instructions ALU control operations memory access instructions and networking instructions. For some of the variations the ACS may comprise a code that directs the data processor to obtain the received 3 D secure datum from the user response posting field of the returned Purchase Authentication Page or a portion thereof. the ACS may comprise a code that directs the data processor to send the Purchase Authentication Page with page display parameters with the Page that cause the Page to not be visible or fully visible on the computer s display.

Another exemplary access control server may comprises the following codes code that directs a data processor to send a Purchase Authentication Page to a computer with page display parameters that cause the Purchase Authentication Page to not be visible or to not be fully visible on the computer s display the Purchase Authentication Page having a user response posting field to receive a response from a user code that directs the data processor to receive a returned Purchase Authentication Page from the computer the returned Purchase Authentication Page having a 3 D secure datum code that directs the data processor to compare the received 3 D secure datum to a stored 3 D secure to make a determination of whether a match exists and code that directs the data processor to generate a Payer Authentication Response message based on at least the determination.

Another exemplary access control server may comprises the following codes A computer program product embodied on a computer readable medium the product comprising code that directs a data processor to send a Purchase Authentication Page to a browser window or browser frame of a computer which is not be visible or not be fully visible on the computer s display the Purchase Authentication Page having a user response posting field to receive a response from a user code that directs the data processor to receive a returned Purchase Authentication Page from the computer the returned Purchase Authentication Page having a 3 D secure datum code that directs the data processor to compare the received 3 D secure datum to a stored 3 D secure to make a determination of whether a match exists and code that directs the data processor to generate a Payer Authentication Response message based on at least the determination.

Another exemplary access control server may comprises the following codes code that directs the data processor to obtain a risk assessment of a 3 D Secure System transaction associated with the Purchase Authenticate Page code that directs the data processor to send page display parameters with the Purchase Authentication Page that cause the Purchase Authentication Page to not be visible or to not be fully visible on the computer s display if the risk assessment is below a threshold value and code that directs the data processor to send page display parameters with the Purchase Authentication Page that cause the Purchase Authentication Page to be visible on the computer s display if the risk assessment is above the threshold value.

Another exemplary access control server may comprises the following codes code that directs a data processor to obtain a risk assessment of a 3 D Secure System transaction code that directs the data processor to generate a Purchase Authenticate Page for the D Secure System transaction code that directs the data processor to send the Purchase Authentication Page to a computer with page display parameters that cause the Purchase Authentication Page to not be visible or to not be fully visible on the computer s display if the risk assessment is below a threshold value and code that directs the data processor to send the Purchase Authentication Page to the computer with page display parameters that cause the Purchase Authentication Page to be visible on the computer s display if the risk assessment is above the threshold value.

The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU arithmetic and logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation. Also in may be appreciated that the codes carry out method actions which are summarized by one or more of the attached claims.

Token Verification Entity Gateway Embodiments. In each of the embodiments described herein the communications between computer and validation entity may be facilitated by and or conveyed through a gateway e.g. a proxy server server entity etc. that is disposed between computer and validation entity . Such a gateway is shown at in . Gateway may act as an intermediary between a plurality of verification tokens A B . . . and their associated computers A B . . . on the one side and a plurality of validation entities A B . . . on the other side. Tokens A B . . . may be constructed and configured the same as token shown in and may interact with respective computers A B . . . respective users A B . . . and respective portable consumer devices A B . . . . Computers A B . . . may be the same as computer shown in and may be coupled to the first communications networks as described above. First communications network second communications network merchant websites acquiring banks issuing banks and payment processing network are coupled to one another as described above. First and second communications networks are also coupled to a plurality of validation entities A B C . . . each of which may be constructed and configured the same as validation entity shown in .

In the below discussion of the embodiments and implementations shown in a reference number without a suffix A B or C generically refers to each of the suffixed items e.g. entity refers to each of A B C .

Gateway may receive one or more initial communications from one of verification tokens A B . . . via one of computer A B . . . in communication with the token and may determine from information in the initial communication s an appropriate one of a plurality of validation entities A B C . . . to use to fulfill the token s request for a dCVV2 value. For example each verification token A B . . . may be configured to operate with portable consumer devices issued by many different issuing banks or other such entities and one or more of the validation entities may be configured to process requests from portable consumer devices issued by respective issuing banks or other such entities. Gateway may determine an appropriate one of validation entities A B C . . . based upon the identification information that the token read from a portable consumer device and sent to the gateway in an initial communication. For example a portion of the account number in the identification information may comprises an unique identifier assigned to the bank that issued the portable consumer devices from which the identification information was read.

In one implementation after gateway has determined an appropriate validation entity for the token s request the gateway may redirect the token to conduct further communications with the determined appropriate validation entity or may direct the determined validation entity to contact the token to conduct further communications. In another implementation all communications between the verification token and the determined appropriate validation entity may be conveyed through gateway after the gateway has initially determined the identity of the appropriate validation entity based upon one or more initial communications with the token . This latter implementation may comprise relatively simple passing through of communications between the token and the appropriate validation entity with minimal processing by gateway or may comprise having the gateway virtually presenting itself as the appropriate validation entity to the verification token. Such virtual presentation may involve gateway decrypting each message from the verification token communicating with the appropriate validation entity to formulate a response to the token s message and encrypting and sending a response message to the verification token. In each of the above implementations and in other implementations gateway may also conduct one or more validation tests on behalf of the appropriate validation entity particularly those related to validating the verification token. In this case the gateway does not need to send to the determined appropriate validation entity those communications it receives from the token that pertain to validation tests that the gateway is handling. Gateway may be associated with or operated by payment processing network or the owner thereof. It may be appreciated that in each of these implementations Gateway acts as an entity that can provide a 3 D secure datum and a device verification value dCVV2 value to token just as in the case that validation entity can provide a 3 D secure datum and a device verification value to token when entity is directly contacted by token .

Referring to gateway comprises a system having one or more servers coupled to a communications network that can receive a request from a verification token to process as described above. One of the servers of gateway is shown in the server comprises one or more processors electrically coupled to each of a tangible computer readable medium a user interface one or more databases and a networking facility the latter of which is coupled to first and second communications networks and . User interface comprises one or more video output devices e.g. displays screens and one or more input devices e.g. keyboard mouse trackball etc. which enable an administrator of gateway to receive information from the server and to provide input to the server. Computer readable medium may comprise a combination of semiconductor memory and non volatile storage such as one or more disk drives and or non volatile memory.

Computer readable medium stores an operating system for the server which enables processes and applications to be run by processor s and enables codes for directing the operation of processor s to be run. The operating system provides services to these processes and applications and enables these processes and applications to access components of user interface portions of computer readable medium networking facility and other components of entity . The operating system may be full featured. Specifically the operating system provides one or more I O communications modules that enable processor s to communicate with user interface and databases . Each I O communications module has an application programming interface API with a collection of functions that a processor can call in order to access the components. The operating system of entity also comprises one or more network services modules that can access networking facility and set up communications sessions to entities on communications networks and and with SMS relay server . Such network services modules include Microsoft s Windows Communications Foundation e.g. .NET 3.0 .NET 4.0 etc. Apple s CFNetwork Framework the networking section of the Unix and Linux operating system kernels and the OS Services Layer and the Base Services Layer of the Symbian operating system and the like. Each of these network services modules can be non exclusive e.g. capable of serving more than one processor and more than one process application and each provides an application programming interface API which has a collection of functions that a processor can call in order to manage communications with another entity. With these API facilities a collection of API function calls can be readily constructed for a processor to execute that enables the processor to establish a communications channel with an entity on a communications network coupled to networking facility and to exchange messages and data with the entity. The above operating system modules and APIs all include instructions that direct the operation of processor s .

One or more databases may be configured as database servers which processor s can access via networking facility over a private communications network which is illustrated by the dashed line in . Gateway conventionally has a clock for tracking time and dates for various applications. Clock may be a simple counter of seconds or fractions thereof that can be read by processor by an I O operation or may comprise a more complex arrangement of hardware or firmware that can provide the various components of the current date and time year month day hour minute and second in various registers that can be read by processor through the execution of one or more I O operations.

Gateway may comprise code embodied on computer readable medium that directs data processor to communicate with a computer and an associated verification token using networking facility over communications network . This code may include instructions that establish a communications session with computer including the option of establishing an SSL session with mutual authentication and encryption based on a triple DES algorithm and instructions for sending and receiving messages to verification token through the communications session. Gateway may further comprise code embodied on computer readable medium that directs data processor to receive encrypted identification information sent by verification token and code that directs data processor to decrypt the encrypted identification information. The identification information may be encrypted by a session key of an SSL session or by an encryption key stored in verification token and known to gateway or may be doubly encrypted by both keys. The latter key may be uniquely assigned to the token as described above. Gateway may further comprise code embodied on computer readable medium that directs data processor to determine from the received identification information and or the token s identity e.g. the token s serial number the appropriate one of the validation entities A B C . . . to be used for further processing of the request from verification token . For this data processor may access one of databases for a correlation list that relates identification information or portions thereof to validation entities and or for a correlation list that relates token identifiers to validation entities and may then compare the information received from the token with the correlation list s to determine the appropriate one of the validation entities . Gateway may further comprise code embodied on computer readable medium that directs data processor to apply one or more validation tests as previously described above and to continue processing the request from token if a selected number of validation tests are passed. Various ways of continuing the processing are described below in various possible implementations of gateway . The above codes for gateway and codes for gateway described below may be implemented in any number of programming languages. Furthermore one of ordinary skill in the art will be readily able to construct instructions to implement these codes in view of this disclosure without undue experimentation.

In one implementation gateway may further comprise code embodied on computer readable medium that directs data processor to send a communication to token by way of its associated computer informing the token to contact the determined appropriate validation entity to obtain a dCVV2 value. This communication may include a URID for the determined appropriate validation entity. Token may then communicate with the determined appropriate entity as described above and no changes to entity are needed. In this implementation of gateway the code may further direct data processor to send a communication to the determined appropriate validation entity that informs the entity of the request from the token along with an indication of the identification information sent by token and informs the entity that the token will be contacting it for a dCVV2 value for the identification information as sent to gateway by the token . This communication by gateway can serve as an additional security measure that assures the appropriate validation entity that the subsequent contact by token is legitimate.

In another implementation gateway may further comprise code embodied on computer readable medium that directs data processor to send a communication to the determined appropriate validation entity with an indication of the identification information received from the verification token and with a request for the validation entity to generate a 3 D secure datum and a dCVV2 value for the identification information and to send the 3 D secure datum and the dCVV2 value to the verification token by way of its associated computer . This communication may include a URID for the verification token . The codes of the validation entity previously described above may be augmented to direct the entity s processor to receive above described communication from gateway and to initiate communications with the requesting token . The codes of validation entity need not need to direct the entity s processor to receive the identification information from the requesting token as that may have been provided to the entity by gateway however as an added security measure the requesting token may provide the identification information to entity and the entity may include the code to receive the identification information from the token. In this implementation of gateway the code for gateway may further direct data processor to send a communication to the verification token via the associate computer informing the token that the determined appropriate validation entity will be communication with it to potentially send a dCVV2 value.

In yet another implementation of gateway the gateway may further comprise code embodied on computer readable medium that directs data processor to 1 send the initial communication from the requesting token and or an indication of the identification information sent by the requesting token to the determined appropriate validation entity to obtain a 3 D secure datum and a dCVV2 value 2 to receive back a 3 D secure datum and a dCVV2 value from the appropriate validation entity and 3 to send the 3 D secure datum and the dCVV2 value to the verification token . This implementation of gateway enables a validation entity to omit the code for establishing communications with the computer used by the requesting verification token that task may be handled by gateway . Those codes of entity described above that direct communications with token may be modified to direct the communications to gateway instead. This implementation of gateway enables the requests from many tokens to be grouped together for more efficient handling by entity . In addition since gateway is virtually presenting itself to the verification token as a validation entity gateway can serve as an Internet firewall and protect the validation entities A. B. . . . from malicious Internet attacks.

In yet another implementation gateway handles the initial communications with token to determine the appropriate validation entity and then hands over the communication channel to the determined validation entity to complete the fulfillment of the token s request. All communications between the requesting token and the determined entity may be conveyed through gateway . If gateway has previously established an SSL session with the requesting token gateway may send the session key s and protocols to the determined entity so that the entity can take over the session e.g. take over encrypting the communications to the token with the session keys and protocols . For this implementation gateway may further comprise code embodied on computer readable medium that directs data processor to 1 send a communication to the determined appropriate validation entity with an indication that it is to handle further communications with the requesting token as routed through gateway and optionally session information which may include SSL session keys and protocols 2 to forward further communications that gateway receives from the requesting token to the determined entity and 3 to forward communications that gateway receives from the determined entity to the requesting token . For this gateway may maintain a table in memory or one of its databases that tracks channels that are currently being passed through gateway with each record in the table having the identity of the requesting token the determined validation entity and session information. To carry out the above second action the code may direct processor to access the channel table to locate the determined entity for the requesting token an to then forward the communication packets from the requesting token to the entity that was located in the table. Gateway may encapsulate these forwarded communication packets to preserve their header information and may include an indication of the identity of the requesting token for the benefit of the determined entity . To facilitate the above third action the determined validation entity may send its communication packets for the requesting token to gateway in encapsulated form optionally along with an identifier that identifies the requesting token in the capsule. Gateway can then include code that directs its data processor to extract from the encapsulated packet the token identifier and the packet that is to be sent to the requesting token . If the extracted packet already has the destination address for the computer coupled to the requesting token then the encapsulated packet does not need to include the identity of the requesting token. If the extracted packet does not include the destination address the code of gateway may direct data processor to determine the destination address from the extracted token identifier and the above described table of channel information and to insert the determined destination address into the extracted packet before sending it to computer . This action can provide an additional layer of security. In addition since gateway is virtually presenting itself to the verification token as a validation entity gateway can serve as an Internet firewall and protect the validation entities A. B. . . . from malicious Internet attacks.

The above implementation of gateway enables a validation entity to omit the code for establishing communications with the computer used by the requesting verification token that task is handled by gateway and to include code that directs processor to receive the indication from gateway that it is to handle further communications with the requesting token as routed through gateway and optionally to receive the session information for the further communications which may include SSL session keys and protocols . Those codes of entity described above that direct communications with token may be modified to direct the communications through gateway . For this validation entity may further comprise code embodied on computer readable medium that directs data processor to create and maintain a table in memory or one of its databases that tracks channels that are have been handed over from gateway each record in the table may have the identity of the requesting token the identification information of gateway and the session information. The communication codes of entity may be modified to receive encapsulated communication packets from gateway to extract from these packets the communication packets from token and to consult the above table to find the identity of token and session information if such cannot be determined from source address of the extracted communication packets or any token identity sent by gateway in the capsulated packets. The communication codes of entity may also be modified to encapsulate the communication packets for token in packets to be sent to gateway optionally along with an identifier that identifies the requesting token in the capsule and to send the encapsulated communication packets to gateway .

3 D Secure Gateway Embodiments. The Interfacing capability of gateway may instead be used to provide an intermediary interface between many entities of the 3 D Secure System as illustrated in . Such an intermediary interface has the ability to track a large segment of transactions conducted in the 3 D Secure System for the purposes of security and analysis. It should be pointed out that the components illustrate in may be interconnected to one another according to the topology shown in . These entities are physically separated from one another and have separate and distinct network addresses on the communication networks and . A number of actions are illustrated in . In action user present portable consumer device to token to obtain the card s identification information and to obtain the 3 D Secure datum and dCVV2 value from validation entity as described above. In action user provides with the optional help from token as described above the payment information to merchant . In action merchant s Merchant Server Plug in MPI sends the device s card number account number PAN and other user device information if applicable to the Directory Server in a verification request VEReq . In action the Directory Server sends a secure communication to gateway providing the information it has received from the merchant s MPI along with a request that it determine if the user s device e.g. PAN participates in the 3 D Secure System e.g a verification request or VEReq . Gateway is configured to receive this request from the Directory Server which is normally sent to the Access Control Server directly. Based on the value of the PAN that merchant provides it and routing information provided by the Directory Server gateway determines the identity of Access Control Server ACS that handles 3 D Secure requests for device e.g. for the PAN . In action gateway sends a secure communication to the determined Access Control Server providing the device s PAN and a request that it return a determination of whether the PAN participates in e.g. is enrolled in the 3 D Secure System Verification request or VEReq . In action the determined Access Control Server makes this determination and sends a verification response to gateway that includes the determination. In action gateway sends this verification response containing the determination to the Directory Server in a secure communication which in turn sends it to merchant s MPI in action as a Verification Response VERes . If the determination indicates non participation no further action under the 3 D system and gateway occurs. If the determination indicates participation gateway creates an Authentication record to for further processing the Record including details about the Verification Request VEReq and the Verification Response VERes information provided in the request and response including the PAN the identity of the Access Control Server that handles 3 D Secure requests for the PAN and the date and time of the request. This Authentication Record will be accessed and augmented with further information in subsequent actions described below related to fulfilling a Payer Authentication Request PAReq . If the determination indicates participation gateway also includes in the verification response sent in action a uniform resource locator URL to itself to which the MPI can contact to begin the 3 D Secure Payer Authentication process with user . This URL may include a parameter or other indication that identifies the Authentication Record that gateway just created for the PAN.

Merchant s Merchant Plug In MPI opens a communication frame or window on the cardholder s browser on computer which will be subsequently used to present the Purchase Authentication Page to the user. In action merchant s MPI sends a Payer Authentication Request PAReq to gateway via the communication frame or window that the MPI opened on the cardholder s browser. The MPI s PAReq includes the URL to gateway provided in the VERes communication that the MPI received from the Directory Server and the URL to the communication frame or window on the user s computer . Gateway uses the PAN provided in the MPI s PAReq and or the parameter or indication in the URL to Gateway as described above to locate its Authentication Record for the Payer Authentication Request PAReq and from that record determines the Access Control Server that handles Payer Authentication Requests for the PAN provided in the MPI s PAReq. In action gateway sends a modified Payer Authentication Request modified PAReq to the determined Access Control Server indicated in the Authentication Record. The modified PAReq contains the same information as the MPI s PAReq but instead provides a URL to Gateway rather than the URL to the communication frame or window on the user s computer . The URL to Gateway may include a parameter or indication that identifies the Authorization Record for the request on Gateway . Gateway records receipt of the MPI s PAReq and transmission of the modified PAReq including the details dates and times of these requests in the Authentication Record for the request.

In response to receiving the modified PAReq from Gateway the Access Control Server generates the Purchase Authentication Page including a blank hidden posting field for a 3 D Secure datum if appropriate and sends it to the URL for Gateway that was provided in the modified PAReq rather than to the communication frame or window on the user s computer . This is shown as action in . Gateway receives the Purchase Authentication Page from the Access Control Server. The URL that Gateway receives from the Access Control Server preferably includes a parameter or indication that identifies the Authorization Record on Gateway for the request so that Gateway can readily locate the record and obtain from there the URL to the communication frame or window on the user s computer . Gateway then forwards the received Purchase Authentication Page to the communication frame or window on the user s computer . This is shown as action in . Gateway then records receipt of the ACS s Purchase Authentication Page and transmission of the Purchase Authentication Page to computer including the details dates and times thereof in the Authentication Record for the request.

At this point user and token fill in the Purchase Authentication Page as described above such as with token entering the 3 D Secure datum into the hidden posting field that was previously generated by the Access Control Server and the user entering a password in a password posting field. The filled in page is then returned to Gateway . This is also shown as action . The URL that Gateway provided to computer may include a parameter or indication that identifies the Authorization Record for the request on Gateway so that Gateway can locate the Authorization Record. Gateway examines the filled in Purchase Authentication Page to see if a 3 D Secure datum is present. If the presence of the 3 D Secure datum is detected Gateway determines the identity of the validation entity for portable consumer device such as by looking at the PAN recorded in the Authorization Record and sends a secure communication to validation entity to request the 3 D Secure datum that it last sent to computer for device e.g. the last 3 D secure datum provided for the PAN . This is illustrated by Action in . The Validation entity returns a 3 D secure datum to Gateway which is also illustrate by action . Gateway records the receipt of the filled in Purchase Authentication Page from computer and the receipt of the 3 D secure datum from validation entity in the Authentication Record for the request.

Gateway then compares the 3 D Secure datum received in the filled in Purchase Authentication Page from computer to the 3 D Secure datum received from validation entity . Gateway sends the filled in Purchase Authentication Page to the Access Control Server with an indication of whether the two 3 D secure datums matched where the indication may be sent in a hidden status field of the filled in Purchase Authentication Page and stores an indication thereof in the Authentication Record for the request. This is also indicated as action in . A matching of the datums provides a degree of assurance to the Access Control Server that the user s device was actually present during the transaction. The Access Control Server can then generate the Purchase Authentication Response PARes according to its criteria which may include weightings that depend upon whether the datums matched and upon whether the password answer was correct. Typically the ACS will generate a positive PARes when the password answer is correct and the datums matched and will generate a negative PARes if the password answer is incorrect regardless of whether the datums matched. If the datums do not match but the password answer is correct the ACS may generate a positive PARes for a transaction amount below a threshold level and a negative PARes for a transaction amount above a threshold level. If Gateway does not find a 3 D secure datum in the filled in Purchase Authentication Page it may send an indication of that fact to the ACS along with the filled in Purchase Authentication Page and the ACS may generate the PARes according to a set of conventional criteria.

After it generates the PARes the Access Control Server sends the PARes to Gateway . This is indicated as action in . Gateway receives this with an indication or URL parameter that identifiers the Authorization Record. Gateway records the PARes in the Authorization Record and locates from the record the URL to the communication frame or window on the user s computer . Using this URL Gateway then sends the received PARes to the communication frame or window on the user s computer . This is illustrated as action in . Merchant s MPI receives the Payer Authentication Response PARes by way of the communication frame or window on the user s computer . The MPI validates the PARes signature either by performing the validation itself or by passing the message to a separate Validation Server . If appropriate the merchant proceeds with the authorization exchange with its acquirer . The acquirer processes the authorization request with the payment processing network and returns the authorization response to the merchant .

With that description it may be appreciated that Gateway can be readily constructed to operate in the above manner with the following codes embodied on memory that direct its data processor to perform various actions. The following codes handle the processing of the Verification Request VEReq and Verification Response VERes . A first code directs data processor to receive at gateway server a verification request from a 3 D Secure Directory Server for a determination of whether a personal account number is enrolled in a 3 D Secure system. A second code directs data processor to determine the identity of a 3 D Secure Access Controller that handles verification requests for the personal account number of the received verification request. A third code directs data processor to send a communication to the determined Access Control Server providing personal account number and a request that it return a verification response that includes an indication of whether the personal account number is enrolled in a 3 D Secure system. A fourth code directs data processor to receive at the gateway server a verification response from the determined Access Control Server to modify the verification response to include a uniform resource locator pointing to the gateway server and to send the modified verification response to the Directory Server.

The following codes handle the processing of the Payer Authentication Request PAReq a Purchase Authentication Page and Purchase Authentication Response PARes . A fifth code directs data processor to receive at the gateway server a Payer Authentication Request generated by a 3 D Secure Merchant Plug in and sent by a user computer to modify the Payer Authentication Request to include a uniform resource locator to the gateway server and to send the modified Payer Authentication Request to the determined Access Control Server. A sixth code directs data processor to receive at the gateway server a Purchase Authentication Page from the determined Access Control Server to modify the Purchase Authentication Page to include a uniform resource locator to the gateway server and to send the modified Purchase Authentication Page to the user computer. A seventh code directs data processor to receive at the gateway server a returned Purchase Authentication Page from the user computer to detect the presence of a 3 D Secure datum in the Purchase Authentication Page and to obtain the 3 D Secure datum if present. An eighth code directs data processor to determine a personal account number associated with the returned Purchase Authentication Page to determine the identity of a validation entity that handles verification requests for the determined personal account number and to send a request to the validation entity for the last 3 D Secure datum issued by the validation entity. A ninth code directs data processor to receive at the gateway server a 3 D Secure datum from the validation entity and to compare the 3 D Secure datum obtained from the returned Purchase Authentication Page to the 3 D Secure datum received from the validation entity to determine if there is a match between the two 3 D Secure datums. A tenth code directs data processor to modify the returned Purchase Authentication Page to include a uniform resource locator to the gateway server and a validation indication based upon whether the two 3 D Secure datums matched and to send the modified Purchase Authentication Page to the determined Access Control Server. An eleventh code directs data processor to receive at the gateway server a Purchase Authentication Response from the determined Access Control Server and to send the Purchase Authentication Response to the user computer.

The following codes handle the creation and recording of information in the Authentication Record. The fourth code includes instructions to create an authentication record if the verification response comprised a determination that the personal account number is enrolled in a 3 D Secure system the authorization record including at least the personal account number and preferably other information such as the date of the request and the identity of the Access Control Server for the personal account number. The fourth code may further include instructions to record information about the verification request and information about the verification response in the authorization record. The fifth code may include instructions to record information about the received Payer Authentication Request and information about the modified Payer Authentication Request in the authorization record. The sixth code may include instructions to record information about the received Purchase Authentication Page and information about the modified Purchase Authentication Page in the authorization record. The seventh may code includes instructions to record information about the returned Purchase Authentication Page in the authorization record and the tenth code may include instructions to record information about the modified returned Purchase Authentication Page in the authorization record. The information that may be recorded for each of these items may comprises all or a portion of each item plus the date and time in which the item was processes.

With that description it may be appreciated that Gateway can be configured to perform the following method actions receiving verification request from a 3 D Secure Directory Server for a determination of whether a personal account number is enrolled in a 3 D Secure system determining the identity of a 3 D Secure Access Controller that handles verification requests for the personal account number of the received verification request sending a communication to the determined Access Control Server providing the personal account number and a request that it return a verification response that includes an indication of whether the personal account number is enrolled in a 3 D Secure system receiving a verification response from the determined Access Control Server sending the verification response to the Directory Server receiving a Payer Authentication Request generated by a 3 D Secure Merchant Plug in and sent by way of a user computer sending the received Payer Authentication Request to the determined Access Control Server receiving a Purchase Authentication Page from the determined Access Control Server sending the received Purchase Authentication Page to the user computer. receiving a returned Purchase Authentication Page from the user computer obtaining a 3 D Secure datum from the Purchase Authentication Page determining a personal account number associated with the returned Purchase Authentication Page obtaining a valid 3 D Secure datum for the determined personal comparing the 3 D Secure datum obtained from the returned Purchase Authentication Page to the valid 3 D Secure datum to determine if there is a match between the two 3 D Secure datums sending the returned Purchase Authentication Page to the determined Access Control Server with a validation indication that is generated based upon at least whether the two 3 D Secure datums matched. It may be appreciated that sending the returned Purchase Authentication Page to the determined Access Control Server may comprises modifying the returned Purchase Authentication Page to include a validation indication that is generated based upon at least whether the two 3 D Secure datums matched and sending the modified returned Purchase Authentication Page to the determined Access Control Server.

The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU arithmetic and logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation. Also in may be appreciated that the codes carry out method actions which are summarized by one or more of the attached claims.

From the above descriptions it may be appreciated that validation entities and gateway are separate entities from computers and are separate entities from verification tokens . It may also be appreciated that in several embodiments and implementations thereof that computers validation entities and gateway are addressed as separate network nodes on communications network e.g. have different network addresses in the communication packets and that tokens communicate through the network nodes of computers to entities and or gateway e.g. computers construct and decode network communication packets for tokens . it may be also appreciated that in several embodiments and implementations of token token may unconditionally send the read identification information to validation entity and or gateway without requiring a validation between the token and the user such as may be provided by the entry of a PIN or the provision of a biometric sample e.g. fingerprint and that token may send the read identification information in a relatively short amount of time such as within one minute of being read and typically within ten seconds .

It may be appreciated that Embodiments of the invention enable a user to obtain a 3 D secure datum and a dynamic device verification value for a portable consumer device such as a credit card which the user can provide to a 3 D secure system and a merchant site respectively for completing a purchase transaction. The dynamic device verification value reduces the potential for fraud by third parties that may fraudulently obtain the account number of the portable consumer device e.g. through skimming . In addition the interaction of the portable consumer device with the verification token enables the token to effectively inform the validation entity that the portable consumer device was physically in the presence of the token at the time the request for the device verification value was made thereby providing a card present status for online purchases made with the portable consumer device. Embodiments of the invention also have utility in providing device verification values to the user in a highly secure manner thereby enhancing security and reducing fraudulent use of credit cards. Moreover embodiments of the present invention provide these services and benefits to the user with a very high ease of use factor.

It should be understood that various embodiments of the present invention as described above can be implemented in the form of control logic using computer software in a modular or integrated manner. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will know and appreciate other ways and or methods to implement embodiments of the present invention using hardware and a combination of hardware and software.

Any of the software components or functions described in this application may be implemented as software code to be executed by a processor using any suitable computer language such as for example C C C Java C or Perl using for example conventional or object oriented techniques. The software code may be stored as a series of instructions or commands on a computer readable medium such as a random access memory RAM a read only memory ROM a magnetic medium such as a hard drive or a floppy disk or an optical medium such as a CD ROM. Any such computer readable medium may reside on or within a single computational apparatus and may be present on or within different computational apparatuses within a system or network.

The above description is illustrative and is not restrictive. Many variations of the invention and embodiments thereof will become apparent to those skilled in the art upon review of the disclosure. The scope of the invention should therefore be determined not with reference to the above description but instead should be determined with reference to the pending claims along with their full scope or equivalents.

One or more features from any embodiment may be combined with one or more features of any other embodiment without departing from the scope of the invention.

A recitation of a an or the is intended to mean one or more unless specifically indicated to the contrary.

All patents patent applications publications and descriptions mentioned above are herein incorporated by reference in their entirety for all purposes. None is admitted to be prior art.

