---

title: Apparatus and method for securing mobile terminal
abstract: A mobile terminal and a method for securing information are provided. The mobile terminal includes an application part to receive information related to an application; a determining unit to receive a command issued by the application and to determine whether the command or the application is authorized to access a system resource of the mobile terminal; and a blocking unit to block an execution of the command in response to a determination that the execution of the command is unauthorized or issued by the unauthorized application. The method includes receiving information related to an application; receiving a request for executing a command issued by the application; determining whether the requested command or the application is authorized to access a system resource of a mobile terminal; and blocking execution of the command in response to a determination that the execution of the command is unauthorized or issued by an unauthorized application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08626125&OS=08626125&RS=08626125
owner: Pantech Co., Ltd.
number: 08626125
owner_city: Seoul
owner_country: KR
publication_date: 20120116
---
This application claims the benefit under 35 U.S.C. 119 a of a Korean Patent Application No. 10 2011 0084790 filed on Aug. 24 2011 the entire disclosure of which is incorporated herein by reference for all purposes. This application is related to U.S. patent application Ser. No. 13 351 126 filed on Jan. 16 2012 which claims priority from and the benefit of Korean Patent Application No. 10 2011 0084789 filed on Aug. 24 2011 and U.S. patent application Ser. No. 13 351 136 filed on Jan. 16 2012 which claims priority from and the benefit of Korean Patent Application No. 10 2011 0084791 filed on Aug. 24 2011 all of which are assigned to the same assignee as the current application and all of which are incorporated by reference in its entirety as if fully set forth herein.

The following description relates to a mobile terminal and more particularly to a mobile terminal and a method for securing applications and services that are executed in a mobile terminal.

A software platform may refer to a system environment in which application programs can be executed. Open platforms have been introduced to provide users with various beneficial services. The open platforms have provided a popular technology platform for various mobile communication terminals.

For example software developers may develop applications that may be provided or uploaded to a software vendor site such as an application store according to an open platform specification. Accordingly various users may access the web site to download and install applications of choice at a low cost or for free to receive the corresponding services.

However while such an open service environment may provide users with various services the open service environment may provide a possibility of leakage of personal information virus infection and fatal system errors by malicious applications or applications with malware e.g. spyware virus add on applications and the like .

That is since an application whether valid or malicious can call an open platform Application Programming Interface API leakage of user s personal information and abnormal charges may be incurred. For example if a user installs an application which the user knows to provide only an alarm operation the application may call when it is used or after it is installed a platform API that can access the user s phonebook acquire the user s phonebook through the platform API and then call a platform API that allows use of a network so that the user s phonebook may be hacked.

Exemplary embodiments of the present invention provide an apparatus and method for securing information stored in a mobile terminal.

Additional features of the invention will be set forth in the description which follows and in part will be apparent from the description or may be learned by practice of the invention.

Exemplary embodiments of the present invention provide a mobile terminal including an application part to receive information related to an application the application being an authorized application or an unauthorized application a determining unit to receive a request to execute a command issued by the application and to determine whether the command or the application is authorized to access a system resource of the mobile terminal a blocking unit to block an execution of the command in response to a determination that the execution of the command is unauthorized or issued by the unauthorized application and a service unit to execute the command in response to a determination that the execution command is authorized and issued by the authorized application.

Exemplary embodiments of the present invention provide a method for securing information in a mobile terminal including receiving information related to an application receiving a request for executing a command issued by the application determining whether the requested command or the application is authorized to access a system resource of a mobile terminal blocking execution of the command in response to a determination that the execution of is the command is unauthorized or issued by an unauthorized application and executing the command in response to a determination that the execution of the command is authorized or issued by an authorized application.

Exemplary embodiments of the present invention provide a method for securing information in a mobile terminal including storing a reference value corresponding to a command and a list of authorized applications receiving a request for executing a command issued by an application extracting the command and information related to the application from the request comparing the extracted command and information to a stored reference value for determining whether the requested command or the application is authorized blocking the execution of the command in response to a determination that the execution of the command or the application is unauthorized and executing the command in response to a determination that the execution of the command and the application are authorized.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and are intended to provide further explanation of the invention as claimed. Other features and aspects will be apparent from the following detailed description the drawings and the claims.

The invention is described more fully hereinafter with reference to the accompanying drawings in which embodiments of the invention are shown. This invention may however be embodied in many different forms and should not be construed as limited to the embodiments set forth herein. Rather these embodiments are provided so that this disclosure is thorough and will fully convey the scope of the invention to those skilled in the art. It will be is understood that for the purposes of this disclosure at least one of X Y and Z can be construed as X only Y only Z only or any combination of two or more items X Y and Z e.g. XYZ XZ XYY YZ ZZ . Throughout the drawings and the detailed description unless otherwise described the same drawing reference numerals are understood to refer to the same elements features and structures. The relative size and depiction of these elements may be exaggerated for clarity.

Referring to the mobile terminal system includes an application part and a framework part . The application part may include applications that may initially be installed by a manufacturing company and or applications that may have been downloaded by a user through a wired wireless communication network. The applications may execute various operations through the framework part .

As shown in applications may include without limitation a setting application a phone application a dial application a short message service SMS application an email application a global positioning system GPS application a security management application .

The framework part includes an interface unit and a service unit . The interface unit may receive a command execution request or a request to execute a command that may be generated if an application is executed and transfer the command execution request to a processing unit . The framework part includes various interface components corresponding to various kinds of command execution requests. The service unit may perform a service corresponding to the command execution request which may be is transferred from the interface unit . The service unit may include a plurality of manager services corresponding to the components included in the interface unit . Details related to the interface unit and the service unit are well known accordingly descriptions thereof will be omitted.

Further as shown in the interface unit may include without limitation an activity interface a window interface a package interface a telephony interface a location email interface and a notification interface. The service unit may include without limitation an activity manager service unit a window manager service unit a package manager service unit a telephony manager service unit a location manager service unit and a notification manager service unit.

However if an application containing malware e.g. spyware virus add ons and the like accesses the mobile terminal system the mobile terminal system may be exposed to malicious attacks. Interfaces may transfer one or more command execution requests to a service unit without considering potential security risks against unintended attacks by such applications. Accordingly the framework part may perform operations that may not have been intended by a user or within the scope of operation of the respective application which may lead to unnecessary consumption of battery data overcharge and leakage of confidential data.

Therefore the framework part of the mobile terminal system may further include a component to block execution of applications and services that may not have been intended by a user or within the scope of operation of the respective application.

Referring again to the framework part further includes a determination information storage unit a determining unit a blocking information storage unit and a blocking unit .

The determination information storage may store reference information to determine whether to block a command execution request generated by an application of the application part . The reference information may be stored in advance by a manufacturing company a third party vendor or set by a user. Further the reference information may be received by a server and or during the operation of the mobile terminal.

The setting application may provide a user interface to allow a user to set reference information that may be used to determine whether to block one or more unauthorized commands issued by applications and services such as Calling service SMS service GPS service Alarm service Email service and the like. Details related to the setting application may be described later with the discussion of operations of the determining unit and the blocking unit . The determining unit may determine whether to block the execution request signal that may be generated by the application part through the interface unit if such request signal is received. A method in which the determining unit determines whether to block the execution request signal may be implemented as various embodiments.

As illustrated in the determining unit may include a one or more determining modules. The determining modules may operate independently or in conjunction with one another. Details related to the operation of the determining modules included in the determining unit will be described later.

The blocking information storage may store format information related to blocking notification which may be used to notify a user of the command execution request received from the determining unit . The format information may be stored in advance by a manufacturing company or set by a user through the setting application . Further the format information may be received from a server during its operation.

The blocking unit may operate to block execution request signals that are directed to applications and services that are determined to be blocked by the determining unit . A method in which the blocking unit blocks execution request signals that are directed to applications and services may be implemented as various embodiments. The blocking unit may include one or more blocking modules as illustrated in . The blocking modules may operate independently or in conjunction with one another. Details related to the operation of the blocking unit will be described later.

As described above application part of the mobile terminal system further includes the setting application and a security management application .

The setting application may provide a user interface to receive a user selection of reference information that may be used to determine whether to block a command execution request and or to select format information that may be used to provide a blocking notification operation. Also the setting application may store the reference information and the format information in the determination information storage and in the blocking information storage respectively. The reference information and the format information may be received from an input provided by a user through the user interface e.g. a touch input key input voice input and the like . Further the respective information may also be received by a third party through a server.

The security management application may receive information related to the applications and services that are determined to be blocked from the blocking information storage and informs the user of access times access commands information about one or more applications that attempts abnormal accesses and the like. That is the security management application may provide an operation to delete and report applications that are is determined to be blocked and executes the operation according to a request from the user or one or more reference conditions.

Referring to the determining unit includes a determining module A a determining module B a determining module C a determining module D a determining module E a determining module F a determining module G a determining module H and a determining module I. These determining modules may be classified into one of two groups an execution group and a setting group . The execution group may make a determination on which applications or services to block. The determination may be based on information that may be received from a manufacturing company a user a third party vendor and the like. The setting group may control driving of one or more determining modules included in the execution group based on setting information of the setting application see .

Referring to and if a determining module A receives a command execution request which may include an execution command and a request to access a system resource of a mobile terminal such as an Application Programming Interface API or data storage is received from a requesting application the determining module A extracts is the execution command and information about the application that has issued or transmitted the command execution request .

For example if the determining module A receives an execution command ACTION CALL the determining module A may acquire information related to a package name or other relevant information of an application that has requested execution of the execution command ACTION CALL. The package name information may be acquired from an activity manager service of the service unit .

As another example if the determining module A receives a command execution request to process an API SmsManager.sendTextMessage which may provide a message sending operation the determining module A may extract the API SmsManager.sendTextMessage and acquires information related to a package name of an application that has issued or transmitted the command execution request from a package manager service of the service unit .

As another example if the determining module A receives a command execution request to process an API ContentResolver.query which may be a database or data storage access operation the determining module A extracts the API ContentResolver.query and acquires information related to a package name of an application that has issued or transmitted the command execution request from the package manager service of the service unit .

The determining module A may search for the execution command and the information about the application that has issued or transmitted the command execution request from an execution command management table stored in the determination information storage see .

Accordingly the determining module A searches for the execution command and the package name of the application from the execution command management table . The determining module A determines whether the execution command is found in the execution command management table .

If the execution command is not found in the execution command management table the determining module A determines that the command execution request is allowed or authorized and transfers the command execution request to the service unit .

If the execution command is found in the execution command management table the determining module A determines whether the application that has issued the command execution request is included in the list of allowed or authorized applications on the execution command management table .

If the application is included in the list of allowed or authorized applications the determining module A determines that the application is allowed or authorized and transfers the command execution request to the service unit . In an example ContentResolver.query command may be determined to be issued by an application with a package name of Com.android.contacts which may be determined to be an allowed or authorized application to execute such a command. Accordingly the determining module A may transfer the respective command execution request of ContentResolver.query command to the service unit .

If the application is not included in the list of allowed or authorized applications the determining module A transfers the command execution request to the blocking unit so that the blocking unit blocks the command execution request .

That is if the determining module A receives a command execution request that has been generated by a disallowed or unauthorized application the determining module A may determine to block the command execution request and request the blocking unit to block the command execution request.

Referring to and if the determining module B receives a command execution request the determining module B extracts additional information from the command execution request .

The determining module B acquires predetermined or reference additional information from the determination information storage . The determining module B determines whether the extracted additional information is identical or similar to the predetermined or reference additional information .

If the extracted additional information is identical to the predetermined or reference additional information the determining module B transfers the command execution request to the service unit so that the service unit executes the corresponding service or application in response to the command execution request . If the extracted additional information is not identical or similar to the predetermined or reference additional information the determining module B determines that the command execution request is a command execution request that may not have been intended or authorized by a user and transfers the command execution request to the blocking unit so that the blocking unit blocks the command execution request .

Here the additional information may be a value that corresponds between the application part the framework part and the determining module B. The additional information may include without limitation a combination of unique information of a terminal a key value an arbitrary value e.g. a true false flag a parameter name a parameter value of a command and the like or a combination thereof.

An application that tries to make a call generally requests to execute a call command as expressed above. Here Intent.ACTION CALL command may correspond to the call command and Uri.fromParts tel phoneNumber null command may correspond to information regarding a phone number. The additional information may be processed according to the following command.

Through a function setFlags a reference flag value may be set between the application and the determining module B to request execution of the call command.

Through a function putExtra a reference parameter name and a reference parameter value may be transferred to the determining module B if the call command is executed. After execution of the call command is requested as described above the determining module B may determine whether a flag a parameter name and a parameter value of the call command are identical or similar to the reference values respectively. Accordingly the determining module B may determine whether the call command has to be executed.

A method for transferring additional information by transmitting receiving parameters has been described above and a method for transmitting additional information by transmitting receiving files is as follows.

If a command Intent.ACTION CALL is called a corresponding value is recorded in a corresponding file and then execution of the command Intent.ACTION CALL may be requested.

For example if parameter value 0x50505050 is a corresponding parameter value to a VoiceCallExtra command which may be transferred to a CommandExtraInfo.text file an application may record the parameter value of 0x50505050 in the respective file in response to the corresponding command being called. Further the determining module B may determine whether the extracted parameter value of 0x50505050 corresponds to the parameter value of the VoiceCallExtra command of the promised file CommandExtraInfo.text before the called command is executed and determine whether the command has to be executed. Thereafter the determining module B may initialize the parameter value of the VoiceCallExtra command for later use.

As such in the case where execution of a command is determined based on additional information a command from an application that does not include corresponding additional information may not be executed. Accordingly security based on additional information may be provided. In this case since the additional information may be information corresponding between an internal application installed by a manufacturing company and a determining module the additional information may be used to increase reliability of applications installed by the manufacturing company and to provide a service blocking operation against unauthorized applications or unauthorized operation of the applications.

Referring to and if the determining module C receives a command execution request the determining module C determines whether the corresponding command is an internal command to which an access is allowed in one or more installed applications . If the corresponding command is an internal command the determining module C transfers the command execution request to the service unit so that the service unit executes the command .

If the corresponding command is an external command the determining module C transfers the command execution request to the blocking unit so that the blocking unit blocks the command execution request . That is the determining module C determines that the command is a command received from an outside source and blocks the command.

A call command on an Android platform may be Intent.ACTION CALL. If the call command Intent.ACTION CALL is an open command the call command Intent.ACTION CALL can be used in various applications. Accordingly an internal command Intent.ACTION CALL INTERNAL may be promised or arranged between applications provided by a system a framework and the determining module C and the internal command Intent.ACTION CALL INTERNAL may not be accessible from the outside. If an arbitrary application requests execution of a command using Intent.ACTION CALL instead of Intent.ACTION CALL INTERNAL the command execution request may be blocked.

If an application makes an access request using an Intent.ACTION CALL INTERNAL command access may be granted since the Intent.ACTION CALL INTERNAL command may be a promised or arranged command.

Since the internal command may refer to information promised or arranged is between applications installed by a manufacturing company a framework and determining modules the internal command may be used to ensure reliability of applications installed by the manufacturing company and to provide a service blocking operation against third party or unauthorized applications.

Referring to and if the determining module D receives a command execution request the determining module D requests an activity manager to send an ActivityManager.RunningServiceInfo command . The determining module D determines whether an application called through the command execution request is displayed on the foreground or foregrounded on a screen . If execution of a command calling an application is requested and the application called through the command request is not foregrounded on a screen it may be determined that the corresponding command has not been requested by a user.

If the application is foregrounded on the screen the determining module D determines that the execution of the corresponding command calling that application is allowed and transfers the command execution request to the service unit so that the service unit executes the command .

If the application is not foregrounded on the screen the determining module D determines that the command is a command that tries to make an abnormal access and transfers the command execution request to the blocking unit . Since a command execution request from an application that is not foregrounded on the screen has a possibility that the command execution request has not been intended by a user security against such a request may be provided through the process described above.

A command execution request may generally be issued or initiated through an input e.g. a touch a pressure on a specific key an input through an ear jack an input through Bluetooth and the like from an input device. However such a command execution request may be manipulated by a hacking attack or unauthorized actions by a malicious program. Accordingly a method for determining and executing commands generated from an authorized input device. In the case of the Android platform information inputted through an input device is transferred to InputDispatcher.cpp and the InputDispatcher.cpp transfers the information to a system framework. If the input information is transferred from InputDispatcher.cpp to the system framework information about the input device may be transferred to the determining module E. The information about the input device may be transferred to the determining module E using a file or queue. A command execution request may be received in a reference time period after an input is generated from an input device. The determining module E may determine a command execution request received through a virtual input and not through a real input device as an abnormal command execution request and block the command execution request. A time of a final input received through an input device may be stored in the corresponding module.

Referring to and the determining module E see detects if the determining module E receives a command execution request a time of a final input or an input through an input device . Then the determining module E determines whether a difference between the final input time and a time at which the corresponding command is actually inputted exceeds a reference threshold value .

If the difference is smaller than or equal to the reference threshold value the determining module E transfers the command execution request to the service unit see .

If the difference exceeds the reference threshold value the determining module E transfers the command execution request to the blocking unit to limit the command execution request.

In this way the determining module E may distinguish inputs received through physical input devices from virtually manipulated input information.

Referring to and if the determining module F receives a command execution request the determining module F detects blocking management information that has been set through a setting application . The determining module F determines whether a service corresponding to the command execution request is a service determined to be blocked based on the blocking management information . In an example blocking management information may refer to a list of various commands applications services and or APIs that are set to be authorized or unauthorized. For example referring to services related to voice call multimedia GPS Email and WIFI are authorized to be executed whereas SMS and 3G DATA services are not.

If the corresponding service is a service that is determined to be blocked the determining module F transfers the command execution request to the blocking unit .

If the corresponding service is not a service determined to be blocked the is determining module F transfers the command execution request to the service unit .

For example if a voice call operation is set to an operation to be blocked by the setting application the determining module A the determining module B the determining module C the determining module D and the determining module E of the determining unit operate as follows.

The determining module A may disable API and the remaining commands with the exception of an ACTION CALL command in the execution command management table and manages the ACTION CALL command. In this case normal operations of the mobile communication terminal e.g. SMS GPS 3G data and the like may operate regardless of the blocking operation. The determining module B may process no additional information with respect to the API and the remaining commands except for the ACTION CALL command as described above. The determining module C may process internal and external commands without distinguishing them with respect to the API and the remaining commands except for the ACTION CALL. The determining module C may block the ACTION CALL command and normally processes ACTION CALL INTERNAL command.

In the case of the determining module D the remaining commands except for the ACTION CALL command and an API execution request operate regardless of whether a requested application is currently foregrounded on a screen. The determining module D processes the ACTION CALL command so that no external command operates and the ACTION CALL INTERNAL command which is an internal command operates normally. The determining module E may operate regardless of a setting application of the determining module F.

Referring to and if the determining module G receives a command execution request from an application the determining module G acquires security level information from the determining information storage and enables a reference combination of the determining module A determining module B determining module C determining module D and determining module E according to the security level information .

If the security level is determined to be at a high level all of the determining modules may operate.

If the security level is determined to be at a middle level the determining module A determining module B determining module C and determining module D may operate.

If the security level is determined to be at a default level the determining module G may process command execution requests without blocking them.

Then the enabled determining modules may determine whether the command execution request is a normal command execution request . If the command execution request is determined to be a normal command execution request the determining modules transfer the command execution request to the service unit . If the command execution is determined not to be a normal command execution request the determining modules transfer the is command execution request to the blocking unit .

Referring to and if the determining module H receives a command execution request the determining module H extracts the corresponding command and information about an application that has issued the command execution request . The determining module H searches for the extracted command and information from the execution command management table and determines whether the command is not listed in the execution command management table or whether the application is included in a list of allowed applications . If the command is not listed in the execution command management table or if the application exists in a list of allowed applications the determining module H transfers the command and information to the service unit .

If the application is not included in the list of allowed applications the determining module H transfers the extracted command and information to the blocking unit . If an execution request for a command listed in the execution command management table is received from a disallowed application the determining module H may limit an access to the command thereby enhancing security.

For example if an execution command ACTION CALL is inputted to the determining module A the determining module A may extract the execution command ACTION CALL and acquire information indicating a package name of an application that may have issued the execution command ACTION CALL from an activity manager.

The determining module A may search for the information indicating the package name of the application from the execution command management table through combinations is of package names. If the acquired package name is identical to or matches the package name of the application is included in the execution command management table the determining module A may execute the command. If the command is listed in the execution command management table but no package name listed in the execution command management table matches the package name of the application the determining module A may transfer the execution command to the blocking unit .

If a request to process an API SmsManager.sendTextMessage which may be a message sending operation is inputted to the determining module A the determining module A may extract the API SmsManager.sendTextMessage and acquire information indicating a package name of an application that may have issued the request. The following process may be the same or similar as the process of processing ACTION CALL command as described above.

The setting application may provide a UI to register a list of allowed applications for one or more reference services. If a user attempts to select a service a list of allowed applications may be provided to the user so that the user can select his or her desired application from among the list of the allowed applications.

Information selected by the setting application may be stored in and managed by the execution command management table of the determining module H.

Referring to and if the determining module I receives a command execution request the determining module I acquires security setting information from the determining information storage and enables an appropriate determining module according to security setting information .

The enabled determining module I determines whether to process the command execution request based on whether the command execution request is determined to be a normal command execution request . If the command execution request is determined to be a normal command execution request the determining module I transfers the command execution request to the service unit . If the command execution request is determined not to be a normal command execution request the determining module I transfers the command execution request to the blocking unit .

In the case of an application installed by a manufacturing company the determining module B or the determining module C may be enabled.

Referring to a blocking unit includes a plurality of blocking modules including a blocking module A a blocking module B a blocking module C a blocking module D a blocking module E a blocking module F a blocking module G and a blocking is module H which may be classified into two groups an execution group and a setting group . The execution group may make determinations whether the command issued by an application is an authorized command based on information received from a manufacturing company. The setting group may control driving of one or more determining modules included in the execution group based on setting information of the setting application.

Referring to and if a command execution request is generated from the determining unit the blocking module A may provide a user with a pop up window. Information provided on the pop up window may include without limitation a name of an application that has issued the command execution request an access command a command access time and information about individual determining modules. For example the s pop up window may provide information similar to those illustrated in . The pop up window containing information illustrated in is described below according to field names.

The determining module A the determining module B the determining module C the determining module D the determining module E the determining module F the determining module G the determining module H and the determining module I may respectively provide the following information.

The determining module A may provide information notifying that KakaoTalk does not exist in a list e.g. an application list of allowed applications of the command execution request. The determining module B may provide information notifying that additional information of the command execution request does not match reference additional information. The determining module C may provide information notifying that the requested execution command is not an internal command. The determining module D may provide information notifying that the application that has requested execution of the command does not exist on a current screen. The determining module E may provide information notifying that the requested execution command is requested without any external input. The determining module F may provide information notifying that a user has registered the corresponding command to block and manage it. The determining module G may provide information notifying that the requested execution command has been blocked according to a security level registered by a user. The determining module H may provide information notifying that the KakaoTalk application has not been registered as a trusted application in the requested execution command. The determining module I may provide information notifying that the requested command or the KakaoTalk application does not satisfy application or service conditions according to a security level.

After the pop up window as described above is provided the requested command may be executed when the user selects Yes button or icon to proceed.

Referring to if an access request is generated from an application or a service that is determined to have to be blocked by the determining unit the blocking module B may display a pattern lock screen to a user. The blocking module B may allow access if the pattern lock is released. If a Cancel icon or button is selected on the pattern lock screen the access request may be ignored.

Information provided on the pattern lock screen may be the same or similar as that provided through the pop up window by the blocking module A.

Referring to if an access request is generated from an application or a service that may be determined to have to be blocked by the determining unit the blocking module C may display a password input screen to a user.

Information provided on the password input screen may be the same or similar as that provided through the pop up window by the blocking module A.

If an access request is generated from an application or a service that is determined to have to be blocked by the determining unit a pop up window may be provided. Further if a Report icon or button is selected on the pop up window the blocking module D may report information about the application or service to a service provider e.g. online market alarm clock and like or a manufacturing company. If an Execute icon or button is selected the access request may be normally processed. If a Cancel icon or button is selected the access request may be ignored. Information provided on the pop up window may be the same or similar as that provided through the pop up window by the blocking module A.

Referring to if an access request is generated from an application or a service that is determined to have to be blocked by the determining unit a pop up window may be provided. If a Delete icon or button is selected on the pop up window the blocking module E may delete the application that has issued the access request. If an Execute icon or button is selected the access request may be normally processed. If a Cancel icon or button is selected the access request may be ignored. Information provided through the pop up window may be the same or similar as that provided through the pop up window by the blocking module A.

The blocking module F may transfer if an access request is generated from a blocked application or service information provided from the determining module to a security management application. The security management application may output as illustrated in information about the application or service blocked by the blocking module F in the form of a list. Here the information may be similar to that provided by the blocking module A. Also the security management application may inform as illustrated in a user of information about the blocked application or service and blocks or deletes the corresponding application or service according to a request from the user.

Referring to format information about a blocking notification is received from a user through a setting application and stored in a blocking unit option .

Then if an access request is generated from an application or service that is determined to have to be blocked by the determining unit the blocking module G processes the access request in the user s desired method through information about the blocking unit option .

An application or service blocking method may be selected from the above described methods or a combination of two or more combination of the above described methods.

Referring to the blocking module H may provide a user with a user interface UI to set a blocking notification through the setting application. The blocking notification setting may include without limitation a notify to a home screen operation a notify to an indicator area operation a directly notify upon blocking operation a store in a list operation and the like. In the case of the notify to a home screen operation if a blocking notification is generated while a user is using another application information about the blocking notification may be provided to the user if he or she enters the home screen instead of directly informing the user of the blocking notification.

In the case of the notify to an indicator area operation a blocking notification may be displayed on the indicator area as soon as it is generated. In the case of the directly notify upon blocking operation if a blocking notification is generated the blocking notification may be directly or indirectly informed to a user using one or more methods by the blocking is modules described above. In the case of the store in a list operation information reporting that a blocking notification has been generated may be stored as a list in the security management application. In this case the information may be checked through the security management application.

It will be apparent to those skilled in the art that various modifications and variation can be made in the present invention without departing from the spirit or scope of the invention. Thus it is intended that the present invention cover the modifications and variations of this invention provided they come within the scope of the appended claims and their equivalents.

