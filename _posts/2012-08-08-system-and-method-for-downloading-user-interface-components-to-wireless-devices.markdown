---

title: System and method for downloading user interface components to wireless devices
abstract: A method of processing a user interface component is provided and includes receiving one or more user interface components that can be communicated to a wireless device. A component risk level for each of the one or more user interface components is determined and assigned to each of the one or more user interface components. Each of the one or more user interface components can be digitally signed using an embedded risk code that indicates the assigned risk level. Further, the component risk level can be selected from a plurality of component risk levels. In a particular embodiment, the component risk level can be determined based on the type of the user interface component. Further, the component risk level can be determined based on a developer of the user interface component.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08666363&OS=08666363&RS=08666363
owner: QUALCOMM Incorporated
number: 08666363
owner_city: San Diego
owner_country: US
publication_date: 20120808
---
This application is a continuation of U.S. patent application Ser. No. 11 361 274 filed Feb. 24 2006 entitled System and Method for Downloading User Interface Components to Wireless Devices which is hereby incorporated by reference in its entirety.

The present disclosure generally relates to user interfaces for wireless devices. More particularly the disclosure relates to downloading user interface components to wireless devices.

Advances in technology have resulted in smaller and more powerful wireless devices. For example there currently exist a variety of wireless devices including mobile phones personal digital assistants PDAs laptops and paging devices that are small lightweight and easily carried by users. These devices may include the ability to transmit voice and or data over wireless networks. Further many such wireless devices provide significant computing capabilities and as such are becoming tantamount to small personal computers and hand held PDAs.

Typically these smaller and more powerful wireless devices are often resource constrained. For example the screen size the amount of available memory and files system space and the amount of input and output capabilities may be limited by the small size of the device. Because of such severe resource constraints it can be desirable to maintain a limited size and quantity of software applications and other information residing on such wireless devices.

Some of these wireless devices utilize application programming interfaces APIs that are sometimes referred to as runtime environments and software platforms. The APIs can be installed onto a wireless device to simplify the operation and programming of such wireless devices by providing generalized calls for device resources. Further some APIs can provide software developers the ability to create software applications that are executable on such wireless devices. In addition APIs can provide an interface between a wireless device system hardware and the software applications. As such the wireless device functionality can be made available to the software applications by allowing the software to make a generic call for a function thus not requiring the developer to tailor its source code to the individual hardware or device on which the software is executing. Further some APIs can provide mechanisms for secure communications between wireless devices such as client devices and server systems using secure cryptographic key information.

Examples of such APIs some of which are discussed in more detail below include those currently publicly available versions of the Binary Runtime Environment for Wireless BREW platform developed by Qualcomm Inc. of San Diego Calif. The BREW platform can provide one or more interfaces to particular hardware and software features found on wireless devices.

Further the BREW platform can be used in an end to end software distribution system to provide a variety of benefits for wireless service operators software developers and wireless device manufacturers and consumers. One such currently available end to end software distribution system called the BREW solution developed by QUALCOMM Incorporated includes logic distributed over a server client architecture wherein the server can perform billing security and application distribution functionality and wherein the client can perform application execution security and user interface functionality.

Some of the software applications that are developed to operate on the BREW platform and that can be downloaded to wireless devices can include user interface components. After being downloaded to a wireless device a user interface component can be executed to update or replace a previously existing user interface component e.g. a background or a skin. Sometimes the user interface component can include one or more program bugs and executing the user interface component on the wireless device may render the wireless device inoperable.

Accordingly it would be advantageous to provide an improved system and method of downloading user interface components to wireless devices.

A method of processing a user interface component is provided and includes receiving one or more user interface components that can be communicated to a wireless device. A component risk level for each of the one or more user interface components is determined and assigned to each of the one or more user interface components.

In a particular embodiment each of the one or more user interface components is digitally signed using an embedded risk code that indicates the assigned risk level. Further the component risk level can be selected from a plurality of component risk levels. In a particular embodiment the component risk level can be determined based on the type of the user interface component. Further the component risk level can be determined based on a developer of the user interface component. For example a lower risk level can be assigned to each user interface component that is developed by an approved developer. On the other hand a higher risk level can be assigned to each user interface component that is developed by an unapproved developer.

In a particular embodiment the method further includes downloading the one or more user interface components to a wireless device. Moreover the multiple user interface components can be bundled together in order to generate a user interface bundle and a bundle risk level for the user interface bundle can be determined Particularly the bundle risk level can be determined based on each component risk level of the user interface components within the user interface bundle. Also the user interface bundle can be digitally signed. The user interface bundle can also be downloaded to the wireless device. In a particular embodiment the method includes charging a fee to download the user interface bundle to the wireless device. Particularly the user interface bundle can be downloaded to the wireless device via an over the air interface although cabled downloads are also possible.

In another embodiment a method of obtaining user interface components at a wireless device is provided. The method includes accessing a download server and receiving a user interface bundle from the download server. Particularly the user interface bundle can include a bundle risk level that is associated with loading the user interface bundle onto the wireless device.

In yet another embodiment a wireless device is provided and includes a processor and a memory that is accessible by the processor. A user interface is stored within the memory and is executable by the processor. The memory further includes a user interface bundle embedded therein. Further the user interface bundle includes a bundle risk level.

In still another embodiment a system for downloading user interface components is provided and includes a security server and a stored application database that is accessible to an application download server and the security server. A user interface bundle can be stored within the stored application database. Also the user interface bundle comprises a plurality of user interface components and a bundle risk level that is associated with an assigned risk that is further associated with downloading the user interface bundle to a wireless device.

In yet still another embodiment a computer program is provided and is embedded within a computer readable medium. The computer program includes instructions to receive one or more user interface components. Moreover the computer program includes instructions to determine a component risk level for each of the one or more received user interface components. The component risk level indicates a risk that is associated with executing a user interface component at a wireless device. The computer program also includes instructions to assign each of the one or more user interface components a determined component risk level.

In still yet another embodiment a computer program is provided and is embedded within a computer readable medium. Particularly the computer program includes instructions to receive a user interface bundle. The user interface bundle includes a data item that indicates the security risk of unbundling the user interface bundle at a wireless device.

In another embodiment a user interface for a wireless device is provided and includes a menu of risk level thresholds. A first risk level threshold can be selected from the menu and file bundles that have a risk level below the first risk level threshold can be received on the wireless device.

In yet another embodiment a user interface for a computer is provided and includes a menu of risk level thresholds. A first risk level threshold can be selected from the menu. The first risk level can be assigned to a file before the file is downloaded to a wireless device and executed on the wireless device.

Other aspects advantages and features of the present disclosure will become apparent after review of the entire application including the following sections Brief Description of the Drawings Detailed Description and the claims.

The word exemplary is used herein to mean serving as an example instance or illustration. Any embodiment described herein as exemplary is not necessarily to be construed as preferred or advantageous over other embodiments. Further many embodiments are described in terms of sequences of actions to be performed by for example elements of a wireless device. It will be recognized that various actions described herein could be performed by specific circuits e.g. application specific integrated circuits ASICs by program instructions being executed by one or more processors or by a combination of both.

Further the embodiments described herein can additionally be considered to be embodied entirely within any form of computer readable storage medium having stored therein a corresponding set of computer instructions that upon execution would cause an associated processor to perform the functionality described herein. Thus various aspects of the disclosure may be embodied in a number of different forms all of which have been contemplated to be within the scope of the claimed subject matter. In addition for each of the embodiments described herein the corresponding form of any such embodiments may be described herein as for example logic configured to perform a certain action or code operable to perform the described action. The following detailed description describes methods systems software and apparatus used in connection with one or more wireless devices.

In one or more embodiments a wireless device may utilize a runtime environment such as a version of the Binary Runtime Environment for Wireless BREW platform developed by QUALCOMM Inc. of San Diego Calif. In at least one embodiment in the following description the system used to provide communications between wireless devices and servers is implemented on a wireless device executing a runtime environment such as the current version of the BREW platform. However one or more embodiments of the system used to provide communications between wireless devices and servers are suitable for use with other types of runtime environments that for example operate to control the execution of applications on wireless devices.

As illustrated in the wireless device can be a wireless telephone a personal digital assistant a pager or a separate computer platform that has a wireless communication portal. In a particular embodiment the pager can be a two way text pager. Further in an alternative embodiment the wireless device can have a wired connection to a network or the Internet. The exemplary non limiting system can include any form of a remote module including a wireless communication portal including without limitation wireless modems PCMCIA cards personal computers access terminals telephones with or without a display or keypad or any combination or sub combination thereof.

As depicted in the application download server is coupled to a network with other computer elements in communication with the wireless network . The system includes a security server and a stand alone server and each server can provide separate services and processes to the wireless devices across the wireless network . Further as indicated in the system also includes at least one stored application database that stores software applications that can be downloaded to the wireless devices . Different embodiments are contemplated that locate logic to perform secure communications at anyone or more of the application download server the security server and the stand alone server .

In a particular embodiment one or more user interface components can be developed on a computer e.g. the computer and uploaded to the network via the wireless network or wired connection . Further the user interface component can be assigned a security risk level and signed with a digital signature that includes an embedded code that represents the risk level for the user interface component . In a particular embodiment the risk level represents a risk of operating system damage associated with executing the user interface component at a wireless device to which the user interface component is downloaded. Thereafter multiple digitally signed user interface components can be bundled together to produce a user interface bundle that can be stored within the stored applications database . The user interface bundle can also be assigned a security risk level and signed with a digital signature that includes the risk level for the user interface bundle . Particularly the risk level for the user interface bundle represents a risk of system damage associated with unbundling the user interface bundle at a wireless device to which the user interface bundle is downloaded.

In an illustrative embodiment the user interface component can be a graphical user interface component such as a graphical icon a virtual button a skin a background a font package or a graphical menu that is linked to a physical user interface component such as a keypad button a keyboard button or a mouse. The user interface component can also be a collection of graphical user interface components e.g. an entire graphical user interface. The user interface component can also be a graphical user interface component such as a touch screen component that can be selected by touching the display screen of the wireless device with a finger or a stylus. Also the user interface component can be an entire touch screen user interface. Further in another illustrative embodiment the user interface component can be a voice user interface component such as a voice command linked to a particular function such as dialing a telephone number. Moreover the user interface component can be an entire voice user interface having multiple voice commands and corresponding actions. In a particular embodiment the user interface component can upgrade an existing user interface component at a wireless device replace a previously loaded user interface component or the user interface component can be a new installation of a user interface component for the wireless device.

In a particular embodiment the risk levels for the user interface components can be determined based on the type of user interface component the type of wireless device to which the user interface component is downloaded and the extent of the changes to the user interface caused by executing the user interface component on the wireless device. For example simple font packages can be assigned a low risk while a user interface component such as a background or skin can be assigned a medium risk. Further a more pervasive user interface component such as an entirely new user interface that changes the functionality of the wireless device in addition to the appearance of the wireless device can be assigned a high risk.

Additionally the risk levels for the user interface components can be determined based on whether the developer is an approved or trusted developer i.e. a developer that has a proven track record of producing user interface components that work as intended execute without problems and do not prevent the wireless device from operating properly. Further a developer that is trusted is deemed to be privileged to develop user interface components that can be downloaded to wireless devices. In a particular embodiment a developer can gain approval by paying a fee. Also in a particular embodiment the risk levels can be assigned by a particular wireless device manufacturer an industry group or some other group.

In a particular embodiment the risk may be automatically assigned for a developer without the developer s input or consent. Also the risk can be assigned based on how long a particular developer has been involved in a particular project. For example developers that joined the development earlier in the development path may be assigned less risk than new or upcoming developers. Further the risk can be assigned based on when a component is developed or when a component is to be delivered. Additionally as a particular user interface component or bundle is developed the risk level may change depending on the various developers that have handled the particular user interface component or bundle. Risk levels for subsequent handlers may be automatically determined.

Accordingly a particular user interface component can have one of the following exemplary non limiting risk levels low and trusted low and unapproved medium and trusted medium and unapproved high and approved and high and unapproved. In a particular embodiment the risk level for a user interface bundle is determined based on a combination of the risk levels of the individual user interface components in the bundle. The digital signatures ensure that the risk levels are able to be controlled and enforced. Further the digital signatures prevent tampering with the user interface components once they are assigned a risk level and digitally signed.

In a block diagram is shown that more fully illustrates the system including the components of the wireless network and interrelation of the elements of the system . The system is merely exemplary and can include any system whereby remote modules such as the wireless devices communicate over the air between and among each other and or between and among components connected via a wireless network including without limitation wireless network carriers and or servers. The application download server and the stored application database along with any other servers such as server are compatible with wireless communication services and can communicate with a carrier network through a data link such as the Internet a secure LAN WAN or other network. In an illustrative embodiment the server contains a server security module that further contains logic configured to provide for secure communications over the carrier network . In a particular embodiment the server security module can operate in conjunction with a client security module located on a wireless device such as wireless devices to provide secure communications. Additionally the server security module can assign risk levels to user interface components sent to the security server . Also the server security module can assign risk levels to the user interface bundles .

The carrier network controls messages sent as data packets sent to a mobile switching center MSC . The carrier network communicates with the MSC by a network such as the Internet and or POTS plain ordinary telephone system . Typically the network connection between the carrier network and the MSC transfers data and the POTS transfers voice information. The MSC is connected to multiple base transceiver stations BTS . The MSC can be connected to the BTS by both a data network and or Internet for data transfer and POTS for voice information. The BTS ultimately broadcasts messages wirelessly to the wireless devices such as to wireless telephone by the short messaging service SMS or other over the air methods known in the art.

The wireless device has a computer platform that can receive and execute software applications transmitted from the application download server . In an illustrative embodiment the computer platform may be implemented as an application specific integrated circuit ASIC a processor microprocessor logic circuit or other data processing device. The ASIC can be installed at the time of manufacture of the wireless device. Further the ASIC or other processor can execute an application programming interface API layer that interfaces with resident programs in the memory of the wireless device. In a particular embodiment the API layer includes a set of APIs provided by the Binary Runtime Environment for Wireless BREW platform. The memory can be comprised of read only or random access memory ROM or RAM EEPROM flash memory or any other memory suitable for computer platforms.

The API also includes a client security module containing logic configured to provide for secure communications over the carrier network . In a particular embodiment the client security module can operate in conjunction with the server security module to provide secure communications. Additionally the client security module can detect and decode the digital signatures of user interface components and user interface bundles downloaded to the wireless device and can determine the assigned risk levels of a user interface bundle and each of the user interface components .

Also the client security module can compare the risk level for each user interface bundle and the risk level for each user interface component to a predetermined threshold level e.g. a threshold level for specific user interface components or a global threshold level for a user interface bundle in order to determine whether the risk level is below a preset threshold. If the risk level for the user interface bundle is below the bundle threshold level the user interface bundle is unbundled to produce multiple user interface components . Further if the risk level for a user interface component is below the component threshold level each user interface component can be executed on the wireless device. On the other hand if the risk level for a user interface component is above the component threshold level the user interface component can be deleted or otherwise removed from the wireless device.

As illustrated in the computer platform can further include a local database that can hold applications not actively used in memory . In an illustrative embodiment the local database is stored within a flash memory cell but it can be stored within any secondary storage device as known in the art such as magnetic media EEPROM optical media tape or floppy or hard disk. A wireless device for example the wireless telephone can download one or more software applications such as games news stock monitors and the like from the application download server . Further the wireless device can store the downloaded applications in the local database when not in use and can load stored resident applications from the local database to memory for execution by the API when desired by the user. Further communications over the wireless network may be performed in a secure manner at least in part due to the interaction and operation of the client security module and the server security module .

Referring to a method of providing user interface components to a wireless device is shown and commences at block wherein a security server receives a user interface component e.g. from a software developer. At block a server security module within a security server determines a component risk level for the user interface component. Thereafter at block the server security module assigns the determined component risk level to the user interface component. Moving to block the server security module digitally signs the user interface component. In a particular embodiment the digital signature can prevent tampering with the risk level and the user interface component.

Continuing to block the server security module combines plural user interface components together to create a user interface bundle. At block the server security module determines a bundle risk level for the user interface bundle. Then at block the server security module assigns the determined bundle risk level to the user interface bundle. At block the server security module digitally signs the user interface bundle. In an illustrative embodiment the server security module digitally signs the user interface bundle using an embedded risk code that indicates the assigned risk level generated and stored with a data packet associated with the user interface bundle to be deployed to a wireless device.

Proceeding to block the security server stores the digitally signed user interface bundle in the stored applications database. Next at block the application download server presents user interface bundle information to a user via the wireless device. In a particular embodiment the application download server presents a menu of digitally signed user interface bundles and information related to each digitally signed user interface bundle. In a particular embodiment the information includes the bundle risk level for the user interface bundle the component risk level for each user interface component that is included in the user interface bundle and the type of each user interface component that is included in the user interface bundle.

Still referring to at block the application download server receives a request for a user interface bundle from a wireless device. In a particular embodiment the request from the wireless device is received at the application download server via an over the air interface. At block the application download server indicates the cost of the user interface bundle to the wireless device. At block the application download server receives a purchase request from the wireless device. Moving to decision step the application download server determines whether payment information is received from the wireless device. If not the method ends at state . On the other hand if payment information is received from the wireless device the method proceeds to decision step and the application download server determines whether the payment from the wireless device is approved. If the payment is not approved the method continues to block and the application download server indicates to the wireless device that the payment is not approved. The method then returns to decision step and continues as described herein.

At decision step if the application download server approves the user payment the logic proceeds to block and the application download server indicates to the wireless device that the payment from the wireless device is approved. Next at block the application download server downloads the user interface bundle to the wireless device. In a particular embodiment the user interface bundle is downloaded to the wireless device via an over the air interface. The method of downloading the user interface bundle with an assigned risk level from an application download server ends at state .

Referring now to a method of receiving user interface components having assigned risk levels at a wireless device is shown and commences at block . At block a wireless device accesses the application download server. In a particular embodiment the wireless device can communicate with the application download server via an over the air interface. Next at block a user of the wireless device can view a menu of user interface bundles that are available on the application download server. At block using the wireless device the user can select a user interface bundle to be downloaded by the application download server. At block the wireless device receives price information related to the user interface bundle.

Moving to block the wireless device can transmit payment information to the application download server. Thereafter at decision step the application download server indicates to the wireless device whether the payment is accepted. If the payment is not accepted the method continues to decision step and queries the user via the wireless device as to whether the user would like to retry payment. If so the method returns to block and new payment information is transmitted to the application download server. The method then continues as described herein.

At decision step if the user does not want to retry payment the method ends at state . Returning to decision step if payment is accepted the wireless device receives the user interface bundle at block . Moving to block a digital signature associated with the user interface bundle is detected and decoded. At block a bundle risk level is determined such as by reading the embedded risk level code assigned by the security server. Continuing to decision step the wireless device compares the bundle risk level to a bundle risk level threshold in order to determine whether the bundle risk level is acceptable i.e. less than the bundle threshold. If the bundle risk level is not less than the bundle threshold the risk level is too high so the bundle is rejected and the method ends at state .

Conversely if the bundle risk level is less than the bundle threshold the method moves to block and the user interface bundle is accepted and unbundled to produce multiple user interface components. At block the wireless device detects the selection of one or more user interface components to be applied to the wireless device. In another embodiment the wireless device can automatically determine which user interface components to be applied to the wireless device. Next at block a digital signature associated with the user interface component is detected and decoded. At block a component risk level is determined for the user interface component. Proceeding to decision step the wireless device compares the component risk level to a component risk level threshold in order to determine whether the component risk level is acceptable i.e. less than the component threshold. In a particular embodiment the risk level thresholds can be set by a wireless device manufacturer. Also the risk level thresholds can be set by a user of the wireless device.

If the component risk level is less than the component risk level threshold the component is accepted and the method moves to block where the user interface component is applied to the wireless device. In a particular embodiment the user interface component may be an upgrade to an existing user interface. In another embodiment the user interface component is a new component that is applied to the wireless device. The logic then moves to decision step .

Returning to decision step if the component risk level is not less than the component threshold the method moves to decision step . At decision step the wireless device determines whether there is another user interface component selected for application to the wireless device. If so the method returns to block and continues as described above. If no other user interface components are available the method ends at state . In a particular embodiment the decision to unbundle a user interface bundle and the decision to apply a user interface component to the wireless device can be made by logic within the wireless device without the user s input or knowledge. Otherwise the user can select and or set a threshold for each decision. Also the decision to unbundle and the decision to apply can be based on the cause of the download e.g. was the download automatic or requested by a user.

With the configuration of structure described above the system and method of downloading user interface components to wireless devices provides a method for a wireless device to determine a risk level associated with executing one or more user interface components prior to execution. Accordingly user interface components that appear to present a greater security risk can be rejected by the wireless device.

Those of skill would further appreciate that the various illustrative logical blocks configurations modules circuits and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks configurations modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present disclosure.

The steps of a method or algorithm described in connection with the embodiments disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in RAM memory flash memory ROM memory PROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a wireless device or a user terminal. In the alternative the processor and the storage medium may reside as discrete components in a wireless device or user terminal.

The previous description of the disclosed embodiments is provided to enable any person skilled in the art to make or use the present disclosure. Various modifications to these embodiments will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other embodiments without departing from the spirit or scope of the disclosure. Thus the present disclosure is not intended to be limited to the embodiments shown herein but is to be accorded the widest scope consistent with the principles and novel features as defined by the following claims.

