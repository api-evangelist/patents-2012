---

title: Probability-based state modification for query dialogues
abstract: A device may facilitate a query dialog involving queries that successively modify a query state. However, fulfilling such queries in the context of possible query domains, query intents, and contextual meanings of query terms may be difficult. Presented herein are techniques for modifying a query state in view of a query by utilizing a set of query state modifications, each representing a modification of the query state possibly intended by the user while formulating the query (e.g., adding, substituting, or removing query terms; changing the query domain or query intent; and navigating within a hierarchy of saved query states). Upon receiving a query, an embodiment may calculate the probability of the query connoting each query state modification (e.g., using a Bayesian classifier), and parsing the query according to a query state modification having a high probability (e.g., mapping respective query terms to query slots within the current query intent).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09607046&OS=09607046&RS=09607046
owner: Microsoft Technology Licensing, LLC
number: 09607046
owner_city: Redmond
owner_country: US
publication_date: 20121214
---
Within the field of computing many scenarios involve a query received from a user such as a web search query a database query and an informational query presented to an informational agent. Such queries may involve a comparison of a set of keywords identified in the query with the identifiers of associated items such as words appearing in respective indexed web pages. Informational queries may also involve a request specified by the user such as a request to send information to another individual or to complete a transaction e.g. purchasing a ticket to a movie . A device may apply a query processing technique to identify the contents of the query to execute a search or request on behalf of the user and to present results to the user.

Many such scenarios may enable a user to modify a query in order to view different results or to specify a different request. To this end query processing techniques may involve modifying a first query according to a second query. For example a user may specify a first query as a set of keywords and may then specify a second query requesting an addition removal and or substitution of keywords in the first query as well as starting a fresh new search. The device may modify the first query according to the second query and may present an updated result set. A series of such query state modifications may enable a dialog between the user and the device such as an incremental and iterative refinement of a search or user request in order to fulfill the intent of the user.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Many techniques may be applied to the parsing of queries. In some such techniques the query may involve processing a first query to identify a query state such as the user state or the dialog state and then updating the query state in view of the contents of a second query. While a keyword based approach may be suitable for generalized scenarios e.g. web searches comprising a set of keywords other queries may present specialized information or requests within a particular query domain that are difficult to identify through generalized matching but that may be identified through the context of the query domain. For example for a query such as flight Paris London a generalized evaluation such as a general web search may turn up many references including these keywords including the distance and typical time involved in such a flight or historical information about the first commercial flight in 1919 that connected these cities. However a specialized evaluation within the query domain of a flight booking service may identify the query as a request for information about imminent flights between these cities. Moreover this query domain may provide contextual indicators such as the ordering of the cities as probably indicating respectively the points of departure and arrival and may serve to identify missing or ambiguous information such as the date of interest to the user which may be useful in identifying the interests of the user. However the particular manner of using the identification of query domains to facilitate the parsing of a query and particularly of a query requesting a modification of a query state in a query dialogue in view of several query domains and a significant set of query state modifications that a query may represent.

Presented herein are techniques for evaluating a query to identify a query state modification of a query state. In accordance with these techniques a device may identify a set of query state modifications that a query may represent such as an addition removal or substitution of a query term a specification or change of an intent requested within the query domain e.g. searching for flights within the query domain of a commercial flight service vs. requesting a purchasing of a flight specifying or changing to a different query domain e.g. while planning a vacation a user may first search for events in a particular city and then switch to querying the upcoming weather in the city navigating within a series of query states e.g. saving a query state or returning to an earlier query state . Upon receiving a query while in a query state the device may compare the probabilities of respective query state modifications e.g. using a Bayesian classifier trained to recognize query state modifications within a particular query domain and may select the query state modification having a high probability along with any query terms identified in the query to determine how the user wishes to modify the current query state. By repeatedly performing this evaluative process the device may enable a query dialogue potentially spanning several query domains and intents and a flexible query state navigation that provides a more natural conversational interaction with the user.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.

Within the field of computing many scenarios involve the fulfillment of a query. Such queries are often received from a user through one or a query modality e.g. text entry touch voice or gesture and are processed against a data set such as a generalized search engine indexing a set of content e.g. a web search engine indexing the Worldwide Web or a file system indexing a set of files or a specialized search engine providing access to structured data e.g. a database search engine configured to identify and return records matching a set of criteria . Moreover some queries may request information while others may request the completion of a transaction such as initiating a request with a service applying a transformation to a particular type of data or completing a financial transaction such as the purchase of a product from an e commerce site.

In many such scenarios the user may present a set of interrelated queries that together express the intent of the user. As a first example the user may initiate several searches for different types of data related to the same topic of interest e.g. while planning travel a user may request information about available flights available hotels and weather reports for one or more destinations . As a second example the user may incrementally refine a query in order to hone in on a particular type of sought information or to specify a request with sufficient accuracy. As a third example the user may submit a first query with an initial intent e.g. searching for available flights but after a shift in the user s intent the user may submit a second query with a different intent e.g. purchasing a ticket on an available flight .

In these and other scenarios a device such as a computer may be configured to evaluate the user s queries to identify explicit or implicit information about the domain of the query the intent of the query within the domain and the details specified in the query as query terms. The device may endeavor to fulfill the user s query in view of a query state such as a context of the query identified through the evaluation of previous queries. The device may also be configured to receive and apply requests by the user for modifying the query state such as by further restricting the query state changing the intention of the query state changing the domain of the query state or returning to a former query state. However it may be difficult to configure the device to understand and accurately fulfill such requests in view of a complex set of query domains query intents query terms of the current query and the set of current and former query states. Moreover it may be difficult to enable the user to specify any such transition in the query session through the use of natural language input such as spoken commands spoken by the user in a natural language conversational manner of speech supplemented by other input modalities such as touch input and gestures. The proficiency of the query processing techniques may significantly affect the interpretation and adequate fulfillment of the user s query.

As further illustrated in this exemplary scenario the user seeks to find and purchase an airplane ticket on Flight 1919 from London to Paris. At a first time point the user may begin by submitting a query comprising the query terms flight london paris. Because the user has not specified a query domain e.g. a particular service website or data source to which the query is to be applied the device may process the query in a generalized query domain e.g. a generalized internet search engine and may produce query results generally relating to flights between London and Paris such as an advertisement for an airline providing such flights and information about such flights such as the total distance. While fully matching the query terms these query results are not relevant to the intent of the user who may seek more relevant results by adding further query terms .

At a second time point the user may submit a second query including as a query term the number of the flight desired flight 1919 . The device may again apply the query to a generalized query domain resulting in information about the first commercial flight between the cities in the year 1919 and information about the existence of the route between the cities. While matching the query terms specified by the user these query results are not relevant to the intent of the user in finding and purchasing a ticket on a specific occurrence of flight 1919 and so the user may further refine the query by identifying a commercial flight service to which the query is to be submitted.

At a third time point the user may submit a third query featuring the same query terms flight london paris but further refined by specifying a commercial flight service as the query domain . The device may apply the query to the specified query domain and return query results matching these query terms such as information about a trip on flight 1919 between Paris and London completed by the user during the preceding week and information about an imminent departure of flight 1919 from Paris to London. While closer to the intent of the user these results are still not related to the interest of the user in acquiring a ticket from an imminent flight and the user may add query terms further clarifying this intent.

At a fourth time point the user may add query terms to the query that solicit information about purchasing a ticket e.g. flight london paris buy ticket . However the user may inadvertently admit flight number 1919 from this query and the query results may thus relate to other flights between Paris and London and also about instances of flight 1919 that may not be of interest to the user e.g. the occurrence of flight 1919 tomorrow from Paris to London . The user may continue by incrementally refining and resubmitting the query until adequate query results are returned.

While the exemplary scenario presents query results pertinent to each query submitted by the user it may be appreciated that several disadvantages arise from this iterative refinement. As a first example although the general topic sought by the user may be apparent from each query a query domain specialized for that topic is only used when specifically identified and requested by the user . If the user does not now or identify the query domain generalized query domains are used that provide unspecialized query results . As a second example the intent of the user is not identified or used to refine the query and keywords identifying the intent of the query are treated the same as other keywords. For example in the fourth query the intent of the user to purchase a ticket for a flight is apparent but the highly significant term buy is lost among the other terms and several of the query result may fail to relate to tickets that may be purchased. As a third example information is not persisted from one query to the next the user has to keep adding onto the query leading to a jumble of query terms . As a fourth example because the query is evaluated as a generalized set of query terms even when a select query domain is specified contextual cues may be lost during the parsing. For example a query specifying flight london paris presents an order connoting a refinement of the query i.e. flights from London to Paris but this contextual information may not be identified or utilized thus resulting in less relevant query results about flights from Paris to London.

At a first time point the user submits a first query providing the query terms flight london paris. The device may begin with a query state that is initially empty and may combine the query state and the query to produce a modified query that is evaluated to produce a query result revealing an upcoming occurrence of flight 1919 from London to Paris.

At a second time point the user may submit a second query with the query terms buy ticket indicating the intent of the user to buy a ticket on this flight. However while the query state has persisted information about the previous query submitted by the user the query state does not include information about the previous query result . Thus combining the query state flight london paris with the query terms buy ticket results in a modified query indicating a generalized interest in purchasing a flight ticket between London and Paris and producing a query result featuring an advertisement for an airline offering such tickets.

At a third time point the user may submit a third query that explicitly specifies the information from the previous query result regarding the flight to be purchased. However the device may not recognize that this information is presented to alter the intent of the query but may simply regard the query terms as supplemental to the query state . The addition of the query terms to the query state leads to a modified query comprising an extended jumble of query terms flight london paris purchase ticket buy a ticket for flight 1919 that the device cannot meaningfully process leading to a query result indicating an inability to process the query.

At a fourth time point the user may submit a fourth query attempting to clarify the previous query by replacing a query term with a different query term . Additionally the user may specify the fourth query in a natural language manner rather than as a set of keywords. However the device may not be able to recognize the meaning of the natural language input or the modification of the query state requested by the query and may again append the query terms to the query state resulting in a modified query that again the device is unable to process.

While the exemplary scenario of presents some techniques for enhancing the sophistication of query processing by persisting the query state some disadvantages may be appreciated to exist in both scenarios. As a first such example in both scenarios the parsing technique does not attempt to infer a query domain of a query unless explicitly specified by the user . As a second such example in both scenarios the parsing technique does not attempt to infer any type of intent by the user in formulating the query rather each query is treated as a collection of keywords to be presented to a query domain . For example a query may be submitted with the intent of requesting information of providing information or of initiating a particular type of request or transaction relevant to a particular query domain but the query processing techniques make no attempt to deduce such intents nor to adjust or apply the query in furtherance of the intent. As a third example neither parsing technique attempts to evaluate how a later query may be formulated to affect an earlier query or query state . For example a later query may be submitted to replace or remove query terms in an earlier query to apply the earlier query to a different query domain or with a different query intent to refer to a query result presented in response to an earlier query or to return to a previous query . However the parsing technique in the exemplary scenario of does not persist any information from one query to the next and the parsing technique in the exemplary scenario of simply aggregates the query terms of a current query with a current query state to generate the modified query . As a fourth example neither parsing technique is configured to parse natural language input queries rather as illustrated in the parsing of the fourth query the parsing technique in the illustrated scenario of regards the natural language spoken input as a set of query terms equivalent with the query terms of prior non natural language queries . In these and other ways the parsing techniques presented in illustrate various capability limitations that may be addressed by other parsing techniques.

Presented herein are techniques for evaluating queries that may enable a more natural query dialogue with the user . In accordance with these techniques the device may define a set of query state modifications that a user may submit in order to modify a current query state in the resubmission of a query . For example the query state modifications may include e.g. an addition of query terms to the query state a substitution of query terms in the query for the query terms of the query state a removal of query terms from the query state a change of query domain such that the query terms of the query state are submitted to the new query domain a change of query intent within a selected query state e.g. transitioning from queries requesting information on flights within a commercial flight service to queries initiating a purchase transaction within the commercial flight service and a navigation within a history of query states . Additionally the device may include a classifier that is capable of calculating the probability that a query is requesting a modification of a query state according to a particular query state modification. The probability predictions of respective query state modifications for a particular query may be used to infer the intent of the user in formulating and submitting the query and may provide opportunities for the inclusion of additional features that enhance the query dialogue between the user and the device .

At a first time point while the device is already storing a query state including the query terms flights london paris specified by the user in one or more prior queries the user may submit a query comprising the query terms flights for today . The device may invoke the classifier to calculate for respective query state modifications a query state modification probability indicating the likelihood that the query is intended to apply this type of query state modification to the query state . Among the candidate query state modifications a selection may be performed to identify a selected candidate query state. The classifier may determine that the first query state modification has the highest query state modification probability in the query state modification set and may select the selected query state modification to combine the query terms of the query and the current query state thus producing a new query state flights london paris today . The device may then proceed to present query results associated with this query state .

At a second time point the user may next submit the query what about tomorrow as a natural language query. The classifier may again be invoked to calculate query state modification probabilities for respective query state modifications and may select the second query state modification indicating a replacement of query terms as having the highest probability. The device may further recognize that according to this query state modification the phrase what about tomorrow is intended to substitute the query term tomorrow for a query term in the query state that is semantically related to the specified query term in this case the term today which like tomorrow specifies a date selection. The device may compare the query state modification probabilities of the candidate query states . In some embodiments the candidate query states may be selected as an ongoing hypothesis from the start of the dialogue with the user e.g. the device may recalculate the query state modification probabilities for earlier stages of the dialogue based upon the query submitted at the second time point including recalculating the query state modification probabilities of the candidate query states at the first time point in view of the query presented at the second time point . Having calculated the query state modification probabilities of the candidate query states at the second time point the device may select the selected query state modification to achieve the substitution and arrive at the new query state flights london paris tomorrow and optionally may proceed to show query results for this query state .

At a third time point the user may submit a query comprising the query terms buy ticket. The classifier may again compute a query state modification probability for each candidate query state modification optionally recalculating the query state modification probabilities for earlier stages of the dialogue such as the first time point and the second time point based upon the information extracted from the query submitted at the third time point . By comparing the query state modification probabilities for the candidate query states the device may determine that the query state modification involving a change of intent has the highest query state modification probability . In particular the classifier may recognize that within a particular query domain e.g. that of a commercial flight service this query indicates that the user is specifying a query intent of the query state involving the purchase of a ticket for a flight. This query intent may replace a former query intent of the query state or may provide a query intent for a query state that does not yet have a query intent e.g. the query state may thus far comprise only general informational queries . As further illustrated in the exemplary scenario of the selected query intent may specify a template query that expresses the query intent in the query domain and that includes a series of query slots to which the query terms of the query state may be mapped. Accordingly the device may select the third query state modification and in particular may map the query terms london paris and tomorrow to respective query slots of the query intent to generate the new query state buy ticket for tomorrow from London to Paris. 

The query parsing techniques presented in this exemplary scenario illustrates several advantages particularly in comparison with the query processing techniques of . As a first example by tracking the query state between queries the device may enable the user to specify a series of incremental modifications of the query rather than having to modify the query manually and resubmit the entire query anew as in the exemplary scenario of . As a second example by considering and comparing query state modifications the processing techniques of enable a more conversational interaction between the user and the device . As a third example by utilizing a probability based classifier to determine and compare query state modification probabilities rather than other techniques such as rigidly defined keywords the device may enable such interactions through natural language input as in the correct evaluation of the modification requested by the query at the second time point . As a fourth example by inferring query domains and or query intents comprising a query template with query slots mapped to respective claim terms of the query state the device may participate in the honing of the query as intended by the user . These and other advantages may be achievable through the implementation of the query parsing techniques provided herein.

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to apply the techniques presented herein. Such computer readable media may include e.g. computer readable storage media involving a tangible device such as a memory semiconductor e.g. a semiconductor utilizing static random access memory SRAM dynamic random access memory DRAM and or synchronous dynamic random access memory SDRAM technologies a platter of a hard disk drive a flash memory device or a magnetic or optical disc such as a CD R DVD R or floppy disc encoding a set of computer readable instructions that when executed by a processor of a device cause the device to implement the techniques presented herein. Such computer readable media may also include as a class of technologies that are distinct from computer readable storage media various types of communications media such as a signal that may be propagated through various physical phenomena e.g. an electromagnetic signal a sound wave signal or an optical signal and in various wired scenarios e.g. via an Ethernet or fiber optic cable and or wireless scenarios e.g. a wireless local area network WLAN such as WiFi a personal area network PAN such as Bluetooth or a cellular or radio network and which encodes a set of computer readable instructions that when executed by a processor of a device cause the device to implement the techniques presented herein.

An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to the principles set forth herein. In one such embodiment the processor executable instructions may be configured to perform a method of modifying a query state in response to a query received from a user such as the exemplary method of . In another such embodiment the processor executable instructions may be configured to implement a system for modifying a query state in response to a query received from a user such as the exemplary system of . Some embodiments of this computer readable medium may comprise a nonvolatile computer readable storage medium e.g. a hard disk drive an optical disc or a flash memory device that is configured to store processor executable instructions configured in this manner. As one example the instructions may cause the device to fulfill a query state by selecting an initial query state and upon receiving a query from a user calculating query state modification probabilities of the query for respective query state modifications in the query state modification set parsing the query to identify at least zero query terms modifying the query state according to the query terms and the query state modification having a highest query state modification probability in the query state modification set and fulfilling the query in view of the query state e.g. by submitting the query state to a query domain and presenting to the user the query results returned thereby . Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

The techniques discussed herein may be devised with variations in many aspects and some variations may present additional advantages and or reduce disadvantages with respect to other variations of these and other techniques. Moreover some variations may be implemented in combination and some combinations may feature additional advantages and or reduced disadvantages through synergistic cooperation. The variations may be incorporated in various embodiments e.g. the exemplary method of and the exemplary system of to confer individual and or synergistic advantages upon such embodiments.

A first aspect that may vary among embodiments of these techniques relates to the scenarios wherein such techniques may be utilized.

As a first variation of this first aspect the techniques presented herein may be utilized with many types of devices such as servers server farms workstations laptops tablets mobile phones game consoles and network appliances.

As a second variation of this first aspect the techniques presented herein may be utilized with many types of queries such as requests for various types of information requests to initiate various types of actions such as Representational State Transfer RESTful interactions data transformations the invocation of functions such as web requests and financial transactions and interactions with various types of objects and resources. Additionally such queries may comprise many types of query terms e.g. keywords natural language phrases numbers expressions functions data objects or references to physical and virtual objects individuals places or concepts where such query terms may be organized in various ways e.g. as an unordered or ordered set according to a digital or conceptual logical flow such as a set of Boolean logical connectors. Moreover such queries may be received through many modalities including full text entry symbolic text entry e.g. T9 input touch or other pointer input verbal utterances physical gestures and nonverbal cues such as body language and eye gaze position. In some such examples a query may be specified in two or more modalities e.g. a combination of a verbal utterance and a physical gesture and or may be received in a first query modality and applied to modify a query state generated by a previous query received in a second query modality that is different from the first query modality.

As a third variation of this first aspect the techniques presented herein may associate such queries to various types of query domains . For example the query domains may comprise services applications data sets and or content sets offered by various transaction application data and or content servers such as file servers webservers database servers and email servers. Such query domains may also comprise locally deployed services or components such as a file system database system or email mailbox provided on the device . Those of ordinary skill in the art may devise many such scenarios wherein the techniques presented herein may be applied.

A second aspect that may vary among embodiments of these techniques relates to the manner of parsing queries .

As a first variation of this second aspect a query may be parsed by comparing the query terms with a set of known query terms . For example among a set of documents such as web pages against which the query is to be applied respective documents may be preprocessed to identify a set of keywords associated with each document. The keywords appearing in respective documents may be considered a known set of keywords and a query may be parsed by identifying query terms that match the keywords extracted from the document. Moreover this comparison may be applied in a literal manner e.g. finding exact matches or a flexible manner e.g. a string matching comparison that attempts to identify similarities between the query terms of the query and the keywords of the query domain .

As a second variation of this second aspect a query may be adjusted in various ways during parsing. As a first example the query terms may be spell checked in a current language in order to evaluate the query despite errors in entry. As a second example the query may be translated from a first language to a second language that is more relevant to the query domain . As a third example the query and or keywords of a query domain may be translated according to a Soundex algorithm in order to compare query terms with the spoken equivalents of the keywords.

As a third variation of this second aspect a query may be parsed according to a particular query domain . For example a document set may include one or more subsets of documents sharing similar keywords e.g. a first set of web pages comprising news articles and a second set of web pages comprising a commercial flight service . If a particular query domain has been selected the query may be parsed in view of the keywords of the current query domain e.g. interpreting the query term oxford as specifying the city of Oxford as a location rather than the university located in the same city . Additionally the semantics of a query domain may be applied to parse the query e.g. in the commercial flight service the order of the query terms of the query paris to london may indicate a semantic relationship whereas the order may be less significant for other query domains such as a generalized web search . If no query domain is yet selected the query terms of the query may be compared with those of respective query domains and a query domain having the highest similarity with the query may be selected as the current query domain . Alternatively or additionally the query may be compared with other query domains and if a different query domain has a higher similarity with the query than a current query domain the query may be interpreted as a request to switch query domains . These and other variations in the parsing of the query may be devised by those of ordinary skill in the art while implementing the techniques presented herein.

A third aspect that may vary among embodiments of these techniques relates to the types of query state modifications utilized by the device .

As a first variation of this third aspect the query state modification set may include a query state initiating modification e.g. initializing the query state at the beginning of a query dialog a query term adding state modification e.g. adding one or more query terms to the query state a query term substituting state modification e.g. substituting one or more query terms specified in the query for one or more query terms in the query state a query term removing state modification e.g. removing one or more query terms from the query state a query state saving modification e.g. persisting the current query state to enable a return to this query state at a later time a query state sequence navigating modification e.g. returning to a former stored query state a query state domain changing modification e.g. associating the query state with a new or different query domain a query state intent changing modification e.g. associating the query state with a new or different query intent and a query state resetting modification e.g. reinitializing a portion of the query state such as removing all of the query terms from the query state resetting a history of the query state and or resetting the query domain and or the query intent of the query state . The query state modification set may therefore provide many different types of query state modifications respectively representing various intents of the user in formulating the query to be applied to the current query state of the device .

In view of such query state modifications the device may modify the query state of the device in various ways. As a first such example the query state may comprise a current query domain selected from a query domain set and the query state modification may involve identifying a selected query domain associated with the query and if the selected query domain differs from the current query domain of the query state associating the query state with the selected query domain . As a second such example the query state may be associated with a current query intent within the query domain e.g. one of several functions or transactions that are available within a particular service and the query state modification may involve identifying a selected query intent associated with the query and if the selected query intent differs from the current query intent of the query state associating the query state with the selected query intent . Moreover the identification of the query domain and or query intent of the query may involve predictive and probabilistic classification in a similar manner as the selection of a query state modification . For example the device may include a query domain set by configuring a query domain classifier to calculate probabilities that respective queries are associated with each query domain . A particular query may then be associated with a selected query domain by invoking the query domain classifier to calculate by calculating a selected query domain probabilities of respective selected query domains and if the selected query domain probability exceeds a current query domain probability for a current query domain associated with the query state associating the query state with the selected query domain .

As a second variation of this third aspect respective query intents may define a set of query slots to be mapped to respective query terms . For example the query intent may simply identify a collection of a number and or types of items specified in queries associated with the query intent e.g. a commercial flight service may identify a query intent to examine a particular flight wherein such queries may be specified as a flight number and a date . Alternatively and as illustrated in the exemplary scenario of the query intent may specify a template query including a number of query slots into which query terms of an associated query may be mapped. That is when the device determines that the user is seeking to submit a query with a particular query intent the device may assist the user in formulating a query that accurately expresses this type of query intent .

As a further variation various techniques may be utilized to map respective query terms of a query to the query slots of a query intent . For example a query intent may represent a request for information about flights from an origin location to a destination location but a query contains two query terms representing two locations and logic may have to be invoked to determine which query term specifies the origin location and which specifies the destination location. As a first such example the query slots may be identified with query slot identifiers e.g. an origin location may follow the keyword from and a destination location may follow the keyword to . As a second such example the order of the query terms may be reflected in the order of the query term slots . Alternatively or additionally the mapping may be probabilistically determined using a classifier configured to map query terms of a query to the query slots of the query intent

As a still further variation after selecting a query intent and mapping the query state and query terms to respective query slots the device may be configured to detect one or more unfilled query slots that represent missing information for the query intent e.g. a user may specify an interest in purchasing a ticket for a flight between two cities but may fail to specify a date . The device may request a query term for respective unfilled query slots e.g. When would you like to travel and may associate provided query terms with the unfilled query slots. Alternatively or additionally the device may refer to other sources of information to provide query terms for unfilled query slots. For example if a user fails to specify an origin location while purchasing a flight on a particular date the device may refer to a user profile or calendar of the user to predict the origin location of the user . Those of ordinary skill in the art may devise many types of query state modifications that may be devised and or applied according to the techniques presented herein.

A fourth aspect that may vary among embodiments of these techniques relates to the manner of calculating a query state modification probability indicating the likelihood that a particular query is intended by the user to apply a particular type of query state modification to the current query state .

As a first variation of this fourth aspect the device may utilize a user defined logic. For example the user or a software developer may specify the calculations for respective query state modifications e.g. a particular set of keywords or a particular natural language phrase may indicate a particular type of query state modification such as how about indicating a substitution of the specified query term for a query term of a similar type in the query state .

As a second variation of this fourth aspect a classifier may be automatically generated to classify respective query terms. For example a Bayesian classifier an artificial neural network or a genetic algorithm may be synthesized using a query state modification training set comprising an identification of query state modifications for prototypical queries .

The classifier may then be invoked to classify new queries specified by users into query state modifications with a particular query state modification probability indicating how closely the query matches prototypical queries in the training set. For example the training set may include a query how about as a query substitution state modification and approximately similar queries such as so how about and what about may be calculated as having a high query state modification probability for query substitution state modification and a lower query state modification probability for a query removal state modification specifying a removal of the specified query term from the query state .

As a third variation of this fourth aspect a mechanical Turk solution may be devised wherein a query is classified by asking the same user or another user to select a query state modification for the query . This solution may be utilized e.g. when automated or heuristic based classifiers have failed to identify a query state modification having a sufficiently high query state modification probability or to resolve difficult choices between two or more query state modifications each having a high query state modification probability for the query . Alternatively or additionally the results of the user selection may be formulated as a heuristic rule or additional training data for training a classifier thereby enabling the device to calculate accurate query state modification probabilities for this and similar queries . Those of ordinary skill in the art may devise many techniques for calculating query state modification probabilities in accordance with the techniques presented herein.

A fifth aspect that may vary among embodiments of these techniques relates to the selection of a selected candidate query state from among a set of candidate query state modifications in view of the query state modification probabilities .

As a first variation of this fifth aspect the selection may be performed by many types of comparisons. As a first such example the candidate query state modifications may be compared consecutively or concurrently e.g. identifying a set of candidate query state modifications and comparing many of the query state modification probabilities therefor or identifying and selecting a first candidate query state modification with a first query state modification probability and then serially identifying additional candidate query state modifications and performing a comparison with the currently selected query state modification .

As a second variation of this fifth aspect the comparisons may continue until all of the query state modifications stored by the device are considered and the candidate query state modification having the highest query state modification probability may then be selected. Alternatively the comparisons may continue until one candidate query state modification is identified as having a significantly higher query state modification probability than the other candidate query state modifications e.g. continuing to evaluate the candidates until reaching a consensus that one option is considerably more likely than the others . If such a consensus is unreachable the device may ask the user for a clarifying query.

As a third variation of this fifth aspect the candidate query state modifications may be compared not just for the currently submitted query but for the earlier queries and the candidate query state modifications evaluated at the earlier stages. For example a user may submit a first query asking about the cost of a trip from Paris to London and may later submit a second query asking for the distance by road from Paris to a small town outside of Burgundy that is also known as London. The second query may cause the device to reevaluate the first query in light of this new information i.e. the user s expressed interest in visiting the town of London in France. Accordingly the device may reevaluate the candidate query modifications and the query modification probabilities for both the first query and the second query and may adjust the dialogue with the user accordingly e.g. updating the answers about the requested cost of the trip from Paris to London to indicate not an international flight but a short drive . Additionally in view of this possibility the device may upon evaluating the candidate query modifications retain the unselected candidate query modifications in case future queries prompt a reevaluation of the unselected candidate query modifications that raises the associated query modification probabilities . In this manner the device may store and consider a continuing set of hypotheses indicating various possible query intents of the user while formulating the queries may adjust past responses and or may continue to consider candidate query modifications as ongoing hypotheses as to the intent of the user . Additionally the device may also inform the user when earlier presented selections are adjusted upon reevaluation and or may spontaneously revise earlier presented information in view of the reevaluated hypotheses. These and other variations in the selection of the selected query modification from among the candidate query modifications may be devised by those of ordinary skill in the art while implementing the techniques presented herein.

A sixth aspect that may vary among embodiments of these techniques relates to additional features that may be included in various embodiments.

As a first variation of this sixth aspect in addition to modifying the query state in response to a query an embodiment of these techniques may additionally use the query state to fulfill the query of the user . For example an exemplary system may include a query fulfilling component that is configured to evaluate the query state to identify one or more query results and to present the query results to the user . Additionally such as query fulfilling component may present the query state to the user with the query results e.g. describing for the user the new query state generated by modifying the preceding query state according to the query state modification specified by the query .

As a second variation of this sixth aspect an embodiment of these techniques may enable the user to navigate among the sequence of query states comprising the query dialogue between the user and the device . For example an exemplary system may include a query state saving component that is configured to store each new query state generated by modifying the query state according to a query and upon receiving a request from the user to select a stored query state select the stored query state as the current query state . This navigation may be selected by an explicit command from the user e.g. go back or clicking back button or by a query state modification deduced for a query e.g. never mind or none of those in response to providing a set of query results . Moreover an exemplary system may store a query state hierarchy representing the hierarchical relationships between the query states generated during the query dialogue such as a stack or tree and the user may present a request to navigate from a current query state to a stored query state that is related to the current query state in the query state hierarchy e.g. go back two steps to indicate a selection of a query state two steps prior in the stack in order to reverse the latest two query state modifications . Other hierarchical structures may also be provided to enable different types of navigation among the query hierarchy such as a list tree graph or set.

As a third variation of this sixth aspect various techniques may be utilized to resolve ambiguities in the parsing of a query including the selection of a query state modification query domain query intent and or a mapping of query terms to respective query slots of a selected query intent by asking the user to clarify the query . For instance if the query is identifiable with two or more query state modifications having similar query state modification probabilities the device may indicate to the user a query ambiguity and upon receiving from the user a clarifying query that addresses the query ambiguity may supplement the query and or query state to generate a supplemented query and then recalculate the query state modification probabilities using the supplemented query. As one such example the query ambiguity may include a set of clarifying query options that address the query ambiguity toward respective query state modifications e.g. do you want to add these query terms to the query state or start a new query with these query terms and the clarifying query received from the user may comprise a selected clarifying query option e.g. add terms .

As a fourth variation of this sixth aspect a query ambiguity may be resolved through reference to outside sources. As a first such example a user profile of the user may provide information that resolves ambiguities in a query and or fills missing query terms in one or more query slots . As a second such example a query state may be associated with at least one earlier query and the device may upon receiving a query identifiable by at least two query state modifications supplement the query with at least one earlier query to generate a supplemented query and then recalculate the query state modification probabilities of the supplemented query for respective query state modifications . For example if an earlier query specified purchase flight for today but later queries and or query states omit a specified date a query slot representing a date for purchasing a flight ticket may be inferred from the earlier query as today. These and other features may be included in various embodiments of the techniques presented herein.

At a second time point the user may provide a second query as a clarifying query responsive the query ambiguity . However the second query may also represent another change in query intent e.g. returning to the query intent of viewing available flights rather than purchasing tickets. Upon making this determination by comparing the query intent probabilities computed for respective query intents the device may store the query state relating to purchasing tickets and may generate a new query state based on the query terms of the query in particular the query term Tuesday for the date of the flight and the query state . However the query slots of this query intent may include an unfilled query slot indicating the origin location for the flight. However at this second time point rather than asking the user for a clarifying query the device may refer to a user profile of the user to determine where the user is likely to be on Tuesday and may discern the user s initial location of London. The device may therefore supplement the new query state with this information may evaluate the new query state in the selected query domain of a commercial flight service and may present the query results to the user in the form of a list of flights from London to Paris on Tuesday.

At a third time point the user may submit a third query as a combination of a gesture e.g. pointing at an entry in the list of query results and providing the natural language input that one. This multi modality query may be evaluated with the query state . However the current query state and current query may together be inadequate to support a deduction of the query intent e.g. the query intent probabilities for all query intents may be low . Instead the query state may be supplemented with information about the earlier stored query state indicating the user s intent to purchase a flight which may significantly raise the query intent probability of this query intent . Accordingly the device may infer that the user s selection indicates a request to purchase a ticket for the selected flight. Moreover in view of the completely filled set of query slots of this query intent the device may evaluate the new query state in the selected query domain thereby completing the purchase of the selected flight ticket and presenting a confirmation as the query result . In this manner the exemplary scenario of depicts the incorporation of many of the variations presented herein in the fulfillment of a query dialogue between the user and the device . Those of ordinary skill in the art may devise many such features usable in many such scenarios in accordance with the techniques presented herein.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

