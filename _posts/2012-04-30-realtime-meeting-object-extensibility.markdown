---

title: Real-time meeting object extensibility
abstract: A system and method for sharing and installing customized meeting objects into an ongoing electronic meeting is disclosed. An object module, which defines the customized meeting object is loaded onto a server hosting the ongoing electronic meeting. Client-side portions of the object module are then downloaded to each of the clients that are participating in the electronic meeting. While the meeting is ongoing, the meeting player installs the client-side portions of the object module and displays the customized meeting object, at least, to a meeting presenter. Once displayed to a meeting presenter, the presenter may use the customized meeting object during the meeting and display such object to the meeting participants when desired.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08924477&OS=08924477&RS=08924477
owner: Adobe Systems Incorporated
number: 08924477
owner_city: San Jose
owner_country: US
publication_date: 20120430
---
This application is a continuation application of U.S. patent application Ser. No. 10 857 606 filed May 27 2004. The entire contents of both applications are incorporated herein by reference.

The present invention relates in general to collaborative electronic meeting space and more specifically to providing real time extensibility of meeting objects.

The first Internet was a communications system funded and built by researchers for military use. This Internet originally known as ARPANET was embraced by the research and academic communities as a mechanism for scientists to share and collaborate with other scientists. This collaborative network quickly evolved into the information superhighway of commerce and communication. The Internet explosion was due in part to the development of the World Wide Web WWW and graphically based Web browsers which facilitated a more graphically oriented multimedia system that uses the infrastructure of the Internet to provide information in a graphical visual and interactive manner that appeals to a wider audience of consumers seeking instant gratification.

As the technology underlying transmission bandwidth has grown in conjunction with the accessibility to such increasing transmission bandwidth a new paradigm for the old idea of Internet collaboration is emerging that takes advantage of the modern graphical visual world. This new paradigm is also driven by the advance in real time or time sensitive data transmission technology such as Voice over Internet Protocol VoIP technology and the like. Non Internet videoconferencing which has generally never been able to completely supplant teleconferencing as a viable means for reliable communications is slowly fading away in favor of Internet driven technology such as collaborative electronic meetings. Services such as WEBEX COMMUNICATIONS INC. S WEBEX electronic meeting or collaboration services offer the ability for users to connect at least initially across the Internet to share voice video and data in real time for meetings presentations training or the like.

In such collaborative meeting environments a virtual meeting room typically is made up of several meeting objects which are generally containers for presentation information such as slides video audio documents computer applications and the like that are themselves contained within the container of the meeting room. Other meeting objects may contain and display information concerning the meeting such as the meeting participants text communications made by the meeting participants or the like. In current electronic meeting applications these meeting objects are usually pre existing segments of computer code that arc statically placed onto a form virtual meeting room. Except for the possibility of showing and hiding predefined objects or of being capable of moving a meeting object to a different location on the virtual meeting room during an actual electronic meeting customization of meeting objects is typically performed well in advance and installed into the electronic meeting application architecture with the help of the application owner. Moreover existing electronic meeting applications offer no means for new meeting objects to be created and implemented during a live meeting. This lack of control reduces the flexibility of the modern electronic meeting applications 

The various embodiments of the present invention are directed to a system and method for sharing customized meeting objects into a real time electronic meeting. Pod developers may create a new meeting object or pod that performs a desired task or set of features or functions or display desired information. A pod or meeting object is a display sub module that is displayed on the meeting interface. Each pod or object may display various different types of information such as a video slides text notes and the like and may also include logic to perform specific functions. These meeting objects or pods may be designed to look a particular way or be a particular size or even perform any variety of different functions. Because a meeting object or pod will be used not only on each of the meeting participant s computers or meeting interface units but also on the server that is hosting the electronic meeting the pod developers create a client side meeting object module and a server side meeting object module. The client side modules are written in a file format that may be used by the client side electronic meeting application. Conversely the server side modules are also written in a file format that may be run by the host server. The function of each local pod playing on the electronic meeting application may be directed or fed with information or data flowing from or being produced by the server side pod application running on the host server. In the case of an online meeting this information or data may originate on the client computer of a meeting presenter and or viewer or meeting participant. the originating information would then be communicated to the host server which disseminates it to the other participating client units.

In representative embodiments of the present invention the pod developers may package both the client side module and server side module into a single archive file which may then he uploaded to the host server. After unpacking the archive file the server installs the server side module and signals each of the participating clients that a new meeting object is available. Each client would then signal to download the client side module. The electronic meeting application operating on the participating client receives and installs the server side module during an ongoing electronic meeting. As soon as the module is installed and the new meeting object establishes communication with the server side module the new meeting object may appear to the meeting participants on the electronic meeting canvas in real time or at least become available to a meeting presenter for immediate display on the meeting canvas.

The foregoing has outlined rather broadly the features and technical advantages of the present invention in order that the detailed description of the invention that follows may be better understood. Additional features and advantages of the invention will be described hereinafter which form the subject of the claims of the invention. It should be appreciated that the conception and specific embodiment disclosed may be readily utilized as a basis for modifying or designing other structures for carrying out the same purposes of the present invention. It should also be realized that such equivalent constructions do not depart from the invention as set forth in the appended claims. The novel features which are believed to be characteristic of the invention both as to its organization and method of operation together with further objects and advantages will be better understood from the following description when considered in connection with the accompanying figures. It is to be expressly understood however that each of the figures is provided for the purpose of illustration and description only and is not intended as a definition of the limits of the present invention.

In the embodiment depicted in participating client may be a meeting presenter for example. The user at participating client develops a customized meeting object to be added to the ongoing meeting within electronic meeting space . The presenter uploads the new meeting object or pod from participating client to host server via Internet . Host server installs the server side portion of the new meeting object and then pushes the client side portion of the new meeting object to each of participating clients . Once installed by the electronic meeting application operating on participating clients the new meeting object appears on the meeting canvas for each of the users to see and interact with.

It should be noted that when implemented in iMRC technology such as a MACROMEDIA FLASH player electronic meeting canvas may be displayed on one instance of an iMRC while each of the contained meeting objects or pods may be rendered as independent objects on the same instance of the iMRC. This implementation allows for separate and independent communication streams to be established between each iMRC instance and an interactive multimedia communication server iMCS such as MACROMEDIA INC. s FLASH COMMUNICATION SERVER FCS .

It should be noted that in some embodiments of the present invention the code for interface components such as buttons check boxes scroll bars and the like may he excluded from the actual pod module or file relying instead on a run time shared library RSL to supply the component code. The pod module or file would therefore contain references or calls to the RSL in order to generate the defined interface components. Additional or alternative embodiments of the present invention however may include the interface component code within the actual pod or meeting object module.

During the meeting the insurance agent may be broadcasting voice and video through camera and voice pod and possibly sending chat messages through chat pod . The underlying electronic meeting application running electronic meeting canvas and each of the displayed meeting objects installs the code for application pod . Once installed application pod is available for the insurance agent to bring onto electronic meeting canvas as it is shown in . As application pod is brought onto electronic meeting canvas the information and data being shared in camera and voice pod attendees pod chat pod and notes pod continues to be shown without interruption.

The hypothetical functionality of application pod allows both the insurance agent and the potential insured to fill out an insurance form together even though both may be in locations remote to each other. This functionality would be useful for each such electronic meeting for this insurance product or insurance company. Therefore in additional or alternative embodiments of the present invention once the server side code for the new meeting object has been installed and a copy of the client side code saved onto the host server every other meeting established by this particular insurance company may access application pod for future meetings. Thus the new object module is installed once in order to be available for future electronic meetings.

The electronic meeting application comes with a variety of pre built pods pods which represent normal generic meeting objects or pods such as slides pod camera and voice pod and the like. The generic meeting objects are installed as pods on the client side of the electronic meeting application participant client and as pods on the server side hosting server . One consideration that is made in allowing custom meeting objects into live electronic meeting is security. If no security considerations are made it may be possible for a custom meeting object module to be created that disrupts or crashes the meeting or worse possibly infect the clients and servers with a virus or other such undesirable software. The embodiment of the present invention shown in is constructed with security measures taken to insulate the inner workings of live electronic meeting from a custom meeting object such as custom pod on participant client and it s server side counterpart custom pod .

Instead of installing custom pod directly into the electronic meeting application on participant client a new pod type is defined within the electronic meeting application to interact specifically with customized pods. This custom pod type pod shell acts as a container for custom pod and limits custom pod s communication with shell and the electronic meeting application on hosting server . Pod shell acts like an isolation interface isolating the processing activities of custom pod . Pod shell maintains two way communications with shell for managing the calls to hosting server and the server side counter part custom pod .

When a new custom pod is uploaded shell causes a new instance of the new pod type to be formed pod shell . Pod shell creates an intermediary object presentation object which accepts API calls from custom pod but which is controllable by pod shell should custom pod become unstable or attempts to disrupt the meeting. Custom pod is installed within the container of pod shell and is able to make application programming interface API calls only to presentation object . Presentation object is also limited to make API calls only to pod shell . In turn pod shell may make API calls directly to custom pod . With this architecture custom pod is sufficiently isolated from the inner workings of the electronic meeting application running live electronic meeting on participant client .

In operation the meeting participant may activate some interface component on the new meeting object defined by custom pod . Shell communicates this API call to pod shell . Pod shell makes the API call directly on custom pod . Custom pod makes the API call to presentation object which in turn calls on pod shell . Pod shell makes a server call to shell which communicates the call over Internet to server side shell . Server side shell makes its API call on pod shell which makes an API call on the server side counterpart custom pod . When the processing of custom pod returns responsive data or a result the data or result is communicated to presentation object which communicates the data to pod shell . Pod shell communicates the data to server side shell which transmits the data over Internet to shell . Shell may either render the data onto the new meeting object directly or may deliver the data to custom pod through pod shell . If processing is done at custom pod the results may be delivered back to shell for rendering through presentation object and pod shell . Thus custom pod is isolated from direct communication with the main components of the electronic meeting application. If custom pod attempted to make an invalid API call to presentation object presentation object would not understand the call which would go unanswered. Similarly because custom pod is only allowed to make API calls on presentation object if a call were attempted on pod shell or shell from custom pod it would similarly go unanswered.

It should be noted that various embodiments of the present invention may implement live electronic meeting using existing iMCS technology such as MACROMEDIA FCS and existing iMRC technology such as the MACROMEDIA FLASH player. When created using such FCS and MACROMEDIA FLASH player technology it should be noted that custom pod would be a Small Web File SWF format which is the native format for the MACROMEDIA FLASH player. Custom pod would then be an ActionScript for Communication ASC file format which is one of the native formats for the FCS. Other technologies with similar functionality such as a dynamic link library DLL file a JAVA class file and or a CLR assembly may be used to implement the various embodiments of the present invention.

A meeting object developer may input client side module and server side module into packing utility . Packing utility compresses client side module into compressed client side module and compresses server side module into compressed server side module . Compressed modules and are then wrappered into an extension file with the addition of module instructions . Module instructions is a set of server instructions that direct the host server what to do with meeting object extension including how to unpack and install server side module .

It should be noted that in additional and or alternative embodiments of the present invention meeting object extension may not include module instructions . In such embodiments the server automatically knows how to handle the other objects within meeting object extension .

After the host server installs unpacked server side module a signal may be sent by the host server to each participating client indicating that a new meeting object is available. This signal is sent to the electronic meeting application running on each participating client system. A user is unaware that any such signaling occurs with the host server regarding a new meeting object. The electronic meeting application for each of the participating clients then requests to download the client side module from the host server. Once client side module is downloaded electronic meeting application begins running the client side code for implementing the new meeting object on the presentation screen. The electronic meeting application maintains an open connection to the host server and is able to begin running a presentation instance for the new meeting object at the same time that the rest of the meeting is still running.

A related technology that utilizes a packaged set of files for installation onto a server is SUN MICROSYSTEMS INC. s JAVA ARCHIVE JAR files. The JAR file format consolidates multiple files into a single archive file which contains JAVA classes and other auxiliary files such as property files. These multiple files are compress using a ZIP compression algorithm. The compression of the files assists in distributing applications across a network. However while this style of archiving as in the JAR files has been practiced the selected embodiments of the present invention which utilize the packaging system is distinctive. Because JAR files are intended to run with JAVA based application servers which run with a Web browser the client cannot utilize the application and information within the JAR file without first refreshing the page. In contrast the embodiments of the present invention that utilize a packaging technique operate in real time such that as the electronic meeting is operating the server and clients may download and install the packaged files or applications.

Although the present invention and its advantages have been described in detail it should be understood that various changes substitutions and alterations can be made herein without departing from the invention as defined by the appended claims. Moreover the scope of the present application is not intended to be limited to the particular embodiments of the process machine manufacture composition of matter means methods and steps described in the specification. As one will readily appreciate from the disclosure processes machines manufacture compositions of matter means methods or steps presently existing or later to be developed that perform substantially the same function or achieve substantially the same result as the corresponding embodiments described herein may be utilized. Accordingly the appended claims are intended to include within their scope such processes machines manufacture compositions of matter means methods or steps.

