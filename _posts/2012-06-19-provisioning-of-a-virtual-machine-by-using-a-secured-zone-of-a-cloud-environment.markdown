---

title: Provisioning of a virtual machine by using a secured zone of a cloud environment
abstract: Apparatuses, computer readable media, methods, and systems are described for providing a list of cloud orchestrator clients, each of the clients being associated with one of a plurality of cloud provider data centers, processing an instruction to at least one of create a virtual machine and change a state of the virtual machine, select a particular one of the cloud orchestrator clients associated with a particular one of the cloud provider data centers where the virtual machine is to be created or where the virtual machine currently resides, generating a provisioning request instructing the particular cloud orchestrator client to perform at least one of creating the virtual machine and changing the state of the virtual machine, and communicating the request to the particular cloud orchestrator client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09183031&OS=09183031&RS=09183031
owner: Bank of America Corporation
number: 09183031
owner_city: Charlotte
owner_country: US
publication_date: 20120619
---
Cloud computing is becoming increasingly popular. Cloud computing may refer to aggregated resources that can be provisioned on demand. Cloud computing may involve cloud resources performing computations instead of or in addition to a user s computer. Cloud computing has been compared to a utility where computing is the service being provided.

Conventional cloud computing may have issues when provisioning of virtual machines and may be using architecture models that are inefficient. In view of such issues improvements in provisioning of virtual machines in cloud computing environments are needed.

The following presents a simplified summary in order to provide a basic understanding of some aspects of the disclosure. The summary is not an extensive overview of the disclosure. It is neither intended to identify key or critical elements of the disclosure nor to delineate the scope of the disclosure. The following summary merely presents some concepts of the disclosure in a simplified form as a prelude to the description below.

According to aspects of example embodiments apparatuses computer readable media methods and systems are described for provisioning of virtual machines in a cloud environment.

In some aspects apparatuses computer readable media methods and systems are described for providing a list of cloud orchestrator clients each of the clients being associated with one of a plurality of cloud provider data centers processing an instruction to perform at least one of creating a virtual machine and changing a state of the virtual machine selecting a particular one of the cloud orchestrator clients associated with a particular cloud provider data centers where the virtual machine is to be created or where the virtual machine currently resides generating a provisioning request instructing the particular cloud orchestrator client to perform at least one of creating the virtual machine and changing the state of the virtual machine and communicating the request to the particular cloud orchestrator client.

In some aspects apparatuses computer readable media methods and systems are described for providing a cloud orchestrator client within a secured zone of a cloud provider wherein the secured zone is associated with a tenant data center processing by the cloud orchestrator client a request from a provisioning system for performing at least one of creating a virtual machine and changing a state of the virtual machine communicating by the cloud orchestrator client an authorization request to a cloud orchestrator server associated with the provisioning system in response to receiving an authorization approval response calling by the cloud orchestrator client a cloud provider application programming interface API with an instruction to perform at least one of creating the virtual machine and changing a state of the virtual machine and informing by the cloud orchestrator client the provisioning system of at least one of whether the virtual machine was successfully created and whether the state of the virtual machine was successfully changed.

Aspects of the embodiments may be provided in at least one non transitory computer readable medium and or memory storing computer executable instructions that when executed by at least one processor cause a computer or other apparatus to perform one or more of the process steps described herein.

These and other aspects of the embodiments are discussed in greater detail throughout this disclosure including the accompanying drawings.

In the following description of the various embodiments reference is made to the accompanying drawings which form a part hereof and in which is shown by way of illustration various embodiments in which the disclosure may be practiced. It is to be understood that other embodiments may be utilized and structural and functional modifications may be made without departing from the scope and spirit of the present disclosure.

With reference to the computing system environment may include a computing device having a processor for controlling overall operation of the computing device and its associated components including random access memory RAM read only memory ROM communications module and memory . Computing device may include a variety of computer readable media. Computer readable media may be any available media that may be accessed by computing device may be non transitory and may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions object code data structures program modules or other data. Examples of computer readable media may include random access memory RAM read only memory ROM electronically erasable programmable read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that can be used to store the desired information and that can be accessed by computing device .

Although not required various aspects described herein may be embodied as a method a data processing system or as a computer readable medium storing computer executable instructions. For example a computer readable medium storing instructions to cause a processor to perform steps of a method in accordance with aspects of the disclosed embodiments is contemplated. For example aspects of the method steps disclosed herein may be executed on a processor on computing device . Such a processor may execute computer executable instructions stored on a computer readable medium.

Software may be stored within memory and or storage to provide instructions to processor for enabling computing device to perform various functions. For example memory may store software used by the computing device such as an operating system application programs and an associated database . Also some or all of the computer executable instructions for computing device may be embodied in hardware or firmware. Although not shown RAM may include one or more are applications representing the application data stored in RAM while the computing device is on and corresponding software applications e.g. software tasks are running on the computing device .

Communications module may include a microphone keypad touch screen and or stylus through which a user of computing device may provide input and may also include one or more of a speaker for providing audio output and a video display device for providing textual audiovisual and or graphical output. Computing system environment may also include optical scanners not shown . Exemplary usages include scanning and converting paper documents e.g. correspondence receipts and the like to digital files.

Computing device may operate in a networked environment supporting connections to one or more remote computing devices such as computing devices and . The computing devices and may be personal computing devices or servers that include many or all of the elements described above relative to the computing device . Computing device may be a mobile device e.g. smart phone communicating over wireless carrier channel .

The network connections depicted in may include a local area network LAN and a wide area network WAN as well as other networks. When used in a LAN networking environment computing device may be connected to the LAN through a network interface or adapter in the communications module . When used in a WAN networking environment computing device may include a modem in the communications module or other means for establishing communications over the WAN such as the Internet or other type of computer network. It will be appreciated that the network connections shown are illustrative and other means of establishing a communications link between the computing devices may be used. Various well known protocols such as TCP IP Ethernet FTP HTTP and the like may be used and the system can be operated in a client server configuration to permit a user to retrieve web pages from a web based server. Any of various conventional web browsers can be used to display and manipulate data on web pages.

The disclosure is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the disclosed embodiments include but are not limited to personal computers PCs server computers hand held or laptop devices smart phones multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Referring to an illustrative system for implementing example embodiments according to the present disclosure is shown. As illustrated system may include one or more workstation computers . Workstations may be local or remote and may be connected by one of communications links to computer network that is linked via communications link to server . In system server may be any suitable server processor computer or data processing device or combination of the same. Server may be used to process the instructions received from and the transactions entered into by one or more participants.

Computer network may be any suitable computer network including the Internet an intranet a wide area network WAN a local area network LAN a wireless network a digital subscriber line DSL network a frame relay network an asynchronous transfer mode ATM network a virtual private network VPN or any combination of any of the same. Communications links and may be any communications links suitable for communicating between workstations and server such as network links dial up links wireless links hard wired links as well as network types developed in the future and the like.

Although only a single tenant data center and two cloud provider data centers are shown in system may include additional tenant data centers and cloud provider data centers. The components of the tenant data centers and the cloud provider data centers may be implemented by one or more of the computing devices discussed above. Further each of the tenant data centers and cloud provider data centers may include at least one processor and at least one memory storing executable instructions that when executed by the at least one processor respectively cause the tenant data centers and cloud provider data centers to perform the functions described herein.

In an example tenant data center may include one or more provisioning systems A B a cloud orchestrator server and a database . A tenant user may use either or both of the provisioning systems A B for initiating provisioning of one or more virtual machines on the cloud provider data centers A B. In an example provisioning system may use a software tool for provisioning and changing states of VMs implemented by one or more cloud provider data centers . Provisioning systems A B may permit tenants to control on which cloud provider data centers virtual machines are deployed.

Cloud orchestrator server may be a combination of hardware software and processes that provide automation and ensure authorization and entitlement of an instance of a VM. Cloud orchestrator server may also track state and disposition of each VM instance throughout its entire life cycle regardless of which cloud provider data center A B is providing a particular VM instance.

Cloud provider data centers A B may include computer hardware e.g. one or more computing devices and software controlled by one or more cloud providers. The cloud provider data center may provide a computational service permitting one or more tenants to provision virtual machines VMs and to execute computational workloads using VMs. In an example cloud provider data centers A B may include tenant controlled cloud DMZs A B virtual private clouds for tenant A B and cloud infrastructure A B. Cloud provider data centers A B may provide secured zones within a cloud environment that may be trusted physical space over which the tenant has physical and logical control. An example of a secured zone is a tenant controlled cloud DMZ . The trusted physical space may include dedicated communication storage and computer components used for checking integrity authenticity and correctness of the cloud environment and optimizing operation of cloud nodes. The tenant may use the cloud DMZ as the basis from which to extend trust from an internal network of the tenant data center into a cloud environment provided by a cloud provider data center . Because cloud DMZ may be trusted cloud DMZ may be considered to be part of an internal network of the tenant data center even though cloud DMZ is a part of the cloud environment.

In an example tenant controlled cloud DMZ may include a cloud orchestrator client and a secure trusted boot server . Cloud orchestrator client may provide an interface with which provisioning systems may interact to provision VMs. Cloud orchestrator client may function as a cloud provider proxy and may be configured to directly call a cloud provider application programming interface API of the cloud provider data center in which client resides. In an example each cloud orchestrator client may correspond to a single cloud provider data center and may not be used to instantiate or modify VMs at other cloud provider data centers. Cloud orchestrator client may provide for example a consistent interface for all of the provisioning systems to access when provisioning VMs at the associated cloud provider data center . Each cloud orchestrator client may be included within a corresponding Cloud DMZ . As seen in for example client A is included within Cloud DMZ A of cloud provider data center A and client B is included within Cloud DMZ B of cloud provider data center B.

Cloud DMZ may be created for a specific cloud provider data center and therefore cloud orchestrator client may also be specific to that cloud provider data center . For example each client may be created or configured to call only a specific cloud provider application programming interface API of the cloud provider data center in which client resides. Each cloud provider API may be specific to a particular cloud provider data center . In an example cloud orchestrator client A may only be able to call cloud provider API A of cloud provider data center A but not cloud provider API B when updating a state of an existing VM or creating a new VM.

Secure trusted boot server may be a physical machine or a virtual machine running a secure server e.g. Hypertext Transfer Protocol Secure HTTPS server and be used to implement a secure boot process. An example of a secure boot process is described in commonly assigned U.S. patent application Ser. No. 13 422 713 titled Secure Network Cloud Architecture the contents of which are incorporated herein by reference in their entirety. Other secure boot processes may also be used. In an example secure trusted boot server may comprise an application server and or the functionality of an application server. The application server may in cooperation with a cloud orchestrator client authenticate and or authorize provisioning requests.

Virtual private cloud may include one or more Cloud VM instances that represent VMs instantiated within a environment for a particular tenant. A single cloud provider data center may for example be operating multiple virtual private clouds one for each tenant. In an example cloud infrastructure may include the hardware and software running instantiated VMs within the virtual private cloud . For example cloud infrastructure may include hardware that executes the software that provides the cloud environment on which VMs within the virtual private cloud operate.

Components depicted in may be directly coupled with one another via virtual links physical links or combinations of both. In some examples components may be coupled via physical cable may communicate wirelessly may communicate via a wired and or wireless network and any combination thereof. Communication over any network link e.g. link created by physical connection such as network cable or fiber cable virtual link and the like. between components in optionally may be encrypted for security purposes.

With reference to element a tenant user may use provisioning system to issue a provisioning request to provision a new virtual machine and or change a state of an existing virtual machine. Examples of states of a virtual machine may include Being created Created Powered Off Powered On Starting Running Shutting Down Being Deleted and the like. When provisioning a virtual machine provisioning system may process a list of available cloud orchestrator clients as well as information about each client . For example the information may include a network address of each client a capacity of each cloud environment a client serves a type of virtual machine client is able to create e.g. based on requested operating system images memory size CPU count and the like . Provisioning system may use the information to intelligently select which cloud orchestrator client to use when creating a new virtual machine.

In an example cloud provider data centers may be placed in different geographic locations and may include hardware optimized for performing certain computational tasks. For instance cloud provider data center A may be located in Miami Fla. and may include hardware optimized for performing software development tasks and cloud provider data center B may be located in Richmond Va. and may include hardware optimized for performing product development tasks. In some examples performance of some tasks may be time sensitive and hence provisioning system may select a geographically closest cloud provider data center to provision a VM to reduce the amount of time required to communicate data between the tenant data center and cloud provider data center . In some other time sensitive examples geographic distance may be less important than hardware optimized for performing certain software tasks. Provisioning system may select a cloud provider data center having hardware optimized for performing certain software tasks even if another cloud provider data center is geographically closer when provisioning a VM. Provisioning system may also balance network delay and hardware optimization when determining which cloud provider data center to select.

When a particular client has been selected provisioning system may process the list of available clients to determine a network address associated with the selected client . For example a network address of each cloud orchestrator client may provide routing and destination information. The routing and destination information may be handled by underlying network architecture and its implementation. Provisioning system may not have any specific information about how to reach and communicate with client other than its network address. The network on which provisioning system is operating may automatically determine and route all requests to a particular client based on its network address. Provisioning system may generate a provisioning request that includes the network address and an instruction to provision a new VM or to change the state of an existing VM.

In an example provisioning system may request a selected client to provision a VM by directly calling a provisioning tool extension on a segment of an internal network of the tenant data center . The provisioning tool extension may provide for integration of provisioning system with the cloud orchestrator client e.g. how to format the provisioning request into a format that cloud orchestrator client understands . In an example the provisioning tool extension may be installed as part of provisioning system within tenant data center . Provisioning system may directly call the provisioning tool extension as if calling any other internal module e.g. may be an internal procedure call rather than a network call . The provisioning tool extension may be designed and implemented using the requirements provided by provisioning system .

Due to provisioning system having a list of available clients with information on their respective network addresses the provisioning request may be routed from the provisioning system to the desired client using standard network routing such as for example a remote procedure call that includes the network address. In an example provisioning system may issue a remote procedure call when instructing a selected cloud orchestrator client to provision a new VM or to update an existing VM. In another example provisioning system may use a plugin to issue a remote procedure call that is forwarded to cloud orchestrator client in Cloud DMZ .

Advantageously by provisioning system being aware of network addresses for each of the cloud orchestrator clients provisioning system may route provisioning requests to a desired client independent of cloud orchestrator server . Thus provisioning system may bypass cloud orchestrator server during requesting of provisioning and hence server does not have to make routing determinations as to which client a provisioning request should be routed.

With reference to element cloud orchestrator client optionally may upon receipt of the provisioning request contact cloud orchestrator server requesting approval to provision a VM. In an example client may issue a boot authorization request e.g. using a remote procedure call to confirm with cloud orchestrator server that provisioning a VM is permitted. Server may approve or veto the request or may modify the request. When modifying a request for example if provisioning system requested to create VMs but the user has permission to create only or if the client has remaining capacity based on procured capacity to handle only server may modify the request to allow client to create only VMs. In additional aspects cloud orchestrator server may confirm veto each provisioning request based on a finite state diagram enforced by server for a secure boot process. In an example a finite state diagram may indicate a set of allowed states in which a virtual machine may operate and allowed transitions between these states. For instance allowed states for a VM may include Requested Being Created Powered Off Powered On Starting Running Shutting Down and the like. In further aspects server may only allow certain transitions between the allowed states. For example finite state diagram may require that a VM pass sequentially through each of the allowed states and may prevent the VM from skipping a state in the sequence e.g. transitioning from Requested directly to Shutting Down and skipping all intermediate states . As noted above an example of a secure boot process is described in commonly assigned U.S. patent application Ser. No. 13 422 713 titled Secure Network Cloud Architecture. Other secure boot processes may also be used.

If approving the provisioning request and with reference to element server may update a global record stored by database . In an example database may be a centralized repository of information on virtual machines that have been provisioned. The global record may include for example data identifying virtual machines that have been provisioned their current states and on which of cloud provider data centers the virtual machines are running.

In reply to the provisioning request cloud orchestrator server may provide some or all resources for provisioning the VM in the cloud provider data center . For example server may translate the name of an operating system OS image requested by provisioning system to the name of an OS image that is actually available at a given cloud provider data center. Cloud orchestrator server may issue an authorization approval response e.g. a remote procedure call to provide client with information used for provisioning of a VM. For example server may provide client A with an account name and password to use when connecting to cloud provider API A.

Advantageously rather than a single cloud orchestrator client acting as a dispatcher for multiple cloud providers and APIs individual cloud orchestrator clients A B may call a single cloud orchestrator server to enforce policy but otherwise each cloud orchestrator client may act independent of other cloud orchestrator clients. Further cloud orchestrator server may be independent of the cloud provider data centers A B. This model may provide greater scalability and resiliency as compared to single central orchestrator client model since multiple cloud orchestrator clients may act independently of each other and each may be used by multiple provisioning systems .

With reference to element and optionally in response to receiving an approval message from cloud orchestrator server cloud orchestrator client may instruct cloud provider API operating on cloud infrastructure to create a new virtual machine or change the state of an existing virtual machine. For example client may translate and or interpret the provisioning request into instructions for instructing cloud provider API to perform certain operations. In an example provisioning system may communicate a provisioning request that requests creation of a VM and cloud orchestrator client may execute a series of API calls to satisfy the request. Example API calls may include to obtain an internet protocol IP address allocate disk space and then create a VM using the IP address and the disk space. In another example example client may issue a remote procedure call that is forwarded to cloud provider API in cloud provider data center .

With reference to element and in response to the provisioning request cloud infrastructure may create a new virtual machine or update the state of an existing virtual machine within the virtual private cloud . Cloud VM instance may for example represent a newly created VM or an existing VM that is being updated.

Elements of described below may apply to creation of a new virtual machine. If the state of an existing VM is being updated elements may be skipped and communication flow may proceed directly to element in one embodiment. described subsequent to provides an alternative or additional embodiment where elements may replace elements for when a state of an existing VM is being updated.

In with reference to element cloud VM instance may use a secure boot process to boot a newly provisioned virtual machine in a trustworthy way. To do so cloud VM instance may communicate a request to boot a new virtual machine to secure trusted boot server in initiate a secure boot process. An example secure boot process is described in commonly assigned U.S. patent application Ser. No. 13 422 713 titled Secure Network Cloud Architecture. Other secure boot processes may also be used.

With reference to element secure trusted boot server may verify with the cloud orchestrator client whether the boot attempt is valid and legitimate. An example of verifying whether a boot attempt is valid and legitimate is described in commonly assigned U.S. patent application Ser. No. 13 422 713 titled Secure Network Cloud Architecture. Verifying may also be performed in other manners.

With reference to element cloud orchestrator client may defer to or update cloud orchestrator server about the attempt to boot the newly provisioned virtual machine. When updating client may forward data to the server about the boot attempt. For example if encryption is used the data may include encryption keys to unlock an encrypted disk. The data may also include a reservation which may include a collection of data used to boot the VM. In an example server may be responsible for managing and providing reservations to client . In another example client may issue a remote procedure call to inform cloud orchestrator server of a current status of booting of a VM. When deferring client may forward data included in the provisioning request described above with reference to element and wait for acknowledgement from server that booting of a new virtual machine was desired and initiated by provisioning system . Upon receipt server may confirm that database includes data indicating that provisioning system requested the provisioning and compare that data with data provided by client . For example server may either 1 find a match and communicate to client a reply authorizing the booting to continue or 2 not find a match and communicate to client a reply denying authorization to complete the secure boot process. If denied client may terminate the booting. Denial of booting may occur for example as the result of receiving an erroneous provisioning request in element or due to a malicious party attempting to boot a virtual machine within the cloud provider data center .

With reference to element cloud orchestrator server may update database to include the data received from client in element and or to indicate whether there was a match between the data and data previously stored in database . The update may also include information about the boot attempt and whether the boot attempt was successful.

With reference to element Cloud VM instance may notify cloud orchestrator client about its readiness status and or about an update to its state. For example if the newly created virtual machine is eventually started Cloud VM instance may notify cloud orchestrator client about its readiness status. In an example Cloud VM instance may connect to an internal network of tenant data center by establishing secure tunnel as described in U.S. patent application Ser. No. 13 422 713. Example readiness statuses may include 1 a VM is still booting 2 a VM has properly booted and is ready to receive a workload for execution and 3 a VM did not properly boot. Additionally Cloud VM instance may notify the cloud orchestrator client as statuses change during the secure boot process. In further examples Cloud VM instance may be an existing VM and may notify cloud orchestrator client about an update to its state. Examples of states of a virtual machine may include Being created Created Powered Off Powered On Starting Running Shutting Down Being Deleted and the like.

With reference to element cloud orchestrator client may defer to or update cloud orchestrator server about the attempt to boot the provisioned virtual machine in a manner similar to that described above with reference to element . In an example during booting of the VM client may notify server about the readiness of the VM. The VM may communicate with the cloud provider client regarding any state changes it is encountering e.g. unlocking the encrypted disk or creation of secure tunnel and client may notify cloud orchestrator server about these changes and or allow server to react to these changes. For example client may issue a remote procedure call to inform cloud orchestrator server of a current status e.g. in progress successful unsuccessful of booting of a VM. Client may also issue a remote procedure call to provisioning system informing of a current status e.g. in progress successful unsuccessful of booting of a VM. For example client may communicate a message to provisioning system confirming that a virtual machine has been successfully created or has been successfully updated in the cloud environment. If problems were encountered the message may instead indicate that a virtual machine was not created or updated and provide information identifying the problem. With reference to element cloud orchestrator server may query or update database as described above with reference to element .

With reference to element cloud orchestrator client may poll the cloud provider API to determine a current state of the existing VM. With reference to element cloud provider API may poll the Cloud VM Instance to determine a current state of the existing VM and may inform client of the current state. With reference to element cloud orchestrator client may upon receiving the current state of the existing VM from cloud provider API notify the cloud orchestrator server about the current state of the existing VM and whether the update was successful. With reference to element cloud orchestrator server may update database to include the current state of the existing VM and whether the update was successful.

With reference to element Cloud VM instance may notify cloud orchestrator client about an update to its state and an attempt to boot the VM using the updated state. Examples of states of a virtual machine may include Being created Created Powered Off Powered On Starting Running Shutting Down Being Deleted and the like.

With reference to element cloud orchestrator client may defer to or update cloud orchestrator server about the attempt to boot the virtual machine with the updated state. In an example during booting of the VM client may notify server about the readiness of the VM. The VM may communicate with the cloud provider client regarding any state changes it is encountering e.g. unlocking the encrypted disk or creation of secure tunnel and client may notify cloud orchestrator server about these changes and or allow server to react to these changes. For example client may issue a remote procedure call to inform cloud orchestrator server of a current status e.g. in progress successful unsuccessful of booting of a VM. Client may also issue a remote procedure call to provisioning system informing of a current status e.g. in progress successful unsuccessful of booting of a VM. For example client may communicate a message to provisioning system confirming that a virtual machine has been successfully created or has been successfully updated in the cloud environment. If problems were encountered the message may instead indicate that a virtual machine was not updated and provide information identifying the problem. With reference to element cloud orchestrator server may query or update database to indicate whether booting of the VM having an updated state was successful. The communication flow described in elements of may be performed one or more times until client or other component determines that a state of an existing VM has been successfully changed or determining that the change of state operation has failed.

The communication flow described in may be repeated one or more times to provision multiple VMs at a single cloud provider data center and also to provision at least one VM at a multiple cloud provider data centers . Provisioning system may also generate a provisioning request requesting simultaneous or sequential provisioning of multiple VMs by one or more cloud provider data centers .

As such upon completion of the secure boot process a provisioned virtual machine appears to exist in a specific Cloud DMZ and hence on an internal network of the tenant data center even though in fact the virtual machine may run on the cloud provider data center . To the user provisioning system may appear to be provisioning VMs locally on an internal network of the tenant data center when the VMs are actually being provisioned by the cloud provider data center . The tenant user and even provisioning system may not be aware that provisioning of the VM is actually occurring on a cloud provider data center . Instead provisioning system may provision a VM on a particular internal network segment which maps to a specific cloud environment. This approach may make the VM appear as just another server on a specific segment of an internal network on the tenant data center .

In block the method may include providing a list of cloud orchestrator clients each of the clients being associated with one of a plurality of cloud provider data centers. For example provisioning system may determine a list of multiple cloud orchestrator clients A B on which a VM may be provisioned. The list may provide a network address for each of the clients A B.

In block the method may include processing an instruction to perform at least one of creating a virtual machine and changing a state of the virtual machine. In an example provisioning system may process an instruction from a tenant user to perform at least one of creating a virtual machine and changing a state of a virtual machine.

In block the method may include selecting a particular one of the cloud orchestrator clients associated with a particular one of the cloud provider data centers where the virtual machine is to be created or where the virtual machine currently resides. In an example provisioning system may select a particular one of the cloud orchestrator clients e.g. client A associated with a particular cloud provider data center e.g. data center A where the virtual machine is to be created or where the virtual machine currently resides. Client A may be selected for example based on geographic proximity of cloud provider data center A relative to tenant data center based on hardware available at cloud provider data center A based on user input and the like.

In block the method may include generating a provisioning request instructing the particular cloud orchestrator client to perform at least one of creating the virtual machine and changing the state of the virtual machine and communicating the request to the particular cloud orchestrator client. In an example provisioning system may generate a provisioning request instructing cloud orchestrator client A to create a virtual machine and or to change a state of an existing virtual machine. The provisioning request may be for example a remote procedure call that includes a network address of the client A. Provisioning system may then communicate the request to client . The method may end may return to any of the preceding steps or may repeat one or more times.

In block the method may include providing a cloud orchestrator client within a secured zone of a cloud provider wherein the secured zone is associated with a tenant data center. In an example cloud provider data center may implement a cloud orchestrator client within a tenant controlled cloud DMZ . A provisioning system of a tenant data center may utilize cloud orchestrator client for provisioning of VMs within the cloud provider data center .

In block the method may include processing by the cloud orchestrator client a request from a provisioning system for performing at least one of creating a virtual machine and changing a state of the virtual machine. In an example cloud orchestrator client may process a provisioning request received from provisioning system for creating a virtual machine and or changing a state of a virtual machine. The provisioning request may be for example a remote procedure call.

In block the method may include communicating by the cloud orchestrator client an authorization request to a cloud orchestrator server associated with the provisioning system. In an example cloud orchestrator client may communicate an authorization request to cloud orchestrator server associated with provisioning system .

In block the method may include in response to receiving an authorization approval response calling by the cloud orchestrator client a cloud provider application programming interface with an instruction to perform at least one of creating the virtual machine and changing a state of the virtual machine. In an example cloud orchestrator client may receive an authorization approval response from cloud orchestrator server . The authorization approval response may be for example a remote procedure call that includes information to be used when provisioning the VM.

In block the method may include informing by the cloud orchestrator client the provisioning system of at least one of whether the virtual machine was successfully created and whether the state of the virtual machine was successfully changed. In an example cloud orchestrator client may inform provisioning system of whether the virtual machine was successfully created and or whether the state of the virtual machine was successfully changed. The method may end may return to any of the preceding steps or may repeat one or more times.

Aspects of the embodiments have been described in terms of illustrative embodiments thereof. Numerous other embodiments modifications and variations within the scope and spirit of the appended claims will occur to persons of ordinary skill in the art from a review of this disclosure. For example one of ordinary skill in the art will appreciate that the steps illustrated in the illustrative figures may be performed in other than the recited order and that one or more steps illustrated may be optional in accordance with aspects of the embodiments.

