---

title: Apparatus and method for analyzing user preference about domain using multi-dimensional, multi-layered context structure
abstract: An apparatus of analyzing a user preference about a domain is provided. The apparatus including a context structure creator configured to analyze a history of a context and to create a context structure that expresses a relationship between contexts, and a context structure matching unit configured to match a current context to the context structure and calculate a context matching value of the current context.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09165037&OS=09165037&RS=09165037
owner: Samsung Electronics Co., Ltd.
number: 09165037
owner_city: Suwon-si
owner_country: KR
publication_date: 20120320
---
This application claims the benefit under 35 U.S.C. 119 a of a Korean Patent Application No. 10 2011 0101349 filed on Oct. 5 2011 the entire disclosure of which is incorporated herein by reference for all purposes.

The following description relates to an apparatus and a method for analyzing user preference about a domain using multi dimensional multi layered context structure.

With the development of Internet technologies some websites analyze users preferences about specific domains relating to the users daily lives and provide users with recommendations on the Internet based on the specific domains. Examples of the specific domains include favorite restaurants call lists etc. Also with the development of mobile communication technologies users preferences about domain elements may be provided through mobile communication terminals such as smart phones. In general a user may tend to display a constant pattern about a specific domain according to a peripheral environment. In other words in response to a specific peripheral environment being provided a user may have a tendency to select a specific element in a specific domain. Thus in response to users preferences about specific domain elements being analyzed or inferred a peripheral environment has been dealt with independently or considered in association with other factors only in response to exactly matching a predetermined condition. Thus accurate analysis results on the users preferences could not be offered. Independently may refer to without considering a hierarchical structure or a relationship between peripheral environments. For example in response to outdoor activities being recommended weather conditions may be classified into a clear weather a cloudy weather and a raining weather. Conventionally if the weather conditions are fine outdoor activities that generally take place only under clear weather conditions may be recommended. However many people may enjoy various outdoor activities under cloudy weather conditions. Also people may show restraint in enjoying outdoor activities when the weather conditions are too cool or too hot even though the weather conditions may be fine. Accordingly in order to recommend proper outdoor activities according to weather conditions various peripheral environments such as temperature may be taken into consideration together with a hierarchical relationship such as weather conditions.

According to an aspect an apparatus of analyzing a user preference about a domain is provided. The apparatus includes a context structure creator configured to analyze a history of a context and to create a context structure that expresses a relationship between contexts and a context structure matching unit configured to match a current context to the context structure and calculate a context matching value of the current context.

The apparatus may include a context collector configured to collect the current context and store the current context in a context storage.

The apparatus may include a domain preference inquiring unit configured to request a controller to send a user preference value about an element of a domain in response to a request from an application.

The controller may control the context structure matching unit to calculate the context matching value in response to the request from the domain preference inquiring unit.

The context structure may be in a form of a hypercube the hypercube multi dimensionally and multi layeredly representing a kind of context or two or more kinds of contexts associated with each other.

The context matching value may be calculated by multiplying an occurrence frequency of context by a predetermined weight value.

The context matching value may be obtained by recursively adding a context matching value of a specific level with a context matching value of a parent level of the specific level.

The context matching value may be calculated in consideration of an occurrence frequency of a case where the context matching value is inaccurate.

In another aspect a method of analyzing a user preference about a domain is provided. The method includes collecting a current context and storing the current context in a context storage analyzing histories of contexts stored in the context storage and creating a context structure that expresses a relationship between the contexts matching the current context to the context structure and calculating a context matching value of the current context about a domain element.

The context structure may be in a form of a hypercube the hypercube multi dimensionally and multi layeredly representing a kind of context or two or more kinds of contexts associated with each other.

The context matching value may be calculated by multiplying an occurrence frequency of context by a predetermined weight value.

The context matching value may be obtained by recursively adding a context matching value of a specific level with a context matching value of a parent level of the specific level.

The context matching value may be calculated in consideration of an occurrence frequency of a case where the context matching value is inaccurate.

In another aspect a device is provided. The device includes an apparatus of analyzing a user preference about a domain including a context structure creator configured to create a context structure that expresses a relationship between contexts and a context structure matching unit configured to match a current context to the context structure and calculate a context matching value of a current context.

Other features and aspects may be apparent from the following detailed description the drawings and the claims.

Throughout the drawings and the detailed description unless otherwise described the same drawing reference numerals will be understood to refer to the same elements features and structures. The relative size and depiction of these elements may be exaggerated for clarity illustration and convenience.

The following detailed description is provided to assist the reader in gaining a comprehensive understanding of the methods apparatuses and or systems described herein. Accordingly various changes modifications and equivalents of the systems apparatuses and or methods described herein will be suggested to those of ordinary skill in the art. Also descriptions of well known functions and constructions may be omitted for increased clarity and conciseness.

Context may relate to all kinds of information resources that may reflect a user s situation peripheral environment etc. For example all kinds of information resources relating to a user s peripheral environments may include time place temperature a day of the week heat cold clear cloudy etc. The information resources may be considered as contexts. Contexts may be expressed hierarchically for each kind and also may be classified into numeric contexts. An example of a numeric context may include temperature that can be represented as a figure and an example of a non numeric context may include a place that cannot be represented as a figure. The numeric context may correspond to a numeric range and the non numeric context may correspond to a group of specific members. Generally individual contexts relating to a peripheral environment may have a tendency to not be independent and may be closely associated with each other.

The context structure may be created for an element of a specific domain. The specific domain may be recommended to a user via a website or an application of a smart phone etc. The specific domain may be set based on various criterion. The various criterion may include for example the user s daily lives favorite restaurants call lists etc. The element of the specific domain may refer to a category into which the specific domain is classified. For example in response to the specific domain being a restaurant the specific domain may be classified into an element such as a Korean restaurant a Chinese restaurant an American restaurant a European restaurant etc. Contexts about a specific element of a specific domain may be variously defined. For example in response to an element of a specific domain being a Korean restaurant a place a time a day of the week a weather etc. relating to when a certain user visits the Korean restaurant may be considered as contexts. The context structure creator may create a context structure in consideration of a hierarchical structure and relationship between such various kinds of contexts.

The context structure matching unit may match a currently collected context to the context structure created by the context structure creator . Thus the context structure matching unit may calculate a context matching value. Since the context matching value may be calculated using the context structure that is created in consideration of a hierarchical structure and relationship between various contexts the user s peripheral environment may be more accurately reflected to better infer and predict the user s preference about the specific domain.

According to another aspect the apparatus may include a context collector for collecting a current context and storing the current context in the context storage . The context collector may collect contexts via a sensor a system service a user profile an Open Application Programming Interface API . The context collector may collect a current context periodically to manage a latest context history. The context structure matching unit may use the current context collected by the context collector in context matching.

According to another aspect the apparatus may include a domain preference inquiring unit and a controller . The domain preference inquiring unit may request the controller to send a user preference value about an element of a domain when requested by an application. The application may be software that is installed on and executed on the apparatus . The application may provide an interface for receiving a request from a user and providing the user with the requested result. The application may be software installed in a mobile terminal such as a smart phone and executed by a user. However the application is not limited to software and the application may be implemented by hardware.

The domain preference inquiring unit may request the controller to send a user preference value in response to receiving an inquiry about a user preference on a specific domain from an application. Then the controller may request the context structure matching unit to calculate and provide a matching value of a current context. Thereafter the controller may receive the context matching value from the context structure matching unit calculate a user preference value and provide the user preference value to the domain preference inquiring unit . Then the domain preference inquiring unit may provide the user preference value to the user via the application.

Multiplying an occurrence frequency of the context by a predetermined weight value may return as a result a context matching value of a current context. The predetermined weight value may be used to allocate a predetermined score to a context. The context may be used for accurately calculating a user preference value relating to the corresponding domain. The predetermined weight value may correspond with a level value of each node. In other words upon calculating a context matching value of a current context a greater weight value may be allocated to the current context in response to the current context being substantially similar to a context of the lower node. Accordingly accuracy may be improved.

Also recursively adding a context matching value of a specific level with a matching value of a parent level of the specific level may result in a context matching value of a current context. In response to a context matching value of a current context being calculated the case where no context that substantially corresponds to the current context existing in the context structure may occur. In this case the context matching value of the current context may be obtained by adding a matching value of a parent node then obtaining a matching value of the parent node and recursively adding the matching values.

A method of calculating a context matching value using a context structure as shown in and a context level table as shown in may be expressed by equation 1 below. In equation 1 ContextStructure D E may relate to a context structure created for an element E of a domain D and CurrentContext C may relate to a current value of a context C. The current value may correspond to C. In response to a current context to be matched corresponding to C a level value of Cmay be multiplied by an occurrence frequency of C. The result of the multiplication may be added to a product of a level value and an occurrence frequency of a parent node. This process may be recursively repeated.

For example in response to the context level table shown in being a context level table for an element E of a domain D a matching value for a context clear weather may become 50 by adding a product 30 resulting from a level value 2 of a context clear multiplied by its occurrence frequency 15 with a product 20 resulting from a level value 1 of the parent level context fine weather multiplied by its occurrence frequency 20 in other words its occurrence frequency is the addition of 15 of ID and 5 of ID .

With reference to a matching value of a context structure may be calculated by multiplying an occurrence frequency of a context with a predetermined weight value. In this example the predetermined weight value may correspond with a level value of the context. One of the reasons for multiplying a level value of a context as a weight value may be to improve accuracy by allocating a higher score to the matching values of leaf contexts. Also in response to an accurate matching value of an input context not being found the accurate matching value of the input context may be obtained by recursively adding a matching value of a to specific level with a matching value of a parent level of the specific level.

An equation for calculating a matching value of a context group using a context structure in the form of a hypercube as illustrated in may be defined as equation 2 below. Equation 2 may be an example of a calculation of a matching value of a current context group C C C . . . with respect to a context structure for an element D of a domain D. In other words based on equation 2 a matching value level value times occurrence frequency of a current level context may be recursively added with a matching value of its parent context. The meaning of recursively adding may refer to a method of repeatedly adding a matching value of a parent level context with a matching value of its parent level. Also the matching value of the current level context may be calculated in consideration of all occurrence frequencies from the case where one of N contexts is inaccurate to the case where N 1 ones of the N contexts are inaccurate. Including the case where a context is inaccurate in calculating a matching value may be aimed at making a matching value of in response to a context being accurate greater than a matching value of in response to a context being inaccurate.

An equation for obtaining a domain element most preferred by a user in response to a context and a domain being given may relate to equation 3 below. A domain element most preferred by a user may be a domain element at which a matching value of a current context with respect to a context structure for the domain element reaches a maximum value.

Referring to a current context may be collected . The current context may be collected via a sensor a system service a user profile or an Open API. The current context may be used for matching to a context structure. The operation of collecting contexts may be performed periodically or in response to a request from an application. The collected context may be stored in the context storage . Accordingly the history of the context may be managed.

The histories of contexts stored in the context storage may be analyzed to create a context structure representing a relationship between the contexts . The context structure may be created in consideration of the hierarchical structure or relationship between the contexts stored in the context storage . The context structure may be created periodically so that a latest collected context may be included in the context structure. The context structure may be in the form of a hypercube. The hypercube may multi dimensionally and multi layeredly represent a kind of context or two or more kinds of contexts associated with each other. As discussed above shows a context structure for a kind of context and shows a context structure in the form of a hypercube. A concept of expanding a context structure for a kind of context to various kinds of contexts may be a context structure in the form of a hypercube.

A user preference value may be requested from the application . The domain preference inquiring unit may request the controller to send a user preference value for an element of a domain in response to the request from the application. Then the controller may request the context structure matching unit to calculate and provide a matching value of the current context. The controller may calculate a user preference value and provide the user preference value to the domain preference inquiring unit in response to receiving a context matching value from the context structure matching unit . The domain preference inquiring unit may provide the user preference value to the user through the application.

Then the current context may be matched to the created context structure. Upon the current context being matched to the created context structure a matching value of the context structure about the domain element may be calculated . The matching value of the context structure may be calculated by multiplying an occurrence frequency of the context with a predetermined weight value. In this example the predetermined weight value may correspond with a level value of the context. The reason of multiplying a level value by a weight value is to improve accuracy. The improvement in the accuracy occurs because a higher score may be allocated to matching values of leaf contexts. In order to calculate an accurate matching value in response to an accurate matching value for a context not being found a method of recursively adding a matching value of a specific level with a matching value of its parent level may be used. The meaning of recursively adding may correspond to obtaining a matching value of a parent level to add a matching value of a parent level of the specific level.

Thereafter in response to the application requesting provision of a domain element preferred by the user for the current context and domain a domain element having a maximum value among matching values for individual elements of domains may be provided as a domain element most preferred by the user .

Program instructions to perform a method described herein or one or more operations thereof may be recorded stored or fixed in one or more computer readable storage media. The program instructions may be implemented by a computer. For example the computer may cause a processor to execute the program instructions. The media may include alone or in combination with the program instructions data files data structures and the like. Examples of computer readable media include magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROM disks and DVDs magneto optical media such as optical disks and hardware devices that are specially configured to store and perform program instructions such as read only memory ROM random access memory RAM flash memory and the like. Examples of program instructions include machine code such as produced by a compiler and files containing higher level code that may be executed by the computer using an interpreter. The program instructions that is software may be distributed over network coupled computer systems so that the software is stored and executed in a distributed fashion. For example the software and data may be stored by one or more computer readable recording mediums. Also functional programs codes and code segments for accomplishing the example embodiments disclosed herein can be easily construed by programmers skilled in the art to which the embodiments pertain based on and using the flow diagrams and block diagrams of the figures and their corresponding descriptions as provided herein. Also the described unit to perform an operation or a method may be hardware software or some combination of hardware and software. For example the unit may be a software package running on a computer or the computer on which that software is running.

A number of examples have been described above. Nevertheless it will be understood that various modifications may be made. For example suitable results may be achieved if the described techniques are performed in a different order and or if components in a described system architecture device or circuit are combined in a different manner and or replaced or supplemented by other components or their equivalents. Accordingly other implementations are within the scope of the following claims.

