---

title: Product synthesis from multiple sources
abstract: Methods and systems for automatically synthesizing product information from multiple data sources into an on-line catalog are disclosed, and in particular, for automatically synthesizing the product information based on attribute-value pairs. Information for a product may be obtained, via entity extraction, feed ingestion, and other mechanisms, from a plurality of structured and unstructured data sources having different taxonomies and schemas. Product information may additionally or alternatively be obtained or derived based on popularity data. The product information may be cleansed, segmented and normalized. The product information may be clustered so closest products, attribute names and attribute values are associated. A representative value for an attribute name may be determined, and the on-line catalog may be updated so that entries are comprehensive, meaningful and useful to a catalog user. Updates from at least 500 million different data sources may be scheduled to occur as frequently as several times daily.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09384233&OS=09384233&RS=09384233
owner: Microsoft Technology Licensing, LLC
number: 09384233
owner_city: Redmond
owner_country: US
publication_date: 20121204
---
This application is a continuation of and claims priority under 35 U.S.C. 120 to U.S. patent application Ser. No. 12 764 676 U.S. Patent Publication No. US 2011 0264598 A1 filed Apr. 21 2010.

This Background is intended to provide the basic context of this patent application and it is not intended to describe a specific problem to be solved. A highly comprehensive on line product catalog is vital for e commerce success. Keeping a product catalog current in the face of innumerable product introductions and new manufacturers can be a Herculean task. Typically on line catalogs build product entries by relying on product feeds and information from multiple sources. However different merchants or other sources such as review sites manufacturer listings etc. may provide different subsets of information or data for a same product. Furthermore the different sources may provide their product information using different schemas and with wide variation in how product attributes are represented. For example different sources may use schemas that name product attributes differently e.g. dimensions vs. length width and height . Different sources may describe the attributes differently e.g. megapixels or pixels . From the perspective of a user of the product catalog separate product listings for a same product from each supplying provider would be a suboptimal experience. Similarly mere concatenation of duplicate conceptual product information would also be suboptimal. The wide diversity of types structures of information and data itself from a wide variety and number of data sources provide a formidable challenge in populating product descriptions that are succinct comprehensive meaningful and useful to a user of an on line product catalog.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Embodiments of a method for automatically synthesizing product information from multiple data sources into an on line catalog are disclosed. The method may include obtaining historical information for an existing product included in the catalog where the historical information may be obtained from one or more sources. The method may also include determining a source to catalog correspondence based on attribute value pairs found in the historical information and in the catalog and determining attribute value pair extraction between attributes and values in the historical information and the catalog. The method may include obtaining incoming product information that references existing or new catalog products from the same or other electronic data sources and determining a source to source correspondence between different data sources. Additionally the method may include clustering the incoming product information based on attribute value pairs extracting any attribute value pairs determined based on the incoming information adding the attribute value pairs to the catalog schema including determining a representative attribute value for an attribute name and updating the on line catalog with the representative attribute value.

Embodiments of a system for automatically synthesizing product information into an on line catalog are disclosed. The system may include one or more computing devices each having a memory and a processor. The memory may include instructions for providing at least the on line catalog a data acquisition component a computation component including entity relationship clustering and extraction components a human input component and a human input management component.

Embodiments of one or more computer readable storage media comprising computer executable instructions for automatically synthesizing products into an on line catalog are disclosed. The computer executable instructions may include instructions for obtaining historical information for an existing product included in the catalog from one or more data sources. The method may also include determining a source to catalog correspondence based on attribute value pairs included in the historical information and in the catalog and determining attribute value pair extraction. The method may include obtaining incoming product information that references existing or new catalog products from the same or different data sources and determining a source to source correspondence. Additionally the method may include clustering the incoming product information based on attribute value pairs extracting attribute value pairs including determining a new association between an incoming attribute value and an existing or a new catalog attribute name and displaying a catalog entry based on the new association

Although the following text sets forth a detailed description of numerous different embodiments it should be understood that the legal scope of the description is defined by the words of the claims set forth at the end of this patent. The detailed description is to be construed as exemplary only and does not describe every possible embodiment since describing every possible embodiment would be impractical if not impossible. Numerous alternative embodiments could be implemented using either current technology or technology developed after the filing date of this patent which would still fall within the scope of the claims.

It should also be understood that unless a term is expressly defined in this patent using the sentence As used herein the term is hereby defined to mean . . . or a similar sentence there is no intent to limit the meaning of that term either expressly or by implication beyond its plain or ordinary meaning and such term should not be interpreted to be limited in scope based on any statement made in any section of this patent other than the language of the claims . To the extent that any term recited in the claims at the end of this patent is referred to in this patent in a manner consistent with a single meaning that is done for sake of clarity only so as to not confuse the reader and it is not intended that such claim term be limited by implication or otherwise to that single meaning. Finally unless a claim element is defined by reciting the word means and a function without the recital of any structure it is not intended that the scope of any claim element be interpreted based on the application of 35 U.S.C. 112 sixth paragraph.

With reference to an exemplary system for implementing the blocks of the claimed method and apparatus includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer via a local area network LAN and or a wide area network WAN via a modem or other network interface .

Computer typically includes a variety of computer readable media that may be any available media that may be accessed by computer and includes both volatile and nonvolatile media removable and non removable media. The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . The ROM may include a basic input output system BIOS . RAM typically contains data and or program modules that include operating system application programs other program modules and program data . The computer may also include other removable non removable volatile nonvolatile computer storage media such as a hard disk drive a magnetic disk drive that reads from or writes to a magnetic disk and an optical disk drive that reads from or writes to an optical disk . The hard disk drive and may interface with system bus via interfaces .

A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices not illustrated may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a user input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device may also be connected to the system bus via an interface such as a video interface . In addition to the monitor computers may also include other peripheral output devices such as speakers and printer which may be connected through an output peripheral interface .

The computer may operate in a networked environment using logical connections to one or more remote computers such as a remote computer via a network interface controller NIC . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer . The logical connection between the NIC and the remote computer depicted in may include a local area network LAN a wide area network WAN or both but may also include other networks. Networks may be wireless wired or a combination of the two. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

Computing device may encompass many different computing device configurations. For example computing device may realized in hand held devices mobile phones multi processor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers portable computing or communication devices and or other computing device capable of both visual display and direct or indirect communication with another computing device.

The method may include obtaining product information from a plurality of data sources. Product information may be obtained by feed ingestion for example of RSS feeds Atom format feeds or other types of data feeds. Product information may alternatively or additionally be obtained by entity extraction such as by extracting data from websites and other entities via crawling scraping or other data gathering techniques. Generally the entities from which data is extracted may be electronic data sources and may be accessed via the Internet and or other public or private networks including but not limited to cloud networks and peer to peer networks. Product information may additionally or alternatively be obtained by reading from a database by user entry or by any other known means or method of obtaining electronic data.

In the embodiments illustrated in the entities from which information corresponding to a particular product is obtained may include electronic data sources such as merchant feeds of offers for sale data provider product feeds merchant websites or manufacturer websites . For example information corresponding to the particular product may be obtained from a textual description included in an offer feed or feed of one or more offers for sale an image on a merchant website or a user manual from a manufacturer s website . Information corresponding to the particular product may be obtained from FAQs Frequently Asked Questions and or QnAs Question and Answers . The data sources from which information is obtained may not be limited to only merchant provider and manufacturer related data sources and . Although not illustrated in the data sources may additionally or alternatively include data sources generated by third parties such as review sentiments product ratings review helpfulness indicators recommendations opinion indexes product hierarchies or product rankings. The data sources of product information corresponding to the particular product may include shopping websites videos price prediction signals or data still images media clips adjectives corresponding to products and or any of the aforementioned data sources as applied to other products that are related to the particular product. Still other data sources may include popularity based data sources signals or data such as frequency data from search engines and or web browsers click data from websites and the like popularity trending information from price and or transaction data or other popularity based data. Just one of many possible embodiments for obtaining product information may be found in co pending U.S. patent application Ser. No. 12 463 831 filed on May 11 2009 and entitled Providing Time Sensitive Information for Purchase Determinations the entire disclosure of which is hereby incorporated by reference.

The obtained product information may include a set of attribute value pairs for each product with each attribute value pair including an attribute name and an attribute value. The term attribute name as used herein may be a name of an attribute associated with a product that typically describes one or more aspects of the product or designates a characteristic of the product. For example for a laptop computer attribute names may include screen size hard disk size and weight. The term attribute value as used herein may be a value for the attribute name corresponding to the product. For example respective attribute values for the attribute names of the laptop computer may include 15.6 inches 500 Gigabytes and 7.6 pounds. Accordingly the set of attribute value pairs for the laptop may include screen size 15.6 inches hard disk size 500 Gigabytes and Weight 7.6 pounds. As used herein the convention used for denoting an attribute value pair is a set of two elements in curly brackets separated by a dash with the first element denoting a text string or equivalent corresponding to the attribute name and the second element denoting a text string or equivalent corresponding to an attribute value. Similar to the obtained product information each catalog entry may include a set of corresponding catalog attribute value pairs each including a catalog attribute name and a corresponding catalog attribute value.

The block may include obtaining historical product information from a plurality of data sources where the terms historical product information and historical information as used interchangeably herein may each be product information known a priori to correspond to a catalog entry. The historical information may include one or more historical attribute value pairs where each historical attribute value pair includes a historical attribute name and a corresponding historical attribute value. In addition to or instead of obtaining historical product information the block may include obtaining incoming product information from a second plurality of data sources. The second plurality of data sources may include the same different or partially different data sources as the historical data sources and may include at least one new data source or a data source that includes information that has not been synthesized with the catalog. The terms incoming product information and incoming information as used herein are used interchangeably and may each refer to product information where relationships of products referenced therein to any existing catalog product is unknown or has not been synthesized with the product catalog at the time of acquisition of the incoming information. In some embodiments of the method obtaining historical product information and obtaining incoming product information may be performed at different times.

The method may include cleansing the obtained product information . Cleansing the product information may include correcting errors that are discovered within the obtained product information. Spelling errors may be corrected e.g. pollyester may be corrected to polyester . Grammatical and typographical errors may be corrected e.g. wait may be corrected to weight or goldnecklace may be corrected to gold necklace using known or future developed techniques. Other errors such as capitalization errors encoding errors and other errors may also be corrected when the product information is cleansed . In some embodiments of the method cleansing the product information may be optional and may be omitted.

The widely varying sources of data from which the product information is obtained may use different schemas and taxonomies for describing a particular product. Thus the product information obtained for the particular product may be received in varying formats. Some of the product information may include unstructured data. Some of the product information may include structured data of a particular schema and or taxonomy. For example in the example of the laptop computer product a first source may use a taxonomy that categorizes the laptop computer as a laptop and its schema may use attribute names such as hard disk size and resolution. For the same laptop product a second source may use a taxonomy that categorizes the laptop computer as a portable computer and for the same conceptual attributes its schema may use different attribute names such as capacity and pixels. Other data sources may utilize non textual representations from which attribute value pairs may be determined such as an image or a video clip. Synthesis of product information from such widely varying taxonomies schemas representations and indeed types of data sources poses a challenge that the methods and systems of the present disclosure elegantly address.

In particular the method may include normalizing the product information . In a typical embodiment normalizing the product information may include normalizing attribute names and or attribute values including determining a standardization of units abbreviations synonyms acronyms and common values. Generally normalizing the product information may include normalizing the product information with respect to a taxonomy of the on line catalog. For example and not limitation an attribute tan may be recognized as a synonym for beige and may be so normalized . An attribute megapixels may be normalized to a catalog attribute resolution. In other examples the value 7.12 megapixels may be normalized to 7.1 megapixels the units lbs. and may be normalized to pounds and 0.6 meters and 600 millimeters may be normalized to 60 centimeters. Normalizing may be performed on historical product information incoming product information or on both. In some embodiments historical and incoming product information may be normalized at different times by the method . In some embodiments normalizing the product information may include using taxonomy and or data modeling machine learning techniques and or linguistic analysis. For example the method may use linguistic analysis and learning techniques to determine that tan and beige are synonyms for a color attribute corresponding to a pair of pants and may apply this to a color attribute corresponding to a pair of window shades but not to a leather treatment attribute corresponding to a pair of cowboy boots. Just one of many possible embodiments for normalizing product information may be found in co pending U.S. patent application Ser. No. 12 235 635 filed on Sep. 23 2008 and entitled Generating Synonyms Based on Query Log Data the entire disclosure of which is hereby incorporated by reference.

The method may include segmenting the product information . In a typical embodiment segmenting the product information may include segmenting attribute names so that similar attribute names obtained from various data sources are segmented together. For example and not limitation one particular offer feed for a step stool may include the attribute name dimensions and another offer feed may include the attribute names height width and length. Segmenting the product information may result in all four of these attribute names being segmented together. In another example for a container attribute names capacity and volume from different sources may be segmented together. In some embodiments segmenting the product information may include extracting embedded information. For example and not limitation one merchant may provide an ISBN of a book within a description attribute while another merchant may list the ISBN as an attribute unto itself. Segmenting the product information may map both merchants respective references to the same conceptual ISBN of the book. Segmenting may be performed on historical product information incoming product information or on both. In some embodiments historical and incoming product information may be segmented at different times by the method .

The method may include classifying product information . Classifying product information may include matching a given product represented in the information obtained in the block with one or more classifications or categories that are included in the on line catalog taxonomy. Generally a classification or a category may be some grouping of products within the catalog that may useful for narrowing down products to a user of the catalog. For example and not limitation in the laptop computer example the laptop computer may be classified into a category of electronics a category of portable computing devices or a category of laptop computing devices. In some embodiments of the method classifying product information may be optional and may be omitted. Classifying may be performed on historical product information incoming product information or on both. In some embodiments historical and incoming product information may be classified at different times by the method . Classifying product information may include using machine learning techniques web extraction taxonomy and data modeling and in some cases human input.

The method may include determining attribute correspondence . Determining attribute correspondence may include determining a correspondence between attribute names of two different sources. In some embodiments the two different sources may be two different non catalog data sources. The terms source to source attribute correspondence and source to source correspondence as used interchangeably herein may each include a correspondence between a particular attribute name used by a first data source based on its taxonomy and or schema and another attribute name used by a second data source based on its taxonomy and or schema . For example in the previous laptop example determining source to source attribute correspondence may include determining that the attribute name capacity used by the first source corresponds to the attribute name hard drive size used by the second source.

In some embodiments one of the two different sources may be the on line catalog. Accordingly the terms source to catalog attribute correspondence and source to catalog correspondence as used interchangeably herein may each include a correspondence between the particular attribute name used by the first data source including its taxonomy and or schema and an attribute name used in a taxonomy and or schema of the on line catalog. In the laptop example determining source to catalog correspondence may include determining that an attribute name RPM Revolutions per Minute used by the first source corresponds to a catalog attribute name of speed. 

For an illustrative example of attribute correspondence consider the information shown in . In a first chart includes information corresponding to hard drive products that are included in an on line product catalog. A second chart includes information corresponding to hard drive product offers for sale from a particular merchant. Note that in this example straight attribute name matching is not sufficient to derive matches between the merchant schema and the catalog schema as the vocabulary used between the charts and is quite different. For example and not limitation a conceptual attribute corresponding to a speed of the hard drive is referred to as Speed by the catalog but is referred to as RPM by the merchant. The conceptual attribute corresponding to an interface type is referred to as Interface by the catalog but is referred to as Int. Type by the merchant.

To determine attribute correspondence between the catalog listing and the merchant offers for sale a range of words or values for each attribute name in the catalog and the merchant offers may be determined and a word frequency distribution or value distance may be determined. To illustrate one possible embodiment depicts determined ranges or bag of words for each attribute name of including the set of possible values for each attribute name. In particular the range or bag corresponds to the values of the attribute name Speed from the catalog of the range or bag corresponds to values of the attribute Interface from the catalog the range or bag corresponds to values of the attribute RPM from the merchant offers and the range or bag corresponds to values of the attribute Int. Type for from the merchant offers .

Value distributions for two attributes A and B may be determined by their Kullback Leibler KL or information divergence 

The distance between A and B may be the minimum of the KL divergences between A and B and between B and A as KL divergence is not symmetric distance min KL KL 3 

Accordingly determining attribute correspondence may include determining that a pair of attributes may be related if their distance is below a given threshold e.g. distance A B 

Turning back to the method may include determining attribute value pair extraction . Generally determining attribute value pair extraction may be performed on historical product information to determine an association between an existing catalog attribute name and a non catalog attribute value and in a preferred embodiment may include machine learning the association. As each catalog entry for each product corresponds to a set of catalog attribute value pairs each catalog attribute value pair may be included in or stored in conjunction with the catalog schema. Typically however an attribute value pair from a schema of a non catalog data source may not exactly match a catalog attribute value pair. For example and not limitation the on line catalog schema may include two different attribute names Memory Capacity and Memory Technology but a non catalog data source may instead use an attribute value pair of Memory 128 MB DDR SDRAM. In this example determining the attribute value pair extractions from the original attribute value pair Memory 128 MB DDR SDRAM may result in two machine learned attribute value pairs based on the catalog attribute names Memory Capacity 128 and Memory Technology DDR SDRAM.

In some embodiments determining attribute value pair extraction may be based on learning a Hidden Markov Model HMM for each data source attribute. A state space of the HMM may be reduced based on catalog to source attribute correspondences determined from historical product information as determined in the block . In some embodiments determining attribute value pair extraction may be based on other text parsing techniques or methods. Of course other embodiments of determining attribute value pair extraction may be additionally or alternatively be contemplated and used in conjunction with the method .

The method may include clustering product information . Clustering product information may include clustering or grouping product information that corresponds to a same product by comparing attribute names and attribute values so that a similarity between names and or values within a cluster is maximized and a similarity between various clusters is minimized. Clustering product information may include using taxonomy and or data modeling and domain expert input techniques. Generally clustering may be performed on incoming product information although in some embodiments clustering may additionally or alternatively be performed on historical product information either simultaneously or at different times during an execution of the method . In some embodiments clustering product information may include determining distances between attribute value pairs of different data sources based on source to source attribute correspondence . For example if represents an attribute value pair from a non catalog data source instance and represents an attribute value pair from a non catalog data source instance where i is not equal to j then the distance between and may be determined by Dist Dist cos 4 

where may be the attribute distance for the attribute correspondence that involves and as previously discussed and may be the cosine similarity between and.

In some embodiments clustering product information may be based on determining a distance between data source instances or offerings. For example the instances or offerings and may be determined as a weighted average of the similarity of the corresponding values of and where the weights may correspond to the distance between the attribute names from the attribute correspondences 

where Attrs o may be a set of all the attribute value pairs of instance o and AttrNames o may be the set of all attribute names in attribute value pairs of instance o. In some embodiments clustering product information may alternatively or additionally include determining distances between textual descriptions of the different data sources based on cosine similarity comparisons. Of course other embodiments of determining attribute value pair and or textual description distances and indeed of clustering product information may be contemplated and used in conjunction with the method .

In some embodiments the clustering may include both determining distances between attribute value pairs and determining distances between textual descriptions by using hierarchical agglomerative cluster HAC algorithms for example as described in The Elements of Statistical Learning. New York N.Y. USA Springer Verlag 2001 by T. Hastie R. Tibshirani and J. Friedman . Each product instance from a particular data source may be placed into an individual cluster and clusters that have the highest similarity may be repeatedly merged until no clusters have a similarity higher than a pre determined or selected stopping criteria. The HAC algorithm may be performed once using attribute value pairs in the product information and then again based on textual description based similarity. In these embodiments clusters resulting from the two HAC algorithmic runs may be merged if they have an element in common. Representative cluster attribute names and their corresponding cluster attribute values may be determined for one or more clusters.

The method may include extracting attribute value pairs . Generally extracting attribute value pairs may be performed on incoming product information to determine an association of an attribute value from an instance of a non catalog data source or a representative cluster attribute value to a catalog attribute name. The extracted attribute value pair may be included into the schema of the on line catalog. In some embodiments extracting attribute value pairs may be based on determining attribute value pair extraction .

The method may include fusing incoming data or information . The term fusing data may also be referred to herein as performing data fusion and is generally understood as combining data from multiple sources and gathering that information in order to achieve inferences. Fusing incoming data may include determining a representative value for a particular attribute in the on line catalog and may include using domain expert input. Typically determining a representative value for the particular attribute in the on line catalog may include determining a representative attribute value from all attribute value pairs corresponding to the particular attribute name in the catalog schema. In some embodiments determining the representative value may include majority voting based on absolute or generalized attribute values. In one non limiting example of voting based on absolute values for an attribute name Memory Capacity corresponding to four attribute value pairs Memory Capacity 1024 and to one attribute value pair Memory Capacity 2048 majority voting based on absolute values would determine 1024 to be the representative value for the attribute Memory Capacity. 

In another non limiting example of fusing incoming data exemplary incoming attribute value pairs Operating System Windows Vista Operating System Microsoft Windows Vista and Operating System Microsoft Vista do not have an absolute majority for a representative value. However for this example majority voting based on generalized values may be performed to determine the representative value to be Microsoft Windows Vista. Majority values based on generalized values may include constructing vectors for each attribute value pair having a dimension equivalent to a size of a set of terms that include all possible values for the attribute. A centroid for the set of vectors may be determined and the representative value for the attribute may be determined to be the attribute value that is closest in Euclidean distance to the centroid. As applied to this example v1 may be Windows Vista v2 may be Microsoft Windows Vista and v3 may be Microsoft Vista. As there are three possible values for the attribute Operating System the corresponding three dimensional vectors may 0 1 1 for v1 1 1 1 for v2 and 1 0 1 for v3. Thus the centroid for this set of vectors 1 and the closest vector to the centroid is v2. Accordingly in this example Microsoft Windows Vista is determined based on generalized values to be the representative value for the attribute Operating System. 

The method may include updating the on line catalog with the representative value. To continue the above example the on line catalog may be updated to include an entry that describes a particular product with an operating system of Microsoft Windows Vista and a memory capacity of 1024. The entry may be a revised existing entry or the entry may be a new entry such as when a new product is added to the on line catalog. The updated or new entry corresponding to the product may be included in the on line catalog .

Updating the on line catalog may not be limited to only updating product entries such as in catalog offers. In some embodiments updating the on line catalog may additionally or alternatively include updating brand information a product line manufacturer s information queries reviews or other information that is not directly tied to a specific product. For example using the aforementioned Microsoft Windows Vista example the brand Microsoft the product line Vista or operating systems may be updated with the representative value s in the on line catalog.

The method may include storing the updated entry in a local or remote data storage location such as memory of computing device or a remote data storage location accessible via network and or of . The updated entry may be stored for future retrieval.

The method may optionally include conveying the updated entry such as to a user. The updated entry may be conveyed displayed or otherwise output in a form that allows the user to access the updated entry. For example the updated entry may be displayed on a screen may be sent in an email or a feed to a user s computing device may be output to an audio file or may be conveyed using any other known method or mechanism.

The system may include a human input component a data acquisition component a computation component and the on line catalog . The system may also include a publishing component which may be a distinct component unto itself as depicted in or in some embodiments not shown at least some portion of the publishing component may be included in the computation component and or in the on line catalog . The publishing component may be configured to update information in the catalog including attribute names and representative attribute values so that a comprehensive description may be conveyed to a user. The system may additionally include a human input management component .

Specific details of each of the components will be described in more detail in subsequent sections and figures. In general the system may receive incoming information corresponding to one or more existing and or new products. The incoming information may be received by the data acquisition component and or the incoming information may be received directly by the computation component .

The data acquisition component and or the computation component may be configured to perform their various activities based on inputs parameters rules and or other conditions conveyed by the human input component . The data acquisition component may obtain incoming information based on the human input component and may process the incoming information into a common taxonomy that may be used by the computation component . The computation component may receive the processed incoming information and based at least partly on input from the human input component may determine relationships between various data points included in the incoming information as well as determine relationships between the incoming information and existing information in the catalog . The catalog may be updated at least partially based on the relationships determined by the computation component .

The human input component may be modified or updated at least partially based on input or information from the human input management component . The human input management component may base the input or information conveyed to the human input component at least partially based on information from the on line catalog .

Catalog content pertaining to products may be based on the catalog taxonomy and the catalog schema . In particular the catalog content may include a plurality of synthesized catalog entries each corresponding to a particular catalog product. One non limiting example of product information included in a synthesized catalog entry of the catalog may be the synthesized information of .

Each synthesized catalog entry may include a corresponding set of attribute value pairs based on a corresponding catalog schema . In Product A corresponds to Category whose schema includes two attribute names . Accordingly the entry for Product A may include two attribute value pairs with attribute names and respectively and corresponding attribute values that are particular to Product A denoted by VA and VA. Product B is another product from the same category as Product A . The attribute value pairs included in Product B s catalog entry may also include attribute names and corresponding to the category but may include different attribute values particular to Product B denoted by VB and VB. For example Product A may be a dress shirt with attribute value pairs size large and color white and Product B may be a polo shirt with attribute value pairs size medium and color yellow.

Product N included in the on line catalog corresponds to Category n whose schema includes multiple attribute names Accordingly the entry for Product D may include attribute value pairs . . . having corresponding attribute values particular to Product D denoted by VN VN and VNn. Note that in spite of belonging to different categories Product A and Product N may share a common attribute name Al . Each of their corresponding attribute value pairs however may have different attribute values VA and VN. For example and not limitation Product A may be a sweater with attribute value pair size large and Product B may be a running shoe with attribute value pair size 7.

The catalog may include other views of information corresponding to products such as catalog offers for sale reviews images and the like. In some instances the product entries and or other information may be grouped for example to allow for easier customer navigation of the catalog . For example and not limitation products may be grouped by brand names e.g. Hitachi Dell Lenovo etc. product lines e.g. entry level home computing small business etc. categories e.g. laptops desktops servers batteries etc. merchants e.g. Amazon Battery World Ebay etc. and or other groupings . The informational views included in the catalog may be based on the catalog schema and the catalog taxonomy and in some embodiments not shown may include attribute value pairs similar to catalog products .

The information included in the synthesized catalog product entries and informational views included in the catalog may be acquired from a plurality of electronic data sources. illustrates an embodiment of details of the data acquisition component of . As previously discussed the data acquisition component may obtain incoming information based on the human input component and may process the incoming information into a common taxonomy that may be used by the computation component . In the embodiment of the data acquisition component at least a portion of the information synthesized into catalog products and informational views generally may be obtained from incoming content type information originating from third party electronic data sources such as offers for sale reviews third party product descriptions images and other such third party information previously discussed with respect to .

The third party content type information may be obtained via the data acquisition component . In particular the data acquisition component may be configured with an entity extraction component e.g. entity extractor enabled to crawl or scrape the Internet and or other public and or private websites and data sources to extract the content type information . The data acquisition component may be additionally or alternatively configured with a feed ingestion component e.g. feed ingestor enabled to receive data feeds e.g. RSS feeds Atom format feeds etc. from the third party data sources.

In some embodiments the data acquisition component may expose an API Application Programming Interface for performing entity data extraction and or feed ingestion . The API may allow a specification or a selection of targets or types thereof to be extracted and or ingested . The API may allow for specifying one or more periodicities of data acquisition either on a target basis a function basis e.g. extract receive feed etc. or both. In some embodiments the data acquisition component may include one or more data connectors . In some embodiments the same API or a different API may be exposed for accessing the data connectors .

In addition to content type information action type information may also be received by the data acquisition component . In the action type information is depicted as being included in the incoming information of . The action type information generally may be derived or inferred from electronic actions and in particular from popularity signals or popularity data. For example the action type information may be derived from click data browser data e.g. web browser tool bar data transaction data or other action type data such as previously discussed with respect to . In some embodiments the data acquisition component may acquire the action type data via the data connectors . In some embodiments at least some portion of the action type data may be additionally or alternatively received directly by the computation component of . In some embodiments the action type data may be received by the system in a derived state. In some embodiments the action type data may be received by the system in an un derived or raw state and at least one of the data acquisition component the computation component or some other component of the system may perform derivations on the received action type data to obtain attribute value pairs.

The data acquisition component may include base services . Base services may include a normalization component a segmentation component and a data fusion component . In the embodiment of the components and may be configured to perform at least the blocks and of the method respectively.

The computation component may include an entity extraction component . The entity extraction component may be configured to perform extraction type functions such as determining attribute value pair extraction and or extracting attribute value pairs of the method . The entity extraction component may include subcomponents to extract brands of products product lines or merchants of products from historical and or incoming product information.

The computation component may include a set of base services . The set of base services may include a classification component a cleansing component and a synthesis or clustering component . In the embodiment of the components and may be configured to perform at least the blocks and of the method respectively. In some embodiments the computation component may include one or more of the base services illustrated in the data acquisition component of . Conversely in some embodiments the data acquisition component may include one or more of the base services illustrated in the computation component of .

The computation component may include an entity relationship component . The entity relationship component may be configured to operate on the incoming product information and or to determine data relationships. In some embodiments the entity relationship component may determine source to source correspondences and or source to catalog correspondences such as previously discussed with regard to the block of . In the embodiment illustrated by the entity relationship component may obtain and determine relationships based on price prediction signals or data rankings of products recommendations product hierarchies e.g. which products are listed higher on web pages or lists product scorecards related products opinion indexes image analyses and or static ranks . In some embodiments relationships may be determined from additional or alternative obtained information not shown in . In some embodiments the entity relationship component may use machine learning trend analysis and forecasting sentiment extraction or linguistic analysis to determine data relationships. In some embodiments the entity relationship component may use clustering and data mining techniques separate and distinct from synthesis and clustering of information targeted for inclusion in the catalog to determine data relationships such as for product popularity and or price prediction.

The system may include an embodiment of the human input component . The human input component may include models rules and content of which some or all may be adjusted based at least partially upon the post analysis performed by the human input management component . The human input may be rendered electronically and may shape or provide boundaries or constraints for the data acquisition component and or for the computation component . For example and not limitation the human input content may indicate which products are to be included into the catalog e.g. include shoe products but not shoelace products. The human models may provide for example models based on marketing research or other factors for classification e.g. block of or organization of the obtained information. The human input rules may indicate for example rules for obtaining data from product feeds e.g. block of at a first frequency or periodicity and updating popularity signals or data e.g. block of at a second frequency or periodicity. The human input component may include domain expert human input and or non expert human input.

In conclusion although the foregoing text sets forth a detailed description of numerous different embodiments it should be understood that the scope of the patent is defined by the words of the claims set forth at the end of this patent. The detailed description is to be construed as exemplary only and does not describe every possible embodiment because describing every possible embodiment would be impractical if not impossible. Numerous alternative embodiments could be implemented using either current technology or technology developed after the filing date of this patent which would still fall within the scope of the claims.

Thus many modifications and variations may be made in the techniques and structures described and illustrated herein without departing from the spirit and scope of the present claims. Accordingly it should be understood that the methods and apparatus described herein are illustrative only and are not limiting upon the scope of the claims.

