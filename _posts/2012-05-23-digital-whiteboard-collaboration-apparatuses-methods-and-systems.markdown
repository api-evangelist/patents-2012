---

title: Digital whiteboard collaboration apparatuses, methods and systems
abstract: The DIGITAL WHITEBOARD COLLABORATION APPARATUSES, METHODS AND SYSTEMS (“DWC”) transform user multi-element touchscreen gestures via DWC components into updated digital collaboration whiteboard objects. In one embodiment, the DWC obtains user whiteboard input from a client device participating in a digital collaborative whiteboarding session. The DWC parses the user whiteboard input to determine user instructions, and modifies a tile object included in the digital collaborative whiteboarding session according to the determined user instructions. The DWC generates updated client viewport content for the client device. Also, the DWC determines that client viewport content of a second client device should be modified because of modifying the tile object included in the digital whiteboard. The DWC generates updated client viewport content for the second client device after determining that the content of the second client device should be modified, and provides the updated client viewport content to the second client device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09430140&OS=09430140&RS=09430140
owner: HAWORTH, INC.
number: 09430140
owner_city: Holland
owner_country: US
publication_date: 20120523
---
This application claims priority under 35 USC 119 to U.S. provisional patent application Ser. No. 61 489 238 filed May 23 2011 entitled DIGITAL WHITEBOARD COLLABORATION APPARATUSES METHODS AND SYSTEMS . The entire contents of the aforementioned application are expressly incorporated by reference herein.

This application for letters patent discloses and describes various novel innovations and inventive aspects of DIGITAL WHITEBOARD COLLABORATION technology hereinafter disclosure and contains material that is subject to copyright mask work and or other intellectual property protection. The respective owners of such intellectual property have no objection to the facsimile reproduction of the disclosure by anyone as it appears in published Patent Office file records but otherwise reserve all rights.

Haworth Inc. a Michigan corporation and Obscura Digital Incorporated a California corporation are parties to a Joint Research Agreement.

The present innovations generally address apparatuses methods and systems for digital collaboration and more particularly include DIGITAL WHITEBOARD COLLABORATION APPARATUSES METHODS AND SYSTEMS DWC .

In some instances users may be required to work collaboratively with each other to achieve efficient results in their undertakings. Such users may sometimes be located remotely from each other. The collaborative interactions between such users may sometimes require communication of complex information.

The leading number of each reference number within the drawings indicates the figure in which that reference number is introduced and or detailed. As such a detailed discussion of reference number would be found and or introduced in . Reference number is introduced in etc.

The DIGITAL WHITEBOARD COLLABORATION APPARATUSES METHODS AND SYSTEMS hereinafter DWC transform user multi element touchscreen gestures via DWC components into updated digital collaboration whiteboard objects. shows a block diagram illustrating example aspects of digital whiteboard collaboration in some embodiments of the DWC. In some implementations a plurality of users e.g. may desire to collaborate with each other in the creation of complex images music video documents and or other media e.g. . The users may be scattered across the globe in some instances. Users may utilize a variety of devices in order to collaborate with each other e.g. . In some implementations such devices may each accommodate a plurality of users e.g. device accommodating users and . In some implementations the DWC may utilize a central collaboration server e.g. and or whiteboard database e.g. to achieve collaborative interaction between a plurality of devices e.g. . In some implementations the whiteboard database may have stored a digital whiteboard. For example a digital collaboration whiteboard may be stored as data in memory e.g. in whiteboard database . The data may in various implementations include image bitmaps video objects multi page documents scalable vector graphics and or the like. In some implementations the digital collaboration whiteboard may be comprised of a plurality of logical subdivisions or tiles e.g. . In some implementations the digital whiteboard may be infinite in extent. For example the number of logical subdivisions tiles may be as large as needed subject only to memory storage and addressing considerations. For example if the collaboration server utilizes 12 bit addressing then the number of tile may be limited only by the addressing system and or the amount of memory available in the whiteboard database.

In some implementations each file stored within a tile folder may be named to represent a version number a timestamp and or like identification e.g. . Thus various versions of each tile may be stored in a tile folder. In some implementations each tile folder may include sub folders representing layers of a tile of the digital whiteboard. Thus in some implementations each whiteboard may be comprised of various layers of tile objects superimposed upon each other.

In some implementations the hierarchical tree structure of folders may be replaced by a set of folders wherein the file names of the folders represent the tile level and layer numbers of each tile layer in the digital whiteboard. Accordingly in such implementations sub tile layer folders need not be stored within their parent folders but may be stored along side the parent folders in a flat file structure.

In some implementations a whiteboard object container e.g. may include data representing various tile object that may be display on the digital whiteboard. For example the whiteboard object container may include data standalone videos e.g. a link to a stored video image objects e.g. multi page documents e.g. freeform objects e.g. etc. In some implementations the whiteboard object container may include a remote window object. For example a remote window object may comprise a link to another object e.g. a video RSS feed live video stream client display screen etc. For example the link between the remote window object and any other object may be dynamically reconfigurable e.g. . Thus a remote window linked object e.g. may be dynamically configured within the space reserved for the remote window within the digital whiteboard. Thus for example a randomly varying video contents of an RSS feed may be configured to display within the space reserved for the remote window.

In some implementations object metadata may be associated with each tile object. For example the metadata associated with a object may include a description of the object object properties and or instructions for the DWC when the object is interrogated by a user e.g. modified viewed clicked on etc. . For example an object may have associated XML encoded data such as the example XML data provided below 

In some implementations a client connected to a whiteboard collaboration session may communicate with the collaboration server to obtain a view of a portion of the digital whiteboard. For example a client may have associated with it a client viewport e.g. a portion of the digital whiteboard that is projected onto the client s display e.g. . In such implementations the portion of tile objects e.g. extending into the client viewport e.g. of the client e.g. may be depicted on the display of client . In some implementations a user may modify the client viewport of the client. For example the user may modify the shape of the client viewport and or the position of the client viewport. For example with reference to the user may provide user input e.g. touchscreen gestures to modify the client viewport from its state in to its state in . Thus the contents of the viewport may be modified from tile object to a portion of tile object . In such a scenario the portion of tile object within the extent of the modified client viewport will be displayed on the display of client . In some implementations the user may modify a tile object e.g. into modified tile object e.g. via user input . In such implementations the modified tile object may be displayed on the display of the client .

In some implementations a plurality of users may be utilizing clients to view portions of a digital whiteboard. For example with reference to client may receive client viewport data comprising a depiction of the tile objects extending into client viewport . Client may receive client viewport data comprising a depiction of the tile objects extending into client viewport . Similarly client may receive client viewport data comprising a depiction of the tile objects extending into client viewport . In some scenarios the client viewports of different client may not overlap e.g. those of client and client . In other scenarios the client viewports of two or more clients may overlap with each other e.g. the client viewports and of clients and . In such scenarios when a client modifies a tile object within the client s viewport the modification of the tile object may be reflected in all viewports into which the modified portion of the tile object extends. Thus in some implementations a plurality of users may simultaneously observe the modification of a tile objects made by another user facilitating collaborative editing of the tile objects.

In some implementations a user may utilize a client e.g. to observe the modifications to a portion of a digital whiteboard across time versions. For example a user may position the client s viewport e.g. over a portion of the digital whiteboard e.g. via user gestures into the client and observe a time version evolution animation e.g. of that portion of the digital whiteboard on the client device s display using time stamped versions e.g. of the digital whiteboard.

In some implementations the server e.g. collaboration server may parse the user whiteboarding request and extract user credentials e.g. from the user whiteboarding request. Based on the extracted user credentials the server may generate an authentication query e.g. for a database e.g. users database . For example the server may query whether the user is authorized to join the collaborative whiteboarding session. For example the server may execute a hypertext preprocessor PHP script including structured query language SQL commands to query the database for whether the user is authorized to join the collaborative whiteboarding session. An example of such a PHP SQL command listing is provided below 

In response to obtaining the authentication query e.g. the database may provide e.g. an authentication response to the server. In some implementations the server may determine based on the authentication response that the user is authorized to join the collaborative whiteboarding session. In such implementations the server may parse the user whiteboarding request and or the authentication response and obtain client specifications for the client . For example the server may extract client specifications including but not limited to display size resolution orientation frame rate contrast ratio pixel count color scheme aspect ratio 3D capability and or the like. In some implementations using the client viewport specifications the server may generate a query for tile objects that lie within the viewport of the client. For example the server may provide a tile objects query e.g. to a database e.g. whiteboard database requesting information on tile objects which may form part of the client viewport content displayed on the client . For example the server may provide the tile IDs of the tiles which overlap with the client viewport and request a listing of tile object IDs and tile object data for object which may partially reside within the tile IDs. An example PHP SQL command listing for querying a database for tile objects data within a single tile ID is provided below 

In some implementations the database may in response to the tile objects query provide the requested tile objects data e.g. . For example the database may provide a data structure representative of a scalable vector illustration e.g. a Scalable Vector Graphics SVG data file. The data structure may include for example data representing a vector illustration. For example the data structure may describe a scalable vector illustration having one or more objects in the illustration. Each object may be comprised of one or more paths prescribing e.g. the boundaries of the object. Further each path may be comprised of one or more line segments. For example a number of very small line segments may be combined end to end to describe a curved path. A plurality of such paths for example may be combined in order to form a closed or open object. Each of the line segments in the vector illustration may have start and or end anchor points with discrete position coordinates for each point. Further each of the anchor points may comprise one or more control handles. For example the control handles may describe the slope of a line segment terminating at the anchor point. Further objects in a vector illustration represented by the data structure may have stroke and or fill properties specifying patterns to be used for outlining and or filling the object. Further information stored in the data structure may include but not be limited to motion paths for objects paths line segments anchor points etc. in the illustration e.g. for animations games video etc. groupings of objects composite paths for objects layering information e.g. which objects are on top and which objects appear as if underneath other objects etc. and or the like. For example the data structure including data on the scalable vector illustration may be encoded according to the open XML based Scalable Vector Graphics SVG standard developed by the World Wide Web Consortium W3C . An exemplary XML encoded SVG data file written substantially according to the W3C SVG standard and including data for a vector illustration comprising a circle an open path a closed polyline composed of a plurality of line segments and a polygon is provided below 

In some implementations the server may generate client viewport data e.g. bitmap SVG file video stream RSS feed etc. using the tile objects data and client viewport specifications e.g. . The server may provide the generated client viewport data and client viewport specifications as whiteboard session details and client viewport data e.g. .

In some implementations the client may render e.g. the visualization represented in the client viewport data for display to the user. For example the client may be executing an Adobe Flash object within a browser environment including ActionScript 3.0 commands to render the visualization represented in the data structure and display the rendered visualization for the user. Exemplary commands written substantially in a form adapted to ActionScript 3.0 for rendering a visualization of a scene within an Adobe Flash object with appropriate dimensions and specified image quality are provided below 

In some implementations the client may continuously generate new scalable vector illustrations render them in real time and provide the rendered output to the visual display unit e.g. in order to produce continuous motion of the objects displayed on the visual display unit connected to the client. In some implementations the DWC may contain a library of pre rendered images and visual objects indexed to be associated with one or more of search result terms or phrases such as Clip Art files e.g. accessible through Microsoft PowerPoint application software.

In some implementations upon authentication of the user client e.g. option Yes the server may generate a collaborator acknowledgment e.g. for the user client. The client may obtain the server s collaborator acknowledgment e.g. and in some implementations display the acknowledgment for the user e.g. .

In some implementations the server may parse the user whiteboarding request and or the authentication response and obtain client specifications for the client. For example the server may extract client specifications including but not limited to display size resolution orientation frame rate contrast ratio pixel count color scheme aspect ratio 3D capability and or the like using parsers such as those described further below in the discussion with reference to . In some implementations e.g. where the client viewport specifications have not been previously generated for the client being used by the user the server may generate client viewport specifications using the specifications of the client. For example the server may utilize a component such as the example client viewport specification component discussed further below with reference to . In some implementations using the client viewport specifications the server may generate a query for tile objects that lie within the viewport of the client. For example the server may provide a tile objects query e.g. to a whiteboard database requesting information on tile objects which may form part of the client viewport content displayed on the client. For example the server may provide the tile IDs of the tiles which overlap with the client viewport and request a listing of tile object IDs and tile object data for object which may partially reside within the tile IDs. In some implementations the database may in response to the tile objects query provide the requested tile objects data e.g. . In some implementations the server may generate a whiteboard session object e.g. using the client viewport specifications and or the tile objects data. In some implementations the server may store the whiteboard session object to a database e.g. . In some implementations the server may generate client viewport data e.g. bitmap SVG file video stream RSS feed etc. using the tile objects data and client viewport specifications e.g. . The server may provide the generated client viewport data and client viewport specifications e.g. to the client. In some implementations the client may render e.g. the visualization represented in the client viewport data for display to the user and or continuously generate new scalable vector illustrations render them in real time and provide the rendered output to the visual display unit e.g. in order to produce continuous motion of the objects displayed on the visual display unit connected to the client.

In some implementations the DWC may determine that there are no existing client viewport specifications. In such implementations the DWC may generate client viewport specification data variables e.g. display size resolution shape aspect ratio zoom level x y position whiteboard layers visible etc. e.g. . The DWC may initially set default values for each of the client viewport specification variables. The DWC may obtain the client device specifications e.g. client s display monitor size pixel count color depth resolution etc. e.g. . Based on the client s actual specifications the DWC may calculate updated client viewport specification using the client device specifications and the default values set for each of the client viewport specification variables. The DWC may return the calculated updated client viewport specifications e.g. .

In some implementations the client may capture the user s whiteboard input e.g. . The client may identify the user s whiteboard input in some implementations. For example the client may utilize a user input identification component such as the User Gesture Identification UGI component described below in to identify gesture s made by the user on a touchscreen display of the client to modify the collaborative whiteboarding session. Upon identifying the user whiteboard input the client may generate and provide a whiteboard input message e.g. to a server e.g. collaboration server . For example the client may provide a Secure HyperText Transport Protocol HTTP S POST message with an XML encoded message body including the user whiteboard input and or identified user gesture s . An example of such a HTTP S POST message is provided below 

In some implementations the server e.g. collaboration server may parse the user whiteboard input and extract the user ID client ID and or user gestures from the whiteboard input message e.g. . Based on the extracted information the server may generate a whiteboard session query e.g. for the gesture context e.g. the viewport content of the client being used by the user. For example the server may query a database e.g. whiteboard database for the client viewport specifications and tile objects corresponding to the client viewport specifications. An example PHP SQL command listing for querying a database for client viewport specifications and tile objects data within a single tile ID is provided below 

In some implementations the database may in response to the whiteboard session query provide the requested client viewport specifications and tile objects data e.g. whiteboard session object . For example the database may provide an SVG data file representing the tile objects and or an XML data file representing the client viewport specifications.

In some implementations the server may determine the user s intended instructions based on the user s gestures and the gesture context e.g. as retrieved from the database. For example the user s intended instructions may depend on the context within which the user gestures were made. For example each user gesture may have a pre specified meaning depending on the type of tile object upon which the user gesture was made. For example a particular user gesture may have a pre specified meaning depending on whether the object above which the gesture was made was a video or a multi page document. In some implementations the tile object on which the gesture was made may include gesture context interpretation instructions which the server may utilize to determine the appropriate instructions intended by the user. In alternate implementations the server and or databases may have stored gesture context interpretation instructions for each type of object e.g. image SVG vector image video remote window etc. and similar user instructions may be inferred from a user gesture above all objects of a certain type.

In some implementations the server may extract the user gesture context e.g. from the user whiteboard session object. Using the gesture context e.g. the object data the server may query a database e.g. gestures database for user instructions lookup corresponding to the user gestures and or user gesture context. An example PHP SQL command listing for querying a database for user instruction lookup is provided below 

In some implementations the database may in response to the user instruction lookup request provide the requested user instruction lookup response e.g. . In some implementations the server may also query e.g. for tile objects within the client s viewport e.g. using PHP SQL commands similar to the examples above and obtain e.g. from the whiteboard database the tile objects data pertaining to tile objects within the viewport of the client.

In some implementations the server may parse the user instruction lookup response and extract instructions to execute from the response. For example the user instruction lookup response may include instructions to modify tile objects and or instructions to modify the client viewport s of client s in the whiteboarding session. In some implementations the server may extract tile object modification instructions e.g. and generate updated tile objects based on the existing tile object data and the extract tile object modification instructions. In some implementations the server may parse the user instruction lookup response and extract instructions to modify the viewport of client s . The server may generate e.g. updated client viewport specifications and or client viewport data using the updated tile objects existing client viewport specifications and or extracted client viewport modification instructions. In some implementations e.g. where the tile objects have been modified the server may query e.g. via PHP SQL commands for clients whose viewport contents should be modified to account for the modification of the tile objects and or client viewport specifications e.g. . The server may provide e.g. the query to the whiteboard database and obtain e.g. a list of clients whose viewport contents have been affected by the modification. In some implementations the server may refresh the affected clients viewports. For example the server may generate for each affected client updated client viewport specifications and or client viewport content using the updated client viewport specifications and or updated tile objects data e.g . In some implementations the server may store e.g. the updated tile objects data and or updated client viewport specifications e.g. via updated whiteboard session objects updated client viewport data etc. . In some implementations the server may provide the updated whiteboard session details and or updated client viewport data e.g. to each of the affected client s e.g. . In some implementations the client s may render e.g. the visualization represented in the client viewport data for display to the user e.g. using data and or program module s similar to the examples provided above with reference to . In some implementations the client s may continuously generate new scalable vector illustrations render them in real time and provide the rendered output to the visual display unit e.g. in order to produce continuous motion of the objects displayed on the visual display unit connected to the client.

In some implementations the server may parse the user whiteboard input and extract the user ID client ID etc. from the whiteboard input message e.g. . Based on the extracted information the server may generate a whiteboard session query e.g. for the gesture context e.g. the viewport content of the client being used by the user. In some implementations a database may in response to the whiteboard session query provide the requested client viewport specifications and tile objects data e.g. whiteboard session object . For example the database may provide an SVG data file representing the tile objects and or an XML data file representing the client viewport specifications.

In some implementations the server may parse the whiteboard session object and extract user context e.g. client viewport specifications tile object IDs of tile objects extending into the client viewport client app mode e.g. drawing editing viewing etc. portrait landscape etc. e.g. . The server may parse the whiteboard session object and extract user gesture s made by the user into the client during the whiteboard session e.g. . The server may attempt to determine the user s intended instructions based on the user s gestures and the gesture context e.g. as retrieved from the database. For example the user s intended instructions may depend on the context within which the user gestures were made. For example each user gesture may have a pre specified meaning depending on the type of tile object upon which the user gesture was made. For example a particular user gesture may have a pre specified meaning depending on whether the object above which the gesture was made was a video or a multi page document. In some implementations the tile object on which the gesture was made may include custom object specific gesture context interpretation instructions which the server may utilize to determine the appropriate instructions intended by the user. In alternate implementations the server and or databases may have stored system wide gesture context interpretation instructions for each type of object e.g. image SVG vector image video remote window etc. and similar user instructions may be inferred from a user gesture above all objects of a certain type.

In some implementations the server may query a whiteboard database for user instructions lookup corresponding to the user gestures and or user gesture context e.g. . The database may in response to the user instruction lookup request provide the requested user instruction lookup response e.g. . In some implementations the server may also query for tile objects within the client s viewport the tile objects data pertaining to tile objects within the viewport of the client.

In some implementations the server may parse the user instruction lookup response and extract instructions to execute from the response e.g. . For example the user instruction lookup response may include instructions to modify tile objects and or instructions to modify the client viewport s of client s in the whiteboarding session. In some implementations the server may extract tile object modification instructions e.g. . The server may modify tile object data of the tile objects in accordance with the tile object modifications instructions. For example the server may select a tile object modification instruction e.g. . The server may parse the tile object modification instruction and extract object IDs of the tile object s to be operated on e.g. . Using the tile object modification instructions the server may determine the operations to be performed on the tile object s . In some implementations the server may generate a query for the tile object data of the tile object s to be operated on e.g. and obtain the tile object data e.g. from a database. The server may generate updated tile object data for each of the tile objects operated on using the current tile object data and the tile object modification operations from the tile modification instructions e.g. . In some implementations the server may store the updated tile object data in a database e.g. . In some implementations the server may repeat the above procedure until all tile object modification instructions have been executed see e.g. .

In some implementations the server may parse the user instruction lookup response e.g. and extract client viewport modification instructions e.g. . The server may modify client viewport specifications of the client s in accordance with the viewport modifications instructions. For example the server may select a viewport instruction e.g. . The server may parse the viewport modification instruction and extract client IDs for which updated viewport specifications are to be generated e.g. . Using the viewport modification instructions the server may determine the operations to be performed on the client viewport specifications. In some implementations the server may generate a whiteboard object query for the viewport specifications to be operated e.g. and obtain the whiteboard session object including the viewport specifications e.g. from a database. The server may generate updated client viewport specifications for each of the client viewports being operated on using the current client viewport specifications and the viewport modification operations from the viewport modification instructions e.g. . For example the server may utilize a component such as the client viewport specification component described with reference to . In some implementations the server may store the updated client viewport specifications via an updated whiteboard specification object in a database e.g. . In some implementations the server may repeat the above procedure until all tile object modification instructions have been executed see e.g. .

In some implementations e.g. where the tile objects and or client viewport specifications have been modified the server may query e.g. via PHP SQL commands for clients whose viewport contents should be modified to account for the modification of the tile objects and or client viewport specifications e.g. . The server may provide the queries to the whiteboard database and obtain e.g. a list of clients whose viewport contents have been affected by the modification. In some implementations the server may refresh the affected clients viewports. For example the server may generate e.g. for each affected client updated client viewport specifications and or client viewport content using the updated client viewport specifications and or updated tile objects data. For example the server may utilize a component such as the viewport content generation component described with reference to . In some implementations the server may store e.g. the updated tile objects data and or updated client viewport specifications e.g. via updated whiteboard session objects updated client viewport data etc. . In some implementations the server may provide the updated whiteboard session details and or updated client viewport data e.g. to each of the affected client s . In some implementations the client s may render e.g. the visualization represented in the client viewport data for display to the user e.g. using data and or program module s similar to the examples provided above with reference to . In some implementations the client s may continuously generate new scalable vector illustrations render them in real time and provide the rendered output to the visual display unit e.g. in order to produce continuous motion of the objects displayed on the visual display unit connected to the client.

In some implementations a user may access a main menu by pressing the touchscreen with a single finger e.g. . In some implementations a menu such a pie menu e.g. may be provided for the user when the user attempts to access the main menu by pressing a single finger on the touchscreen e.g. . In some implementations the user may press a stylus against the touchscreen e.g. . In some implementations the menu options provided to the user may vary depending on whether the uses a single finger touch or a single stylus touch.

In some implementations a user may access a drawing menu by swiping down on the touchscreen with three fingers e.g. . In some implementations a menu such a drawing menu e.g. may be provided for the user when the user attempts to access the drawing menu by swiping three fingers on the touchscreen e.g. . In some implementations a drawing palette may include a variety of tools. For example the drawing palette may include a drawing tool selector e.g. for selecting tools from a drawing palette. In some implementations a variety of commonly used drawing tools may be provided separately for the user to easily access. For example an eraser tool cut tool tag tool help tool and or the like may be provided as separate user interface objects for the user to access.

In some implementations a user may select a color from a color picker tool within the drawing palette menu. For example the user may swipe three fingers on the touchscreen to obtain the drawing palette e.g. . From the drawing palette the user may select a color picker by tapping on an active color picker e.g. . Upon tapping the color picker a color picker menu e.g. may be provided for the user via the user interface.

In some implementations a user may tag an object within the digital whiteboard e.g. . For example within the drawing palette the user may tap on a user interface element e.g. . In response the user may be provided with a virtual keyboard as well as a virtual entry form for the user to type a tag into via the virtual keyboard.

In some implementations a user may enter into a precision drawing mode wherein the user may be able to accurately place draw tile objects. For example the user may place two fingers on the touchscreen and hold the finger positions. For the duration that the user holds the two finger precision drawing gesture the user may be provided with precision drawing capabilities. For example the user may be able to precisely draw a line to the length orientation and placement of the user s choosing e.g. . Similarly using other drawing tools the user may be able to draw precise circles e.g. rectangles e.g. and or the like. In general it is contemplated the precision of any drawing tool provided may be enhanced by entering into the precision drawings mode by using the two finger hold gesture.

In some implementations a user may be able to toggle between an erase and draw mode using a two finger swipe. For example if the user swipes downwards an erase mode may be enabled e.g. while if the user swipes upwards the draw mode may be enabled e.g. .

In some implementations a user may be able to an overall map of the whiteboard by swiping all five fingers down simultaneously e.g. . Upon performing a five finger swipe e.g. a map of the digital whiteboard e.g. may be provided for the user. In some implementations the user may be able to zoom in or zoom out of a portion of the digital whiteboard by using two fingers and moving the two fingers either together e.g. zoom out or away from each other e.g. zoom in see e.g. . In such an access map mode a variety of features and or information may be provided for the user. For example the user may be provided with a micromap which may provide an indication of the location of the user s client viewport relative to the rest of the digital whiteboard. The user may be provided with information on other users connected to the whiteboarding session objects within the whiteboard tags providing information on owners of objects in the whiteboard etc. a timeline of activity showing the amount of activity as a function of time and or the like information and or features.

In some implementations users utilizing different types of device may interactively collaborate via a telepresence system. For example with reference to user may be utilizing a large screen touch interface e.g. while a user may be utilizing a portable device e.g. . In such implementations the user interface of the collaborative session as well as the telepresence system may be modified according to the device being used by the user in the collaborative session. For example the user utilizing the large screen touch interface may be utilizing an auxiliary telepresence system . The user may however be utilizing a telepresence system inbuilt into the device e.g. . Accordingly in some implementations the users may interact with each other via telepresence for collaborative editing across a variety of user devices.

Users e.g. which may be people and or other systems may engage information technology systems e.g. computers to facilitate information processing. In turn computers employ processors to process information such processors may be referred to as central processing units CPU . One form of processor is referred to as a microprocessor. CPUs use communicative circuits to pass binary encoded signals acting as instructions to enable various operations. These instructions may be operational and or data instructions containing and or referencing other instructions and data in various processor accessible and operable areas of memory e.g. registers cache memory random access memory etc. . Such communicative instructions may be stored and or transmitted in batches e.g. batches of instructions as programs and or data components to facilitate desired operations. These stored instruction codes e.g. programs may engage the CPU circuit components and other motherboard and or system components to perform desired operations. One type of program is a computer operating system which may be executed by CPU on a computer the operating system enables and facilitates users to access and operate computer information technology and resources. Some resources that may be employed in information technology systems include input and output mechanisms through which data may pass into and out of a computer memory storage into which data may be saved and processors by which information may be processed. These information technology systems may be used to collect data for later retrieval analysis and manipulation which may be facilitated through a database program. These information technology systems provide interfaces that allow users to access and operate various system components.

In one embodiment the DWC controller may be connected to and or communicate with entities such as but not limited to one or more users from user input devices peripheral devices an optional cryptographic processor device and or a communications network . For example the DWC controller may be connected to and or communicate with users e.g. operating client device s e.g. including but not limited to personal computer s server s and or various mobile device s including but not limited to cellular telephone s smartphone s e.g. iPhone Blackberry Android OS based phones etc. tablet computer s e.g. Apple iPad HP Slate Motorola Xoom etc. eBook reader s e.g. Amazon Kindle Barnes and Noble s Nook eReader etc. laptop computer s notebook s netbook s gaming console s e.g. XBOX Live Nintendo DS Sony PlayStation Portable etc. portable scanner s and or the like.

Networks are commonly thought to comprise the interconnection and interoperation of clients servers and intermediary nodes in a graph topology. It should be noted that the term server as used throughout this application refers generally to a computer other device program or combination thereof that processes and responds to the requests of remote users across a communications network. Servers serve their information to requesting clients. The term client as used herein refers generally to a computer program other device user and or combination thereof that is capable of processing and making requests and obtaining and processing any responses from servers across a communications network. A computer other device program or combination thereof that facilitates processes information and requests and or furthers the passage of information from a source user to a destination user is commonly referred to as a node. Networks are generally thought to facilitate the transfer of information from source points to destinations. A node specifically tasked with furthering the passage of information from a source to a destination is commonly called a router. There are many forms of networks such as Local Area Networks LANs Pico networks Wide Area Networks WANs Wireless Networks WLANs etc. For example the Internet is generally accepted as being an interconnection of a multitude of networks whereby remote clients and servers may access and interoperate with one another.

The DWC controller may be based on computer systems that may comprise but are not limited to components such as a computer systemization connected to memory .

A computer systemization may comprise a clock central processing unit CPU s and or processor s these terms are used interchangeably throughout the disclosure unless noted to the contrary a memory e.g. a read only memory ROM a random access memory RAM etc. and or an interface bus and most frequently although not necessarily are all interconnected and or communicating through a system bus on one or more mother board s having conductive and or otherwise transportive circuit pathways through which instructions e.g. binary encoded signals may travel to effectuate communications operations storage etc. The computer systemization may be connected to a power source e.g. optionally the power source may be internal. Optionally a cryptographic processor and or transceivers e.g. ICs may be connected to the system bus. In another embodiment the cryptographic processor and or transceivers may be connected as either internal and or external peripheral devices via the interface bus I O. In turn the transceivers may be connected to antenna s thereby effectuating wireless transmission and reception of various communication and or sensor protocols for example the antenna s may connect to a Texas Instruments WiLink WL1283 transceiver chip e.g. providing 802.11n Bluetooth 3.0 FM global positioning system GPS thereby allowing DWC controller to determine its location Broadcom BCM4329FKUBG transceiver chip e.g. providing 802.11n Bluetooth 2.1 EDR FM etc. BCM28150 HSPA and BCM2076 Bluetooth 4.0 GPS etc. a Broadcom BCM4750IUB8 receiver chip e.g. GPS an Infineon Technologies X Gold 618 PMB9800 e.g. providing 2G 3G HSDPA HSUPA communications Intel s XMM 7160 LTE DC HSPA Qualcom s CDMA 2000 Mobile Data Station Modem Snapdragon and or the like. The system clock may have a crystal oscillator and generates a base signal through the computer systemization s circuit pathways. The clock may be coupled to the system bus and various clock multipliers that will increase or decrease the base operating frequency for other components interconnected in the computer systemization. The clock and various components in a computer systemization drive signals embodying information throughout the system. Such transmission and reception of instructions embodying information throughout a computer systemization may be referred to as communications. These communicative instructions may further be transmitted received and the cause of return and or reply communications beyond the instant computer systemization to communications networks input devices other computer systemizations peripheral devices and or the like. It should be understood that in alternative embodiments any of the above components may be connected directly to one another connected to the CPU and or organized in numerous variations employed as exemplified by various computer systems.

The CPU comprises at least one high speed data processor adequate to execute program components for executing user and or system generated requests. Often the processors themselves will incorporate various specialized processing units such as but not limited to floating point units integer processing units integrated system bus controllers logic operating units memory management control units etc. and even specialized processing sub units like graphics processing units digital signal processing units and or the like. Additionally processors may include internal fast access addressable memory and be capable of mapping and addressing memory beyond the processor itself internal memory may include but is not limited to fast registers various levels of cache memory e.g. level 1 2 3 etc. RAM etc. The processor may access this memory through the use of a memory address space that is accessible via instruction address which the processor can construct and decode allowing it to access a circuit path to a specific memory address space having a memory state value. The CPU may be a microprocessor such as AMD s Athlon Duron and or Opteron ARM s classic e.g. ARM7 9 11 embedded Coretx M R application Cortex A embedded and secure processors IBM and or Motorola s DragonBall and PowerPC IBM s and Sony s Cell processor Intel s Atom Celeron Mobile Core 2 Duo i3 i5 i7 Itanium Pentium Xeon and or XScale and or the like processor s . The CPU interacts with memory through instruction passing through conductive and or transportive conduits e.g. printed electronic and or optic circuits to execute stored instructions i.e. program code . Such instruction passing facilitates communication within the DWC controller and beyond through various interfaces. Should processing requirements dictate a greater amount speed and or capacity distributed processors e.g. Distributed DWC mainframe multi core parallel and or super computer architectures may similarly be employed. Alternatively should deployment requirements dictate greater portability smaller mobile devices e.g. smartphones Personal Digital Assistants PDAs etc. may be employed.

Depending on the particular implementation features of the DWC may be achieved by implementing a microcontroller such as CAST s R8051XC2 microcontroller Intel s MCS 51 i.e. 8051 microcontroller and or the like. Also to implement certain features of the DWC some feature implementations may rely on embedded components such as Application Specific Integrated Circuit ASIC Digital Signal Processing DSP Field Programmable Gate Array FPGA and or the like embedded technology. For example any of the DWC component collection distributed or otherwise and or features may be implemented via the microprocessor and or via embedded components e.g. via ASIC coprocessor DSP FPGA and or the like. Alternately some implementations of the DWC may be implemented with embedded components that are configured and used to achieve a variety of features or signal processing.

Depending on the particular implementation the embedded components may include software solutions hardware solutions and or some combination of both hardware software solutions. For example DWC features discussed herein may be achieved through implementing FPGAs which are a semiconductor devices containing programmable logic components called logic blocks and programmable interconnects such as the high performance FPGA Virtex series and or the low cost Spartan series manufactured by Xilinx. Logic blocks and interconnects can be programmed by the customer or designer after the FPGA is manufactured to implement any of the DWC features. A hierarchy of programmable interconnects allow logic blocks to be interconnected as needed by the DWC system designer administrator somewhat like a one chip programmable breadboard. An FPGA s logic blocks can be programmed to perform the operation of basic logic gates such as AND and XOR or more complex combinational operators such as decoders or simple mathematical operations. In most FPGAs the logic blocks also include memory elements which may be circuit flip flops or more complete blocks of memory. In some circumstances the DWC may be developed on regular FPGAs and then migrated into a fixed version that more resembles ASIC implementations. Alternate or coordinating implementations may migrate DWC controller features to a final ASIC instead of or in addition to FPGAs. Depending on the implementation all of the aforementioned embedded components and microprocessors may be considered the CPU and or processor for the DWC.

The power source may be of any standard form for powering small electronic circuit board devices such as the following power cells alkaline lithium hydride lithium ion lithium polymer nickel cadmium solar cells and or the like. Other types of AC or DC power sources may be used as well. In the case of solar cells in one embodiment the case provides an aperture through which the solar cell may capture photonic energy. The power cell is connected to at least one of the interconnected subsequent components of the DWC thereby providing an electric current to all the interconnected components. In one example the power source is connected to the system bus component . In an alternative embodiment an outside power source is provided through a connection across the I O interface. For example a USB and or IEEE 1394 connection carries both data and power across the connection and is therefore a suitable source of power.

Interface bus ses may accept connect and or communicate to a number of interface adapters frequently although not necessarily in the form of adapter cards such as but not limited to input output interfaces I O storage interfaces network interfaces and or the like. Optionally cryptographic processor interfaces similarly may be connected to the interface bus. The interface bus provides for the communications of interface adapters with one another as well as with other components of the computer systemization. Interface adapters are adapted for a compatible interface bus. Interface adapters may connect to the interface bus via expansion and or slot architecture. Various expansion and or slot architectures may be employed such as but not limited to Accelerated Graphics Port AGP Card Bus ExpressCard Extended Industry Standard Architecture E ISA Micro Channel Architecture MCA NuBus Peripheral Component Interconnect Extended PCI X PCI Express Personal Computer Memory Card International Association PCMCIA Thunderbolt and or the like.

Storage interfaces may accept communicate and or connect to a number of storage devices such as but not limited to storage devices removable disc devices and or the like. Storage interfaces may employ connection protocols such as but not limited to Ultra Serial Advanced Technology Attachment Packet Interface Ultra Serial ATA PI Enhanced Integrated Drive Electronics E IDE Institute of Electrical and Electronics Engineers IEEE 1394 Ethernet fiber channel Small Computer Systems Interface SCSI Thunderbolt Universal Serial Bus USB and or the like.

Network interfaces may accept communicate and or connect to a communications network . Through a communications network the DWC controller is accessible through remote clients e.g. computers with web browsers by users . Network interfaces may employ connection protocols such as but not limited to direct connect Ethernet thick thin twisted pair 10 100 1000 Base T and or the like Token Ring wireless connection such as IEEE 802.11a x and or the like. Should processing requirements dictate a greater amount speed and or capacity distributed network controllers e.g. Distributed DWC architectures may similarly be employed to pool load balance and or otherwise increase the communicative bandwidth required by the DWC controller. A communications network may be any one and or the combination of the following a direct interconnection the Internet a Local Area Network LAN a Metropolitan Area Network MAN an Operating Missions as Nodes on the Internet OMNI a secured custom connection a Wide Area Network WAN a wireless network e.g. employing protocols such as but not limited to a Wireless Application Protocol WAP I mode and or the like and or the like. A network interface may be regarded as a specialized form of an input output interface. Further multiple network interfaces may be used to engage with various communications network types . For example multiple network interfaces may be employed to allow for the communication over broadcast multicast and or unicast networks.

Input Output interfaces I O may accept communicate and or connect to user input devices peripheral devices cryptographic processor devices and or the like. I O may employ connection protocols such as but not limited to audio analog digital monaural RCA stereo and or the like data Apple Desktop Bus ADB Bluetooth IEEE 1394a b serial universal serial bus USB infrared joystick keyboard midi optical PC AT PS 2 parallel radio video interface Apple Desktop Connector ADC BNC coaxial component composite digital DisplayPort Digital Visual Interface DVI high definition multimedia interface HDMI RCA RF antennae S Video VGA and or the like wireless transceivers 802.11a b g n x Bluetooth cellular e.g. code division multiple access CDMA high speed packet access HSPA high speed downlink packet access HSDPA global system for mobile communications GSM long term evolution LTE WiMax etc. and or the like. One output device may be a video display which may take the form of a Cathode Ray Tube CRT Liquid Crystal Display LCD Light Emitting Diode LED Organic Light Emitting Diode OLED Plasma and or the like based monitor with an interface e.g. VGA DVI circuitry and cable that accepts signals from a video interface. The video interface composites information generated by a computer systemization and generates video signals based on the composited information in a video memory frame. Another output device is a television set which accepts signals from a video interface. Often the video interface provides the composited video information through a video connection interface that accepts a video display interface e.g. an RCA composite video connector accepting an RCA composite video cable a DVI connector accepting a DVI display cable HDMI etc. .

User input devices often are a type of peripheral device see below and may include card readers dongles finger print readers gloves graphics tablets joysticks keyboards microphones mouse mice remote controls retina readers touch screens e.g. capacitive resistive etc. trackballs trackpads sensors e.g. accelerometers ambient light GPS gyroscopes proximity etc. styluses and or the like.

Peripheral devices may be connected and or communicate to I O and or other facilities of the like such as network interfaces storage interfaces directly to the interface bus system bus the CPU and or the like. Peripheral devices may be external internal and or part of the DWC controller. Peripheral devices may include antenna audio devices e.g. line in line out microphone input speakers etc. cameras e.g. still video webcam etc. dongles e.g. for copy protection ensuring secure transactions with a digital signature and or the like external processors for added capabilities e.g. crypto devices force feedback devices e.g. vibrating motors near field communication NFC devices network interfaces printers radio frequency identifiers RFIDs scanners storage devices transceivers e.g. cellular GPS etc. video devices e.g. goggles monitors etc. video sources visors and or the like. Peripheral devices often include types of input devices e.g. microphones cameras etc. .

It should be noted that although user input devices and peripheral devices may be employed the DWC controller may be embodied as an embedded dedicated and or monitor less i.e. headless device wherein access would be provided over a network interface connection.

Cryptographic units such as but not limited to microcontrollers processors interfaces and or devices may be attached and or communicate with the DWC controller. A MC68HC16 microcontroller manufactured by Motorola Inc. may be used for and or within cryptographic units. The MC68HC16 microcontroller utilizes a 16 bit multiply and accumulate instruction in the 16 MHz configuration and requires less than one second to perform a 512 bit RSA private key operation. Cryptographic units support the authentication of communications from interacting agents as well as allowing for anonymous transactions. Cryptographic units may also be configured as part of the CPU. Equivalent microcontrollers and or processors may also be used. Other commercially available specialized cryptographic processors include the Broadcom s CryptoNetX and other Security Processors nCipher s nShield e.g. Solo Connect etc. SafeNet s Luna PCI e.g. 7100 series Semaphore Communications 40 MHz Roadrunner 184 sMIP s e.g. 208956 Sun s Cryptographic Accelerators e.g. Accelerator 6000 PCIe Board Accelerator 500 Daughtercard Via Nano Processor e.g. L2100 L2200 U2400 line which is capable of performing 500 MB s of cryptographic instructions VLSI Technology s 33 MHz 6868 and or the like.

Generally any mechanization and or embodiment allowing a processor to affect the storage and or retrieval of information is regarded as memory . However memory is a fungible technology and resource thus any number of memory embodiments may be employed in lieu of or in concert with one another. It is to be understood that the DWC controller and or a computer systemization may employ various forms of memory . For example a computer systemization may be configured wherein the operation of on chip CPU memory e.g. registers RAM ROM and any other storage devices are provided by a paper punch tape or paper punch card mechanism however such an embodiment would result in an extremely slow rate of operation. In one configuration memory may include ROM RAM and a storage device . A storage device may employ any number of computer storage devices systems. Storage devices may include a drum a fixed and or removable magnetic disk drive a magneto optical drive an optical drive i.e. Blueray CD ROM RAM Recordable R ReWritable RW DVD R RW HD DVD R RW etc. an array of devices e.g. Redundant Array of Independent Disks RAID solid state memory devices USB memory solid state drives SSD etc. other processor readable storage mediums and or other devices of the like. Thus a computer systemization generally requires and makes use of memory.

The memory may contain a collection of program and or database components and or data such as but not limited to operating system component s operating system information server component s information server user interface component s user interface Web browser component s Web browser database s mail server component s mail client component s cryptographic server component s cryptographic server the DWC component s and or the like i.e. collectively a component collection . These components may be stored and accessed from the storage devices and or from storage devices accessible through an interface bus. Although non conventional program components such as those in the component collection may be stored in a local storage device they may also be loaded and or stored in memory such as peripheral devices RAM remote storage facilities through a communications network ROM various forms of memory and or the like.

The operating system component is an executable program component facilitating the operation of the DWC controller. The operating system may facilitate access of I O network interfaces peripheral devices storage devices and or the like. The operating system may be a highly fault tolerant scalable and secure system such as Apple Macintosh OS X Server AT T Nan 9 Be OS Unix and Unix like system distributions such as AT T s UNIX Berkley Software Distribution BSD variations such as FreeBSD NetBSD OpenBSD and or the like Linux distributions such as Red Hat Ubuntu and or the like and or the like operating systems. However more limited and or less secure operating systems also may be employed such as Apple Macintosh OS IBM OS 2 Microsoft DOS Microsoft Windows 2000 2003 3.1 95 98 CE Millenium NT Vista XP Server Palm OS and or the like. In addition emobile operating systems such as Apple s iOS Google s Android Hewlett Packard s WebOS Microsofts Windows Mobile and or the like may be employed. Any of these operating systems may be embedded within the hardware of the NICK controller and or stored loaded into memory storage. An operating system may communicate to and or with other components in a component collection including itself and or the like. Most frequently the operating system communicates with other program components user interfaces and or the like. For example the operating system may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. The operating system once executed by the CPU may enable the interaction with communications networks data I O peripheral devices program components memory user input devices and or the like. The operating system may provide communications protocols that allow the DWC controller to communicate with other entities through a communications network . Various communication protocols may be used by the DWC controller as a subcarrier transport mechanism for interaction such as but not limited to multicast TCP IP UDP unicast and or the like.

An information server component is a stored program component that is executed by a CPU. The information server may be an Internet information server such as but not limited to Apache Software Foundation s Apache Microsoft s Internet Information Server and or the like. The information server may allow for the execution of program components through facilities such as Active Server Page ASP ActiveX ANSI Objective C C and or .NET Common Gateway Interface CGI scripts dynamic D hypertext markup language HTML FLASH Java JavaScript Practical Extraction Report Language PERL Hypertext Pre Processor PHP pipes Python wireless application protocol WAP WebObjects and or the like. The information server may support secure communications protocols such as but not limited to File Transfer Protocol FTP HyperText Transfer Protocol HTTP Secure Hypertext Transfer Protocol HTTPS Secure Socket Layer SSL messaging protocols e.g. America Online AOL Instant Messenger AIM Apple s iMessage Application Exchange APEX ICQ Internet Relay Chat IRC Microsoft Network MSN Messenger Service Presence and Instant Messaging Protocol PRIM Internet Engineering Task Force s IETF s Session Initiation Protocol SIP SIP for Instant Messaging and Presence Leveraging Extensions SIMPLE open XML based Extensible Messaging and Presence Protocol XMPP i.e. Jabber or Open Mobile Alliance s OMA s Instant Messaging and Presence Service IMPS Yahoo Instant Messenger Service and or the like. The information server provides results in the form of Web pages to Web browsers and allows for the manipulated generation of the Web pages through interaction with other program components. After a Domain Name System DNS resolution portion of an HTTP request is resolved to a particular information server the information server resolves requests for information at specified locations on the DWC controller based on the remainder of the HTTP request. For example a request such as http 123.124.125.126 myInformation.html might have the IP portion of the request 123.124.125.126 resolved by a DNS server to an information server at that IP address that information server might in turn further parse the http request for the myInformation.html portion of the request and resolve it to a location in memory containing the information myInformation.html. Additionally other information serving protocols may be employed across various ports e.g. FTP communications across port and or the like. An information server may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the information server communicates with the DWC database operating systems other program components user interfaces Web browsers and or the like.

Access to the DWC database may be achieved through a number of database bridge mechanisms such as through scripting languages as enumerated below e.g. CGI and through inter application communication channels as enumerated below e.g. CORBA WebObjects etc. . Any data requests through a Web browser are parsed through the bridge mechanism into appropriate grammars as required by the DWC. In one embodiment the information server would provide a Web form accessible by a Web browser. Entries made into supplied fields in the Web form are tagged as having been entered into the particular fields and parsed as such. The entered terms are then passed along with the field tags which act to instruct the parser to generate queries directed to appropriate tables and or fields. In one embodiment the parser may generate queries in standard SQL by instantiating a search string with the proper join select commands based on the tagged text entries wherein the resulting command is provided over the bridge mechanism to the DWC as a query. Upon generating query results from the query the results are passed over the bridge mechanism and may be parsed for formatting and generation of a new results Web page by the bridge mechanism. Such a new results Web page is then provided to the information server which may supply it to the requesting Web browser.

Also an information server may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

Computer interfaces in some respects are similar to automobile operation interfaces. Automobile operation interface elements such as steering wheels gearshifts and speedometers facilitate the access operation and display of automobile resources and status. Computer interaction interface elements such as check boxes cursors menus scrollers and windows collectively and commonly referred to as widgets similarly facilitate the access capabilities operation and display of data and computer hardware and operating system resources and status. Operation interfaces are commonly called user interfaces. Graphical user interfaces GUIs such as the Apple Macintosh Operating System s Aqua and iOS s Cocoa Touch IBM s OS 2 Google s Android Mobile UI Microsoft s Windows 2000 2003 3.1 95 98 CE Millenium 21 Mobile NT XP Vista 7 8 i.e. Aero Metro Unix s X Windows e.g. which may include additional Unix graphic interface libraries and layers such as K Desktop Environment KDE mythTV and GNU Network Object Model Environment GNOME web interface libraries e.g. ActiveX AJAX D HTML FLASH Java JavaScript etc. interface libraries such as but not limited to Dojo jQuery UI MooTools Prototype script.aculo.us SWFObject Yahoo User Interface any of which may be used and provide a baseline and means of accessing and displaying information graphically to users.

A user interface component is a stored program component that is executed by a CPU. The user interface may be a graphic user interface as provided by with and or atop operating systems and or operating environments such as already discussed. The user interface may allow for the display execution interaction manipulation and or operation of program components and or system facilities through textual and or graphical facilities. The user interface provides a facility through which users may affect interact and or operate a computer system. A user interface may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the user interface communicates with operating systems other program components and or the like. The user interface may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

A Web browser component is a stored program component that is executed by a CPU. The Web browser may be a hypertext viewing application such as Goofle s Mobile Chrome Microsoft Internet Explorer Netscape Navigator Apple s Mobile Safari embedded web browser objects such as through Apple s Cocoa Touch object class and or the like. Secure Web browsing may be supplied with 128 bit or greater encryption by way of HTTPS SSL and or the like. Web browsers allowing for the execution of program components through facilities such as ActiveX AJAX D HTML FLASH Java JavaScript web browser plug in APIs e.g. Chrome FireFox Internet Explorer Safari Plug in and or the like APIs and or the like. Web browsers and like information access tools may be integrated into PDAs cellular telephones smartphones and or other mobile devices. A Web browser may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the Web browser communicates with information servers operating systems integrated program components e.g. plug ins and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. Also in place of a Web browser and information server a combined application may be developed to perform similar operations of both. The combined application would similarly effect the obtaining and the provision of information to users user agents and or the like from the DWC equipped nodes. The combined application may be nugatory on systems employing standard Web browsers.

A mail server component is a stored program component that is executed by a CPU . The mail server may be an Internet mail server such as but not limited to Apple s Mail Server 3 dovect sendmail Microsoft Exchange and or the like. The mail server may allow for the execution of program components through facilities such as ASP ActiveX ANSI Objective C C and or .NET CGI scripts Java JavaScript PERL PHP pipes Python WebObjects and or the like. The mail server may support communications protocols such as but not limited to Internet message access protocol IMAP Messaging Application Programming Interface MAPI Microsoft Exchange post office protocol POP3 simple mail transfer protocol SMTP and or the like. The mail server can route forward and process incoming and outgoing mail messages that have been sent relayed and or otherwise traversing through and or to the DWC.

Access to the DWC mail may be achieved through a number of APIs offered by the individual Web server components and or the operating system.

Also a mail server may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses.

A mail client component is a stored program component that is executed by a CPU . The mail client may be a mail viewing application such as Apple Mobile Mail Microsoft Entourage Microsoft Outlook Microsoft Outlook Express Mozilla Thunderbird and or the like. Mail clients may support a number of transfer protocols such as IMAP Microsoft Exchange POP3 SMTP and or the like. A mail client may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the mail client communicates with mail servers operating systems other mail clients and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses. Generally the mail client provides a facility to compose and transmit electronic mail messages.

A cryptographic server component is a stored program component that is executed by a CPU cryptographic processor cryptographic processor interface cryptographic processor device and or the like. Cryptographic processor interfaces will allow for expedition of encryption and or decryption requests by the cryptographic component however the cryptographic component alternatively may run on a CPU. The cryptographic component allows for the encryption and or decryption of provided data. The cryptographic component allows for both symmetric and asymmetric e.g. Pretty Good Protection PGP encryption and or decryption. The cryptographic component may employ cryptographic techniques such as but not limited to digital certificates e.g. X.509 authentication framework digital signatures dual signatures enveloping password access protection public key management and or the like. The cryptographic component will facilitate numerous encryption and or decryption security protocols such as but not limited to checksum Data Encryption Standard DES Elliptical Curve Encryption ECC International Data Encryption Algorithm IDEA Message Digest 5 MD5 which is a one way hash operation passwords Rivest Cipher RC5 Rijndael RSA which is an Internet encryption and authentication system that uses an algorithm developed in 1977 by Ron Rivest Adi Shamir and Leonard Adleman Secure Hash Algorithm SHA Secure Socket Layer SSL Secure Hypertext Transfer Protocol HTTPS and or the like. Employing such encryption security protocols the DWC may encrypt all incoming and or outgoing communications and may serve as node within a virtual private network VPN with a wider communications network. The cryptographic component facilitates the process of security authorization whereby access to a resource is inhibited by a security protocol wherein the cryptographic component effects authorized access to the secured resource. In addition the cryptographic component may provide unique identifiers of content e.g. employing and MD5 hash to obtain a unique signature for an digital audio file. A cryptographic component may communicate to and or with other components in a component collection including itself and or facilities of the like. The cryptographic component supports encryption schemes allowing for the secure transmission of information across a communications network to enable the DWC component to engage in secure transactions if so desired. The cryptographic component facilitates the secure accessing of resources on the DWC and facilitates the access of secured resources on remote systems i.e. it may act as a client and or server of secured resources. Most frequently the cryptographic component communicates with information servers operating systems other program components and or the like. The cryptographic component may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The DWC database component may be embodied in a database and its stored data. The database is a stored program component which is executed by the CPU the stored program component portion configuring the CPU to process the stored data. The database may be any of a number of fault tolerant relational scalable secure databases such as DB2 MySQL Oracle Sybase and or the like. Relational databases are an extension of a flat file. Relational databases consist of a series of related tables. The tables are interconnected via a key field. Use of the key field allows the combination of the tables by indexing against the key field i.e. the key fields act as dimensional pivot points for combining information from various tables. Relationships generally identify links maintained between tables by matching primary keys. Primary keys represent fields that uniquely identify the rows of a table in a relational database. More precisely they uniquely identify rows of a table on the one side of a one to many relationship.

Alternatively the DWC database may be implemented using various standard data structures such as an array hash linked list struct structured text file e.g. XML table and or the like. Such data structures may be stored in memory and or in structured files. In another alternative an object oriented database may be used such as Frontier ObjectStore Poet Zope and or the like. Object databases can include a number of object collections that are grouped and or linked together by common attributes they may be related to other object collections by some common attributes. Object oriented databases perform similarly to relational databases with the exception that objects are not just pieces of data but may have other types of capabilities encapsulated within a given object. If the DWC database is implemented as a data structure the use of the DWC database may be integrated into another component such as the DWC component . Also the database may be implemented as a mix of data structures objects and relational structures. Databases may be consolidated and or distributed in countless variations through standard data processing techniques. Portions of databases e.g. tables may be exported and or imported and thus decentralized and or integrated.

In one embodiment the database component includes several tables . A Users table may include fields such as but not limited to user ID first name last name middle name suffix prefix device ID list device name list device type list hardware configuration list software apps list device IP list device MAC list device preferences list and or the like. The Users table may support and or track multiple entity accounts on a DWC. A Clients table may include fields such as but not limited to device ID list device name list device type list hardware configuration list software apps list device IP list device MAC list device preferences list and or the like. A Objects table may include fields such as but not limited to size pixels resolution scaling x position y position height width shadow flag 3D effect flag alpha brightness contrast saturation gamma transparency overlap boundary margin rotation angle revolution angle and or the like. An Apps table may include fields such as but not limited to app name app id app version app software requirements list app hardware requirements list and or the like. A Gestures table may include fields such as but not limited to gesture name gesture type assoc code module num users num inputs velocity threshold list acceleration threshold list pressure threshold list and or the like. A Physics Models table may include fields such as but not limited to acceleration velocity direction x direction y orientation theta orientation phi object mass friction coefficient x friction coefficient y friction coefficient theta friction coefficient phi object elasticity restitution percent terminal velocity center of mass moment inertia relativistic flag newtonian flag collision type dissipation factor and or the like. A Viewports table may include fields such as but not limited to user id client id viewport shape viewport x viewport y viewport size list and or the like. A Whiteboards table may include fields such as but not limited to whiteboard id whiteboard name whiteboard team list whiteboard directory and or the like. An Object Contexts table may include fields such as but not limited to object id object type system settings flag object menu XML and or the like. A System Contexts table may include fields such as but not limited to object type system settings flag system menu XML and or the like. A Remote Window Contents table may include fields such as but not limited to window id window link window refresh trigger and or the like. A Market Data table may include fields such as but not limited to market data feed ID asset ID asset symbol asset name spot price bid price ask price and or the like in one embodiment the market data table is populated through a market data feed e.g. Bloomberg s PhatPipe Dun Bradstreet Reuter s Tib Triarch etc. for example through Microsoft s Active Template Library and Dealing Object Technology s real time toolkit Rtt.Multi.

In one embodiment the DWC database may interact with other database systems. For example employing a distributed database system queries and data access by search DWC component may treat the combination of the DWC database an integrated data security layer database as a single database entity.

In one embodiment user programs may contain various user interface primitives which may serve to update the DWC. Also various accounts may require custom database tables depending upon the environments and the types of clients the DWC may need to serve. It should be noted that any unique fields may be designated as a key field throughout. In an alternative embodiment these tables have been decentralized into their own databases and their respective database controllers i.e. individual database controllers for each of the above tables . Employing standard data processing techniques one may further distribute the databases over several computer systemizations and or storage devices. Similarly configurations of the decentralized database controllers may be varied by consolidating and or distributing the various database components . The DWC may be configured to keep track of various settings inputs and parameters via database controllers.

The DWC database may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the DWC database communicates with the DWC component other program components and or the like. The database may contain retain and provide information regarding other nodes and data.

The DWC component is a stored program component that is executed by a CPU. In one embodiment the DWC component incorporates any and or all combinations of the aspects of the DWC discussed in the previous figures. As such the DWC affects accessing obtaining and the provision of information services transactions and or the like across various communications networks. The features and embodiments of the DWC discussed herein increase network efficiency by reducing data transfer requirements the use of more efficient data structures and mechanisms for their transfer and storage. As a consequence more data may be transferred in less time and latencies with regard to transactions are also reduced. In many cases such reduction in storage transfer time bandwidth requirements latencies etc. will reduce the capacity and structural infrastructure requirements to support the DWC s features and facilities and in many cases reduce the costs energy consumption requirements and extend the life of DWC s underlying infrastructure this has the added benefit of making the DWC more reliable. Similarly many of the features and mechanisms are designed to be easier for users to use and access thereby broadening the audience that may enjoy employ and exploit the feature sets of the DWC such ease of use also helps to increase the reliability of the DWC. In addition the feature sets include heightened security as noted via the Cryptographic components and throughout making access to the features and data more reliable and secure.

The DWC component may transform user multi element touchscreen gestures via DWC components into updated digital collaboration whiteboard objects and or the like and use of the DWC. In one embodiment the DWC component takes inputs e.g. collaborate request input authentication response tile objects data whiteboard input user whiteboard session object user instruction lookup response tile objects data affected clients data user input raw data object specified context instructions system context interpretation instructions and or the like etc. and transforms the inputs via various components e.g. WCSI CVS VCG UCW UGI and or the like into outputs e.g. collaborator acknowledgment user whiteboard session object whiteboard session details updated tile objects data updated user whiteboard session details user gesture identifier and or the like .

The DWC component enabling access of information between nodes may be developed by employing standard development tools and languages such as but not limited to Apache components Assembly ActiveX binary executables ANSI Objective C C and or .NET database adapters CGI scripts Java JavaScript mapping tools procedural and object oriented development tools PERL PHP Python shell scripts SQL commands web application server extensions web development environments and libraries e.g. Microsoft s ActiveX Adobe AIR FLEX FLASH AJAX D HTML Dojo Java JavaScript jQuery UI MooTools Prototype script.aculo.us Simple Object Access Protocol SOAP SWFObject Yahoo User Interface and or the like WebObjects and or the like. In one embodiment the DWC server employs a cryptographic server to encrypt and decrypt communications. The DWC component may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the DWC component communicates with the DWC database operating systems other program components and or the like. The DWC may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The structure and or operation of any of the DWC node controller components may be combined consolidated and or distributed in any number of ways to facilitate development and or deployment. Similarly the component collection may be combined in any number of ways to facilitate deployment and or development. To accomplish this one may integrate the components into a common code base or in a facility that can dynamically load the components on demand in an integrated fashion.

The component collection may be consolidated and or distributed in countless variations through standard data processing and or development techniques. Multiple instances of any one of the program components in the program component collection may be instantiated on a single node and or across numerous nodes to improve performance through load balancing and or data processing techniques. Furthermore single instances may also be distributed across multiple controllers and or storage devices e.g. databases. All program component instances and controllers working in concert may do so through standard data processing communication techniques.

The configuration of the DWC controller will depend on the context of system deployment. Factors such as but not limited to the budget capacity location and or use of the underlying hardware resources may affect deployment requirements and configuration. Regardless of if the configuration results in more consolidated and or integrated program components results in a more distributed series of program components and or results in some combination between a consolidated and distributed configuration data may be communicated obtained and or provided. Instances of components consolidated into a common code base from the program component collection may communicate obtain and or provide data. This may be accomplished through intra application data processing communication techniques such as but not limited to data referencing e.g. pointers internal messaging object instance variable communication shared memory space variable passing and or the like.

If component collection components are discrete separate and or external to one another then communicating obtaining and or providing data with and or to other components may be accomplished through inter application data processing communication techniques such as but not limited to Application Program Interfaces API information passage distributed Component Object Model D COM Distributed Object Linking and Embedding D OLE and or the like Common Object Request Broker Architecture CORBA Jini local and remote application program interfaces JavaScript Object Notation JSON Remote Method Invocation RMI SOAP process pipes shared files and or the like. Messages sent between discrete component components for inter application communication or within memory spaces of a singular component for intra application communication may be facilitated through the creation and parsing of a grammar. A grammar may be developed by using development tools such as lex yacc XML and or the like which allow for grammar generation and parsing capabilities which in turn may form the basis of communication messages within and between components.

where Value is discerned as being a parameter because http is part of the grammar syntax and what follows is considered part of the post value. Similarly with such a grammar a variable Value may be inserted into an http post command and then sent. The grammar syntax itself may be presented as structured data that is interpreted and or otherwise used to generate the parsing mechanism e.g. a syntax description text file as processed by lex yacc etc. . Also once the parsing mechanism is generated and or instantiated it itself may process and or parse structured data such as but not limited to character e.g. tab delineated text HTML structured text streams XML and or the like structured data. In another embodiment inter application data processing protocols themselves may have integrated and or readily available parsers e.g. JSON SOAP and or like parsers that may be employed to parse e.g. communications data. Further the parsing grammar may be used beyond message parsing but may also be used to parse databases data collections data stores structured data and or the like. Again the desired configuration will depend upon the context environment and requirements of system deployment.

For example in some implementations the DWC controller may be executing a PHP script implementing a Secure Sockets Layer SSL socket server via the information server which listens to incoming communications on a server port to which a client may send data e.g. data encoded in JSON format. Upon identifying an incoming communication the PHP script may read the incoming message from the client device parse the received JSON encoded text data to extract information from the JSON encoded text data into PHP script variables and store the data e.g. client identifying information etc. and or extracted information in a relational database accessible using the Structured Query Language SQL . An exemplary listing written substantially in the form of PHP SQL commands to accept JSON encoded input data via SSL parse the data to extract variables and store it in a database is provided below 

Also the following provide example embodiments of SOAP and other parser implementations all of which are expressly incorporated by reference herein 

In order to address various issues and advance the art the entirety of this application for DIGITAL WHITEBOARD COLLABORATION APPARATUSES METHODS AND SYSTEMS including the Cover Page Title Headings Field Background Summary Brief Description of the Drawings Detailed Description Claims Abstract Figures Appendices and or otherwise shows by way of illustration various example embodiments in which the claimed innovations may be practiced. The advantages and features of the application are of a representative sample of embodiments only and are not exhaustive and or exclusive. They are presented only to assist in understanding and teach the claimed principles. It should be understood that they are not representative of all claimed innovations. As such certain aspects of the disclosure have not been discussed herein. That alternate embodiments may not have been presented for a specific portion of the innovations or that further undescribed alternate embodiments may be available for a portion is not to be considered a disclaimer of those alternate embodiments. It will be appreciated that many of those undescribed embodiments incorporate the same principles of the innovations and others are equivalent. Thus it is to be understood that other embodiments may be utilized and functional logical operational organizational structural and or topological modifications may be made without departing from the scope and or spirit of the disclosure. As such all examples and or embodiments are deemed to be non limiting throughout this disclosure. Also no inference should be drawn regarding those embodiments discussed herein relative to those not discussed herein other than it is as such for purposes of reducing space and repetition. For instance it is to be understood that the logical and or topological structure of any combination of any data flow sequence s program components a component collection other components and or any present feature sets as described in the figures and or throughout are not limited to a fixed operating order and or arrangement but rather any disclosed order is exemplary and all equivalents regardless of order are contemplated by the disclosure. Furthermore it is to be understood that such features are not limited to serial execution but rather any number of threads processes processors services servers and or the like that may execute asynchronously concurrently in parallel simultaneously synchronously and or the like are also contemplated by the disclosure. As such some of these features may be mutually contradictory in that they cannot be simultaneously present in a single embodiment. Similarly some features are applicable to one aspect of the innovations and inapplicable to others. In addition the disclosure includes other innovations not presently claimed. Applicant reserves all rights in those presently unclaimed innovations including the right to claim such innovations file additional applications continuations continuations in part divisions and or the like thereof. As such it should be understood that advantages embodiments examples functional features logical operational organizational structural topological and or other aspects of the disclosure are not to be considered limitations on the disclosure as defined by the claims or limitations on equivalents to the claims. It is to be understood that depending on the particular needs and or characteristics of a DWC individual and or enterprise user database configuration and or relational model data type data transmission and or network framework syntax structure and or the like various embodiments of the DWC may be implemented that allow a great deal of flexibility and customization. For example aspects of the DWC may be adapted for negotiations mediation group think studies crowd sourcing applications and or the like. While various embodiments and discussions of the DWC have been directed to digital collaboration however it is to be understood that the embodiments described herein may be readily configured and or customized for a wide variety of other applications and or implementations.

