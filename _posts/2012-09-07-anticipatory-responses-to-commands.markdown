---

title: Anticipatory responses to commands
abstract: Responsive to intercepting an outbound command, a command interceptor may, upon determining that the command is associated with a particular category of commands, transmit an anticipatory response to the source of the command, for example, to prematurely indicate that the command has met with success. Accordingly, a given application whose further execution is dependent upon the successful completion of the command may further execute earlier than would be the case if the given application was to await the transmission of the command, the generation of a response indicating success and the receipt of the response indicating success.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08653964&OS=08653964&RS=08653964
owner: BlackBerry Limited
number: 08653964
owner_city: Waterloo, Ontario
owner_country: CA
publication_date: 20120907
---
This application is a continuation of U.S. patent application Ser. No. 12 325 543 filed Dec. 1 2008 which issued as U.S. Pat. No. 8 274 380 on Sep. 25 2012 and which is herein incorporated by reference in its entirety.

The present application relates generally to communication between a device and a component and more specifically to optimizing the communication through use of anticipatory responses to commands.

A device that reads information from or writes information to a smart card typically does so through the use of a smart card reader. The smart card reader may be connected e.g. through a directly wired connection or a wireless connection to the device. Specific software called a driver is generally executed by the device to facilitate reading from and writing to a memory component of the smart card using the smart card reader. The driver includes an application programming interface API that allows other programs to issue requests and commands so that the requests and commands will be understood by the driver. An API generally comprises a source code interface that a computer system or program library provides in order to support requests for services to be made of the API by a computer program.

When the connection between the device and the smart card reader is wireless for example using the Bluetooth wireless communication protocol some complications may arise. In a typical transaction the device transmits over the wireless connection a request to the smart card reader and the smart card reader forwards the request to the smart card. The smart card then responds to the request with a response and the smart card reader forwards the response over the wireless connection to the device. Unfortunately the latency of a round trip communication from the device to the smart card and back again limits the speed with which the device can make use of the smart card e.g. to authenticate a user of the device. To a lesser extent bandwidth available for the connection between device and smart card reader may also limit the speed with which the device can make use of the smart card. The smart card driver is located on the device and has knowledge of how to talk to the smart card which has been received by the smart card reader. There are many cases where in order to perform an operation there is a requirement for several transactions.

Responsive to intercepting an outbound command such as an APDU a command interceptor may transmit an anticipatory response to the source of the command for example to prematurely indicate that the command has met with success. Accordingly a given application whose further execution is dependent upon the successful completion of the command may further execute earlier than would be the case if the given application was to await the transmission of the command the generation of a response indicating success and the receipt of the response indicating success.

In accordance with an aspect of the present application there is provided a method of handling outbound commands. The method includes intercepting a command outbound from a driver module and determining that the command will elicit a response selected from among a plurality of predictable responses. The method further includes selecting an anticipatory response from the plurality of predictable responses and transmitting the anticipatory response to the driver module. In other aspects of the present application a mobile communication device is provided for carrying out this method and a computer readable medium is provided for adapting a processor to carry out this method.

In accordance with another aspect of the present application there is provided a method of handling a response. The method includes receiving a response from a smart card reader coupled to a smart card determining that the response is of a type distinct from a type of response transmitted to an associated driver module as an anticipatory response to the command and storing in a record an indication that an incorrect anticipatory response has been transmitted to the associated driver module. In other aspects of the present application a mobile communication device is provided for carrying out this method and a computer readable medium is provided for adapting a processor to carry out this method.

Other aspects and features of the present application will become apparent to those of ordinary skill in the art upon review of the following description of specific embodiments of the application in conjunction with the accompanying figures.

The housing may be elongated vertically or may take on other sizes and shapes including clamshell housing structures Where the keyboard includes keys that are associated with at least one alphabetic character and at least one numeric character the keyboard may include a mode selection key or other hardware or software for switching between alphabetic entry and numeric entry.

In addition to the microprocessor other parts of the mobile communication device are shown schematically in . These may include a communications subsystem a short range communications subsystem the keyboard and the display . The mobile communication device may further include other input output devices such as a set of auxiliary I O devices a serial port a speaker and a microphone . The mobile communication device may further include memory devices including a flash memory and a Random Access Memory RAM . Furthermore the mobile communication device may include various other device subsystems . The mobile communication device may have a battery to power the active elements of the mobile communication device . The mobile communication device may for instance comprise a two way radio frequency RF communication device having voice and data communication capabilities. In addition the mobile communication device may have the capability to communicate with other computer systems via the Internet.

Operating system software executed by the microprocessor may be stored in a computer readable medium such as the flash memory but may be stored in other types of memory devices such as a read only memory ROM or similar storage element. In addition system software specific device applications or parts thereof may be temporarily loaded into a volatile store such as the RAM . Communication signals received by the mobile device may also be stored to the RAM .

The microprocessor in addition to its operating system functions enables execution of software applications on the mobile communication device . A predetermined set of software applications that control basic device operations such as a voice communications module A and a data communications module B may be installed on the mobile communication device during manufacture. A smart card SC driver module C may also be installed on the mobile communication device during manufacture. Furthermore a command APDU interceptor D may also be installed on the mobile communication device to implement aspects of the present disclosure. As well additional software modules illustrated as other software modules N which may comprise for instance a personal information manager PIM application may be installed during manufacture. The PIM application may be capable of organizing and managing data items such as e mail messages calendar events voice mail messages appointments and task items. The PIM application may also be capable of sending and receiving data items via a wireless carrier network. The data items managed by the PIM application may be seamlessly integrated synchronized and updated via the wireless carrier network with the device user s corresponding data items stored or associated with a host computer system.

Communication functions including data and voice communications may be performed through the communication subsystem and through the short range communications subsystem .

The short range communications subsystem enables communication between the mobile communication device and other proximate systems or devices which need not necessarily be similar devices. For example the short range communications subsystem may include a Bluetooth communication module to provide for communication with the smart card reader where the smart card reader also implements a Bluetooth communication module. As another example the short range communications subsystem may include an infrared device to provide for communication with similarly enabled systems and devices.

The smart card reader microprocessor operates under stored program control with code or firmware being stored in the flash memory or other type of non volatile memory device or devices . As depicted in the stored programs e.g. firmware include an operating system program or code module and other programs or software application modules indicated generally by reference . The operating system module of the smart card reader further includes a smart card reader driver component .

The smart card reader driver component is responsible for coordinating communications between the smart card reader and the smart card and or the smart card driver module C of the mobile communication device . Based on results of various communications with the smart card reader the smart card driver module C maintains a record of the state of the smart card . The operating system module code code for specific device application modules code for the smart card reader driver component or code components thereof may be temporarily loaded into a volatile storage medium such as the RAM . Received communication signals and other data may also be stored in the RAM . Additionally the storage component interface receives the smart card which may provide additional storage space for the smart card reader .

In one embodiment the smart card has a controller responsible for coordinating communications between the smart card and the smart card reader driver component of the smart card reader .

The stored program control i.e. software application modules for the smart card reader microprocessor may include a predetermined set of applications code components or software modules that control basic device operations for example management and security related control of the data of the smart card reader and may be installed on the smart card reader as a component of the software application modules during the manufacturing process. Further applications may also be loaded i.e. downloaded onto the smart card reader through the operation of the serial port the smart card reader short range communications subsystem or from the smart card . The downloaded code modules or components may then be installed by the user or automatically in the RAM or non volatile program memory e.g. the flash memory .

While the smart card reader driver component is shown to be an integrated portion of the operating system for security purposes e.g. individuals are not permitted to tamper with the smart card reader driver component the smart card reader driver component may be installed as one of the software applications and in such embodiments suitable security related precautions may be taken to ensure that the smart card reader driver component cannot be modified or tampered with by unauthorized users.

The serial port may be a USB type interface port for interfacing or synchronizing with another device such as a personal computer or the mobile communication device . The serial port is used to set preferences through an external device or software application or exchange data with a device such as the mobile communication device . Such data may be stored on the smart card that is plugged into the storage component interface of the smart card reader . The serial port is also used to extend the capabilities of the smart card reader by providing for downloads to the smart card reader of information or software including user interface information.

The short range communications subsystem provides an interface for communication between the mobile communication device or personal computer and the smart card reader . In one embodiment the short range communications subsystem employs an infrared communication link or channel. In another embodiment the short range communications subsystem operates according to a wireless RF bus protocol such as Bluetooth . However the short range communications subsystem may operate according to any suitable local wired or wireless communication protocol so long as the short range communications subsystem of the mobile communication device operates using the same protocol thereby facilitating wireless communication between the mobile communication device and the smart card reader . Any communications mechanism and or protocol may be implemented for the short range communications subsystems so long as the mobile communication device can communicate with the smart card reader when the mobile communication device is no more than a predetermined distance away from the smart card reader .

Traditionally a smart card driver module is supplied by the manufacturer of the smart card . The operating system of the mobile communication device includes an API. Aspects of the API define a smart card framework. The smart card driver module C registers with the operating system of the mobile communication device so that calls to smart card framework aspects of the API can be appropriately handled by the smart card driver module C.

Communication between the smart card reader and the smart card may be standardized to use Application Protocol Data Units APDUs where a standard structure for an APDU is defined by ISO 7816. ISO 7816 is an international standard related to electronic identification cards especially smart cards managed jointly by the International Organization for Standardization ISO and the International Electrotechnical Commission IEC . It may be considered that there are various categories of APDUs including command APDUs and response APDUs. A command APDU is sent by the smart card reader to the smart card . A command APDU contains a header and may contain data. A response APDU is sent by the smart card to the smart card reader . A response APDU contains a status word and may contain data.

When the given application executed on the microprocessor of the mobile communication device requires input from the smart card the given application sends an initial request to the smart card framework which request is redirected by the smart card framework to the smart card driver module C which is also executed by the microprocessor . Responsive to receiving the request the smart card driver module C issues a request command APDU to the smart card via the smart card reader . Upon receiving the request command APDU from the smart card driver module C the smart card reader forwards the request command APDU to the smart card . Note that in general a request command APDU may be transmitted to the smart card in bits and pieces e.g. in a series of packets. Such piecewise transmission is provided for in protocols known as T 0 and T 1 as part of ISO 7816. The smart card receives the request command APDU and responds by sending a response APDU to the smart card reader . The smart card reader upon receiving the response APDU forwards the response APDU to the smart card driver module C. Responsive to receiving the response APDU the smart card driver module C generates a response and transmits the response to the given application.

It can be documented that wireless communication sending and receiving each packet between the smart card reader and the mobile communication device is associated with a greater amount of latency than wired communication of the same packets. As a result operations on the mobile communication device when the operations involve use of a wireless channel to the smart card reader can due to this latency take significantly longer than when the operations involve use of a wired channel to the smart card reader . It is therefore desirable to reduce to a practical extent the latency associated with the exchange of packets between the mobile communication device and the smart card reader .

It has been discussed that the smart card reader driver module C on the mobile communication device generates command APDUs. While there are many possible command APDUs the command APDUs may be divided into command APDUs that have a predictable set of possible response APDUs and all other command APDUs i.e. those command APDUs whose set of possible response APDUs do not form a predictable set .

For example a command APDU such as the SELECT FILE command APDU may be considered to be in the category of command APDUs that have a predictable set of possible response APDUs. The SELECT FILE command APDU usually elicits a response APDU indicating success or a response APDU indicating failure. In contrast a command APDU requesting encryption of some data will elicit a response carrying a payload that depends on inter alia the data that is to be encrypted the key used for encryption and the method of encryption.

For a more exhaustive study of indications that may be found in a response APDU that the smart card transmits in response to the SELECT FILE command APDU see part 4 of ISO 7816 and in particular Section 6 Basic Interindustry Commands. The status condition indicated in a response APDU responsive to the SELECT FILE command APDU may be ascertained by reviewing status bytes SW1 and SW2. For example a response APDU that indicates successful implementation of a received command APDU may have the following values in the status bytes SW1 0x90 and SW2 0x00.

A response APDU responsive to the SELECT FILE command APDU that indicates a warning regarding implementation of a received command APDU may have the following values in the status bytes SW1 0x62 and SW2 0x83 selected file invalidated or SW2 0x84 not formatted properly .

A response APDU responsive to the SELECT FILE command APDU that indicates an error i.e. a failure in implementing a received command APDU may have the following values in the status bytes SW1 0x6A and SW2 0x81 Function not supported or SW2 0x82 File not found or SW2 0x86 Incorrect parameters P1 P2 or SW2 0x87 Lc inconsistent with P1 P2 .

By bypassing a wait for a number of packets to be exchanged over a wireless channel between the mobile communication device and the smart card reader the latency of operations that use the wireless channel can be reduced.

In overview by intercepting command APDUs outbound from the smart card reader driver C and categorizing the command APDUs the command APDU interceptor D may identify a specific type of command APDU that elicits a predictable response APDU. By generating the predictable response APDU and transmitting the predictable response APDU to the smart card reader driver C command APDU interceptor D may reduce the latency of operations that use the wireless channel.

In view of the command APDU interceptor D may intercept step a command APDU generated by the smart card driver module C before the smart card driver module C is able to transmit the command APDU over the wireless connection to the smart card reader . Notably the smart card driver module C may have generated the command APDU responsive to receiving a command from a given application.

Intercepting the command APDU may involve delaying transmission of the command APDU to the smart card reader while providing the smart card driver module C with an indication that the command APDU has been transmitted.

Alternatively intercepting the command APDU may involve merely listening in as the smart card driver module C transmits the command APDU To the smart card reader such that the command APDU interceptor D obtains a copy of the command APDU .

The command APDU interceptor D may then categorize step the intercepted command APDU that is the command APDU interceptor D may associate the intercepted command APDU with a category. One example category with which the intercepted command APDU may be associated is a category of command APDUs that elicit from the destination smart card a response APDU selected from among a predictable set of possible response APDUs. One example category with which the intercepted command APDU may be associated is a category of command APDUs that elicit from the destination smart card a response APDU that does not come from a predictable set of possible response APDUs.

In the case wherein the command APDU interceptor D determines step that the intercepted command APDU is categorized as a command APDU whose response APDU does not come from a predictable set of possible response APDUs the command APDU interceptor D may transmit step without further processing the command APDU over the wireless connection to the smart card reader .

In the case wherein the command APDU interceptor D determines step that the command APDU has been categorized step as a command APDU that elicits a response APDU selected from a predictable set of possible response APDUs the command APDU interceptor D may select step an anticipatory response APDU from among the predictable set of possible response APDUs. For example where the predictable set of possible response APDUs includes a response APDU that indicates success the command APDU interceptor D may select as the anticipatory response APDU the response APDU that indicates success The command APDU interceptor D may then transmit step to the smart card driver module C the anticipatory response APDU . Additionally the command APDU interceptor D may transmit step the command APDU to the smart card reader over the wireless connection.

The transmission step by the command APDU interceptor D of the command APDU over the wireless connection to the smart card reader may only be necessary in the event that the interception step of the command APDU has involved delaying the transmission of the command APDU over the wireless connection to the smart card reader .

Thus the smart card driver module C may be given an indication by the anticipatory response APDU that the command carried in the payload of the command APDU has been carried out successfully by the smart card thereby allowing the smart card to transmit a response APDU indicating success. Responsive to receiving the anticipatory response APDU the smart card driver module C generates a response and transmits the response to the given application.

Responsive to receiving the command APDU the smart card reader passes the command APDU to the smart card at which the command APDU is processed. Following the processing of the command APDU the smart card passes a response APDU to the smart card reader . The smart card reader then transmits the response APDU over the wireless connection to the mobile communication device .

In the case wherein upon inspecting step the response APDU the command APDU interceptor D determines step that the response APDU includes an indication of failure the command APDU interceptor D stores step a record that indicates that the smart card driver module C has received an incorrect anticipatory response. Based on storage of the record that indicates that the smart card driver module C has received an incorrect anticipatory response the command APDU interceptor D may be considered to store an indication that that the smart card driver module C is likely to be maintaining incorrect information about the state of the smart card . Optionally ahead of storing step the record the command APDU interceptor D may increase step a counter of incorrect responses.

In a first scenario upon determining step that the smart card driver module C is likely to be maintaining an incorrect state of the smart card the command APDU interceptor D generates step a smart card removed response APDU A that indicates that the smart card has been removed from the smart card reader . In the case wherein the smart card and the smart card reader communicate wirelessly rather than via a physical connection a smart card removed response may be used to indicate that the smart card and the smart card reader have become uncoupled. Subsequently the command APDU interceptor D transmits step to the smart card driver module C the smart card removed response APDU A.

Responsive to receiving the smart card removed response APDU A the smart card driver module C resets the record of the state of the smart card . Once the smart card driver module C has reset the record of the state of the smart card the smart card driver module C may issue a further command APDU not shown where the further command APDU is very similar to the subsequent command APDU but is based on a different assumption of the state of the smart card .

In a second scenario upon determining step that the smart card driver module C is likely to be maintaining a correct state of the smart card the command APDU interceptor D proceeds to execute the method of . That is the command APDU interceptor D categorizes step the subsequent command APDU as either a command APDU with a predictable set of possible response APDUs or a command APDU whose set of possible response APDUs do not form a predictable set of possible response APDUs. In the case wherein the command APDU interceptor D determines step that the subsequent command APDU has been categorized in step as a command APDU whose set of possible response APDUs do not form a predictable set of possible response APDUs the command APDU interceptor D may transmit step the subsequent command APDU over the wireless connection to the smart card reader .

However in the case wherein the command APDU interceptor D determines step that the subsequent command APDU has been categorized in step as a command APDU with a predictable set of possible response APDUs the command APDU interceptor D may select step an anticipatory response APDU B from among the predictable set of possible response APDUs. The command APDU interceptor D may then transmit step to the smart card driver module C the anticipatory response APDU B. Additionally the command APDU interceptor D may transmit step the subsequent command APDU to the smart card reader over the wireless connection.

The smart card driver module C may be given an indication by the anticipatory response APDU B that the subsequent command APDU has met with success. Responsive to receiving the anticipatory response APDU B the smart card driver module C generates a response and transmits the response to the given application.

Accordingly it is contemplated that the command APDU interceptor D may keep track of transmitted incorrect anticipatory responses see step . Based on a determined rate of transmission of incorrect anticipatory responses the command APDU interceptor D may adjust a frequency with which intercepted command APDUs are considered as predictable candidates for anticipatory responses. For example the command APDU interceptor D may consider every second intercepted command APDU every third intercepted command APDU . . . every tenth intercepted command APDU etc. A method in which an alterable frequency of consideration may be incorporated into the method of is illustrated in .

The method illustrated in begins when the command APDU interceptor D intercepts step a command APDU. Responsive to intercepting a command APDU the command APDU interceptor D increments step an APDU counter. The command APDU interceptor D then determines step whether the APDU counter has reached a predetermined value X . Upon determining that the APDU counter has reached value X the command APDU interceptor D resets step the APDU counter to zero. Subsequent to resetting the APDU counter the command APDU interceptor D proceeds to execute the method of That is the command APDU interceptor D categorizes step the command APDU intercepted in step as either a command APDU with a predictable set of possible response APDUs or a command APDU whose set of possible response APDUs do not form a predictable set of possible response APDUs.

Upon determining step that the APDU counter has not yet reached value X the command APDU interceptor D transmits step the command APDU intercepted in step to the smart card reader . That is the command APDU interceptor D does not interfere with the normal progression of the APDU exchange. Instead of examining every intercepted command APDU for eligibility for generating an anticipatory APDU as perhaps suggested by the method of every X intercepted command APDU is examined more closely for the opportunity of sending an anticipatory response APDU. Accordingly the apparent latency of the APDU exchange is only reduced for every X intercepted command APDU.

The value of X may be initialized to a first value. However as operation of the command APDU interceptor D is carried out an aspect of the command APDU interceptor D may monitor the counter of incorrect anticipatory response APDUs counted in step . Based on a determined rate of transmission of incorrect anticipatory response APDUs the command APDU interceptor D may adjust a frequency with which intercepted command APDUs are considered as candidates for anticipatory responses. The rate of transmission of incorrect anticipatory response APDUs may be determined from a count of total intercepted command APDUs and the count held at a given time in the counter of incorrect anticipatory response APDUs counted in step .

If a frequency exceeds a predetermined maximum the command APDU interceptor D may adjust the value of X so that relatively fewer intercepted command APDUs are considered as candidates for the anticipator response APDU.

Advantageously according to various embodiments of the present application while the volume of traffic between the mobile communication device and the smart card reader remains unchanged the delay between the given application sending an initial command and receiving the response based on the anticipatory response APDU may frequently be reduced.

The above described embodiments of the present application are intended to be examples only. Alterations modifications and variations may be effected to the particular embodiments by those skilled in the art without departing from the scope of the application which is defined by the claims appended hereto.

