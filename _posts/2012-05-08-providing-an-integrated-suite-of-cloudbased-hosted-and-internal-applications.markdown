---

title: Providing an integrated suite of cloud-based, hosted and internal applications
abstract: Methods and apparatuses, including computer program products, are described for providing an integrated suite of cloud-based, hosted, and internal applications. A server receives from a client device a request to access a portal comprising a plurality of cloud-based, hosted, and internal applications. The server determines an identity of the user, and one or more applications of the plurality of applications available for access by the user. The server establishes a link with one or more computing devices hosting the one or more available applications for providing functionality of the available applications. The server authenticates the user automatically for each of the available applications, and translates communications between the server and each of the applications based on a mapping configuration. The server integrates the established links into a user interface that provide access to each of the available applications, and provides the integrated user interface to the client device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08914516&OS=08914516&RS=08914516
owner: FMR LLC
number: 08914516
owner_city: Boston
owner_country: US
publication_date: 20120508
---
The subject matter of this application relates generally to methods and apparatuses including computer program products for providing an integrated suite of cloud based hosted and internal applications to be used by financial services professionals.

A registered investment advisor RIA plays a critical role in managing the portfolio of an individual investor client. The advisor must at the very least be able to review the asset allocation of the client forecast the risks and benefits of alternative allocation scenarios execute trades and transfers of the client s assets and update the client s personal information. These responsibilities require the advisor to gather and utilize a vast array of data from general market and business analytics to real time asset valuation to specific client characteristics. In addition many RIAs operate as solo practitioners or in small firms. As a result they need general business and productivity software to manage the daily tasks and activities of running a small business.

Often the diffuse nature of the sources providing the investment business data and the repositories which hold it leads the advisor to rely on a multitude of different providers each offering a discrete and separate application. These applications are frequently insulated from each other so that they cannot communicate easily or effectively to share information. Thus the advisor must maintain separate log in credentials for each application as well as ensure that redundant data across each application does not get out of sync. Also the advisor must have each application available at his or her workstation requiring time consuming installation and configuration of each application. Access to the various software applications or suites for managing not only the portfolios of their clients but also performing routine business or productivity tasks also may be limited or costly.

Recently cloud based and hosted services and application software have become increasingly common to provide robust computing capability without the need for localized internal copies of hardware and software. Cloud based and hosted applications enable the user to access desired functionality on demand and provide the flexibility to provision a unique set of services to meet a particular user s need. However internal locally installed applications are still prevalent in the marketplace and many users want to integrate these internal applications with the cloud based and hosted offerings to have access to a custom suite of applications.

Therefore it would be desirable to create a centralized application interface and portal that can provide one time user authentication presentation of data in a common context workflow connectivity and synchronous data management across a multitude of discrete third party cloud based hosted and internal applications. Such a centralized application interface and portal would provide cost savings and work efficiency improvements for the RIA.

In general overview the techniques described herein are related to providing an integrated suite of cloud based hosted and internal applications. The techniques provide for a single access point and launch site including single sign on for software applications and components assembled from a diverse roster of cloud based hosted and internal applications. The techniques also provide for standardized integration across multi vendor service offerings that provides users with improved productivity and enhanced servicing capabilities. The techniques also provide for flexible customization of a unique service offering where a user s access is easily managed and quickly changed according to a self service model.

The invention in one aspect features a computerized method for providing an integrated suite of cloud based hosted and internal applications. The method includes receiving at a server from a client device a request to access a portal comprising a plurality of cloud based hosted and internal applications the request to access including credentials associated with a user of the client device. The method also includes determining at the server and based on the credentials an identity of the user and one or more applications of the plurality of applications available for access by the user. The method also includes establishing by the server with one or more computing devices hosting the one or more available applications a link for providing functionality of the available applications. The establishing step includes authenticating the user automatically for each of the available applications and translating communications between the server and each of the available applications based on a mapping configuration stored at the server. The method also includes integrating by the server the established links into a user interface that provide access to each of the available applications and providing by the server to the client device the integrated user interface.

The invention in another aspect features a system for providing an integrated suite of cloud based hosted and internal applications. The system includes a server configured to receive from a client device a request to access a portal comprising a plurality of cloud based hosted and internal applications the request to access including credentials associated with a user of the client device. The server is also configured to determine based on the credentials an identity of the user and one or more applications of the plurality of applications available to be accessed by the user. The server is also configured to establish with one or more computing devices hosting the one or more available applications a link for providing functionality of the available applications. The establishing step includes authenticating the user automatically for each of the available applications and translating communications between the server and each of the available applications based on a mapping configuration stored at the server. The server is also configured to integrate the established links into a user interface that provides access to each of the available applications and provide to the client device the integrated user interface.

The invention in another aspect features a computer program product tangibly embodied in a non transitory computer readable storage medium for providing an integrated suite of cloud based hosted and internal applications. The computer program product includes instructions operable to cause a data processing apparatus to receive from a client device a request to access a portal comprising a plurality of cloud based hosted and internal applications the request to access including credentials associated with a user of the client device. The computer program product also includes instructions operable to cause a data processing apparatus to determine based on the credentials an identity of the user and one or more applications of the plurality of applications available to be accessed by the user. The computer program product also includes instructions operable to cause a data processing apparatus to establish with one or more computing devices hosting the one or more available applications a link for providing functionality of the available applications. The establishing step includes authenticating the user automatically for each of the available applications and translating communications between the server and each of the available applications based on a mapping configuration stored at the server. The computer program product also includes instructions operable to cause a data processing apparatus to integrate the established links into a user interface that provides access to each of the available applications and provide to the client device the integrated user interface.

In some embodiments any of the above aspects can include one or more of the following features. In some embodiments the server stores the integrated user interface and associated established links into a profile associated with the user. In some embodiments the server receives from the client device a request for access to an additional application not currently available to the user updates the one or more applications available to be accessed by the user to include the additional application and establishes with the computing device hosting the additional application a link for providing functionality of the additional application.

In some embodiments the server receives from a first one of the available applications a request to perform an action using the functionality of a second one of the available applications and translates the request to perform an action into a format compatible with the second one of the available applications. In some embodiments the determining step includes determining at the server and based on the credentials one or more functions of the available applications that are accessible by the user. In some embodiments the server receives from the client device a search request including a keyword transmits the search request to a plurality of the available applications and receives from the plurality of the available applications a response to the search request including information associated with the keyword.

In some embodiments the server tracks communications between the server and the one or more available applications and stores the tracked communications. In some embodiments the links between the server and the one or more computing devices hosting the one or more available applications are established using an application programming interface API associated with the respective available applications. In some embodiments the functionality available in each API is based on the user identity.

In some embodiments the plurality of cloud based hosted and internal applications are offered by different third party providers. In some embodiments the integrated user interface includes a dashboard of the established links and the server receives from the client device a request to access one of the available applications represented by an established link and provides a separate user interface for the requested application. In some embodiments the separate user interface is customized based on the user identity. In some embodiments the plurality of cloud based hosted and internal applications includes productivity applications business management applications customer relationship management applications database applications accounting applications document storage applications portfolio management applications financial planning applications asset allocation applications social network applications or any combination thereof.

Other aspects and advantages of the invention will become apparent from the following detailed description taken in conjunction with the accompanying drawings illustrating the principles of the invention by way of example only.

The client device is the hardware that a registered investment advisor for example uses to connect to and interact with the centralized portal . Example computing devices take on many forms including but not limited to a personal computer a personal digital assistant PDA an internet appliance a smart phone a thin client a tablet computer or the like. The client computing device includes network interface components to enable the user to connect to communications network such as the Internet.

The communications network channels communications from the client device to the centralized portal on the server computing device and back. The network may be a local network such as a LAN or a wide area network such as the Internet. In some embodiments the same network can be used to connect the centralized portal to the plurality of cloud based applications and the hosted application s .

The virtual desktop is a module that connects the client device to the server computing device that hosts the centralized portal . The virtual desktop provides a server based operating system and application program interface to the client device in cases where the client device may not have the requisite capability to execute a local version of the desktop e.g. a thin client . The virtual desktop offers the look feel and functionality of a locally executing client such as access to applications and networking services but the application and networking execution is conducted by a remote server e.g. server . An example of virtual desktop software is XenDesktop from Citrix Systems Inc. of Fort Lauderdale Fla.

The centralized portal is a software service made available from a server computing device . The centralized portal receives connection requests from the client device via network . In some embodiments the client device can open a connection to the centralized portal on the server by opening a web browser and entering the address e.g. URL of the server on which the centralized portal is located. The centralized portal also connects to the plurality of cloud based applications hosted application s and internal application s to provide those applications to the client device . The centralized portal will be described in greater detail with reference to .

Returning to the system also includes a plurality of cloud based applications . The cloud based applications can each be managed by separate service providers which communicate with the centralized portal via a communications network e.g. the Internet . In some embodiments two or more of the cloud based applications can be managed by the same service provider. The server computing device that hosts the centralized portal can provide one or more internal applications e.g. internal application s that are also resident on the server computing device . In some embodiments the server computing device can be connected to other internal applications that are provided by the same service provider that owns the centralized portal . Each of the internal applications can be made available to the client device in the same manner that a cloud based application is made available.

The cloud based applications are made available by their respective service providers and the centralized portal enables the client device to gain access to the functionality of the cloud based applications without having to connect to each cloud based application individually and manage each cloud based application separately. While depicts four cloud based applications it should be appreciated that the system can include any number of cloud based applications.

The cloud based applications can comprise a number of different types of applications. The applications can be related to the internal functions of managing a business e.g. payroll timekeeping training expense reports human resources accounting news Wilds recruiting and analytics BI . The applications can be related to the communications and documentation infrastructure of a business e.g. email spreadsheets productivity software collaboration audio video conferencing web hosting design virtual desktop document archival and storage e signature data backup . The applications can be related to providing financial and investment services to clients e.g. financial planning brokerage trading and account inquiry maintenance asset allocation and portfolio management . The applications can be related to benefits related assets attributed to clients e.g. health insurance retirement accounts life insurance . The applications can be related to managing a relationship with clients e.g. customer relationship management CRM social network monitoring market research client satisfaction surveys discounts referrals . The applications can be related to regulatory and governmental duties of the business e.g. compliance SEC guidelines and government databases . Any of the applications can be combined into a single suite customized for a particular user or group of users which is accessible by a client device via the centralized portal .

The hosted application s are application programs virtually hosted by the server computing device from a third party or other source. The server computing device connects to the hosted application source authenticates the user with the hosted application and provides access to the hosted application to the user via the centralized portal . The hosted application has similar characteristics and functionality to the cloud based applications e.g. related to business activities . Generally the hosted application is purchased by the user and installed on a computing device optionally also purchased by the user at a separate location e.g. data center from the user s client computer. The hosted application provides the full functionality as the same software installed locally on the user s client computer. In most cases the user has complete control over the application and can customize the application to suit his or her needs. The server computing device can connect to the computing device that provides the hosted application via a number of common network paradigms e.g. Internet WAN LAN . While depicts one hosted application it should be appreciated that the system can include any number of hosted applications.

The internal application s are application programs that are locally installed and executed on the server computing device . Instead of connecting to remote computing devices as with the cloud based applications and the hosted application the server computing device executes the internal application from local storage e.g. a hard drive using the server s own computing resources e.g. processor memory . While depicts one internal application it should be appreciated that the system can include any number of internal applications.

The authentication SSO module handles requests received from the client device to access the cloud based applications hosted application s and internal application s . The authentication SSO module validates the identity of a user e.g. RIA at the client device to determine whether the user is authorized to obtain access to the applications and . To validate the identity of the user at the client device the authentication SSO module communicates with the identity data store . The identity data store maintains an account for each user that is registered to access the centralized portal serving as a repository for user login credentials and similar types of security information that relate to a user s access to the centralized portal as a whole e.g. encryption keys IP address of the client device previous login attempts .

Because each of the plurality of applications and can maintain a separate login account for the user the identity data store also contains each registered user s login credentials for the plurality of applications and to which the user has been granted access. As a result the user needs only to provide his or her credentials related to the centralized portal when logging in from the client device . When the user accesses one of the applications and the application integration module seamlessly requests the user s individual credentials for that application e.g. from the authentication SSO module and identity data store . The application integration module then automatically logs in to the application with the appropriate user credentials and the user at the client device does not have to enter any additional login information.

The provisioning module determines which applications and a particular user can access and also determines the level of access permissions that should be provided to the user for each application. After the centralized portal has validated the identity of the user at the client device the provisioning module retrieves a list of the applications and available to the user from the entitlement data store and instructs the application integration module to establish a connection to those applications and make them available to the client device via the centralized portal .

The provisioning module also contains data that enables the application integration module to configure the applications and based on the particular user. For example a user may have been purchased access to a basic version of cloud based application while a second user may have purchased access to a deluxe version of the same application which provides additional features not found in the basic version. The provisioning module instructs the application integration module to enable the first user to have the limited set of functionality of the application that is associated with the basic version and the provisioning module instructs the application integration module to enable the second user to have the broader set of functionality of the application that is associated with the deluxe version. In this manner each user of the centralized portal can have a customized unique set of applications and and features within those applications based on a desired service level and or cost.

The provisioning module also tracks usage of the applications and by user and or groups of users e.g. an investment firm . In some embodiments the provisioning module also tracks the specific functionality within each of the applications and that is being used. The tracking data can be stored in the entitlement data store for later analysis. For example if each of the users at a particular investment firm frequently accesses a cloud based email client application the centralized portal can determine that a similar cloud based application a mobile email client application should be offered to the users.

The application integration module receives requests from the client device to access the applications and and the application integration module communicates with the authentication SSO module and the provisioning module to configure the centralized portal for the user. Once the user has been authenticated to the centralized portal and the list of available applications e.g. and has been determined the application integration module establishes a connection to each of the available applications and and provides the requisite login credentials for that user to each of the applications and

The application integration module also handles the translation of data and commands between the centralized portal and each of the individual applications and . Because the applications and may be offered by many different service providers the applications and may use different types of communications interfaces and protocols to provide access to the centralized portal . Also in some cases the applications and reside on legacy systems that are not capable of communicating with the centralized portal using current protocols or techniques. Therefore the application integration module is capable of adapting to establish communications channels with each of the applications and regardless of the application s particular communication requirements.

The application integration module identifies the application to which the module is communicating and retrieves a mapping configuration stored at the server . The mapping configuration can be stored in a database not shown coupled via hardware connection to the server or in a database coupled via networking connection to the server . In some embodiments the mapping configuration includes the structure of data elements in the applications and . In some embodiments the mapping configuration includes the protocol used by the applications and . In some embodiments the mapping configuration includes the application programming interface API commands used by the applications and .

In some embodiments to communicate with the applications and the application integration module can use a standard protocol e.g. XML JSON that is common to both the centralized portal and the application s . In some embodiments the application s and can provide a proprietary API which the application integration module uses to translate or format the data being transmitted between the centralized portal and the application s . In some embodiments the application integration module is pre programmed with customized software processes that enable communication with a specific application. In some embodiments the application integration module is coupled to additional hardware devices e.g. telco modem that provide a way to communicate with a particular application.

The application integration module also operates to control the integration of data between the various applications and used via the portal . For example if a registered investment advisor using the system has just signed on a new client the advisor can access a CRM application e.g. cloud based application and generate a new client record including data such as the client s name address and other demographic information. Once the information is entered in the CRM application the application integration module can determine that another of the available applications e.g. cloud based brokerage application should receive part of all of the client s information in order to configure a brokerage account for the client. The application integration module transmits the necessary information to the brokerage application without requiring the advisor to manually re enter the client s information in the second application

However in some cases the brokerage application utilizes data structures that are different from the CRM application . The application integration module maps the CRM information to a data structure associated with the brokerage application . Mapping techniques might include for example XML flat file Electronic Data Exchange EDI use of proprietary APIs or other similar technologies. As an example the CRM application might use a String data structure to store the customer telephone number while the brokerage application might use three separate Number data structures to store the telephone number e.g. area code first set of three digits and second set of four digits . The application integration module can for example parse the String data structure of the CRM application extract the three separate parts of the telephone number and create three separate Number data structures according to the requirements of the brokerage application . Also in some embodiments the application integration module also maintains a database to assist with the mapping process by storing instructions used to map the data from one application to another e.g. relationships between applications and or between data fields of applications . In this manner the application integration module can execute complex data workflows that exchanges necessary data between any of the applications and to which the advisor has access ensuring the synchronization of the data without requiring manual intervention by the advisor.

This type of data integration technique is also applicable when an advisor updates or otherwise changes data in one application. For example the advisor updates the client s mailing address in the CRM application . The application integration module receives the changed address data and determines that the corresponding information stored in the brokerage application should also be updated. The application integration module uses the mapping technique to transmit the changed address to the brokerage application

In addition the application integration module can also control the timing of information updates across the applications and . For example the application integration module can assign an urgency type to particular data fields in particular applications. Urgency types as an example can be assigned to data based on whether the data is prone to change during the day e.g. stock price quotes referred to as a real time urgency type whether it needs to be changed in other systems to ensure data uniformity and avoid confusion when the applicable third party needs it e.g. customer mailing address referred to as a on demand urgency type or whether it can remain unchanged until a convenient time to change e.g. previous day s market closing value need not be change until the following day referred to as a batch urgency type.

The application integration module generates a request based on the urgency type of the changed data and the identity of the application that is to receive the data. For example for a real time urgency type the application integration module can generate an immediate request to push the data. For a batch urgency type the application integration module can generate a request to be included in a batch run that will submit all of the batched data at a convenient time such as in the middle of the night at a low traffic time. For an on demand urgency type the application integration module can generate a request to be included when the receiving application requests the data that has been updated. The request includes the changed data which has been mapped to a data structure associated with the receiving application.

The application integration module sends the request to the receiving application across a communications network according to the urgency type. For example for a real time urgency type the application integration module generates an immediate request to push the data. For a batch urgency type the application integration module generates a request to be included in a batch run that will submit all of the batched data at a predetermined time. For an on demand urgency type the application integration module generates a request to be included when the receiving application requests the data that has been updated. As can be appreciated the term request in this context is used broadly to represent any format of the delivery of the updated data according to its urgency type.

In some embodiments the user interface is displayed on the client device via web browsing software. For example the user at the client device opens a web browser and navigates to the address of the server hosting the centralized portal . The centralized portal displays a login screen to the user which includes prompts for the user to enter his or her credentials e.g. username password to access the portal . Upon submission and successful verification of the credentials the centralized portal aggregates links to each of the available applications and and integrates the links into the user interface providing a single site that provides the user with immediate access to all of his or her applications.

A user accesses the individual applications e.g. CRM application in by clicking on the link or icon attributed to the application. In some embodiments the centralized portal can open a new window e.g. browser tab that contains a direct link to the server on which the application is located. In some embodiments the centralized portal retrieves data and functionality from the application that was selected and presents the retrieved information in a proprietary interface associated with the portal . An advantage of the latter approach is that the user interfaces for each of the applications can be designed with a similar look and feel enabling the user to have a higher comfort level and familiarity in interacting with the various applications leading to increased productivity and a lesser need for individualized training for each application.

The user interface also includes an area that provides access to additional applications that the user may not currently be allowed to use. For example the user may want to use a reporting application due to a new job responsibility or assigned project. The user can click the area to view a list of additional applications that can be provided. In some embodiments upon clicking the area the centralized portal presents the list of additional applications and the user can simply select which application s he or she wants. Upon returning to the main portal screen the user can see links to the selected applications automatically added to the screen. In some embodiments upon clicking the area the centralized portal transfers the user to an internal or external application store where the user can opt to purchase additional applications or functionality for existing applications . Upon completing a purchase and returning to the main portal screen the user can see links to the applications he or she purchased. In this manner the centralized portal provides a robust self service feature where a user can quickly customize the suite of applications and functionality that are available without requiring manual configuration or intervention by the service providers.

The above described techniques can be implemented in digital and or analog electronic circuitry or in computer hardware firmware software or in combinations of them. The implementation can be as a computer program product i.e. a computer program tangibly embodied in a machine readable storage device for execution by or to control the operation of a data processing apparatus e.g. a programmable processor a computer and or multiple computers. A computer program can be written in any form of computer or programming language including source code compiled code interpreted code and or machine code and the computer program can be deployed in any form including as a stand alone program or as a subroutine element or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one or more sites.

Method steps can be performed by one or more processors executing a computer program to perform functions of the invention by operating on input data and or generating output data. Method steps can also be performed by and an apparatus can be implemented as special purpose logic circuitry e.g. a FPGA field programmable gate array a FPAA field programmable analog array a CPLD complex programmable logic device a PSoC Programmable System on Chip ASIP application specific instruction set processor or an ASIC application specific integrated circuit or the like. Subroutines can refer to portions of the stored computer program and or the processor and or the special circuitry that implement one or more functions.

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital or analog computer. Generally a processor receives instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and or data. Memory devices such as a cache can be used to temporarily store data. Memory devices can also be used for long term data storage. Generally a computer also includes or is operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. A computer can also be operatively coupled to a communications network in order to receive instructions and or data from the network and or to transfer instructions and or data to the network. Computer readable storage mediums suitable for embodying computer program instructions and data include all forms of volatile and non volatile memory including by way of example semiconductor memory devices e.g. DRAM SRAM EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and optical disks e.g. CD DVD HD DVD and Blu ray disks. The processor and the memory can be supplemented by and or incorporated in special purpose logic circuitry.

To provide for interaction with a user the above described techniques can be implemented on a computer in communication with a display device e.g. a CRT cathode ray tube plasma or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse a trackball a touchpad or a motion sensor by which the user can provide input to the computer e.g. interact with a user interface element . Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech and or tactile input.

The above described techniques can be implemented in a distributed computing system that includes a back end component. The back end component can for example be a data server a middleware component and or an application server. The above described techniques can be implemented in a distributed computing system that includes a front end component. The front end component can for example be a client computer having a graphical user interface a Web browser through which a user can interact with an example implementation and or other graphical user interfaces for a transmitting device. The above described techniques can be implemented in a distributed computing system that includes any combination of such back end middleware or front end components.

The components of the computing system can be interconnected by transmission medium which can include any form or medium of digital or analog data communication e.g. a communication network . Transmission medium can include one or more packet based networks and or one or more circuit based networks in any configuration. Packet based networks can include for example the Internet a carrier Internet protocol IP network e.g. local area network LAN wide area network WAN campus area network CAN metropolitan area network MAN home area network HAN a private IP network an IP private branch exchange IPBX a wireless network e.g. radio access network RAN Bluetooth Wi Fi WiMAX general packet radio service GPRS network HiperLAN and or other packet based networks. Circuit based networks can include for example the public switched telephone network PSTN a legacy private branch exchange PBX a wireless network e.g. RAN code division multiple access CDMA network time division multiple access TDMA network global system for mobile communications GSM network and or other circuit based networks.

Information transfer over transmission medium can be based on one or more communication protocols. Communication protocols can include for example Ethernet protocol Internet Protocol IP Voice over IP VOIP a Peer to Peer P2P protocol Hypertext Transfer Protocol HTTP Session Initiation Protocol SIP H.323 Media Gateway Control Protocol MGCP Signaling System 7 SS7 a Global System for Mobile Communications GSM protocol a Push to Talk PTT protocol a PTT over Cellular POC protocol and or other communication protocols.

Devices of the computing system can include for example a computer a computer with a browser device a telephone an IP phone a mobile device e.g. cellular phone personal digital assistant PDA device laptop computer tablet electronic mail device and or other communication devices. The browser device includes for example a computer e.g. desktop computer laptop computer with a World Wide Web browser e.g. Microsoft Internet Explorer available from Microsoft Corporation Mozilla Firefox available from Mozilla Corporation . Mobile computing device include for example a Blackberry an Android based device or an iPhone . IP phones include for example a Cisco Unified IP Phone 7985G available from Cisco Systems Inc and or a Cisco Unified Wireless Phone 7920 available from Cisco Systems Inc.

Comprise include and or plural forms of each are open ended and include the listed parts and can include additional parts that are not listed. And or is open ended and includes one or more of the listed parts and combinations of the listed parts.

One skilled in the art will realize the invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. The foregoing embodiments are therefore to be considered in all respects illustrative rather than limiting of the invention described herein.

