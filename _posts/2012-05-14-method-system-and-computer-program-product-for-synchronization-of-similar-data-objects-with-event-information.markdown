---

title: Method, system, and computer program product for synchronization of similar data objects with event information
abstract: A computer-implemented method for updating an object on a mobile device is provided. The computer-implemented method includes maintaining at a server a plurality of channels, the plurality of channels including at least a first representation of the object, generating a modification event when a change to the object is detected, responsive to the modification event, at least updating the representation of the object yielding a second representation of the object, and conveying, during a synchronization process, the second representation of the object to the mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08843577&OS=08843577&RS=08843577
owner: Ianywhere Solutions, Inc.
number: 08843577
owner_city: Dublin
owner_country: US
publication_date: 20120514
---
This application is a continuation of U.S. Non provisional application Ser. No. 12 646 790 Method System and Computer Program Product for Synchronization of Similar Data Objects with Event Information filed Dec. 23 2009 now allowed which is a continuation of U.S. Non Provisional application Ser. No. 09 950 005 Method System and Computer Program Product For Synchronization Of Similar Data Objects With Event Information filed Sep. 12 2001 now allowed which claims the benefit of U.S. Provisional Application No. 60 231 557 Asynchronous Synchronization of Similar Data Objects by Exchanging Event Information filed Sep. 11 2000 all of which are incorporated by reference herein in their entireties.

This patent application is related to the following U.S. utility patent applications which are herein incorporated by reference in their entireties 

 System Method and Computer Program Product for Enabling On Device Servers Offline Forms and Dynamic Ad Tracking On Mobile Devices Ser. No. 09 559 964 filed on Apr. 28 2000.

 System Method and Computer Program Product for Synchronizing Content Between a Server and a Client Based on State Information As Amended Ser. No. 09 560 965 filed on Apr. 28 2000.

 System Method and Computer Program Product for Administering Channels Content and Data for Mobile Devices Ser. No. 09 559 965 filed on Apr. 28 2000.

 System Method and Computer Program Product for Customizing Channels Content and Data for Mobile Devices Ser. No. 09 560 957 filed on Apr. 28 2000.

 System Method and Computer Program Product for Web Content Aggregation and Development and Web Content Delivery to Clients Ser. No. 09 560 956 filed on Apr. 28 2000.

 System Method and Computer Program Product for Placement of Channels on a Mobile Device Ser. No. 09 864 292 filed on May 25 2001.

 System Method and Computer Program Product for a Scalable Configurable Client Server Cross Platform Browser for Mobile Devices Ser. No. 09 705 927 filed on Nov. 6 2000.

 System Method and Computer Program Product for Executing Scripts on Mobile Devices Ser. No. 09 754 256 filed on Jan. 5 2001.

 System Method and Computer Program Product for Server Side Processing in a Mobile Device Environment Ser. No. 09 705 914 filed on Nov. 6 2000.

 System Method and Computer Program Product for Customizing Channels Content and Data for Mobile Devices Ser. No. 09 892 482 filed on Jun. 28 2001.

 System Method and Computer Program Product for Syncing to Mobile Devices Ser. No. 09 897 607 filed on Jul. 3 2001.

The present invention relates generally to mobile communications and more particularly relates to technology for synchronizing data with mobile devices.

Over the past few years there has been a large growth in the number of hand held computers personal digital assistants PDA and other mobile devices. In addition there has been a marked increase in the number of ways for mobile devices to connect to the global Internet and the World Wide Web WWW corporate internets intranets and other networks. This collective expansion allows users of mobile devices to access various types of information disseminate information and be exposed to electronic commerce e commerce activities all with a greater degree of freedom. E commerce includes entities such as large corporations small businesses individual entrepreneurs organizations and the like who offer their information products and or services to people all over the world via these networks.

The rise in use of mobile devices however also presents users particularly users of more than one device computer or part of a company or group which uses such devices with the problem of keeping their information contemporary and continuous. Various synchronization techniques have been developed to convey information from a computer or server to a mobile device and from the mobile device to the computer or server. However these techniques do not provide the dynamic mobility required by users of one or more mobile devices connected to one or more networks.

Increasingly the users of mobile devices have more than one mobile device such as a cellular telephone and a personal digital assistant PDA the sharing of information among which benefits the user. In addition corporations can have employees with more than one mobile device each all of which require consistent information in order for the corporation to operate effectively.

Therefore in view of the above what is needed is a system method and computer program product for the synchronization of similar data objects to one or more devices by exchanging event information. Similar data objects can include information requested or required by users of mobile devices. Event information can be constructed and exchanged by the system of the present invention. Further what is needed is a system method and computer program product that delivers event information to mobile devices based on information provided by one or more users.

A computer implemented method for updating an object on a mobile device is provided. The computer implemented method includes maintaining at a server a plurality of channels the plurality of channels including at least a first representation of the object generating a modification event when a change to the object is detected responsive to the modification event at least updating the representation of the object yielding a second representation of the object and conveying during a synchronization process the second representation of the object to the mobile device.

These and additional features and advantages of the present invention will become more apparent from the detailed description set forth below when taken in conjunction with the drawings in which like reference characters generally identify corresponding elements throughout.

The method system and computer program product of an embodiment of the present invention constructs different representations of an object as it is needed on the various components e.g. mobile devices computers and servers as modifications are made to each representation of that and or similar objects on the different components accessible by the system.

For clarity only and not to limit the scope of the present invention the term representation is used to indicate any of a number of specified formats that an object can take based on the mobile device or other component upon which the object must both reside and be locally accessible. For example a representation of a data object of a Microsoft Word document on a personal computer PC is a Word file most likely with a .doc file extension . However a representation of a data object of a Microsoft Word document on a PDA such as a PocketPC or a Palm device would be of a different file format. The object itself would contain the same information and thus is a similar data object as described throughout this specification but the representation would be different. Representations can be format or standard specific and as well as in some embodiments device or platform specific and as described herein construction of representations is a feature of the present invention.

Additionally for clarity only and not to limit the scope of the present invention the term instance is used to indicate the existence of a representation of an object on a device or system resource such as a server computer or back end data store. For example a server of the present invention can construct and maintain more than one representation of an object from an instance of an object.

In one embodiment of the present invention the system maintains information about the different representations of an object synchronized to one or more user devices as changes are made to each representation either by the user or on the user s behalf. The system achieves this by keeping track of modifications to the representation of an object and communicating those changes in the form of events to all other instances of that object that are accessible by the system. In another embodiment of the present invention the system constructs and stores modified instances of an object for later construction of different representations of the object.

Communicating the changes to all other instances is enabled by a dynamic mobile response to the available network. The changes flow from client or back end to all other clients and all other parts of the system via desktop synchronization wireless synchronization browsing or surfing via http or via a push infrastructure. The disparate parts of the system including multiple mobile device platforms are unified by the dynamic response to the systems knowledge of the operating system so all aspects of the system server to device device to server device to server to device and device to device are enabled. All platforms of all devices can communicate additions modifications and updates to all platforms of all devices.

According to the embodiments of the present invention World Wide Web Consortium W3C recommended standards which include but are not limited to standards for hyper text transfer protocol HTTP hyper text mark up language HTML extensible mark up language XML and secure socket layer SSL can be used to in maintaining representations of similar objects across the various devices device platforms and networks.

According to one embodiment of the present invention events can be generated to deliver new or changed representations of objects to one or more components connected to the system. In one embodiment the event originates at the point where the change is first detected. For example the event is generated by the system of the present invention when a change is detected on a user s handheld device or at a back end server. As described in detail herein the event is transmitted to one or more components of the system of the present invention such as a controller on a server or another of a user s devices. The devices receiving the events each contain representations of the object to be modified by the event or have settings to receive representations of the object. The modification or addition of the representation of the object can be performed by the structural features of the present invention as described in detail below with regard to . According to embodiments of the present invention the events can be transmitted over various media such as over a wireless network through a serial cable connected to a device cradle on a personal computer PC or via the Internet. When the modification event is received by the different parts of the system that contain representations of the modified object that event is processed to update the representation of the object so that the information contained therein is updated.

As described herein the objects can be represented in multiple instances on different components of the present invention. For example an object that contains a name and phone number can be stored in a back end database in a cache on a server and or on a handheld device. When that object is modified the changes can be reflected in all representations of the object. Therefore if the phone number changes that change can be communicated to the back end database the cache and or the handheld device and reflected in all objects on the system that store the phone number alternatively in some embodiments the change is reflected in a subset of the objects .

Generally the server maintains a collection of channels. In an embodiment a channel comprises a collection of objects. An object is any entity that can be transferred to a client such as but not limited to content applications services images movies music links etc.

A channel includes a number of properties. At least some of these properties define the objects that the channel includes. Such properties include but are not limited to the following 1 The name of the channel 2 the location of a root object such as but not limited to a URL . In an embodiment this root object is included in the channel 3 the indication of the number of levels below the root object for which to include objects in the channel. For example in an embodiment if this property is equal to 1 level then all objects that are 1 level down from the root object reached by traversing links in the root object are included in the channel. If this property is equal to 2 levels then all objects that are 1 level down from the root object reached by traversing links in the root object and all objects that are 1 level down from those objects reached by traversing links in those objects are included in the channel. Embodiments of the invention allow uneven trees where some branches of the tree extent to a greater number of levels than other branches of the tree. In other embodiments the trees are even or balanced 4 the maximum size of the channel. For example if this is set to 500 Kbytes then the aggregate size of the objects in the channel cannot be greater than 500 Kbytes. If the aggregate size of the objects in the channel is greater than this value then embodiments of the invention may delete objects from the channel and or delete portions of objects in the channel 5 an indication of which resource objects are enabled for the channel 6 an indication of whether or not images are to be included in or excluded from objects in the channel 7 an indication of whether or not scripts are enabled in objects in the channel and 8 a refresh methodology.

It is noted that the properties associated with channels may vary from implementation to implementation. Also implementations may employ combinations of the above properties and or properties in addition to the following as will be appreciated by persons skilled in the relevant art s . For example contact information calendar information memos notes and other information transportable via the media described herein could form the contents or be used in place of the channels described herein.

The invention includes processes for managing channels including but not limited to adding channels to the collection of channels maintained by the server .

The server offers channels to clients . A client may access the server and view the collection of channels. The client may then select any combination of the channels in the collection. The server maintains a list of the channels associated with each of the clients .

During a synchronization process the server loads a device with the channels associated with the client . Generally the server does this by obtaining from providers the objects defined by the channels and causing those objects to be stored on the client . Thus during the synchronization process the server will load the client with the selected channels. More particularly the server will load the client with the objects associated with the channels.

The client may process and use those objects when not connected to the server . The invention enables the client to actively interact with the objects and channels.

In one embodiment the client A directly interacts with the server via some transmission medium B which may be any wired or wireless medium using any communication protocol.

In another embodiment the client B indirectly interacts with the server via an adapter . For example the client B may be a mobile device such as a Palm device and the adapter may be a cradle and a computer coupled to the cradle the mobile device is inserted into the cradle . In this instance the adapter presents itself to the server as a client B via client communications module C . When the server sends objects to the adapter the adapter interface module writes those objects to client B. In embodiments adapter interface module can be a Hot Sync Manager an Active Sync etc. It is noted that the invention is not limited to any of the implementation examples discussed herein.

The server includes an administration module a database module a user interface a web synchronization module a server extension module a fleet management module a notification module and a server communication module . Other embodiments of server may include a subset of these modules and or may include additional modules.

The administration module controls and manages the states of the server and the clients . For example the administration module manages and controls groups of clients permissions assigned to clients groups and channels. For example the administration module administers the users clients assigned to groups and the channels associated with users. These and additional functions performed by the administration module are described herein.

The database module controls access to databases associated with the server . The database module maintains information relevant to the clients as well as information relevant to the modules contained in the server . The database module manages information on the collection of channels maintained by server . These and additional functions performed by the database module are described herein.

The user interface is in an embodiment a graphical user interface GUI that enables users and clients to access functions and modules offered by the server . More generally the user interface within server provides access to server and the modules and resources contained therein.

The invention supports various server web sites that are available through any communication medium such as but not limited to the Internet intranets direct dial up links etc. The UI enables such web sites.

The web synchronization module is an application instance of server extension module and controls synchronization of web content to client . The invention may include other synchronization modules which are application instances of server extension module that control synchronization of other types of objects to clients . For example the server may administer a calendar that may be installed on clients . The synchronization of appointments events and or dates on this calendar between clients and the server may be performed by a calendar synchronization module. These and additional functions performed by the server extension module are described herein.

The fleet management module performs functions associated with fleets of clients which are groups of clients . For example fleet management module may perform global or mass operations on groups fleets of clients such as loading or updating an application on groups fleets of clients . Another example of a mass operation is retrieval of information on clients in a fleet such as the free memory in clients in a fleet this would help an organization determine if its clients need a memory upgrade . These and additional functions performed by the fleet management module are described herein.

The server extension interface module enables modules such as third party modules to operate in or work with the server and modules contained in the server . The server extension module presents an API application programming interface . Modules in the server may operate with other devices in the server by conforming to the server API.

For example the web synchronization module and the fleet management module as well as other types of synchronization modules not shown in may interact with databases on the server via the database module by going through the server extension module . The web synchronization module and the fleet management module may not be able to interact directly with the database module for a number of reasons. For example they may support different data formats or simply speak different languages. However they can interact via the server extension module as well as other server modules as long as they conform to the API of the server extension module . This is true of any modules in the server or that interact with the server .

Server communication module enables communication between the server and entities external to the server such as clients adapters providers work stations etc. The server communicates with these entities via communication mediums which may be any type of wireless or wired communication using any protocol. It is noted that multiple server communication modules may execute in a single server . For example in one embodiment server communication module is a TCP IP stack. In another embodiment server communication module is a secure socket layer stack or a compression stack. The invention is not limited to any implementation examples discussed herein. These and additional functions performed by the server communication module are described herein.

The notification module sends objects to clients beyond objects related to channels associated with clients . Such objects could be requested by client in advance. For example a client could ask for a notification when an event happens such as when a stock reaches a target price. When the event occurs the notification module would cause an appropriate notification s object s to be sent to the client . Alternatively the notification module may send objects to clients without any prior explicit request from the client . For example the notification module might send channels to clients when such channels are identified to be similar to those already selected by the clients . Also the notification module might send appropriate notifications objects to the clients when such clients receive email or faxes at the server . In embodiments the notification module transmits such objects to the client immediately when the event occurs during the next synchronization with the client or at some other future synchronization.

An alternative representation of server is shown in . illustrates for example that messages from entities outside of server are received by server extension interface module via server communications modules . Generally such messages represent requests for the server to perform various functions. The server extension module conceptually operates as a dispatcher who routes such messages to other modules contained in the server such as web synchronization module who handles requests to synchronize with web content notification module fleet management module who handles fleet related requests and or third party modules such as other synchronization modules . Thus the invention supports modules generated by third parties to perform various functions. The modules can be placed into communication with the server via the server extension module .

Referring again to the devices may be any type of data processing device. In embodiments of the invention the devices are mobile computing devices although the invention is not limited to these embodiments. In such example embodiments the devices may include but are not limited to handheld computers cellular phones internet enabled phones pagers radios tvs audio devices car audio systems recorders text to speech devices bar code scanners net appliances mini browsers personal data assistants PDAs etc.

In embodiments of the invention the devices include software hardware and or combinations thereof related to client functionality such client functionality is described herein . When a device includes such software hardware and or combinations thereof the device is referred to herein as a client . Accordingly it can be said that the data processing environment includes one or more clients .

Clients each may include a layout and rendering module a forms module a control module a user interface a client extension interface a client interface module a client communications module a JavaScript engine and a database module . Other embodiments of clients may include a subset of these modules and or may include additional modules.

Layout and rendering module can control the processing of data objects on client such as the layout and rendering of data objects on client . For example the layout portion of module obtains information from databases of the client via the database manager and determines where such information should be rendered on the display of the client . Such information may include anything that can be rendered such as but not limited to images text links etc. The rendering portion of module is responsible for drawing items on the display drawing bits to the screen . These and additional functions performed by the layout and rendering module are described herein.

The forms module controls and manages forms. For example in embodiments the forms module manages aspects of off line forms such as HTML forms and or multi page forms. The forms module enables access to and user interaction with forms in some embodiments the forms module via UI enables users of client to directly access forms . The forms module maintains the status of forms. Forms module can also include a forms manager not shown to provide added functionality. These and additional functions performed by the forms module are described herein.

The user interface is preferably a graphical user interface that enables users to interact with client and functions and modules provided by the client . More generally UI controls how functions presented by modules of the client are presented to users. The UI controls how users interact with such functions and modules. It is noted that the functionality of the UI may be distributed. For example portions of the UI may reside in the forms module as well as other modules of client . These and additional functions performed by the user interface are described herein.

The client extension interface enables modules such as third party modules to operate in or work with the client and modules contained in the client . The client extension interface also known as an on device server presents an API application programming interface that is in embodiments common to clients on many architectures.

Modules in the client can work together via the client extension interface . For example the JavaScript engine may decide that it wishes to display a message to the user. To do this the JavaScript engine would work through the client extension interface to cause the UI to display the message to the user. The JavaScript engine may not know how to directly interact with the UI . However as long as both the JavaScript engine and the UI conform to the API of the client extension interface then they can operate together.

Similarly the control module may decide that it needs to store some data in a database. The control module would do this by working with the client extension interface to access the database module to effect such a modification to the databases in the client . These and additional functions performed by the client extension interface are described herein.

The JavaScript engine executes objects written in the JavaScript language that operate on client . As noted the JavaScript engine conforms to the API of the client extension interface and works with the client extension interface to work with other modules in client . These and additional functions performed by the JavaScript engine are described herein.

Although not shown in embodiments of the invention include other engines for executing other types of scripts on client . These other engines can interact with other modules on client as long as the engines conform to the API of the client extension interface .

The database module controls access to databases associated with client . More generally the database manager controls access to resources on the client . For example the control module may interact with the database manager to open an address book in the databases and to write a record to the address book. Alternatively the forms module can interact with the database module to access forms that are stored in the databases. These and additional functions performed by the database module are described herein.

Client communications module enables the client to interact with external entities such as server . In embodiments the client communications module enables transmission control protocol internet protocol TCP IP traffic although the invention is not limited to this example. More generally the client communications module enables communication over any type of communication medium such as wireless wired etc. using any communication protocol such as a pager protocol. These and additional functions performed by the client communications module are described herein. The client interface module enables the client to communicate with adapters . Client interface module optionally links to client communications module in some embodiments to provide functionality for example when the client communications module uses a wireless modem s drivers which are accessed via client interface module . In embodiments the client interface module may be Hot Sync Manager in the Palm operating environment or Active Sync in the Windows CE operating environment or Pilot Link in the Unix operating environment. It is noted that these implementation examples are provided for illustrative purposes only. The invention is not limited to these examples. These and additional functions performed by the client interface module are described herein.

The control module coordinates the activities of the other modules in client so that all the modules share resources properly. For instance control module can determine priorities for shared resources such as processing time accessing memory etc.

Providers are sources of various types of objects such as but not limited to content content providers A applications application providers B services service providers C etc. Providers may also include servers similar to server which may provide objects such as but not limited to content applications services etc. For example and without limitation the application providers B may provide objects relating to without limitation operating system updates changes system upgrades application updates changes etc.

Adapters include an adapter interface module a user interface a database module an adapter synchronization module and a client communications module . Other embodiments of adapters may include a subset of these modules and or may include additional modules.

The adapter synchronization module is involved with synchronization operations between server and clients .

The database module controls access to databases associated with adapter . The database module manages information needed for clients to remain in sync with server . In some embodiments the adapter does not include the database module or the UI i.e. in embodiments where the adapter operates essentially as a pipe as in some embodiments on UNIX .

As described above dynamic mobility involves the management of a user s information among the various devices or system components coupled thereto. With respect to the synchronization of objects such as data objects can be done as channel synchronizations. Additionally objects can be requested and delivered while a device is coupled to the components of using the same components but in a real time manner generally by employing surf and or push approaches . These two modes of communication it could also be viewed as three modes of communication sync surf and push form part of the dynamic mobility of the present invention. When combined with the event modification and processing features as described herein the present invention provides the aforementioned dynamic mobility.

By way of introduction the combination of these modes of communication is described briefly here and in detail with regard to the embodiments below. First the periodic delivery of objects also known as synchronization either as channels or individually as one skilled in the art would be able to deliver based on the teachings herein is described above with regard to . Synchronization accomplishes the goal of providing new and updated information to devices when they are coupled to the components of the present invention via any medium including wired and wireless mediums . For example when a user places a PDA into a cradle and activates a synchronization process between the device and the server of the present invention. This form of modification and delivery is advantageous in circumstances where the amount of data is large and thus the amount of time required to deliver the objects is long enough that the generally faster delivery methods of synchronization becomes favorable.

Second the delivery on request mode of communication also known as surf can be described as a limited and presently coupled or on line version of synchronization. Surfing entails the delivery of one or more objects based on an explicit request for those one or more objects by a device or component of the system or the user. In embodiments surf differs from synchronization in that synchronization is performed once a request for all pending updates or a collected or accumulated set of pending updates is received from a device or component. Surf can be used when the user or system component only requires a specific object or objects and thus makes a request for only those objects.

Third the immediate delivery of events can be called the push mode of communication where the modification of an object results in the construction of events that are delivered to devices and components of the system as such events are created. The push mode of communication is described in greater detail below along with a more detailed discussion of the embodiments involving interrelation or selection of one or more of the modes by a device or group of devices.

Sync and surf are described also in the applications referenced above such as but not limited to System Method and Computer Program Product for Synchronizing Content Between a Server and a Client Based on State Information As Amended Ser. No. 09 560 965 and System Method and Computer Program Product for Syncing to Mobile Devices Ser. No. 09 897 607. Push is also described in the applications above such as but not limited to System Method and Computer Program Product for Placement of Channels on a Mobile Device Ser. No. 09 864 292 and Interactive Advertisement Mechanism on a Mobile Device Ser. No. 09 864 293.

According to the embodiments of the present invention described herein the features of dynamic mobility include but are not limited to 

1 Seamless transition between the modes of communication such that devices can receive events using the modes either available to it or preferred by it or the user s or administrator of the system 

2 Availability of event delivery to one or more component devices regardless of the platform of the one or more component devices such as PocketPCs Palm devices WindowsCE devices Personal Computers PCs etc. 

3 Independence from communication medium itself such that all of the communication modes and the combination or sub combinations of the modes of the communication can operate over and or through any number of networks or media and

4 Flexibility in the protocol and standards employed to generate construct and forward events including modification events such as but not limited to multipurpose internet mail extensions MIME HTML SSL delivered events TCP IP and universal datagram protocol UDP delivered events HTTP and hyper text transfer protocol with security encryption HTTPS delivered events JavaScript XML C Basic and C .

The invention shall be described by first considering a data processing environment shown in . Data objects A and data objects B can be of any type X. As discussed elsewhere herein X is the specific format in which the data object is represented. The representation of data objects can differ according to entity configuration details while the data is the same or similar.

For example and without limitation the data objects can be spreadsheets documents images audio video email etc. and the underlining data can be weather stock quotes traffic movie schedules TV listings property listings loan rates news etc. and the source of the data objects can be a particular newspaper a particular web site a particular company etc. Additional properties can be included within the representation of the data object.

In the example of data objects A are shown as being processed by Application 1 in Entity 1 and data objects B are shown as being processed by Application 2 in Entity 2 . In an embodiment an entity is any data communication and or data processing device. In practice both Applications 1 and 2 can be contained in the same entity or in different entities as is the case shown in this embodiment. Applications 1 and 2 can be the same especially in the case where Entities 1 and 2 are different similar or different. In other words Applications 1 and 2 can be any applications that are capable of processing accessing or otherwise supporting or interacting with data objects of data object type X.

Here a Change A is made to data objects A . Also a Change B has been made to data objects B . These changes can be been made in any manner. For example and without limitation they can be made by actions that the user took while working with Application 1 or they could have been made via receipt by Application 1 of some object or objects such as receiving information over the Internet .

In an embodiment data objects A and data objects B are representations of the same object. For example and without limitation data objects A and data objects B may be representations of a user s calendar. Entity 1 can be the user s PDA and Entity 2 can be the user s PC. In an embodiment the user would like both representations of his calendar to be the same. Thus the user would like any changes to data objects A to also be made to data objects B and vice versa. This is represented by change A and change B .

The invention is directed to a method involving sets of representations of data objects where changes made to some of the objects are also made to the other objects. According to one embodiment of the invention when a change is made to some of the objects one or more events are generated that cause similar and or related objects to be similarly modified regardless of upon which entity they reside. Such events may be any communication object such as but not limited to interrupts email messages pointers strings JavaScript scripts and or applets etc. In an embodiment the generation and distribution of such events can occur without any user interaction such that continuity of the data is maintained on behalf of a user in a manner transparent to the user i.e. the push mode of communication . The user could alternatively request an update for specific objects surf or request a processing of all pending updates sync . Thus a request can be send from one entity for the delivery of objects to another entity.

This embodiment of the invention is shown in where an Event is generated and communicated to Application 2 relating to Change A made to Data Objects A . Event can instantiate data object in Application 2 or modify the existing representation of data object in Application 2 . In addition Application 2 can be previously networked or newly networked and in either case representations of data objects and others and represent instances of other data objects are updated between Application 1 and Application 2 via this embodiment.

In step one or more events are generated that are representative of this modification. In an embodiment such events are implemented as email messages. Information regarding the modification is stored in the body or as an attachment to the email messages.

In step the events are communicated pushed to other applications and or other entities that process access support or otherwise interact with data objects of Type X. In some embodiments it may be necessary for such applications entities to have previously been registered so as to receive such events. In one embodiment where the events are email messages such messages are emailed to such entities applications. The events can be communicated via any communications medium accessible to the entities applications.

In step the events are processed by the recipients of the events. For example in the case where the events are email messages the application would receive the email. Upon parsing through the email message the application can modify the data objects as indicated by the event.

In a flowchart illustrates another embodiment of the process of where additional detail is provided for illustrative purposes.

In step a representation of data object A on a back end database is modified. In one embodiment the back end database can be one or more of providers of . In another embodiment the back end data store can be database module and or one or more of database modules and or database module .

In step one or more modification events are generated in accordance with the modification to data object A. In one embodiment the modification events are generated in server communication module . In another embodiment the modification events are generated in client communications modules 

In step the modification events are queued for sending. In one embodiment the modification events can be queued in the database modules A B and or . In another embodiment they are queued in a buffer such as a first in first out FIFO by the controller .

In step the modification events are sent to the entity or entities when a network connection to the entity becomes available. In an embodiment this is done using the push mode of communication. In one embodiment the network corresponds to communication media . As described elsewhere herein the communications media include but are not limited to wired and wireless mediums such as telephone lines radio frequency communication optical networks or the like.

In step the modification events are processed by the entity. In one embodiment the communication modules and or one or more of communication modules process the modification events.

In a block diagram illustrating another embodiment of the present invention is shown. Entity including controller is coupled via a communications medium to source application 1 and application 2 . Source sends a modification event to the entity . Then the controller forwards pushes the modification event to application 1 as event and to application 2 as event . Application 1 then applies the modification to data objects A . Similarly application 2 applies the modification to data objects B . An event can be received from an external source. Event is forwarded simultaneously to application 1 and to entity . Controller then forwards the event to application 2 .

In one embodiment source is a news server and change B is updated news. Entity with controller thereby provides applications 1 and 2 with updated news.

In yet another embodiment source is a messaging server providing e mail voice mail and or paging messages.

In these embodiments applications 1 and 2 may be on one or more devices as described herein such as a cellular phone a laptop computer a server a PDA and or a back end data store. In addition applications 1 and 2 can correspond to more than one user.

While the embodiments shown in show two applications one skilled in the relevant art s based on the teachings herein could implement the present invention in more than two applications delivering events to some or all applications.

As shown in the event occurring externally to source and entity is delivered to application 1 and entity . For example regional data changes sales force numbers or other information is delivered to application 2 via entity .

In a flowchart showing the modification and delivery of similar data objects via a communications medium using various modes of communication sync surf and or push according to an embodiment of the present invention is shown.

In step data object A is modified. In one embodiment data object A is modified by the actions of a user such as changing or adding a telephone number to a contact or an appointment to a calendar. In another embodiment data object A is modified by a source of data objects such as a web site delivering stock quotes or pricing information or the like. As described herein data object A can reside on an entity with the ability to communicate with the other components of the present invention.

In step a modification event is created. In one embodiment the detection of a change to a data object such as data object A results in the construction of a modification event containing information about the modification and or addition. In one embodiment the modification event can be created by the server communications modules and or . In another embodiment the modification event can be constructed by a controller as shown in . The logic of such a controller can be instantiated by the components of the server and or devices and . In one embodiment the modules of these components operate to construct the modification event.

In step the modification event is optionally held in an event queue. In one embodiment the modification event is held in a buffer such as a first in first out FIFO by the controller . In another embodiment the modification event is held by the communications modules of . The modification event can be optionally held so that the system of the present invention can determine which of steps representing modes of communication are to be utilized. In one embodiment more than one of the steps are utilized. Alternatively only one of the steps is utilized in other words any combination of steps is possible . In proceeding to steps the modification events are forwarded from the queue or directly from creation construction to the one or more network connections.

In step the modification event is pushed through a network. As described elsewhere herein the push feature of the present invention involves the delivery of modification events regardless of source to one or more destinations i.e. devices or other components based upon determined factors such as availability subscription device type user preferences administrator preferences and the like. Events are pushed according to the embodiments described herein with the components of the present invention receiving representations of the data objects to be modified from the received modification events.

Alternatively or in conjunction in step the modification event is surfed through a network. As described elsewhere herein the surf feature of the present invention involves the delivery of modification events based on data object requests received from a particular device or group of devices or the user. Modification events are surfed to a device based upon that devices request to have the related representations of data objects updated. In other words the modification event is maintained and only sent to a particular entity when so requested by the entity.

It is noted that the invention s surf mode of communication is not limited to modification events generated as just described. According to embodiments an entity can request any object or update and the invention will retrieve and forward that object update to the entity although such action may involve processing of flowchart starting from step .

Alternatively or in conjunction in step the modification event is synchronized along with a larger batch request through a network. As described elsewhere herein the synchronization feature of the present invention involves the delivery of modification events within a larger batch delivery of information to the device and or component when connectivity is established. In one embodiment a device will function independent of any network or in off line mode and connect to the network only periodically. During such connection periods which can be instantiated through an adapter or cradled the device is able to received all outstanding and pending updates and modification events to bring the representations of data objects located on the devices into sync with those of the system of the present invention.

In step the modification event is held in an event queue on the device or component of the system. In one embodiment the device may hold all pending modification events prior to processing in step so that back up operations or verification functions can be instantiated. In another embodiment the component of the system can be another controller similar to controller or a communications module of adapter of . In such embodiment the modification events are held until they can be forwarded to other devices and or components.

In step the modification event in the event queue is processed. In one embodiment the controller processes the modification events pending in the queue. In another embodiment other modules of the components of the system and or devices of the present invention process the modification events.

In a flowchart showing the acknowledgement of delivery of similar data objects via a communications medium using various modes of communication according to another embodiment of the present invention is shown.

In step a modification event is forwarded to an entity. As described elsewhere herein modification events are forwarded to components of the system including entities as described in . The description of the process is made with respect to entities but this is not intended to limit the application of process to entities. As one skilled in the relevant art s would recognize process can be applied to other components of the system of the present invention.

In step an acknowledgment is constructed by the entity receiving the modification event. In one embodiment the controller of the entity receiving the modification event constructs an acknowledgement wherein the acknowledgement includes information detailing the successful processing of the modification event. In another embodiment other components and or modules of the device construct the acknowledgement.

In step the acknowledgment is forwarded via the network to the source of the modification event and or to a determined destination for acknowledgements.

In step a data store is updated so that the source of the modification events does not send the same modification events to the same devices more than is needed or preferred.

In a block diagram illustrating some of the components and or devices upon which the entities described in the embodiments herein can be implemented is shown. A cellular phone is coupled to communication media . Similarly coupled to communications media are a laptop computer a PDA a server and a back end data store . Back end data store can be alternatively coupled to server . Embodiments describing specific applications of the present invention are included below and refer to components of . The control logic and or modules implemented on these components enable the features and functions of the present invention.

In a flowchart showing the modification and delivery of similar data objects via a communications medium using various modes of communication according to another embodiment of the present invention is shown.

In step the modification event is forwarded to the controller or modules with controller logic through a network.

In step the modification event is forwarded to the controller or modules with controller logic through a network.

In step a conflict between modifications to object A performed at entity 1 and entity 2 is detected by the controller.

In step the conflict is resolved based on preferences indicating a priority for each entity. In one embodiment the priorities can be based on time of modification user or administrator platform or similar parameters.

In step a new modification event related to object A or any other objects as needed to resolve the conflict is generated to resolve the conflict at the entities without the data object corresponding to the modification event with the highest priority.

In step the modification event is forwarded to one or more modules within the entities such as entities 1 or 2.

The present invention is discussed below in several application specific embodiments. In some of these embodiments the figures described above are referenced for illustrative purposes only and are not intended to limit the present invention. The invention is applicable to a wide and diverse range of applications. Thus the applications below are presented for illustrative purposes only and are not limiting.

Data objects A are processed by Application 1 in Entity 1 and data objects B are processed by Application 2 in Entity 2. In an embodiment an entity is any data communication and or data processing device. In practice both Applications 1 and 2 may be contained in the same entity or in different entities. Applications 1 and 2 may be the same especially in the case where Entities 1 and 2 are different similar or different. In other words Applications 1 and 2 may be any applications that are capable of processing accessing or otherwise supporting or interacting with data objects of data object type X.

A Change A can be made to data objects A. Also a Change B can be made to data objects B. These changes can be made in any way. For example and without limitation they may have been made by actions that the user took while working with Application 1 or they could have been made via receipt by Application 1 of some object or objects such as receiving information over the Internet .

In an embodiment data objects A and data objects B are representations of the same object. For example and without limitation data objects A and data objects B may be representations of a user s calendar. Entity 1 may be the user s PDA and Entity 2 may be the user s desk top computer. In an embodiment the user would like both representations of his calendar to be the same. Thus the user would like any changes to data objects A to also be made to data objects and vice versa. This is represented by change A and change B.

This embodiment of the present invention is directed to a protocol involving sets of objects where changes made to some of the objects are also made to the other objects. According to an embodiment of the invention when a change is made to some of the objects one or more events are generated that cause the other objects to be similarly changed. Such events may be any communication object such as but not limited to interrupts email messages etc. In an embodiment the generation and distribution of such events occur without any user interaction such that synchronization of the objects is maintained in a user transparent manner.

This embodiment of the invention where an event is generated and communicated to Application 2 relating to Change A made to Data Objects A.

In an alternative embodiment is can be described as a flowchart representing the operation of the invention according to an example embodiment.

In step one or more events are generated that are representative of this modification. In an embodiment such events are implemented as email messages. Information regarding the modification is stored in the body or as an attachment of the email messages.

In step the events are communicated in any well known manner to other applications and or other entities that process access support or otherwise interact with data objects of Type X. In some embodiments it may be necessary for such applications entities to have previously been registered so as to receive such events. In the embodiment where the events are email messages such messages are emailed to such entities applications. The events may be communicated via any medium including both wired and wireless and via any protocol.

In step the events are processed by the recipients of the events. For example in the case where the events are email messages the application would receive the email. Upon parsing through the email message the application would realize that the email was contained instructions for modifying data objects. The application would then modify the data objects as instructed in the email message.

As shown in in an alternative embodiment the functionality described above is achieved by a controller . In an embodiment the controller resides at a server instead of an entity but the invention is not limited to this embodiment. For example and without limitation the server may completely or partially reside at entities . shall be further described below in the alternative with respect to an email use embodiment.

The present invention shall further be described by considering a number of application embodiments. For each of the embodiments the same technology is used to achieve the purposes and functions of the invention.

Referring to in an alternative embodiment assume that Data Objects A and Data Objects B are email messages and Change A represents an email related change. For example Change A may be an email that was transmitted by a user or an email that was received or an email that was deleted or an email that was put into a folder or an email that was stored to disk etc.

According to an embodiment of the invention information regarding Change A is communicated to controller . For example in the case where Change A is an email sent by a user of Application 1 the controller will receive the email.

The controller generates an event representative of Change A and transmits that event to Application 2. In an embodiment event is an email message.

Upon receipt and review of this email message the Application 2 realizes that it is not in fact an email message that is intended to be read by a user. Instead Application 2 realizes that this email is an event directed to updating Data Objects B. Accordingly Application 2 so modifies Data Objects B.

Referring to assume that Data Objects A and Data Objects B are HTML pages that graphically depict commuting information. For example this may comprise a route from a user s home to her business which the user previously defined and places along this route where there are delays in the commute.

The user would like this information to be updated so as to be as real time as possible so that the user may change her route as she travels to and from work. Change A represents updated traffic information. For example Change A may be an accident along the route construction along the route the removal of an accident congestion along the route weather along the route etc.

Traffic information may be available from a source. Periodically the controller receives updates from the source such as Change B . The source may automatically send this information to the controller or the controller may periodically access such as poll the source.

The controller generates an event representative of Change B and transmits that event to Application 1. In an embodiment event is an email message.

Upon receipt and review of this email message the Application 1 realizes that it is not in fact an email message that is intended to be read by a user. Instead Application 1 realizes that this email is an event directed to updating Data Objects A. Accordingly Application 1 so modifies Data Objects A. In this example such updates may be communicated via the push mode where the information is sent to the user based on previously provided preference information for example or the surf mode where the user requests specific information on traffic .

The present invention i.e. the devices servers entities and systems described herein or any part thereof may be implemented and or emulated using hardware software or a combination thereof and may be implemented in one or more computer systems or other processing systems. In fact in one embodiment the invention is directed toward one or more computer systems capable of carrying out the functionality described herein. An example of a computer system is shown in . The computer system includes one or more processors such as processor . The processor is connected to a communication infrastructure e.g. a communications bus cross over bar or network . Various software embodiments are described in terms of this exemplary computer system. After reading this description it will become apparent to a person skilled in the relevant art s how to implement the invention using other computer systems and or computer architectures.

Computer system can include a display interface that forwards graphics text and other data from the communication infrastructure or from a frame buffer not shown for display on the display unit .

Computer system also includes a main memory preferably random access memory RAM and may also include a secondary memory . The secondary memory may include for example a hard disk drive and or a removable storage drive representing a floppy disk drive a magnetic tape drive an optical disk drive etc. The removable storage drive reads from and or writes to a removable storage unit in a well known manner. Removable storage unit represents a floppy disk magnetic tape optical disk etc. which is read by and written to by removable storage drive . As will be appreciated the removable storage unit includes a computer usable storage medium having stored therein computer software and or data.

In alternative embodiments secondary memory may include other similar means for allowing computer programs or other instructions to be loaded into computer system . Such means may include for example a removable storage unit and an interface . Examples of such may include a program cartridge and cartridge interface such as that found in video game devices a removable memory chip such as an EPROM or PROM and associated socket and other removable storage units and interfaces which allow software and data to be transferred from the removable storage unit to computer system .

Computer system may also include a communications interface . Communications interface allows software and data to be transferred between computer system and external devices. Examples of communications interface may include a modem a network interface such as an Ethernet card a communications port a PCMCIA slot and card etc. Software and data transferred via communications interface are in the form of signals which may be electronic electromagnetic optical or other signals capable of being received by communications interface . These signals are provided to communications interface via a communications path i.e. channel . This channel carries signals and may be implemented using wire or cable fiber optics a phone line a cellular phone link an RF link and other communications channels.

In this document the terms computer program medium and computer usable medium are used to generally refer to media such as removable storage drive a hard disk installed in hard disk drive and signals . These computer program products are means for providing software to computer system . The invention is directed to such computer program products.

Computer programs also called computer control logic are stored in main memory and or secondary memory . Computer programs may also be received via communications interface . Such computer programs when executed enable the computer system to perform the features of the present invention as discussed herein. In particular the computer programs when executed enable the processor to perform the features of the present invention. Accordingly such computer programs represent controllers of the computer system .

In an embodiment where the invention is implemented using software the software may be stored in a computer program product and loaded into computer system using removable storage drive hard drive or communications interface . The control logic software when executed by the processor causes the processor to perform the functions of the invention as described herein.

In another embodiment the invention is implemented primarily in hardware using for example hardware components such as application specific integrated circuits ASICs . Implementation of the hardware state machine so as to perform the functions described herein will be apparent to persons skilled in the relevant art s .

In yet another embodiment the invention is implemented using a combination of both hardware and software.

Accordingly as described herein the invention has a number of embodiments. These embodiments are summarized below. These embodiments are described in detail above and aspects of these embodiments are further described in the applications cited above.

1. A method for delivering information to an entity comprising the steps of 1 identifying a data object to be delivered to the entity and 2 delivering said data object to the entity comprising one or more of steps a c a pushing said data object to the entity b transferring said data object to the entity during a sync operation and c transferring said data object to the entity in response to a request from said entity while said entity is surfing.

2. The method of claim wherein step 2a comprises the steps of i creating a modification event representative of said data object and ii sending said modification event to said entity.

4. The method of claim wherein step 2b comprises the steps of i accessing providers for information using state information maintained on behalf of said entity ii receiving said information from said providers wherein said information comprises said data object and iii sending said information to said entity.

5. The method of claim wherein step 2c comprises the steps of i identifying one or more modification events representative of said data object wherein said data object is associated with a said request from said entity while said entity is surfing and ii sending said modification events to said entity.

6. The method of claim wherein step 2c comprises the steps of i accessing providers for information based on said request from said entity while said entity is surfing ii receiving said information from said providers wherein said information comprises said data object and iii sending said information to said entity.

14. A method for delivering information to an entity comprising the steps of 1 identifying a data object to be delivered to the entity and 2 delivering said data object to the entity comprising the step of pushing said data object to the entity.

15. The method of claim wherein step 2 comprises the steps of i creating a modification event representative of said data object and ii sending said modification event to said entity.

16. A method for delivering information to an entity comprising the steps of 1 identifying a data object to be delivered to the entity and 2 delivering said data object to the entity comprising the step of transferring said data object to the entity during a sync operation.

17. The method of claim wherein step 2 comprises the steps of i accessing providers for information using state information maintained on behalf of said entity ii receiving said information from said providers wherein said information comprises said data object and iii sending said information to said entity.

18. A method for delivering information to an entity comprising the steps of 1 identifying a data object to be delivered to the entity and 2 delivering said data object to the entity comprising the step of transferring said data object to the entity in response to a request from said entity while said entity is surfing.

19. The method of claim wherein step 2 comprises the steps of i accessing providers for information using state information maintained on behalf of said entity ii receiving said information from said providers wherein said information comprises said data object and iii sending said information to said entity.

20. The method of claim wherein step 2 comprises the steps of i identifying one or more modification events representative of said data object wherein said data object is associated with a said request from said entity while said entity is surfing and ii sending said modification events to said entity.

21. A method for delivering information to an entity comprising the steps of 1 generating one or more modification events representative of a modification made to a data object and 2 forwarding said modification events to an entity identified as a recipient of said modification events wherein said entity processes said modification events.

22. The method of claim wherein said data object is stored at said entity and wherein said entity processes said modification events so as to update said data object.

26. The method of claim wherein step 2 is performed during at least one of a push operation a sync operation and a surf operation.

27. A method for receiving and processing information by an entity comprising the steps of 1 receiving a data object comprising one or more of steps a c a receiving said data object via a push operation b receiving said data object via a sync operation and c receiving said data object via a surf operation and 2 processing said data object.

While various embodiments of the present invention have been described above it should be understood that they have been presented by way of example only and not limitation. It will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the invention as defined in the appended claims. Thus the breadth and scope of the present invention should not be limited by any of the above described exemplary embodiments but should be defined only in accordance with the following claims and their equivalents.

