---

title: System for the centralized storage of wireless customer information
abstract: A system for storing subscriber information in a centralized location includes a processor, memory coupled to the processor, and a data storage device coupled to the processor. The data storage device includes a subscriber profile portion for storing personal information about a subscriber. The subscriber profile portion includes a subscriber identification portion for storing an identification string. The subscriber profile portion is associated with an account type portion for storing account information, a portal portion for storing portal information, and an account status portion for storing account status information. The data storage device further includes a subscription portion for storing subscription information. The subscription portion is associated with a device portion for storing device information, a services portion for storing services information, and a mobile subscription portion for storing mobile subscription information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09436749&OS=09436749&RS=09436749
owner: AT&T Mobility II LLC
number: 09436749
owner_city: Atlanta
owner_country: US
publication_date: 20121002
---
This application is a continuation of U.S. application Ser. No. 12 910 235 now U.S. Pat. No. 8 280 353 filed Oct. 22 2010 which is a continuation of U.S. patent application Ser. No. 12 273 528 now U.S. Pat. No. 7 831 240 filed Nov. 18 2008 which is a continuation of U.S. patent application Ser. No. 10 299 114 now U.S. Pat. No. 7 454 195 filed Nov. 18 2002 which is a non provisional of and claims the benefit of priority from provisional U.S. Provisional Patent Application Ser. No. 60 332 376 filed Nov. 16 2001 which is expressly incorporated herein by reference.

Set forth below is a complete list containing the names of this application and related commonly owned U.S. patent applications entitled Telecommunications System Messaging Infrastructure A System for Translation and Communication of Messaging Protocols into a Common Protocol A System for the Validation and Routing of Messages A System for the Storage and Retrieval of Messages A System for Handling Proprietary Files A System for Handling File Attachments A System for the Centralized Storage of Wireless Customer Information A System for Customer Access to Messaging and Configuration Data A System and Method for Querying Message Information A System and Method for Password Protecting a Distribution A System and Method for Providing Message Notification Methods and Systems for Routing Messages Through a Communications Network Based on Message Content and Methods and Systems for Tracking and Playing Back Errors in a Communications Network each of which is filed on the same date herewith.

The present invention relates generally to a messaging system in which messages can be processed and routed based on a customer s particular preferences. More particularly the present invention relates to a system for the centralized storage of customer information in a messaging infrastructure.

Currently messaging systems possess limited storage capabilities. In general a messaging system facilitates the transmission of messages such as text messages over a communications network. For example in a conventional pager or Mobitex system text messages are transmitted over a wireless network. Typically a messaging infrastructure contains only a limited amount of storage space in databases for the storage of customer information. The rapid expansion of the number of customers the variety of customer preferences and the different types of messaging produces a demand to store more customer information on a limited amount of database capacity. Therefore only a minimal amount of customer information is stored in these databases. The storage of customer information is currently designed to be as basic as possible in order to conserve data storage space on a system with immense data storage demands. In order to keep the storage demands under control wireless telecommunications carriers often create simplified methods for storing customer information. As such these messaging systems are capable of handling only a basic set of customer preferences.

In addition these storage systems are often fixed and unchangeable. In a typical messaging infrastructure a database for the storage of customer information is designed and implemented without any provision for expanding the amount of information for a particular subscriber. For example a messaging infrastructure typically provides a certain number of data fields for specific information about a particular customer. The type of information itself is often determined at the time the infrastructure is designed and is not later expandable to accommodate additional types of information. As such current messaging systems are not flexible in handling customer preference information.

With the rapid expansion of different types of messages and messaging protocols it is important to be able to properly store and maintain a wide variety of customer information. A customer typically has a set of preferences that should be honored in order to provide satisfactory service. As the number and types of messages increases so too does the amount of information about a customer s preferences. Customers often have preferences with respect to the different types of messages that they can transmit and receive. Moreover these preferences tend to change over time as customers become more familiar with a messaging system. In addition as different services are added it is desirable to add additional customer preference information.

Messaging systems are required not only to handle an increasing customer load but to also handle an increasing message volume. Applicants have found that current messaging systems lack the ability to maintain customer preference information. Accordingly Applicants have found that a new messaging infrastructure with an improved ability to handle customer information is needed.

In accordance with the invention a system for storing subscriber information in a centralized location includes a processor memory coupled to the processor and a data storage device coupled to the processor. The data storage device includes a subscriber profile portion for storing personal information about a subscriber. The subscriber profile portion includes a subscriber identification portion for storing an identification string. The subscriber profile portion is associated with an account type portion for storing account information a portal portion for storing portal information and an account status portion for storing account status information. The data storage device further includes a subscription portion for storing subscription information. The subscription portion is associated with a device portion for storing device information a services portion for storing services information and a mobile subscription portion for storing mobile subscription information.

In one aspect of the present invention a system for storing subscriber information in a centralized location includes a processor memory coupled to the processor and a data storage device coupled to the processor. The data storage device includes an account information portion for storing account information a device portion for storing first device information about a device of a first type and second device information about a device of a second type. The data storage device further includes a destination portion for storing destination information and a messaging attributes portion for storing preference information. The account information portion the device portion the destination portion and the messaging attributes portion are associated with a particular subscriber.

In yet another aspect of the present invention a system for storing subscriber information in a centralized location includes a processor memory coupled to the processor and a data storage device coupled to the processor. The data storage device includes an account information portion for storing account information. The account information portion includes account identification information and service information. The data storage device includes a device portion for storing first device information about a device of a first type and second device information about a device of a second type. The device portion includes device identification information and device type information. The data storage device includes a destination portion for storing destination information. The destination portion includes destination email address information. The data storage device includes a messaging attributes portion for storing preference information. The messaging attributes portion includes distribution list information white list information blacklist information and alias information. The account information portion the device portion the destination portion and the messaging attributes portion are associated with a particular subscriber.

In a further aspect of the present invention a system for storing subscriber information in a centralized location includes a processor memory coupled to the processor and a data storage device coupled to the processor. The data storage device includes a subscriber profile portion for storing personal information about a wireless subscriber. The subscriber profile portion includes a subscriber identification portion for storing an identification string. The data storage device further includes account type portion for storing account information a state portion for storing state information a country portion for storing country information a portal portion for storing portal information and an account status portion for storing account status information. The data storage device further includes an account attributes portion for storing account information associated with the wireless subscriber. The account attributes portion includes a services portion for storing services information a service attributes portion for storing service attribute information a subscriptions portion for storing subscriptions information and a mobile subscription portion for storing mobile subscription information. The data storage device further includes a subscriber preferences portion for storing preference information associated with the wireless subscriber. The subscriber preferences portion includes an alias portion for storing alias information an alias destination routing portion for storing alias destination routing information an alias email routing portion for storing alias email routing information a sub email portion for storing email information an email type portion for storing email type information a browser portion for storing browser information a subservice attribute portion for storing subservice attribute information a blacklist portion for storing blacklist information and a white list portion for storing white list information. The storage device further includes a device portion for storing device information associated with the wireless subscriber.

Additional advantages of the invention will be set forth in part in the description which follows and in part will be obvious from the description or may be learned by practice of the invention. The advantages of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are intended to provide further description of the invention of the invention as claimed. The following description as well as the practice of the invention set forth and suggest additional advantages and purposes of the invention.

The accompanying drawings which are incorporated in and constitute a part of this specification illustrate several embodiments of the invention and together with the description serve to explain the principles of the invention.

Reference will now be made in detail to the present exemplary embodiments of the invention examples of which are illustrated in the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.

Unless otherwise stated or evident based on the context used the following terms and acronyms will be defined as follows 

A messaging infrastructure serves to communicate messages from a first device to a second device. While in the prior art messaging tended to be limited to sending and receiving messages only from devices accessible from the same Short Message Service Center SMSC exemplary embodiments of a messaging infrastructure consistent with the present invention facilitate the sending and receipt of messages between disparate or similar devices many of which use different messaging protocols and formats across a range of messaging centers and gateways. In order to assist in this process messages sent from a first device may be received by a first adapter which translates the messages into a common format published onto a network transport bus in a common messaging format received by a second adapter which translates the messages into a second device format and transmitted to the second device. In this fashion messages can be transmitted between various devices having different formats and capacities.

In exemplary embodiments of the present invention the one or more routing entities are known as a Routing and Validation Entities RAVE which may be accessed by the ARCs to perform validation routing and alias distribution list functions. The RAVE accesses routing information in a Routing and Validation Database RVDB via a Backbone Integration Transport Bus BITBUS . The RAVE accesses alias and distribution list data in the User Alias Database UADB . In exemplary embodiments of the present invention a Master IT and Network Database MIND may populate both the RVDB and the UADB . The RAVE returns routing information to the ARC that requested the routing information. Through the interaction of the ARCs the network transport bus and the RAVE messages into the messaging infrastructure are received translated routed and transmitted to destination devices.

In addition to these elements exemplary embodiments of the present invention may also include one or more Data Storage and Routing Terminals DART shown as DART DART interfaced to the network transport bus for storing messaging data in a Message Data Store MDS for access and retrieval at later points in time. The DARTs access the MDSs via a Backbone DataStore Transport Bus . One or more Content Routers interfaced to the network transport bus receive messages addressed to a particular address and redirect the messages to external devices which for example may return information requested in the message to the message sender. A Logging Administration Maintenance and Billing Entity LAMB interfaced to the network transport bus may log network traffic for error tracking error replay and billing functions. Also a Subscriber Configuration Interface SCI interfaces to the network transport bus for allowing users to access and update subscriber and messaging device information.

Exemplary embodiments consistent with the present invention may also include a Mail Transfer Gateway MTG . The Mail Transfer Gateway may serve as an email gateway between the messaging infrastructure and the Internet . To facilitate this function the Mail Transfer Gateway may be coupled to both the network transport bus and the BITBUS .

It should be noted that this exemplary embodiment illustrated in and the other figures contained herein is intended to show the overall architecture and certain components of the present invention. It will be appreciated by those skilled in the art that operation of a messaging infrastructure in accordance with the present invention may include all or a subset of these components or may include additional elements of a similar nature or additional elements with common interfaces as such elements are developed.

Messaging interface is operable to pre cache messages or post cache messages or it performs no caching. Caching is useful where certain messaging elements operate in such a way that messages are segmented into multiple parts. In pre caching incoming message segments into the messaging interface are held in the messaging interface until the last segment is received prior to sending the incoming message to the processor . In post caching outgoing segmented messages from the messaging interface to the message element are held until the last segment is received from the Processor .

Messaging interface is extensible such that regardless of the messaging element with which the messaging interface is communicating the messaging interface can be adapted to communicate with that messaging element . Communication between the messaging interface and the messaging element may be unidirectional or bi directional such that the ARC may send and or receive messages with the messaging element . In addition the ARC may comprise multiple messaging interfaces where each interface communicates with a separate messaging element .

The messaging interface communicates with the processor . Regarding messages incoming from the messaging interface the processor operates to translate messages between the messaging element format or protocol and the common format utilized on the network transport bus . In addition the processor generates routing requests to a router generally a RAVE . In order to generate a routing request the processor may for example parse the incoming message from the message interface to retrieve an originating address and a destination address from the incoming message. The routing request generated by processor may include the origination address destination address and a unique transaction identification that identifies the message. The processor receives a routing response via the network transport bus interface that contains routing information for the received message. Based on that routing response the processor operates to route messages received from the messaging interface to an appropriate destination.

Should routing responses contain requests for additional information such as a password the processor operates to request the password via the messaging interface from the messaging element and verify the receipt of an accurate password prior to routing the message to its destination. The processor is also operable to send message status information to the messaging element via the messaging interface .

Regarding messages incoming from the network transport bus interface the processor is operable to translate the messages from the common format into the messaging element format and transmit the messages via the messaging interface to the messaging element .

The translation operation of the processor may be operable to store a plurality of potential messaging element formats within the ARC or only the applicable messaging element format for the messaging element in communication with the ARC . The processor may be operable to sense the appropriate messaging element format and adaptively translate the common format between the appropriate messaging element format or the appropriate messaging element format may be configured into the processor .

The network transport bus interface couples the processor to the network transport bus . The network transport bus interface monitors traffic along the network transport bus for messages directed to the ARC and places messages on the network transport bus from the processor .

The network transport bus is a data and control bus that operates as a multi port switch to permit the transfer of messages between various network elements. The network transport bus utilizes a common message format for communication among and between the network elements. In exemplary embodiments of the present invention the common message format may be Extensible Markup Language XML or MIME. While the network transport bus is illustrated as a single common bus those skilled in the art will appreciate that it may be segmentable and scalable and may be physically broken with firewalls and gateways separating parts of the network transport bus . The network transport bus may include a message broker to facilitate communication along the bus and may monitor itself for congestion or other potential problems.

In an exemplary embodiment consistent with the present invention messaging across the network transport bus may be point to point multipoint or broadcast. A point to point message utilizes an addressing scheme whereby the message is designated to be received by a single network element. Multipoint messaging utilizes an addressing scheme whereby a single message may be delivered to two or more specified network elements. Broadcast messaging publishes the message onto the network transport bus for receipt by any or all network elements programmed to receive the message.

Exemplary embodiments consistent with the present invention may utilize a combination of subject and device addressing to send messages along the network transport bus . Subject based addressing tends to be broadcast based tagging a subject address onto a message. Some or all network elements may monitor the network transport bus for subject addresses of interest to that particular network element. For instance in generating a routing request an ARC may append the subject address Routing Validation to the header of a message broadcast on the network transport bus. Each of the Network elements interested in reading a Routing Validation such as routers or RAVEs would read these messages off of the network transport bus .

Exemplary embodiments consistent with the present invention may also append a more specific network element address onto the header along with the subject address. For instance a routing request may be addressed to Routing Validation.RAVE . In that case RAVE would be the intended RAVE that would read the message associated with the routing request. Other RAVEs would likely not read the message associated with the request however error tracking network elements such as a LAMB may choose to read the message.

In addition messages may have a plurality of headers for messages intended to be received by a variety of different network elements i.e. a multicast message. For instance a message sent to a distribution list of recipients may have several headers attached to the message with each header designating an intended destination network element.

Network transport bus interfaces such as network transport bus interface may run daemons that monitor the network traffic for appropriate subject addresses and network element addresses. For instance ARC may monitor network traffic for subject addresses such as Deliver MSG for delivering a message or Routing Validation Response for a routing validation response . ARC may also monitor any specific network addresses appended to these subject addresses looking for .ARC. in which case ARC will read the message.

Similarly to the operation of the ARC s network transport bus interface the RAVE s network transport bus interface may run daemons that monitor the network traffic for appropriate subject addresses and network element addresses. For instance RAVE may monitor network traffic for subject addresses such as Routing Validation for receiving a routing request for a message . RAVE through network transport bus interface may also monitor any specific network addresses appended to these subject addresses looking for .RAVE. in which case RAVE will read the message.

Processor interfaces with the network transport bus interface to receive routing requests and generate and transmit routing replies. Upon receipt of a routing request the processor may extract routing information based on the destination device address and or the origination device address. If the destination device address is an alias or a distribution list the processor may look up the alias or distribution list in the UADB and return one or more actual destination device addresses that correspond to the alias or distribution list.

In exemplary embodiments consistent with the present invention the processor may query an RVDB such as RVDB for routing information for each of the one or more destination device address more than one in the case of a distribution list . The routing information may contain information including but not necessarily limited to the device type of the destination device device address of the destination device and an adapter or ARC that serves the destination device. Routing information may also include a password if the destination device is password protected. In addition the origination address may be used in the routing information lookup to determine if the origination device address is on a whitelist permitted communication or on a blacklist barred communication . A class of service indicator may also be looked up for the destination device address origination device address or both to ensure that the messaging device has an appropriate class of service prior to routing the message to the destination. In addition if the destination device address or the origination device address is associated with a prepaid subscriber the processor may verify sufficient available funds are available to route the message. Data storage options may also be looked up for either the destination device address or the originating device address. Processor may return some or all of this information in the routing reply returned to the requesting ARC.

While the RAVE and the ARC have been discussed as if they were physically separate units it is foreseen that they may function as distinct processes within a single hardware unit. In that case communication between the ARC and RAVE might be over a logical network transport bus rather than a physical network transport bus.

In view of the high level description of RAVES ARC s and the network transport BUS the process by which messages are received routed and or delivered will now be discussed.

At stage the router RAVE receives the routing request and extracts routing information. The RAVE may perform a look up in the RVDB based on the destination device address to extract the routing information. At stage the RAVE publishes the routing information back onto the network transport bus. The ARC picks up the routing information from the network transport bus.

At stage the ARC translates the incoming message from the SMS format to the common format which may for example be either XML or MIME and appends routing or addressing information onto the common format message. At stage the ARC publishes the message on the network transport bus. At stage ARC receives the published message from the network transport bus. At stage ARC translates the message from the common format to the EMS format and at stage ARC transmits the message to the ESMC for delivery to the destination device.

 Routing Validation.RAVE ADDRESS.ORIGINATING ARC ADDRESS.TRANSACTION ID.ORIGINATING DEVICE ADDRESS.DESTINATION DEVICE ADDRESS 

Once the ARC publishes the routing request its tasks relating to this message are complete until the return of a routing reply. illustrates a flowchart of the operation of the receipt of a routing reply stage of an ARC in an exemplary embodiment consistent with the present invention. At stage the monitor daemon in the ARC monitors traffic on the network transport bus. At stage the daemon examines the header of a message on the network transport bus to determine if the subject address is a routing reply for this particular ARC. Typically it is searching for Routing Validation Response.ARCn where ARCn is the address of this ARC that is awaiting the routing reply.

If an appropriately addressed routing reply is received at stage at stage the ARC will parse the routing reply. At stage the routing reply is examined for an invalid message in the response. An Invalid message in the response may typically be of the following form 

 Routing Validation Response.Invalid.Reason where Reason could be because of for example an insufficient prepaid account blacklisting or an insufficient Class of Service COS .

If an Invalid response is returned at stage the ARC examines the reason field to determine if it is because of insufficient funds in a prepaid subscriber s device. If so an invalid message is returned to the originating device in stage . The invalid message may include the reason for the invalid message. Following an invalid message to the originating device in stage at stage further processing of the message is halted so that the message is not delivered to the recipient. In the exemplary embodiment of the invention resources are not expended translating the message to the common format if the message is not going to be transmitted across the network transport bus to the destination device.

If insufficient funds are not the reason for the Invalid reply at stage the ARC examines the reason field to determine if it is because of a blacklist associated with the destination device. If so an invalid message is returned to the originating device in stage . The invalid message may include the reason for the invalid message. Following an invalid message to the originating device in stage at stage further processing of the message is halted so that the message is not delivered to the recipient.

If blacklisting is not the reason for the Invalid reply at stage the ARC examines the reason field to determine if it is because of an insufficient COS associated with the device. If so an invalid message is returned to the originating device in stage . The invalid message may include the reason for the invalid message. Following an invalid message to the originating device in stage at stage further processing of the message is halted so that the message is not delivered to the recipient.

If none of these is the reasons for the Invalid reply at stage the message is not sent and typically an invalid message is sent to the originating device.

If a valid reply is received in the routing response e.g. Routing Validation Response.Valid. at stage the reply is examined to see whether a password has been transmitted in the reply. If a password has been submitted in the reply this is an indication that the destination device is password protected and the originator needs to supply a password to send the message. Optionally the originating device may include a password in the original message which would obviate the need for stages . Typically the originating device will not have supplied a password. Therefore at stage a password request is sent to the messaging entity requesting a password. At stages and the password is received and compared to the password supplied by the routing reply. If the passwords do not match at stages and an invalid password message is returned to the originating device and the message is not delivered. Optionally exemplary embodiments consistent with the present invention may provide for multiple attempts to provide a correct password.

Assuming a valid response and a valid password if required processing continues at stage where the message is translated into the common format. illustrates a flowchart of the operation of the translation stage of an ARC in an exemplary embodiment consistent with the present invention. At stage the message is translated from its original message format to the common message format utilized on the network transport bus . At stage routing information gathered from the routing reply is utilized to append a header to the message in the common format. The header of the common message may be in one of the following formats 

Once the message had been published onto the network transport bus the operations of the ARC are essentially complete. Additional exemplary embodiments of the invention may provide for feedback to originating ARCs relating to the delivered status of messages.

While the previous illustrated the flowchart of the operation of an ARC functioning to receive a message from a messaging element in an exemplary embodiment consistent with the present invention ARCs also function to receive messages from the network transport bus for transmission to destination devices. illustrates a flowchart of the operation of an ARC functioning to transmit a message from the network transport bus in an exemplary embodiment consistent with the present invention.

At stage the monitor daemon in the ARC monitors traffic on the network transport bus. At stage the daemon examines the header of a message on the network transport bus to determine if the subject address is related to delivery of a message. Typically it is searching for Deliver Message.ARCn.DEVICE TYPE.DESTINATION ADDRESS or Deliver Store Message.ARCn.DEVICE TYPE. DESTINATION ADDRESS . If a delivery related message is found at stage and the ARCn field is left as ARC at stage the ARC will parse the common message header to pull out the Device Type and Destination Address entries. At stage if either of these entries has a value assigned to the ARC processing proceeds to stage .

At stage if the subject address is not related to delivery of a message and the ARC is not specifically addressed e.g. .ARC. then the daemon continues to monitor network traffic at stage . Otherwise flow proceeds to stage .

At stage the contents of the message in the common format are read from the network transport bus. At stage the header of the message is parsed to determine the destination address. At stage the message is translated by the ARC from the common format to the messaging format of the messaging entity and at stage the message is sent to the destination device via the messaging entity.

In view of the detailed description of the operation of an ARC a detailed description of the operation of the RAVE follows with reference to . illustrates a flowchart of the operation of a RAVE for routing messages in an exemplary embodiment consistent with the present invention. At stage the RAVE receives a routing request from the network transport bus. At stage the RAVE extracts routing information relating to the routing request. At stage the RAVE generates a routing reply comprising the routing information. At stage the RAVE transmits the routing reply back onto the network transport bus.

 Routing Validation.RAVE ADDRESS.ORIGINATING ARC ADDRESS.TRANSACTION ID.ORIGINATING DEVICE ADDRESS.DESTINATION DEVICE ADDRESS 

If a Routing Validation message is found at stage and the RAVE ADDRESS field is left as RAVE at stage the RAVE will parse the common message header to pull out the Destination Device Address entry. At stage if the entry has a value assigned to the RAVE processing proceeds to stage .

At stage if the subject address is not a Routing Validation and the RAVE is not specifically addressed e.g. .RAVE. then the daemon continues to monitor network traffic at stage . Otherwise flow proceeds to stage .

At stage the Routing Validation message is read and at stage the Routing Validation message is parsed to pull out the originating device address and the destination device address. At stage routing information is extracted from the RVDB.

At stage for each of the one or more destination devices process stages are executed. If more than one device is present this will yield a string of routing information with a header portion for each of the destination devices.

At stage the destination device is looked up in the RVDB. At stage routing information is extracted from the RVDB for the destination device. The routing information comprises at least a device address. The routing information may further comprise a device type an ARC address associated with the device address prepaid subscriber flag whitelist data blacklist data COS data password data and a data storage flag.

At stage if the origination device and or the destination device is related to a prepaid subscriber stage looks up balance information to determine if there is an available balance. If the balance is not available at stage an Invalid reply is returned for the associated destination device.

If the balance is available the RAVE may debit the origination device and or destination devices account.

If the origination and or destination device is not associated with a prepaid subscriber or if the origination and or destination device is associated with a prepaid subscriber with a sufficient balance processing proceeds in parallel to stages and .

At stage the ARC checks whether the originating address is on a whitelist for the destination device. If so a Valid response is generated and processing continues at stage . If not at stage the ARC checks whether the originating address is on a blacklist for the destination device. If so an Invalid response is generated and processing continues at stage . If not at stage the ARC checks whether the originating address or destination address meets the COS requirements. If so a Valid response is generated and processing continues at stage .

At stage the process checks whether a password is required for the destination device. If so at stage a Password is returned and processing proceeds to stage .

At stage the process checks whether a data storage flag is turned on for the destination device. If so at stage a data storage flag is returned and processing proceeds to stage .

At stage the various returned routing information is compiled for all destination devices associated with the message. This is used to generated the routing reply of stage . A routing reply header typically will look like this for each destination device in the header 

At a high level as set forth in the detailed description that follows Data Storage and Routing Elements DART are used in the system of the present invention to manage the message storage and retrieval functions of the system. DART s also provide message routing functionality for data messages.

In an exemplary embodiment consistent with the present invention DARTS may be active network elements that supply business logic for storing updating and querying current message objects from MDS . DARTS for example can provide an interface between MDS and other elements of the wireless architecture that produce and query the data stored in MDS . In the example of DARTS may support interface requirements to MDS . For example DARTS may implement load balancing between MDS . In this manner one or more of the DARTs such as DART may perform a load balancing function for the data stored in one or more message data stores such as MDS

One or more of the DARTs such as DART may provide routing to one or more of the message data stores such as MDS . In this manner DART for example may route messages or other information to one or more of the message data stores such as MDS . In one exemplary embodiment DARTS perform routing functions which direct particular messages to a particular message data store such as MDS

One or more of the DARTs such as DART may store messages in a message data store such as MDS on a per device basis. For example all of the messages that are associated with a particular device may be stored in a single message data store such as MDS . In that example DART may be able to detect a device type associated with a particular message and route that message to a predefined message data store. Device types may be defined based on their supporting network such as general packet radio service GPRS Global System for Mobile Communication GSM or MOBITEX. In another embodiment of the present invention a single DART such as DART may be adapted to handle a certain type of message for a particular device. In this manner DART may handle all MOBITEX messages. DART may then be tasked with routing all MOBITEX messages to a particular message data store. In yet another alternate embodiment of the present invention multiple DARTs may handle multiple device types. For example each DART in the system depicted in may be capable of handling messages for numerous different device types.

DARTS may also be capable of handling fragmented message segments. For example in a short messaging service SMS format messages may be segmented into different parts of standard lengths. One embodiment of the DART may be capable of handling message segments so as to preserve the integrity of a message made up of message segments. For example DART may be capable of receiving numerous message segments of a single message and directing those message segments to a single message data store such as MDS

DARTS may be capable of routing information including the originating and terminating addresses of a particular message. In a further embodiment of the present invention DARTS may be able to handle and direct COS data as well as context identification data on a per transaction basis. DART may also be able to parse out a message header. In general DARTS may be capable of handling numerous data and information structures associated with a particular message.

DARTS may be capable of querying messages and determining the current status of a message. These query and status functions may be performed on a per device basis. For example a DART such as DART may be able to access a message data store such as MDS to determine the number of messages stored therein for a particular device type. Additionally DART may be capable of determining the current status of messages stored in a message data store.

One or more DARTs such as DART may provide support for multiple database elements such as UADB RVDB and MDS as well as other internal or external databases. In an exemplary embodiment of the present invention DARTs such as DART may support call level interfaces such as open database connectivity ODBC or JAVA database connectivity JDBC database middle ware light weight directory access protocol LDAP interfaces multiplexing database requests JAVA messaging service and JAVA naming directory information database connection pooling database adaptors and format and application protocol of a database gateway. Alternate embodiments of the DART of the present invention may be able to support any one or more of these protocols and applications as well as numerous others known to those skilled in the art.

The DARTs such as DART may provide the ability to send transactions as a remote request in which one sequential query language request is sent to one database. In other embodiments a DART such as DART may be able to send transactions as a remote unit of work in which many sequential query language requests are sent to one database or as a distributive request in which many sequential query language requests are sent to many databases. In this manner one or more DARTs for example may be capable of querying one or more databases such as RVDB UADB and MDS

DART may be capable of publishing messages to other network elements such as for example RAVEs ARCs and other DARTs. This message transfer may be accomplished via a publish and subscribe process. Additionally in another embodiment of the present invention the transfer of messages may be accomplished via a synchronous or an asynchronous transaction process.

DART may be capable of parsing a message so that only header information without message text can be sent to a wireless subscriber. DART may also be capable of responding with specific header information message identification information message size or length date stamps and message statuses. In this manner DART may be able to parse out various segments of a message and send any number of those segments to a wireless subscriber.

In a further aspect of the present invention segmented messages can be linked together into a single transaction. For example if a message exceeds the standard length it would then take up more than one segment. DART of the present invention contemplates treating the segmented pieces of a single message as a single transaction. In a further embodiment of the present invention data can be parsed out of the message to convert it into different protocols.

DART may also provide various storage management functions. For example DART may provide the capability of throttling the number of messages for a single wireless subscriber. In addition DART may be capable of tracking the number and size of messages a single wireless subscriber stores in a message data store such as MDS . DART may be capable of notifying a wireless subscriber of the number of messages stored in a message data store.

In another embodiment of the present invention a wireless subscriber may be allotted a certain limited amount of storage in a message data store such as MDS . In this manner a wireless subscriber for example may be given one megabyte of data storage capability on a message data store. If the wireless subscriber exceeds the one megabyte storage limit then DART may be capable of sending the wireless subscriber a message indicating such. DART may be capable of notifying a wireless subscriber that his message storage limit is about to be reached. These notification messages may be delivered through any convenient medium to the wireless subscriber. For example the wireless subscriber may receive such a message on his pager. A further aspect of the current invention provides for storage thresholds that are dynamically modifiable. In this example a wireless subscriber may be allocated an initial storage capacity for example two megabytes and then be able to increase that capacity later upon a request or upon the occurrence of a certain event.

The DARTs such as DART may be capable of supporting data replication. Further DART may be capable of supporting method replication. For example business logic may be replicated among various DARTs and may be thus modifiable throughout all DARTs.

DARTs such as DART may be capable of allowing a user to remotely delete e mail from a wireless device. In this manner a wireless subscriber may be able to access his wireless device and be able to delete for example an e mail message. DART may then be able to synchronize this deletion to a mail server so that the e mail is also deleted from the mail server. In other words a single delete command from a wireless device could operate to erase for example an e mail message from both a database and an e mail server. In the exemplary embodiment of DART may receive a delete command from a wireless subscriber. In this example DART may then be able to delete the particular e mail message from MDS as well as from an IMAP POP server . In this manner DART may be capable of a synchronized delete function.

The network transport bus interface couples the processor to the network transport bus . The network transport bus interface monitors traffic along the network transport bus for messages directed to the DART and places messages on the network transport bus from the processor .

The processor performs the operations described throughout this portion of the specification and interfaces to the backbone datastore transport bus through the backbone datastore transport bus interface . Through this interface and bus the DART communicates with the message data store entities MDS.

The message data store entities such as MDS may be capable of storing e mail messages with or without attachments text messages including for example short messages instant messages and MOBITEX messages enhanced messages including for example ETSI messages EMS messages and NOKIA smart messages multimedia messages including for example text fax icons logos animations music photos media clips or any combination of the above.

The MDS may be able to store data in a MIME or XML format. Messages may also be popped up to an external e mail server. In this manner a message stored at the direction of a DART such as DART in a database such as MDS in MIME format could be transmitted to an external device through ARC translation. Additionally messages can be stored for example in a linked list format.

MDS elements and may be capable of storing messages in any convenient data format. This message storage may be capable of supporting any number of various communications protocols. In addition to MIME format numerous other data storage formats known to those skilled in the art may be used consistently with the principles of the present invention. In addition data may be stored in MDS on a per transaction basis to decrease the storage requirements for multiple devices or destinations.

MDS may be scaleable. For example MDS may be expandable beyond an initial data storage capability. Further additional MDSs not shown may be added to the backbone data store transport to provide additional storage capability. In this manner not only are individual MDSs such as MDS scaleable but so too is the storage capacity across all MDSs in the entire network.

MDS and may provide security features. For example data may be stored in MDS and in any convenient encrypted format as known in the art. Other exemplary embodiments of MDS for example may provide for redundancy to ensure no loss of data. Further MDS may be configured to ensure no duplication of records or data.

MDS elements and may support both long term and transient storage. In this manner MDS may contain cache memory or any other sort of transient storage medium. Further MDS may support distributed storage and may provide a storage area network architecture. Long term storage can occur for example on a magnetic medium or an optical medium or other media now known or to be developed. The database architecture of MDS may be based on for example a relational model or an object oriented model. Numerous database structures are known to those skilled in the art and are possible implementations of MDS 

MDS may provide security features. For example data may be stored in MDS in any convenient encrypted format. Other exemplary embodiments of MDS may provide for redundancy to ensure no loss of data. Further MDS may be configured to ensure no duplication of records or data.

MDS elements may support both long term and transient storage. In this manner MDS may contain cache memory or any other sort of transient storage medium. Further MDS may support distributed storage and may provide a storage area network architecture. Long term storage can occur for example on a magnetic medium or an optical medium. The database architecture of MDS may be based on a relational model or an object oriented model. Numerous database structures are known to those skilled in the art and are possible implementations of MDS 

In an exemplary embodiment consistent with the principles of the present invention an MDS may comprise three tables a message store table a message device status table and a transaction data segment table. In this example the message store table the message device status table and the transaction data segment table are each contained in a relational database. The relational database may be distributed over many different data storage entities and may be implemented in any convenient manner. For example one skilled in the art would be able to implement the principles of the MDS on an Oracle database product.

In one embodiment the message store table is a repository for message information. The message store table stores a transaction identifier associated with a message a message class a description of a the message the number of segments in a multi segment message message priority an originating address a destination address a class of service code message status information the date the message was submitted a sequence number for the message and a notification address for the message. The message store table has as its primary key a message identifier. This message identifier in this example is a unique string associated with a message.

In general the message store table is configured to accept detailed information about a message transmitted across a messaging infrastructure . In this example a unique transaction identifier is associated with each message. This transaction identifier may be in the form of a string of characters. The message class describes the type of message such as a proprietary ring tone. For multi segment SMS messages the message store table stores the number of segments in the message. A message priority in the form of a flag may be associated with each message. In this manner priorities may be associated with each message and delivery schemes may be established based on message priority. For example a priority flag may be set to a priority of urgent. In such a case a message with an associated priority flag set to urgent may receive preferential delivery treatment. The origination and destination addresses may be any form of address associated with a communications device. For example these addresses could correspond to email addresses IP domain names cellular telephone numbers fax machines pagers or any other type of communications device.

The MDS is capable of storing in a common format such as MIME or XML messages that are generated on or received by any communications device. The status information in this example tracks the status of a message. For example the status information may indicate that a message was delivered. A notification address contained in the exemplary embodiment of message store table receives an indication that a message was delivered.

The message device status table stores message and device information. In this example the message device status table contains device type information a routing identifier device status completion date query attempts retry attempts the number of segments of a multi segment message that were delivered successfully and the number of segments of a multi segment message that were not delivered successfully. The device type information for example includes the type of device and any relevant associated characteristics. The routing identifier for example may be a string that denotes a particular route to be traveled by a message. Device status information may include information about whether a particular device is turned on or is in use. Query attempts and retry attempts in this example refer to the number of query attempts made on a message and the number of attempts made at delivery respectively. Likewise the number of segments of a multi segment message delivered successfully and unsuccessfully are stored so that multi segment messages may be properly delivered. In this example the message device status table has as its foreign key a message identifier. In this manner the message device status table references message store table for message information.

The transaction data segment table stores information about segmented messages. In SMS messaging the maximum length of a message segment is typically 160 characters. If an SMS message is longer than 160 characters then it preferably will be stored in more than one segment. Each segment may be transmitted separately over a network and then reassembled at a destination. In this example the transaction data segment table stores information about the number of segments in a multi segment message along with the data contained in each segment. The transaction data segment table has as its primary key a segment identifier and as its foreign key a transaction identifier. In this manner the transaction data segment table references message store table for message information.

The message store table contains the body of a message in a common format. This message body for example could be the text of an email message or the coding of a ring tone converted into a common format. In one embodiment of the present invention the message body is associated with multiple destination addresses without duplication of the message body. For example an SMS message may have as its destination numerous devices. Instead of storing the SMS message text in a data structure associated with each of the destination addresses the SMS message text may be stored a single time and associated with the multiple destination addresses in the message store table. In this manner message text is stored only once and the associated information such as destination addresses can then be used to reference the message text.

In operation messages stored on an MDS may flow from the MDS through backbone data store transport bus to an applicable DART or to network transport bus and then to an applicable ARC or . Likewise messages may originate in an applicable ARC or and then flow to network transport bus an applicable DART or backbone data store transport bus and an applicable MDS or

As discussed in previous portions of the detailed discussion a data storage function may be enabled to trigger storage of messages in an MDS by a DART. An ARC may designate the address of a specific DART such as DART by utilizing Deliver Store Message.DART . In this manner a point to point communications protocol may be employed. Alternatively a publish and subscribe protocol may be used in which case ARC simply publishes the new message for example with a subject such as Deliver Store Message.DART on network transport . Each DART may subscribe to Deliver Store Message messages.

In this publish and subscribe system each ARC element and each DART connected to network transport receives the new message. Likewise in this example the DART will make a storage decision based on for example the DEVICE TYPE DESTINATION ADDRESS or ORIGINATION ADDRESS associated with the message. In this example both ARC and DART have subscribed for these messages and both process the message. The message processing by DART and ARC occurs in parallel. DART may then publish the message on backbone data store transport .

There may be many MDS elements listening for these published messages but only one is configured for the subscriber. MDS stores the message at the direction of DART as the DART issues an MDS STORE.MDS on the Backbone DataStore Transport . DART may also publish a Confirm Store message along with the transaction ID for this message on network transport bus . ARC is listening for this message and once it is received ARC may transmit this confirmation status to the originator of the message.

In another example a wireless subscriber may access a message that has already been sent to a destination and can for example resend forward query or delete this message. In this example a wireless subscriber sends a request to see the contents of his message mailbox. This request is sent via ARC to network transport . ARC publishes the request on network transport . ARC may append the address of a specific DART to the published request in which case a point to point protocol is used. Alternatively ARC may simply attach a subject such as Read Mailbox to the published request without a specific element identified in which case a publish and subscribe protocol is used.

The DART associated with the particular subscriber or device processes the request. DART has subscribed to any query request and therefore receives the request from network transport . DART then republishes this request on backbone data store transport . While all of the MDSs may be listening for these types of messages only one MDS in this case MDS processes the query request. MDS receives this request because the wireless subscriber who sent this request has his information stored on MDS . DART may use a point to point protocol addressing the request specifically to MDS . Alternatively DART may use a publish and subscribe protocol in which case the request is published on backbone data store transport and each MDS listens for the request. Only the MDS associated with the subscriber in this case MDS processes the request. MDS then publishes the information about this wireless subscriber on backbone data store transport . DART receives the information about the wireless subscriber from backbone data transport . DART then publishes this information on network transport with addressing specified for ARC in a point to point protocol. Alternatively DART may employ a publish and subscribe protocol. Since ARC has subscribed for this message it receives the information about the wireless subscriber performs any translation functions that may be necessary and displays the results to the wireless subscriber. In that manner information stored in MDS can be retrieved and forwarded to a wireless subscriber.

In yet another example of the operation of an exemplary embodiment of the present invention a wireless subscriber may submit a request to cancel a message that is set for delivery. In that case a wireless subscriber has received information about his current pending messages. The subscriber sees one message that is marked for delivery that he wishes to cancel so he sends a cancel message request. This cancel message request is sent from ARC over network transport bus . ARC transforms the cancel message request into a request that is published on network transport . This published request for example may contain the transaction ID the subscriber ID and the device type. ARC has subscribed to any cancel message requests. ARC receives this cancel message request and converts it into the proper format for the other elements of the wireless network. Both ARC and DART are listening for this request. DART then publishes this request on backbone data store transport . Each MDS listens for these types of requests. MDS responds to the request because MDS has this particular wireless subscriber s data stored in its data storage mechanism. After MDS receives the request MDS returns the requested data and publishes it on the backbone data store transport . MDS may then delete the message. DART receives the requested data and publishes the requested data on network transport . ARC since it subscribes to this requested data receives the requested data performs any translation functions and returns the requested data to the wireless subscriber.

In still yet another example a wireless subscriber may wish to access a message from an external IMAP POP client. A wireless subscriber s user name and password may be used for validation. The RAVE entity may be responsible for validating the particular wireless subscriber. A wireless subscriber sends a request to retrieve external messages from an IMAP POP mail server. This request is received by ARC which may in turn perform translation functions. After any translation functions ARC publishes the request on network transport . The request may be published in the form of an update message request.

DART subscribes to such update message requests. DART receives this update message request. Upon receiving this update message request DART publishes on network transport a get subscriber mail information request. RAVE subscribes to get subscriber mail information request messages and receives this message. RAVE searches applicable databases such as RVDB for appropriate wireless subscriber information. RAVE then publishes this information on network transport . In this manner RAVE places on network transport various information about a wireless subscriber such as the wireless subscriber s user name alias preferences and possible destination addresses.

DART subscribes to the information placed on network transport by RAVE . DART receives this information and in response publishes a get external e mail request on network transport . ARC is associated with an IMAP POP server not shown and to that extent ARC may perform various translation functions for the IMAP POP server. ARC subscribes to get external e mail requests and therefore receives this request and its accompanying information and forwards the request to an IMAP POP server not shown which retrieves the information from an external storage device. This retrieved information which for example could be an e mail message is received by ARC for any necessary translation. After ARC performs necessary translation functions on the external mail message ARC publishes this email message on network transport .

In this example DART subscribes to such external mail messages. DART receives the external message from network transport and publishes the external mail message on backbone data store transport . All of the MDSs listen for external mail messages such as that placed on backbone data store transport by DART . MDS contains information about the wireless subscriber and therefore receives the external mail message attributable to that wireless subscriber. MDS receives the external mail message from backbone data store transport . MDS then updates its data storage with the external mail message that it received from backbone data store transport . The wireless system may be configured such that one DART subscribes to new message requests while another DART subscribes to update requests.

After MDS has received the last external e mail message DART may then publish on network transport a sub messages POP message which may also contain subscriber identification. ARC subscribes to receive this type of message which would contain the information about the external mail message. Accordingly in this example ARC receives this information and the accompanying external mail message performs any translation that may be necessary and then returns the external mail message to the wireless subscriber.

In another example a class of service associated with a message may not allow the body of the message itself to be read. In such a case ARC may return only a description of the message. For example a wireless subscriber may request that a ring tone be forwarded from an external IMAP POP server. In such a case ARC receives this request and through the previously described method publishes a request on network transport . A field associated with this message may indicate that it is a proprietary ring tone. If this is the case ARC may return to the wireless subscriber a message indicating that the proprietary ring tone may not be forwarded.

In yet another example a DART entity may allow a wireless subscriber to POP a message through an external IMAP POP client. A wireless subscriber may be able to download an external message description or the whole message itself based on an associated class of service code.

In this example a wireless subscriber requests a description of all messages stored on an IMAP POP server. ARC receives this request and transforms it into a publish request which is published on network transport . DART has subscribed to this publish request and receives the request from network transport . DART transforms this request into a query that is then published on backbone data store transport . In this case MDS has subscribed for queries and receives the query from backbone data store transport . Upon receiving the query MDS processes the request to return the subscriber s messages. For example MDS may be able to receive a query from backbone data store transport and through associated functions search its associated database or databases for contents relevant to the query.

MDS contains all messages associated with the wireless subscriber. MDS after processing the query returns the information to backbone data store transport . DART has subscribed to receive this information and receives it from backbone data store transport . DART may then forward this information to network transport . ARC associated with an IMAP POP server has subscribed to receive this information. After receiving the information ARC transforms the information to POP responses and forwards them through the server to the IMAP POP client of the wireless subscriber.

In yet another example of the operation of the communications system a wireless subscriber may receive a value added message. A value added message service generates a new message for a subscriber. The value added message service may need confirmation of message delivery so that the wireless network provider can bill the wireless subscriber. As such a short message peer to peer primitive with a registered delivery flag is sent to ARC . In this example ARC extracts the destination address origination address and any additional information necessary and then publishes a subscriber look up on network transport . If any passwords are required for a destination or distribution list then these can also be sent in a query published on network transport . RAVE has subscribed for these subscriber look up requests. RAVE receives the look up requests and performs an alias look up and a validation request to connected routing and validation databases and user alias databases. This alias look up and validation request may be performed using a publish and subscribe protocol or any other convenient protocol.

RAVE then publishes the extracted list the associated device types any disallowed destinations and any other pertinent information to the originating ARC in this case ARC in the destination field. RAVE publishes this information on network transport with its destination as ARC . In another aspect RAVE publishes that information on network transport with a subject to which all ARCs subscribe. RAVE may use a publish and subscribe protocol to communicate with ARC and other ARC entities. ARC has subscribed to this information and receives the list device type disallowed destinations and other information and proceeds to publish on network transport the message data with the extracted destinations and associated device types ARC may also return failed destinations to the originating value added message service.

DART and ARC have subscribed for this message. For example a device type of SMSC associated with ARC may be included in the destination. ARC may then convert this message to an SNPP and perform any transformations required based on message type device type and SMSC type. DART via backbone data store transport may then publish this message to MDS for storage. MDS stores the message. MDS may return the confirmation of storage by publishing it on backbone data store transport . DART by subscribing to confirmation messages receives the confirmation and publishes it on network transport . ARC by subscribing to this type of confirmation message receives the confirmation message from network transport . A confirmation is then forwarded from message data store transport via backbone data store transport DART and network transport to ARC via a publish and subscribe protocol point to point protocol or any other convenient method.

The SMSC acknowledges receiving the SMPP message and returns an acknowledgement. ARC associated with the SMSC publishes this acknowledgement on network transport . DART listens for this acknowledgment and based on the originating address adds this acknowledgement to the stored transaction in MDS . This can occur for example by DART receiving from network transport the acknowledgement and then publishing the acknowledgement on backbone data store transport . MDS because it subscribes to the acknowledgment associated with this particular wireless subscriber receives the acknowledgement and adds it to the stored transaction.

MDS may then return a completed transaction message by publishing it on backbone data store transport . DART may then receive this completed transaction message and publish it on network transport . The completed transaction message may then be received by ARC associated with the SMSC. In this manner the SMSC can receive confirmation of delivery and generate a receipt. This receipt may then proceed through ARC to network transport . ARC after performing any necessary translation functions may publish the receipt on network transport . DART has subscribed to receive the receipt published on network transport . DART after receiving the receipt publishes it on backbone data store . MDS because it is associated with a particular wireless user adds the receipt to the message transaction. The status of the message can be updated in MDS

At stage a DART element receives a request from the network transport bus. This request may be specifically addressed to a particular DART in a point to point protocol or may contain a subject header in a publish and subscribe protocol. Upon receiving the request the DART element then determines which function to execute. At stage the DART element determines whether the request is a store request. Typically a string of characters in the request heading or the request itself denominates the type of request. For example a request containing the string DELIVER STORE indicates that the request is to deliver a message and to store it. In another example the string STORE contained in a request indicates to a DART entity that the request is a store request.

If the DART entity determines that the request is a store request then the DART entity performs a store function as indicated in stage . If the request is not a store request then the DART entity proceeds to stage to determine if the request is a query request. Like the store request the DART entity examines the request for example for the string QUERY. If the request is a query request then the DART entity performs a query function as depicted in stage . If not the DART entity proceeds to stage to determine if the request is a cancel request. If it is then the DART entity performs a cancel function as depicted in stage . If not the DART entity as depicted in stage determines whether the request is an external mail request. If it is then the DART entity performs an external mail function. If not then the DART entity as illustrated in stage determines if the request is any other type of request. If it is then the DART entity performs the requested function. Otherwise the DART entity performs an error handling function.

In this manner the DART entity determines the type of request and performs the associated function. is merely an example of a few different types of functions performed by the DART entity as many other functions are within the scope of the present invention. For example the DART entity may perform specific lookup requests by accessing an associated MDS and returning specific data. Likewise in error handling stage the DART entity may perform several different error related functions for example reporting an error to other network entities such as the LAMB.

At stage the DART determines whether the request contains a DART specific address. For example a request may contain a subject followed by a specific DART address such as . . . STORE.DART . . . . In this case the specific DART address is DART which indicates that the request is directed specifically to the addressed DART DART. If the request does not contain a specific DART address then the request is assigned to an available DART entity. In alternate embodiments the first DART to receive the request processes it. In yet another embodiment the assignment of a request to a DART may be based upon real time loading information. If the request contains a DART specific address then the addressed DART reads the request as depicted in stage .

Likewise after a request is assigned in stage a DART reads the request in stage . The DART then parses the request as illustrated in stage . In parsing the request the DART may strip out a subject heading addressing information and message content. The flow then proceeds to the determination of the function request explained with regard to .

The DART accomplishes the assignment function in any of a number of ways. For example the DART may store the message on an MDS that contains the messages for a particular subscriber. If the message header content or appended information contains a specific MDS address then the DART as illustrated in stage places the message on the backbone datastore transport. Likewise after assigning an MDS in stage the DART places the message on the backbone datastore transport as depicted in stage . The message is received and stored by the designated MDS in stage . In stage the MDS stores the message and any accompanying information in a storage device.

In stage the DART produces a confirmation message and publishes it on the network transport. For example in the case of a store request the DART produces a confirmation message indicating that the message has been stored. In exemplary stage the DART receives from the network transport an update message request. In one embodiment of the present invention this update message request may contain delivery information for the message. For example if the message is the subject of a DELIVER STORE request then a delivery confirmation may accompany the update message request to indicate that the message has been delivered. In stage the DART places the update information on the backbone datastore transport. In stage the same MDS that stored the message receives and stores the update information.

The DART accomplishes this function in any of a number of ways. For example the DART may query the MDS that contains the messages associated with a particular subscriber. If the request header content or appended information contains a specific MDS address then the DART as illustrated in stage places the request on the backbone datastore transport. Likewise after determining which MDS to query in stage the DART places the request on the backbone datastore transport as depicted in stage . The request is received by the designated MDS in stage . In stage the MDS accesses the requested information from a storage device. In stage the requested information retrieved from the MDS is placed on the backbone datastore transport. In stage the DART receives the requested information and in stage places the requested information on the network transport.

Likewise after determining which MDS contains the message to be canceled in stage the DART places the request on the backbone datastore transport as depicted in stage . The request is received by the designated MDS in stage . In stage the DART updates the corresponding record in the MDS with the cancel message information. For example the DART in accessing the MDS with the particular message may delete the message from the MDS or may store information on the MDS indicating that the message is a canceled message. In stage the DART generates a confirmation message. This confirmation message for example contains information indicating the successful cancellation of the message. In stage the confirmation message is placed on the network transport.

After sending the get external mail request the DART receives the external mail from the network transport in stage . In stage the DART places the external mail on the backbone datastore transport and in stage the MDS receives and stores the external mail. For example the DART may direct storage of the external mail on an MDS that contains other messages associated with a particular subscriber. In stage the DART determines if there is additional external mail that needs to be received. If so then the DART receives the external mail stage places it on the backbone datastore transport stage and stores the mail in an MDS stage . If in stage no additional mail exists then the DART places a sub messages popped message on the network transport as depicted in stage . The DART in stage places the external mail messages on the network transport.

The network detects the proprietary nature of the requested file in stage . This detection occurs for example when the incoming ARC reads the origination address of the download and accesses a database of known providers of proprietary files. In a further aspect of the invention the RAVE or DART entities may read the origination address and compare it to addresses of content providers for example stored in an RVBD UADB or MIND database. In another example the network provider may have agreements with third party content providers under which the proprietary nature of a download is communicated to the network. This communication can be appended to the download itself or can be sent separately for example with a transaction identifier. In another embodiment the various entities of the network such as the ARC RAVE or DART may strip off a header from the incoming downloaded file parse out information in that header and determine that the download is proprietary. In yet another aspect of the invention the content of the download itself may be checked for proprietary material against a set of commonly known proprietary objects.

The network itself may have access to a content provider s proprietary ring tones so that they can be compared to ring tones being downloaded by subscribers. In such a case an incoming ARC is capable of detecting ring tone files and converting them into a standard format such as MIME or XML. In other embodiments of the invention other network entities such as the DART or the RAVE may be capable of ascertaining that a particular downloaded file is a ring tone file.

In stage the incoming ARC translates the proprietary file into a common format such as MIME or XML. This translation function is performed so that the file can be stored in a database residing within the network. For example as depicted in stage a DART entity stores the converted downloaded file and accompanying information in an MDS. The file is stored in the MDS associated with a particular subscriber or device. The file may be stored in a field in a table of a database. Various storage methods previously described implement the routing and storage of the proprietary file. For example the ARC that translates the file into a common format may publish the file along with subject information on a network transport. A DART associated with that type of file or device or that particular subscriber receives the file from a network transport. The DART then stores that file along with accompanying information in an MDS. As noted the routing of the file from the ARC to the MDS may occur with a publish and subscribe protocol or with a point to point protocol.

In stage a flag contained in an MDS is associated with the file. This flag for example may be a flag that denotes that the file is copyrighted. In this manner a copyright flag contained in an MDS database can be set to indicate that the file is copyrighted. The data structure may be implemented to contain a copyright flag. In another embodiment the message class portion or the class of service portion of the message store table may be used to indicate that a file is proprietary. The file and associated flag for example are stored together in the same database along with other message information. For example a DART associated with the MDS containing a particular subscriber s messages stores the proprietary file in common format in the message store stable. The DART in this example also stores information about the message in the fields depicted in the tables. For example the DART stores a description of the file a transaction identifier the number of segments and other information associated with the file in the message store table. In a similar manner the DART stores device type information in a message portion of a device status table. In this embodiment of the invention the file itself along with accompanying identifying information is stored in an MDS.

As shown in the examples of stages and when a subscriber attempts to access the proprietary file stored in an MDS the network limits the access to that file. In one embodiment of the invention the DART entity recognizes the proprietary or copyright flag associated with the file and sends a communication directing other elements of the network to block certain functions such as the forward function. For example a subscriber may have purchased the use of a proprietary file for a particular device. The subscriber stores the file in the network and accesses it from that particular device. The device could be a pager cellular phone personal computer or any other device that interfaces with the network. As such the device may have the capability of forwarding messages. If the subscriber attempts to forward the message from one device to another the forward function is blocked by the network. In this manner the network preserves the proprietary nature of the file. This blocking is accomplished for example by network elements such as the ARC RAVE or DART that recognize the proprietary or copyright flag associated with the file. In such a case these elements block certain functions such as send forward or copy so that the proprietary file is not duplicated.

In other embodiments other network entities may be tasked with limiting access to the proprietary file. For example the outgoing ARC may recognize the proprietary or copyright flag and block certain functions. In one example a subscriber seeks to access a proprietary file from a personal computer connected to the Internet. The subscriber accesses the network via the Internet. As previously described a subscriber can list messages stored in an MDS on a web page displayed on that subscriber s personal computer. In one embodiment of the invention a proprietary file may only be listed by name on the displayed web page with a notice that it is improper to copy the file. The web page may thus limit the subscriber access to the file. For example a subscriber may only be able to view the file and not copy it. In this manner a read only copy of the file may be transmitted from the MDS through an associated DART through an ARC for translation and out to a web page. In another embodiment the web page may block other functions such as the forward or send functions.

In another embodiment a subscriber may have downloaded a proprietary ring tone to his cellular phone. Since cellular phones have a limited amount of memory the subscriber may store the ring tone on the network for example in an MDS for later use on the same phone. The subscriber using the same phone may then access the ring tone at a later date and reload it onto that phone. An MDS stores the ring tone itself and other information such as the device to which it was first downloaded. In this manner the ring tone is associated with a particular device in this case the cellular phone to which it was initially downloaded. Therefore the network in this example can limit access to the ring tone only to the phone to which is was initially downloaded. However if the subscriber attempts to load the ring tone on a different device the information stored in the MDS permits the network to block access to the ring tone by that different device. In this manner the network preserves the proprietary nature of a file.

In stage the wireless network detects the attachment. This detection may be accomplished by numerous entities of the wireless network such as an ARC a RAVE or a DART. In one embodiment an ARC entity upon receiving the message and attached file detects the presence of the attached file. In another embodiment the Mail Transfer Agent MTA or Mail Transfer Gateway MTG detects the attached file upon receipt of the message and attached file from the Internet. In yet another embodiment a DART detects the attached file in the process of storing the message and attached file on an MDS.

The detection of the attached file regardless of the entity responsible for detecting it may be accomplished in numerous ways. In one example the header of the message is read to discover that a file is attached. For example an email message may contain a Microsoft Word document as an attachment. Information about the presence of the attachment may be incorporated into the header of the email message. A network entity such as an ARC DART or MTA in this example reads and interprets the message header. In this manner the network entity detects the presence and possibly the type of the attachment. In another embodiment a network entity determines the size of the incoming message and attachment. Since many attachments are large the network entity may assume that any incoming message that is of a sufficient size contains an attachment. For example an email message may contain a picture attachment that is two megabytes in size.

The network entity such as an ARC DART MTG or MTA that receives the email message and attachment may be able to estimate the size of the attachment. In yet another embodiment a network entity may read the attachment itself to discover its type. In this example the ARC that receives the message and attachment converts both into a standard format such as MIME or XML for storage on the network. The receiving ARC in translating the attachment reads the type of attachment. For example an ARC that receives an email message with a Microsoft Excel spreadsheet as an attachment converts that email message to a common format. In addition that ARC or another ARC that specifically handles an attachment of that type converts the attachment to a common format for storage in an MDS.

In yet another embodiment of the invention a network entity such as an ARC RAVE DART MTG or MTA detects the type of attachment. In this example a message with an attachment is received by a network entity. That network entity detects the attachment type for example by reading the message header reading the message itself reading the attachment reading information associated with the message reading information associated with the attachment or in any other convenient method. In this example the network ascertains the type of attachment so that it can be sent to the proper forwarding address.

In stage the wireless network accesses the subscriber s information for a forwarding address. In this example a network obtains the forwarding address from a database residing on the network. For example a RAVE entity may access a UADB or RVDB for the forwarding address associated with that subscriber.

In one aspect of the invention a subscriber is able to associate different forwarding addresses with different types of attachments. For example a subscriber may associate a fax machine for attachments that contain text and a color printer for attachments that contain pictures. The attachment may be automatically forwarded back or pre programmed instructions. In another embodiment a subscriber may be able to designate a forwarding address after being notified by the network that he has received a message with an attachment. In this manner the network may inform the subscriber possibly on his wireless device that he has received a message with an attachment of a certain type. The network via one or more of its entities may then prompt the subscriber for a forwarding address. This address can be in the form of an alias stored in an database residing on the network. For example a subscriber is sent a message with a database attachment. The network informs the subscriber of the message and the attachment type and prompts the subscriber for a destination address. This prompt for example appears on the subscriber s pager. The subscriber sees the prompt and enters as a forwarding address the alias fax. The wireless network recognizes the alias fax as a specific address associated with the subscriber s fax hook. In one embodiment the wireless network accesses a subscriber s profile information stored in a UADB RVDB or MIND and retrieves the forwarding address associated with the alias fax. The attachment is then forwarded to the subscriber s fax hook.

In stage a DART entity stores the message and attachment in an MDS. In one embodiment of the invention the message and attachment converted into a common format by an ARC is published on a network transport. A DART associated with the subscriber for example receives the message and attachment and then stores it in an associated MDS. As detailed previously the message may occupy one portion of an MDS the attachment may occupy another portion of the MDS and accompanying information may be associated with the message and attachment in the MDS. For example the attachment type may be stored in the MDS along with the attachment.

In stage the message and attachment are sent to the forwarding address. In one aspect of the invention the message and attachment are retrieved from an MDS and published on the network transport by the DART with a forwarding address. An ARC receives the message attachment and forwarding address and performs translation functions. The receiving ARC is associated with the particular device to which the message and attachment are forwarded. For example the network may contain an ARC that performs translation functions associated with a fax machine. In this manner an attachment may be converted by an ARC from a standard format such as MIME or XML into a format suitable for a fax machine. In this case the subscriber is forwarding the attachment to a fax machine. After translation the ARC for example sends the translated attachment to an MTA along with the forwarding address. The MTA may then send the attachment in a suitable format to the fax machine.

In an alternate embodiment of the present invention an attachment may be held in the MTA and not translated into a common format. For example an incoming email message with an attachment may be stored temporarily in an MTA. The message itself may be sent to an ARC for translation. The message but not the attachment is processed by the network. An ARC receives the message translates it and places it on a network transport for example with a validation request. A RAVE receives the validation request and validates the destination address for the email message. The email message is properly addressed to a subscriber s wireless device. The RAVE returns a validation response to the network transport possibly with the originating ARC as the destination for the response. In this manner the communication between the RAVE and the ARC may be based on a point to point protocol. In another embodiment the RAVE may simply publish the response on the network transport with a subject such as validation response. In a publish and subscribe protocol all ARCs connected to the network transport subscribe to the subject validation response and all ARCs look at the response. The originating ARC receives the response after looking at information the response contains and confirming that the response is intended for it.

After receiving the validation response the originating ARC publishes on the network transport a message with the subject get forward address. This message is received by a RAVE. The RAVE accesses the subscriber s profile stored for example in a UADB or RVDB to obtain an address to forward the attachment. The RAVE returns the address to the originating ARC. The ARC passes the address to the MTA so that the MTA can forward the attachment to the subscriber s specified forwarding address. The attachment is not stored within the network but is instead sent to a device at a forwarding address.

In stage the subscriber receives an acknowledgement that the attachment has been forwarded. The network has forwarded the attachment and generated an acknowledgement message. This acknowledgement message is sent to the subscriber for example on his wireless device. In another embodiment of the invention a subscriber may be able to designate the type of acknowledgement he receives as well as the destination for that acknowledgement. The subscriber may receive an acknowledgement message on his wireless device and also at his personal email account. In yet another aspect of the current invention the acknowledgement message may contain information about the attachment the successful receipt of the attachment by the device to which it was forwarded or any other relevant information. In another aspect of the invention the subscriber may not receive an acknowledgement message.

RAVE interfaces with DART through network transport bus . RAVE interfaces with RVDB and RVDB through BITBUS . Network transport bus for example acts as a communications channel between DART and RAVE . Likewise BITBUS acts as a communications channel between RAVE and RVDB as well as RVDB .

RVDB and RVDB interact with RAVE via BITBUS . RVDB and RVDB are also interconnected to RAVE and UADB via BITBUS . BITBUS serves as a communications channel between RVDBs and and RAVEs and as well as UADB .

ARC interfaces with DART via network transport bus . ARC is interconnected to RAVE through network transport bus . Network transport bus serves as a communications channel between ARC and DART as well as RAVE . Additionally ARC interfaces with short message service center . In one embodiment of the present invention short message service is responsible for delivering messages to mobile devices using a store and forward approach.

MTG serves as an e mail gateway to a data network. All inbound and outbound customer internet traffic may use mail transfer gateway .

MTA may support SMTP and communicate with other MTAs not shown and other e mail servers not shown to send and receive mail messages to and from the Internet. MTA may reside outside of a network firewall depicted by firewall . In this manner firewall serves to protect the remainder of the messaging network infrastructure .

In one embodiment consistent with the principles of the present invention MTA may perform validation on origination addresses from a RAVE entity such as RAVE while also performing White list and Blacklist lookups. MTA may perform some or all of the validation procedures that for example RAVE may be capable of performing. MTA may utilize one or more database protocols to validate and readdress e mail messages.

MTA may perform validating functions using data stored in UADB . UADB is a replicated database which contains a complete set or a subset of data contained in for example the MIND database shown in . In this example UADB which is a replicated database provides customized message handling information on a per subscriber basis. UADB may contain for example customer aliases White lists Blacklists distribution lists language filters message formatting options and other aspects of a subscriber s profile. Subscribers may be able to update their profile via an Internet portal through the subscriber configuration API or through other means. Consistent with the technology UADB may receive updates from other network databases.

Data contained in UADB may be stored in a database contained within MTA . In that example UADB either may not be present or may be incorporated within MTA . MTA may be capable of storing permanently or temporarily or caching subscriber information. In another embodiment of the present invention MTA and UADB may be separated by firewall for security purposes.

MTA may also provide anti spamming functions. For example MTA may include the capability to allow or bar specific Internet IP addresses domains and hosts from delivering e mail to MTA . In this example MTA may be capable of silently dropping incoming e mail messages without further delivery requirements. MTA may be capable of filtering reducing or eliminating unwanted and unsolicited e mails from reaching messaging subscribers.

MTA may support many different anti spamming techniques. For example MTA may be capable of validation based upon a sender s e mail address. In this manner MTA may be capable of blocking spam messages from a particular e mail address. Further MTA may be capable of limiting the number of connections made by a host per second. Further MTA may be capable of accessing a national database of known spammers or other content protection databases. MTA may be capable of accessing a system wide Blacklist to deny service to purveyors of spam. MTA may be capable of protecting existing domain names of a particular messaging provider. Further MTA may be capable of determining and blocking spamming by use of war dialing attacks. In addition MTA may be capable of detecting spam messages based upon the content of an e mail using a list of regular expressions. MTA may be capable of detecting previously unidentified spam messages based upon the volume of similar e mail from an originating address. Further MTA may be capable of verifying the text of an e mail for spamming by using a check sum or a counter for e mail text that is processed for example by removing white space by converting e mail text to lower case or by common keywords.

In a further embodiment of the present invention a messaging subscriber may be capable of altering his user profile to avoid receiving spam e mail messages. MTA may allow a user to format the messages he receives. For example a messaging subscriber may not wish to have the header of a text message or e mail displayed on his messaging device and may specify such. Other configuration options are within the scope of operation of MTA . For example a messaging subscriber may also be able to configure the messages he sends so that they are also displayed on a receiving device in a particular format.

In a further embodiment of the present invention a messaging subscriber may be able to configure a user profile so that he receives message segments typically limited to 160 characters one at a time. This may be advantageous because messaging subscribers are typically charged for each segment received. A messaging subscriber who receives the first segment of a multi segment message may not wish to receive subsequent segments. Thus by altering the user s profile MTA may provide that a messaging subscriber receives only the first message segment of a multi segment message.

In a further embodiment of the present invention MTA may support and host multiple domain names with each domain providing separate mail handling capabilities. For example a domain name may be associated with a certain set of mail handling rules. These rules for example may include stripping the header information from an e mail message supplying only the text of an e mail message with sender information replacing a sender address with an 18 digit address replacing the entire message text with a canned message depending upon the address of the sender or any other mail handling process. Thus MTA allows the subscriber to get rules for receipt of e mail based on the origination address.

MTA may provide the ability to allow mobile devices or messaging devices to reply to e mail messages. An exemplary embodiment of MTA may enable a reply to all functionality for a two way messaging data device. In a further example MTA may support delivery and read receipts of e mail messages. In yet another embodiment of the present invention MTA may be capable of handling replies to messages that are addressed to a group.

In one example when an e mail is received the originator s address may be captured by MTA . This origination address may be sent via ARC to network transport bus . The final destination may reply to this e mail. Network transport bus may then be configured such that this reply message is delivered to the originating MTG such as MTG . MTG could then extract the original e mail address and forward the e mail to MTA . From this point MTA may forward the e mail through firewall to the Internet .

In yet another further embodiment of the present invention MTA may provide the ability to allow a mobile device to send the same message to multiple recipients. In this manner a messaging subscriber may be able to define a distribution list which may be stored in UADB or its replica for use by MTA in sending an e mail to the Internet . A messaging subscriber s distribution list for example could be a numeric list an alphanumeric list or any other type of list. For example a messaging subscriber may denote a particular word that can be associated with various destination addresses. These destination addresses could correspond to messaging devices standard Internet e mail addresses or any other message receipt location. In this example when a messaging subscriber uses the specified word in sending an e mail message that e mail message could then be sent to all of the destination addresses associated with that word. A messaging subscriber could denote the word home to be associated with three different destination addresses. In this example when the messaging subscriber sends a message to home that e mail message would go to the three associated destination addresses set forth in the definition of the home group. These destination addresses may correspond to any number of similar or distinct devices.

In a further embodiment of the present invention MTA may provide the ability to readdress outgoing e mail based upon a subscriber s alias preference which may be contained in UADB . For example a messaging subscriber who sends a message from his messaging device may wish to have that message appear as though it came from a different origination address. In this manner an e mail sent from a particular messaging device may appear to its recipient to have been sent from a different device for example a personal computer instead of that user s interactive pager.

MTA may support standard e mail protocols such as SMTP LDAP IMAP or any other e mail protocol. Further MTA may support standard API interfaces such as MAPI.

MTA may be capable of returning various routing information about e mails. For example MTA may provide alias look up or extraction of destination addresses for a given alias. MTA may interface with UADB or its replica in order to perform this look up or extraction function. In another example MTA may be capable of looking up a distribution list. This distribution list may be stored within MTA within UADB or in any other network database. In addition MTA may provide e mail addressing as well as alias or types of aliases. In a further embodiment MTA may be capable of extracting validation information for a given destination address. MTA may perform this extraction function by looking up validation information on a database such as UADB .

MTA may provide an appropriate return message to a sender s e mail address depending upon a particular error condition and in this manner provide error handling functions for SMTP and other protocols. In a further aspect of the present invention MTA may be capable of informing the originator of an e mail of negative acknowledgements for example by a messaging device or by an Internet e mail. Further MTA may be capable of sending error messages received from the Internet back to the originator of the e mail message. These error messages may include for example the cause of the error the destination and the original message body. MTA may also be capable of sending a notification to the e mail originator that a certain operation such as a forward or fax operation has not been successful.

We prefer that MTA contain processing rules. For example MTA may administer White lists and Blacklists based on user preferences. Mail transfer gateway may also provide the capability of creating and managing a system wide Blacklist for example to control spamming. Mail transfer gateway may also provide the capability of creating and managing a system wide White list.

In one embodiment of the present invention mail transfer gateway may be capable of specifying a future delivery time for e mail messages. For example e mail messages may be delivered to subscribers as they arrive at MTG . MTG may submit e mail messages to network transport bus sequentially. In this manner e mail messages may be queued up in the messaging network for transmission to messaging subscribers. In another embodiment MTG may be able to schedule delivery times to messaging subscribers. In this manner an e mail message received by MTA may not be delivered immediately to network transport bus but rather schedule delivery at a specified time. A messaging subscriber may be able to specify these delivery times.

MTA may support virus detection and cleansing for messaging devices. Further MTA may be capable of blocking specific types of messages from unknown sites or from specific sites. MTG may support multiple NIC cards for additional security. In addition to firewalls and other security measures may be implemented with MTG .

MTA may provide the ability to forward a message and an accompanying attachment to an e mail address fax server or other device. This function is useful if a receiving device is not able to provide adequate viewing capability for an attachment. The user may send the e mail attachment or the e mail along with the attachment to another device to be viewed printed or stored. MTA may be capable of providing this forwarding function.

In a further embodiment of the present invention MTG may provide multiple interfaces between MTA and various ARC RAVE and LAMB entities. A single MTA such as MTA may interface with multiple RAVE ARC and LAMB entities. MTA may support LDAP work across a firewall and use multiple LDAP connections for redundancy.

MTG and its subcomponent MTA may support various protocols. For example MTA may be utilized in conjunction with multiple WEGs and may support SMTP to SMPP conversion as well as connection to SMSCs. Further MTA may support transformation protocols such as for example SMTP SMPP XML or any other convenient protocol. In a further embodiment of the present invention MTA may be operational via a Telnet port. Further MTA may implement a secure log in procedure.

ARC and ARC may forward e mail messages to network transport bus . In one configuration the delivering ARC such as ARC may be aware that these are e mail destined messages and format them accordingly. For example ARC and ARC may extract a destination address extract a subject and extract the body from the text payload of an SMS message. For SMS messages the e mail destination address as defined in Internet standards may be the first continuous set of alphanumeric characters of the message up to the first space or blank. In this manner ARCs and may be able to parse out a destination address from an e mail.

ARCs and may be capable of formatting an e mail message based on the final destination device type. If a device is an SMS handset that does not support concatenated messages then ARC or ARC may split the message into segments or truncate the message. If the e mail message is segmented then a segment identification number maximum number of segments and current segment may be included in each message for delivery. In this manner an ARC such as ARC may be capable of formatting a segmented message as well as handling multiple segments of a multi segment message. If a messaging device does not support e mail attachments then an ARC such as ARC may include a remark indicating the number and type of attachments. In this manner the ARC entity such as ARC may be capable of handling message attachments based on particular device types.

If the frequency does not exceed the specified limits then the MTA determines if the message is a spam message based on its content as illustrated in stage by searching for common words and phrases that may indicate a repetitious message. If the MTA determines that the message is spam based on its content then the message is not delivered and access is denied as shown in stage . If not then the flow proceeds to stage in which the MTA performs formatting functions.

In an exemplary embodiment of the present invention the Master IT and Network Database MIND is responsible for providing subscriber information to other network elements. The subscriber information for example can be used for routing messages for the validation of services and for enabling other data services.

In one embodiment of the present invention the MIND may function to centralize existing short message service center subscription databases. In addition the MIND may provide database replication and distribution. The MIND may be capable of receiving in bulk existing subscriber data including for example distribution lists black lists white lists and alias addresses. The MIND may also support interaction with a Routing and Validation Entity RAVE . MIND may support LDAP as required by other components of the wireless infrastructure .

Consistent with the principles of the present invention one embodiment of the MIND may act as a central storage database for account information device information network information messaging attributes and various other information pertinent to wireless communications. The MIND serves as a centralized storage point for various wireless subscriber information in a wireless network architecture.

MIND is scalable redundant and expandable. The MIND may be comprised of a single database or a series of interconnected databases. The MIND may be located in any convenient location so that it is accessible by other elements of the wireless network infrastructure . Various database architectures may be used to implement the MIND. These architectures are within the scope of knowledge available to one skilled in the art.

Web interface is accessible by subscribers via communications channel . Communications channel may comprise either a cable based or wireless Internet communications channel. For example wireless subscribers may be able to interface via web interface with IT business logic and MIND database via a web page on a personal computer. Alternatively wireless subscribers through wireless communications channel may be able to interface with web interface and IT database business logic to alter various fields in the MIND database . A user friendly web interface may be provided for wireless subscribers to configure personal profiles. Web interface may include applications that utilize subscriber information such as a customer self management site.

In an alternate embodiment of the present invention wireless subscribers via web interface may be able to alter a user profile comprising fields of a replica of MIND database . In this manner wireless subscribers are blocked from direct access to the centralized storage facility of MIND database . Incremental and bulk update methods described below may then be used to update MIND database from one or more of its replicas.

Data service application in the exemplary embodiment of may communicate with MIND via web interface and IT database business logic . Alternately data service application may interface with MIND database via IT database business logic . Data service application may be a third party application that provides data services to wireless subscribers . These data applications may include targeted information alerts instant messages location based services or other services. Data service application provided by a third party may use user profiles stored in MIND for their data services operations. In this example a customer may be able to use the same credentials for user profile information to access all data services offered both by a wireless provider and a third party. For example a username and password may be applicable both to a wireless service provider as well as a third party application. Thus a wireless subscriber need only use a single username and password to access services of both a wireless service provider and a third party.

In an alternate embodiment of the present invention data service application may interface with a replica of MIND database . This replica may contain all or a subset of subscriber information contained in the fields of MIND database . Information such as wireless device type and other user preferences may also be used by data service application in order to configure the appropriate execution of a data service application.

In one exemplary embodiment of the present invention provisioning system interfaces with information technology database business logic. Provisioning system may also interface with a backbone provisioning transport . In this example provisioning system receives automated notifications of updates to subscriber information and relays those updates to replica databases through a data distributor not shown . In this manner provisioning system serves as a portion of the information technology infrastructure used to update replica databases such as network subscriber data replica .

In this example backbone provisioning transport interfaces with provisioning system . Backbone provisioning transport may also interface with network database business logic adapter . Backbone provisioning transport acts as a bus for the transfer of data contained in the MIND database to replica databases such as network subscriber data replica .

Network database business logic adapter interfaces with backbone provisioning transport. Likewise network database business logic adapter interfaces with backbone integration transport . Network database business logic adapter uses business rules and an application programming interface to access subscriber databases in the network. The business rules and application programming interface of network database business logic adapter may be common with those of IT database business logic . In an alternate embodiment the business rules and application programming interface of network database business logic adapter may be different than those of IT database business logic .

Backbone integration transport communicates with network database business logic and . In alternate embodiments of the present invention any number of network database business logic modules such as network database business logic may be connected via bus connectors to backbone integration transport . Backbone integration transport is a bus that is used to integrate applications and network elements across the network.

Network database business logic communicates with RVDB . Network database business logic interfaces with network subscriber database replica . Network database business logic interfaces with network data distributor database . Network database business logic and may each contain business rules and application programming interfaces that can be used to access subscriber databases in messaging infrastructure .

Network data distributor may contain data structures and content that represents wireless subscriber information also contained in the MIND database . In this manner network data distributor may be a replica of all or a subset of the data contained in MIND database . In this configuration network data distributor may be the first database in the messaging infrastructure to receive updates from the MIND database . Network data distributor relays and controls the distribution of data updates to other replicas in messaging infrastructure . Network data distributor may contain all or a subset of the data contained in MIND database .

In an exemplary embodiment network subscriber data replica database communicates with network database business logic . Network subscriber data replica database may contain all or a subset of the information contained in MIND database . In a similar manner RVDB communicates with network database business logic . In this example RVDB may contain all or a subset of the information contained in MIND database . These two databases and thus act as replicas of at least a subset of the MIND database .

MIND database network data distributor database network subscriber data replica database and RVDB may each be accessible by other components of the network such as the routing and validation entity RAVE . Likewise any one or all of these databases may be accessible by outside wireless subscribers and third party data service applications . MIND database and the replica databases and may also provide support for other network elements such as the RAVE. In one configuration the RAVE entity may interface only with one of the replica databases such as the network subscriber data replica database . In an alternate embodiment one or all of the other network entities such as the RAVE may interface directly with the central MIND database . In a further embodiment replica databases may not be necessary so that all data and information is stored in a central MIND database . In this configuration wireless subscribers third party data service application providers and other network entities such as the RAVE may interface directly with one centralized database such as the MIND database .

In one embodiment of the present invention the MIND database as well as the replica databases and may all be capable of accepting additional data fields. In this manner if a wireless provider wishes to add an additional data field for example a data field describing a feature of a new wireless device then the MIND database as well as any applicable replica databases such as can be configured to accept the new data field. In this manner the MIND database as well as the replica databases and of the example of are scalable both in the number of data fields which they can hold as well as the amount of subscriber information they contain.

An example of a situation in which a new data field may be added is when a new wireless service is added to the wireless network. The design of the data fields comprising the customer profile may be able to accommodate new services by the addition of data fields to both the MIND database and the replica databases and . The process of adding a new service may also define how the applications that manage and operate this service will be accessed. Changes to the data fields of the MIND database may allow for propagation of these new data fields or changes to other replica databases.

Subscriber databases such as the central MIND database may be located both within an information technology infrastructure and with replicas such as database throughout the messaging infrastructure . The subscriber information may be stored in various databases within the information technology infrastructure and those databases may be accessed through a set of information technology applications such as electronic bill payment and presentment functions. Within the messaging infrastructure there may be a master subscriber database such as network data distributor database and a set of replicated subscriber databases such as network subscriber data replica database . In this example network data distributor database may be the source repository for data to be replicated to other replica network databases such as network subscriber data replica database . Each replica database such as network subscriber data replica database may be a subset of the network distributor database . In this fashion network data distributor database could contain all of the data fields contained in MIND database .

In one embodiment of the present invention MIND database may contain subscriber profiles including the necessary information to enable data services. This information may then be replicated throughout the messaging infrastructure to other replica databases such as network subscriber data replica database via a publish and subscribe method. Each replica database such as network subscriber replica database may contain a subset of the information contained in the central MIND database depending on the replica database s function. For example RVDB may contain a replica of a subset of the data contained in MIND database or in network data distributor database . If RVDB is designed to interface with an entity of the network then this database may contain only a subset of the information stored in MIND database necessary for the functioning of the RAVE entity. Since the RAVE entity validates various messages the RAVE entity may not need access to all of the data fields contained in MIND database or network data distributor database . In this manner RVDB may be a specialized replica database containing a subset of data needed to perform a specific function of the RAVE.

In a further embodiment of the present invention network components such as the RAVE that require subscriber profile information may consult local replica databases such as network subscriber data replica database for faster access. For example the various entities of the wireless network such as the RAVE and the DART may wish to access data from the central MIND database concurrently. Operational efficiencies may be achieved through replica databases such as network subscriber data replica database in that various entities such as the RAVE and the DART may be able to consult local replicas rather than having to refer back to a central MIND database . For example the RAVE in initially validating incoming calls may require various data fields stored in the MIND database . If the RAVE is able to access identical data fields contained in one more replica databases then message throughput may be increased and delays may be decreased.

In a further embodiment of the present invention the MIND database or any of the replica databases such as the network subscriber data replica database may allow for the collection of usage statistics class of service traffic types of messages and other call traffic information. For example the collection of these usage statistics may be delegated to a replica database such as network subscriber data replica database or any other replica database not shown . In this manner a replica database may be tasked with collecting usage statistics so that the central MIND database is not burdened. In one embodiment of the present invention data from one of the replica databases such as the network subscriber data replica database may be passed through various components of the network back to the central MIND database . Alternatively one of the replica databases such as network subscriber data replica database may perform analyses on this usage data and then pass the results back to MIND database . In this fashion two way communication is contemplated between MIND database and replica databases and .

In a further embodiment of the present invention updates to data fields of the MIND database may be replicated to replica databases and at or near real time. Network databases such as the MIND database and replica databases and may also provide for automated management for example via a simple network management protocol.

Network data distributor database network subscriber data replica database and network subscriber data routing and validation database may each be stored on a single database component or over multiple database components. In this manner the infrastructure of the MIND database may be similar to the infrastructure of the replica databases in that any database may be stored in a single component or over multiple components and tables. In an alternate embodiment the replica databases such as network subscriber data replica database may be stored on several different tables and databases distributed throughout the network.

In one embodiment of the present invention network database interfaces with database business logic . Network database for example could be a MIND database or any one of the various replica databases such as network subscriber data replica database . Accordingly network database may possess some of the same features of the MIND database or the replica databases and previously described.

Database business logic functionally may contain various adaptors such as integration bus adaptor lightweight directory access protocol LDAP adaptor simple object access protocol SOAP adapter or any other network protocol adaptor . In this example database business logic communicates with backbone integration transport via integration bus adaptor . Likewise database business logic interfaces with an LDAP based client via an LDAP adaptor . Similarly database business logic communicates with a SOAP client via a SOAP adaptor .

Database business logic accommodates multiple adaptors for various applications or infrastructure elements. For example the RAVE component may be able to access information stored in network database using an LDAP interface to the database. Any of a number of different existing protocols may be used in conjunction with database business logic via various adaptors such as the other protocol adaptor in . For example the CORBA protocol may be used in conjunction with database business logic with a CORBA adaptor not shown .

In operation the exemplary embodiment of allows communication between various elements of the network architecture and network database . For example the RAVE entity or DART entity may be able to communicate with network database via network business logic and an appropriate adaptor such as LDAP adaptor . In this manner the RAVE entity for example may be an LDAP based client . The various adaptors contained in database business logic such as the SOAP adaptor can contain various communication rules in order to enable data transfer from network database for example to a SOAP client . In a further embodiment of the present invention an adaptor such as the SOAP adaptor may contain various business rules which would enable communication between a SOAP client and the network database .

In the example of subscriber profile table stores personal information associated with a subscriber. This personal information in this example includes a username a password a subscriber s first name a subscriber s last name a subscriber s birth date an authorization code the date on which the account was created the time at which the account was created a street address suite number city state zip code country portal information default device identification information a main email address direct billing information promotional message information status information master account information termination date account type gender income profession personal interests alerts information time zone information credit card information parental control password information land phone information data phone information fax phone information and credit class information.

All or a subset of this information may be associated with a particular subscriber. Further the data structure on which this personal information is stored is modifiable so that new information can be added old information can be deleted and information can be modified. One or more new fields may be added to the subscriber profile table . This new field not shown may then be populated with information specific to a subscriber using any convenient method. As noted previously the data structure on which the example of resides is scalable and modifiable.

A subscriber identification number uniquely identifying a particular subscriber is the primary key of the subscriber profile table . This primary key is a unique identification string of characters that is associated with a subscriber and may for example serves as an account number. The foreign keys contained in subscriber profile table include a state identifier a country identifier a portal identifier a default device identifier a status identifier a master account identifier and an account type identifier. Each of these foreign keys reference a primary key of a separate table in the relational database structure of .

Account type table stores descriptive information about the various types of accounts provided by a wireless network provider. This information may include the various plan names the rate structures quantity of air time and other aspects of a particular type of wireless account. The primary key of account type table in this example is an account type identifier. This account type identifier is also a foreign key in subscriber profile table . Therefore subscriber profile table references account type table for account type information.

Portal table stores portal information including a portal description and a portal URL address. The primary key of portal table is a portal identifier. This portal identifier is associated with a unique portal configuration. Other portal configurations would then have other unique portal identifiers associated with them. The portal identifier is also a foreign key in subscriber profile table . Therefore subscriber profile table references portal table for portal information.

Account status table stores account status information. The various account status types in this example are stored in account status table . Each account status has an identifier associated with it. The primary key of account status table is a status identifier. The account status identifier is also a foreign key in subscriber profile table and referenced thereby.

A state table and a country table each store state and country information respectively. State table stores the names of each state associated with a particular country. State table has as its primary key a state identifier. Each state identifier is associated with a state name. Likewise country table has as its primary key a country identifier. Each country identifier is associated with a country name. In one embodiment state table has as its foreign key the country identifier. State table references country table for country information. The state identifier and country identifier are also foreign keys in subscriber profile table and thus subscriber profile table references state table for state information and country table for country information.

Subscription table stores subscription information and has as its primary key a subscription identifier. In addition subscription table may have a mobile number as a primary key. In this case a mobile number or a block of mobile numbers may be associated with a particular subscription. Subscription table has as foreign keys a service identifier a device identifier and possibly a mobile number. Therefore subscription table interfaces with services table device table and possibly mobile subscription table for information stored in those tables.

Mobile subscription table stores information about a mobile subscription. Mobile subscription table contains information about the activation date of a subscription the deactivation date of a subscription an old mobile number a MIN an IMSI and status information. Mobile subscription table has as its primary key a mobile number which in this example is a unique identifier. Mobile subscription table has as a foreign key a subscriber identifier. In this example the mobile subscription table references subscriber profile table for subscriber information.

Services table stores information about services offered by a wireless subscriber. Services table has as its primary key a services identifier. Since subscription table has as its foreign key services identifier subscription table references service table for service information.

Service attribute table stores information about the attributes associated with a service. Service attribute table stores information such as an attribute name an attribute default and a default value. Service attribute table has as its primary keys a sequence identifier and a service identifier. In this embodiment the service identifier is also a foreign key so that service attribute table references services table for service information.

Device table stores information about various devices. Device table preferably contains information about the make and model of a device as well as a description of the various characteristics of that device. Device table contains a list of all possible devices used on a wireless network along with basic information about them. Device table has as its primary key a device identifier and has as its foreign key a browser identifier. Since subscription table and subscriber profile table have the device identifier as the foreign keys these two tables reference device table for device information.

Blacklist table and white list table contain blacklist and white list information respectively. Each of these two tables has as primary keys a number identifier a subscriber identifier and a service identifier. In addition the subscriber identifier and the service identifier are foreign keys in the blacklist table and white list table . Blacklist table and white list table reference subscriber profile table for subscriber information and services table for services information. The blacklist table may contain information relating to a subscriber s personal blacklists as well as a system wide blacklist. In one embodiment of the present invention a system wide blacklist may reside in blacklist table .

A browser table stores information about different browsers. For example browser table may contain browser descriptions operating system descriptions and browser versions. Browser table has as its primary key a browser identifier. Since device table has as its foreign key a browser identifier device table references browser table for browser information.

Subservice attribute table stores subservice attribute information. Subservice attribute table has as its primary keys a sequence identifier a mobile number and a subscription identifier. Subservice attribute table has as its foreign keys a mobile number and a subscription identifier. In this example subservice attribute table references subscription table for subscription information.

Alias table stores alias information. Alias information may include for example aliases that have been set up by a wireless subscriber. In this manner a wireless subscriber may be able to configure aliases and associate alias names with devices or lists. Alias table has as its primary keys a subscriber identifier and an alias number. Alias table has as its foreign key a subscriber identifier. Alias table interfaces with subscriber profile table for subscriber information.

Alias destination routing table stores information about the routing destinations for an alias. Alias destination routing table has as its primary keys a subscription identifier a mobile number a subscriber identifier and an alias number. These four identifiers are also foreign keys of alias destination routing table . Alias destination routing table preferably references alias table for alias information and subscription table for subscription information.

Alias email routing table stores alias email routing information such as a routing enabled flag. In this example alias email routing table has as its primary keys a subscriber identifier a sequence number and an alias number. These three primary keys also serve as foreign keys of alias email routing table . In this manner alias email routing table references alias table for alias information and sub email table for email information.

Sub email table stores email information. Sub email table has as its primary keys a subscriber identifier and a sequence number. Sub email table has as its foreign keys a subscriber identifier and an email type identifier. In this example sub email table references subscriber table for subscriber information and email type table for email type information.

Email type table stores information about the type of an email. Email type table has as its primary key an email type identifier.

Referring now to a more detailed explanation of various data fields that may appear in a preferred embodiment the MIND is depicted.

The example of may be divided into four different sections account information device information network address information and messaging attributes. The fields that make up the account information in the MIND may have one row per subscriber. There may be multiple rows for each device type and each destination address belonging to a subscriber all of which could be in separate tables. A subscriber record which may stretch across several database tables could be for example from 2 000 to 5 000 bytes.

In the exemplary embodiment of a Username stored in a first field of the MIND uniquely references a particular wireless customer. In this embodiment of the present invention a user name is may be used at the time of initial registration and is not customer proprietary. In addition to a Username a Password may also be may be used at the time of initial registration and in this example is customer proprietary. The Username and Password stored in the MIND may be used by all applications in a wireless network. In this manner a wireless customer may conveniently have one user name and password to use across all wireless applications.

A field entitled Signed up for DirectBill may also be stored in the MIND. In this example the field Signed up for DirectBill is a yes no field may be used at the time of initial registration and is not customer proprietary. Similarly a field entitled Signed up for Promotional Messages may also be stored in the MIND. This field in this example is a yes no field may be used at the time of initial registration and is not customer proprietary. The Signed Up for DirectBill field indicates whether or not a wireless subscriber is in a direct billing program. Likewise the Signed up for Promotional Messages field indicates whether or not a wireless subscriber wishes to receive promotional messages. In this embodiment of the present invention these two fields as well as many of the other fields in the MIND may be configurable by a wireless subscriber. In this manner a wireless subscriber may be able to alter various fields stored in the MIND database.

With further references to an Account Status field stored in the MIND may indicate whether a wireless subscriber s account is active suspended or closed. The Account Status field may be used at the time of initial registration and is not typically considered customer proprietary.

Three fields may be used to identify a particular subscriber s account. Fields entitled Unique Account Identifier Account Number and Subaccount may be stored in the MIND. Each of these three fields may be used to identify a particular account. In this example each of these fields is used at the time of initial registration and none of them are customer proprietary.

A field entitled Account Type stored in the MIND database may indicate whether a subscriber s account for example is post paid pre paid reseller or corporate. In this manner the Account Type field and the Account Status field may only accept one of a limited number of possible responses. In this example this field is used at the time of initial registration and is not customer proprietary.

A field entitled Rate Plan stored in the MIND database indicates the particular plan under which a wireless subscriber participates. Further a field entitled Feature Codes Per Device may also be stored in the MIND. Like the Rate Plan field the Feature Codes Per Device field may be may be used at the time of initial registration and may not be customer proprietary. The Feature Codes Per Device field for example indicates whether a wireless subscriber is signed up for instant messaging and if so what type of instant messaging code should be used. In addition the Feature Codes Per Device field may also indicate a particular wireless application protocol such as for example general packet radio service associated with a particular wireless subscriber profile. In this example these fields are used at the time of initial registration and are not customer proprietary.

In three fields accept date codes. The Service Activation Date field Service Termination Date field and Billing Cycle Date field may contain the dates applicable to a particular wireless subscriber. In this example these fields are used at the time of initial registration and are not customer proprietary.

A Credit Class Code or Spending Limit field stored in the MIND may also be associated with a particular wireless subscriber. This field can indicate credit information about a particular wireless subscriber and may also establish preset spending limits. A Credit Class Code field may be altered only by a wireless provider. The Credit Class Code field may also be customer proprietary.

A Language field stored in the MIND indicates a particular language associated with a wireless customer. As indicated in the example of this field is used at the time of initial registration and is not customer proprietary.

A field entitled Provisional Classes of Service stored in the MIND can be associated with various games ringtones or other services offered to the customer. In this example this field is not used at the time of initial registration and is not customer proprietary.

A Parental Control Password field stored in the MIND can be used by a parent to control a child s access to a wireless device. For example certain aspects of wireless communication associated with a wireless device may require a parental control password. In this manner a parent can prevent a child or any other unauthorized user from participating in certain types of communications or services. The Parental Control Password field may be used at the time of initial registration but like Password field is customer proprietary.

In the example of Default Portal Selection field stored in the MIND indicates a portal associated with a particular wireless device. Default Portal Selection may be used at the time of initial registration but is not customer proprietary.

A Device Type field stored in the MIND indicates the particular type of device or devices that a wireless subscriber is using in a wireless network infrastructure. A particular wireless subscriber may have many devices which he uses within a wireless network architecture. A wireless subscriber may have a telephone device as well as a separate text device both of which are used in a wireless infrastructure. In such a case a particular user may have multiple device types associated with his profile. Each device may have a unique profile associated with it. In this manner each device may have a certain set of fields in the MIND. In one embodiment of the present invention different devices associated with different device types for example may have different rate plan structures account numbers or other information associated with them. In another aspect two different devices may share the same account number rate plan and other user information.

In the example of a Network Type filed may be stored in the MIND. The Network Type field indicates a particular network protocol such as GSM GAIT or TDMA. In this example this field is used at the time of initial registration and is not customer proprietary.

Fields entitled Prepaid Account Server and Prepaid Account Server Version may also be stored in the MIND. In this example these fields store information about prepaid aspects of a subscriber s account.

In one embodiment of the present invention MSISDN MDN field indicates the mobile directory number for a particular device. IMSI MIN field indicates the international subscriber mobile identity or the mobile identification number of a particular device associated with a wireless subscriber. ESN field indicates the electronic serial number of a wireless device. SIM Version field describes the subscriber identification module type for a particular wireless device used in the wireless network. RIM User s Name field indicates a user name associated with a wireless subscriber specifically related to that used on a RIM device other messaging device or wireless email device user names may be included. For example this user name could be one of the wireless subscriber s aliases. MAN PIN field indicates the metropolitan area network and personal identification number associated with a particular wireless device or wireless subscriber. In one embodiment of the present invention each of these field names is associated uniquely with a single wireless device. In this manner a single field name may be may be used for each wireless device. All of these fields in this example are used at the time of initial registration and are not customer proprietary.

A second Account Number field may also be stored in the MIND. Associated with this account number for example can be an Account Type field . The Account Type field for example can indicate a particular account to which a wireless user subscribes. An Operating System field and Memory field may describe various aspects of a particular wireless subscriber s device or account. Each of these four fields in this example are used at the time of initial registration and are not customer proprietary.

 ESN MSN field also describes various aspects of a customer s account. In this example ESN MSN field stores serial number information associated with a device. In this example this field is used at the time of initial registration and is not customer proprietary.

 Domain field stored in the MIND associates a particular user or a particular device with a standard domain name. In this example a user s domain is IMcingular.com. This domain may be used to associate a particular user with a particular e mail address. In addition a particular domain and its associated domain name address can facilitate communication between a web based application and a wireless device. In one aspect of the present invention a wireless subscriber may be able to send text messages from his cellular telephone to a second person at a destination e mail address. The Domain field may also be used in aliasing.

A series of fields describes a particular device that is connected to a wireless network. In this example Device Schedule Device Make Device Model Device Version and Device E Mail Address all describe various details about a particular device that a wireless subscriber uses on a wireless network infrastructure. In this example the Device Schedule field indicates a particular network protocol such as Mobitex GPRS or Edge for use with a particular device. The Device Make field and Device Model field indicate the make and model of a wireless device used on a wireless network. A Device Version field further defines the type of device. Device E Mail Address in this example is a particular e mail address associated with a certain device. Similar to the Domain field Device E Mail Address can be used in e mail communications. In this manner a person using a personal computer can send an e mail over the Internet to a wireless device. In this example Device Schedule Device Version and Device E Mail Address may be assigned at the time of initial registration and are not customer proprietary. Device Make and Device Model in this example are used at the time of initial registration and are not customer proprietary.

A field entitled IP Address field in this example stores a GPRS address associated with a device. In this particular example this field is not used at the time of initial registration and is not customer proprietary.

A field entitled Password Validation Required on Originator stored in the MIND is a Boolean data field. This data field indicates whether a password may be used for a designated application. The Password Validation Required on Originator field is not used at the time of initial registration and is not customer proprietary. A field entitled Password for Distribution List Access stored in the MIND contains a user defined password. The storage capacity of field can be limited to a specific number of characters. In this example the Password for Distribution List Access field can be compared to a password entered by a wireless subscriber. If the passwords match then the wireless subscriber is allowed access to a distribution list. This field in this example is not used at the time of initial registration but like Password field is customer proprietary.

Destination E Mail Address field and Destination Label field in this example store information about a particular destination. In this example these fields are not used at the time of initial registration and are not customer proprietary.

A field entitled Customer s POP Server List stored in the MIND describes a post office protocol mailing list which can be defined by a wireless subscriber. In the Customer POP Server List field is not used at the time of initial registration and is not customer proprietary.

An Alerts Disabled field stored in the MIND indicates whether alerts are disabled on a particular wireless device or on a particular wireless account and typically include only a yes or a no designation.

In the exemplary embodiment of My Time Zone field stored within the MIND indicates the particular time zone with which a wireless device or user is associated. In other embodiments of the present invention separate My Time Zone fields can be associated with various wireless devices belonging to a single wireless subscriber. In this example the My Time Zone field is not used at the time of initial registration and is not customer proprietary.

In an exemplary embodiment Distribution Lists data field may contain a single distribution list for each field. In this manner multiple distribution list data fields may be provided in order to enable a wireless subscriber to store multiple distribution lists in the MIND. As is commonly known a distribution list is simply a list of destinations or addresses associated with a particular key word to enable a wireless subscriber to send a message to multiple destinations. In this example Distribution List field is not typically populated at the time of initial registration and is not customer proprietary. In addition Distribution List field may be configured by a wireless subscriber.

An Alias field stored in the MIND indicates an alias name associated with a wireless subscriber. In this example the Alias field is a messaging attribute that is associated for example with a list. In this manner a list can have an alias associated with it. In this example this field is not used at the time of initial registration and is not customer proprietary.

A User Defined Blacklist field and a User Defined White list field may also be stored in the MIND. User Defined Blacklist field contains a list of devices or addresses with which a wireless subscriber does not wish to communicate. In this manner a wireless subscriber can black list a group of addresses so that he will not receive any incoming messages from those particular addresses. In a further embodiment of the present invention a single wireless subscriber may have more than one black list defined. In that case a wireless subscriber may have multiple User Defined Blacklist fields . Similar to the User Defined Blacklist the User Defined White list field in this example contains a list of addresses or people with which a wireless subscriber wishes to communicate. The addresses or people contained in a User Defined White list field for a particular wireless subscriber for example may receive preferential treatment with regard to various communications. In this example both the User Defined Blacklist field and the User Defined White list field are not typically used at the time of initial registration and are not customer proprietary.

A field entitled Previous Mobile Number stored in the MIND may contain a prior phone number for a wireless subscriber. In this manner when a wireless subscriber changes phone numbers he can have his previous mobile number stored in data field Previous Mobile Number . Data field Previous Mobile Number in this example is not used at the time of initial registration and is not customer proprietary.

Many of the fields contained in the MIND can be populated by a wireless subscriber. In this manner a wireless subscriber has access to the MIND and may edit or change various fields. As such a customizable user profile may be comprised of the various data fields of the MIND. A wireless subscriber for example has the ability to alter the contents of the User Defined Blacklist field the User Defined White list field as well as various other fields previously mentioned.

A wireless subscriber can also modify the various fields of the MIND via different devices. For example a wireless subscriber may be able to modify a field with a wireless device a computer terminal connected to the Internet or a standard telephone.

Employing various user configurable and modifiable fields of the MIND a wireless subscriber is able to create and edit personal aliases. Each alias may define a destination address and may provide the ability for the subscriber to manage message delivery. In addition a wireless subscriber may be able to define distribution lists filtering lists such as white and black lists and auto reply lists.

Using various fields of the MIND previously described a user defined profile may allow for the definition of multiple handsets or devices. A user profile comprising information contained in various fields previously described may support destination address translation and number portability. The user defined profile may also support a set of messaging applications such as web to mobile mobile to mobile mobile to web numeric or promotional messages. In a further embodiment of the present invention the user defined profile may support the customization and linking of services offered to subscribers. A subscriber may be able to set up advanced features in his profile such as relaying messages to more than one mobile device or other messaging destination such as an e mail account.

In a further embodiment of the present invention a user defined profile assembled from the previously mentioned fields may hold a set of canned messages or automatic replies. The subscriber may be able to opt out of or opt into receipt of promotional messages. In addition a wireless subscriber may also be able to block messages by categories. For example the subscriber may be able to choose to block all incoming mobile messages to avoid incurring fees.

In a further embodiment of the present invention new services can be provisioned at or near real time by registering appropriate information in a subscriber profile contained in the MIND or in one of its replicas. For example a wireless subscriber can subscribe to additional services simply by changing the contents of various fields contained in the MIND.

The depiction of is merely an example of one embodiment of the present invention. Many other fields and combinations of fields can be envisioned and are within the scope of the present invention. In addition the present invention contemplates the use of these various data fields to configure user profiles in many different manners.

The MIND database can be implemented in many different ways consistent with the principles of the present invention. For example the MIND database may reside in a magnetic storage medium resident on a computer. The MIND database may be implemented with currently available software database products developed by software companies such as Oracle. In one embodiment of the present invention the MIND database may be distributed over many different computers or many different individual database products. In this manner individual computers or databases may be networked together to form the MIND database. In this embodiment a central controller may be implemented in order to manipulate the individual computers or databases. In a further embodiment of the present invention the MIND database may reside on an optical storage device such as a compact disc or series of compact discs. In general the MIND database may be implemented in any convenient storage media.

One embodiment of the MIND database consistent with the principles of the present invention may be horizontally scalable so that a data processor on which the database resides may be expandable. Further the MIND database may be vertically scalable so that more data processor units can be added to the location of the database. Exemplary embodiments of the MIND consistent with the principles of the present invention may be scalable to the order of tens of millions of customer profiles in terms of space and in terms of speed. In one embodiment of the present invention the MIND may be able to provide access to data only through published application programming interfaces. These scalable features of the MIND database may be implemented with currently available technology known to those skilled in the art.

In the embodiment of the present invention depicted in step the bulk load process may be initiated by IT database business logic . For example the IT database business logic may read all the data from the MIND database or other database and create a data abstract file. This data abstract file can represent all or a portion of the data subject to the bulk load operation. The data of the bulk load operation for example can be stored in the MIND database or may be stored in some external data storage device not shown .

As depicted in exemplary step the IT database business logic announces that the bulk load data is available. In this example this announcement is made to provisioning system through backbone provisioning transport and to network database business logic adaptor . The announcement may then be transmitted through backbone integration transport network database business logic and to network data distributor database . Alternatively IT database business logic may communicate directly with network database business logic to alert network data distributor database of the bulk load event. In one embodiment business logic such as IT database business logic may publish on backbone integration transport a message alerting network data distributor database to a bulk load. In this example network database business logic subscribes to bulk load messages and receives the bulk load message. Network database business logic in this example replies by publishing a message on backbone integration transport . Upon receipt of this reply by IT database business logic the bulk load process commences. Other various communication channels and paths are within the scope of the present invention.

As depicted in exemplary step network database business logic of network data distributor database receives the bulk load event. As depicted in exemplary step network database business logic retrieves the bulk file from a location specified in the bulk load event. Network database business logic may retrieve the bulk load data from the MIND database . Alternatively network database business logic may retrieve the bulk load data from an external data store not shown . In this example after retrieving the bulk file network data distributor database loads the data. The bulk file can either be loaded directly from its location to network data distributor database or for example via network database business logic . In the latter instance bulk information may be routed through network database business logic and then loaded into network data distributor database .

As depicted in exemplary step network database business logic announces a bulk load event to other replica databases such as network subscriber data replica database . This announcement may be transmitted to network database business logic which may control network subscriber data replica database . In this manner the announcement may proceed from network database business logic to backbone integration transport and then to network database business logic . In an alternate embodiment of the present invention the business rules and protocol handling that is contained in network database business logic may be contained directly in network data distributor database .

Likewise other business rules and protocol rules may also be contained within replica databases such as network subscriber data replica database . In this alternate embodiment of the present invention a direct link may be achieved from a bulk load data source or for example the MIND database to network data distributor database and replica databases such as network subscriber data replica database . In this example the announcement of the bulk load event transmitted by network database business logic to network database business logic for example can indicate the location of the bulk data.

As depicted in exemplary step network database business logic receives the bulk load event with the location of the bulk load data. Likewise other replica network database business logic entities also receive the bulk load event and the location of the bulk load data. For example network database business logic which is associated with network subscriber data routing and validation database may also receive the bulk load event along with the location of the bulk load data. The transmission of this event notification for example may be done in parallel to all replica databases at the same time to databases sequentially or in any convenient order. For example it may be preferable that network subscriber data replica database receives data before network subscriber data routing and validation database . If this is the case then network database business logic would first transmit the bulk load event information to network database business logic and then transmit that bulk load event to network database business logic . In this manner network subscriber data replica database could receive its bulk load update before network subscriber data routing and validation database .

As depicted in exemplary step each replica database then retrieves the bulk data. The network database business logic associated with the replica database may be responsible for retrieving the bulk load data. For example network database business logic may retrieve the bulk load data for network subscriber data replica database . The replica databases are then updated with the bulk data as depicted in exemplary step . In this manner network subscriber data replica database would be updated with the bulk data.

In the example of replica databases are replicated from network data distributor database which is replicated from the MIND database . In this fashion data stored in the MIND database is first propagated to network data distributor database . Network data distributor database then distributes the data to replica databases such as network subscriber data replica database . In an alternate embodiment of the present invention the updating process can be performed in parallel. In this manner the data from the MIND database can be transferred in parallel to all replica databases including network data distributor database network subscriber data replica database and network subscriber data routing and validation database .

In yet a further embodiment of the present invention data contained in an external data storage device may be first sent to the MIND database and then to the replica databases and in any order. The present invention also contemplates parallel update of the MIND database and the replica databases and . In this manner all databases throughout the system may be updated from an external source at the same time.

Network data distributor database may contain a subset of all customer information contained in the MIND database . All additions updates and deletions to a customer profile may be made for example on the MIND database . The MIND database may then propagate the changes to the network data distributor database . The network data distributor database may contain a master set of all files in the network. All network elements such as the RAVE and the DART may access the information stored in the network data distributor database via replicated database nodes located in close proximity to the network element itself. These database replicas such as network subscriber data replica database and network subscriber data routing and validation database may contain only a subset of the data in the network data distributor database . Likewise network data distributor database may contain only a subset of the data contained in the MIND database .

After the new data is received by the MIND database the replica databases may need to be updated. In step provisioning system posts an event stating that a new subscriber has been registered. This event may originate in provisioning system or may be a function of the MIND database or the IT database business logic . For example when a new subscriber s data is stored in the MIND database the MIND database may initiate a process via IT database business logic and provisioning system to update replica databases such as network subscriber data replica . Alternatively the registration of a new wireless subscriber may initiate an update event in provisioning system .

In the example of step network applications receive the provisioning event. The provisioning event may be transmitted to other network applications such as the DART or the RAVE via backbone provisioning transport and network database business logic adaptor . Alternatively the provisioning event may be transmitted directly to the various network entities such as the RAVE and the DART. In the example of the provisioning event is transmitted from provisioning system via backbone provisioning transport network database business logic adaptor backbone integration transport to network data business logic . In an alternate embodiment of the present invention the provisioning event may be transmitted from provisioning system to network database business logic in any convenient manner.

In the exemplary step of the network data distributor database registers the new subscriber. As previously described the data for the new subscriber can be transferred from the MIND database to the network data distributor database . Alternatively the network data distributor database may receive the new subscriber data from a separate data source.

As depicted in exemplary step the network application announces that a new subscriber has been registered. For example network database business logic may announce to network database business logic or network database business logic that a new subscriber has been registered and his information has been stored in network distributor database . This announcement may be transmitted from network database business logic via backbone integration transport to network database business logic . In an alternate embodiment of the present invention the announcement that a new subscriber has been registered in network data distributor database or in the MIND database can be made directly to network database business logic and or network database business logic .

In exemplary step of the replicated databases receive the event. For example network subscriber data replica database may receive an indication that a new subscriber is being registered on the wireless network. Likewise network subscriber data routing and validation database may also receive an indication that a new subscriber is being registered on the wireless network. This notification may be received directly from IT database business logic provisioning system MIND database or from any other convenient source.

In exemplary step of the subscriber is registered in replicated databases. In one embodiment of the present invention the network subscriber data replica database and the network subscriber data routing and validation database each receive data associated with the new wireless subscriber. In this manner various fields contained within the replica databases and may be created and or updated. In one embodiment of the present invention new data fields may be created in the network subscriber data replica database and the network subscriber data routing and validation database for the new wireless subscriber. These new fields may then be populated with data about the new wireless subscriber. Likewise network data distributor database may also be adapted to receive new data fields containing the data about the new subscriber.

In an alternative embodiment of the present invention a wireless subscriber may register for a new network service. In this case the MIND database and the replica databases and may receive information about the new service to which the subscriber registers. This new information may be associated with existing subscriber data such as a user name or password. In a further embodiment of the present invention a wireless subscriber may wish to change certain aspects of his customer profile. For example a wireless subscriber may want to change the password he uses for his account. Once the customer makes this change the MIND database is able to propagate the change to various replicated databases as necessary.

Consistent with one embodiment of the present invention the network data distributor database may remain identical to the MIND database being updated co incedentally or in near real time. Changes to the MIND database may then be reflected in the network data distributor database within for example one minute of those changes being applied to the master database. Similarly changes to the network data distributor database may be reflected in the replica databases such as network subscriber data replica databases within for example one minute of those changes being applied to the network data distributor database . Other update times are within the scope of the present invention. Additionally all the databases may be updated in real time in parallel.

Exemplary embodiments of the present invention may provide for contingency procedures to guarantee that the replica databases such as network subscriber data replica database can be synchronized in the event of failures in the replication process. These contingency procedures may be automated. In this manner the failure of a replica database to receive updated data may result in the implementation of an error correction routine. In addition if a failure occurs the wireless network architecture may provide for redundancy and error recovery.

New database replicas may be added and configured easily. For example a replica subscriber database not shown may be added to the infrastructure. In this manner the new database may be populated using a bulk load procedure previously described or an update procedure also previously described. The addition of replica databases as well as the manipulation of existing replica databases allows for network scalability.

In a further embodiment of the present invention sensitive customer information stored in MIND database or replica databases and may be encrypted. Any number of existing encryption techniques may be used to preserve the security of customer information. Moreover changes to the subscriber profile may be controlled. Each subscriber profile attribute may be protected as indicated by a protection property flag. The network database business logic utilizes that protection property flag to determine whether a particular attribute is modifiable. That protection property flag may itself be modified by a system.

The process of updating replicated databases may be accomplished by caching data in a short term memory. For example data related to a wireless subscriber that is updated in the MIND database may then be cached in a local storage accessible to the network data distributor database . Likewise data caching can be used in the previously described data transfer methods in order to realize operational efficiencies.

The Subscriber Configuration Interface SCI supplies the framework to deliver network services add new network services and modify existing network services via a web interface. As such SCI provides network subscribers with the ability to manage and configure network services.

While the exemplary embodiment of depicts only a single SCI multiple SCIs may be deployed with the present invention each interfacing with one or more web interfaces and vice versa. Many other permutations of network entities are within the scope of the present invention.

In the exemplary embodiment of SCI through network transport RAVE and integration transport interfaces with UADB . In this embodiment UADB may contain for example customer aliases White lists Blacklists distribution lists language filters message formatting options vacation settings and numerous other aspects of a subscriber s customer profile. In this manner UADB or one of its replicas serves as a storage point for subscribers preference profiles. The data contained in UADB may be updated by subscribers via the web interface.

When a subscriber updates his preference profile through the web interface UADB may be updated at or near real time. For example changes made by a subscriber through the web interface may be immediately written to UADB or one of its replicas. If written to a replica of UADB a master database not shown may then be updated from the replica of UADB . In a further embodiment of the present invention a subscriber s update of his preference profile via the web interface may first be stored in a master database not shown and then replicated to UADB . Numerous other methods described in other portions of this specification may be used to update a subscriber s preference profile via the web interface. In yet another embodiment of the present invention a subscriber s information such as his preference profile may be stored directly within SCI . Storage of configuration data within SCI may be implemented through an integrated database short term memory long term memory or any other convenient storage method.

In the exemplary embodiment of LAMB records transactions from SCI . Information about SCI transactions may include for example time date originator information transaction ID destination information message information SCI functions accessed by the originator errors and any other function or process performed by SCI .

In one embodiment of the present invention SCI provides alarming and logging information to LAMB via network transport . This alarming and logging information for example may be based upon the time of each transaction the date of each transaction the originator s IP address the remote host name of the originator the message ID of the transaction destination addresses validation results message length the message itself total bytes sent not including headers the time to complete the request the status returned by the server the status returned by other network entities SCI functions accessed by the originator of the message the last URL the subscriber was referred to by the SCI errors or any other convenient information.

SCI may publish on network transport alarming and logging information. This alarming and logging information may then be received by LAMB from network transport . Upon receipt of this alarming and logging information from network transport LAMB may then store process and operate on the alarming and logging information. LAMB in a further embodiment of the present invention may support centralized logging and alarming functions. Further LAMB may support real time or non real time alarming and logging. In a further embodiment of the present invention LAMB may support variable debug levels.

The web interface in the exemplary embodiment of provides a web page with which both subscribers and non subscribers may interact with SCI . In the example of the web interface provides a common look and feel for those who access the web page. The web interface for example may include instructions on how to send and query web messages instructions on how to configure a subscriber s preference profile and instructions on how to create custom downloads. In a further embodiment of the present invention the web interface may provide a subscriber with a web page that can be used to update and change a subscriber s preference profile. Further the web interface may enable a subscriber or non subscriber to send a web send message to a subscriber. Many other functions and instructions may be incorporated into the web interface and are within the scope of the present invention.

In the exemplary embodiment of ARC provides various translation functions. ARC may receive web send messages that are published by SCI on network transport . Upon receiving these web send messages ARC may perform translation functions for example to transform a web send message into a common format for storage on MDS or to transform a web send message into the proper format for transmission to a particular device.

In the exemplary embodiment of portal interface provides a standard interface accessible by the web interface to provide subscribers with the ability to customize network services and send messages to data subscribers. In this example portal interface allows a provider to enable a common look and feel for the web interface. Portal interface allows a single log in and password for a particular subscriber and allows the web interface to incorporate network features such as send message alias and distribution management and White list and Blacklist pages.

In the exemplary embodiment of portal interface as well as SCI may serve up markup language content to an application protocol server to allow subscribers to access all of the features provided by SCI . In this manner SCI through portal interface may provide support for markup language content. In a further embodiment of the present invention portal interface preferably supports older browsers and or WAP access. In a further embodiment of the present invention portal interface supports transport protocols such as HTTP or HTTPS to communicate with the web interface. Further portal interface may support various markup languages programming languages and database protocols. For example portal interface may support protocols such as LDAP or SMTP.

SCI through its subcomponents such as portal interface preferably supports various messaging protocols. For example SCI through its subcomponents such as portal interface may support short messaging service interactive Mobitex messaging service WAP subscriber validation streaming services over GPRS or any other service. Further the embodiment depicted in may support mobile terminated short messages originated by an operator. In that protocol an operator based text messaging service allows a calling party to leave an alphanumeric message for a customer. An example of using that is playing a protocol greeting the calling party with a personalized message and then take an alphanumeric message of any length up to 160 characters on behalf of the customer and then deliver the message to the customer for example using SMS.

A further embodiment of the present invention may support mobile terminated short messages originated from a web page. This protocol allows submission of a short message for example up to 640 characters via a web page such as the web interface to a customer. In a further embodiment SCI may support mobile terminated short messages originated from a dial up using Telocator Alphanumeric Protocol TAP . This protocol allows submission of a short message for example up to 160 characters via a modem pool to a customer. Numerous other protocols are supported by SCI and portal interface and those listed here are merely examples.

SCI and its subcomponents such as portal interface may support get and post methods. In a further embodiment of the present invention SCI and or portal interface may support a load sharing interface that the web interface can use to provide adequate capacity and growth. Further SCI through portal interface may include access to a stand alone home page with a navigation menu to each of the service configuration pages.

Send message logic allows an Internet user to access a standard send a message web page to create and send new messages to subscribers. In this manner the send a message web page is accessible via the web interface. In a further embodiment of the present invention send message logic allows a subscriber to access a class of service associated with a message. For example data customers such as SMS customers Mobitex customers GPRS customers and WAP customers may be able to access the class of service associated with web send messages.

Send message logic may be displayed via the web interface to an Internet user. In this manner the send a message web page appearing on the web interface may include various aspects of send message logic . For example fields in the send a message web page may include sender s name sender s reply or notification address sender s call back number subject message text graphics symbols passwords as required for a distribution list future delivery time recurring message based on time interval and return delivery receipt request. Numerous other fields may be incorporated in send message logic and displayed on the web interface through a web page.

Send message logic may allow Internet users to create long messages that may include text rich text format and graphics within the text. Graphic symbols may be available on the send a message web page to drag into the message text itself. The capability of the device to receive this format may be handled by ARC in the network.

In this example once an Internet user enters the destination address in the appropriate field and changes to the next field to enter additional information the destination address can be validated and the device preference for the user or group can be determined. These preferences can then be used to customize other aspects of the send a message web page such as enabling graphics mode enabling validation of sender and enabling message tracking. For example SCI upon receiving a destination address entered by an Internet user entered into the web interface may publish that destination address on network transport . The destination address published on network transport may then be received by RAVE . RAVE through integration transport may compare that destination address to addresses contained in UADB .

In this manner RAVE may perform validation functions on the destination address based on information contained in UADB . In addition RAVE through data contained in UADB may be able to configure further aspects of the web send message from a subscriber s preference profile information contained in UADB . For example if the destination address entered by an Internet user into the web interface corresponds to a subscriber whose information is stored in UADB then RAVE may access that subscriber s preference information via integration transport from UADB . RAVE may then publish this subscriber s preference information on network transport . SCI may receive this published information from network transport .

After receiving this subscriber s preference information SCI may then configure the send a message web page displayed on the web interface. In this manner SCI may be able to customize the send a message web page displayed on the web interface. This customized send a message web page displayed on the web interface can correspond to various preferences and information about a particular subscriber stored in UADB or its replica. For example SCI may be able to determine the capabilities of the destination device based on the destination address and limit the message creation functionality of the send a message web page based on that device. In this manner SCI for example may be capable of configuring web send messages for delivery to different device types such as TDMA GSM Mobitex and other mobile devices using JAVA.

An Internet user submits a web send message through the web interface to a subscriber. Once a message has successfully been submitted a cookie could be placed on the Internet user s browser which references this particular web send transaction. This permits the sender to obtain the status of a previously submitted web send message. The cookie can expire some time after the validity period of the web send message to allow the sender to check the last status of the message.

In this example the cookie may allow the sender to track multiple messages to multiple recipients. The cookie may also allow the sender to view reply messages from the recipient. The cookie may be used to allow recipient replies to be returned to the method specified by the sender. The sender s specified methods may provide a convenient way to track messages sent to devices using an Internet device such as the web interface.

In an exemplary embodiment of the present invention SCI through the web interface may provide an interface for Internet users to create for example rich text pictures animations melodies and sounds that can be attached to web send messages. Further SCI through its subcomponents such as portal interface may provide an interface for Internet users to generate downloadable multimedia files such as MIDI files to devices that support this feature. In this manner SCI as well as its subcomponents such as portal interface may provide support for any number of different data formats used with a web send message entered into the web interface.

In an exemplary embodiment of the present invention SCI submits web send messages to network transport . These web messages may be queued up in the network for transmission to the various subscribers. SCI may provide the capability of specifying a future delivery time for these web messages. In such a case these web messages can be delivered to mobile devices at the specified time. For example an Internet user through the web interface may be able to specify a particular delivery time. In this case the specified delivery time associated with the web message entered by an Internet user may then be used by SCI to schedule delivery of the web message.

In a further embodiment of the present invention SCI may be able to handle recurring messages. For example recurring messages such as reminder type messages at periodic intervals or dates may be created on SCI . A subscriber through the web interface or through his device may be able to set up reminder messages to be delivered to a destination device. A subscriber may set password access to this feature in order to be able to edit and delete these reminder type messages or alerts. SCI may then support recurring message delivery and password access that can be enabled by a subscriber. Further SCI may allow a subscriber to manage recurring messages originated by others to the subscriber s device. In yet another exemplary embodiment SCI may support management of these services by the device. For example a subscriber through his device may be able to manage recurring reminder type messages.

In a further embodiment of the present invention SCI is capable of handling registered delivery of web messages. When a registered web message is delivered or the message reaches its final destination an updated status report message may be sent to the originator of the web message. In one embodiment of the invention the subscriber controls whether a status report message is returned to the originator of the web message. A delivery failure message for example can be sent back to the originator of the web send message via e mail if an invalid Internet e mail address for the originator was supplied and registered delivery was selected when the original web message was created.

An Internet user via the web interface may enter a web send message and select registered delivery on the send a message web page displayed on the web interface. In this case if the subscriber has enabled registered delivery in his configuration profile the Internet user who originated the web send message may receive a delivery receipt when the web send message is received by the subscriber. In another embodiment the Internet user who originated the web send message may receive a read receipt when the subscriber reads the web send message. Various other types of e mail notification may be incorporated into the infrastructure of the present invention.

In one example consistent with the principles of the present invention query message logic of SCI may interface with the web interface to provide a method by which an Internet user can query information about a web send message. For example a query message web page may be displayed on the web interface. In this example Internet users may be able to access the query message web page in order to view information about a web send message sent by the Internet user. The subscriber may be able to regulate an Internet user s access to the query message web page. In this manner a subscriber may be able to enable or disable an Internet user s ability to query web send messages.

In the example of and SCI through its subcomponent such as portal interface may satisfy an Internet user s query request via information contained in a cookie. In a further embodiment of the present invention these query requests may be satisfied by a message ID. In this case a message ID may be returned for each web send message sent by an Internet user. The Internet user may then be able to access information about the web send message using the message ID. For example an Internet user accessing the query message web page displayed on the web interface may be able to enter the message ID corresponding to a particular web send message in order to access information about that web send message. The query message web page may be able to return the status of the web send message to the Internet user. The Internet user may be able to determine whether the web send message was delivered or read by a subscriber.

In a further example consistent with the principles of the present invention SCI may provide further management of queries. The status of queries may be checked or monitored. SCI may provide for monitoring different queries and for example sorting filtering or storing queries. In one exemplary embodiment an Internet user through the web interface may be able to manage various queries he has initiated about web send messages. An Internet user via the web interface may be able to sort the various queries he has initiated about multiple web send messages.

In an exemplary embodiment of the present invention configuration logic allows each subscriber to view modify and create customized message handling and processing rules. The configuration logic aspect of SCI in this example allows for a subscriber to customize or configure his preference information. In one embodiment of the present invention this information may be stored in UADB or one of its replicas.

Configuration logic may permit subscribers to perform alias management. In this manner alias management implemented through configuration logic of SCI permits subscribers to create e mail distribution lists and device aliases on their account. A subscriber may have a distribution list that corresponds to a group of people from work. In this case the subscriber can associate the group of destination addresses with the word work. 

Likewise a subscriber may have multiple devices. In this case the subscriber can associate an alphanumeric string such as a word with each device. A subscriber who has multiple devices may be able to provide an alias to be associated with the various configurable aspects of each device. For example a subscriber who has a cellular phone may associate the word phone with that device. In this example all of the various configurable aspects of the cellular phone such as the ability to receive text messages can be associated with the word phone. The subscriber can then invoke the word phone in order to access the configuration for his cellular phone.

This alias information may be stored in UADB its replica another database or within SCI . A subscriber may then be able to alter the alias information stored in one of these various sites. A subscriber may be able to create and alter alias information contained within the network either through the web interface or through his device.

Configuration logic may provide that all aliases must be unique across an entire provider s network. Further SCI may allow a subscriber to enable or disable distribution lists specify that a password is required to access a distribution list or enable or disable distribution lists from one of the devices in a subscriber s account profile.

In a further embodiment of the present invention a subscriber through SCI may be provided the ability to create and modify destination devices and addresses. Likewise a subscriber may be able to create and modify Internet destination devices and addresses. For example each device can have its own address and therefore its own alias. A subscriber through SCI may be able to create modify and delete device profiles. In this manner a subscriber through the web interface or through his device may be able to change an alias and its associated device profile. Likewise a subscriber may be able to assign aliases to a particular device or destination. In a further aspect of the present invention a subscriber may be able to enable or disable destination addresses using an alias. A subscriber may be provided the ability to disable e mail and web delivery using his mobile number once an alias is created. A default alias for example could be a username that is created on the account at activation or by the subscriber via the web interface.

In a further embodiment of the present invention SCI and its configuration logic component may allow a subscriber to configure an account to be in an absent or vacation state to notify senders that the subscriber is unavailable. In this manner a subscriber could associate the word vacation with this absent or vacation state. In one embodiment upon receiving a web send e mail or mobile to mobile message the originator of that message may receive a prepared response from the subscriber. This prepared response for example could indicate that the subscriber is unavailable. In one aspect of the present invention the subscriber can set this absent or vacation mode to be indefinite or to expire automatically after a set number of days. SCI may support an interface to configure a subscriber absentee mode. For example a subscriber through his mobile device may be able to configure and initiate this absentee mode. In a further embodiment of the present invention the web interface may provide a web page with which a subscriber can initiate or alter this absentee mode. In addition SCI may be able to support this user interface.

In an exemplary embodiment of the present invention SCI may provide the ability for a subscriber to configure White lists and Blacklists. White lists are used to grant access to specific domains specific IP addresses or specific e mail addresses regardless of whether those domains or addresses might be excluded by a filtering process. Blacklists are used to block access from specific domains and IP addresses. In one embodiment a subscriber may be able to provision his or her Blacklist and White list to manage e mail and web access. In addition White list and Blacklist capability can be implemented on a global as well as on a per subscriber level.

In one aspect consistent with the principles of the present invention SCI may support an interface such as the web interface to allow subscribers to manage their White lists and Blacklists. A subscriber may be able to create a Blacklist for example by entering various destination addresses in a web page displayed on the web interface. In this manner a subscriber may select a Blacklist function on the web interface and be able to enter a list of Internet addresses to which the subscriber wishes to deny access. This information entered by a subscriber in the web interface may then pass via communications channel to SCI . SCI may then publish this Blacklist information on network transport . RAVE via integration transport may then store this Blacklist information in UADB or one of its replicas. In an alternate embodiment of the present invention this Blacklist information may be stored directly within SCI by any number of methods. In yet another embodiment DART may store blacklist information in MDS . In a further embodiment of the present invention SCI may support entering hosts and domains by name into a White list or Blacklist.

In a further aspect of the present invention SCI may be able to obtain the IP address of an accessing party to be able to process the White list or Blacklist. For example an Internet user who appears on a subscriber s Blacklist may attempt to access the web interface. In this case the Blacklisted Internet user may wish to send the subscriber a web send message. SCI may then obtain the IP address of the Blacklisted Internet user for processing by the network. The IP address of the Blacklisted Internet user may be published on network transport by SCI . This Blacklisted address may then be compared with the subscriber s Blacklist stored in UADB or one of its replicas. Since the addresses match in this example the Blacklisted user would be denied access to the network. In a further embodiment of the present invention SCI may support reverse address lookup to list hosts and domains by name. This reverse address lookup may then be used to process for example a Blacklist.

In a further embodiment of the present invention SCI may allow a provider the capability of creating and managing a system wide Blacklist to control spamming. Further SCI may allow a provider to manage global Blacklists. For example a provider may have a list of addresses of known spammers. In such a case the provider may wish to block the spammer s access to the network. SCI may allow for the creation and administration of Blacklists to block potential spammer s access to the network.

In an exemplary embodiment of the present invention SCI may be accessed via the web interface. SCI may provide the Internet address of the Internet user accessing the web interface. SCI may also be capable of performing an Internet reverse address lookup to identify the domain and host of the accessing party. After SCI obtains the address of the accessing party SCI for example can apply per subscriber Blacklist and White list rule filtering to block unwanted messages from the Internet. After applying per subscriber Blacklist and White list rule filtering SCI may then apply global Blacklist filtering of sites identified as sources of spam type messages. In this manner SCI may implement filtering in a two step process. SCI may first implement an individual subscriber s Blacklist and White list and then implement a system wide Blacklist and White list.

In further embodiments of the present invention Blacklists and White lists that are implemented on a system wide level may take precedence over a Blacklist and White list for a particular subscriber. In this instance SCI may first check an accessing parties Internet address against a system wide Blacklist. Second SCI may then check the accessing party s address against a subscriber s Blacklist. If the accessing party s address does not appear on the subscriber s Blacklist but does appear on the system wide Blacklist then that accessing party is denied access to the network. In further embodiments of the present invention SCI may be able to implement multiple Blacklists and White lists. For example a network administrator may establish multiple Blacklists with varying precedents. SCI may be able to handle the various Blacklist rules based on rules of precedence.

In an exemplary embodiment of the present invention SCI supports other anti spamming procedures. SCI is capable of origination validation based upon a sender s IP address or domain limiting connections per second per host accessing a national database of known spammers providing customer awareness information related to spamming providing a method for customers to report spamming to the provider providing a method for determining and blocking spamming by use of war dialing attacks providing a method for determining spamming based upon the content of a web message using a list of regular expressions detecting previously unidentified spam messages based upon volume of very similar web send messages and using counters in processing the text of web send messages.

In a further embodiment of the present invention firewalls not shown may be implemented between SCI and the web interface as well as between the web interface and Internet . These firewalls not shown serve to protect the web interface SCI and other elements of the infrastructure. Further aspects of the present invention may support SSL to protect subscriber data when being accessed or updated by the subscriber. For example the web interface SCI or other network entities may use various encryption methods in order to protect subscriber data.

In a further exemplary embodiment SCI may support a process of propagating changes to other SCIs not shown when updates have been made to add new configuration and network service features. For example SCI may receive a new system wide Blacklist. In such a case SCI may propagate this new system wide Blacklist to other SCIs not shown . Alternatively a new system wide Blacklist may be propagated to all SCIs in parallel. In yet another embodiment one SCI such as SCI may be designated as a master SCI. In such a case master SCI may then propagate a change in a system wide Blacklist for example to other SCIs.

In the exemplary embodiment depicted in create custom download logic a component of SCI allows a subscriber to create his own custom graphics ring tones calendar entries and address book entries to send to enhanced messaging service EMS compliant devices. For example create custom download logic may provide the capability for subscribers to create rich text pictures animations melodies and sounds. Further create custom download logic may allow subscribers to generate downloadable multimedia files such as MIDI files to devices that support this feature. In one embodiment of the present invention the web interface may provide a web page on which a subscriber may access create custom download logic .

The web interface may provide a web page in which a subscriber can create sounds. In this example a subscriber may be able to create a custom ring tone via the web interface. This custom ring tone may then proceed through communications channel to SCI . SCI may publish this user created ring tone on network transport . In publishing this user created ring tone on network transport SCI may also attach information about the subscriber who created the ring tone. In such a case the user created ring tone may be stored in a database such as UADB or MDS . A subscriber could then access this custom created ring tone from his device. In such a manner a subscriber may be able to create a ring tone using the web interface store that ring tone in a database residing within the infrastructure and then download that ring tone from the database to his device. In a similar manner a subscriber may be able to create custom graphics as well as calendar and address book entries.

In exemplary step a subscriber sends a message. As mentioned the invention contemplates a non subscriber sending a message as well. The message can be sent from any device with any destination address. For example a non subscriber may send a message from a web send web page displayed on a web browser by an SCI. In this case the SCI displays a web page through which any Internet user can send a message to any subscriber. In another embodiment a subscriber sends a message from his device to a non subscriber s email account. The message itself can be in any format and can be sent over any pathway through the network.

In exemplary step the network assigns a unique identifier to the message. This unique identifier can be in the form of a string of characters of any convenient length. For example the unique identifier may be a six character string of letters and numbers. In one aspect of the invention a non subscriber sends a message to a subscriber s device from a web send web page. In this example the message is received by an ARC for translation. The ARC initially strips off the destination address and publishes the address with a subject of validation request on the network transport. In one aspect of the invention the ARC publishes the validation request without a particular RAVE as a destination. In this aspect all RAVEs connected to the network transport subscribe to messages with the subject validation request. In this publish and subscribe protocol all RAVEs access the validation request.

In another embodiment a point to point protocol is used. The originating ARC directs the validation request to a specific RAVE. A RAVE entity receives the validation request and performs the necessary validation functions. For example the RAVE receives the destination address accesses a subscriber s information based on that destination address and returns a validation response. In various aspects of the invention this validation response can be published on the network using a publish and subscribe protocol or using a point to point protocol. The originating ARC receives the validation response. Since the destination address is valid the ARC performs necessary translation functions and the message proceeds through the network to the destination address. The ARC upon translating the message may assign a unique message identifier. This identifier could then pass back through the network to the web interface.

In another embodiment consistent with the exemplary method of the SCI itself assigns the unique message identifier. In alternate embodiments of the invention RAVE entities DART entities mail transfer agents LAMB entities or any other network element may assign the unique identifier. The identifier may originate in a single component that generates unique identifiers. In another aspect of the invention numerous different network elements may each generate the unique identifiers. In this case the network elements may communicate among each other to ensure that the identifiers generated are unique. In another aspect of the invention an identifier is assigned to a message based on the message center associated with the message. In that aspect of the invention identifiers are unique for messages traveling through a message center but they may not be unique across different message centers in the network.

In exemplary step the unique identifier is displayed to the party who originated the message. For example a person who sends a message from a web send web page may receive a unique identifier displayed on that web page. In one embodiment a person sends a message from a web send web page. Upon sending the message a screen containing the unique identifier associated with that message may pop up on the web page. In another embodiment the unique identifier may be sent to the person along with a delivery or read receipt. In yet another example a subscriber may receive the unique message identifier on a predetermined device or at a predetermined location. A subscriber may wish to receive the identifier possibly along with a delivery receipt at an email address specified by the subscriber.

Once in possession of the unique identifier a person may query the message as depicted in exemplary step . A person may access a query message web page displayed on a web portal served by an SCI. In this example the query message web page contains various query functions such as tracking a message ascertaining whether the message was delivered ascertaining whether the message was read displaying transmission errors and any other type of query function. The query message web page displays a screen into which a person can enter the unique identifier. In other embodiments of the invention a subscriber may be able to initiate a query from a device. A subscriber may be able to enter the unique identifier into a blackberry pager cellular phone or other device to obtain information about the message.

Once the unique identifier is entered as depicted in exemplary step the network retrieves the queried information about the message based on the unique identifier. A unique identifier is entered into a query message web page. The identifier is passed from the web page to an SCI. In one embodiment the SCI contains a listing of the unique identifiers associated with messages sent from the web page. The SCI may then perform a look up function to ascertain the status of the message and any other requested information. In another embodiment the SCI publishes on a network transport the unique identifier along with the subject query request. In this example the DART entity may subscribe to the subject query request and each DART may look for these messages. In this manner the network may use a publish and subscriber protocol.

In another embodiment the query request may be addressed to a specific DART element in a point to point protocol. In either case a DART element receives the query request with the unique identifier. The DART element in this example accesses one or more MDSs based on the unique identifier. For example messages and accompanying message information may be stored in an MDS in various tables along with a unique identifier. In this manner a DART element may simply perform a look up operation to retrieve message information from an MDS database. In this example the MDS stores the message itself along with message information including information about receipt of the message. The DART element returns the information to the network transport either in a publish and subscribe protocol or a point to point protocol destined for the originating SCI. The SCI displays the information on a web page. In other embodiments of the invention other elements may perform the query functions. For example a RAVE entity or a LAMB entity may access a database to retrieve the information requested in a query.

In exemplary step the requested information is displayed. In the example of a query initiated from a web page the requested information is displayed on the web page. In other embodiments of the invention the information is displayed on a device. The information may also be sent to a destination device specified by a subscriber. For example a subscriber may initiate a query from his pager and then request that the information be sent to a specified email address.

A subscriber may enter into the web page a list of addresses that correspond to the people with whom he works. This distribution list may then be associated with a word such as work. In this manner the subscriber can refer to the list of addresses simply by entering the word work into a device. In another embodiment of the invention the addresses of a distribution list can be entered into a device such as a blackberry cellular phone or pager. In another aspect of the invention a subscriber may enter the list of addresses into a PDA or personal computer. In addition the subscriber may associate any string of characters with the distribution list. For example the subscriber may associate a word a number or a symbol with the list.

In exemplary step the subscriber enters a password that is used to protect the distribution list. In one aspect of the invention the network displays a query to the subscriber asking if he wishes to password protect the distribution list. The subscriber may respond that he wishes to password protect the distribution list. In such a case the network then requests that the subscriber enter a password. In one aspect of the invention the subscriber enters the password into a web page displayed on a personal computer. In other aspects of the invention the subscriber enters the password into a personal digital assistant pager cellular phone or other device.

In exemplary steps and the network associates the password with the distribution list and stores the password and distribution list in a data structure. For example a subscriber may enter a distribution list and password into a device. This information then passes to an ARC element for translation. Initially the incoming ARC publishes on a network transport a validation request. A RAVE receives the validation request looks up information stored in a UADB RVDB or MIND processes the validation request and returns a validation response. In this example subscriber information stored in a data structure indicates that the subscriber has signed up for service that allows him to create password protected distribution lists. The validation response is received by the incoming ARC. Upon receipt the ARC translates the distribution list and password into a common format and appends relevant message information such as the originating address message type and other information. The ARC sends this translated list password and accompanying information for example to a RAVE via the network transport.

As noted communication between the network entities can occur via a publish and subscribe protocol or a point to point protocol. The RAVE receives the distribution list password and accompanying information and stores them in a UADB RVDB MIND or other data structure. In one embodiment the data structure is a relational database that stores the list and password along with accompanying identifying information in tables. In this manner the password is associated with the distribution list in the data structure. The password and distribution list may be stored together in the same data structure in the same table or in different data structures that are linked together. In another aspect of the invention the distribution list and password are stored in a linked list. Encryption may be employed to preserve the integrity of the password. In another aspect of the invention various flags such as a confidentiality flag may be set to indicate the confidential nature of the password.

After the distribution list and password are stored the subscriber in exemplary step requests access to the distribution list using the password. In this example the subscriber accesses the distribution list from a device. The subscriber enters a message and denotes as its destination a distribution list. The subscriber may wish to send a message to his work contacts. In this manner the subscriber enters the word work as the destination for a message. The word work in this case is an alias referring to the distribution list of destination addresses associated with the subscriber s work contacts.

Upon entering the distribution list as the destination for the message the network prompts the subscriber for the password. In one embodiment of the invention the subscriber enters a message with a password protected distribution list as a destination. The distribution list alias is received by an ARC element. The ARC element in this example publishes on a network transport the alias along with a get alias information request. The RAVE entity receives the get alias information request and processes it by accessing information stored in a UADB RVDB or other data structure. The RAVE upon accessing the data structure discovers that the distribution list is password protected and sends a get password request to the originating ARC. The ARC translates the get password request so that it can be displayed on the device. This prompt is then displayed on the subscriber s device. In other aspects of the invention this password prompt can be displayed in many different forms on any device used in conjunction with the network. The subscriber responds to the password prompt by entering the password into his device and transmitting it to the network.

As depicted in exemplary step upon receipt of the password the network allows access to the distribution list. In this example the subscriber enters the password into a device. The incoming ARC receives the password performs translation and sends it to the RAVE for verification. The RAVE receives the password and checks it against the password stored in a data structure. The password is valid and the RAVE returns a validation response along with the contents of the distribution list. Other elements of the network then process the message. In further embodiments of the invention other network elements such as the LAMB DART other ARCs SCIs and other RAVEs may perform the distribution look up and password validation functions described.

After entering the message to be sent the subscriber enters the type of notification he wishes to receive as depicted in exemplary step . In one embodiment of the invention the subscriber enters the notification type when he enters the message itself. In another embodiment the network prompts the user to enter a notification type. For example a subscriber who sends an SMS message on his cellular phone first enters the destination address and message text. After he forwards the message text and destination address to the network he receives a prompt from the network to enter the type of notification he wishes to receive. This prompt displays a list of notification types and notification destinations.

Notification types may include receipt notification which notifies a sender of a message when the message was received and read notification which notifies the sender of a message when the message is read. The subscriber may also be able to choose a destination for the notification. In this manner a subscriber may receive the notification on any device such as a personal computer pager or cellular phone.

In one embodiment of the invention the notification prompt is generated by a network entity such as a RAVE ARC LAMB SCI or DART. For example a first subscriber may send a message from a web page to a second subscriber. The first subscriber enters the message and destination address into a web send web page. The first subscriber then enters the type of notification he wishes to receive and the address to which he wants the notification sent. This web page is served up by an SCI. In this manner the SCI solicits the notification information and then transmits the notification information to other network entities for processing.

In exemplary steps and the network receives the notification information and processes it. In one embodiment the notification information includes the type of notification requested a message identifier and a destination address or multiple destination addresses to which the notification is to be sent. This information may be passed from a web page to an SCI and then to an ARC. In another embodiment the information is passed directly from a device to an ARC. Upon receipt the ARC performs translation functions and publishes on a network transport the information with the subject notification request. In this case DART entities subscribe for notification requests and a DART entity receives the information. In other embodiments of the invention other network entities such as RAVEs LAMBs and ARCs may subscribe for notification requests. Upon receipt the DART processes the request by accessing an MDS to determine the status of the message. In one embodiment of the invention status information is stored in an MDS along with the message itself and accompanying information. The DART in this case accesses an associated MDS for information to satisfy the notification request.

Upon accessing this information the DART returns the information to the network transport. An ARC receives the information along with the destination address or addresses for the notification message. The receiving ARC translates the notification message into a format that is displayable on the devices associated with the destination addresses. In one aspect a notification message that is sent to multiple devices may require multiple ARCs to perform the proper translation functions. After translation the notification message is sent to the devices at the specified destination addresses as depicted in exemplary step .

In exemplary step the network updates the contents of the cookie with message information. A subscriber accessing a web send web page from his browser sends a message that travels through the network. As previously noted this message can be of any type and can have any destination. The subscriber may send an SMS message from a web page to a device. This message in this example travels through the network to its destination. In one aspect of the invention the destination address and or the origination address are verified by a RAVE entity the message is translated by incoming and outgoing ARCs and the message and accompanying information are stored in a data structure by a DART. In this example the SCI obtains information about the message and adds it to the cookie. The SCI obtains a message identifier which can be in the form of a string of characters and appends that identifier to the cookie. Other various types of information such as transaction identifiers message type codes destination addresses or any other type of message information may be appended to the cookie. In this manner the cookie contains information about the message in this case that the subscriber has sent from a web send web page displayed on a browser.

In exemplary step the network transmits the updated cookie to the subscriber s browser. After appending message information to the cookie the SCI or other server transmits the cookie to the subscriber s browser. The web browser software writes the cookie to the hard drive on the subscriber s personal computer. The various methods of transmitting and writing cookies are known to those skilled in the art.

This process can be repeated many times. For example a subscriber may send several messages from his browser. Each time a message is sent a cookie can be read updated and returned to the browser. Alternatively the SCI or other server may initially read the cookie compile information about all the messages sent from the web page update the cookie with that collective information and then transmit the cookie back to the web browser. Many other combinations of reading updating and returning a cookie are known to those skilled in the art and are within the scope of this invention.

In exemplary step the browser accesses information stored in the cookie. For example a subscriber may initiate a query about the messages he sent from his browser. In this manner a subscriber may query the system for the messages that have been received or read by their intended destination. The information contained in the cookie may be used to satisfy the query request. For example the subscriber initiates a query request from his browser. Upon initiating the query the network reads the cookie and obtains the message information. In one aspect of the invention the message information comprises a unique message identifier for each message sent. The network obtains the message identifiers from the cookie and performs a query function based on those identifiers. The SCI or other server reads the cookie strips out the message identifiers and passes a query request along with the identifiers to an incoming ARC. The ARC translates this request along with the identifiers into a common format and transmits this information to another network entity such as a DART RAVE or LAMB. A DART receives the request along with the identifiers and obtains the status of the messages from a connected data structure. The DART may perform a simple look up in an MDS based on the message identifiers. The DART may then return the requested information to an ARC for translation. This information may then pass through an SCI or other server to be displayed on the subscriber s browser.

In another embodiment of the invention the browser simply reads the message information from the cookie and displays it to the subscriber. In this example the cookie may be updated by the network so that it contains information about whether the messages were received or read. In this manner the network may read the cookie and update it with various information about the status of the message.

Finally in exemplary step the message information is displayed on the browser. This information can be displayed on the browser in any format and methods for displaying information on a browser are known to those skilled in the art.

In this embodiment the SCI serves up web page content monitors the web page receives responses from the web page and processes those responses. At stage the SCI retrieves web page content to be displayed on a web page and at stage displays that content on the web page. The SCI may access a data storage device to obtain the web page content and may also update portions of a web page with that content. At stage the SCI monitors the web page for responses from subscribers. At stage the SCI receives a response and at stage the SCI processes that response. The SCI then continues to monitor the web page for further responses as illustrated in stage .

If the response is not a query request the flow proceeds to stage in which the SCI determines if the response is a request to create a password. In many instances a subscriber may be able to create a password that can be associated with different aspects of his account. For example a subscriber may be able to create a password protected distribution list. If the request is a create password request then the SCI parses out the password entered by the subscriber as depicted in stage . In this manner the response itself contains a request to create a password along with the desired password. At stage the SCI places the password along with a request on the network transport. Alternately the SCI passes the request and desired password to an ARC for translation before the request and desired password are placed on the network transport. At stage the SCI receives confirmation that the password has been created in the system. In one embodiment this confirmation acknowledges the creation of the password as well as the password itself. At stage the SCI displays the confirmation information on the web page.

If the response is not a request to create a password then the SCI determines if the response is a password required response as illustrated in stage . For example a subscriber may wish to access a password protected distribution list. In such a case the subscriber must enter the password when prompted by the web page. The entry of this password is transmitted to the SCI for processing in the form of a password required response. At stage the SCI parse out the password. The SCI places the password along with a request on the network transport for processing by the network as illustrated in stage . Alternately the SCI passes the request and password to an ARC for translation and the ARC places the translated request and password on the network transport.

At stage the SCI receives the response from the network. Typically this response contains information about the validity of the password. At stage the SCI based on the response from the network determines whether the password is valid. If it is valid then the SCI permits access as depicted in stage . If the password is invalid then the SCI denies access as illustrated in stage .

If the response is not a password required response then the SCI determines if it is another type of request as illustrated in stage . As noted the SCI is capable of performing numerous functions by receiving responses entered by subscribers into a web page. If the response is a type of request then the SCI parses out the necessary information in stage . At stage the information along with a request is placed on the network transport for processing by the network. Alternately the information and request are transmitted to an ARC for translation. At stage the SCI receives a response to the request and at stage the SCI displays the relevant information. Finally if the response is not a type of request then the SCI performs error handling functions as illustrated in stage .

LAMB module may further comprise a LAMB processor and a data storage module . LAMB processor typically comprises a network input output I O module for interfacing with network transport layer and a console input output I O module for interfacing with user console . LAMB processor may also comprise a memory and a central processing unit CPU . CPU may process instructions stored in memory for administering an error condition. Additionally CPU may interface with data storage module to record information relating to message moving through the communications network. Optionally memory and data storage module can be part of the same storage device.

For those messages that do provoke an error condition the message is replayed through the communications network in step . Step may comprise transmitting the message through the communications network in a safe mode of operation as is known in the art at the behest of a user and or on a step by step basis. Moreover if for example the transmission of the may cause damage or other deleterious effects to the communications network flags may be added to certain portions of the message indicate that certain operations associated with the message transmission are dummy operations i.e. for troubleshooting and not for actual execution. This flagging operation may be implemented manually by a user or automatically via software resident in LAMB module for example.

Turning now to an exemplary method for stepping through a message transmission consistent with an embodiment of the instant invention will now be described. In step instructions are received from a user console about an element of the communications network on which to focus. Typically a user will input a desired element for the focus at the user console based on the user s notion that a particular element is at the root of the error condition. Elements on which to focus may comprise for example SMSCs ARCs RAVEs or DARTs. In step a user may command the stepping of the message through the communication network wherein the LAMB module receives instructions from the user console to perform the next step of the message transmission. Response information related to the response of the element of focus is recorded in step . This response information may comprise for example details associated with an error condition. In step this response information is transmitted to the user console.

In this way the information may be used by the user to troubleshoot problems associated with the message transmission. Step may then revert back to step as needed to complete all steps necessary to transmit the message through the communications system.

Turning now to in a first exemplary embodiment a content router may be operatively connected to a multiplexer . Content router may modify the destination and or text of a message moving through the communication network. Multiplexer is operatively connected to one or more External Short Message Entities ESMEs which may send request messages comprising for example a command and at least one parameter.

Multiplexer is also operatively connected to one or more short message service centers SMSC which are responsible for providing response information in response to query messages such as those that may be sent from content router . SMSC may comprise a content provider such as an Internet or Intranet website or any other information provider. Multiplexer may route request messages based on instructions provided by content router to and from various SMSCs that provide information content. SMSCs may then send a query response message back through multiplexer to content router . Content router may then send a request response message back to ESMEs .

Content router which may monitor the network transport layer for such request messages may then receive the request message and process the request message. Such processing may comprise for example sending a query message through an ARC to an SMSC based on the command and the at least one parameter. SMSC functions to provide information content. Thus SMSC may in turn send a query response message back through an ARC to content router via the network transport layer . Here again content router may process the received query response message. After processing content router may send a request response message back to ESME via network transport layer and an ARC .

Additionally network transport layer may be operatively connected to a RAVE which may act as a address aliasing facility to all elements of the communications network. In this way the aliasing facility may receive a destination address which is typically an abbreviation or shortened code and send out its associated long code address or telephone number back to a requesting entity.

In step content router parses the received message determine the command and optionally one or more parameters. In some cases content router may receive some messages where the command is not recognized. As an optional step to the exemplary method content router may determine if the received message contains a recognized command. If the received request message does not contain a recognized command content router may optionally send a further information request back to the entity that sent the request message. This further information request may seek clarification of the command in the original request message. Furthermore content router may send a query message comprising a default command if the received request message does not contain a recognized command.

Another optional step may be used for handling commands that are not recognized. This step comprises parsing received request message for at least a semblance of a recognized command. In actuality this semblance of a recognized command may comprise a fragment of a command a misspelled command an aliased command a command concatenated to a parameter a command concatenated to an address or an abbreviated command for example. Once this semblance of a command is recognized a recognized command may be associated with the semblance of a command. In this way the associated command may be sent with a query message. The present invention contemplates that the step of associating a known command with a semblance of a command may be implemented via lookup tables dictionaries heuristics and or experience. Furthermore the present invention contemplates that this step may be adaptive and changeable as new permutations of commands are encountered.

Using the command and the parameter s content router fashions a query message based on a protocol associated with a content provider step . This step acknowledges that content providers such as SMSC may have specific message protocols for obtaining information that likely differ from those of the entity sending a message request. Optionally the command may be associated with a certain content provider such that all messages comprising that command are sent to the certain content provider. In step content router sends the query message to the content provider.

Content router receives a message parses the message for a command fashions a query message in the format recognized by the content provider and sends the query message to the content provider.

Typically the content provider will process the query message in its own proprietary fashion. For example the content provider may comprise an Internet or Intranet web site. Thus data from the content provider may be obtained for example by sending a message that fills out appropriate fields in a web page and submits a request for information.

Again with reference to content router may receive a query response message from the content provider in step . In step the content router may parse the query response message for the response information which should comprise the information originally sought in the message request. The content provider fashions a request to the response message based on this response information and based on a protocol associated with the message request step . In step content router sends the request response message typically to the device that sent the original message request. Typically the protocol associated with the message request is actually the protocol of the device that sent the message request. Thus step fashions a message that may be understood by the entity that sent the original message request.

Turning now to another exemplary method will be described for retrieving information according to an embodiment of the present invention. In step content router receives a message request. As mentioned above this message request may originate in an ESME such as a mobile telephone or other wireless communication device. Message requests may comprise a command and or at least one parameter and a destination alias or a destination address. In step content router sends and address request message to an aliasing facility such as for example a RAVE . The content router may then transform the destination alias into its associated destination address e.g. a long code address or telephone number which is then sent back to content router . In step content router receives the destination address.

Content router fashions a query message in step based on a protocol associated with the destination address. Typically the protocol of the device to which the query message is being sent will dictate the protocol of the query message such as for example the posting of form data in a predetermined format for a Intranet or Internet web site. The query message is sent to the destination address in step by content router . Typically a device associated with the destination address such as a content provider will process the query message and send a query response message back to content router . In step content router receives a query response message from a device associated with the destination address.

Content router may fashion a request response message in step . This request response message may be based on a protocol associated with the request message. In step content router sends this request response message typically to the device that sent a message request. This device could comprise an ESME such as a mobile telephone or other wireless communication device. However it is contemplated that content router may send the request response message to other devices without departing from the scope of the present invention.

Content provider can then fashion a request response message comprising this information and send the request response message back to the device that sent the original message request. Furthermore content provider would fashion the message based on a protocol associated with this device such that the sent message would be understood by the device. Typically this device would be an ESME such as a mobile telephone or other wireless communication device. Thus the stock price information could be displayed by the device remotely.

An exemplary embodiment of the present invention may use a database for storing the processing rules.

An exemplary embodiment of the present invention may provide a web based interface to maintain processing rules.

An exemplary embodiment of the present invention may support keyword selection from the content of a message.

An exemplary embodiment of the present invention may support keywords with regular expressions for example a rule with h i elp may accept help and ielp.

An exemplary embodiment of the present invention may support intelligent keyword selection. Keywords may be treated as if they do not have white space E.g. Help Games can be listed as HelpGames 

An exemplary embodiment of the present invention may support arguments in the message contents e.g. keyword followed by multiple arguments .

An exemplary embodiment of the present invention may support variable tags for argument selection e.g. 1 2 3 .

An exemplary embodiment of the present invention may allow multiple Destination Keyword combinations to take one specific action

An exemplary embodiment of the present invention may support an engine which uses both the content and subject for rule evaluation.

An exemplary embodiment of the present invention may allow modification of the originating and or destination address of the message.

An exemplary embodiment of the present invention may selectively create new content based on some all of the parameters of the original message.

An exemplary embodiment of the present invention may use delimiting characters space comma hash star etc to identify keywords and parameters.

If a routing rule does not exist then a default action may be provided e.g. notify the originator of the problem .

It will be readily apparent to those skilled in this art that various changes and modifications of an obvious nature may be made and all such changes and modifications are considered to fall within the scope of the appended claims. Other embodiments of the invention will be apparent to those skilled in the art from consideration of the specification and practice of the invention disclosed herein. It is intended that the specification and examples be considered as exemplary only with a true scope and spirit of the invention being indicated by the following claims and their equivalents.

