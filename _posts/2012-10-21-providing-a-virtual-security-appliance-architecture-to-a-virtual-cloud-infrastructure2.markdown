---

title: Providing a virtual security appliance architecture to a virtual cloud infrastructure
abstract: A method in an embodiment includes detecting a change for a virtual machine in a virtual server of a virtual network infrastructure, determining whether a virtual security appliance is configured in the virtual server, and sending a request to create the virtual security appliance in the virtual server. The method further includes allowing the virtual machine to initiate when the virtual security appliance is created in the virtual machine. The virtual security appliance performs security inspections on network packets sent from the virtual machine. In more specific embodiments, the method further includes creating an intercept mechanism in the virtual server to intercept the network packets from the virtual machine. In further embodiments, one or more security policies identify one or more virtual security appliances to process the network packets from the virtual machine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09571507&OS=09571507&RS=09571507
owner: McAfee, Inc.
number: 09571507
owner_city: Santa Clara
owner_country: US
publication_date: 20121021
---
This disclosure relates in general to virtualization and more particularly to providing a virtual security appliance architecture to a virtual cloud infrastructure.

The evolution of virtualization techniques has coincided and to some extent has merged with the movement toward cloud computing. In general virtualization obscures hardware characteristics of a computing platform and instead presents an abstract platform that can host other platforms including complete operating systems. One popular virtualization technique is to deploy a hypervisor also known as a virtual machine manager that can allow guest software including complete operating systems to run concurrently on an abstract host platform. The hypervisor can provide a simulated computing environment often referred to as a virtual machine for its guest software. Thus multiple disparate operating systems can run under a hypervisor on a single physical machine for example.

Cloud computing is generally the use of computing resources that are delivered as a service over a network such as the Internet. In cloud computing various remote computers servers and data storage systems can provide services by storing data and hosting applications. End user computers can access applications in the cloud infrastructure via a web browser or other application that provides network access to a host. Typically compute storage and network resources are offered in a cloud infrastructure effectively shifting the workload from a local network to the cloud network.

Virtualization applied to a cloud infrastructure can provide numerous benefits. In particular a virtualized cloud infrastructure can maximize the output of the physical machines in the infrastructure can enable customers to buy only the resources it uses or wants and can provide flexibility and speed in responding to changes in a customer s network resource requirements. Virtual machines however are likely to become more popular targets for malicious attacks as the use of virtualized cloud infrastructures continues to grow. While cloud virtualization provides many advantages it can also present unique security challenges as the nature of the virtualized infrastructure is to enable quick deployment of new resources. Hence many challenges remain for providing a secure virtualized cloud infrastructure.

A method in an example embodiment includes detecting a change for a virtual machine in a virtual server of a virtual network infrastructure determining whether a virtual security appliance is configured in the virtual server and sending a request to create the virtual security appliance in the virtual server. The method further includes allowing the virtual machine to initiate when the virtual security appliance is created in the virtual machine. The virtual security appliance performs security inspections on network packets sent from the virtual machine. In more specific embodiments the method further includes creating an intercept mechanism in the virtual server to intercept the network packets from the virtual machine. In further embodiments one or more security policies identify one or more virtual security appliances to process the network packets from the virtual machine.

A method in another example embodiment includes polling a virtual security appliance in a virtual server of a virtual network infrastructure to determine a utilization rate of the virtual security appliance sending a request to a cloud manager to increase computing resources for the virtual security appliance if the utilization rate is above an upper threshold amount and sending a request to the cloud manager to decrease computing resources for the virtual security appliance if the utilization rate is below a lower threshold amount. In the method network packets associated with one or more virtual machines in the virtual server are routed to the virtual security appliance. In more specific embodiments the network packets are intercepted prior to being routed to the virtual security appliance.

Generally communication system may be implemented in any suitable type or topology of network e.g. Intranet Extranet LAN WAN WLAN MAN VLAN VPN cellular network etc. or suitable combinations thereof including wired and or wireless communication. Elements of may couple to one another through simple interfaces or through any other suitable connection wired or wireless which provides a viable pathway for network communications. Additionally any one or more of these elements may be combined or removed from the architecture based on particular configuration needs.

Network traffic is a form of network communications and is inclusive of packets frames signals data etc. can be sent and received according to any suitable communication messaging protocols. Suitable communication messaging protocols can include a multi layered scheme such as Open Systems Interconnection OSI model or any derivations or variants thereof e.g. TCP IP . Additionally messages requests responses and queries are forms of network traffic and therefore may comprise packets frames signals data etc. In certain communication protocols such as TCP IP a single message request response or query may be broken down into multiple packets which define a packet stream. A packet stream may also be referred to herein as a flow which can include non byte stream exchanges such as voice over IP VOIP or domain name service messages. Moreover a flow can also be identified by properties including but not limited to a 5 tuple i.e. source IP address destination IP address source port destination port and IP protocol a physical port of an appliance a virtual port a VXLAN and or a VLAN. As used herein the term data refers to any type of binary numeric voice video textual or script data or any type of source or object code or any other suitable information in any appropriate format that may be communicated from one point to another in electronic devices and or networks.

For purposes of illustrating certain example techniques of communication system it is important to understand the communications that may be traversing the virtual cloud infrastructure. The following foundational information may be viewed as a basis from which the present disclosure may be properly explained.

Networks with dedicated local hardware resources are fast being replaced with cloud based virtual infrastructures. Organizations such as businesses schools and governmental agencies are beginning to recognize the advantages of offloading information technology to a cloud based virtual infrastructure.

One type of cloud virtualization includes allocating virtual networks for each network in a non virtualized data center. Each physical machine may also be virtualized on the virtual network. Generally the virtual infrastructure parallels the physical infrastructure in this implementation. There is some ability to provide security within this configuration including simply maintaining the same security used prior to the virtualization.

Another virtualization solution is based on a flat unstructured network in which servers and their internal networks are all connected in a single flat network with no network elements such as routers or firewalls to give it a structure related to its purpose. A flattened network allows certain portions of a network to be allocated based on the needs of a particular entity. For example Information Technology IT administrators can allocate a portion of a virtualized data center based on compute storage and network requirements. A management console may be provided to allow the IT administrator to request a desired number of networks a desired amount of processing capabilities and a desired amount of data storage which can be created anywhere within the virtualized infrastructure. Thus virtual machines may be created anywhere within the virtual infrastructure and this may be transparent to the entity or user . Moreover virtual machines networks and data storage may be moved within the infrastructure based on particular needs in managing the infrastructure. Such changes may also be transparent to the entity. The entity may have access to its allocated compute network and data storage resources without actually having knowledge of the physical location of its resources.

In a structured network network administrators typically estimate or measure network usage and decide where and what kind of security equipment to allocate. This often leads to a relatively static and expensive deployment of security appliances because the appliances need to be over allocated to meet burstiness of network traffic or growth over time. The ability to transparently add and move resources within a flattened virtual cloud network can provide significant flexibility in deploying desired network resources. However the common practice of locating security devices at strategic points in the topology of a network is at conflict with the deployment of flat unstructured networks that provide superior flexibility to the hypervisor. What is needed is a Security solution that uses system resources depending on the load and that provides flexibility and scalability as the security needs change.

In accordance with an example embodiment communication system can resolve the aforementioned issues associated with providing security in a virtual cloud infrastructure. More specifically virtual security system of communication system includes a distribution layer at a front end network stream level that routes packets of network traffic to back end security processes. The distribution layer can perform policy functions to determine which back end security processes are required for particular data. The distribution layer may then perform routing activities to send the packets to the correct security processes in the correct order. The back end security processes can perform compute intensive security functions on network traffic. The distribution layer can receive packets which may be intercepted from a source virtual machine which can be accomplished using several different interception techniques. The intercept layer of virtual security system can be configured to intercept packets to and from a virtual switch from a configuration using a network interface card s technology e.g. SR IOV and a hardware switching capability or from integrating into an OpenFlow switch framework. The vSWITCH may also provide an API based intercept mechanism.

Using a distribution manager an elastic or flexible system for implementing security controls in the form of virtual security appliances VSAs may be created in a VMM. Traffic may be routed manually to the distribution manager and thus to the VSAs. In another embodiment an intercept mechanism permits traffic to be intercepted by the distribution manager and routed to the VSAs without manual routing. The system can be configured to monitor the VSAs and to request changes to increase or decrease their use of the VMM resources CPU memory storage and or to increase or decrease the number of VSAs in the VMM. The requested changes may be based on the incoming load configured load limits and or security policies of existing virtual machines in the VMM. A policy layer can improve the responsiveness of an elastic or flexible mechanism for configuring desired security controls as the virtual infrastructure changes. The policy layer can detect a change to a virtual machine in the virtual infrastructure or a new or updated security policy for an existing virtual machine and can communicate with the distribution layer to setup and configure any interception mechanisms and additional back end security processes that may be required by policy. Thus the back end security processes in the form of virtual security appliances may be allocated and deallocated as needed. Moreover increments in processing power may be small so that virtual security system does not need to over allocate security processing resources such as VSAs. Accordingly this elastic or flexible security system can grow and shrink as is uses more and less respectively with the presented load.

Turning to the infrastructure of illustrates communication system in which a layered view of virtual security system is provided. Communication system represents a virtual cloud infrastructure that provides allocated resources and networks to one or more respective entities. The allocated resources and networks may be accessed remotely by users through suitable public or private networks such as the Internet another wide area network WAN a virtual private network VPN etc.

Communication system is configured with a virtual cloud infrastructure in which a layer of VMM is represented on physical network devices in a uniform single layer such that the structure of the network has been flattened. VMM represents the VMMs or hypervisors that run on top of hardware layer and manage and monitor virtual machines in communication system . The flattened VMM allows virtual machines to be easily created in communication system and easily moved between different underlying hardware components in hardware layer .

Virtual security system allows users to allocate security in the form of an elastic virtual security appliances VSAs architecture. VSAs can be allocated and deallocated as needed to apply policy defined security controls to network traffic of virtual machines. Policy layer represents one or more policy managers that are provided in communication system to store user defined system defined or default security policies for virtual machines in communication system . Virtual machines may be created or moved via cloud manager . Cloud manager can be configured to allow users to request specific compute hardware and network resources desired in the virtual cloud infrastructure of communication system . The one or more policy managers of policy layer may be configured to communicate with cloud manager . Security manager may enable users to provide policies for virtual machines as they are added or moved via cloud manager for existing virtual machines when security needs change or for yet unknown virtual machines who may need default policies applied. In some instances security manager and cloud manager may be integrated. These managers may be provided as system wide management services for one or more networks configured in communication system . These managers may also be implemented on dedicated hardware e.g. dedicated servers and storage and may run with or without virtualization. In an embodiment the one or more networks may be associated with a particular entity e.g. an enterprise corporation school governmental agency or other organization .

Policy layer may also interact with distribution layer . Distribution layer can include a distribution manager on each virtualized server to setup and configure intercept mechanisms of intercept layer . In intercept layer network traffic from a virtual machine is intercepted and provided to distribution layer . Distribution layer routes network traffic to appropriate security controls which can be in the form of virtual security appliances. Distribution layer may also be configured to interact with cloud manager to allocate and configure virtual security appliances as needed. For example virtual security appliances could be created when virtual machines are added or moved when security policies for a virtual machine are changed and when a policy is added or updated based on other events e.g. when new type of virtual machine joins the network .

Communication system can also include core resources providing various networking protocols to enable network communication. In an embodiment core resources may include AAA server to provide authentication authorization and accounting management for computers to connect and use a network service. One example networking protocol for AAA server is Remote Authentication Dial In User Service RADIUS networking protocol. Core resources may also include DHCP server to configure network elements including user endpoints to enable communication on an Internet Protocol IP network. DNS server can provides a directory service to provide internal system addresses that correspond to human readable identifiers e.g. uniform resource locator . The various core resources may be provided in virtual machines and or may be provided on dedicated hardware in communication system .

Virtualized desktop infrastructure VDI can enable desktop virtualization on remote servers for example in the virtual cloud infrastructure of communication system . In one example a separate virtual machine may be created for each physical desktop. Other virtual machines may also be allocated and created in the virtual cloud infrastructure for a given entity. Services typically provided via a network may be virtualized in a virtual machine and managed by VMM . Examples of services that could be implemented in a virtual machine of communication system include messaging services and business specific services e.g. engineering applications accounting applications manufacturing applications legal applications etc. .

In one example implementation the elements of hardware layer are network elements which are meant to encompass network appliances firewalls servers routers switches gateways bridges load balancers processors modules or any other suitable device component element or object operable to exchange information in a network environment. Network elements may include any suitable hardware software components modules or objects that facilitate the operations thereof as well as suitable interfaces for receiving transmitting and or otherwise communicating data or information in a network environment. This may be inclusive of appropriate algorithms and communication protocols that allow for the effective exchange of data or information.

In regards to the internal structure associated with communication system elements of hardware layer can include memory elements for storing information to be used in the operations outlined herein. Elements of hardware layer may keep information in any suitable memory element e.g. random access memory RAM read only memory ROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM application specific integrated circuit ASIC etc. software hardware or in any other suitable component device element or object where appropriate and based on particular needs. Any of the memory items discussed herein e.g. storage should be construed as being encompassed within the broad term memory element. The information being used tracked sent or received by communication system and in virtual security system could be provided in any database register queue table cache control list or other storage structure all of which can be referenced at any suitable timeframe. Any such storage options may be included within the broad term memory element as used herein.

In certain example implementations the functions outlined herein may be implemented by logic encoded in one or more tangible media e.g. embedded logic provided in an ASIC digital signal processor DSP instructions software potentially inclusive of object code and source code to be executed by a processor or other similar machine etc. which may be inclusive of non transitory media. In some of these instances memory elements can store data used for the operations described herein. This includes the memory elements being able to store software logic code or processor instructions that are executed to carry out the activities described herein.

In example implementations communication system may include software modules e.g. in distribution layer policy layer intercept layer etc. including virtual machines to achieve or to foster operations as outlined herein. In other embodiments such operations may be carried out by hardware firmware implemented externally to these elements or included in some other network device or some other virtual server virtual machine virtual switch or virtual network interface card to achieve the intended functionality. Alternatively these elements may include software or reciprocating software that can coordinate in order to achieve the operations as outlined herein. In still other embodiments one or all of these devices may include any suitable algorithms hardware firmware software components modules managers virtual machines interfaces or objects that facilitate the operations thereof.

Additionally hardware layer may include processors e.g. in servers in network devices that can execute software or an algorithm to perform activities as discussed herein. A processor can execute any type of instructions associated with the data to achieve the operations detailed herein. In one example the processors could transform an element or an article e.g. data from one state or thing to another state or thing. In another example the activities outlined herein may be implemented with fixed logic or programmable logic e.g. software computer instructions executed by a processor and the elements identified herein could be some type of a programmable processor programmable digital logic e.g. a field programmable gate array FPGA an EPROM an EEPROM or an ASIC that includes digital logic software code electronic instructions or any suitable combination thereof. Any of the potential processing elements modules and machines described herein should be construed as being encompassed within the broad term processor. 

In a simplified block diagram illustrates the layers of a virtualized server referred to herein as a virtual server that may be implemented in accordance with the present disclosure. Virtual server may be configured with for example VMware ESX or ESXi SAP or other web services or with command line interfaces remote scripts etc. Virtual server may include virtual machines through . Virtual machines through can have respective operating systems through which run respective applications through . References herein to similar components having the same reference number may be individually referred to by a numerical suffix with the reference number or may be collectively referred to by omitting the numerical suffix.

Virtual server may also include a hypervisor which can run on hardware and which provides the capability of running multiple instances of operating systems and associated applications . Hypervisor can also be referred to as a virtual machine monitor VMM which can be associated with a single machine such as virtual server . Hypervisor and hardware can be can be part of VMM and hardware layer respectively of communication system in . The operating systems and applications can be run concurrently by dynamically allocating the hardware resources to operating systems and applications as needed. In this arrangement applications are logically run on top of respective operating systems which are associated with respective virtual machines and are provided with virtual hardware e.g. switches processors CD DVD drives floppy drives memory SCSI devices network interface cards parallel ports serial ports etc. . A virtual switch is a software program that allows communication between for example virtual machines and other virtual components and may operate in a manner similar to physical L2 or L3 switches.

Physical hardware beneath hypervisor may include a processor a memory element and a network interface card NIC . Hardware may also include additional components such as for example a layer 2 L2 switch. The entire configuration may be provided in a server or some other suitable network element . This implementation is only representing one possible example to which the present disclosure can apply. Any number of additional hypervisors or virtual elements could similarly benefit from the broad teachings discussed herein.

Typically in server virtualization an authorized user is provided with an interface to manage a complete setup of virtual machines and the associated applications operating systems and virtual hardware. This management includes the hypervisor configuration and virtual machine configuration including creation deletion modification shutdown startup etc.

In cloud virtualization an authorized user may be provided with a console and an interface to manage a complete setup of a virtual infrastructure in the cloud. The cloud could be a remote datacenter public or private. A cloud could be a remote or local private network. Generally the authorized user may be able to request specific compute storage and network resources from the console. These resources can then be allocated in the cloud without the user having knowledge of the exact physical hardware components that are being used.

Not shown in is additional hardware that may be suitably coupled to processor memory element and or network interface card . Additional hardware may include but is not limited to memory management units MMU additional symmetric multiprocessing SMP elements physical memory Ethernet peripheral component interconnect PCI bus and corresponding bridges small computer system interface SCSI integrated drive electronics IDE elements.

For ease of illustration not all components associated with a virtual server as described with reference to virtual server of are shown in subsequent FIGURES. However it is to be understood that any of the components modules hardware firmware or software described with reference to virtual servers in may also be included albeit not necessarily shown in other FIGURES herein.

Virtual security system illustrates example components of virtual security system implemented in virtual server . In the example implementation in virtual server virtual security system can include a flexible collection of virtual security appliances VSAs through a distribution manager a policy manager a source route mechanism and an intercept mechanism .

In an embodiment guest VMs VSAs distribution manager and policy manager are all configured as virtual machines of virtual server and are managed by hypervisor . Although policy manager is generally referred to herein as a virtual machine in any of those embodiments it could alternatively be hosted directly on a physical server. For example policy manager may be included with system wide management services at least some portions of which are not configured as virtual machines.

Guest VMs represent at least some untrusted VMs. Therefore policies in VM security policies may require security inspections by one or more VSAs of network traffic from guest VMs . Each guest VM may have its own unique policy with particular requirements regarding which VSAs are to receive network traffic from the guest VM and the order in which the VSAs should receive the network traffic. Guest VMs can be compatible with standard platform machines and may not have any special drivers or other software to participate in security mechanisms. Thus virtual security system can be applied to pre existing installations or standard enterprise platforms.

VSAs represent trusted virtual machines that implement any suitable type of security inspection. Security inspection as used herein is intended to include any type of network security mechanism including but not limited to intrusion prevention systems IPS intrusion detection systems IDS firewalls FW data loss prevention DLP antivirus scanning deep packet inspection whitelist evaluations and blacklist evaluations. VSAs may have particular knowledge of intercept mechanism or source route mechanism . Moreover VSAs generally run in bump in the wire mode. Thus firewalls in explicit routing mode can operate outside of virtual security system .

Guest VMs other virtual machines e.g. distribution manager policy manager and VSAs may communicate with each other via one or more of vSwitches . In some embodiments vSwitches may be combined into a single domain i.e. a single switch which is used for VSAs and potentially other VMs to communicate with each other and for guest VMs to communicate with each other. In some embodiments special functionality may be provided in NIC to enable guest VMs other VMs and or VSAs communicate via L2 switch . An example of this special functionality is the Single Root Input Output Virtualization SR IOV mechanism. SR IOV is used to enable direct memory access DMA and will be further described herein.

Distribution manager can maintain a streams database to track connections between guest VMs and other virtual machines such as VSAs . A VM security policies database can include one or more lists of VSAs through which the network traffic from each guest VM is to be routed. Lists may be similar to a router or layer 3 L3 switch and may include for example a media access control MAC address for each VSA . The list could be a single list applicable to all guest VMs individualized lists for each guest VM or different lists for each set of guest VMs with the same security policy requirements.

A source route mechanism is also part of virtual security system and may be provided at least in part in distribution manager . Source route mechanism may be configured to enable distribution manager to route a packet through one or more VSAs before the packet is returned to distribution manager . Several variations of source route mechanisms may be implemented. The different routing mechanisms may lead to optimized network traffic paths that avoid physical network data at all if flows pass between vSwitches on the same hosts e.g. servers . The variations of source route mechanisms will be further described herein.

An intercept mechanism is also part of virtual security system . In an embodiment intercept mechanism may be provided in a vSwitch to intercept each packet received from guest VMs and redirect the intercepted packets to distribution manager . Several intercept mechanisms may be implemented in virtual security system and will be further described herein.

Policy manager includes a policy module to update security policies for guest VMs in distribution manager . Policy manager may also include VMM security policies database . VMM security policies database may have security policies for guest VMs of virtual server in addition to other guest VMs of other virtual servers in communication system . In an embodiment policy module can use VMM security policies database to update VM security policies database with security policies for guest VMs .

Additionally or alternatively policy module can use VMM security policies database to update streams database . In this scenario distribution manager may be configured to build up streams database using a common algorithm for a layer 3 L3 switch. Distribution manager can be configured to query policy manager for every new packet stream. In response to a query policy module can add to each packet stream database entry the identities e.g. MAC addresses of VSAs that should process the particular packet stream associated with that entry.

Policy manager may also be configured to facilitate the allocation of new VSAs as needed and potentially the configuration of intercept mechanism also. If an appropriate VSA as required by policy is not available to process a packet stream then policy module can coordinate with other modules managers and virtual machines e.g. distribution manager cloud manager security manager etc. to cause a new VSA to be setup configured and initiated. This scenario may occur for example the first time a particular VSA is needed e.g. a first stream to need a DLP appliance . In another scenario a given VSA may need to consume more computing resources e.g. RAM processor resources etc. to process a new packet stream.

Policy manager or distribution manager can also facilitate managing the computing resources needed by the VSAs. In particular policy manager or distribution manager may be configured to estimate or query the capacity of all the existing VSAs. If policy manager or distribution manager determines that more capacity is needed then a new packet stream might trigger a new VSA or might cause one of the existing VSAs to be enabled to use more central processing units CPUs .

Policy manager or distribution manager can also be configured to detect that a given duplicate VSA in a virtual server is under utilized to stop sending packet streams to it until it is idle and then to delete its virtual machine. Alternatively if a duplicate VSA is under utilized then its packet streams may be rerouted to the other similar VSA if the other VSA can accommodate the additional network traffic load. In this way the virtualization infrastructure is used to create an elastic security mechanism that grows and shrinks according to demand.

A system administrator can allow virtual security system unrestricted freedom in allocating security on demand or may apply a policy to affect the use of system resource. For example the system administrator may limit security resources to no more than 10 of system resources. If the VSAs allocated in that 10 cannot handle the network traffic the VSAs can slow down the network traffic the system administrator can change their policies to allow them to process the traffic more selectively or the system administrator may decide to allocate a higher percentage of system resources to VSAs.

Guest VMs are connected to each other via a switch . Switch may be a virtual switch in some embodiments. In other embodiments switch may be a physical switch located for example in a network interface card on virtual server or external to virtual server . VSAs are shown connected to each other via vSwitch . Generally switches and are shown separately for purposes of clarity. Thus switches and can typically be combined into a single domain that accommodates particular intercept mechanism techniques and source routing techniques. In some embodiments however vSwitch and switch may be different switches.

In intercept mechanism and source route mechanism are generalized and represent several different configurations which will be further described herein. In the example scenario of a packet is sent from VM to VM . The packet has a source address of VM1.MAC and a destination address of VM2.MAC. Intercept mechanism causes the packet to be intercepted and or redirected to distribution manager instead of flowing to VM2.MAC.

If the packet is the first packet in a packet stream then distribution manager builds up streams database . In one embodiment VM policies database contains security policies for guest VM . For example VM policies database may contain the identities of VSAs that should process packet streams of guest VM . In another embodiment distribution manager queries policy manager for the security policy of guest VM . Policy manager provides the identities of each VSA that should process the packet for example by direct query or in a pre provisioned policy that identifies the VSAs that match flows with certain parameters. Once the identities of the appropriate VSAs are obtained their identities can be added to each stream database entry associated with the packet stream. In this example scenario the identities of VSA and VSA can be added to stream database .

If the packet received by distribution manager is not the first packet of a packet stream then distribution manager performs an L3 inspection of the packet and looks up the stream in stream database . From data in the stream entry distribution manager creates a source route through the required security devices. In this scenario VSA and VSA are selected. When the source route is created database manager can transmit the packet via switch to VSA . VSA is an IPS device which can perform security scanning on the packet contents. If the packet passes the security scanning VSA may forward the packet to VSA using the same source route mechanism . VSA is a firewall that applies firewall policy to the packet. After the firewall policies are applied to the packet VSA may return the packet to distribution manager using the final step of source route mechanism . Then distribution manager sends the packet to destination guest VM .

Either of the VSAs VSA or VSA may block or change the packet en route. For example if the packet does not pass security scanning of VSA or if the packet does not comply with firewall policies of VSA then either of these VSAs may block or change the packet.

A source route mechanism e.g. may be used by a distribution manager to route packets within a packet stream to multiple virtual security appliances in a particular order. Source route mechanism is invoked after network traffic between guest virtual machines is intercepted by an intercept mechanism. Generally the distribution manager takes some data from its tables e.g. streams database each time a packet is received and modifies the packet so that each VSA can route the packet correctly to the next VSA or back to the distribution manager.

A source route mechanism may be configured in various ways to achieve the desired routing of packets from a guest VM to VSAs as required by security policies for the guest VM. In one implementation the source route mechanism is implemented the source route is defined in Requests for Comment RFC 791 Internet Protocol Darpa Internet Program Protocol Specification September 1981. This mechanism can be used if distribution manager and each of the VSAs implements router functions. For example if the virtual machines e.g. guest VMs and VSAs are implemented with operating systems that have inherent routing functionalities then the operating system provides this functionality. This technique enables a standard operating system implementation to do the source route.

Assume the above types are byte wise packed. In the above the first part of the header looks like an Ethernet II MAC header. Although this configuration is described with reference to MAC headers suitable changes may be made to accommodate other types of headers such as networks using IEEE 802.3 headers. An original packet starts after the mac src route header. The offset for this can be computed as num src type 6 14 for each VSA to recover the original packet. During processing the mac src route header needs to be preserved. In one example a flow table may be constructed at driver level to use the same header for each packet in a packet stream. On output the src route next header is incremented and the next mac address in the src route array is copied over the dst field.

Distribution manager creates the mac source route header for each packet stream when the packet stream begins. The src route array has the MAC address of each VSA needed to process this packet stream. These MAC addresses are part of the configuration of distribution manager . Alternatively distribution manager can derive the MAC addresses using address resolution protocol ARP bonjour or hypervisor calls. Src route next is set to zero and the MAC address of distribution manager itself is put as the last destination.

A source route mechanism using hardwired virtual ports can be implemented with virtual interfaces and virtual switches. Distribution manager receives network traffic that is intercepted using an intercept mechanism as will be further described herein . The network traffic may originate from a source guest virtual machine in virtual server and have a destination address of a destination guest virtual machine in virtual server or some other destination address external to virtual server . The network traffic may alternatively originate from a source external to virtual server and have a destination address of a guest virtual machine in virtual server .

Once network traffic has been received by distribution manager each packet stream is allocated to a set of VSAs which are wired so that the traffic goes from an output port of one VSA into an input port of another VSA. A final port is sent to distribution manager . If all VSAs are implemented as bump in the wire the traffic flows through an effective source route. In this scheme the VSA may need extra resources to implement many virtual interfaces or an additional VSA may be needed to implement all the options. In another implementation an additional virtual local area network VLAN tag may be used for each of the routes.

Since the number of different paths increases exponentially with the number of different security devices this approach is better suited to a smaller number of VSAs. However in some network environments only a small number of security devices are desired and they are generally arranged in a defined order. Thus the hardwired virtual port option for a source route mechanism may be particularly advantageous in these types of configurations.

With reference to the example scenario of hardwired virtual ports perform source routing. Distribution manager and each of the VSAs IPS FW and DLP have many virtual interfaces. These are wired together in the diagram using lines which represent one or more virtual switches between them. In an embodiment a driver in each output interface may be statically configured with the MAC address of the next input interface or may use promiscuous mode in receiving interfaces to simulate a direct connection between two ports.

Packets can arrive from the intercept mechanism on port p of distribution manager and may be sent back on port q . To send to IPS only distribution manager sends a packet on port d and receives the output on port e . To send to FW only distribution manager sends a packet on port f and receives the output on port g . To send to DLP only distribution manager sends a packet on port h and receives the output on port j .

To send to IPS and DLP in that order distribution manager sends a packet on port c and receives the output on port k . To send to IPS and FW in that order distribution manager sends a packet on port b and receives the output on port n . Additional ports on distribution manager could allow an additional hardwired virtual port route to be configured between FW and DLP . Finally to send to all of the available VSAs IPS FW and DLP in that order distribution manager sends a packet on port a and receives the output on port m .

At distribution manager receives a packet that was intercepted from a source guest virtual machine. At for a first packet of a packet stream the distribution manager may determine a security policy for the packet stream. In one embodiment the distribution manager may search VM security policies database to determine the identities of the VSAs that should process the packet stream. In another embodiment the distribution manager may query policy manager . Policy manager may provide the appropriate security policy for the source guest virtual machine to be applied to the packet stream. The security policy can include the identities of the VSAs that should process the packet and the order in which the VSAs should process the packet. The identities e.g. MAC addresses of each VSA in the security policy may be added to each entry in streams database that is associated with the packet stream.

At the distribution manager creates a route for the packet to the appropriate VSAs. The source route can be derived from streams database . From data in one or more entries of streams database that are associated with the packet stream the distribution manager creates a source route through the required VSAs . For some embodiments the distribution manager may modify the packet to include the source route and thus enable VSAs that receive the packet to forward the packet appropriately.

At the distribution manager can send the packet to the first VSA identified in the source route. At it is determined whether the distribution manager has received the packet back from the VSAs. If the distribution manager has received the packet then it can be assumed that the packet either passed the security inspection of all of the VSAs or that the packet was modified by one or more of the VSAs to comply with their particular security inspection requirements e.g. firewall policies antivirus scan etc. 

If the packet is received by the distribution manager then at the distribution manager can route the packet to its original destination. For example the destination may be another guest virtual machine on the same virtual server or may be another guest virtual machine on a different virtual server.

If the packet is not received back by the distribution manager such as after a specific amount of time has elapsed with no packet received or if a VSA sends a message indicating the packet was dropped then any appropriate action may be taken by the distribution manager as shown generally at . Actions could include but are not limited to sending error messages sending alerts to a system administrator or other authorized user and blocking new packets from the same source guest virtual machine. In an embodiment the distribution manager may determine to take certain actions after a certain period of time passes without receiving the packet or after receiving a notification from a VSA that the packet did not pass security inspection.

In an embodiment using an OpenFlow switch intercept and source route mechanisms may be optimized directly into the switching architecture. Consequently a separate source routing mechanism can be omitted when a controller for the OpenFlow switch is provided with a distribution manager module that can implicitly configure multiple network flow segments of a complete flow at once.

A distribution manager module may be integrated into the OpenFlow controller process for the switch. The distribution manager module can generate the flow routes needed to route packets of a new flow through virtual security appliances via the OpenFlow switch by inserting multiple flows to cover the transit of a new flow through VSAs in accordance with its configured policy. The last such inserted flow eventually routes the packet via the OpenFlow switch to the destination intended by the source of the new flow. In an embodiment the OpenFlow controller process can either control all new flows for the switch or can plug into the normal controller software to override certain decisions. Thus the distribution manager functions as previously described herein are subsumed in the OpenFlow switch by the OpenFlow switch controller.

An OpenFlow controller is also provided in the virtual network infrastructure and includes policy information a flow route table and a distribution manager module . In an embodiment distribution manager module may be a plug in for open source controller . A policy manager may also be configured to communicate with OpenFlow controller and more particularly with distribution manager module . In addition to other functions policy manager may provide policy information updates to policy information which may be stored in any suitable form e.g. database tables queues cache etc. . In an embodiment as shown OpenFlow controller could be configured somewhere in the virtual network infrastructure external to virtual server . In another embodiment OpenFlow controller may be configured in virtual server with OpenFlow switch .

In OpenFlow controller a source route is implicit when a flow route is generated. This enables the switch hardware to automatically handle all packets in a flow after the initial packet and may eliminate the need to process each packet.

Example flow segments i.e. flow 1 flow 2 and flow 3 are shown in to illustrate a possible operational scenario of a virtual security system with an OpenFlow switch having a distribution manager module. For purposes of illustration assume VM initiates a communication to VM . VM can attempt to send an initial connection packet to VM . OpenFlow switch can send a control packet to OpenFlow controller indicating it received an initial connection packet. Standard software may be configured in OpenFlow controller to build flow tables with a flow route from VM to VM . Distribution manager module can override any standard software. Instead distribution manager module can identify one or more policies of policy information that are applicable to the source of the connection packet VM . In an embodiment policy information may be stored in a database or other memory element of OpenFlow controller or may be stored in any other location in the virtual network infrastructure that is accessible to OpenFlow controller .

In this example scenario the policies in policy information indicate that network traffic from VM is to be routed through IPS VSA and FW VSA . Accordingly distribution manager module can create three flow segments flow 1 from VM to IPS VSA flow 2 from IPS VSA to FW VSA and flow 3 from FW VSA to VM . These flow segments can be stored in flow route table . The creation of the flow segments causes the security routing for the specified connection to happen automatically. Distribution manager module can also tie flow segments 1 2 and 3 to both the port number and layer 2 L2 information to increase the specificity of the route provided.

When the network traffic is completed or the connection times out OpenFlow controller may be notified by OpenFlow switch . The flow route segments in flow route table can be deleted. In one embodiment distribution manager module may associate the three flow segments when storing them in flow route table . In another embodiment distribution manager module may re derive the flow segments from policy information and delete the flow segments from flow route table .

In another embodiment the three flow segments may also be programmed into OpenFlow switch incrementally as each flow segment appears. This requires some bookkeeping by distribution manager module . This embodiment may depend upon the particular capabilities of OpenFlow switch .

Turning to is a simplified flowchart illustrating a method for an OpenFlow controller process in accordance with an embodiment. A flow may be a process performed by distribution manager module in OpenFlow controller at least partly when OpenFlow switch receives new network traffic from a guest virtual machine.

At OpenFlow controller may receive policies for guest virtual machines of a virtual server. These policies may be updated policies or new policies that are stored with policy information . At distribution manager module receives a control message for a packet received by OpenFlow switch from one virtual machine such as guest VM to another virtual machine such as guest VM .

At distribution manager module determines the security policy for the packet from policy information . Any pre existing logic of OpenFlow controller that generates flow routes from the source guest VM to the destination guest VM can be overridden at . A new flow route with potentially multiple flow route segments can be created by distribution manager module and provided to OpenFlow switch to route the packet according to the new flow route. OpenFlow switch will consider each flow segment as an independent flow with enough specification such as port numbers to distinguish it from other flows within the switch . The new flow route may include one or more virtual security appliances to which the packet is sent before being forwarded to its actual destination guest VM .

One mechanism for implementing hardware interception is to use a data plane direct memory access DMA mechanism to transfer data from a virtual machine. DMA is a feature that allows certain hardware subsystems of a computer to access system memory independently of a processor i.e. central processing unit CPU .

An example for implementing DMA is the standard Single Root Input Output Virtualization SR IOV mechanism. SR IOV removes the hypervisor from the process of moving data to and from a virtual machine. Instead data is moved directly to and from the virtual machine and thus bypasses the hypervisor including its virtual switch. SR IOV permits one or more interfaces on a physical NIC to implement a two way DMA channel called a virtual function directly to a virtual machine. Thus a single physical NIC is capable of exposing a multitude of virtual interfaces directly usable by either virtual machines or virtual switches. Some hypervisors and some NICs implement the SR IOV specification. By using an SR IOV compatible NIC and hypervisor packets from a given virtual machine may be intercepted i.e. bypass the hypervisor and its virtual switch into a physical NIC. The intercepted packets may be redirected from one virtual function to another virtual function by the built in L2 switch in the NIC. The other virtual function can be assigned to the distribution manager who receives intercepted traffic from that virtual machine.

In some physical NICs multiple SR IOV channels feed into a switch on the physical NIC. In this case the virtual functions from each virtual machine or virtual switch can be adjusted for example by reconfiguring the NIC so that they each redirect to the virtual function dedicated to the distribution manager. This permits the Distribution Manager to intercept process and reroute packets without special purpose hardware.

In a hypervisor is shown with guest virtual machines through virtual switches and and other virtual machines that include a distribution manager and one or more VSAs . In interception is configured at a virtual switch layer rather than at a virtual machine layer. Thus interception occurs between the virtual switches. In tenant includes guest virtual machines VMs and and tenant includes guest virtual machine VM . A virtual NIC vNIC enables each of the guest VMs and distribution manager to communicate to one or both vSwitches and . In an example implementation tenants and can represent strategically and or logically grouped GUEST VMs e.g. finance group accounting group engineering group . Traffic between machines in a tenant such as virtual machines in tenant are not intercepted and so are not affected by the security apparatus. Consequently it may be desirable to carefully allocate virtual machines to vSwitches.

The vNICs of guest VMs through send packets to and receive packets from vSwitches and . At the intercept layer a physical network interface card NIC runs SR IOV and includes a port a layer 2 L2 switch and virtual functions VFs through . VFs allows connection to guest VMs via vSwitches . Accordingly in this implementation connection from VFs is to an edge layer of vSwitches rather than directly to guest VMs .

Distribution manager may be provided to enable routing of flows from particular guest VMs according to predefined policies. Based on the predefined policies one or more virtual security appliances may be configured in virtual server . Moreover distribution manager may implement any of the aforementioned source routing mechanisms to route packets to policy specified VSAs in a desired order.

For purposes of illustration consider an example packet flow from VM to VM . When VM sends a packet to VM the packet flows through vSwitch and needs to connect to VM through vSwitch . The intercept layer is configured to force the packet to go through hardware i.e. NIC . The packet flows through VF and into physical L2 switch . L2 switch sends the packet to distribution manager .

Distribution manager can be configured with any of the previously described source route mechanisms. If a policy is applicable to the packet flow from VM then the packet is routed through one or more VSAs in accordance with the policy to have appropriate security inspections. If the packet successfully passes the one or more VSA security inspections then the packet may be routed back to distribution manager which can then route the packet to vSwitch . The packet is then forwarded to the destination VM from vSwitch .

The return network traffic from VM to VM may also be intercepted and routed through appropriate security controls. A packet from VM flows through vSwitch and needs to connect to VM through vSwitch . The intercept layer e.g. using SR IOV forces the packet to go through NIC . The packet flows through VF and into physical L2 switch . L2 switch sends the packet to distribution manager via VF .

If a policy is applicable to the packet flow from VM then the packet is routed through one or more VSAs in accordance with the policy to have appropriate security inspections. If the packet successfully passes the one or more VSA security inspections then the packet may be routed back to distribution manager which can then route the packet to vSwitch . The packet is then forwarded to the destination guest VM from vSwitch .

In some embodiments the distribution manager may determine such as at the beginning of a new flow that no security inspection is needed for the flow. In some embodiments the hardware of NIC supports a configuration to route subsequent packets in these flows directly to their destination vSwitch without needing to flow through the distribution manager.

In a hypervisor is shown with guest virtual machines and virtual switches and and other virtual machines such as a distribution manager and one or more VSAs . In interception is configured partially at a virtual machine layer in which the vNIC of guest VM is wired to a physical network interface card NIC with an L2 switch . Thus NIC implements the desired switching and interception for guest VM . SR IOV runs on NIC and effectively removes hypervisor and its virtual switch vSwitch from the process of moving data to and from guest VM . Virtual function is configured as two way DMA channel directly to guest VM . Therefore virtual switches in hypervisor such as vSwitch are bypassed by guest VM . Network traffic from guest VM is effectively intercepted into NIC . Interception of network traffic from guest VM is at the virtual switch layer and may be configured as described with reference to guest VMs of . An external routing mechanism such as L2 switch can forward packets from both guest VMs to distribution manager .

In distribution manager may be provided to enable routing of flows from particular guest VMs according to predefined policies. Based on the predefined policies one or more virtual security appliances may be configured in virtual server . Moreover distribution manager may implement any of the aforementioned source routing mechanisms to route packets to policy specified VSAs in a desired order. In the example illustration of distribution manager is connected to NIC through vSwitch and VF . This enables distribution manager to communicate with guest VM which has a direct connection into NIC .

At L2 switch receives a packet from a source guest VM . The packet is addressed to a destination guest VM and is received by L2 switch via virtual function VF . The packet is forwarded to distribution manager via VF and vSwitch . In an embodiment NIC may permit a change to L2 switch NIC to enable appropriate routing to distribution manager . Packets from guest VM are automatically routed to a special hardware port i.e. a queue connected to the distribution manager. Thus NIC is modified to allow SR IOV functions feeding into the NIC.

When distribution manager receives the packet it determines whether the packet stream associated with the packet is subject to any security policies. If so then distribution manager may be configured to route the packet to policy specified VSAs using any of the aforementioned source routing mechanisms. If the packet successfully passes security inspections from the VSAs through which it is routed then distribution manager can send the packet back to switch via VF .

At if the packet is not received by switch from distribution manager via VF then flow ends. However if the packet is received via VF then at the packet may be routed to its original destination guest VM . In this case the packet is transferred directly from the hardware of NIC into guest VM via and thus bypasses vSwitches and .

In a virtual server is shown with guest virtual machines guest VMs and . Virtual security appliances represents one or more VSAs configured to apply security inspections to network traffic from guest VMs of virtual server . A virtual switch vSwitch includes an intercept code module and a distribution manager module . A policy manager may be configured as another virtual machine of virtual server or of another virtual server. Alternatively policy manager could be included with system wide management services hosted directly on a physical server. Virtual server and its components may be configured in the same or similar manner as described with reference to virtual server of .

In an example illustration assume guest VM sends a message to guest VM . A packet of a network flow is sent at to guest VM but is intercepted by intercept code module in vSwitch . Intercept code module sends at the intercepted packet to distribution manager module . Distribution manager module obtains a policy to determine where to route the packet. In example embodiments the policy could be obtained from a policy database that is kept updated by policy manager or could be obtained by querying policy manager .

Distribution manager module may modify the packet to include network addresses e.g. MAC addresses for each VSA of the policy. Alternatively the packet could be forwarded to another vSwitch to be routed through VSAs. At distribution manager module sends the packet to the selected one or more VSAs . If all of the security inspections are performed successfully then at the packet is sent back to distribution manager module . Distribution manager module can then forward the packet to its destination VM .

Another possible intercept mechanism involves implementing a switching element as a private virtual local area network PVLAN with a distribution manager on an uplink port. In a PVLAN one port can be designated as the uplink port. Packets sent from any other port are always routed to the uplink regardless of destination media access control MAC address or VLAN. A packet that is introduced through the uplink port is delivered as usual for a switch e.g. according to the destination MAC address .

In this configuration all packets are transmitted to the distribution manager and the distribution manager can route packets to any other virtual machine based on the original MAC address. In this intercept mechanism every packet requires at least one extra hop to and from the distribution manager.

Turning to a simplified interaction diagram illustrates potential operations associated with virtual machine changes in a virtual security system. More particularly illustrates a scenario in which a new virtual machine is deployed or an existing virtual machine is moved within a virtual cloud infrastructure. Additionally illustrates a scenario in which a security policy is updated or added to a virtual machine within a virtual cloud infrastructure. The interacting components of include policy manager distribution manager intercept mechanism and virtual security appliances VSAs of . Also included is cloud manager of which can interact with policy manager in policy layer and distribution manager in distribution layer . The components of may include any of the various embodiments of such components as disclosed herein.

At a user moves an existing guest virtual machine from one location to another location within a virtual cloud infrastructure via a cloud manager . For example a guest virtual machine may be moved from a first virtual server to virtual server with each having separate hypervisors and different underlying hardware. Cloud manager may provide a live migration of a virtual machine from one physical server to another. One solution that provides this capability is VMware vMotion offered by VMware Inc. of Palo Alto Calif.

In another scenario at a user may deploy a new guest virtual machine to a virtual cloud infrastructure via cloud manager . Cloud manager allocates the new guest virtual machine on virtual server . In yet another example a user may update or add a security policy to an existing virtual machine within a virtual cloud infrastructure. The mechanisms for adding new virtual machines and moving existing virtual machines may be managed by a cloud manager e.g. cloud manager of as previously described herein. The mechanisms for adding a new security policy to a new guest VM being added or to an existing guest virtual machine however could be implemented separately. For example a security manager e.g. security manager of may provide a user interface to allow authorized users to update or add security policies to new or existing guest virtual machines. The security manager may communicate updated or new security policies to the policy manager or could enable direct security policy database updates e.g. VMM security policies database . For ease of reference will be further explained with reference to adding or moving a guest virtual machine. However it is to be understood that one or more of the activities described in could be performed when security policies are added or updated for an existing guest VM.

In each scenario policy manager can detect signals from cloud manager indicating that a new guest virtual machine is being deployed or that an existing guest virtual machine is being moved within the virtual cloud infrastructure. In an embodiment an application programming interface API may be used to detect the signals. Upon detecting the signals policy manager may facilitate the creation and or configuration of an intercept mechanism in a location e.g. a virtual server where the guest virtual machine is being deployed or moved. Policy manager may also facilitate the creation and or configuration of appropriate virtual security appliances .

At policy manager may query cloud manager to determine whether any security controls are required by policy for the guest virtual machine. For example the user may have requested that an intrusion prevention system IPS and a firewall FW be applied to certain network traffic from the guest virtual machine.

If security controls are specified for the guest virtual machine then at policy manager may query distribution manager which may be configured as a virtual machine on the virtual server where the guest virtual machine is being deployed or moved. The query can determine whether the specified security controls for the guest virtual machine are already provisioned on the virtual server in the form of virtual security appliances VSAs . If the requested security controls are present in the virtual server then at distribution manager can send a message to policy manager indicating that the requested VSAs are present.

At policy manager may block the guest VM and not allow it to run in virtual server until appropriate VSAs are set up. In some embodiments there may not be a mechanism to block the guest VM and step may seek to limit the security exposure while VSAs are starting up by blocking or otherwise routing traffic to and from the guest VM. For example if the guest VM is being moved to another virtual server the traffic from the guest VM might be routed back to another server such as using a trombone route to use an existing VSA until the new VSAs are running. At policy manager may send a request to distribution manager to configure an intercept mechanism if necessary. In some embodiments the intercept mechanism may be configured by distribution manager .

At distribution manager may configure intercept mechanism . Typically intercept mechanism may be configured in virtual switches or may be inherently present in an OpenFlow switch embodiment. At the distribution manager may also send a request to cloud manager to create the required VSAs. Upon receiving a request at cloud manager can dynamically create VSAs that are specified in the guest VM s security policy. Cloud manager can use an image store with a virtual machine template that allows cloud manager to essentially copy a VSA to create a new one in virtual server .

In some embodiments an intercept mechanism may be configured after a VSA is allocated. For example in hardware interception once a VSA is allocated certain virtual switches and vNICs may need to be reconfigured or rewired to force network traffic to go through the hardware intercept configuration.

Once the appropriate VSAs are created at distribution manager sends a ready signal to policy manager . Policy manager may then at update security policies on distribution manager. At distribution manager configures the new VSAs or existing VSAs . At distribution manager can send a message to policy manager indicating the VSAs have been created and configured and that intercept mechanism is configured. At policy manager can allow the guest VM to run.

In another scenario a new guest VM may be deployed to a virtual server where no security controls have been configured yet. Thus a distribution manager may not have been created in the targeted virtual server. In this instance policy manager may send a request to cloud manager to create a distribution manager at the targeted virtual server. Because distribution manager can be configured as a virtual machine cloud manager can use a virtual machine template for a distribution manager to copy a distribution manager to create a new distribution manager in the targeted virtual server.

In another embodiment some or all of the functionalities of policy manager and distribution manager may be integrated into a single virtual machine. Furthermore some or all of the functionalities of policy server and or distribution manager may be combined with a VSA. In one particular embodiment the policy manager may retain its separate functionality and the functionalities of the distribution manager may be combined with a VSA or dispersed across two or more VSAs. In another embodiment some but not all of the functionalities of the distribution manager may be performed by the policy manager. An integrated policy manager may detect guest VMs being changed e.g. guest VM being added or moved to a targeted virtual server new or updated policy requested for an existing guest VM . The integrated policy manager can communicate with cloud manager to determine whether a security policy applies to the guest VM. If a policy applies to the guest VM then the integrated policy manager can determine whether policy specified VSAs are present in the virtual server and block the guest VM if VSAs need to be created to comply with the policy. The integrated policy manager can also configure an intercept mechanism in certain embodiments can request cloud manager to create any needed VSAs and can configure the VSAs. Once the appropriate security controls are configured in the virtual server the integrated policy manager can allow the guest VM to run.

At policy manager detects a signal indicating a change to a guest virtual machine within a virtual cloud infrastructure of communication system . One example of a change to a guest VM that could be detected by policy manager includes an existing guest VM being moved from one virtual server to another virtual server that has a different hypervisor and different underlying hardware. Another example of a change that could be detected includes a new guest VM being added to a virtual server. A further example of a change that could be detected includes a new or updated policy requested for an existing guest virtual machine.

At a determination is made as to whether security controls are specified by policy for the guest VM. In an embodiment policy manager may query a cloud manager to determine whether a security policy applies to the guest VM. In an embodiment policy manager may query a master security policies database e.g. VMM security policies database or other module separate from the cloud manager to determine whether a security policy applies to the guest VM. The security policy could include a requirement to apply one or more security controls to certain network traffic of the guest VM. Security controls could be in the form of virtual security appliances implementing various types of security such as IPS FW DLP etc.

If security controls are specified then at policy manager sends a query to identify existing VSAs in the virtual server in which the guest VM is to be added or moved. If it is determined at that the policy specified VSAs are not present in the virtual server then at policy manager blocks the guest virtual machine from running.

In some embodiments at policy manager may send a request to distribution manager to configure an appropriate intercept mechanism on the virtual server. For example a hardware intercept configuration may need certain vNICs and vSwitches to be rewired. In other embodiments an intercept mechanism may be setup and configured separately. For example an OpenFlow switch implementation could be configured with a hardware intercept mechanism but would not necessarily have to include it.

At it is determined whether the policy specified VSAs are created and the intercept mechanism is configured on the virtual server. In an embodiment a ready signal from distribution manager indicates the VSAs are created and the intercept mechanism is configured. If the VSAs are created and the intercept mechanism is configured or if it was previously determined at that the required VSAs were already present in the virtual server then at the policy manager can update security policies on the distribution manager. The policies can indicate which network traffic flows of the guest VMs should be routed to which VSAs.

Once the security policies have been updated on the distribution manager at the policy manager can allow the newly deployed or new guest VM to fun on the virtual machine.

Another example of a change that could be detected includes the removal or deletion of a guest VM from a virtual server. In this case some variations may occur in flow . Initially the policy manager may determine whether security controls previously used by the deleted guest VM are still needed for other guest VMs on the virtual server. If these security controls e.g. one or more VSAs are still in use by other guest VMs then they may remain on the virtual server.

However if any existing VSAs are not needed on the virtual server then those VSAs may be removed or otherwise de provisioned on the virtual server. Additionally if a hardware intercept mechanism e.g. SR IOV had been configured for the deleted guest VM then the hardware intercept configuration may be reconfigured such that vSwitches and vNICs are re connected in the same manner as they were connected prior to the hardware intercept configuration for the deleted guest VM on the virtual server.

At distribution manager of virtual server receives a request for security controls information. In an embodiment the request may be from policy manager to determine which if any virtual security appliances VSAs are already configured on virtual sever . This request may result from the policy manager determining that a guest VM is being added to virtual server by cloud manager . In one scenario the guest VM could be added to virtual server if a new guest VM is requested by an authorized user via cloud manager . In another scenario a guest VM could be added to virtual server if the guest VM is being moved from another virtual server to virtual server .

Policy manager may also provide information to distribution manager identifying which VSAs if any are specified in a policy for the guest VM being added to virtual server . At distribution manager can provide the security controls information to policy manager . The information may identify particular VSAs configured on virtual server if any.

If no security controls are present as determined at then at distribution manager may receive a request to configure an intercept mechanism in virtual server for some embodiments of intercept mechanisms. At distribution manager may configure an intercept mechanism in virtual server . At distribution manager may also send a request to cloud manager to create the VSAs that are specified in the policy for the guest VM.

At distribution manager can send a message to policy manager to indicate that the required VSAs are created in virtual server . This message can be sent after the required VSAs have been created in virtual server or if it was determined at that the policy specified VSAs are already present in virtual server .

At distribution manager may receive policy updates from policy manager for the guest VM that is being added to virtual server . The policy updates can be stored in VM security policies database and can include rules about particular VSAs to apply to particular flows and the order in which the VSAs are to be applied to those flows.

Turning to are block diagrams visually illustrating sequential operations of a virtual security system when a guest virtual machine VM is moved within a virtual cloud infrastructure and a hardware intercept mechanism such as SR IOV is used to intercept network traffic. Virtual cloud infrastructure includes two virtual servers and which can communicate via a physical switch through one or more respective virtual network interface cards vNICs and . Each virtual server and may also be configured with one or more respective vSwitches and .

Virtual server also includes a policy manager and a distribution manager . Policy manager and distribution manager may be configured as described with reference to policy manager and distribution manager of .

With reference to a guest virtual machine VM is created in virtual server . It may communicate to other guest VMs within virtual server via vSwitch . It may also communicate to guest VMs on other servers such as virtual server . Network communications from guest VM can be sent to virtual server via vSwitch vNIC physical switch vNIC and vSwitch . In the example of virtual server includes a second vSwitch and a second vNIC and virtual server includes a second vSwitch and a second vNIC for example as shown and described with reference to . In no security controls are activated for guest VM . More specifically security policies have not been created and or implemented for guest VM .

The security policy may require that certain network traffic flows from guest VM flow through a specified VSA e.g. IPS FW DLP etc. . For simplicity and ease of illustration only one virtual security appliance VSA is required by the security policy in this example. However it will be apparent that multiple VSAs could be specified by the security policy in accordance with the present disclosure.

With reference to once the security policy is added to policy manager a VSA may be allocated in virtual server . In an embodiment policy manager may communicate with distribution manager and a cloud manager as previously described herein to facilitate the instantiation of VSA in virtual server . For example distribution manager may communicate a request the cloud manager to create the VSA on virtual server .

Direct I O represents a hardware intercept mechanism e.g. SR IOV for network traffic from guest VM . The vSwitch is unwired from vNIC to force network traffic from guest VM to flow through direct I O hardware intercept and into VSA . In an embodiment distribution manager unwires vSwitch by reconfiguring the vNICs connected to the vSwitch. As a result network traffic from guest VM is now covered by VSA .

In an embodiment with a single VSA as shown in the distribution manager may be embedded within the VSA. In an embodiment that allows multiple VSAs to be created on a single virtual server the NIC hardware may permit a change to the L2 switch on the NIC to enable appropriate routing. In this embodiment packets from a guest VM are automatically routed to a special hardware port i.e. a queue connected to the distribution manager. Thus the NIC is modified to allow SR IOV functions feeding into the NIC.

Turning to illustrates the result of moving guest VM to virtual server . Policy manager may detect the move through an application programming interface API to a cloud manager. A new VSA may be created in virtual server . Again in an embodiment policy manager distribution manager and the cloud manager may communicate to create VSA on virtual server . The vSwitch may be unwired from vNIC by reconfiguring the vSwitch logic in order to force network traffic from guest VM to flow through direct I O and VSA . Then the old VSA in virtual server may be removed and vSwitch rewired to vNIC . In an embodiment as shown in where the guest VM is moved to a second virtual server a distribution manager in the second virtual server may handle the activities related to creating and configuring the new VSA and reconfiguring the vSwitch software on the second virtual server.

For simplicity and ease of illustration only one virtual security appliance VSA is required by policy in this example. However it will be apparent that multiple VSAs could be configured and in virtual servers and in accordance with the present disclosure. In these instances distribution manager could implement a source routing mechanism as previously described herein to route network packets from guest VM or to the appropriate VSAs e.g. as specified by policy in the appropriate order.

At distribution manager of virtual server polls one or more virtual security appliances VSAs to determine a utilization rate of one or more VSAs on the virtual server. At a determination is made as to whether the utilization rate for a VSA is within predefined threshold limits for the VSA. If the utilization rate is above an upper limit of the predefined threshold limits then at distribution manager may send a request to cloud manager to increase computing resources e.g. processing memory storage for the VSA or to add additional VSAs to the virtual server.

If the VSA s utilization rate is below a lower limit of the predefined threshold limits then at distribution manager may send a request to cloud manager to decrease computing resources for the VSA or to remove the VSA from the virtual server if the VSA is no longer needed. For example distribution manager may evaluate the security policies for some or all of the virtual machines on the virtual server. If none of the security policies requires network traffic associated with any of the existing virtual machines to be processed by the VSA then the VSA may be removed from the virtual server. Otherwise the VSA may either remain on the virtual server or if another VSA of the same type exists on the virtual server and can handle the additional load then network traffic that is required to be processed by the under utilized VSA may be rerouted to the other VSA.

If the utilization rate of the VSA is within the predefined threshold limits then the process may end until distribution manager polls the VSAs again. Additionally the evaluations and actions at and and further described herein may be performed for each of the VSAs polled by the distribution manager.

Note that in certain example implementations the virtual security functions outlined herein may be implemented by logic encoded in one or more tangible media e.g. embedded logic provided in an application specific integrated circuit ASIC digital signal processor DSP instructions software potentially inclusive of object code and source code to be executed by a processor or other similar machine etc. . In some of these instances a memory element can store data used for the operations described herein. This includes the memory element being able to store software logic code or processor instructions that are executed to carry out the activities described in this Specification. A processor can execute any type of instructions associated with the data to achieve the operations detailed herein in this Specification. In one example the processor could transform an element or an article e.g. data from one state or thing to another state or thing. In another example the activities outlined herein may be implemented with fixed logic or programmable logic e.g. software computer instructions executed by a processor and the elements identified herein could be some type of a programmable processor programmable digital logic e.g. FPGA EPROM EEPROM or an ASIC that includes digital logic software code electronic instructions or any suitable combination thereof.

Program code or instructions may be stored in for example volatile and or non volatile memory such as storage devices and or an associated machine readable or machine accessible medium including but not limited to solid state memory hard drives floppy disks optical storage tapes flash memory memory sticks digital video disks digital versatile discs DVDs etc. as well as more exotic mediums such as machine accessible biological state preserving storage. A machine readable medium may include any mechanism for storing transmitting or receiving information in a form readable by a machine and the medium may include a medium through which the program code may pass such as antennas optical fibers communications interfaces etc. Program code may be transmitted in the form of packets serial data parallel data etc. and may be used in a compressed or encrypted format.

In one example implementation the virtual security system may include software in order to achieve the virtual security activities outlined herein. The virtual security system can include memory elements for storing information to be used in achieving the virtual security activities as discussed herein. Additionally the virtual security system may include a processor that can execute software or an algorithm to perform the virtual security activities as disclosed in this Specification. These devices may further keep information in any suitable memory element RAM ROM EPROM EEPROM ASIC etc. software hardware or in any other suitable component device element or object where appropriate and based on particular needs. Any of the memory items discussed herein e.g. databases tables trees caches etc. should be construed as being encompassed within the broad term memory element. Similarly any of the potential processing elements modules and machines described in this Specification should be construed as being encompassed within the broad term processor. 

Note that with the example provided above as well as numerous other examples provided herein interaction might be described in terms of two three or four elements. However this has been done for purposes of clarity and example only. In certain cases it may be easier to describe one or more of the functionalities of a given set of flows by only referencing a limited number of elements. It should be appreciated that the virtual security system and its teachings is readily scalable and can accommodate a large number of components as well as more complicated sophisticated arrangements and configurations. Accordingly the examples provided should not limit the scope or inhibit the broad teachings of the virtual security system as potentially applied to a myriad of other architectures.

Additionally the operations in the preceding flow diagrams illustrate only some of the possible scenarios and patterns that may be executed by or within a virtual security system. Some of these operations may be deleted or removed where appropriate or may be modified or changed considerably without departing from the scope of the present disclosure. In addition a number of these operations have been described as being executed concurrently with or in parallel to one or more additional operations. However the timing of these operations may be altered considerably. The preceding operational flows have been offered for purposes of example and discussion. A virtual security system provides substantial flexibility in that any suitable arrangements chronologies configurations and timing mechanisms may be provided without departing from the teachings of the present disclosure.

Although the present disclosure has been described in detail with reference to particular arrangements and configurations these example configurations and arrangements may be changed significantly without departing from the scope of the present disclosure. While the present disclosure has described a limited number of embodiments those skilled in the art will appreciate numerous modifications and variations therefrom. The appended claims are intended to cover all such modifications and variations as fall within the true spirit and scope of the present disclosure.

The following examples pertain to embodiments in accordance with this Specification. One or more embodiments may provide a method comprising detecting a change for a virtual machine in a virtual server of a virtual network infrastructure determining whether a virtual security appliance is configured in the virtual server sending a request to create the virtual security appliance in the virtual server allowing the virtual machine to initiate when the virtual security appliance is created in the virtual machine wherein the virtual security appliance performs security inspections on network packets sent from the virtual machine.

An example of an embodiment further comprises creating an intercept mechanism in the virtual server to intercept the network packets from the virtual machine.

An example of an embodiment further comprises wherein the creating the intercept mechanism includes reconfiguring logic of a virtual switch connected to the virtual machine to force the network packets from the virtual machine to a physical network interface card and reconfiguring logic of a virtual network interface card vNIC to prevent the network packets from passing through the vNIC.

An example of an embodiment further comprises wherein the intercept mechanism includes a hardware interception of network packets based on Single Root Input Output Virtualization SR IOV specification.

An example of an embodiment further comprises wherein the change includes moving the virtual machine to the virtual server from a second virtual server the method further comprising deleting a second virtual security appliance from the second virtual server and reconfiguring logic of a virtual switch in the second virtual server to communicate via a virtual network interface card wherein the second virtual security appliance was configured to process network packets intercepted from the virtual machine when the virtual machine was running in the second virtual server.

An example of an embodiment further comprises wherein one or more security policies identify one or more virtual security appliances to process the network packets from the virtual machine.

An example of an embodiment further comprises wherein the one or more security policies identify an order for the one or more virtual security appliances to process the network packets from the virtual machine.

An example of an embodiment further comprises querying the virtual security appliance on the virtual server to determine a utilization rate of the virtual security appliance and receiving a response to the query.

An example of an embodiment further comprises sending a request to create a second virtual security appliance in the virtual server when the response indicates that more capacity is needed by the virtual security appliance.

An example of an embodiment further comprises preventing the network packets from being sent to the virtual security appliance and deleting the virtual security appliance when the virtual security appliance is idle wherein the response indicates that the virtual security appliance is under utilized.

An example of an embodiment further comprises sending a request to allocate at least one of more processing resources and more memory to the virtual security appliance wherein the response indicates the virtual security appliance is over utilized. As used herein the phrase at least one of may mean any one of or a combination of the list. For example at least one of A B and C could mean A B or C or any combination thereof.

An example of an embodiment further comprises wherein the change detected for the virtual machine includes one of adding the virtual machine to the virtual server or moving the virtual machine to the virtual server from another virtual server.

An example of an embodiment further comprises wherein the change is detected through an application programming interface API when the virtual machine is added to the virtual server or when the virtual machine is moved to a different server.

An example of an embodiment further comprises wherein the change detected for the virtual machine includes one of requesting a new security policy for the virtual machine or updating a security policy of the virtual machine.

An example of an embodiment further comprises blocking the virtual machine if the virtual security appliance is not configured in the virtual server.

An example of an embodiment further comprises wherein the virtual security appliance performs security inspections on network packets sent to the virtual machine.

An example of an embodiment further comprises wherein a first outgoing network packet of a packet flow from the virtual machine is intercepted by an OpenFlow switch in the virtual server after the virtual machine is allowed to initiate in the virtual server the method further comprising generating a flow route for the outgoing network packet based on a security policy wherein the OpenFlow switch routes the outgoing network packet according to the flow route.

One or more embodiments may provide an apparatus comprising a policy manager virtual machine executing on a processor the policy manager virtual machine configured to detect a change for a guest virtual machine in a virtual server of a virtual network infrastructure determine whether a virtual security appliance is configured in the virtual server and allow the virtual machine to initiate when the virtual security appliance is created in the virtual machine wherein the virtual security appliance performs security inspections on network packets sent from the virtual machine.

An example of an embodiment further comprises a distribution manager virtual machine executing on a processor the distribution manager virtual machine configured to send a request to create the virtual security appliance in the virtual server.

An example of an embodiment further comprises wherein the distribution manager is further configured to create an intercept mechanism in the virtual server to intercept the network packets from the virtual machine.

An example of an embodiment further comprises wherein the create the intercept mechanism includes reconfiguring logic of a virtual switch connected to the virtual machine to force the network packets from the virtual machine to a physical network interface card and reconfiguring logic of a virtual network interface card vNIC to prevent the network packets from passing through the vNIC.

One or more embodiments may provide an at least one machine accessible storage medium having instructions stored thereon the instructions when executed on a machine cause the machine to detect a change for a guest virtual machine in a virtual server of a virtual network infrastructure determine whether a virtual security appliance is configured in the virtual server and send a request to create the virtual security appliance in the virtual server and allow the virtual machine to initiate when the virtual security appliance is created in the virtual machine wherein the virtual security appliance performs security inspections on network packets sent from the virtual machine.

An example of an embodiment further comprises wherein the change includes moving the virtual machine to the virtual server from a second virtual server the method further comprising deleting a second virtual security appliance from the second virtual server and reconfiguring logic of a virtual switch in the second virtual server to communicate via a virtual network interface card wherein the second virtual security appliance was configured to process network packets intercepted from the virtual machine when the virtual machine was running in the second virtual server.

An example of an embodiment further comprises wherein one or more security policies identify one or more virtual security appliances to process the network packets from the virtual machine.

One or more embodiments may provide a method comprising polling a virtual security appliance in a virtual server of a virtual network infrastructure to determine a utilization rate of the virtual security appliance sending a request to a cloud manager to increase computing resources for the virtual security appliance if the utilization rate is above an upper threshold amount and sending a request to the cloud manager to decrease computing resources for the virtual security appliance if the utilization rate is below a lower threshold amount wherein network packets associated with one or more virtual machines in the virtual server are routed to the virtual security appliance.

An example of an embodiment further comprises wherein the network packets are intercepted prior to being routed to the virtual security appliance.

One or more embodiments may provide a method comprising polling a virtual security appliance in a virtual server of a virtual network infrastructure to determine a utilization rate of the virtual security appliance sending a request to a cloud manager to create another virtual security appliance in the virtual server if the utilization rate is above an upper threshold amount and wherein network packets associated with one or more virtual machines in the virtual server are routed to the virtual security appliance.

An example of an embodiment further comprises wherein the network packets are intercepted prior to being routed to the virtual security appliance.

One or more embodiments may provide a method comprising polling a virtual security appliance in a virtual server of a virtual network infrastructure to determine a utilization rate of the virtual security appliance preventing new network packets from being routed to the virtual security appliance if it is determined that no security policy requires a virtual machine of the virtual server to be processed by the virtual security appliance and sending a request to a cloud manager to remove the virtual security appliance in the virtual server when the virtual security appliance is idle wherein previously sent network packets associated with one or more virtual machines in the virtual server were routed to the virtual security appliance.

An example of an embodiment further comprises wherein the previously sent network packets were intercepted prior to being routed to the virtual security appliance.

