---

title: Application monetization platform
abstract: Various example embodiments are directed to a computer-implemented gaming management system for facilitating applications that support user wagering. The gaming management system may comprise a computer system in communication with a developer computer device. The computer system may be programmed to receive from the developer computer device configuration data for a contingent event to be associated with a user application; determine whether the configuration data meets at least one predetermined standard; and provided that the configuration data meets the at least one predetermined standard, provide the developer computer device with an application program interface (API) credential to be utilized by the user application, wherein the API credential is to give the user application access to an API for resolving the contingent event.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09076290&OS=09076290&RS=09076290
owner: COLLISSE GROUP LIMITED
number: 09076290
owner_city: Road Town
owner_country: VG
publication_date: 20120809
---
This application claims the benefit of U.S. Provisional Application Ser. No. 61 521 733 filed on Aug. 9 2011 and of U.S. Provisional Application Ser. No. 61 669 443 filed on Jul. 9 2012 both of which are incorporated herein by reference in their entireties. This application is related to commonly owned and concurrently filed PCT Application Serial No. PCT US2012 050208.

This application generally relates to implementing aspects of gambling and or betting into third party gaming applications.

Developments in computing technology in recent years have led to an increased market for applications that are executable on various different types of computer devices including handheld devices such as mobile smart phones tablet computers etc. as well as more traditional computer devices such as desktops or laptops. One popular genre of applications are gaming applications where users play virtual games of varying complexity. Although there are many applications in circulation developers current methods for monetizing the applications are often inadequate.

One existing gaming application monetization method relies on in game advertising. Advertisements are provided within the application itself and provide revenue to the developer based on interactions between the users and specific advertisements e.g. number of impressions number of click throughs etc. . Many gaming application users however consider the advertisements to be a nuisance at best. A developer that includes advertisements or too many advertisements in its gaming application risks driving away potential users.

According to another existing gaming application monetization method developers charge users for access to the code implementing the application itself. The purchased access may include a download of the code e.g. in executable form to the user s computer device and or access the application as executed at a remote server. It is often difficult however to persuade users to pay for an application before the user has played the associated game.

According to yet another monetization method users are initially provided with access to gaming applications for free. Once a user has begun to access the application the user is provided with opportunities to purchase extras such as virtual goods used within the game and or additional levels. This method has the capacity to generate a high revenue per user for users that are motivated enough to purchase virtual goods and levels. Typically however a large number of users simply play the free portions of the game without purchasing extras that is the free to paid conversion is often relatively low. Thus the average customer lifetime value CLV and average revenue per user ARPU are often low.

The features and advantages described in the specification are not all inclusive and in particular many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings specification and claims. The language used in the specification has been principally selected for readability and instructional purposes and may not have been selected to delineate or circumscribe the disclosed subject matter.

The figures and the following description relate to example embodiments of the invention by way of illustration only. Alternative example embodiments of the structures and methods disclosed here may be employed without departing from the principles of what is claimed.

To improve monetization of game and other applications developers may incorporate functionality to allow users to place monetary wagers or bets within an application. Entities offering monetary wagers or bets to the public are often subject to significant licensing and regulatory requirements. The expenses and liabilities associated with obtaining and maintaining appropriate licenses as well as complying with relevant regulatory schemes can constitute a significant barrier to entry for application developers. For example a developer or other entity offering a gambling application must identify jurisdictions where a gambling license is required and for each jurisdiction engage in onerous expensive and often time consuming procedures to obtain the required licenses. Even after appropriate licenses are obtained the licensed entity must comply with strict regulations relating to game play accounting and even banking services.

Various example embodiments are directed to systems and methods for facilitating the incorporation of monetary wagers or bets into third party applications. For example the systems and methods described herein may obviate the need for individual developers to obtain gambling licenses. A gaming management system may be implemented by a facilitating business entity or facilitating entity having one or more gambling licenses. The gaming management system provides third party application developers with functionality to incorporate monetary wagers or bets into their gaming applications. For example developers may allow application users to wager on outcomes of one or more contingent events described in more detail below. Allowable parameters of contingent events and bets that may be placed are controlled by the gaming management system. In this way the gaming management system may ensure that any bets placed are in compliance with applicable regulations and or with previously approved contingent event forms. When the resulting applications are executed users may place bets through the gaming management system. For example the gaming management system may determine an outcome for each contingent game event determine winnings or losses and distribute the winnings or losses to the user. In this way the applications may utilize a gambling license or licenses held by the facilitating entity. Accordingly the developer may develop the applications distribute the applications and obtain users while the facilitating entity may operate gambling aspects of the game in accordance with applicable regulations and licenses e.g. held by the facilitating entity .

As used herein the term gambling license license or gaming license refers to a license that is held by an entity offering betting wagering or other gaming to the public. In some jurisdictions a gambling license may be required to offer certain types of betting wagering or other gaming to the public.

Contingent events also referred to as contingent game events may be situations within a game or other type of application that have an unknown outcome and may be the subject of a bet or wager. A contingent event may have at least two potential outcomes. Each potential outcome may be associated with a probability that the potential outcome will occur. Probabilities for different potential outcomes may be fixed e.g. set in advance and or parameterized e.g. determined based on circumstances of game play surrounding the contingent event . The gaming management system may resolve contingent events based on the probabilities for the potential outcomes. For example the gaming management system may randomly select one of the potential outcomes based on the relevant probabilities e.g. utilizing a random number generator or any other suitable type of method or device . The selected outcome may be referred to as the outcome of the contingent event.

Contingent events may be any type of event that can occur in the context of a game or other type of application where the outcome is initially unknown. It will be appreciated however that different types of applications can manifest contingent events in different forms. For example some use cases involving contingent events relate to applications that implement games traditionally associated with gambling such as slot machine games card games craps games etc. In games such as these contingent events may be similar to the unknown events on which physical versions of the game are played. For example in a slot machine game a virtual pull of the slot machine lever is a contingent event. Each potential configuration of the slot machine reels may correspond to a potential outcome with the probability of each potential outcome corresponding to the configuration of the reels. In a craps game each roll of the dice is a contingent event with each potential configuration of the dice corresponding to a potential outcome. In card games such as poker blackjack etc. the deal is a contingent event. Potential outcomes may correspond to potential cards and or hands held by each player after the deal. In some example embodiments contingent events may be compound. For example the outcome of a hand of poker can depend on multiple rounds of betting and multiple deals. Examples of games implementing traditional gambling wagers include SLOTS and POKER both available from ZYNGA.

Other use cases for contingent events relate to games that are not typically associated with gambling. For example one currently popular genre of social network games involves the planting and raising of crops animals etc. Examples of games in this genre include FARMVILLE and CITYVILLE both available from ZYNGA FARMTOWN available from SLASHKEY etc. In these games users virtually plant crops. When the crops are ready the user may virtually harvest the crops for in game rewards such as virtual currency experience points etc. In one example of a game implemented with the gaming management system described herein the planting of a crop is a contingent event. The user s wager may take the form of a payment for the seeds or other resources necessary to plant the crop. The user s winnings if any may be determined based on the success of the harvest. Potential outcomes of the contingent event include a successful harvest an unsuccessful harvest and or various gradations between a successful and unsuccessful harvest. Contingent events corresponding to the planting of crops in some example embodiments may be parameterized. For example the probability of a successful harvest outcome may be based on predetermined factors but may also be based on user behavior e.g. whether the user waters the crops whether the user harvests the crops on time whether the user feeds or waters an animal etc. .

Another use case for contingent events relates to games of skill. A contingent event may be a particular play or set of plays e.g. a set of plays making up a level . The potential outcomes for each contingent event may reflect the possible results of a play. The probability for each potential outcome may be determined based on the difficulty of the play or level. In some example embodiments the probability for a given outcome may be parameterized e.g. based on the user s skill level or past history with the game. Examples of games of skill that may utilize contingent events as described include the various iterations of ANGRY BIRDS available from ROVIO ENTERTAINMENT LTD. For example a contingent event may be a bird launch or series of bird launches. Potential outcomes of the contingent event may relate to the number of enemies defeated.

Another example use case relates to a currently popular genre of games involves conflicts between different users with each user corresponding to an individual and or army that is a party to the conflict. Examples of games in this genre include MAFIA WARS and MAFIA WARS 2 from ZYNGA. In games of this genre fights or conflicts between players are one example contingent event type. For example a user may bet that they will win a conflict that they will win a conflict in a certain number of turns with at least a certain amount of energy remaining etc. Potential outcomes may correspond to potential outcomes of the conflict. In some example embodiments the probabilities of each potential outcome may depend on properties of the users involved. Such properties may be parameters of the contingent event and can include for example skill and or experience points associated with each user game items possessed by each user e.g. weapons etc.

In some example embodiments not limited to conflict type games contingent events may be utilized to cross sell other products within applications such as for example level packs virtual goods etc. For example applications may be configured to prompt users to purchase additional level packs virtual goods etc. by advertising that the promoted purchases will increase the user s probability of winning wagers on contingent events. Such prompts may be provided at any time during game play. In some example embodiments the prompts may be provided after the user has lost a wager. For example the application may be configured to inform the user that possession of a particular virtual good would have increased the user s chances of winning.

It will be appreciated that contingent events may be applied to any type of game or other application involving an event with an unknown outcome upon which the user can wager or place a bet. The contingent event examples provided herein are intended only as examples. Also it will be appreciated that games and other application types using contingent events may be provided directly to a user and or via an intermediate application or game. For example the user s character within the intermediate game may play a contingent event game. For example an application may implement a casino comprising various gambling games for avatars of the game SECOND LIFE from LINDON LABS and or similar games.

The gaming management system may comprise various functional components that may be implemented for example as software code executed by the gaming management system . An application program interface API provides an interface allowing the gaming application to communicate with the gaming management system . For example the API may support commands described herein allowing applications to pass an indication of a contingent event and associated parameters if present . The outcome for the contingent event as determined by the gaming management system may also be passed from the gaming management system to the application. A random number generator RNG may be programmed to resolve contingent events e.g. select a potential outcome from the plurality of potential outcomes based on the probabilities of the potential outcomes . An accounting layer is programmed to track the financial results of each contingent event. For example the accounting layer may determine the winnings or losses for the user or the house based on the outcome of each contingent event. The winnings or losses of the parties may be based on properties of the contingent event as well as parameters of the contingent event such as an amount of a wager made by the user a property of the user within the application etc. A banking layer may execute transactions to implement the outcome of a contingent event. The specific required transactions for a contingent event are determined for example by the banking layer and or by the accounting layer .

During game play the application may encounter a contingent event. As described herein the application may provide the user with an opportunity to place a wager on the contingent event. At the user may place a wager or take another gambling action. The application may pass the contingent event as well as the wager of the user and any other parameters for resolving the contingent event to the gaming management system at e.g. via the API . The gaming management system may resolve the contingent event as described herein e.g. utilizing the RNG . Based on the outcome of the contingent event the gaming management system may determine the results of one or more bets placed on the contingent event. Winnings or losses to be attributed to the user and the house e.g. utilizing the accounting layer . At the gaming management system for example utilizing the banking layer may initiate account transfers to realize the results of the one or more bets. For example winnings and or losses may be transferred to and or from accounts of the user and or the house. The outcome of the contingent event and results of the one or more bets may be communicated to the application at . The application may in turn communicate the outcome and results to the user at .

At the application may optionally prompt the user to wager real money e.g. prompt for money gaming . For example some applications may have a virtual only mode where the user can earn only virtual currency and goods. In the virtual only mode contingent event resolution and the distribution of winnings and or losses may be handled by the application without the gaming management system and or by the gaming management system . For example the gaming management system may also be configured to handle virtual wagers on contingent events. When a virtual wager is made contingent event resolution may be handled by the RNG and accounting layer as described above. Virtual currency or other goods in some example embodiments may be recorded in a user s virtual account separate from the user s real money account. Also for virtual wagers it may not be necessary to utilize the banking module to transfer funds as no real money may change hands. The prompt at may be triggered by various different in game events. For example the user may be prompted to wager real money automatically upon execution of the application. Also in some example embodiments applications may be configured to prompt the user to wager real money after the user has won a virtual wager won a threshold amount of virtual currency e.g. non zero or goods etc. Also in some example embodiments wagers for virtual goods currency etc. may be handled by the application itself and or by a server operated by and or associated with the developer of the application. For example gambling licenses may not be required to promote wagers for virtual goods.

At the application may transfer an application authentication to the gaming management system e.g. provided that the user chooses to wager real money . The application authentication may be for example an API credential or other way of identifying and authenticating the application to the gaming management system . It will be appreciated that the application may have previously been configured and integrated with the gaming management system as described herein below. For example the authentication may indicate that at least one contingent event associated with the application has been approved for example as described below with respect to . Upon receiving the application authentication the gaming management system may verify the application authentication thereby confirming that the application is configured to operate with the gaming management system . In various example embodiments communications between the application and the gaming management system may be secured. For example the communications may be encrypted according to any suitable encryption method including for example a public key infrastructure PKI . In some example embodiments the user device or other computer device executing the application may be in communication with the gaming management system via a secure connection such as a Secure Sockets Layer SSL Transport Layer Security TLS and or Hypertext Transfer Protocol Secure HTTPS connection.

At the gaming management system may authenticate the user of the application. Authentication of the user may comprise various actions to ensure that the user is eligible to wager via the application that the user is registered with the gaming management system and that the user has accounts and funds including money for wagering. For example in some example embodiments the gaming management system may provide the user with an authentication interface through the application itself. An example of such an interface is described below with respect to . For example determining whether the user is eligible to wager may involve verifying that the user is above a minimum gambling age that the user is in a jurisdiction that allows gambling etc. In some example embodiments the gaming management system may determine a user s location for example based on an Internet Protocol IP address of the user.

Upon authentication the gaming management system may optionally provide the user s gaming balance to the application at . The gaming balance may represent an amount of money that the user has deposited under management of the gaming management system that is available to wager. The gaming balance may be a balance specifically dedicated to the application or in some example embodiments may be the user s total available balance or total balance dedicated to a class of applications including the application. The application may display the gaming balance at . It will be appreciated that some jurisdictions may require that the gaming balance be displayed to the user prior to wagering. If the user is present in such a jurisdiction the gaming management system may not permit wagering on contingent events until or unless the balance is displayed.

The application may implement a game or other functionality directed to the user. Upon encountering a contingent event the application may at direct a contingent event request to the gaming management system . The contingent event request may include information about the type of contingent event and the wager placed on the event by the user. If the event is parameterized the contingent event request may also include parameters for the contingent event. The gaming management system may evaluate the contingent event request at . Evaluating the contingent event request may comprise for example resolving the contingent event utilizing the RNG and determining any winnings and or losses from the outcome utilizing the accounting layer . Any financial transfers resulting from the outcome of the contingent event may be initiated at utilizing the banking layer . At the gaming management system may send results of the contingent event to the application. The results may include for example the outcome of the contingent event and any transfers executed to distribute winnings and or losses. In some example embodiments the results may also include a new balance or balance of the user s account with the gaming management system. The application may display the results to the user at . The results including for example the outcome of the contingent event may be factored in to subsequent game play.

In various example embodiments the gaming management system is also programmed with functionality for configuring applications to offer wagering on contingent events and integrating the applications with the system . For example the system may provide a parameterized generic framework for configuring contingent events. The form and characteristics of the contingent events and allowable wager types may be controlled by the gaming management system . For example the gaming management system may allow only contingent events and wager types that comply with appropriate regulations including regulations specific to a gambling license or licenses held by the facilitating entity.

At the developer may provide the gaming management system with a contingent event type . In example embodiments where each application or game has a single contingent event type the contingent event type may also be referred to as a game type. The contingent event type may be one of a select number of predetermined contingent event types supported by the gaming management system . The predetermined contingent event types may be configured by the gaming management system and or a programmer thereof to comply with applicable regulations. Examples of predetermined contingent event types may include for example a slot machine event type a generic event type a poker event type a blackjack event type etc. The gaming management system may receive the contingent event type at .

At the developer may provide a configuration for the contingent event type indicated at . The gaming management system may receive the configuration at . The configuration may define characteristics of the contingent event for resolving the contingent event and settling any wagers made on the contingent event. For example a contingent event configuration may indicate the potential outcomes for the contingent event a probability for each potential outcome parameters for wagers on the contingent event etc. In some example embodiments the configuration may indicate parameters that are to be passed to the gaming management system to determine probabilities of some or all of the potential outcomes of the contingent event. Such parameters may include for example characteristics of the user within a game skill points experience points weapons possessed etc. . In some example embodiments the predetermined contingent event types may be supported by a framework for receiving configuration characteristics. According to the framework the gaming management system may prompt the developer for specific configuration characteristics corresponding to each contingent event type. For example upon selecting a slot machine configuration type the developer may be prompted for a number of reels positions for the symbols on each reel likelihoods of each reel returning specific symbols etc. Also for example upon selecting a poker configuration type the developer may be prompted for a game variation e.g. five card draw Texas hold em etc. an ante amount etc. As indicated above some applications may have multiple contingent event types. For such applications as described above may be repeated for each contingent event type to be utilized by the application.

Upon receiving contingent event configurations for each contingent event in the application the gaming management system may provide the developer with an API credential which may be received at . The API credential may be incorporated into the application and may be provided to the gaming management system during game play to indicate that the application is eligible to provide contingent event requests to the gaming management system . For example referring back to the API credential may be all or part of the application authentication transferred to the gaming management system at . In some example embodiments the received event configurations may be analyzed and tested before the API credential is provided to the developer. For example the received event configurations may be analyzed to determine contingent event parameters such as the return to player the variance the overall win percentage etc. These calculated values may be compared to allowable values. The allowable values may correspond to contingent events that meet regulatory criteria of one or more gambling licenses e.g. held by the party implementing the gaming management system and or by contingent event forms that have already been approved by applicable regulators and or otherwise cleared for regulatory approval. Provided that the calculated values meet the allowable values the API credential may be provided to the developer.

At the gaming management system may determine allowable event configuration characteristics and provide the allowable configuration characteristics to the developer which receives the same at . The allowable configuration characteristics may express the limits of characteristics that the contingent event or events may have while still being in compliance with applicable regulations. For example determining allowable configuration characteristics may comprise calculating configuration characteristics corresponding to the limits indicated by applicable regulations and or by contingent event forms already approved by applicable regulators. It will be appreciated that the developer may desire to change the characteristics indicates at upon seeing the full range of allowable characteristics. Accordingly the developer may provide contingent event characteristic changes at . The changes may be received at . It will be appreciated that the various actions of the process flow may be performed in any suitable order. For example the actions and may in some example embodiments be performed before the API credential is generated and provided at and . Upon receiving the API credential the developer may create the application. The application may be coded in any suitable language capable of generating messages according to the API utilizing the received API credential. Example languages that may be used include Objective C Java and Javascript. As described above the application may be configured to submit contingent event requests such as to the gaming management system during game play as described herein above with respect to .

Optionally at the developer may transfer house funds to a developer account maintained by the gaming management system . The gaming management system e.g. the accounting layer and or the banking layer may receive the funds at and transfer the funds to the developer s developer account. For example the developer account may be held by a financial institution and controlled by the gaming management system e.g. the banking layer thereof via the payment gateway . A minimum quantity of house funds may be determined by the gaming management system for example based on the characteristics of the one or more contingent event types to be included with the system. In some example embodiments the developer may not provide house funds. Instead the facilitating entity may provide house funds for wagers. In return for providing the house funds itself the facilitating entity may lower its compensation to the developer. The compensation may take the form of a percentage of the house edge for each wager. For example when house funds are provided by the facilitating entity the developer may receive a lower percentage of the house edge than when the developer provides the house funds itself.

Optionally at the developer may provide identities for one or more test users to the gaming management system . The test users may be users associated with the developer that may be authorized by the gaming management system to place wagers on contingent events prior to approval of the application. For example the test users may be users associated with the developer. In some example embodiments test users may be limited to wagering with funds of the developer e.g. funds in a developer account . Upon receiving the identities of the test users at the gaming management system may configure itself to receive wagers on contingent events associated with the application from the test users.

At the developer may request that the application be submitted for approval. For example the developer may provide the gaming management system with a copy of the application. Upon receiving the request and or upon completion of the configuration process the gaming management system may submit the application for approval at . Review and approval may be provided automatically and or manually. For example in some example embodiments a set of predetermined business rules are applied against the contingent event or events and its their characteristics to determine if the contingent event complies with applicable regulations and or a previously cleared contingent event form. Also in some example embodiments a battery of simulated wagers is made to test the response of the contingent events in the application according to their characteristics. Manual review and approval may comprise review of the application its contingent event or events and associated characteristics by appropriate legal and or compliance personnel of the facilitating entity.

Optionally and upon approval the gaming management system may publish the application at . Publishing the application may comprise placing an indication of the application and in some example embodiments a download link at a web page of the facilitating entity. For example the web page may be accessible to users who have preexisting accounts with the gaming management system . In this way the gaming management system may provide additional advertising for the application.

As described above each contingent event type indicated at field and or drop down menu may be associated with a configuration framework. For example is a screen shot showing one embodiment of the interface screen that may be provided to the developer to describe the selected contingent event type. As shown in the screen comprises a contingent event type field including information for the developer about the selected contingent event type including for example a description of the configuration necessary for the selected contingent event.

The screen also comprises additional resources that are optionally provided to the developers. For example API Documentation Support field includes links to documentation describing the API the selected contingent event type or types and general developer resources. A Download SDK s field may provide the developer with links to software development kits including tools for developing applications compatible with the API . In the example shown in SDK s are available for Objective C Java and Javascript. It will be appreciated however that more fewer and or different languages may be supported depending on the embodiment.

Referring back to the screen the developer may specify different ticket types. For example field illustrates a configuration for a one spot ticket comprising a single number. At field the developer may enter a probability of each potential outcome for a one spot ticket e.g. no matches or one match . At field the developer may enter a probability for each potential outcome on a two spot ticket e.g. no matches one match two matches . At field the developer may enter a probability of each potential outcome on a three spot ticket e.g. no matches one match two matches etc. . Additional fields for additional ticket types may also be provided. In some embodiments the number of random numbers selected for a keno type event is predefined in the gaming management system and the gaming management system may automatically calculate the probability of each outcome based on the predefined values. Also in some embodiments the developer enters a multiplier for each potential outcome. The multiplier may determine a payout for each outcome. For example the multiplier may indicate a multiple of the probability that is paid out upon the occurrence of each potential outcome. Upon completion of the screen the developer may be shown the integration and publishing screens shown in above.

Referring now back to the API may be any suitable type of API implemented according to any suitable communication protocol. For example the API may utilize hypertext transfer protocol HTTP and or hypertext transfer protocol secure HTTPS . The API may be configured to comply with representational state transfer RESTful principles and or utilize other suitable methods to achieve generality between platforms. In various embodiments some or all communications between the applications and the API may be secure for example utilizing a secure communication protocol such as HTTPS secure socket layer SSL transport layer security TLS etc.

Also in various embodiments the API may authorize applications to utilize the API using any suitable method. In some example embodiments the API may authorize applications utilizing OAUTH 2.0 or a similar authentication mechanism. is a flow chart illustrating one embodiment of a process flow that may be implemented by the gaming management system e.g. the API thereof and an application to authenticate the application to the API . For example the process flow may represent the actions and of the process flow . In column corresponds to actions performed by the application while column corresponds to actions performed by the gaming management system e.g. the API thereof . At the application may redirect the user to an authorization page provided by the API . The authorization page may be identified by a universal resource locator URL known to the application in conjunction with a custom URI scheme. In some example embodiments the URL and custom URI scheme may indicate an authorization key or other API credential provided to the application during the configuration and integration described herein with respect to . Also in some example embodiments the URI may correspond to the URI provided to the developer for inclusion in the application also during the configuration and integration process an example of which is described above with respect to .

At the gaming management system may authenticate the application for example based on the API key and on input received from a user of the application. For example the user may create an account with and or log in to the gaming management system . In some example embodiments the user may be authenticated using a third party account such as an AMERICA ONLINE account a GOOGLE account a YAHOO account an OPENID account a FACEBOOK account a TWITTER account etc. The user may automate future log ins for example by checking an appropriate box. After the user is authenticated the API may redirect the computer device implementing the application to a URI of the custom URI scheme. For example the redirect URI may be indicated in the authentication request. In some example embodiments the redirects may be accompanied by a verification code .

At the application may utilize the verification code to obtain an access token. For example the application may provide the verification code to the API . In response the API may at return the access token . The application may store the access token at . This access token sometimes referred to as an OAUTH access token may be utilized by the application to access the API .

In various example embodiments the API may support a number of commands message types. Example commands message types that may be supported are reproduced below 

In the examples provided above the API may utilize various different status codes. For example the code Error may correspond to an error indicating that a request was not allowed for example due to problems with the provided parameters. An Error code may be received when an incorrect data set is provided in a request. Examples of incorrect data sets may occur for example when an application is trying to register a user with an empty or invalid e mail address. An Error code may indicate that an operation was not allowed due to authorization problems for example caused by a missing token parameter. An Error code may indicate that a requested resource is not available on the server e.g. gaming management system . An Error code may indicate that an unknown error has occurred. This error may occur for example when data in the request query string is corrupted. Additional example error codes are provided below 

In various embodiments the gaming management system may be programmed with functionality for determining the affinity of a user or group of users to a particular type of game and or a particular type of wager. Based on this information the gaming management system may modify a gaming application and or the presentation of a gaming application to suit the preferences of the user or group of users.

The game play behavior may be monitored using any suitable metric or metrics. In some example embodiments the recommendation engine monitors the maximum or minimum wager allowed by a game or games selected by the user. In some example embodiments the recommendation engine monitors an amount of time between the placing of a wager and the resolution of the wager. For example some users may prefer games where wagers are resolved quickly e.g. a slot machine style game while other users may prefer games where wagers play out longer prior to resolution. The amount of time between the placing of a wager and the resolution of the wager may be related to a particular game or by decisions that the user makes within the game. In some example embodiments the recommendation engine monitors the win probability of wagers placed by the user as well as the payout amount for the wagers. In some cases this value may be represented as a ratio of win probability over payout amount. In some example embodiments the recommendation engine monitors the degree of control that the user has over the outcome wagers that the users places. For example wagers on a slot machine or roulette type game may provide the user with very little control over the outcome. On the other hand games where wagers are based at least in part on the skill of the user e.g. blackjack style games games of skill as described herein etc. . In some example embodiments the recommendation engine monitors a risk tolerance of the user. The risk tolerance may be monitored based on wagers made by the user. For example risk tolerance may be expressed based on an amalgam of amounts wagered by the use in view of the corresponding potential payouts. In some example embodiments the recommendation engine monitors a loss tolerance of the user. The loss tolerance may be determined for example based on recorded user losses and the user s reaction to the losses. For example a loss tolerance may indicate that the user typically curtails further wagers upon losing a certain amount or amounts either instantaneously e.g. in a single wager or cumulatively e.g. over two or more wagers .

In some example embodiments additional game play behavior metrics are considered by characterizing game play in terms of a decision node or nodes. A decision node within a game may be any point in the play of the game where the user is to provide input or make a decision. For example in a slot machine game each pull or virtual pull of the slot machine lever may represent a decision node. In a blackjack game each opportunity for the user to stay or hit may represent a decision node. In a poker game each ante wager and draw may represent a decision node. Depending on the type of game implemented by a gaming application decision nodes may be fixed and or may be variable. For example in a slot machine style game the decision node corresponding to a pull of the slot machine lever may be fixed. In other types of games however the placement and properties of decision nodes may be determined directly or indirectly by the user for example based on prior game play decisions made by the user. Examples of such games include for example games of skill strategy games such as FARMVILLE FARMTOWN ANGRY BIRDS and the MAFIA WARS games described herein above.

In some example embodiments the recommendation engine monitors additional game play metrics for games characterized using decision nodes. A frequency of decision nodes may describe a frequency with which the user encounters decision nodes during game play. The frequency of decision nodes may be a function of a gaming application itself and or a function of user choices during game play. For example a slot machine or blackjack style game may have a relatively constant frequency of decision nodes regardless of decisions made by the user. On the other hand a strategy style game such as FARMVILLE MAFIA WARS etc. may have a variable frequency of decision nodes based at least in part on the progression of the game and or the style of the user s play. Another example game play metric for games characterized using decision nodes is a quantity and or percentage of decision nodes that are gambling opportunity nodes. A gambling opportunity node may be a node that includes or is related to a contingent event upon which the user may place a wager. For example in a blackjack style game the decision to play may be a gambling opportunity node. Decisions to hit or stay may be decision nodes but may not be gambling opportunity nodes. Also for example in the context of a strategy game the user may encounter decision nodes that do not provide gambling opportunities e.g. a decision to plant a standard or non premium crop a decision to move between locations on a board etc. as well as decision nodes that do e.g. a decision to plant a premium crop a decision to fight another character etc .

Referring back to the recommendation engine may at calculate user preferences based on the observed game play behavior. The user preferences may be calculated in any suitable manner. In some example embodiments user preferences may be calculated for each user. Also in some example embodiments user preferences may be calculated for groups of users. For example not every user will make enough wagers or play gaming applications frequently enough to generate a statistically significant set of game play behavior metrics. Accordingly users and game play behavior metrics may be grouped together to determine user preferences. In various example embodiments users are grouped together based on common characteristics. For example users may be grouped based on similar backgrounds age profile frequency of gaming etc. and or based on common or similar game play behavior metrics.

In some embodiments calculating user preferences may comprise generating a perceived utility and a risk tolerance. The perceived utility may indicate the relative value to the user or user group of various combinations of game play behavior metrics. The perceived utility may be calculated and or expressed in various different forms. In some embodiments the perceived utility is indicated in tabular form. For example each observed game play behavior metric may be assigned a representative value for the user and or for all users in a group. The representative value may be for example a mean a median etc. Also in various embodiments the perceived utility may be indicated in functional form. For example the gaming management system may calculate a best fit curve matching the values of one or more measured game play behavior metrics.

At the gaming management system may modify a user s game play based on the user preferences calculated at . In example cases where the user has played with the gaming management system frequently enough for the gaming management system to generate a threshold quantity of user game play behavior metrics for the user the modifications to the gaming application may be based on user preferences specific to the user. In some example embodiments and in cases where the gaming management system has less than the threshold quantity of user game play behavior metrics for the user the modifications may be based on the user preferences of a class of users including the user. For example the gaming management system may receive data describing the user e.g. from the user . The information may include demographic information geographic information etc. Based on the user information the gaming management system may assign the user to a group of users and modify game play based on user preferences of the assigned group.

The gaming management system may modify game play in any suitable manner. For example in some embodiments the gaming management system may modify a set of games presented to the user for play e.g. via a user interface . For example the set of games presented to the user for play may include games having game play characteristics close to and or matching the user preferences. Also in some embodiments the gaming management system modifies gaming applications to match user preferences. For example the gaming management system may modify a maximum or minimum wager amount a game speed etc. to match the user preferences. In some embodiments modifications to gaming applications are implemented by pushing code updates to a user device . In other embodiments modifications to gaming applications are implemented by the gaming management system itself. In example embodiments the user preferences may indicate that a particular user or group of users prefers to play games where the maximum wager is under a particular amount e.g. 1.00 . The gaming management system may modify either applications and or wager parameters provided to applications in order to present games to the user with maximum wager amounts below a particular amount.

At the recommendation module may monitor the user s use of modified game play and at may determine whether the modified game play has lead to an increase in the user s utilization of the gaming management system . Again the monitoring and determination may be based on a single user and or may be based on groups of users. Feedback data determined at and may be utilized at to calculate user preferences. For example feedback data may be utilized to distill user game play behavior metrics into user preferences as described above.

Any patent publication or other disclosure material in whole or in part that is said to be incorporated by reference herein is incorporated herein only to the extent that the incorporated materials does not conflict with existing definitions statements or other disclosure material set forth in this disclosure. As such and to the extent necessary the disclosure as explicitly set forth herein supersedes any conflicting material incorporated herein by reference. Any material or portion thereof that is said to be incorporated by reference herein but which conflicts with existing definitions statements or other disclosure material set forth herein will only be incorporated to the extent that no conflict arises between that incorporated material and the existing disclosure material.

Reference in the specification to one example embodiment one embodiment an example embodiment or to an embodiment means that a particular feature structure or characteristic described in connection with the embodiments is included in at least one embodiment of the invention. The appearances of the phrase in one example embodiment or a preferred embodiment in various places in the specification are not necessarily all referring to the same embodiment. Reference to embodiments is intended to disclose examples rather than limit the claimed invention.

Some portions of the above are presented in terms of methods and symbolic representations of operations on data bits within a computer memory. These descriptions and representations are the means used by those skilled in the art to most effectively convey the substance of their work to others skilled in the art. A method is here and generally conceived to be a self consistent sequence of actions instructions leading to a desired result. The actions are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical magnetic or optical signals capable of being stored transferred combined compared and otherwise manipulated. It is convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like. Furthermore it is also convenient at times to refer to certain arrangements of actions requiring physical manipulations of physical quantities as modules or code devices without loss of generality.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the preceding discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or determining or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system memories or registers or other such information storage transmission or display devices.

Certain aspects of the present invention include process steps and instructions described herein in the form of a method. It should be noted that the process steps and instructions of the present invention can be embodied in software firmware or hardware and when embodied in software can be downloaded to reside on and be operated from different platforms used by a variety of operating systems.

The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards application specific integrated circuits ASICs or any type of media suitable for storing electronic instructions and each coupled to a computer system bus. Furthermore the computers and computer systems referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.

The methods and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may also be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method actions. The required structure for a variety of these systems will appear from the above description. In addition the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the present invention as described herein and any references above to specific languages are provided for disclosure of enablement and best mode of the present invention.

While the invention has been particularly shown and described with reference to a preferred embodiment and several alternate embodiments it will be understood by persons skilled in the relevant art that various changes in form and details can be made therein without departing from the spirit and scope of the invention.

Finally it should be noted that the language used in the specification has been principally selected for readability and instructional purposes and may not have been selected to delineate or circumscribe the inventive subject matter. Accordingly the disclosure of the present invention is intended to be illustrative but not limiting of the scope of the invention.

