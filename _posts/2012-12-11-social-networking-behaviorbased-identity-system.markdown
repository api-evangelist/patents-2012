---

title: Social networking behavior-based identity system
abstract: Disclosed are various embodiments for a social networking behavior-based identity system that employs social networking data that a user has elected to share through an opt-in procedure. First social networking data is stored in association with a user identity. An assertion of the user identity is received from a client after the first social networking data is stored. Second social networking data is received in response to receiving the assertion of the user identity. An identity confidence level as to whether the user identity belongs to a user at the client is generated based at least in part on a comparison of the second social networking data with the first social networking data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09166961&OS=09166961&RS=09166961
owner: Amazon Technologies, Inc.
number: 09166961
owner_city: Seattle
owner_country: US
publication_date: 20121211
---
Identity determination is often an important process for network sites. Network sites may make a determination of user identity before granting a user access to secured data or customizing content based on user preferences. Users typically verify their identity for network sites by providing a correct username and password combination.

The present disclosure relates to a social networking behavior based identity system. Typical systems of identity determination and authentication are configured to associate accounts with email addresses. The ability to receive email at a specified email address may be a prerequisite for a user to create an account or to reset or change a password for an existing account. However email providers may close email accounts due to inactivity or an explicit request. After a predefined time period elapses the email address of a first user may be released for registration by a second user. The second user may then attempt to gain access to other accounts of the first user that are associated with the particular email address.

Accordingly factors other than the ability to receive email at the specified email address may be used to confirm user identity. To this end various embodiments of the present disclosure employ social networking behavior as a factor in user identity determination and authentication. For example a user may link a particular account with social networking data describing a circle of friends. At some time later the particular account may be deemed inactive and or the user may request to reset the password to the particular account. The user may be requested to provide access to social networking data in order to authenticate to the particular account. An identity confirmation factor may involve comparing the new circle of friends with the previously linked circle of friends. In the following discussion a general description of the system and its components is provided followed by a discussion of the operation of the same.

With reference to shown is a networked environment according to various embodiments. The networked environment includes a computing environment a computing environment and a client in data communication via a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks.

The computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively a plurality of computing devices may be employed that are arranged for example in one or more server banks or computer banks or other arrangements. For example computing environment may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. Such computing devices may be located in a single installation or may be distributed among many different geographical locations.

Various applications and or other functionality may be executed in the computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the computing environment . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing environment for example include a network page server an identity management system and other applications services processes systems engines or functionality not discussed in detail herein. The network page server is executed to serve up various network resources of a network site. Such resources may include network page data mobile application data and or other network resources. In various scenarios the network site may correspond to an electronic commerce site that facilitates online ordering of items from one or more online merchants. In one embodiment the network page server may correspond to a commercially available hypertext transfer protocol HTTP server such as Apache HTTP Server Apache Tomcat Microsoft Internet Information Services IIS and or other servers.

The identity management system is executed to provide user identity recognition and authentication functionality for the network site. The identity management system may provide social networking behavior based identity recognition and authentication in place of or in addition to the use of traditional security credentials such as for example usernames and passwords biometric systems authentication based on possession of a physical token and so on. In some cases social networking behavior may be employed as a factor for authentication under special circumstances where the identity management system may have good cause to doubt that the user identity belongs to the client e.g. during password reset requests when incorrect security credentials are provided when the user identity has been inactive for a predefined period of inactivity and so on.

The data stored in the data store includes for example network site data user identity data identity assertion data identity system configuration data and potentially other data. The network site data includes various data served up by the network page server or used by the network page server or other services in generating resource data that is served up by the network page server for a network site. Such network site data may include for example text code images video audio and or other data.

The network site data may be structured into resources which are unsecured secured resources that may be associated with user identities and or other categories. For example the resources may be accessed by unrecognized or unauthenticated users while the secured resources may be accessed by users who have been recognized or authenticated. In some embodiments the secured resources may be divided into multiple categories where one or more categories employ social networking behavior based authentication while one or more other categories do not. In some cases a greater identity confidence may be demanded before certain categories of secured resources may be accessed.

The user identity data includes various data associated with user identities and or user accounts that have been shared by the users. As described herein the user identity data may correspond to data that the user has elected to share with the identity management system . In other words the user identity data may be maintained on a strictly opt in basis. Further anonymization of identifiers and other measures to disassociate personally identifiable information may be employed to safeguard user privacy and adhere to privacy policies.

In various embodiments a user identity need not correspond to real data for a person. To the contrary the user identity data may be associated with fictitious information that is provided by the user consistently. In some cases a user identity in the user identity data may correspond to multiple people each having subaccounts with different behavioral characteristics. The user identity data may include security credentials stored social networking data that may include a circle of friends contact list data and transaction data communication account data activity data reputational data client profile data and or other data. The user identity data may also include various account data for the user including name address preferences personalizations customer reviews of items order history browse history and so on.

The security credentials may include usernames passwords asymmetric cryptographic keys cookie identifiers and or other information that may be employed for authentication that relates to data that a user has or knows rather than how the user behaves. The stored social networking data may comprise trusted social networking data that is associated with the user identity. In some embodiments the stored social networking data may include a circle of friends . The circle of friends may correspond to symmetric or asymmetric relationships between the user identity and other user identities participating in a social network such as for example Facebook LinkedIn MySpace Friendster and others. A symmetric relationship in a circle of friends may correspond to a relationship between two parties where both parties have explicitly consented to the relationship. By contrast an asymmetric relationship in a circle of friends may correspond to a relationship between two parties where only one party has explicitly consented to the relationship.

In some cases the stored social networking data may be derived implicitly through contact list data transaction data and or other data. The contact list data may describe a list of contacts associated with the user identity. The contact list data may be pulled from an address book stored on or associated with the client downloaded from an email account or other account that reflects communication between the user associated with the user identity and other users or obtained from other sources.

The transaction data may correspond to transactions with merchants geolocation data and other behavioral data and may be employed to infer social networking connections between user identities. The transaction data may be analyzed to generate a list of at least one location visited by a person corresponding to the user identity. As a non limiting example a user who from his or her transactions e.g. airplane tickets on site transactions geolocation data etc. appears to visit a certain city or other geographic region away from home yet does not rent a car and does not stay in a hotel may have a social relationship with one or more people in that certain city or other geographic region. As another non limiting example a user who ships items to other addresses may have a social relationship with one or more people at the other addresses. Further a social relationship may be more strongly inferred for example if the items being sent are gift wrapped.

The communication account data may describe an email account telephone number or other communication account that may be employed to provide a form of proof of identity. For example such communication accounts may be employed to reset a security credential recover a lost security credential or perform other actions to recover access to a user identity. To reset a security credential a special reset token may be sent in an email to an email address in a text message to a telephone number etc. Upon providing the reset token e.g. by manual entry in a form through the network page server by accessing a special uniform resource locator URL that encodes the reset token and so on a form of proof of identity may be provided. However it is noted that the email address telephone number etc. may be reassigned to another user making this form of authentication potentially fallible.

The activity data may be employed to track the activity and or inactivity of a user identity. A user identity may be deemed inactive if the user identity has not been employed for a predefined period of time. As a non limiting example a user identity may be determined to be inactive if the user has not authenticated to the user identity for one year eighteen months or some other time period. The time period ideally will be selected to account for seasonal logins e.g. some customers may log in only once a year in December. In some cases the user identity may be reassigned to another user with a new corresponding user account being created when the user identity is inactive or after another predefined period of time. Such reassignment may be desirable when a namespace for the user identity is relatively limited e.g. usernames for a particular email domain telephone numbers within a congested area code and so on.

The reputational data corresponds to a reputation of the particular user identity. User identities may have a greater or lesser reputation depending on a paid subscription or membership status of the user identity login frequency longevity of the account orders placed whether other users have endorsed the user identity item reviews authored ratings of the item reviews a country or region associated with the user identities and so on. As a non limiting example a user identity established five years ago that has been consistently active every month and is associated with dozens of customer product reviews which have been rated helpful will be considered to have a greater reputation than a user identity established two months ago that has been inactive for a month and is not associated with any customer product reviews. As another non limiting example a user identity associated with a paid subscription membership or other status enhanced by way of a periodic payment may be considered more reputable than a user identity that does not have the same paid subscription or status. The reputational data may also track poor reputation such as whether the user identity corresponds to a known fraudster. User identities based in geographic regions associated with high levels of fraud may have relatively lower reputations.

The client profile data may correspond to a stored client profile associated with the user identity. For example the client profile data may include data relating to network addresses cookie identifiers and or other characteristics of clients associated with the user identity. The identity assertion data corresponds to data associated with a client which may be unrecognized or unauthenticated as having a user identity. The identity assertion data may include an identity confidence level an inverse identity confidence level updated social networking data and or other data. The identity confidence level is a score computed by the identity management system corresponding to a confidence that a particular user identity belongs to a user at the client . The inverse identity confidence level is a score computed by the identity management system corresponding to a confidence that a user at the client does not have a particular user identity i.e. that the particular user identity does not belong to the user at the client .

The updated social networking data corresponds to social networking data received in connection with a client presenting an assertion of a user identity. For example the client may be requested to provide information regarding a social networking account to facilitate social networking behavior based authentication. The identity management system may compare the updated social networking data with the stored social networking data as part of the authentication process.

The configuration data includes various configuration parameters that control the operation of the identity management system . Such parameters may relate to authentication and recognition thresholds thresholds regarding overlap of circles of friends thresholds regarding reputation of friends that may affect authentication and or recognition and so on.

The computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively a plurality of computing devices may be employed that are arranged for example in one or more server banks or computer banks or other arrangements. For example computing environment may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. The computing environment may be operated by a different entity from the entity that operates the computing environment . Multiple different computing environments may be provided in the networked environment . Such multiple computing environments may each correspond to different entities and different network sites.

Various applications and or other functionality may be executed in the computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the computing environment . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing environment for example include a social network application programming interface API and other applications services processes systems engines or functionality not discussed in detail herein. The social network API is configured to provide social networking data to the identity management system about a particular user in response to a request. The data stored in the data store includes for example social networking data and potentially other data. Such social networking data may include for example names and or other identifying information regarding the circle of friends associated with the user notifications that a particular user has added another user to his or her circle of friends notifications that a particular user has accepted an invitation to join the circle of friends of another user endorsements of a particular user by other users and so on.

The client is representative of a plurality of client devices that may be coupled to the network . The client may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. The client may include a display . The display may comprise for example one or more devices such as liquid crystal display LCD screens gas plasma based flat panel displays LCD projectors or other types of display devices etc.

The client may be configured to execute various applications such as a client application and or other applications. The client application may correspond to a browser mobile application or other application configured to access and render network content such as network pages or mobile application data obtained from the network page server or other servers. The client application may be configured to render a user interface on the display . The client application may be configured to store social networking data including for example data regarding circles of friends contact lists email and telephone correspondence records and so on. The client application may be configured to provide at least a portion of the social networking data stored in the client to the identity management system to facilitate identity recognition and authentication. The client may be configured to execute applications beyond the client application such as for example mobile applications email applications instant message applications social networking applications and or other applications.

Next a general description of the operation of the various components of the networked environment is provided. To begin a user establishes a user identity with the identity management system . To this end the user may complete an enrollment process for example using a form in a mobile application or in a network page. In some cases the user may call an agent of the identity management system and the agent may perform the data entry. The user may provide a name contact information birthdate mailing addresses payment instruments answers to security questions an email address or telephone number used to reset a security credential security credentials such as usernames and passwords and other information. Accordingly the security credentials and the communication account data may be populated. The user may also provide social network related information such as an identification of a social networking account information and security credentials needed to access information regarding the social networking account a list of contacts information and security credentials needed to access the list of contacts and so on.

Thus the identity management system is able to access and store the stored social networking data the contact list data and or other data that may be populated from external sources. In one scenario the identity management system may communicate with the client to access the social networking data stored by the client . In another scenario the identity management system may communicate with the social network API executed by the computing environment in order to obtain the social networking data stored by the data store . In another scenario the identity management system may communicate with another external computing environment to obtain information regarding contacts from an email account or other communication account of the user.

Over time the transaction data and the reputational data for the user identity may be populated as the user engages in various transactions e.g. places orders etc. and builds a community reputation e.g. writes reviews of products etc. . The activity data may be updated based at least in part on the inactivity or activity of the user such as a time associated with the last successful log in of the user identity to access resources or secured resources .

In various situations the identity management system may employ social networking data to facilitate identity recognition and or authentication. The identity confidence level and or the inverse identity confidence level may be employed to facilitate multiple factor behavior based authentication. Various techniques for a behavior based identity system are described by U.S. patent application Ser. No. 13 555 724 entitled BEHAVIOR BASED IDENTITY SYSTEM and filed on Jul. 23 2012 which is incorporated herein by reference in its entirety.

Various circumstances and actions by the user at the client may cause a relatively lower identity confidence level and or a relatively higher inverse identity confidence level . For example the client may provide an incorrect security credential the user identity may have shown no activity for a certain predefined time period the client may request reset of a security credential an unrecognized client may be employed and so on. In response to such circumstances and actions social networking behavior may be employed as a factor for identity recognition and or authentication. In some cases social networking behavior may be employed as an additional factor for authentication even when a correct security credential has been supplied.

Referring next to shown is one example of a user interface rendered by a client in the networked environment . The user interface provides one example of a network page or mobile application screen that is configured to solicit updated social networking data from a user at the client . Assuming that authentication is not otherwise successful i.e. the identity confidence level may be below a minimum threshold or the inverse identity confidence level may be above a maximum threshold the user may be prompted for other information to facilitate authentication. This other information may comprise social networking information.

As shown in the user has provided an assertion of a user identity corresponding to a username of jsmith221. An explanatory message states that the activity data indicates that the user identity has not been logged in within a certain time period here 6 months. The explanatory message requests that the user provide information regarding social networks of the user to facilitate authentication. One or more options may be present for the user to provide the social network information. For example option allows the user to link an account with SocialNetwork1 option allows the user to link an account with SocialNetwork2 and option allows the user to transfer a contact list.

Providing social networking information may be optional for the user. Accordingly an alternative option may be provided so that the user may provide information other than social networking information. For example the alternative option may allow the user to answer various security questions such as knowledge based questions in lieu of providing social networking information. Correct answers to the security questions may cause the identity confidence level to increase and the inverse identity confidence level to decrease.

Returning now to if the user elects to share social networking information to support an assertion of the user identity the identity management system can then communicate with the social network API or other services to obtain information. The identity management system may also obtain social networking data from the client . Accordingly the updated social networking data associated with the assertion of the user identity is generated.

The identity management system may then proceed to compare the updated social networking data with the stored social networking data associated with the user identity. For example both the updated social networking data with the stored social networking data may be associated with a respective circle of friends and the identity management system may compare the respective circles of friends to determine a degree of overlap. If the degree of overlap meets a certain threshold for similarity the degree of overlap may count positively towards authentication for the identity confidence level and or the inverse identity confidence level .

As a non limiting example suppose that the stored social networking data is generated from contact list data imported from an email account of the user. In asserting a user identity the user may link a social networking account. The social networking data for the account may be obtained from the social network API . The identity management system may determine that 60 of the email contacts are also friends within a circle of friends in the social network. Based on this relatively large degree of overlap the identity confidence level may be increased and or the inverse identity confidence level may be decreased. It is noted that such an increase and or decrease may correspond to a fixed amount in response to the degree of overlap meeting a threshold or a variable amount correlated to the degree of overlap.

As a non limiting example suppose that the stored social networking data is generated from transaction data that includes a list of locations visited by a person corresponding to the user identity. Such locations may correspond to locations where the user has not rented a car or lodging. In asserting a user identity the user may link a social networking account. The social networking data for the account may be obtained from the social network API . The identity management system may determine that 12 members of the circle of friends in the social network live in locations that have been visited by the person corresponding to the user identity. Based on this comparison the identity confidence level may be increased and or the inverse identity confidence level may be decreased.

As another non limiting example suppose that the stored social networking data is imported from a first social network API for a first social networking account. In asserting a user identity the user may link a second social networking account. The social networking data for this second account may be obtained from a second social network API . The identity management system may determine that 1 of the first circle of friends overlaps with the second circle of friends . Based on this relatively small degree of overlap the identity confidence level may be decreased and or the inverse identity confidence level may be increased. It is noted that such a decrease and or increase may correspond to a fixed amount in response to the degree of overlap meeting a threshold or a variable amount correlated to the degree of overlap.

Additionally the identity management system may be configured to determine whether a single payment instrument e.g. a gift card was used to pay for a shipment to at least one member of a stored circle of friends and to at least one member of an updated circle of friends . If the same payment instrument was used the identity confidence level may be increased. Likewise if email communications telephone calls etc. indicate that the user employed the same email address telephone number etc. to contact at least one member of a stored circle of friends and at least one member of an updated circle of friends the identity confidence level may be increased. Whether such data is available to the identity management system may be configured by the user. The more attribution that is available via the data that the user has elected to share will lend credibility to the user identity.

In one scenario the user identity may be inactive for a prolonged period of time and the assertion of the user identity may correspond to a new user attempting to obtain the user identity. Such a scenario may be common in a relatively congested namespace for the user identity e.g. where the user identity corresponds to a desirable email username. When a user identity has been deemed inactive i.e. not active for a threshold period of time new account resources may be created for the user identity or existing account resources may be made accessible for the user identity based at least in part on social networking data.

For example access to order history and payment instruments in the secured resources may be reserved for users who can be authenticated based at least in part on a comparison of the updated social networking data with the stored social networking data . Conversely access to previous order history and payment instruments in the secured resources may be denied based at least in part on the comparison of the updated social networking data with the stored social networking data . Such a comparison may indicate that the user at the client is the same user as that previously associated with the user identity or that the user at the client is a different user.

In another scenario the client may not correspond to a stored client profile in the client profile data associated with the user identity. For example a user identity may be associated with clients according to the client profile data . A different client may log in with the correct security credential for the user identity. However because the client does not correspond to the stored client profile additional measures of authentication may be employed for example using social networking data as described herein.

Social networking data may be employed in other ways beyond a comparison of previous and current social networking data to facilitate authentication. For example reputation of various people within the circle of friends of the user may weigh towards confidence that the user has the identity that he or she is asserting.

Suppose that a first user identity is associated with a great reputation based on various factors in the reputational data and suppose that a client presents an assertion of a second user identity that identifies a social network. As a non limiting example the first user identity may have been registered for five years and may be associated with a lengthy history of orders. If the first user identity adds the second user identity to his or her circle of friends it may be inferred that the second user identity is relatively trustworthy based at least in part on the reputation of the first user identity. If the information in the corresponding social networking profile e.g. name address etc. for the user at the client in the social network matches or substantially matches stored information in the user identity data for the second user identity it may be inferred that the user at the client corresponds to the second user identity. Accordingly the identity confidence level may be increased and or the inverse identity confidence level may be decreased.

When the identity confidence level meets an authentication threshold the user at the client may be authenticated to have the asserted user identity. Consequently the network page server may provide access to secured resources by the client for those secured resources that are associated with the user identity. The principles discussed herein may be applied both to authentication and identity recognition by the identity management system . A user identity may be recognized based at least in part on a comparison of stored social networking data with updated social networking data . Similarly a user identity may be recognized based at least in part on a trustworthy social networking profile presented by the client where the profile contains information that maps to stored information associated with a user identity. Such a social networking profile may be deemed trustworthy based at least in part on connections to reputable friends in the circle of friends for the social networking profile.

Referring next to shown is a flowchart that provides one example of the operation of a portion of the identity management system according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the identity management system as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the identity management system stores first social networking data in association with a user identity in the stored social networking data . Such data may be obtained from a social network API contact list data email accounts and or other sources. Such data may be stored while the user identity is classified as active or before a commencement of a predefined period of inactivity. In box the identity management system receives an assertion of the user identity from a user at a client . For example the user may access a log on form on a network page served up by the network page server and enter a username associated with the particular user identity.

In box the identity management system receives second social networking data in response to the assertion. For example as in the user may be prompted to provide updated social networking data to facilitate identity recognition and or authentication. The social networking data may be received in response to the assertion meeting threshold criteria for uncertainty e.g. when the user identity is inactive for a threshold period of time when a password reset request is received when characteristics of the client differ from a stored client profile when an incorrect password has been provided and so on. In box the identity management system determines a degree of overlap between a first circle of friends in the stored social networking data and a second circle of friends in the updated social networking data . In box the identity management system generates an identity confidence level and or an inverse identity confidence level based at least in part on the degree of overlap.

In box the identity management system determines whether the inverse identity confidence level meets a minimum threshold. It is noted that in some cases the inverse identity confidence level may meet the minimum authentication threshold despite a correct security credential being provided by the client . If the inverse identity confidence level meets the minimum threshold the identity management system moves to box and determines that the user at the client does not have the asserted user identity. The client may then be denied access to secured resources associated with the user identity. Thereafter the portion of the identity management system ends.

If instead the inverse identity confidence level does not meet the minimum threshold the identity management system continues from box to box and determines whether the identity confidence level meets a minimum authentication threshold. If the identity confidence level meets the minimum authentication threshold the identity management system moves from box to box and authenticates the user at the client as having the user identity. The client may be allowed access to various secured resources associated with the user identity. Thereafter the portion of the identity management system ends.

If instead the identity confidence level does not meet the minimum authentication threshold the identity management system moves from box to box . It is noted that in some cases the identity confidence level may not meet the minimum authentication threshold despite a correct security credential being provided by the client . In box the identity management system determines that the client remains unauthenticated. Accordingly the identity management system may deny access to some or all of the secured resources associated with the user identity. In one embodiment where the user identity is classified as being inactive after a predefined period of inactivity a new user account having the user identity may be created for the client . In creating a new user account secured resources such as order history payment instruments etc. that were previously associated with the user identity may be disassociated from the user identity. Thereafter the portion of the identity management system ends.

Moving on to shown is a flowchart that provides one example of the operation of another portion of the identity management system according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the other portion of the identity management system as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the identity management system obtains an assertion of a user identity from a client . In box the identity management system determines whether the assertion specifies a correct security credential . In box the identity management system receives social networking data in response to the assertion. For example as in the user may be prompted to provide updated social networking data to facilitate identity recognition and or authentication.

In box the identity management system may send a verification request to each of one or more members in the circle of friends in the social networking data. The verification request asks the friends to verify or confirm some aspect of the assertion of the user identity. As a non limiting example the verification request may present some information provided by the user or associated with the client e.g. geolocation data associated with the client .

In box the identity management system generates an identity confidence level and or an inverse identity confidence level FIG. based at least in part on the reputation of at least one member of a circle of friends in the social networking data and whether the assertion specifies the correct security credential . The identity management system may also compare the social networking profile of the user received in box with stored information associated with the user identity.

Further the identity management system may or may not receive one or more verification responses from the members of the circle of friends to whom a verification request was sent. If a verification response is received that indicates that the client does not have the user identity the identity confidence level may be decreased and or the inverse identity confidence level may be increased. If a verification response is received that indicates that the client does have the user identity the identity confidence level may be increased and or the inverse identity confidence level may be decreased. If no verification response is received the identity confidence level and or the inverse identity confidence level may be unaffected or the identity confidence level may be decreased and or the inverse identity confidence level may be increased. The amount of the change to the identity confidence level and or the inverse identity confidence level may depend at least in part on the respective reputation of the friend to whom the verification request was sent.

Continuing on as a non limiting example if relatively many members of the circle of friends are determined to be known fraudsters from the reputational data the identity confidence level may be determined to be relatively lower and or the inverse identity confidence level may be determined to be relatively higher. As another non limiting example if relatively many members of the circle of friends are determined to have a premier paid membership status from the reputational data the identity confidence level may be determined to be relatively higher and or the inverse identity confidence level may be determined to be relatively lower. It is noted that the identity management system may take into account many other factors in generating the identity confidence level and or the inverse identity confidence level . For example a client that is determined to be in a country or region with high levels of fraud may have a relatively higher inverse identity confidence level and or a relatively lower identity confidence level .

In box the identity management system determines whether the inverse identity confidence level meets a minimum threshold. If the inverse identity confidence level meets the minimum threshold the identity management system moves to box and determines that the user at the client does not have the asserted user identity. The client may then be denied access to secured resources associated with the user identity. Thereafter the portion of the identity management system ends.

If instead the inverse identity confidence level does not meet the minimum threshold the identity management system continues from box to box and determines whether the identity confidence level meets a minimum threshold. Such a threshold may be for authentication or recognition. If the identity confidence level meets the minimum threshold the identity management system moves from box to box and authenticates or recognizes the user at the client as having the user identity. The client may be allowed access to various secured resources associated with the user identity. It is noted that access to other secured resources may depend on the identity confidence level meeting a greater threshold than the minimum threshold. Thereafter the portion of the identity management system ends.

If instead the identity confidence level does not meet the minimum authentication threshold the identity management system moves from box to box . It is noted that in some cases the identity confidence level may not meet the minimum threshold despite a correct security credential being provided by the client . In box the identity management system determines that the client remains unauthenticated or unrecognized. Accordingly the identity management system may deny access to some or all of the secured resources associated with the user identity. Thereafter the portion of the identity management system ends.

With reference to shown is a schematic block diagram of the computing environment according to an embodiment of the present disclosure. The computing environment includes one or more computing devices . Each computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end each computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the network page server the identity management system and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in the memory and are executable by the processor as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Flash or other programming languages.

A number of software components are stored in the memory and are executable by the processor . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory and run by the processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory and executed by the processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory to be executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memory is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor may represent multiple processors and or multiple processor cores and the memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor may be of electrical or of some other available construction.

Although the network page server the identity management system and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits ASICs having appropriate logic gates field programmable gate arrays FPGAs or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts of show the functionality and operation of an implementation of portions of the identity management system . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowcharts of show a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the network page server and the identity management system that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system.

The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

