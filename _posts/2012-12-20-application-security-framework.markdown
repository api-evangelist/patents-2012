---

title: Application security framework
abstract: In accordance with the teaching described herein, systems and methods are provided for providing secure access to a software application on a computing device. The software application may include a security framework having a set of predetermined security requirements. Prior to enabling access to the software application by a user, the computing device may, (i) verify installation of a device security configuration profile on the computing device, wherein the device security configuration profile certifies that the software application includes the set of predetermined security requirements, (ii) receive identifying information from the user via a user interface, (iii) verify the identifying information with an authentication server, and (iv) based on a successful verification of the identifying information, receive and store a security token. Access to the software application on the computing device may be provided for a specified period identified by the security token.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09098680&OS=09098680&RS=09098680
owner: AbbVie Inc.
number: 09098680
owner_city: North Chicago
owner_country: US
publication_date: 20121220
---
This application claims priority from the following two U.S. Provisional Patent Applications U.S. Provisional Patent Application No. 61 579 385 filed on Dec. 22 2011 and titled Mobile Security Framework and U.S. Provisional Patent Application No. 61 589 528 filed on Jan. 23 2012 and titled Application Security Framework both of which are incorporated herein by reference in their entirety.

The technology described in this patent document relates generally to security for software applications. More particularly systems and methods are described for providing a security framework for developing or modifying a software application to include a preconfigured set of security features.

Security measures for controlling access to software are often critical in today s environment. This is particularly true for software systems that provide access to sensitive or confidential information. It may therefore be desirable to provide a security framework for providing secure access to software applications.

In accordance with the teaching described herein systems and methods are provided for providing secure access to a software application on a computing device. The software application may include a security framework having a set of predetermined security requirements. Prior to enabling access to the software application by a user the computing device may i verify installation of a device security configuration profile on the computing device wherein the device security configuration profile certifies that the software application includes the set of predetermined security requirements ii receive identifying information from the user via a user interface iii verify the identifying information with an authentication server and iv based on a successful verification of the identifying information receive and store a security token. Access to the software application on the computing device may be provided for a specified period identified by the security token.

The system includes a security framework installer and an application developer tool which may be software applications that are stored in one or more memory devices and are executed by one or more processors e.g. using a laptop or desktop computer. The system also includes a security framework template that is created and stored by the security framework installer and that includes a plurality of security modules . In operation the security framework template is retrieved by the application developer tool in order to include the predefined security modules in a software application under development ultimately resulting in a secured application that is protected by the security framework defined in the template.

The security framework installer is used to combine the plurality of pre developed security modules into a security framework template and store the framework to a file for access by the application developer tool . The security framework template may for example he in the form of a project template that is specific to a particular application developer tool. For instance in uric embodiment the application developer tool may he a version of the Xcode developer tool provided by Apple Inc. of Cupertino Calif. for developing software applications for their Mac iPhone and iPad products and the security framework template may be in the form of an Xcode project template. Xcode Mac iPhone and iPad are registered trademarks of Apple Inc. of Cupertino Calif. The security framework installer may for example be used to create the skeleton for a new software development project e.g. an Xcode project that includes a predetermined set of security modules . For example in certain embodiments the security framework installer may automatically include security modules within the framework that have been predetermined as being essential in order for the new application to meet certain security regulations or guidelines. In addition the security modules may be standardized for use with different types of software applications and different types of computing devices for instance using standardized application programming interfaces APIs .

As illustrated the security modules included within the security framework template may include a device authentication module a configuration profile management module a data protection and encryption module a network access management module and or other security modules . It should be understood that a security module may include software code e.g. class files or other software routines configuration files and or other types of software instructions or data for use by the application in implementing certain security features.

The device authentication module may for example include software instructions and or data for use by the secured application in accessing an authentication server to verify a user s identity and negotiate a security token for accessing the application . The device authentication module may include software instructions e.g. class files for receiving password information from a user and transmitting an authentication request message over one or more networks to an authentication server. An authentication request message may include the password information along with a username and or other information for identifying the user and or a particular device on which the software application is executing.

The device authentication module may further include software instructions for receiving and managing a security token from the authentication server and for using the security token to restrict access to the secured application and any application data. For instance the device authentication module may require the user to provide username and password information and successfully negotiate a security token with an authentication server before any access is provided to the secured application or stored application data. The device authentication module may also monitor any expiration information associated with a negotiated security token and prevent further access to the application and any associated application data after the security token has expired. An example operation of the device authentication module including an example of how a security token may be negotiated and managed is described below in more detail with reference to .

The configuration profile management module may include software instructions and or data for use by the secured application in monitoring the security settings of a device on which application is installed. For instance the security framework may require that the device operating the secured application have certain predetermined security settings enabled such as a screen lock period coupled with password protection. The configuration profile management module may be configured to monitor the security configuration of the device and prevent access to the secured application and any associated application data if the required security configuration is not enabled on the device. An example of how the security configuration for a device operating the secured application may be installed and monitored is described below in more detail with reference to .

The data protection and encryption module may include software instructions and or data for protecting the transmission and storage of application data and or other information associated with the secured application . For instance the data protection and encryption module may provide or require the use of data encryption algorithms such as AES bit encryption for encrypting any data that is stored by the secured application or that is transmitted over a network by the secured application . The data protection and encryption module may also be used to create one or more secure data storage locations e.g. document folders for the secured application and to manage access to any secure stored data. Application data and or other information stored in a protected data storage location may for example be both encrypted and protected using the highest level of data protection available on the particular device.

In addition the data protection and encryption module may interact with other security modules such as the device authentication and configuration profile management module to determine if and when access to protected data is allowed. Protected data access may for example be permitted only once a valid security token has been negotiated by the device authentication module and a valid device security configuration has been verified by the configuration profile management module . The data protection and encryption module may also cut off all access to protected data if it is determined that the security token has expired or if any unauthorized change is made to the device security configuration. In one embodiment any protected data may be deleted if it is determined that a device security profile has been removed or otherwise modified. A further example of how application data and other related information may be protected by the data protection and encryption module is described below with reference to .

The network access management module may include software instructions and or data for controlling network access by the secured application . For instance the network access management module may require that the secured application use a secure cryptographic protocol such as SSL or TLS for any communications over a wired or wireless network. Any network communications to or from the secured application that are not encrypted with an authorized cryptographic protocol may be blocked by the network access management module . For instance the module may permit only HTTPS traffic by the secured application . In addition the network access management module may enforce other restrictions on which network locations may be accessed and how data may be transmitted over a network. For instance a valid digital certificate e.g. SSL certificate may be required from any network site accessed by the secured application and online content hosting for the application may be restricted to a single secure online source. The network access management module may also interface with the data protection and encryption module to ensure that any downloaded data is immediately protected. A further example of how the network access management module may protect against unsecure network access is described below with reference to .

The security framework template may also include one or more other security modules . For instance in certain embodiments the template may include a security token module for managing and protecting access to one or more security tokens and or other user or application related information. In one example a security token module may enable the use of a single negotiated security token for multiple secured applications that include the same security framework.

The manual selection embodiment depicted in may be particularly useful for modifying an existing application to add the security framework. That is when developing a secured application from scratch the security framework template of provides a convenient way to ensure that a preselected set of security modules are properly incorporated into the new application. But when modifying an existing application to add the preselected set of security modules it may not be feasible to utilize an application developer framework. Accordingly in certain embodiments the security framework installer may provide the preselected set of security modules both in the form of a security framework template as illustrated in and in a security framework library as illustrated in . In this way the user may incorporate the security modules in a manner that is most suitable to the particular application being developed or modified.

In addition the template library may also include one or more security modules that are not included in the security framework template. For instance in the illustrated example the template library includes a security token management module in addition to the security modules included in the security framework of . The additional security module s may for example include a security module s that is available for inclusion in the security framework by the application developer tool but that is not an essential module in accordance with a predetermined set of security guidelines or regulations. For instance the security token management module may include software instructions that are configured to provide access to a single negotiated security token by multiple applications that share the same security framework as described below in more detail with reference to .

In one example embodiment the security framework installer may provide both a security framework template as shown in and a security framework library as shown in . In this manner the application developer tool may take advantage of the security framework template to provide the essential framework for a new application. In addition the security framework library may also be accessed by the application developer tool to add any additional security modules such as the security token management module that may not be included in the security framework template .

The certification authority may perform one or more user authentication operations to verify the identity of the device user and or the user s authorization to access the secured application . For instance in certain embodiments access to the secured application may be restricted to select employees licensed customers or some other limited group of people.

The certification authority may authenticate the user by verifying some type of identification and or authorization information such as an employee identification number a product license number a photo identification or some other suitable type of information.

In addition the certification authority verifies that the installed application includes a security framework with a predetermined set of security modules and or settings as shown at reference . For instance the certification authority may require that certain security features or settings be included in the application before access to the application is authorized on the device . In certain embodiments the certification authority may not only require certain security features or settings but may also require that particular pre approved software instructions e.g. security modules be used to implement the required security features. In this way the certification authority can ensure compliance by the application with a predetermined set of security guidelines or regulations. In addition the certification authority may ensure that access to the source code is protected for example by requiring that core functionalities and security functions are implemented as protected classes.

In addition to verifying the required security modules and source code security the certification authority may also test the application for known security risks. For example the certification authority may test for memory leaks from the secured application viruses or other malware infecting the application or device and or other problems with the application that may raise security concerns.

If the certification authority determines that all of its security guidelines and tests have been satisfied then a configuration profile is installed on the device as shown at reference . The configuration profile provides security restrictions for the device on which the secured application is installed. For example the configuration profile may require that device password and screen lock settings be enabled on the device. In addition the configuration profile may be signed by the certification authority and stored on the device in a way that any attempt to remove or modify the configuration profile may be detected by the application security framework. Once the configuration profile has been installed the certified device is returned to the user and may be used to access the secured application as described in more detail below with reference to .

The certification authority may for example be an entity associated with the device user such as an employer or may be a third party entity that has an interest in maintaining integrity of the secured software application . For example the function of the certification authority could be performed by the employer of the device user to ensure that confidential information is protected on a portable computing device issued to the device user. In another example as described in more detail below with reference to the function of the certification authority may be performed by a software developer to ensure that a controlled copy of the software is utilized by the end user.

In alternative embodiments the functions of the certification authority could be performed remotely for example by a certification authority CA server without the certificate authority having to take physical possession of the device. For instance in certain embodiments the secured application could be transmitted over a network to a CA server which verifies that the security framework meets a set of predetermined guidelines and tests the application for any additional security issues e.g. memory leaks viruses etc. If the security of the application is successfully verified by the CA server then a configuration profile may be provided for download from the CA server and installation on the device.

In operation when the secured application is executed and before the user is provided with access to the application or associated data the security framework verifies that the device includes a valid configuration profile . This may include verifying that a configuration profile is currently stored in an appropriate location on the device verifying that the configuration profile includes a valid digital signature from the certification authority verifying that that configuration profile has not been modified and or verifying that an expiration period for the configuration profile has not expired. In addition the security framework may continue monitoring the configuration profile and disable access to the secured application and any associated data if the configuration profile is removed or modified. In one embodiment the security framework may delete stored application data if it is determined that the configuration profile has been removed or modified in order to prevent unauthorized access to the stored data.

Once the configuration profile has been verified the security framework provides a user interface for receiving identifying information from the device user such as a username and password. In certain embodiments the security framework may be configured to mask the user interface such that the identifying information cannot be viewed or intercepted by a third party. For instance the security framework may cause the user interface to display an asterisk or some other character in place of the username and or password characters that are input by the user. In addition the security framework may prevent the user interface from being displayed on a peripheral device such as a projection device.

The identifying information received from the device user is then transmitted over a network to the authentication server for verification. If the identifying information is verified the authentication server generates a security token that is encrypted and returned over the network to provide authorization for accessing the secured application . The authentication server may for example be a domain controller server that employs an Active Directory AD service for verifying the identifying information e.g. username and password and creating the security token . The security token may for example be a Security Assertion Markup Language SAML 2.0 token which is an XML based protocol for exchanging authentication information and authorization data over a network . It should be understood however that in other embodiments some other type of security token session key or other authentication mechanism may be utilized to authenticate the user and provide authorization for accessing the secured application based on a successful authentication.

The security token once received from the authentication server is stored in a secure location on the device and is used by the security framework to grant access to the secured application for a specified period. The security token may include information identifying an expiration period after which a new security token must be negotiated with the authentication server in order to continue access to the secured application . The security framework may for example continuously monitor e.g. at predetermined intervals the stored security token and discontinue access to the secured application once the security token has expired. For instance upon expiration of the security token the security framework may cause the user interface to be displayed in order to receive identifying information e.g. a username and password from the user and negotiate a new security token from the authentication server . In addition the security token may also be used to provide other information for use by the secured application .

In one embodiment a single security token may be used to provide access to multiple secured applications for a specified period. For example the security token may be stored in a common secure file location for use in granting access to multiple secured applications that include the same security framework. In one example the security token could be stored in a file that is managed by the Keychain password management system included in certain versions of Mac OS provided by Apple Inc. of Cupertino Calif. Keychain and Mac OS are registered trademarks of Apple. Inc. of Cupertino Calif. In this manner a device user would only be required to log in with the authentication server once in order to gain access to multiple secured applications for as long as the single security token remains valid e.g. until expiration of the token. In addition logging out or invalidation of a session in one of the secured applications may result in invalidation of all of the multiple secured applications within the security framework.

After verification of the configuration profile and a successful log in with the authentication server the user may operate the secured application on the device. During operation of the application the security framework is used to provide and enforce certain security restrictions on the transmission and storage of data. The security framework may for example enforce certain restrictions on how data may be transmitted and received over a network and what type of on line resources may be utilized by the secured application . For instance the security framework may require that all online traffic to and from the secured application be encrypted using an authorized protocol such as SSL or TLS. The security framework may also only permit access to certified network locations such as websites or servers having a valid digital certificate such as an SSL certificate. In other examples network access by the secured application may be restricted to locations e.g. content hosting servers or websites that have been evaluated and preapproved for example by the certification authority. Other network access restrictions may also be enforced by the security framework such as limiting content hosting for the application to service from a single secure online source.

The security framework may also ensure that data associated with the secured application is encrypted and maintained in a secure storage location . For example the security framework may require that all application data be encrypted using a preapproved encryption algorithm e.g. AES and stored in one or more secure document folders that are protected at the highest available level of data protection available by the device operating system. The security framework may also require that the secure storage location be protected using hardware based encryption. In addition to protecting application generated data the security framework may also require that any data downloaded over the network by the secured application be immediately encrypted and stored in the one or more secure document folders .

In certain examples the security framework may also permit access to and secure offline resources in the computing device after a successful login. The credentials of the offline data may then be verified when the device comes back online to validate the user credentials based on authentication server response.

The security framework may continuously monitor e.g. at predefined intervals the secure document folders for unauthorized access and or other security breaches. If the security framework determines that a security requirement has been breached it may disable all access to the protected data for example by deleting all files in the protected data locations . For instance data in the protected storage location may be automatically deleted by the security framework if a data protection policy is modified if the device configuration profile is removed or modified and or if some other type of potential security breach is detected. In one example the security framework may also delete protected data upon expiration of the security token.

At step the security framework determines if a valid device configuration profile is stored on the device. If not then a configuration profile must be installed by the certificate authority step before access to the application is permitted. Once a valid security token and a valid configuration profile have been verified the main application files and processes may be accessed by the user beginning at step in the illustrated example.

At step the application retrieves the user name which may be stored as part of the security token and the game data from a secured storage location associated with the application . Then at step the application connects over a secure link e.g. SSL or TLS with a content server to retrieve online game data such as leader board information. Before access is permitted to the content server however the security framework first verifies at step that the server has a valid digital certificate and or that online access to the content server is otherwise permitted by the network security policies of the security framework. Once access to the content server is granted the online game data is downloaded over the network at step .

The game application is played by the user at step during which time the application may securely access data from the content server and store application data such as the game status in a protected document file associated with the secured application as shown in step . The user may then continue playing the game at step without further authentication for so long as the security token remains valid e.g. until the end of a token expiration period. 

The set of regulations relating to operation of the device may be received by a compliance monitoring authority which may for example be the manufacturer and or distributor of the regulated device . To certify that the secured software application has been correctly installed with a valid security framework the compliance monitoring authority may include a device certification entity that verifies and tests the application on the device and then installs a device configuration profile e.g. as described above with reference to . The regulated device with the installed application and configuration profile may then be provided to the user . For instance in the example of a regulated medical device subject to FDA regulation the device may be provided to a physician or medical facility for use on patients.

To ensure authorized use of the secured application in the field the security framework requires that the user negotiate a security token with an authentication server before the application may be used. The security token may for example be negotiated by providing the authentication server with valid identification information such as a username and password. In other embodiments however additional information could also be required to receive a security token. For instance in one example the security framework may provide the authentication server with the version number of the secured application and the authentication server may verify that a valid version of the software is installed prior granting access. In this way the compliance monitoring authority can verify that the correct version of software is in place and is secure before allowing the software to be used in the field. In the example of a regulated medical device the compliance monitoring authority may verify that a compliant version of the software is installed and secured before allowing the device to be used on a patient. In this way the use of medical related or other regulated software may be controlled from a remote central location.

In addition to the example illustrated in the security framework described herein may be advantageous for many applications and in many industries where it is desired to provide secure applications and secure data transmission. For instance in one example the mobile security framework may be used to ensure the confidentiality of patient data in a mobile application used by a treating physician or other medical personnel.

In another example the mobile security frame work may be utilized to secure communications between two or more computing devices such as a server and mobile computing device utilized by a salesperson. Utilizing the mobile security framework in this manner may ensure that the salesperson s mobile computing device contains the most up to date information. Additionally by serving the information from a secure location the content of the information can be tailored to the salespersons audience for instance by providing audience specific information with the security token.

The security framework described herein also provides enhanced security features by encrypting any information that is added to the mobile computing device by a user therefore if the user s mobile computing device is lost or stolen the information contained thereon cannot be accessed.

With the increased use of portable computing devices by consumers manufacturers have responded by making applications available for users to install on their portable computing devices. These applications can assist the user to track such things as weight exercise time food intake glucose measurements and the like. The FDA has published a set of guidelines asking the general public how these applications should be regulated by the FDA to ensure consumer safety. For example if the application is utilized to measure and track glucose readings and then make insulin or food recommendations to a user there is concern if the application does not perform the correct calculations the user may suffer harm. By utilizing the security framework as described herein to develop a glucose measuring and insulin calculating application a user of the application would be required to log into the application via an authentication server. Through the login process the developer of the application can ensure that the application installed on the user s device is up to date and is functioning properly. In the event of a recall or other action required by the FDA the functionality of the application can be terminated by the developer thereby ensuring that the application can no longer be used and averting any harm to the user. Alternatively the application could be automatically updated on the users device to ensure that the application is up to date and functioning properly.

In the illustrated example an application development team submits a certification and licensing request to a certification and licensing authority for review and approval. For instance similar to the example described above with reference to the certification and licensing authority may be responsible for verification testing and installation of a device security configuration profile into an application provided by the development team . In addition upon approval of the application for use by a particular user the certification and licensing authority is also responsible for generating and controlling a digital license that enables access to the secured application on a particular device as illustrated at step . The digital license is provided to the authentication server which creates an application and device specific license key that is added to the application security framework . In addition the authentication server may also generate an application ID that is linked to the license key and added to the security framework along with the license key . The application ID may for example be used to identify the license information stored within the authentication server . An example format for an application ID is illustrated at .

The application license key which is created and managed in the authentication server may be a universally unique identifier UUID that is linked to a unique application ID. The application ID may include a unique string identifying the secured application . The combination of the application ID and license key may thus be used to provide a unique mapping combination for the authentication server.

When the secured application is launched the security framework accesses the authentication server to validate the license key before access to the application is permitted. As example method for validating the license key is illustrated in . At step the security framework accesses the authentication server to validate a stored license key. The security framework may for example transmit a copy of the license key and application ID to the authentication server which compares the received key and application ID with stored license data to verify that the key is valid. For instance the application ID may be used by the authentication server to identify stored licensing data that is associated with the particular application and device and the received copy of the license key may then be compared to the stored licensing data to determine if the key is authentic and active. If the key is validated by the authentication server then the security framework allows access to the secured application as shown at step . Otherwise if the authentication server fails to validate the license key then access to the secured application is denied by the security framework step and an application interface may default to an update login view step . 

As illustrated in the authentication server may also be used to revoke an application license preventing further access to a secured application stored on a remote device. For instance the certification and licensing authority may send a revocation instruction to the authentication server indicating that a particular license has been revoked. Then when an attempt is made to access the application on a remote device the license validation procedure performed between the security framework and the authentication server will cause access to the application to be denied at step .

Also illustrated in is a simulator or developer license key that may be used to provide access to a secured application during a testing or development phase. For instance a simulator or developer license key and application ID may be generated for installation on a device to enable application access on the device during the development or testing of the application and security framework. The simulator or developer key may for example be removed after product development or testing is completed or may be disabled by providing a disable instruction to the authentication server .

This written description uses examples to disclose the invention including the best mode and also to enable a person skilled in the art to make and use the invention. The patentable scope of the invention may include other examples that occur to those skilled in the art.

It is noted that the systems and methods described herein may be implemented on various types of computer architectures. Additionally the methods and systems described herein may be implemented on many different types of processing devices by program code comprising program instructions that are executable by the device processing subsystem. The software program instructions may include source code object code machine code or any other stored data that is operable to cause a processing system to perform methods described herein. Other implementations may also be used however such as firmware or even appropriately designed hardware configured to carry out the methods and systems described herein.

The systems and methods data e.g. associations mappings etc. may be stored and implemented in one or more different types of computer implemented ways such as different types of storage devices and programming constructs e.g. data stores RAM ROM Flash memory flat files databases programming data structures programming variables IF THEN or similar type statement constructs etc. It is noted that data structures describe formats for use in organizing and storing data in databases programs memory or other computer readable media for use by a computer program.

The systems and methods may be provided on many different types of computer readable media including computer storage mechanisms e.g. CD ROM diskette RAM flash memory computer s hard drive etc. that contain instructions for use in execution by a processor to perform the methods operations and implement the systems described herein.

The computer components software modules functions data stores and data structures described herein may be connected directly or indirectly to each other in order to allow the flow of data needed for their operations. It is also noted that a module or processor includes but is not limited to a unit of code that performs a software operation and can be implemented for example as a subroutine unit of code or as a software function unit of code or as an object as in an object oriented paradigm or as an applet or in a computer script language or as another type of computer code. The software components and or functionality may be located on a single computer or distributed across multiple computers depending upon the situation at hand.

