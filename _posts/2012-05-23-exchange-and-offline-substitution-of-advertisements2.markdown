---

title: Exchange and offline substitution of advertisements
abstract: Various features are described for caching, tagging, and exchanging advertisements associated with network-accessible content. Advertisements may be retrieved and cached on mobile devices and other types of client devices prior to obtaining content containing references to advertisements. When content with an embedded reference to an advertisement is obtained, a previously retrieved advertisement can be loaded from the cache. Advertisements may also be tagged for later viewing. Users may revisit tagged advertisements at a future time, such as when wireless network connectivity is restored or when the user has more available time. Additional features facilitate bidding, by an advertisement server directly or indirectly associated with a client device, on advertising inventory associated with requested network content. In response to acceptance of the bid by a 3rd party advertising server, an advertisement from the associated advertisement server may be displayed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09661374&OS=09661374&RS=09661374
owner: AMAZON TECHNOLOGIES, INC.
number: 09661374
owner_city: Reno
owner_country: US
publication_date: 20120523
---
Computing devices often request content from other computing devices over a network. In a common application the computing device operated by a requesting user is referred to as the client and the computing device or system operated by the content provider that responds to the request is the server. A client and server may communicate over an intranet the Internet or any other communication network. Content providers often reserve areas of their content for advertisements. Advertisers can purchase the available space referred to as inventory to display their advertisements. Advertisers and content providers typically employ an advertisement server or an advertising network of servers to facilitate the sale of inventory and the distribution of advertisements.

Clients receive and process content e.g. web pages from content servers and then retrieve and process advertisements associated with the content from an advertisement server. The retrieval and processing of the advertisements may cause a user of the client to experience delays and performance degradation due to the retrieval of the advertisement in addition to or after the retrieval and initial processing of the requested content. Moreover when a user of a client is browsing content offline advertisements associated with the content may not be available resulting in unused inventory for content providers and lost advertising opportunities for advertisers.

The present disclosure is directed to caching tagging and exchanging advertisements associated with network accessible content including but not limited to web pages. Specifically aspects of the disclosure will be described with respect to the retrieval and caching of advertisements at a client device and or at an intermediary system between the client device and a content provider. In response to retrieving a content page with an embedded reference to an advertisement a previously retrieved advertisement can be loaded from the cache bypassing the need for a subsequent request for the referenced advertisement from a third party advertisement server. Impressions of cached advertisements that are subsequently displayed can be tracked and reported to facilitate accurate impression counts for advertisers that pay for each advertisement impression. In some embodiments the tracking and reporting of impressions can be implemented without changes to existing advertisement servers. Further aspects of the disclosure will be described with respect to tagging advertisements for later viewing. A user may tag advertisements when viewing content so that the user can view more information about the advertisement at a future time such as when network connectivity is restored or when the user has more available time. Still further aspects of the disclosure will be described with respect to bidding on advertising inventory associated with requested network content and substitution of advertisements in response to acceptance of the bid by a 3rd party advertising server.

Although aspects of the embodiments described in the disclosure will focus for the purpose of illustration on a client device or an intermediary system one skilled in the art will appreciate that the techniques disclosed herein may be applied to any number of hardware or software processes or applications. Further although various aspects of the disclosure will be described with regard to illustrative examples and embodiments one skilled in the art will appreciate that the disclosed embodiments and examples should not be construed as limiting. Various aspects of the disclosure will now be described with regard to certain examples and embodiments which are intended to illustrate but not limit the disclosure.

As illustrated in a network computing environment may include a client device an intermediary system a content server an advertisement server and an advertiser . Typically the advertisement server will serve the ads of many advertisers to many client devices for display on the pages or sites of many participating content providers . The intermediary system interact with many content providers advertisement servers and many client devices . In some embodiments there may be additional or fewer types of entities than are illustrated in . For example a content delivery network CDN service provider or domain name service DNS provider may be included or the intermediary system may be omitted. In addition each type of entity may include multiple independent or associated entities. For example there may be many thousands or millions of client devices and content providers as well as thousands or more of advertising servers advertisers and intermediary systems .

The entities may communicate with each other via a communication network . The network may be a publicly accessible network of linked networks possibly operated by various distinct parties such as the Internet. In other embodiments the network may include a private network personal area network local area network wide area network cable network satellite network cellular telephone network etc. or combination thereof each with access to and or from the Internet.

The intermediary system can be any computing system that serves as an intermediary between a client device and a content server . For example the intermediary system can be an intelligent proxy server an internet service provider ISP or some other device or group of devices that retrieve content on behalf of client devices . Illustratively the intermediary system of is configured to serve as a proxy between client devices and content providers . The intermediary system can include a number of components such as a content retrieval module an advertisement retrieval module an advertisement cache an advertisement server and a content rendering module such as a remote browser . In some embodiments the intermediary system may include additional or fewer components than illustrated in . For example the intermediary system may not include a remote browser or advertisement server . Additionally the intermediary system may be associated with various additional computing resources such as CDNs DNSs and the like.

The intermediary system may include multiple computing devices such as computer servers logically or physically grouped together. For example the intermediary system may include a number of data centers or point of presence POP locations each of which include thousands of individual computing devices that collectively perform the functions of the intermediary system . Each POP may be located close to a concentration of users or potential users. A single POP of the intermediary system provides computing services to any number of client devices . The components of the intermediary system including the content retrieval module advertisement retrieval module advertisement cache advertisement server and remote browser can each be implemented as hardware such as a server computing device or as a combination of hardware and software. In addition the components of the intermediary system can be combined on one server computing device or separated individually or into groups on several server computing devices. In some embodiments the intermediary system can include multiple instances of a single component etc. In some embodiments the functions of the intermediary system may be performed by one or more components of a client device such as hardware components or a combination of hardware and software components coupled to or integrated with the client device .

The client device can correspond to a wide variety of computing devices including personal computing devices laptop computing devices hand held computing devices terminal computing devices mobile devices e.g. mobile phones tablet computing devices etc. wireless devices electronic readers media players and various other electronic devices and appliances. The client device generally includes hardware and software components for establishing communications over the communication network and interacting with other network entities to send and receive content and other information. As shown in a client device can include a number of different components including a browser application an advertisement cache and an impression queue . The client device can include more or fewer components than those illustrated in . For example the client device can include a computer readable medium drive such as a hard drive which contains software program instructions that when loaded into a memory and executed by a processor perform the functions of a browser advertisement cache and impression queue . In some embodiments the client device may not include an advertisement cache or an impression queue .

The content server illustrated in can correspond to a logical association of one or more computing devices for hosting content and servicing requests for the hosted content over the network . For example the content server can include a web server component corresponding to one or more server computing devices for obtaining and processing requests for content such as content pages from the client device the intermediary system or other devices or service providers. In some embodiments one or more content providers may be a CDN service provider an application service provider etc.

The advertisement server illustrated in can also correspond to a logical association of one or more computing devices including web servers database servers and the like. The advertisement server hosts advertisements services requests for the hosted advertisements and records data about the advertisement requests. The advertisements may be images videos animations audio recordings applets documents or any type of file. The advertiser illustrated in can be any entity that purchases or otherwise requests inventory on which to display advertisements. For example the advertiser can correspond to a logical association of one or more computing devices for proving products or services to advertise.

In one illustrative embodiment a user of a client device can use a browser to request a network resource such as a content page. As described herein the request can be transmitted over the network to an intermediary system instead of directly to a content server . The request can be transmitted directly or otherwise routed to the content retrieval module of the intermediary system or some other component thereof. The content retrieval module can request and receive the requested content from the content server . The retrieved content can be processed by the remote browser prior to transmitting it to the client device . For example the remote browser can parse and render hypertext markup language HTML files and other resources associated with content pages and then return a processed version of the content page such as the document object model DOM to the requesting client device . Example systems for the retrieval and processing of content by an intermediary system are described in U.S. patent application Ser. No. 13 174 589 filed Jun. 30 2010 and entitled Remote Browsing Session Management the contents of which are hereby incorporated by reference for all they disclose.

While processing the content the remote browser may encounter embedded references to advertisements such as videos images executable scripts and other content objects. The browser can employ the advertisement retrieval module to retrieve the referenced advertisement from the advertisement server corresponding to the advertisement. The advertisement retrieval module may be a component of the remote browser or a separate component of the intermediary system . In some embodiments the remote browser may retrieve advertisements without aid of an advertisement retrieval module . In response to retrieving and processing the requested content and associated objects including advertisements the resulting processed content can be transmitted to the client device for display in the browser .

The retrieval of advertisements embedded in or otherwise associated with a content page can negatively affect the processing time and overall performance of a content page. In a typical example the embedded reference in a content page is an HTML object such as an iFrame that provides a window that may be used to load and display content from domains unrelated to the content server . The iFrame is used to load and display content from an advertisement server in a content page from a content server . The iFrame may not be fully processed and rendered until after the rest of the content page causing a performance loss that is perceived by the user as being solely or primarily attributable to advertising. To avoid such a performance loss advertisements may be cached before they are required. The advertisements may then be loaded from the cache instead of initiating separate requests for the advertisements from the advertising server during or after processing of the content page in which the advertisement is to be displayed.

In parallel with the content processing at the intermediary system or at a time prior to or subsequent to processing the requested content the advertisement retrieval module can retrieve advertisements which may be used to satisfy future embedded references to advertisements. For example a content server may typically be associated with a single or small number of advertisement servers . Therefore the advertisement retrieval module in anticipation of further requests for content from the same content server can retrieve from the associated advertisement servers a set of advertisements which are appropriate to display or are likely to be displayed on subsequently requested content. The advertisements can be stored in an advertisement cache associated with the intermediary system .

The client device may also cache advertisements. For example if the client device requests content directly from a content server instead of using an intermediary system then the client device may also prefetch advertisements from an advertisement server and store the advertisements in an advertisement cache . Alternatively the client device may receive the advertisements from the intermediary system for implementations in which the client device transmits content requests to the intermediary system .

Client devices may be associated with any number of connections to the network . For example a desktop computer may be capable of wired and WiFi connections to the network . Similarly a mobile phone or tablet may be capable of WiFi Bluetooth and 3G 4G connections. When advertisements are cached on the client device instead of or in addition to the intermediary system it may be desirable prefetch the advertisements when the client device has a specific type of connection to the network e.g. a WiFi connection in the case of mobile phones and not desirable when the client device has other types of connections to the network . Due to the potentially large amount of advertisement data that may be prefetched the client device may be configured to prefetch advertisements only when the client device has a high speed connection. Alternatively the client device may be configured to suspend the prefetching of advertisements when the connection is one in which the user is charged per unit of data received or if there is a cap on the number of units of data a user may receive. The client device or some component thereof may implement a learning process to determine how often the client device has an active network connection that may be used to prefetch advertisements. Thereafter when the client device establishes a connection over which advertisements may be prefetched the client device may prefetch enough advertisements to last until the next time the client device establishes the connection.

In another illustrative embodiment a user of a client device may be provided with a mechanism to bookmark save or otherwise tag advertisements of interest. For example if a user is browsing previously retrieved data offline the user may encounter an advertisement of interest. The user may tag the advertisement and then revisit the advertisement to access the associated network accessible site or content when a network connection is available. The tagging feature may also be available when the client device does have a network connection but the user wishes to tag advertisements of interest for later viewing anyway. Alternatively content pages of information associated with the advertisement may be cached along with the advertisement itself and a user may be able to click select or otherwise activate the advertisement and view the associated content page of information about the advertisement even in the absence of a network connection.

In a further illustrative embodiment advertisements from the advertisement cache may be displayed when a user of a client device is browsing content offline and a content page references an advertisement that is not available for offline viewing. Alternatively advertisements from the advertisement cache of the client device or the advertisement cache of the intermediary system may be substituted for advertisements referenced by a content page while a client device has an active network connection. For example the intermediary system may include an advertisement server . The intermediary system may submit a bid to the third party advertisement server in addition to a request for an advertisement referenced in a content page. If the third party advertisement server accepts the bid such as when the bid is for an amount greater than what the third party advertisement server will receive from an advertiser for serving an advertisement then the advertisement server of the intermediary system can substitute its own advertisement into the content page that is delivered to the requesting client device or another advertisement from one of the advertisement caches may be substituted.

At block a request for a content page is made. For example a user of a client device may initiate a request for a content page by launching a browser and entering a uniform resource locator URL such as http www.xyzwebsite.com . The browser or some other component of the client device may utilize DNS lookups to determine the internet protocol IP address of the content server corresponding to the URL. The browser can then contact the content server and request the content page. In the present example the content server responds by transmitting an HTML file corresponding to a default content page. illustrates a code sample defining an HTML file that may be returned in response to a request for a content page. The HTML file may contain a number of embedded references to network resources and other objects such as advertisements. Code sample is one example of code that may included in the HTML file defined by code sample . Code sample includes a reference to an advertisement hosted by the advertisement server at http ads.adnetwork.com as seen in portion . The browser can process the HTML file requesting and retrieving all objects corresponding to embedded references including an advertisement from the advertisement server at http ads.adnetwork.com .

At block the browser may determine that future requests for content from the same content server are likely to include references to advertisements hosted by the advertisement server at http ads.adnetwork.com . The determination may be made based solely on the HTML file retrieved in response to the request. Alternatively the determination may be based on other factors including historical requests for content from the content server or from content providers in general. For example the advertisement server at http ads.adnetwork.com may have a substantial overall market share among content providers hosting this type of content.

At block the browser can contact the advertisement server and prefetch a number of advertisements for storage in the advertisement cache in order to improve the performance of future requests. The advertisement server may provide a mechanism such as an application programming interface API for prefetching advertisements. By exposing a prefetch API the advertisement server can ensure that it does not prematurely record advertisement impressions in response to the prefetching operations. For example the browser or the intermediary system can contact the advertisement server and request a number of advertisements for caching. The request can include information about recent browse history of the client device such as the most recent page requested by the client device . The advertisement server can use such recent browse history to determine which advertisements it would likely serve to the client device next. The advertisement server can then transmit one or more advertisements to the client device or intermediary system for caching and future display. In some embodiments the browser may alternatively submit a number of requests for advertisements without utilizing a prefetch API.

At block the user submits a subsequent request for content. The browser retrieves the content page from the content server and processes it retrieving objects corresponding to embedded references within the content page. Advertisements however are not necessarily retrieved from their corresponding advertisement server .

At block content requests processed after advertisements have been cached may have advertisement references satisfied from the cache . Returning to the example above if the browser encounters an embedded reference to an advertisement hosted by http ads.adnetwork.com the browser may retrieve the advertisement from the cache rather than from the advertisement server . In some cases advertisements may be served based on any number of factors including the specific client device user or content page. The advertisements may be associated with properties reflective of such factors and the properties may be present within the embedded reference. In some embodiments only cached advertisements corresponding to such properties will be displayed if there are no advertisements in the cache that are associated with the specific properties of the embedded reference the advertisements will be retrieved from the advertisement server .

Advertisement servers may implement any of a number of different techniques for determining the number of times an advertisement has been displayed on a client device . Each display of an advertisement is known as an impression. In a typical case advertisers pay for each impression of their advertisement or for a number of impressions. Advertisers also commonly pay for each time their advertisement is clicked. Content providers receive payment for each impression or number of impressions or for each time a user clicks an advertisement displayed on content from the content provider. The impression count is maintained by the advertisement server and may also be maintained by each advertiser and or content server . One way that the advertisement server counts impressions is by tracking the number of times an advertisement is downloaded. Alternatively the advertisement servers may track impression counts by receiving a notification from the advertisement itself or from code associated with the advertisement in response to the display of the advertisement on a client device .

To preserve the accuracy of any impression counts maintained by the advertisement server the browser may submit data to the advertisement server indicating that the prefetched advertisements are not being displayed currently but rather are being cached for future display. Later when or after an advertisement is displayed the browser can notify the advertisement server of the impression at block . If the advertisement server tracks impression counts by receiving a notification from the advertisement upon display the browser can ensure that the notification is triggered at block when and only when the advertisement is displayed. In some embodiments data regarding advertisement impressions is collected by the intermediary system . The intermediary system may contact the advertisement server for example via an API in order to notify the advertisement server of impressions for advertisements retrieved by the intermediary system or associated client device . In some embodiments the advertisement server may contact the intermediary system to determine a correct impression count for advertisements retrieved by the intermediary system or associated client device .

The process can then return to block to retrieve additional advertisements for example if the cache has been or may soon be exhausted or to replace any advertisement displayed in block .

In some embodiments the process is implemented by an intermediary system . For example content retrieval module or remote browser may retrieve and process content from the content server in response to a request from a client device . The advertisement retrieval module can determine which advertisement server or servers host the advertisements for content from the content server . The advertisement retrieval module can then prefetch advertisements into the advertisement cache similar to the operation of the client device described above. One advantage of caching advertisements at the intermediary system is that potentially a much larger number of advertisements may be cached due to the larger storage capacity of the server computing devices and data centers which may form the intermediary system . In some embodiments the intermediary system can service requests from thousands or millions of client devices . In such cases a robust shared advertisement cache may be maintained for any or all of the known advertisement servers . The intermediary system may distribute a single cached advertisement to many different client devices .

The intermediary system can consider characteristics of the client device when selecting advertisements to deliver to the client device . The intermediary system may select advertisements based the connection speed or type currently available to the client device e.g. textual advertisements may be preferred over graphical advertisements when connection speed is slow or the form factor or type of the client device e.g. the intermediary system could refrain from delivering to a mobile phone advertisements that are deemed poorly suited for small form factor devices . The intermediary system may also consider user characteristics such as a user s browsing history across many sites and which types of advertisements if any the user has selected.

The process begins at block . The process may be a service which begins execution when the client device powers on or it may be launched on a schedule or on demand by the user.

At block the process monitors the connection activity and status of the client device . For example the process may record data regarding how often the client device establishes a connection to a network the bandwidth available for each network connection the length of time the client device is connected the amount of data that is transferred to and from the client device and the like.

At block the process can utilize the data recorded during the monitoring described with respect to block in order to determine a connection schedule. In one example the process may recognize a pattern wherein the client device has a WiFi connection available overnight and relatively little activity occurs during that time. During daytime hours the client device may be connected primarily to mobile networks such as 3G 4G. The client device may utilize the mobile network connections extensively requesting many content pages. In such a case the process may determine that the client device should replenish the advertisement cache at night when the client device is connected to a high speed low cost WiFi network and the client device is not in use. The operations of blocks and may occur continuously and in parallel throughout the lifetime of the process . Alternatively the operations of block may occur only as scheduled or on demand.

Returning to block in addition to monitoring the connection activity of the client device in an effort to gather information for the operations of block the process also monitors the connection activity in order to initiate the retrieval of advertisements for the advertisement cache . At decision block the process detects whether the client device has established the connection that it uses to retrieve advertisements for the advertisement cache as determined at block . In addition the process determines whether the scheduled time for cache replenishment has arrived. If the proper connection has been established and the current time satisfies the schedule as determined in block the process proceeds to block . At block the process initiates retrieval of advertisements from one or more advertisement servers . The advertisements are stored in the advertisement cache . Upon completion of the advertisement caching operation the process may terminate at block or proceed to monitor the connection activity of the client device at block .

The process may be executed when the client device is offline such as when a user is browsing previously retrieved content. In such a case if the user encounters an advertisement and wishes to receive more information the user may tag the advertisement. The user may then return to the tagged advertisement at a later time such as when network connectivity has been restored. Alternatively an information page may have been cached and the user may view the information page associated with the advertisement even if the client device is offline. The process may also be executed when the client device is online. For example if a user is browsing content and sees an advertisement of interest the user may tag the advertisement so that the user can continue browsing online. At a later time the user may return to the tagged advertisement to get more information.

The process begins at block . At block a content page with an advertisement may be displayed. If the client device has an active network connection the content page and advertisement may have been retrieved directly from a content server and advertisement server without use of a local cache. Alternatively the advertisement may have been previously cached and is loaded from the cache for display. If the client device offline then the advertisement is a cached advertisement and an impression notification for the advertisement is queued at block . The client device may have an impression queue for queuing impression notifications associated with advertisements which have been cached and viewed offline. For example the 1 pixel image reference associated with the advertisement described above may be placed in the impression queue . In response to network connectivity being restored the impression notification can be executed such as by requesting the 1 pixel image from the advertisement server or otherwise transmitting the image reference to the advertising server .

At decision block the user may tag an advertisement displayed on the content page. illustrates an example browser interface displaying a content page with an advertisement . A user may position the cursor over the advertisement and activate a command menu such as by tapping on the advertisement . If the client device does not have an active network connection the command menu may display to give the user the option to tag the advertisement . In some embodiments the command menu can be displayed each time the user taps on the advertisement even if the client device does have an active network connection. In some embodiments the user may use a mouse click keyboard command voice command touch screen gesture or some other input to activate the command menu . The command menu may include various options to perform on the advertisement or the content page. One option may be to tag the advertisement displayed at the location of the cursor . In some embodiments no command menu is displayed. Rather a single input operation such as a mouse click or touch screen gesture initiates tagging of the advertisement.

Upon activation of the tag option the advertisement displayed at the location of the cursor can be tagged at block . Tagging an advertisement may cause the browser create or modify a file that indicates the target address to which the browser would navigate if the advertisement were activated. For example a temporary bookmark may be created in a storage area on the client device such as a storage area or file maintained by the browser .

At decision block the user may select click or otherwise activate an advertisement for example to navigate to the target content page associated with the advertisement. At block the target page is displayed on the client device . If the client device is online the target page may be retrieved from the advertisement server a content server or the advertiser . Alternatively the target page may have been cached with the advertisement and therefore the target page may be retrieved from the cache . If the client device is offline the target page will be retrieved from the cache . In some cases the target page may also be associated with an impression notification. In such cases the notification can be queued in the impression queue for submission when network connectivity is restored. In some embodiments caching of target pages may be implemented predicatively. For example a component of the browser can track how often a user taps clicks or otherwise selects advertisements. If the number of percentage of times a user does so exceeds a threshold target pages can be cached otherwise caching of target pages may be minimized or not implemented.

At decision block network connectivity may be restored if the client device was operating offline. In response any impression notifications in the impression queue may be submitted to the associated advertisement server . Additionally the advertisement tags may be submitted. For example the intermediary system may store advertisement tags for a user of multiple client devices . By storing the advertisement tags at the intermediary system the user may be able to access them from any client device regardless of which client device they were initially created on. In another example the advertisement tags may be submitted to the intermediary system a content server or some other entity which compiles advertisement tags from a number of different client devices . A content server may publish a list of which advertisements have generated the most interest among users based in part on the submitted tagging operations.

In some embodiments the process may determine whether a specific type of network connection has been established prior to transmitting impression notifications queued in the impression queue as described above with respect to . In some embodiments the process may replenish the cache in response to detecting an active network connection or a specific type of network connection as also described above with respect to . For example some of the advertisements and landing pages displayed while the client device was offline may only be displayed once. As a result the available stock in the cache has been reduced and the browser or some other component of the client may replenish the cache so that the benefits of cached advertisements may continue to be available.

The process begins at block . At block content is processed and displayed by the browser . The content may be a newly requested content page if the client device has an active network connection or a previously retrieved page if a user is browsing offline. As described above the content may be defined by an HTML document that contains one or more embedded references to advertisements. illustrates an example of such an HTML page.

At decision block the process determines whether any referenced advertisement is not available. If an advertisement is not available the process proceeds to block . Otherwise the process ends and the browser can display the advertisements.

An advertisement may not be available when the browser has requested an advertisement from the advertisement server and has not received a response. In some cases an advertisement may not be available when a user is browsing offline even though advertisement originally referenced by the HTML file defining the content page was retrieved and stored for offline viewing. Code sample of illustrates a programming script on lines 4 6 that may be executed by the browser when the HTML file is processed. The JavaScript code on line 5 assigns a large random number to the random cashbust number variable. This number may be appended onto a URL that is used to request an advertisement. Code sample illustrates on line 51 and specifically at portion how such a URL may look after the random number stored in the random cashbust number variable has been appended onto a URL. Note that the portion displaying the large random number may not typically be hard coded into the HTML file but rather is appended during execution. In some cases all or substantially all of the code to retrieve an advertisement is generated dynamically and does not literally appear in a textual HTML file. The code samples and are merely illustrative of how such a URL would change in practice from one execution to another.

Code sample illustrates on line 51 and specifically at portion how the same URL might be formed during a subsequent execution of the code within the HTML file. Note that the large random number appended to the end of the URL highlighted in portion is different than the large random number appended to the end of the URL in code sample at portion . Otherwise the URL is the same. Advertisement servers may use such techniques to prevent display of the same advertisement each time the content page is viewed. For example when a browser or some other component of the client device retrieves the HTML file that defines a content page and stores it for future offline display the HTML file may be processed and advertisements corresponding to embedded references may be retrieved and stored as well. When a user subsequently views the page the HTML file is loaded from local storage such as a cache and processed. During this second processing of the HTML file the JavaScript at line 5 of code sample is executed again and a different random number is assigned to the variable and ultimately appended to the URL associated with the advertisement. Therefore it will appear to the browser that the advertisement associated with the URL is not present on the client device .

At block the browser can load an advertisement from the local cache and inert it into the content page at the location where the unavailable advertisement would be displayed. Typically the browser will select an advertisement of the same type and size as the unavailable advertisements. For example if the unavailable advertisement is a 468 pixel by 60 pixel banner advertisement then an advertisement of those same or similar characteristics if available can be selected from the cache and displayed.

At block the impression notification for the advertisement displayed in block is queued if a network connection is not available at the time the advertisement is displayed. As described above a command or notification may be placed in an impression queue on the client device . The process may then return to block if a subsequent content page has been requested for viewing. Alternatively if there are several unavailable advertisements associated with the current content page the operations of blocks and may be repeated as many times as necessary to fill all available advertising inventory associated with the content page.

At decision block the process determines whether or is notified that an active network connection has been established. If a connection is detected the process proceeds to block where the impression notifications queued in the impression queue are transmitted to the appropriate entities. In some embodiments the process may determine whether a specific type of network connection has been established prior to transmitting notification impressions as described above with respect to . In some embodiments the process may replenish the cache in response to detecting an active network connection or a specific type of network connection as also described above with respect to . For example some of the advertisements displayed while the client device was offline may only be displayed once. As a result the available stock in the cache has been reduced and the browser or some other component of the client may replenish the cache so that the benefits of cached advertisements may continue to be available.

The process begins at block . At block the client device retrieves and processes content from a content server . As described in detail above the browser of the client device may process the content and retrieve objects such as images video and advertisements associated with embedded references within the content.

At block the browser can determine which advertisement servers are associated with any advertisements referenced in the content page. For example the browser may use the techniques described above with respect to to analyze an HTML file that defines the content page and extract a URL or other identifier associated with an advertisement.

At block the browser or some component thereof can calculate a bid to submit to the third party advertisement server . As described above the client device may be associated with an intermediary system . For example the client device may receive services from the intermediary system such as internet service proxy services and the like. The intermediary system may also be permitted to cache advertisements from its own advertisement server into the advertisement cache of the client device as part of those services. When a browser requests a content page the browser may then calculate the value of inventory associated with the content page. The value may be determined from the perspective of the advertisement server of the intermediary system . For example the advertisement server may be associated with any number of advertisers and may provide targeted delivery of advertisements from the advertisers to client devices associated with the intermediary system . The advertisement server may be able to provide such targeted advertisement delivery due to its relationship with the client devices . The advertisement server may have access to various information about the client devices or users of the client devices and the advertisement server may use that information to determine more effective placement for advertisements. Such targeted placement of advertisements may be worth an additional expense from the point of view of the advertisers .

In one example the advertisement server may be able to sell inventory on the content page to an advertiser for 0.15. The bid for the inventory that the browser will submit to the third party advertisement server may then be calculated to be 0.12 providing the advertisement server a 0.03 profit. The amount of the bid need not be based entirely on profit. In practice the bid may be based on any one reason or combination of reasons. The browser can append a parameter onto the end of the query string of the URL that is used to request the advertisement from the advertisement server . The parameter can be a predefined parameter that the advertisement server is configured to recognize and process. If such a bid is submitted to advertisement server which does not recognize the bid parameter the parameter may be ignored and the advertisement request process as normal. In some embodiments alternative methods of submitting a bid to a third party advertisement server may be used. For example an API may be used to communicate bids and the acceptance or reject of those bids.

At decision block the process determines whether the third party advertisement server has accepted the bid. In some embodiments acceptance of the bid is indicated in the response from the third party advertisement server such as by transmitting a notification. For example if the third party advertisement server determines that it would be able to sell the inventory on the content page to an advertiser for 0.10 the bid of 0.12 from the intermediary system advertisement server via the browser represents an additional revenue of 0.02 for the third party advertisement server . In such a case the third party advertisement server can accept the bid and send a notification to the browser . The third party advertisement server need not have any particular reason to accept the bid. In practice the bid may be accepted for any reason not limited to bid amounts and profit. The process can then proceed to block where the browser inserts an advertisement from the advertisement cache at the location of the content page where the advertisement from the third party advertisement server would have been displayed. As described above with respect to the advertisement to display on the content page may be selected based on a similarity in size and type with the advertisement that it is to replace.

Returning to decision block the third party advertisement server may reject the bid. For example if the third party advertisement server determines or predicts that it can sell the inventory on the content page to an advertiser for 0.13 the bid may be rejected. The third party advertisement server need not have any particular reason to reject the bid. In practice the bid may be rejected for any reason not limited to bid amounts and profit. If the bid is rejected the response from the third party advertisement server may include the advertisement that is to be displayed in the content page. In such cases the browser displays the received advertisement in its proper location in the content page. In some embodiments the third party advertisement server may submit a counter proposal to the browser and a negotiation may result.

As described above the process may alternatively be implemented by an intermediary system . For example the content retrieval module or some other component of the intermediary system may receive content requests from the client device and then retrieve the requested content from the content server on behalf of the client device . The remote browser may then be employed to process the content so that it may be transmitted to the client device in a pre processed or pre rendered state. Alternatively the content may be processed only to identify embedded references to other objects such as advertisements that may then be retrieved on behalf of the client device without requiring a separate request from the client device as might be required in other implementations.

In response to identifying a reference to an advertisement associated with the content the advertisement server or some other component of the intermediary system can calculate a bid for the inventory corresponding to the advertisement. The bid may be submitted to the third party advertisement server as described above such as by appending a parameter to a URL query string that is sent to the third party advertisement server or communicating with the third party advertisement server via an API. Subsequently or in parallel with the bid generation and submission process an advertisement may be retrieved from the advertisement server associated with the intermediary system so that it may be ready for inclusion in the content page if the bid is accepted by the third party advertisement server .

In some embodiments the intermediary system may request an advertisement from the third party advertisement server and also request that the third party advertisement server offer to sell the right to display an advertisement in the inventory unit. The request can be made by appending a parameter to a query string communicating via an API etc. The third party advertisement server can be configured to calculate or otherwise determine a price for the advertisement inventory unit and return the price to the intermediary system along with the advertisement. The intermediary system while waiting for a response from the third party advertisement server can calculate or otherwise determine an amount that the intermediary system would pay for the advertising inventory unit. If the intermediary system determines that it can receive a larger amount than the third party advertisement server proposes the intermediary system can disregard the advertisement from the third party advertisement server substitute a different and potentially more profitable advertisement and record information about the transaction so that payments can be made.

For example the intermediary system may calculate a price in similar fashion to the bid calculation described above or the intermediary system may contact any number of other advertisement servers to determine an amount that the other advertisement servers would pay for the advertisement inventory unit. Various factors may be considered in the determination of a price by any of the entities including the recent browse history of the client device and the current content page on which the advertisement will be displayed. If the client device has recently browsed content pages regarding a certain product such as a camera then the intermediary system can contact various advertisement servers to determine an amount that an advertisement server would pay to serve a camera advertisement to a client device with such a recent browse history. This targeted advertising may be more valuable to advertisers and the intermediary server may be able to obtain an amount that is greater than that which the original third party advertisement server is requesting in order to sell the advertisement inventory unit.

In response to receiving a notification that the bid has been accepted by the third party advertisement server or otherwise determining to purchase the inventory unit from the third party advertisement server the intermediary system or some component thereof may insert a substitute advertisement such as an advertisement retrieved from the advertisement server or some other advertisement server at the proper location within the content. If the bid was rejected by the third party advertisement server then the advertisement received from the advertisement server may be inserted at the proper location within the content. After any final processing is performed by the remote browser the content may then be transmitted to the client device . The browser of the client device may then display the content without any knowledge that the advertising inventory was the subject of a bidding process in between the request for the content and receipt of content from the intermediary system .

Depending on the embodiment certain acts events or functions of any of the processes or algorithms described herein can be performed in a different sequence can be added merged or left out all together e.g. not all described operations or events are necessary for the practice of the algorithm . Moreover in certain embodiments operations or events can be performed concurrently e.g. through multi threaded processing interrupt processing or multiple processors or processor cores or on other parallel architectures rather than sequentially.

The various illustrative logical blocks modules routines and algorithm steps described in connection with the embodiments disclosed herein can be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules and steps have been described above generally in terms of their functionality. Whether such functionality is implemented in application specific hardware or in software executed by hardware depends upon the particular application and design constraints imposed on the overall system. The described functionality can be implemented in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the disclosure.

The steps of a method process routine or algorithm described in connection with the embodiments disclosed herein can be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module can reside in RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of a non transitory computer readable storage medium. An exemplary storage medium can be coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium can be integral to the processor. The processor and the storage medium can reside in an ASIC. The ASIC can reside in a user terminal. In the alternative the processor and the storage medium can reside as discrete components in a user terminal.

Conditional language used herein such as among others can could might may e.g. and the like unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without author input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment. The terms comprising including having and the like are synonymous and are used inclusively in an open ended fashion and do not exclude additional elements features acts operations and so forth. Also the term or is used in its inclusive sense and not in its exclusive sense so that when used for example to connect a list of elements the term or means one some or all of the elements in the list.

Conjunctive language such as the phrase at least one of X Y and Z unless specifically stated otherwise is to be understood with the context as used in general to convey that an item term etc. may be either X Y or Z or a combination thereof. Thus such conjunctive language is not generally intended to imply that certain embodiments require at least one of X at least one of Y and at least one of Z to each be present.

While the above detailed description has shown described and pointed out novel features as applied to various embodiments it can be understood that various omissions substitutions and changes in the form and details of the devices or algorithms illustrated can be made without departing from the spirit of the disclosure. As can be recognized certain embodiments of the inventions described herein can be embodied within a form that does not provide all of the features and benefits set forth herein as some features can be used or practiced separately from others. The scope of certain inventions disclosed herein is indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.

