---

title: Print service provider operations management
abstract: A system for print service provider (PSP) operations management includes a provenance analytics engine. The provenance analytics engine accesses fresh meta-data associated with fresh events in a PSP operation performed using a printing system operated by a PSP. The provenance analytics engine further accesses stored meta-data associated with past events related to past PSP operations. Still further, the provenance analytics engine accesses a component behavioral model (CBM) to produce results associated with events in a PSP operation. The provenance analytics engine analyzes the event-related meta-data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09047025&OS=09047025&RS=09047025
owner: Hewlett-Packard Development Company, L.P.
number: 09047025
owner_city: Houston
owner_country: US
publication_date: 20120420
---
Print service providers PSPs are business operations for printing. PSPs fulfill a demand for print services by printing everything from photographs and brochures to course materials periodicals and books. PSPs operations may be housed in a single location or may be distributed over multiple location dispersed production sites. PSPs may be separate business entities or may be organized into a federation of multiple PSPs.

The present disclosure relates generally to print service provider PSP operations management. Examples of the method computer readable medium and system disclosed herein are used to provide provenance analytics to assist and in some cases automate management of PSP operations.

By adopting information technology IT in operations management PSPs may achieve a high level of service quality agility and productivity. PSP operations management may include control of data communication storage and processing. In some PSP operations the data that is communicated stored and processed may include content data for example data representing print images as well as meta data that describe the PSP s business engagement and operations management for example a due date for a particular order.

Digital content data may represent digital content including e.g. an image to be embedded in a poster to be printed. Intermediate content data is digital content data that is produced as part of a process but is not final product content. In some instances intermediate content data can be very large. For example image files output by a raster imaging process may be about 100 MB or larger. Storing these intermediate content data may use a relatively large amount of digital storage space. The disclosed method computer readable medium and system do not store intermediate content data. In some instances however intermediate content data may be requested for investigating a past exception event or a failure mode. A provenance analytics engine disclosed herein takes advantage of computing power from the cloud and uses a behavioral model s device functional interface to re produce the intermediate content data when the intermediate content data are requested. As used herein the cloud means public cloud computing services computing servers that a PSP may choose to own in house private cloud or a hybrid cloud combination of both private and public cloud resources.

Digital meta data may document a PSP s business engagement and operations management. In some instances digital meta data may include information that would classically be recorded using a general ledger in a paper form.

Some PSP managers rely on a paper trail for the information the managers use to manage operations. Paper forms may be used to document initiation and execution of an order including change steps between the initiation and execution. For example paper documents may be used to record an estimated quote a purchase order initial production planning intermediate proofing hardcopies of proofs at different stages and changes issued by a client. Paper may further be used to document proof versions versions of production plans changes made by workers process logs shipping instructions shipping labels shipping proof and any other information associated with a job. Operations management may require review and analysis of the paper records to understand for example what may have led to printed material that does not meet quality objectives.

As used herein provenance analytics is learning from historical information and relationships among pieces of the information. After reviewing a stack of information associated with a job a manager may for example learn that a page was skipped in a book because 2 pages adhered to each other when original hardcopy pages provided by a customer were scanned. A manager with a good memory may recall that there were other instances of pages sticking together and may note that the issue seems to be occurring more frequently with jobs from a particular client. As such relationships between pieces of information e.g. dates quality assessments and client names could lead to a solution to a problem. The classical provenance analysis described above is labor intensive and may depend on human perseverance experience and judgment.

Another form of PSP operations management may record information electronically on digital memory media rather than store data on a paper form. A particular type of PSP operations management system with digital data is referred to herein as an annotation based provenance system. In an example of an annotation based provenance system meta data are continuously added to the content data job to document the history lineage of content data flowing through the printing operations. The quantity of meta data annotations attached to the content data increases and is not normally over written or deleted. As such a complex workflow may generate content data with a large meta data header attached to the content data. For example a large complex print job with high resolution frequent meta data annotation intermediate data stored as meta data annotation and other print production related factors may have a meta data header larger than about a gigabit. A job with a large header may incur significant overhead for processing power storage and network bandwidth demand.

An example PSP associated with the disclosed method computer readable medium and system is an instance of a cyber physical system. A cyber physical system is implemented as a network of interacting elements with physical input and output rather than standalone devices. The example PSP may be at least partially characterized by a large quantity of data that documents the PSP operations. It should be understood that the value of the data may decay with time.

Referring now to an example of a system disclosed herein includes a provenance analytics engine including an Access Fresh Meta Data module to access fresh meta data associated with fresh events in a PSP operation performed using a printing system operated by a PSP. The provenance analytics engine further includes an Access Stored Meta Data module to access stored meta data associated with past events related to past PSP operations. The provenance analytics engine also includes an Access Component Behavioral Model module to access a component behavioral model CBM to produce results associated with events in a PSP operation. The provenance analytics engine includes an Analysis Module to analyze the event related meta data.

Referring now to an example of system disclosed herein includes a provenance analytics engine to communicate with resources within a PSP to access fresh PSP operations event related meta data . The provenance analytics engine further communicates with a system event log database for accessing stored PSP operations event related meta data . For example the provenance analytics engine may pull the fresh PSP operations event related meta data from the message bus then store the fresh PSP operations event related meta data in the system event log database . It is to be understood that the system event log database may store all of the stored event related meta data on behalf of the provenance analytics engine . The provenance analytics engine also communicates with a component behavioral model CBM library database to access a CBM . The provenance analytics engine analyzes the event related meta data to assist with and in some cases automate management of PSP operations.

The provenance analytics engine may assist with and automate management of PSP operations for example by generating a process sequencing graph performing replay and forecasting and administering a provenance analytics service and related databases. Generally meta data from the provenance analytics engine is shown at reference numeral in . The provenance analytics engine may produce and communicate instructions to the resources . The instructions may be communicated in the form of meta data . For example the provenance analytics engine may include modules that provide real time monitoring and alerting of the PSP operations and communicate with the PSP operations in the form of meta data .

From an architecture point of view the resources and the provenance analytics engine are both producers and consumers of meta data . The resources and the provenance analytics engine publish meta data to the message bus . The resources and the provenance analytics engine also receive meta data that the resources and the provenance analytics engine subscribe to.

In an example the provenance analytics engine may compose a hierarchical process sequencing graph see responsive to a user selectable granularity received from a graphical user interface see wherein the hierarchical process sequencing graph represents a system behavioral model SBM built from component behavioral models CBMs see selected from a CBM library database and organized in a hierarchical architecture.

It is to be understood that the user may select a plurality of granularities that may be individually applied to different portions of the SBM. For example a pre press portion of the SBM may have a low level of granularity and a finishing portion of the SBM may have a high level of granularity to expose relatively complicated activity.

It is to be further understood that the selectable granularity may be selected automatically. For example a query may be analyzed to determine a granularity responsive to the query to produce the process sequencing graph at a level of detail that is useful for assisting in PSP operations management.

The provenance analytics engine represents generally any combination of hardware and or programming configured to cause execution of the communication of event related meta data and provenance analysis in a cloud computing system see .

Referring back to as used herein fresh PSP operations event related meta data is substantially live or real time event related meta data produced by a resource . For example fresh event related meta data may have been published by a resource on for example a message bus and an insufficient amount of time may have passed for the fresh event related meta data to be stored in the system event log database . Fresh event related meta data do not always become stored event related meta data . For example fresh meta data that is corrupt or duplicated may be discarded rather than stored.

In an example the provenance analytics engine is a receiver of the fresh PSP operations event related meta data . In the example the fresh PSP operations event related meta data is pushed to the provenance analytics engine within about 3 seconds after the fresh meta data is published. In another example the provenance analytics engine may periodically pull fresh meta data from the message bus according to a selected time interval e.g. about every minute. In the examples fresh PSP operations event related meta data and stored PSP event related meta data are mutually exclusive at a particular time.

As used herein a resource is an asset within the PSP . Some examples of resources are processes software machines workers etc. that communicate with a message bus through meta data. The meta data documents operational information about a respective resource interacting with content data. Examples of meta data may include setting parameters performances descriptions and exceptions. Resources publish event related meta data to the message bus substantially simultaneously with an event occurrence.

In an example a book cover may be cut incorrectly at a finishing station. A quality control operator may digitally photograph the incorrectly cut cover and save the digital photo as a JPEG image. The JPEG file may be submitted to the provenance analytics engine as part of meta data that documents exceptions and setting parameters. The provenance analytics engine can reproduce the cover cut error using the setting parameters stored as meta data and verified with the JPEG image for the reproduction. Such verification may be performed by a human operator or by an imaging analysis engine.

Referring now to together as used herein an event may be any activity by a resource . An event may include for example the reception or transmission of data setting of a parameter replenishment of consumable supplies powering on clocking in reporting a status receiving an alert and reporting an exception. An event record is a digital record that includes information relating to an event. shows examples of event records which will be discussed further below. Event related meta data may be included in an event record . The term event related meta data as used herein generically includes fresh event related meta data and stored event related meta data . Event related meta data may further be related to a virtual event that happens in computer simulation or a future event that may be forecasted. Some examples of event related meta data are a time stamp corresponding to a time of occurrence of the event a sender and a recipient of the event and an event category. For example an event record may include information that at 10 46 22 AM on Jul. 12 2012 an overtemperature was reported by printer number 7.

Referring now to the analysis performed by the provenance analytics engine may include comparing an event to an alert database to determine an alert level for the event and causing an alert to be communicated in the form of meta data in response to the alert level . It is to be understood that the event may be a past event a fresh event or a future event . The alert level may be chosen from a plurality of alert classifications including a warning level to be issued to an operations manager and an interruption level to bypass the operations manager and to automatically control a designated resource. For example a printer may report an ink supply low event which would be determined to be at a warning alert level. In the example an alert may be sent in the form of meta data to a manager s wireless communication device informing the manager of the situation and allowing the manager to take appropriate action. Appropriate action may be for example to check to make sure that the ink supply is scheduled to be replenished. In another example a printer may report a temperature in an event. In the example the alert database may have a rule that classifies the reported temperature as a severe over temperature event corresponding to an interrupt alert level. The Compare box applies the rule and determines that the reported temperature is a severe over temperature. A signal may be sent in the form of meta data directly to the printer to power the printer down. The manager may be informed of the interrupt level alert but the manager is not required to intervene to shut the printer down.

The analysis performed by the provenance analytics engine may further include forecasting over a selected time window. An example of a selected time window is about 15 minutes into the future. The forecasting may include simulating the PSP operations to generate a future event. Such simulation is discussed further below. The future event may be compared to the alert database to determine an alert level for the future event . As described above an alert may be communicated in response to the alert level determined for the future event .

Referring to the disclosed provenance analytics engine may analyze past events and report an analysis of past events to an operations manager. The provenance analytics engine may include a replay engine to reconstruct a historical PSP operations situation since intermediate and final content data is not stored. The replay engine represents generally any combination of hardware and or programming configured to cause execution of the reconstruction of a historical PSP operations situation. Whether the replay engine uses simulation or event log querying depends on an age of the historical PSP operations situation. As shown at the replay engine will query the system event log database and reproduce a PSP operations situation in existence at a predetermined historical time based on stored event related meta data when an interval between the predetermined historical time and a current time is less than a predetermined threshold of recency . If the interval between the predetermined historical time and the current time is greater than or equal to the predetermined threshold of recency the replay engine will simulate the PSP operations situation.

As used herein a PSP operations situation means a description of a state of PSP operations at a time. A level of granularity or detail included in the PSP operations situation may be selected by a user via a granularity slider described in more detail below. The PSP operations situation may include event related meta data and content data however content data is not always included. For example a PSP operations situation may be described by a status of all of the resources in a workflow as well as intermediate content data generated by the resources . The example PSP operations situation may include status indicators for resources like a Raster Image Processor RIP Press and Finisher indicating that all sensed parameters are within their normal ranges except the Press may indicate Yellow Ink Level Low . Image data produced by simulating the RIP may show that the particular job does not need yellow ink. It may also be possible that event related meta data may indicate that a black and white image was selected. In such a case it would not be necessary to include content data produced by the RIP.

It is to be understood that stored event related meta data is deleted at an age based on the predetermined threshold of recency . For example the predetermined threshold of recency may be one week thirty days sixty days or any age. A longer age for the predetermined threshold of recency would generally require greater capacity in the system event log database and may cause queries against the system event log database to execute more slowly. Further PSP operations event related meta data may be ephemeral. As such a retention value corresponding to the stored event related meta data may decay with time. It is to be understood that the predetermined threshold of recency is not necessarily exactly the same as the age at which the stored event related meta data is deleted from the system event log database . A buffer of some predetermined duration may be added to the predetermined threshold of recency to avoid instability in operation of the replay engine for events having an age near the predetermined threshold of recency .

As depicted in event records may be deleted from the event log database at an obsolescence age based on the predetermined threshold of recency . For example the predetermined threshold of recency may be one week thirty days sixty days or any age. A longer obsolescence age would generally require greater capacity in the event log database and may cause queries against the event log database to execute more slowly. It is to be understood that the predetermined threshold of recency is not necessarily exactly the same as the obsolescence age at which the event record is deleted from the event log database . A predetermined interval may be added to the predetermined threshold of recency to determine the obsolescence age . It is to be further understood that the predetermined threshold of recency may be a function of characteristics of the event record . For example an event record of a particular type of event or an event record related to a particular type of printed product may be retained longer than other event records by having a longer predetermined threshold of recency .

The PSP operations situation may be communicated to an Analytics Report Generator engine see for reporting to an operations manager. The Analytics Report Generator engine represents generally any combination of hardware and or programming configured to cause execution of the generation and communication of a report to an operations manager.

As stated above intermediate content data is not stored in the disclosed provenance analytics engine . In situations where intermediate results or intermediate content data are reported the replay engine causes the intermediate content data to be reproduced rather than recalling the intermediate data from storage. The intermediate results may be reproduced through a device functional interface of a CBM shown in .

Still referring to a CBM may include a resource name a resource type input ports output ports an event log a stateless transfer function stateful parameters and a device functional interface arranged as shown in .

A resource name is a name of the resource associated with the PSP . An example of a resource name is Indigo Press 02 . The resource name serves as a primary key for the CBM .

A resource type corresponds to a class associated with the respective resource e.g. Indigo Press . Indigo is class of digital offset printing presses manufactured by Hewlett Packard.

Input Ports and Output Ports define data types for inputs and outputs. It is to be understood that the disclosed provenance analytics engine may serve a loosely coupled distributed system. The input ports are not strongly typed in the disclosed CBM. A type converter may be embedded in each input port to allow input information to be converted or extracted from the input data type thereby avoiding data type mismatch errors. For example a Raster Imaging Process RIP CBM may require a PDF document as input to carry out a transformation. An input port of the RIP CBM may allow any form of input as long as the input contains the PDF document or a pointer to retrieve the PDF document. For example an XML document may include the PDF document as an element. After receiving the XML document through the RIP CBM input port the RIP CBM may automatically extract the PDF document and carry out the transformation. The event log shown in is an event log database that records all events that are relevant to a respective resource . depicts three examples of event records that may be stored in an event log . Referring back to each event record in the event log includes at least a timestamp sender recipient name event category and event content . Some examples of events include input content data arrival setting parameters output content data departure control sensing meta data from or to the resource and alert message from the Provenance Analytics Engine about this resource .

Referring back to in the present disclosure a dynamic behavior of the resource may be described by a stateless transfer function together with stateful parameters . The stateless transfer function describes an intrinsic process logic of the resource . Stateful parameters describe information that is specific to the resource and or local settings and or external excitation. Stateful parameters are resource specific and may vary from time to time when conditions change. As such stateful parameters define a particular state for the resource . For example an electric motor may require more electrical power to generate a certain amount of torque as a number of operating hours for the motor increases. The torque output of the electric motor may further depend on an armature temperature. Stateful parameters for the electric motor in the example may include a number of hours of operation and an armature temperature. Stateful parameters may be corrected in the event log through model order reduction techniques and machine learning techniques. As such the dynamic behavior of the resource will match with the events recorded in the event log database .

The device functional interface routes input content data to the physical resource drives the resource to produce all intermediate and final results and retrieves the intermediate and final results back to the CBM . It is to be understood that the device functional interface does not route input content data to the model of the resource . The device functional interface may be used when the intermediate results content data may aid in a causality investigation.

As depicted in a provenance analytics service may be implemented as a cloud service using the provenance analytics engine as the service back end. As stated previously herein the cloud deployment may be a public cloud a private cloud or a hybrid cloud. A portion of the provenance analytics engine may be deployed in a public cloud and another portion may be deployed in a private cloud. Examples of a cloud platform may be Eucalyptus an open source cloud platform Open Stack an open source cloud platform and Amazon Web Service AWS . AWS is an example of a public cloud platform.

The provenance analytics engine may run on the cloud to provide the provenance analytics service. shows an example of an architecture for the provenance analytics engine implemented on a cloud. A User Identity Assess Management engine is depicted at reference numeral . To support a multi tenant environment the provenance analytics engine performs identity management to authenticate users and restrict data access on digital assets. The digital assets may include the system event log database . Another digital asset may be the CBM Library database . Each print factory uploads CBMs that characterize resources on the respective print factory floor. It is to be understood that the CBM library database may be preloaded with CBMs that may be useable without modification to represent the resources on the respective print factory floor. It is to be further understood that the CBMs may be modified to represent the resources on the respective factory floor. An engine system database is another example of a digital asset with access controlled by User Identity Assess Management . The engine system database may contain for example user account information and a history of provenance queries that an operations manager of each print factory has submitted. The User Identity Assess Management engine evaluates the ownership of the user to the digital assets based on user credentials stored in the Engine System database . Examples of user credentials are Amazon S3 s access key and Amazon EC2 s user pub private key pair.

Component Behavioral Model Management engine allows a user to set up CBMs for resources on a respective factory floor. The CBMs are stored in the CBM library database residing in a persistent store of the cloud. Examples of a persistent store in a cloud are S3 in AWS and Walrus in Eucalyptus. The CBMs may be assigned ownership and access rights. By default only the owner can browse retrieve update and delete the CBMs. The owner may however grant other users different levels of rights to access the respective CBMs.

The alert management engine allows users to set up rules for responding to alerts in an automated monitoring service. A Query Management engine is shown in at reference numeral . An operations manager a user of the provenance analytics service may log in to the system and submit a provenance query. Some examples of the provenance query are Find a process sequencing graph see that produced this particular content data investigate a root cause of an alert signal issued by the Provenance Analytics Engine reproduce a history with all intermediate results to guide the root cause investigation and forecast effects of a proposed change on downstream production. The Query Management engine admits and validates the provenance query saves the provenance query as a pending query in the Engine System database residing in the persistent store and then passes the provenance query to a Query Dispatcher engine .

An Analytics Reporting engine manages analytics reports charts graphs and text reports produced by virtual machines VMs launched within Analytics Report Generator engine . The Analytics Reporting engine is capable of operating in a push mode and a pull mode. In the push mode reports may be pushed out as they are ready. The reports may be stored in an Analytics Report Database residing in the Scalable Persistent Store to wait for a retrieval request pull . The Analytics Report Generator engine may pull a previously generated report from the Analytics Report Database and send the report to the Analytics Reporting engine .

The Query Dispatcher engine issues parallel requests to execute queries in a short time. For each query the Query Dispatcher engine may issue parallel requests to e.g. a forecast launcher engine a replay launcher engine a Process Sequencing Graph Generator engine and or the Analytics Report Generator engine to launch corresponding VMs to execute the query in a near real time manner. For example a replay query request may trigger three parallel requests to the Process Sequencing Graph Generator engine the Replay launcher engine and the Analytics Report Generator engine . Each engine will launch one VM using a specific image containing built in software that delivers the VM functions. For example a VM launched within the Process Sequencing Graph Generator may contain software that queries the Event Log database built inside the Component Behavioral Model Library database and produces a process sequencing graph see . The VM launched within the Process Sequencing Graph Generator may provide a process sequencing graph to a VM within Replay launcher engine . In turn a VM in Replay launcher engine may provide results from the Replay engine to the Analytics Report Generator engine . In the example the Analytics Report Generator engine may use the results from the Replay engine to produce provenance analytics reports specified by the provenance query.

The User Query Session Tracking engine tracks VMs employed by a query and monitor an operational status of each VM. For example Ganglia an open source VM monitoring code may be used to monitor the operational status of each VM. Data related to the operational status of the VMs may be saved in the Engine system database .

The Process Sequencing Graph Generator queries the Event Log database in the CBM library database and creates a process sequencing graph see related to given content data. depicts an example of a process sequencing graph . is a direct graph with nodes as resources and arrows indicating a direction of the content data flow. An example of operation of the Process Sequencing Graph Generator follows. Beginning with content data for example an image that is printed in a catalog the Process Sequencing Graph Generator queries the last resource that produced the content data. Timestamps in the event related meta data may be used to correlate the content data with the resource that produced the content data. Further querying about the correlated resource will identify the input content data that the output content data is derived from. Inputs and outputs at each step of a workflow may be traced by iteratively following the same query procedure from resource to resource backward through the workflow. A process sequencing graph may be produced using the results of the iterative query procedure.

The Process Sequencing Graph Generator may include a Granularity Slider operatively displayed on a Graphical User Interface as depicted in . A user may select a level of granularity for a provenance investigation or process sequencing graph see . A more detailed view may use more computing time and storage. With a higher granularity selection zoom in the user can study the details of the PSP operations. With a lower granularity selection zoom out the user can study a much larger production workflow without consuming a high amount of computing and storage resources. It is to be understood that more than one granularity slider may be used to indicate a plurality of granularities that may be individually applied to different portions of the SBM in the process sequencing graph see . It is to be further understood that the selection of the granularity may be automated. For example granularity may be automatically selected at predetermined level in response to a provenance query according to a predetermined rule.

The Forecast Launcher engine launches VMs to pull a process sequencing graph see from a related VM launched by the Process Sequencing Graph Generator . The forecast launcher further retrieves the Stateful Parameters and stateless transfer function from relevant resources and runs simulations to produce a future operation situation. The future operation situation will be served to the VMs launched by the Analytics Report Generator engine .

The Replay Launcher engine launches VMs to pull a process sequencing graph see from a related VM launched by the Process Sequencing Graph Generator . A query may relate to a predetermined historical time. If an interval between the predetermined historical time and a current time is less than a predetermined threshold of recency see the Replay Launcher will cause a VM to query the Event Log database in the CBM library database of resources involved in the process sequencing graph see . A process history may be regenerated based on the stored event related meta data . If the interval between the predetermined historical time and the current time is greater than or equal to the predetermined threshold of recency a recent portion of the history will be generated via the Event Log database as described above the portion older than the threshold of recency will be reproduced via simulation. It is to be understood that if the query requests intermediate content data results the Device Functional Interface in the CBM of relevant resources will be deployed to produce the intermediate results. The reproduced or simulated PSP operations situation will be served to the VMs launched by the Analytics Report Generator engine .

The Analytics Report Generator engine may receive results from VMs launched within Forecast Launcher engine Replay Launcher engine and Process Sequencing Graph Generator engine to produce provenance analytics charts graphs and reports specified by the provenance query.

The Print Service Monitor engine subscribes all events published to the message bus . Once an event is received the Print Service Monitor engine sends the event to System Event Log database for storage. Upon receiving a fresh event the Print Service Monitor engine will use a core function of Forecast Launcher engine to launch a VM to run a Forecast function with a selected time window into the future e.g. 15 minutes to generate a future event . The future event is compared with the Alert database to determine if an alert message should be issued. Alerts may be at different levels. An example of a lower level alert may be a warning level. A high level alert may be an Interruption which may automatically control a resource .

The System Event Log database stores events until the events reach a predetermined age. Events that are older than the predetermined age are deleted from the System Event Log database . It is to be understood that the predetermined age for deletion of an event from the System Event Log database may be greater than a similar age for deletion from the Event Log database in the CBM Library database . Further the predetermined age for deletion may be a function of characteristics of the event record . For example an event record of a particular type of event or an event record related to a particular type of printed product may be retained longer than other event records by having a longer predetermined age for deletion.

It is to be further understood that certain data in the System Event Log database may be statistically summarized. Such aggregation data may be used in summarizing the PSP operations situation with low granularity in a zoomed out view . The statistically summarized data may be retained after the certain data have been deleted. Some examples of summarizable data are resource utilization risk level and print job type. In some instances the statistical summaries of the data may be used along with simulation to reproduce a past event.

Once an event is admitted in System Event Log database the System Event Log database will push the event to the Event Log database in the CBM of all relevant resources . For example the event will be pushed to the event log database in a CBM for a sender a recipient and an other resource having operations and a CBM may use information contained in the event .

Upon receiving an event in the Event Log database the CBM may trigger machine learning or a dimensional reduction technique to use the event to fine tune the Stateful Parameters .

The Alert database includes rules for determining an alert level corresponding to an event . As stated above users may update the alert database through the Alert Management engine . In addition users may select an option to automatically add events that are determined to be highly correlated with existing alerts to the Alert database . If such an option is selected the Print Service Monitor engine will automate the determining if the events are highly correlated and the updating of the alert database .

Referring now to as used herein the cloud computing system refers to a computing system including multiple pieces of hardware operatively coupled over a network so that they can perform a specific computing task. The cloud may include a combination of physical hardware software and or virtual hardware . The cloud computing system is configured to i receive requests from the computing systems or from users A and or B using computing systems and ii return request responses. As examples the cloud computing system may be a private cloud a public cloud or a hybrid cloud. Further the cloud may be a combination cloud computing system including a private cloud or multiple private clouds and a public cloud or multiple public clouds .

The physical hardware may include among others processors memory devices and networking equipment. The virtual hardware is a type of software that is processed by the physical hardware and designed to emulate specific hardware. As an example virtual hardware may include a virtual machine VM i.e. a software implementation of a computer that supports execution of an application like a physical machine. An application as used herein refers to a set of specific instructions executable by a computing system for facilitating carrying out a specific task. For example an application may take the form of a web based tool providing users A B with a specific functionality e.g. provenance analytics. It will be understood that an application as used herein is not limited to a provenance analytics application but refers to an application supporting performing a specific task using computing resources such as among others enterprise applications accounting applications multimedia related applications or data storage applications. Software is a set of instructions and data configured to cause virtual hardware to execute an application. As such the cloud computing system can render a particular application available to users A B.

Executing an application in the cloud may involve receiving a number of requests e.g. request to perform a component provenance query processing the requests according to the particular functionality implemented by the application e.g. performing the component provenance query and returning request responses e.g. transmitting the provenance analytics report to the requesting computing system or . For executing the application the resources e.g. physical hardware virtual hardware and software of the cloud computing system may be scaled depending on the demands posed on the application. For example cloud may vary the size of the resources allocated to the application depending on the number of requests the number of users or sub systems interacting with the application or requirement on the performance of the application e.g. a maximum response time . While not shown it is to be understood that the cloud may also include an interface that allows the computing systems to communicate with the components of the cloud .

As shown in the computing systems may include a computer screen interfacing with a user A B via for example a GUI displayed within a web browser. Examples of web browsers are Microsoft Internet Explorer Firefox Google Chrome and Opera. The computing systems may be VMs that interface with the cloud via the API in an automated fashion through software programming.

In the example of the physical hardware of the cloud computing system may include a processor and a memory . The processor may be any processor that is capable of executing program instructions stored in the memory to perform for example provenance analytics. The memory may include an operating system and applications such as a query management application and a report generating application. The operating system may be a collection of programs that when executed by the processor serve as a platform on which the query management application and the report generating application can run. Examples of operating systems include for example various versions of Linux and Microsoft s Windows .

It is to be understood that the memory may be integrated in the same device as the processor or it may be separate from but accessible to the respective computing system and processor .

The query management application represents program instructions that when executed by the processor function as a service that causes i admission and validation of the provenance query ii saving of the provenance query as a pending query in the Engine System database residing in the persistent store and iii passing of the provenance query to a Query Dispatcher engine . The report generating application represents program instructions that when executed by the processor function as a service that causes i receiving of results from VMs launched within Forecast Launcher engine and or Replay Launcher engine and or Processing Sequencing Graph Generator engine and ii produce provenance analytics charts graphs and reports specified by the provenance query.

In the cloud computing system of the Provenance Analytics Engine of may have the hardware portions implemented as the processor and may have the programming portions implemented as the operating system and applications. In this example then each of the computing systems may utilize the services of the cloud to perform provenance analytics and to provide reports to the users.

Each of the users A B may be a human being or a computer program. For example users A B may be a business intelligence software program that may request a provenance analytics report through a RESTful API.

The figures set forth herein aid in depicting various architectures functionalities and operations of the examples disclosed herein. Throughout the description many of the components are defined at least in part as programs programming or program instructions. Each of these components portions thereof or various combinations thereof may represent in whole or in part a module segment or portion of code that includes one or more executable instructions to implement any specified logical function s . Each component or various combinations thereof may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

The examples disclosed herein may be realized in any non transitory tangible computer readable media for use by or in connection with an instruction execution system e.g. computing systems such as a computer processor based system or an ASIC Application Specific Integrated Circuit or another system that can fetch or obtain the logic from computer readable media and execute the instructions contained therein. Non transitory tangible computer readable media may be any media that is capable of containing storing or maintaining programs and data for use by or in connection with the computing systems . Computer readable media may include any one of many physical media such as for example electronic magnetic optical electromagnetic or semiconductor media. More specific examples of suitable computer readable media include a portable magnetic computer diskette such as floppy diskettes or hard drives a random access memory RAM a read only memory ROM an erasable programmable read only memory or a portable CD DVD or flash drive.

While several examples have been described in detail it will be apparent to those skilled in the art that the disclosed examples may be modified. Therefore the foregoing description is to be considered non limiting.

