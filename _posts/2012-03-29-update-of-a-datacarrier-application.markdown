---

title: Update of a data-carrier application
abstract: In a method for updating or installing a data storage medium application which can be executed on a secure data storage medium, the data storage medium is used in a telecommunications terminal. Updating data for the data storage medium application are first integrated into a terminal application certificate of a terminal application to be installed on the telecommunications terminal. Next the terminal application is installed in the telecommunications terminal and the data storage medium application in the data storage medium is configured according to the updating data. The terminal application certificate functions as a data container for the transparent updating data to be forwarded to the data storage medium. The updating data may relate to access rights of the terminal application to a data storage medium application already installed in the data storage medium or to a data storage medium application to be newly installed in the data storage medium.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09348575&OS=09348575&RS=09348575
owner: Giesecke & Devrient GMBH
number: 09348575
owner_city: Munich
owner_country: DE
publication_date: 20120329
---
The present invention relates to a method for updating a data carrier by updating or installing a data carrier application executable on a data carrier that is inserted in a telecommunication end device to such a data carrier to such a telecommunication end device as well as to a digital certificate thereby employed.

Nowadays telecommunication end devices equipped with powerful processors and many kinds of applications so called smartphones have become very popular. The telecommunication connection or mobile radio connection required therefor and or the secure memory space required for the diverse uses that frequently also process confidential data is made available by secure data carriers which are insertable into the respective telecommunication end device e.g. by U SIM mobile radio cards smart cards Secure Digital SD memory cards or the like. Such secure data carriers normally also comprise a processor and applications executable thereon. Two different kinds of applications can be distinguished here namely the end device applications installed on the telecommunication end device also referred to as apps with some smartphones and the data carrier applications executable on the data carrier also referred to as applets with some data carriers.

While diverse uses are made available on the telecommunication end device with the end device applications e.g. apps the data carrier applications e.g. applets frequently relate to uses in connection with security aspects of the telecommunication end device e.g. the telecommunication connection or mobile radio connection the identity of a user monetary transactions or other data that are confidential or worthy of protection. The data carriers thus have special security functionalities in particular a secure memory.

End device applications executed on the telecommunication end device frequently require access to data carrier applications in the secure data carrier. To prevent abuse of the security relevant functionalities of the data carrier applications and of the confidential data stored there one can provide e.g. an access rights management which allows an end device application to access a data carrier application only if it has corresponding access rights. However such a mechanism relates only to the access rights of those end device applications that were already known and could be taken into consideration upon the manufacture of the data carrier e.g. upon its initialization or personalization. End device applications that are later installed on a telecommunication end device are therefore not known to the access rights management and accordingly have no access to installed data carrier applications. It is even more of a problem to access those data carrier applications that have yet to be installed on the data carrier. Updating access rights later or actually installing new data carrier applications later on an already delivered data carrier is undesirable if not impossible in this connection in particular for security reasons.

Because telecommunication end devices usually have only one data carrier slot it is also impossible to make changed access rights or new data carrier applications available on a second secure data carrier. One might consider making available a replacement data carrier accordingly updated by the provider but this is not especially advantageous because it would lose important user data that are impossible or difficult to procure again e.g. digital certificates licenses or rights.

In this connection EP 1 361 527 A1 proposes updating the data stock of a delivered mobile radio card by means of a contactless data communication via an air or OTA over the air interface. However other data carriers insertable into telecommunication end devices e.g. SD cards or the like frequently do not make available the technical infrastructure this requires. Furthermore users of a secure data carrier with confidential user data would be shaken in their trust in the data security because contactless data transfers frequently and with reason trigger fears about data security and data abuse.

It is therefore the object of the present invention to create a technically simple and sufficiently secure possibility for updating a secure data carrier inserted in a telecommunication end device carried out through an update or installation of a or several data carrier application s in the secure data carrier.

This object is achieved by a method and apparatuses having the features of the independent claims. In claims dependent thereon advantageous embodiments and developments of the invention are stated.

In a method for updating or installing a data carrier application executable on a secure data carrier with the data carrier being inserted in a telecommunication end device update data are integrated according to the invention into an end device application certificate of an end device application to be installed on the telecommunication end device on the basis of which update data the relevant data carrier application can then be configured. For this purpose the end device application is installed on the telecommunication end device and the update data are extracted from the end device application certificate of the installed end device application. Finally the data carrier application is configured in the data carrier according to the extracted update data in such a way that this data carrier application is present in updated or newly installed form on the data carrier.

Upon the update of the data carrier application the data carrier application itself can be checked and as needed changed dependent on the type of update. In particular with an update in the shape of a configuration of the data carrier application it can be the case that the data carrier application itself is not changed but that merely access rights between the data carrier application and other data carrier or end device applications are checked and as needed changed.

According to an aspect of the present invention an end device application certificate is employed as a container data structure for the update data by the update data being integrated in the end device application certificate outside the telecommunication end device and the data carrier and being extracted within the telecommunication end device or the data carrier. According to a further aspect of the invention the container structure employed for making available the update data within the telecommunication end device or the data carrier is brought into the telecommunication end device in the form of an end device application certificate of an end device application to be installed. According to yet a further aspect of the invention the update data are brought into the telecommunication end device with exactly that end device application that requires access to the data carrier application whose update the update data relate to.

In connection with the present invention a certificate is understood to be a digital data structure by which an owner and where applicable further properties of a public key are confirmed for example by a trustworthy certifying entity. The end device application certificate confirms in this way the trustworthiness of the public key of the provider of the relevant end device application that comprises the end device application certificate. The same applies to the data carrier application certificate mentioned below which comprises the public key of a provider of a corresponding data carrier application.

Such a certificate can be constructed for example according to the X.509 standard of the International Telecommunication Union ITU . The end device application certificate is preferably such an X.509 certificate so that the update data are integrated or written into an extension field extensions provided according to the X.509 standard. However any other certificate data structure that permits an integration of such extensions is suitable within the framework of the present invention.

The present invention makes possible a technically simple and secure update of installed data carrier applications in particular of access rights of end device applications to such data carrier applications on the one hand and a simple and secure installation of new data carrier applications with corresponding access rights by end device applications on the other hand. The updating or installing of data carrier applications does not affect the confidence that a user has in the security of the secure data carrier because he can comprehend and check the changes with respect to data. Thus an update of a data carrier application for example must be actively intended and initiated by the user by downloading and installing the relevant end device application onto his telecommunication end device which entails a considerable gain of confidence and further security advantages compared to the automatic update via an air interface.

Moreover a telecommunication connection involving security problems to an external update server is not necessary. The data carrier therefore needs no software or hardware facilities beyond the usual infrastructure. It is equally not necessary to have a proxy application on the telecommunication end device for the mediation between an external update server and the data carrier.

Moreover the invention can be implemented without a change of the technical infrastructure because the update data are made available by way of a container data structure of the end device application certificate brought into the telecommunication end device anyway and this within the framework of the procedure of installing an end device application which procedure is usual and known on telecommunication end devices. This means in particular that all the data required for the update or installation can be completely brought into the end device application certificate as a container data structure and thus no further method steps such as e.g. additional loading or installation steps are necessary.

Preferably the update data are made available by the provider of that data carrier application whose update the update data relate to and are also integrated into the end device application certificate by this provider. For the checkable authorization of the update the provider of the data carrier application signs the end device application certificate together with the update data integrated therein with his secret key. The signature of the end device application certificate can then supplement the end device application certificate which preferably corresponds to the X.509 standard in such a way that also the signed X.509 end device application certificate in turn corresponds to the X.509 standard. For example the signature can be made available in a signature field of the X.509 certificate especially provided for the signature deposition.

This creates an effective control mechanism which prevents a not authorized e.g. manipulative or damaging update of the data carrier application or the bringing in of other malicious code into the data carrier because with the signature it is checkable at any time whether the provider of the relevant data carrier application has approved the update thereof.

The signature of the end device application certificate and thus the authorization of the update data is verified before the data carrier application is configured according to the update data. Updates not authorized by the provider of the data carrier application are therefore not possible. The verification can either be carried out on the level of the telecommunication end device e.g. by a programming interface API application programming interface to the data carrier which API is installed on the telecommunication end device or directly on the level of the data carrier e.g. by a facility accordingly adapted and secured such as the security application of the data carrier discussed below. The verification on the data carrier is preferred however because the data carrier in principle fulfills higher security requirements than the telecommunication end device which normally is not especially secured.

The signature of the end device application certificate which was created with the secret key of the provider of the data carrier application is verified with a public key of this provider. For this purpose the public key of the provider of the data carrier application of the security application is present on the data carrier or the programming interface on the telecommunication end device.

Integrating the update data into the end device application certificate is effected by the provider of the data carrier application in such a way that the update data are transparent to the telecommunication end device or its operating system and run capable applications i.e. the update data remain unaffected by the telecommunication end device and leave the telecommunication end device unaffected and are passed through to the data carrier without effects for example via the programming interface installed on the telecommunication end device. In connection with an X.509 end device application certificate this can be achieved for example in that the update data being entered in an extension field which upon the actual employment of the end device application certificate goes unheeded as a trustworthy carrier of the public key of the provider of the end device application.

The transparency of the update data to the telecommunication end device applies in particular with the installation of the end device application on the telecommunication end device by an installation facility package installer of the telecommunication end device or the operating system thereof. In so doing a signature of the end device application is verified by the provider thereof with the public key of the provider of the end device application which key is present in the end device application certificate.

Preferably the update data are also transparent to the programming interface because the latter merely extracts the update data intended for the data carrier from the end device application certificate without being capable of interpreting or processing them and passes them on to the security application of the data carrier. On the level of the data carrier the actual configuration of the data carrier application is then carried out on the basis of the update data.

The update data thus do not affect the installation facility or the programming interface nor are they affected by these facilities. This transparency substantially constitutes the data container property of the end device application certificate that is exploited according to the invention. In an X.509 end device application certificate this transparency is ensured by the update data being brought into an extension field whose content is meaningless and transparent to the telecommunication end device or the operating system thereof.

The security application already mentioned several times and installed on the data carrier e.g. in the form of a security applet manages a certificate list and an access right list. The certificate list comprises data carrier application certificates of the data carrier applications installed in the data carrier i.e. certificates which make available in a trustworthy manner a public key of the provider of the relevant data carrier application.

The security application thus has all the public keys of data carrier application providers which where applicable must be employed in order to verify the signature generated by a provider of an installed data carrier application of an end device application certificate with integrated update data the end device application of which requires access to just this data carrier application. The access right list comprises the access rights or access conditions of the end device application installed in the telecommunication end device to the data carrier applications installed in the data carrier. Preferably the access right list is divided into respectively one access right list for each data carrier application installed in the data carrier. For a simple check of access rights each data carrier application certificate in the certificate list is connected with the respectively assigned access right list preferably via a data carrier application identification that uniquely references the relevant data carrier application.

By means of this data infrastructure upon a conventional access of an end device application already installed on the telecommunication end device to a data carrier application already installed in the data carrier preferably the security application or where applicable also the programming interface can check whether the access right list provides corresponding rights for such an access.

In case of an end device application that is to be newly installed however the respective access right list first has to be supplemented with the new access rights i.e. the relevant data carrier application must be updated. In this embodiment of the invention the data carrier application is configured in that the access right list that is allocated to this data carrier application in the security application is supplemented by new access rights comprised by the update data.

The public key of the provider of the data carrier application required for verifying the signature of the end device application certificate is in this embodiment already deposited in the security application or in the certificate list because the relevant data carrier application is already installed and the data carrier application certificate thereof with the public key of the provider of the data carrier application is thus registered in the certificate list. The signature of the end device application certificate can thus be verified with the public key of the provider of the data carrier application which key is deposited in the data carrier application certificate thereof in the certificate list.

Starting point of a modified or extended embodiment of the invention is that the data carrier application to which the end device application to be installed requires access is not yet installed in the data carrier. The update data of the end device application certificate thus relate in this embodiment to a data carrier application to be newly installed in the data carrier and accordingly also comprise an installable version of the data carrier application itself e.g. the byte code thereof.

The data carrier application in this embodiment is therefore configured in that it is installed in the data carrier and the corresponding changes are made in the certificate list and the access right list in order for the end device application to be granted access to the newly installed data carrier application. For this purpose the update data after the successful check of the signature of the end device application certificate are extracted from the end device application certificate by the programming interface and passed on to the security application on the data carrier for the configuration of the data carrier application. Besides the installation of the data carrier application the configuration thereof comprises in this embodiment also that the security application enters the relevant data carrier application certificate into the certificate list. Likewise as already explained above the required access rights of the end device application are extracted from the end device application certificate and entered into the relevant access right list.

The public key of the provider of the data carrier application which is required for checking the signature of the end device application certificate and thus for checking the authorisation of the update data by the provider of the data carrier application now however cannot be taken from a data carrier application certificate already registered in the certificate list since the relevant data carrier application is not yet installed . Instead the update data integrated in the end device application certificate comprise here also the data carrier application certificate with the public key of the provider of the data carrier application. The security application of the data carrier can thus verify the signature of the end device application certificate by means of the public key of the provider of the data carrier application as soon as the data carrier application certificate has been extracted from the update data.

According to a special embodiment variant of this embodiment one can do completely without the access rights however. Here the provider can adjust the data carrier application yet to be installed so exactly to the relevant end device application that upon the access of the end device application no particular access rights are needed e.g. because the data carrier application possesses a range of functions that is only very restricted and exactly adjusted to the end device application. In this embodiment variant the providers of data carrier applications thus would no longer make available complete data carrier applications with an extensive range of functions but merely reduced versions of such data carrier applications that are exactly adjusted to the individual end device applications. Here an advantage would be that the administrative effort in view of the access rights would be reduced with respect to some or even all the end device applications or would even be completely omitted.

After the security application having obtained the extracted update data from the programming interface it performs the necessary updates of the certificate list and access right list and prepares the data carrier application for the installation in the data carrier. This installation preparation may comprise e.g. decoding and cryptographic operations e.g. the decryption of the byte code of the data carrier application if this was integrated for security reasons in encrypted fashion in the end device application certificate by the provider of the data carrier application. In such an end to end encryption between the provider of the data carrier application and the security application the necessary e.g. secret symmetric keys are preferably available only to these two entities. Subsequently the prepared installable version of the data carrier application is transferred to an installation facility of the data carrier e.g. a data carrier management responsible therefor and installed by this.

If the operating system of the data carrier is set up according to the GlobalPlatform standard the installation of the new data carrier application is taken on by a so called card manager which represents the central data carrier management of the data carrier. Here the programming interface running on the telecommunication end device takes over an mediator or proxy function between the security application and the card manager by the data carrier application to be installed being first passed on from the security application to the programming interface with an installation instruction against the data carrier management and the programming interface subsequently transmitting the data carrier application to be installed to the data carrier management likewise with a corresponding installation instruction. There the installable version of the data carrier application is finally installed. As the data carrier application when the programming interface is employed as a proxy temporarily leaves the secure environment of the data carrier a further or accordingly extended end to end encryption between the security application and the data carrier management can be provided.

Within the framework of the above described embodiments it is of course also possible that an end device application certificate comprises update data for several data carrier applications where applicable of different providers e.g. at least for one already installed data carrier application and for at least one data carrier application to be newly installed. For this purpose the end device application certificate must be signed by each individual involved provider of data carrier applications so that several signatures are present and must be verified. The security application then configures each of these data carrier applications according to the specifications of the assigned update data.

A secure data carrier according to the invention is not restricted to only mobile radio cards e.g. U SIM mobile radio cards or the like but can also be a digital memory card adapted according to the invention and in particular equipped with a security application for example a microSD card secure multimedia card or the like. The secure data carrier according to the invention in particular comprises its own processor and its own run capable applications. The data carrier is for example in particular a data carrier insertable into the telecommunication end device and removable from the telecommunication end device. Alternatively the data carrier is a data carrier that is adapted for firm implementation in a telecommunication end device e.g. an Embedded Secure Element or Embedded Smart Card Chip for firm implementation into a telecommunication end device and is inserted firmly implemented into a telecommunication end device e.g. by the end device manufacturer so that it is not or at least not without destruction removable from the end device by a user in particular a NFC chip for a NFC capable telecommunication end device. The operating system of the data carrier is preferably based on Java or Java Card and can be designed according to the GlobalPlatform standard. The data carrier applications as well as the security application are preferably so called applets or Java applets or the like.

A telecommunication end device according to the invention is adapted as described above and comprises in particular a programming interface via which the data carrier can be accessed in standardized fashion. It is preferably a smartphone with Android operating system and so called Android apps that are run capable thereon. Moreover the telecommunication end device can also be another possibly portable computer end device e.g. a personal digital assistant PDA a portable computer a tablet PC or the like into which a secure data carrier can be inserted for making available a telecommunication or mobile radio connection and or secured memory space. The invention is not restricted to the Android operating system however but can be realized in principle on each suitable smartphone or computer operating system.

In the following the first embodiment is explained in connection with the and the second embodiment in connection with the . Both embodiments however relate to a telecommunication end device in the form of a modern smartphone on which the minicomputer operating system Android of the Google company is installed. Of course the invention is also expediently usable in and implementable on other computer formats with other operating systems e.g. on personal digital assistants PDA laptops notebooks tablet PCs and other portable minicomputers which often also make available telecommunication or mobile radio functionalities.

The diverse end device applications that are run capable on the Android smartphone accordingly are so called apps App3 App1 App2 i.e. applications especially adjusted to the resources areas of use and uses of smartphones which apps can e.g. be downloaded from the Android Marketplace and installed on the smartphone . In addition to the Android operating system with the Android apps running on them there also exist still further smartphone operating systems with specialized smartphone applications on which the present invention can also be implemented. But Android due to its open source concept is very well suitable for the following exemplary explanation of the invention.

Involved in the method is in addition to the smartphone a secure digital data carrier in the form of an SD card SDC that when inserted in a slot of the smartphone provided therefor represents a secure memory or a secure memory extension of the smartphone . The SD card preferably comprises a Java based operating system e.g. Java Card or the like so that the data carrier applications Apl4 Apl1 Apl2 Apl3 installed on the SD card are applets or Java applets. Of course as secure data carriers according to the present invention also other data carriers having processor and further computing resources usable in a smartphone are suitable for example U SIM mobile radio cards microSD cards secure multimedia cards and the like. Also these data carriers can be equipped with arbitrary smart card or memory card operating systems and applications run capable on these.

A special applet installed on the SD card is the so called security applet SecApl which in connection with the access of an app to an applet and with the update of an applet assumes security and control functions. In this respect the terminating configuration of an applet according to the invention is carried out or at least initiated by the security applet .

The security applet manages a security structure comprising a certificate list CL in which various data carrier application certificates in the form of applet certificates AplCert1 to AplCert4 are stored. Further the security applet also manages one or several access rights lists which are assigned via an applet identification AID1 to AID4 to the certificates of the certificate list . The access rights lists in turn specifies app identifications HashAppCert1 to HashAppCert3 which respectively address a list of access rights AC1 AC2 AC3 access condition that state the access rights of the app designated by the app ID to that applet whose applet ID refers to the relevant access right list .

If an app must access an applet the security applet can check via the respective applet ID whether the relevant app possesses the necessary access rights . The access rights assigned to the app via the access right list are identified by the app ID which corresponds to a hash value of the app certificate which is newly formed with each check of the access rights .

In the case that an app requires access to an applet whose access rights does not allow this or which is not yet installed as an applet in the SD card a corresponding update of the applet can be effected i.e. a configuration of the applet by an update of the access rights between the applet and other applets and or the installation of the applet by the update data required for this being brought according to the method of into an end device application certificate in the form of an app certificate AppCert3 and passed on transparent to the Android operating system to the security applet on the SD card so that a configuration of the applet corresponding to the update data can be effected there.

According to a first embodiment the update of the access rights of an applet Apl4 is performed as follows In a step S install Apl4 first the applet Apl4 is installed on the SD card by the applet provider AplProv or at least at the applet provider s prompting for example within the framework of a manufacturing process of the SD card e.g. upon the initialization or personalization thereof. In so doing also the access rights of various apps App1 App2 to this applet Apl4 which are known at this time are deposited in the security applet of the SD card .

The steps S to S then relate to the configuration of the applet with respect to later updating the access rights of the app App3 to be newly installed to the already installed applet Apl4 . For this purpose in the smartphone there is installed preferably as a supplement or extension of the Android operating system a programming interface API for standardized access to the SD card . The API cooperates with the security applet in order to implement a secure procedure for later updating the applet .

The starting point of this update is the app certificate which is part of the installation package of the app to be newly installed and is issued by a trustworthy entity for the public key of the app provider AppProv of the app . In addition to the app certificate also the signature AppSig3 of the app exists in the installation package of the app with which the app provider guarantees with the aid of his secret key the authenticity of the app .

In case of already installed applets Apl1 Apl2 Apl3 the API can check in cooperation with the security applet the access rights of an app accessing an applet .

In step S write UpdtDat the applet provider integrates the update data in the form of access rights into the app certificate in order to give the security applet in this way the access rights made available by the applet provider and required by the app for the corresponding configuration of the applet .

In step S sign AppCert3 the provider of the applet to be updated issues with the aid of his secret key a signature AplSig3 of the app certificate supplemented by the update data which is connected with the app e.g. by the signature being brought into an installation package of the app .

The mechanism of the extension fields is used in order to bring the update data in such a way into the app certificate that they are transparent to the smartphone and its functions and software components possibly with the exception of the API which is a programming interface of the SD card . The app certificate thus represents a container data format that in the extension fields can transport data in transparent manner from outside the smartphone e.g. from the applet provider through the smartphone up into the SD card or the security applet thereof. The update data stored in the extension fields of the app certificate are left out of consideration by the smartphone .

The signature of the applet provider is a cipher of the app certificate encrypted with the secret key of the applet provider and can be present separately in the installation package of the app cf. . The signature can be brought into the signature field for example according to the X.509 standard. In the extension fields the app certificate can take up still further information items of the applet provider which relate to the applet for example the applet certificate with the public key of the applet provider or the byte code of the entire applet as it is the subject matter of the second embodiment of the invention cf. . Likewise the unique app ID can also be present as an extension in the app certificate .

The thus equipped app is then offered by the applet provider in the step S deploy App3 at a public app market for example at so called Google Marketplace to potential users for installation on their smartphones. The app is downloaded from there in the step S install App3 and installed under the Android operating system in the smartphone .

As the app offered in the Marketplace or another public platform carries the signature of the applet provider which is formed over the entire app certificate together with the access rights the signature constitutes an authorization by the applet provider for the app to access the applet .

In step S the app is installed under the Android operating system by means of a special installation routine package installer by the installation routine first checking the signature of the app provider . For this purpose the signature is decrypted with the public key of the app provider and compared with the signed plain text of the app . The installation routine obtains the public key from the app certificate attached to the app which guarantees the trustworthiness of the public key .

In step S start App3 the installed app is started by a user of the smartphone and said app then attempts in a step S access Apl4 to access the applet Apl4 . For this however the app App3 has not yet any access rights in the access right list of the security applet . The required access rights have hitherto been present only in the app certificate .

Subsequently in the step S verify AppCert3 the app certificate is verified by the API by the signature being decrypted with the public key of the applet provider and being compared with the plain text of the app certificate . Deviating therefrom the verification of the app certificate and the subsequent update of the access right list can also be effected directly after or even upon the installation of the app in step S. In a preferred implementation variant the verification of the step S can be performed by the security applet also in the secure environment of the SD card . In this case the app certificate is passed through to the security applet by the programming interface .

Upon the verification of the signature the API or the security application obtains the public key of the applet provider from the certificate list in which the applet certificate was deposited upon the installation of the applet in the SD card carried out in step S. If the verification of the signature is successful the update data stated in the extension field of the app certificate i.e. at least the access rights are extracted by the API and in step S transmit UpdtDat to SecApl transmitted to the security applet for the configuration of the applet . If the verification in step S is carried out by the security applet in case of a successful verification this notifies the API to the effect that the update data can be extracted from the app certificate . Alternatively also the security applet can extract the update data from the app certificate . During or after the extraction of the update data the integrity thereof does not have to be checked however because this was already checked through the verification of the signature of the applet provider in step S.

In the step S update CL the security applet finally configures the applet by the access right list being updated with the update data in the form of the access rights of the app to the applet . For this purpose the relevant access right list is ascertained via the applet ID . Thereafter the app ID is formed in the form of an SHA 1 hash value of the app certificate and compared with the app IDs already registered in the access right list or newly entered therein with the corresponding access rights . Upon a later access of the app to the applet the security applet can check via the applet ID and the app ID at any time whether the required access rights are present. Finally in step S grant access the security application grants the app access to the applet .

In a second embodiment of the invention in connection with the to the security applet there is made available an applet hitherto not installed on the SD card by means of the container data structure of the app certificate . The configuration of the applet comprises in this embodiment the installation of the applet on the SD card and the setting up of the corresponding access rights . The further procedure of this embodiment arises from the sequence of the steps S to S Sto Sand S of the by an interaction comparable with the first embodiment between the API on the smartphone and the security applet on the SD card .

The step S of early installation of the applet of course is omitted here because it is precisely the subject matter of this embodiment to install the applet later. Furthermore in this embodiment the configuration step S is omitted rather the applet is configured and installed by means of the steps Sto S

In step S the applet provider does not only integrate access rights of the app to the applet into the app certificate as described in connection with the first embodiment but also the applet itself or its byte code as well as the applet certificate with the public key of the applet provider . In step S the applet provider signs the app certificate having the entire update data with his secret key and forms the signature . In this embodiment the installation package of the app comprises in addition to the signatures and an app certificate according to comprising extension fields according to the X.509 standard with access rights the byte code of the applet to be installed and the applet certificate .

Thus after the step S there is located at the Marketplace or on another public download platform an app which also comprises in the form of a data container an applet to be installed on the SD card authorized by the applet provider by means of the signature over the total app certificate .

In order to ensure the integrity of the update data in the extension in particular of the byte code of the applet an end to end encryption between the applet provider and the SD card or the security applet thereof is provided. This can be realized for example by a symmetric AES encryption the joint secret key only being available to the applet provider and the security applet .

The further course of the steps S to S is then analogous to that of the first embodiment. The only important point here is that in the step S the app certificate and its extensions are checked by the signature being verified with the public key of the applet provider whose applet certificate is not yet present in the certificate list but in an extension field of the app certificate . The verification step S is preferably carried out by the security applet so that the verification can take place in the secured environment of the SD card .

After successful verification of the signature of the applet provider the API extracts in step S the update data i.e. the access rights the applet and the applet certificate from the app certificate and passes them on to the security applet . As in the first embodiment the update data can also be extracted directly by the security applet however.

Comparable with the step S then in step S update CL AC the access rights are deposited in the corresponding access right list identified by the hash value of the app certificate as app ID . In so doing then also the applet ID is deposited in the security applet and the applet certificate with the public key of the applet provider extracted from the extension of the app certificate is deposited in the certificate list . There is thus created a completely new access right list starting out from the applet ID in which list addressed by the app ID in the form of a hash value of the app certificate the new access rights of the app to the applet are deposited.

In step S decode Apl4 from UpdtDat the extracted byte code of the applet which is present at the security applet still in the form as encrypted or encoded by the applet provider is decoded and or decrypted in the secure environment of the security applet . In step S also all the further necessary operations for the preparation of the installation of the applet are carried out.

Preferably however the byte code of the applet is then installed not directly by the security applet . According to the GlobalPlatform standard which at least in the future will be relevant in the smartphone area cf. www.globalplatform.org such a direct installation is not provided. Instead the installation of an applet is to be performed via the smartphone or the API thereof. Thus the API acts in the remaining steps Sto Sas an mediator or proxy unit between the security applet and the card manager SDCMngr of the SD card which represents the central management unit of the SD card and as such is responsible for the installation of new applets .

So as to guarantee the data integrity of the byte code of the applet in step Sthere can be carried out a further encryption of the applet as the applet leaves the secure environment of the security applet and is made available to the card manager via the potentially insecure API . There is thus either provided a further end to end encryption between the security applet and the card manager or the byte code of the applet is not yet decrypted in the security applet in step S but only in the step Sin the card manager within the framework of the installation of the applet . In the latter case there exists an end to end encryption between the applet provider and the card manager the necessary keys being securely kept in the SD card or in the security applet and or in the card manager .

In the steps Sand S the applet is then transferred according to the GlobalPlatform standard from the security applet to the API and by this passed on to the card manager for the ultimate installation. The API thus acts vis vis the card manager as a host unit which for its part receives the data to be made available namely the applet from the security applet of the SD card .

