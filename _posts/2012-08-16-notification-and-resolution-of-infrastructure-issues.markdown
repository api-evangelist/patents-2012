---

title: Notification and resolution of infrastructure issues
abstract: Embodiments of the present disclosure are directed to, among other things, providing notifications of distributed system infrastructure issues that may affect customers. In some examples, a web service may utilize or otherwise control a client instance to control, access, or otherwise manage resources of a distributed system. Based at least in part on determining a health level of the distributed system and receiving operating information from multiple sources, notifications may be provided. Additionally, in some examples, one or more remediation operations may be performed automatically or provided as recommendations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08832268&OS=08832268&RS=08832268
owner: Amazon Technologies, Inc.
number: 08832268
owner_city: Reno
owner_country: US
publication_date: 20120816
---
The present application is related to application Ser. No. 13 587 772 filed on the same day herewith entitled PREEMPTIVE NOTIFICATION OF INFRASTRUCTURE ISSUES the entire contents of which is hereby incorporated by reference as if fully set forth herein under 35 U.S.C. 120.

Customers of data storage services web services and or distributed computing systems may deploy instantiate or otherwise implement one or more distributed computing resources. For example a customer may set up a website by requesting that particular resources of a distributed system be deployed by the distributed system to operate the website. However because the distributed system itself may control or manage the computing resources on behalf of and or remote from the customer the customer may not always be aware of causes for service disruption or degraded service. Additionally customers or other users may provide comments regarding known or potential issues with the distributed system based at least in part on observations of the system. However many customers may still remain unaware of various issues or problems with the distributed system that may affect computing resources operating on their behalf. Additionally these customers may not be aware of potential actions that may be performed to remediate the issues.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

Embodiments of the present disclosure are directed to among other things providing notifications and or resolution options associated with resource issues and or infrastructure issues of distributed computing systems e.g. web services cloud systems etc. . In some examples web service client entities also referred to as users or customers may utilize or otherwise control a computing resource e.g. a client entity of a service provider i.e. a distributed system to control access or otherwise manage distributed resources. As used herein a client entity may include one or more virtual machine instances configured to receive user requests perform instructions and or access data of a distributed computing system e.g. provided by the distributed system and acting on behalf of a client or user of the system . In some aspects the service provider may provide storage access and or placement of one or more computing resources through a service such as but not limited to a web service a cloud computing service or other network based data management service. For example a user or client entity may access via the service provider data storage and or data management such that access mechanisms may be implemented and or provided to the client entity utilizing the computing resources. In some examples computing resource services such as those provided by the service provider may include one or more computing resources accessible across one or more networks through user interfaces UIs application programming interfaces APIs and or other interfaces where the one or more computing resources may be scalable and or expandable as desired. Further in some examples a client entity also referred to as a third party.

In some examples the computing resources may be server computer systems in a distributed computing environment. Other computing resources are considered as being within the scope of the present disclosure some examples of which are provided below. Additionally in some examples infrastructure and or distributed resource issues may be assessed determined or otherwise identified based at least in part on monitoring infrastructure components and or customer resources receiving notifications from monitoring services and or receiving comments or other notifications from users customers or other observers of the distributed system. For example a service provider e.g. the distributed system itself or a third party monitoring service may monitor distributed system infrastructure components. Examples of infrastructure components may include but are not limited to switches power circuits machine hosts servers data centers geographic regions racks instances or network interfaces of the distributed system. As such health information e.g. a health level a probability of failure etc. may be determined and or stored for each infrastructure component and or for groups of infrastructure components. In some aspects notifications may be provided and or automatic remediation may be performed based at least in part on the health information.

Additionally in some aspects a user or client may access a client entity of a distributed system for attaching data sets data volumes data blocks or the like to the client entity for accessing manipulating and or processing the data by the client entity. That is a client entity may request that particular data volumes be operationally attached to the client entity. In some aspects operationally attaching data volumes may include generating storing maintaining and or updating a mapping of data stored in the data volume such that the client entity may perform input and or output I O operations on the data. For example data may be read from the attached data volume and or written to the attached data volume by the client entity. According to some examples data volumes that are attached may be stored in a relatively low latency type of memory such that the I O operations performed on the data may be performed in a faster i.e. lower latency fashion.

Data volumes that are attached to client instances i.e. client entities or virtual machine instances in some examples may be stored in one or more primary memory spaces e.g. low latency memory or in one or more backup memory spaces e.g. high latency memory durable memory and or other low latency memory . In some cases the attached data volumes may be stored in both primary memory spaces and backup memory spaces. In this way one or more layers of redundancy may help protect from data loss or corruption. Additionally in some aspects a user or client entity may request to detach a data volume when for example the user or client entity may not plan to access or otherwise perform input output I O operations on the data volume for a foreseeable amount of time. For example a data volume may include resources for operating a seasonal website or other service that operates periodically. Alternatively or in addition the data volume may include resources for application development that may be complete or otherwise no longer needed. As such it may not be desirable to maintain attachment to the client entity at all times. Further in some examples a client instance may be taken down removed or otherwise deactivated such that it is no longer operational. In this case attached data volumes may be detached as a matter of course. However in some examples although a data volume may be detached for one or more particular reasons the data volume may continue to be stored in the low latency memory space and or the backup memory space.

Client instances and or data volumes may also be organized in clusters and or in one or more separate geographic areas. Geographic areas may include regions and or zones. In some examples zones may be distinct locations that are configured to be insulated from failures in other zones and provide inexpensive low latency connectivity to other zones in the same region. In some examples a region may be defined as any collection of resources and may be independent of zones and or physical locations. By launching client instances in separate zones a customer may be able to protect applications from failure of a single location. In some examples regions include one or more zones may be geographically dispersed and may be in separate geographic areas or countries. For example a group of servers or server farms located in separate cities states countries continents etc. may operate one or more client instances. That is in some examples a customer may request that the service provider spin up or otherwise provision multiple client instances with at least one in the United States and another in Europe. In this way if a location specific event occurs that takes down the servers in Europe subsequent requests for the resource could be routed to the servers in the U.S. Additionally in this example a load balancer and or other controller could manage load and or bandwidth issues at each instance such that interruptions to the web service may be minimized.

As noted above infrastructure components may be monitored e.g. at regular irregular or other intervals for degradation errors irregularities or other disturbances in performance. Additionally comments and or feedback may be received via one or more channels or sources. For example users and or customers may report service outages degradations disruptions etc. However in order to filter out noise e.g. when a customer reports a service problem that is actually caused by the customers setup as opposed to a system problem the service provider may correlate the received information with the monitored infrastructure data. For example if one or more customers report that a data center is stuck or otherwise not working properly the service provider may initially assume that this information is noise. That is the customers may be experiencing a phenomenon that is local to their implementation and is not actually an infrastructure issue. However when correlated with infrastructure data e.g. determined or otherwise monitored by the service provider or third party monitoring service the service provider may instead identify that an actual issue has occurred. This correlated information may in some examples act as a trigger or triggering event . In some examples triggering events may also include a determined health level above a predetermined level. For example a particular number of errors associated with a resource in a particular amount of time a particular number of instances not responding or a particular number of non responsive requests to an instance may signal a poor health level. Based at least in part on the triggering event the service provider may perform one or more actions.

In some examples the performed actions may include but are not limited to notifying a user or customer of the potential infrastructure issue posting information about the potential issue on a public forum or automatically performing remediative actions. For example the service provider may automatically restart or re deploy a customer instance and or move data to a safer or more reliable location. The service provider may perform such automatic actions based at least in part on default settings of the service provider and or customer settings based at least in part on input provided via user interface items i.e. drop down boxes box selections etc. of a dashboard e.g. a preferences dashboard or other interface. In some cases the user configurations may be fully customizable and or provided by the customer in a markup language format such as but not limited to the extensible markup language XML . Notifications of issues may also be provided to customers via one or more of many different communication channels. For example the service provider may transmit the notifications via a web interface e.g. the preferences dashboard a comments dashboard a help screen or an issues interface via text message via email via exposed APIs via public boards e.g. electronic bulletin boards or news platforms or via third party messaging or social services e.g. via a private or public message of a social website .

Additionally in some aspects a client entity e.g. a third party reseller may access the resources of the service provider and repackage or otherwise resell associated services and or resources to customers. In this way the service provider may allow the third party to rebrand or otherwise offer the resources to customers outside of the service provider s control. The third party may or may not pay for the ability to repackage resell and or rebrand such services. Additionally the service provider may provide callable application programming interface API functions to the third party for accessing the notification and resolution services. For example the third party may request notification and or resolution information from the service provider based at least in part on performing the API functions using customer parameters or the like. The notifications may then be resurfaced by the third party to their customers as desired.

In other examples or in conjunction with the above examples the service provider may provide a user interface for customers to provide specific comments and or questions regarding potential issues with the distributed system. For example a user may notice degraded service with one or more electronic resources of the system and may activate a comments and or help interface. Via the help interface the service provider may provide general recommendations for remediating the issue being experienced by the user. However the user may also be enabled to provide comments and or ask questions. For example the user may attempt to ask a question about services performed from a particular geographic location or about a resource being operated on a particular rack or associated with a particular switch. That is the questions and or comments may correspond to particular infrastructure components e.g. hardware components of the distributed system. In some examples while the user is typing the question or comment the service provider may in real time scan or otherwise analyze the received text to determine relevant information. This scanned text may then be correlated in real time with the infrastructure information already collected. In some examples the service provider may collect the infrastructure information e.g. based at least in part on the infrastructure component monitoring described above in real time as well. The correlation again may be utilized to filter out customer noise and validate the customer question. In some examples a pop up or other real time interface may be surfaced as to indicate potential issues with the distributed system that may affect the particular customer.

The pop up interface or other user interface may be configured to offer notifications specific to the customer and or specific to the question being typed into the question comment section of the help screen. Additionally the service provider may also provide remediation options to the customer via the interface. By way of example only real time collection and or analysis may include determinations based at least in part on information collected on an on going and continuous basis and may not include knowledge base information. In other words using a knowledge base notification information regarding potential issues may be the same for each scenario. For example if multiple customers are commenting about resource instances a knowledge base answer may be the same for both customers. Alternatively using real time analysis of the user s input the service provider may be able to provide more meaningful and appropriate notifications that correspond to immediately current issues recently identified issues issues associated with particular configurations of the user and or issues associated with a particular question e.g. a question about a current customer or service provider reported issue or a particular piece of hardware .

In some aspects the service provider may collect data from live operation and or static attributes of a client instance application stack or other electronic resource of a distributed system. The data may be live i.e. collected based at least in part on monitored operation and or activities or it may be static i.e. collected based at least in part on the application stack as configured to be operated . The data may be stored for further analysis. Determined infrastructure issues may be provided to a user customer account holder etc. that is associated with the application stack client instance and or web service application. Additionally in some aspects the service provider may make recommendations to the customer regarding ways in which the identified infrastructure issues may be avoided or otherwise mitigated. For example the service provider may recommend that the customer deploy client instances in one or more additional regions or zones. Further automatic mitigation may be performed based at least in part on health levels of components and or user configurations. For example when a health level of an instance is determined to be below a user defined level e.g. based at least in part on correlated infrastructure information and user comments the service provider may automatically deploy the instance on a different server in a different rack or in a different region in some examples.

More specifically a service provider computer such as a server operated by a financial institution an online merchant a news publication company a web services company a social networking company or the like may maintain and or backup data volumes for one or more client entities of a distributed computing system. The service provider computer may also receive requests to backup data volumes associated with the client entities to attach and or detach data volumes to the client entities and or to utilize other resources and or services of the service provider. Additionally in some examples the service provider may receive determine and or otherwise collect statistical information associated with the resource e.g. client entities data volumes and or services in order to perform the notification and or resolution of infrastructure issues.

This brief introduction including section titles and corresponding summaries is provided for the reader s convenience and is not intended to limit the scope of the claims nor the preceding sections. Furthermore the techniques described above and below may be implemented in a number of ways and in a number of contexts. Several example implementations and contexts are provided with reference to the following figures as described below in more detail. However the following implementations and contexts are but a few of many.

In some examples the flow may begin at where the distributed system may transmit operational information associated with infrastructure components to the service provider computers . In some examples this information may be pushed to the service provider computers . However in other examples the service provider computers may periodically monitor the distributed system such that the information may be pulled requested or otherwise obtained without the distributed system directly pushing the information. The service provider computers may store this infrastructure performance information. Additionally in some examples the service provider computers may utilize the performance information to determine health levels for one or more of the infrastructure components being monitored. Health levels may be indicated by color e.g. red yellow or green or may be as granular as desired e.g. ten hundreds etc. levels .

At of flow the service provider computers may receive resource information associated with the one or more users . For example a user may have an instance of the distributed system implementing a web site for the user . In this example the instance of the distributed system may be considered associated with the user because it is operating e.g. receiving requests providing web pages accessing data etc. on behalf of the user . As such the service provider computers may monitor these resources and collect operational information e.g. for which users is this resource operating . Additionally the service provider computers may utilize this information to tailor the issue notification and or resolution actions to each user . For example if the instance operating on behalf of the user is deployed in Europe and an issue notification is available for servers in Asia the resource information may be utilized to instruct the service provider computers not to notify the user of the issue in Asia. Additionally in some aspects the service provider computers may also receive user comments associated with the resources at . For example the service provider computers may receive comments that indicate degraded service associated with the one or more resources. The comments may be received from one or more different sources and or channels including but not limited to public bulletin boards or forums text message private or public messaging services social media services and or user interfaces provided by the service provider computers e.g. a comment screen a preference dashboard a help screen etc. .

The service provider computers may correlate the received information and or wait for a triggering event at . That is in some examples the service provider computers may utilize a correlation of the received and or stored infrastructure information and the received comments and or resource information to filter out user noise. Based at least in part on the correlated data the service provider computers may provide and or prepare the notifications at of flow . Additionally in some examples the service provider computers may wait on a triggering event at to provide the notifications . Triggering events may include but are not limited to infrastructure components being above a predetermined health level customer comments being above a predefined number and or the correlation of infrastructure information and user comments resource information being above a predefined level of relation. Based at least in part on the triggering event the service provider computers may also provide and or prepare the notifications at of flow . Further in some examples the notifications may be provided at based at least in part on a combination of the triggering event and the correlation results.

In some examples the networks may include any one or a combination of many different types of networks such as cable networks the Internet wireless networks cellular networks as well as other private and or public networks. While the illustrated example represents the users accessing the service provider computers over the networks the described techniques may equally apply in instances where the users interact with service provider computers via the one or more user devices over a landline phone via a kiosk or in any other manner. It is also noted that the described techniques may apply in other client server arrangements e.g. set top boxes etc. as well as in non client server arrangements e.g. locally stored applications etc. .

As described briefly above the user devices may interact with the service provider computers such as to store access and or manage data develop and or deploy computer applications and or host web content. The one or more service provider computers perhaps arranged in a cluster of servers or as a server farm may host the web service and or the distributed system . Other server architectures may also be used to host the web service and or distributed system. The service provider computers may be capable of handling requests from many user devices and serving in response various user interfaces that can be rendered at the user devices such as but not limited to the notification console . The service provider computers can host any type of website that supports user interaction including social networking sites online retailers informational sites blog sites search engine sites news and entertainment sites and so forth. As discussed above the described techniques can similarly be implemented outside of the notification console such as with other applications running on the user devices .

In some aspects the service provider computers may be any type of computing devices such as but not limited to mobile desktop thin client and or cloud computing devices such as servers. In some examples the service provider computers may be in communication with the user devices the computing devices of the distributed system and or the computing devices of the distributed sub systems via the networks or via other network connections. The service provider computers may include one or more servers perhaps arranged in a cluster as a server farm or as individual servers not associated with one another. These servers may be configured to host a website or combination of websites viewable via the user devices or a web browser accessible by a user .

The distributed system and or the distributed sub systems may be configured but are not limited to include servers network interfaces and or switches data stores racks of hosts host operating systems physical hosts power circuits data centers and or entire regions of devices. Some distributed sub systems may contain all or a subset of each of these components or other components. Additionally as used herein infrastructure components may include any or all of the hardware and or software resources of the distributed system including but not limited to particular regions of sub systems sets of sub systems and or portions of sub systems . For example receiving infrastructure component information may include receiving operational information associated with one or more servers of the distributed sub system .

In one illustrative configuration the service provider computers may include at least one memory and one or more processing units or processor s . The processor s may be implemented as appropriate in hardware computer executable instructions firmware or combinations thereof. Computer executable instruction or firmware implementations of the processor s may include computer executable or machine executable instructions written in any suitable programming language to perform the various functions described.

The memory may store program instructions that are loadable and executable on the processor s as well as data generated during the execution of these programs. Depending on the configuration and type of service provider computers the memory may be volatile such as random access memory RAM and or non volatile such as read only memory ROM flash memory etc. . The service provider computers or servers may also include additional storage which may include removable storage and or non removable storage. The additional storage may include but is not limited to magnetic storage optical disks and or tape storage. The disk drives and their associated computer readable media may provide non volatile storage of computer readable instructions data structures program modules and other data for the computing devices. In some implementations the memory may include multiple different types of memory such as static random access memory SRAM dynamic random access memory DRAM or ROM.

The memory and the additional storage both removable and non removable are all examples of computer readable storage media. Additional types of computer storage media that may be present in the service provider computers may include but are not limited to programmable random access memory PRAM SRAM DRAM RAM ROM electrically erasable programmable read only memory EEPROM flash memory or other memory technology compact disc read only memory CD ROM digital versatile discs DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the service provider computers . Combinations of any of the above should also be included within the scope of computer readable media.

Alternatively computer readable communication media may include computer readable instructions program modules or other data transmitted within a data signal such as a carrier wave or other transmission. However as used herein computer readable storage media does not include computer readable communication media.

The service provider computers may also contain communications connection s that allow the service provider computers to communicate with a stored database another computing device or server user terminals and or other devices on the networks . The service provider computers may also include I O device s such as a keyboard a mouse a pen a voice input device a touch input device a display speakers a printer etc.

Turning to the contents of the memory in more detail the memory may include an operating system and one or more application programs or services for implementing the features disclosed herein including a distributed system module . In some examples the distributed system module may be configured to maintain or otherwise store account information associated with requested resources data and or services e.g. of the distributed system and or the distributed sub systems . The account information may include account holder information the user ID the password acceptable answers to challenge questions etc. In some aspects the distributed system module may be configured to operate as a hypervisor or other virtualization system. For example the distributed system module may create generate instantiate or otherwise provide one or more resource instances i.e. a virtual machine instance of the distributed system to a user by providing one or more guest operating systems that may operate on behalf of the user . That is in some examples the user may operate a resource instance as if the operations were being performed by one or more processors of the user device . As such the resource instance may be considered a client entity acting on behalf of the user and or accessing data data sets data volumes data blocks etc. collectively of the distributed system .

Additionally in some examples the one or more service provider computers may include one or more application programs or services for implementing additional features disclosed herein. In some examples an application or module may be configured to implement host or otherwise manage data stored in a data set . As noted above in some aspects a user may make requests for attaching and or detaching data sets from one or more resource instances and or for backing up data of the attached data volumes. For example the user may be an application programmer testing code using a resource instance and an attached data set of the service provider computers . In this non limiting example while the code is being tested the user may have the data set attached to a resource instance of a server and may request that one or more I O operations be performed on the attached data set . During and or after testing of the code the user may make one or more backup requests of the attached data set . However in some examples once the testing is complete the user may request that the attached data set be detached from the resource instance.

Further other operations and or configurations utilizing the resource instance and or the data set may be envisioned as desired for implementing a web service on behalf of a user . For example a user may be a website owner using a resource instance and an attached data set of a server to host the website. In this non limiting example the data set may be attached to the resource instance while the website is operational. Additionally in some examples multiple resource instances may be instantiated to host the website and each resource instance may be attached to the data set or a plurality of data sets. Additionally as discussed above each resource instance may be hosted by servers or server farms located in different physical regions zones locations etc. e.g. in each distributed sub system .

Returning to the contents of the memory in more detail the distributed system module may also be configured to monitor infrastructure components of the distributed system . By monitoring the infrastructure components the service provider computers may be able to determine health levels of particular components and underlying hardware and or of software of the distributed system . In this way the distributed system module may able to determine when certain actions should be taken with respect to customer resources. Additionally in some examples the distributed system module may store the received and or determined information. The distributed system module may also receive information associated with particular resources that correspond to users . For example if a user has deployed via the service provider computers a resource instance the distributed system module may receive information about this particular instance e.g. with which users it is associated . Further the distributed system module may also be configured to receive comments questions and or information associated with performance of the overall distributed system or of particular resources. These comments questions and or information may be received by one or more channels including but not limited to social media services messaging services email services text services exposed APIs etc. Once received the distributed system module may correlate the infrastructure component information with the received resource information to filter out noise. In some examples correlating data may include determining and or ranking relative relationships. For example by correlating user complaints about slow data retrieval in Asia and infrastructure component information that indicates a possible data center issue in China the distributed system module may be able to determine an actual infrastructure issue.

In some examples based at least in part on infrastructure issue determinations the distributed system module may provide one or more notifications to the user via the notification console . Example notifications may include but are not limited to that a switch is not responding that a region is down and or that an instance is not responding. Additionally in some examples the notifications may indicate solely whether a customer s resources area affected or when a large radius of problems is affecting a customer s resources. As noted above a region may be any defined collection of resources. Further the notifications may indicate various levels of granularity regarding resources e.g. from the rack level to the top of rack switch level all the way to the region level . As seen in some notifications may indicate whether the issue was reported by the system or by a user. Further in some examples the notification console may be configured to also provide resolution options. For example resolution options may include but are not limited to moving resources to different servers deploying new resources e.g. to restart an instance and or automatically performing resolution. In some cases the distributed system module may automatically perform resolution based at least in part on a user s configuration settings. For example a user may configure the service to move resources whenever any issue is determined. However other configurations may allow for some level of health issues before performing remediative actions. For example a user may configure the service to only move resources after an instance or server becomes red or has three or more reported problems or identified issues. Configurations of user accounts may be fully customizable and may include checking boxes or selecting drop down options or other pre determined settings as well as providing instructions to the service provider computers e.g. in the form of XML or other code .

In one non limiting example the service provider computers and or the distributed system module may control distributed sub systems and which may be located in separate geographic regions e.g. identified by different area codes zip codes postal codes etc. . In a first example the switch may become non responsive and the distributed system module may become aware of this problem based at least in part on the regular monitoring performed on the distributed sub system . In another example an entire distributed sub system e.g. in a separate country may go down or become non responsive. However in some examples the distributed system module may not provide a notification of users until some triggering event occurs. For example a triggering event may be based at least in part on user configurations determined health levels an amount of correlated data e.g. above some level of confidence or the like. For example identification of a potential problem via monitoring the switch along with at least one or more users reporting problems with their system e.g. when their system utilizes the switch may be a triggering event. Thus in this example once enough reports of issues with the distributed sub systems are identified by the one or more reporting channels social media help lines etc. the distributed system module may provide a notification to users . In some aspects all users may be notified of the infrastructure issues e.g. on a public board or via some public messaging service . However in other examples only users that are affected by the non responsive switch may be notified. In this case the notifications may be via private messages and or may only be provided once users are logged in. Further in some examples the distributed system module and or the service provider computers may contract with one or more private social media services to provide private messages to affected users via the private social media service.

As noted above the architecture may include one or more user devices . The user devices may also be any type of computing device such as but not limited to a mobile phone a smart phone a personal digital assistant PDA a laptop computer a desktop computer a thin client device a tablet PC etc. In some examples the user devices may be in communication with the service provider computers via the networks or via other network connections. While the following description may regularly refer to interaction between the user devices and the service provider computers it is to be understood that any communication to or from the user devices may be via any appropriate computing device as desired.

In one illustrative configuration the user devices may include at least one memory and one or more processing units or processor s . The memory may include an operating system and one or more application programs or services for implementing the features disclosed herein including at least the notification console such as web browsers or dedicated applications e.g. smart phone applications tablet applications etc. . The notification console may be configured to receive store and or display a website or other interface for interacting with the service provider computers . Additionally the memory may store access credentials and or other user information such as but not limited to user IDs passwords and or other user information. In some examples the user information may include information for authenticating an account access request such as but not limited to a device ID a cookie an IP address a location or the like. In addition the user information may include a user provided response to a security question or a geographic location obtained by the user device .

In some examples the users may request that computing resources be allocated to instantiate a resource instances on behalf of the users . Further the resource instances may then be physically or virtually attached to one or more data stores via interaction between the user and the user device . Also utilizing the user device in some examples a user may request that backup copies of attached data sets be stored in additional memory spaces. For example a backup request may involve backing up one or more portions of data volumes or entire data volumes on behalf of the user . In some aspects however a backup request may involve only storing a backup of data that has changed within a data set since the last backup or since creation of the data set. For example if a first backup is performed that generates a backup of an entire data volume a second backup requested after only a few bytes of the volume have changed may only back up the particular few bytes of the volume that have changed. The user device may also be configured to receive organize store and or manage account settings and or preferences. For example configuration settings associated with how many instances to utilize what network ports to open whether to purchase reserved instances locations regions and or zones in which instances and or data should be hosted and or stored user preferred security settings load balancer settings etc. may be received from stored on behalf of and or managed on behalf of the user and or an account via the user device .

In some examples as noted above the distributed system module of may be configured to monitor infrastructure component information e.g. operational information and or social media or other data channels for potential issues with infrastructure components. Additionally as noted above the distributed system module may correlate the received information to find relationships that indicate actual issues thus potentially filtering out user or other noise. Further in some examples the distributed system module may also scan the text field in real time to receive and or analyze text entered by the user . This text may then be correlated with the other received and or stored information to determine and or identify real time notifications to be generated and or presented to the user . In some examples a real time pop up interface may be surfaced prior to a user finishing typing in the text field . The real time pop up interface may provide real time notifications corresponding to infrastructure issues that are related to the user s questions comments. The interface may also indicate if and or when automatic remediation is being performed e.g. based at least in part on health levels and or user configuration settings as described above . Further in some examples only public notifications may be provided in the real time pop up interface when the user is not logged in. However if the user is logged in the interface may be configured to provide more resource specific and or private information as well as public information to the user .

As noted in at least one example one or more aspects of the environment or architectures of may incorporate and or be incorporated into a distributed program execution service such as that hosted by the service provider computers of . depicts aspects of an example distributed program execution service in accordance with at least one example. The distributed program execution service may provide virtualized computing services including a virtual computer system service and a virtual data store service with a wide variety of computing resources interlinked by a relatively high speed data network. Such computing resources may include processors such as central processing units CPUs volatile storage devices such as RAM nonvolatile storage devices such as flash memory hard drives and optical drives servers such as the service provider computers described above with reference to one or more data stores such as the data set of as well as communication bandwidth in the interlinking network. The computing resources managed by the distributed program execution service are not shown explicitly in because it is an aspect of the distributed program execution service to emphasize an independence of the virtualized computing services from the computing resources that implement them.

The distributed program execution service may utilize the computing resources to implement the virtualized computing services at least in part by executing one or more programs program modules program components and or programmatic objects collectively program components including and or compiled from instructions and or code specified with any suitable machine and or programming language. For example the computing resources may be allocated and reallocated as necessary to facilitate execution of the program components and or the program components may be assigned and reassigned as necessary to the computing resources. Such assignment may include physical relocation of program components for example to enhance execution efficiency. From a perspective of a user of the virtualized computing services the distributed program execution service may supply computing resources elastically and or on demand for example associated with a per resource unit commodity style pricing plan.

The distributed program execution service may further utilize the computing resources to implement a service control plane configured at least to control the virtualized computing services. The service control plane may include a service administration interface . The service administration interface may include a web based user interface configured at least to enable users and or administrators of the virtualized computing services to provision de provision configure and or reconfigure collectively provision suitable aspects of the virtualized computing services. For example a user of the virtual computer system service may provision one or more virtual computer system instances . The user may then configure the provisioned virtual computer system instances to execute the user s application programs. The ellipsis between the virtual computer system instances and as well as with other ellipses throughout this disclosure indicates that the virtual computer system service may support any suitable number e.g. thousands millions and more of virtual computer system instances although for clarity only two are shown.

The service administration interface may further enable users and or administrators to specify and or re specify virtualized computing service policies. Such policies may be maintained and enforced by a service policy enforcement component of the service control plane . For example a storage administration interface portion of the service administration interface may be utilized by users and or administrators of the virtual data store service to specify virtual data store service policies to be maintained and enforced by a storage policy enforcement component of the service policy enforcement component . Various aspects and or facilities of the virtual computer system service and the virtual data store service including the virtual computer system instances the low latency data store the high durability data store and or the underlying computing resources may be controlled with interfaces such as application programming interfaces APIs and or web based service interfaces. In at least one example the control plane further includes a workflow component configured at least to interact with and or guide interaction with the interfaces of the various aspects and or facilities of the virtual computer system service and the virtual data store service in accordance with one or more workflows.

In at least one embodiment service administration interface and or the service policy enforcement component may create and or cause the workflow component to create one or more workflows that are then maintained by the workflow component . Workflows such as provisioning workflows and policy enforcement workflows may include one or more sequences of tasks to be executed to perform a job such as provisioning or policy enforcement. A workflow as the term is used herein is not the tasks themselves but a task control structure that may control flow of information to and from tasks as well as the order of execution of the tasks it controls. For example a workflow may be considered a state machine that can manage and return the state of a process at any time during execution. Workflows may be created from workflow templates. For example a provisioning workflow may be created from a provisioning workflow template configured with parameters by the service administration interface . As another example a policy enforcement workflow may be created from a policy enforcement workflow template configured with parameters by the service policy enforcement component .

The workflow component may modify further specify and or further configure established workflows. For example the workflow component may select particular computing resources of the distributed program execution service to execute and or be assigned to particular tasks. Such selection may be based at least in part on the computing resource needs of the particular task as assessed by the workflow component . As another example the workflow component may add additional and or duplicate tasks to an established workflow and or reconfigure information flow between tasks in the established workflow. Such modification of established workflows may be based at least in part on an execution efficiency analysis by the workflow component . For example some tasks may be efficiently performed in parallel while other tasks depend on the successful completion of previous tasks.

The virtual data store service may include multiple types of virtual data stores such as a low latency data store and a high durability data store . For example the low latency data store may maintain one or more data sets which may be read and or written collectively accessed by the virtual computer system instances with relatively low latency. The ellipsis between the data sets and indicates that the low latency data store may support any suitable number e.g. thousands millions and more of data sets although for clarity only two are shown. For each data set maintained by the low latency data store the high durability data store may maintain a set of captures . Each set of captures may maintain any suitable number of captures and of its associated data set respectively as indicated by the ellipses. Each capture and may provide a representation of the respective data set and at particular moment in time. Such captures and may be utilized for later inspection including restoration of the respective data set and to its state at the captured moment in time. Although each component of the distributed program execution service may communicate utilizing the underlying network data transfer between the low latency data store and the high durability data store is highlighted in because the contribution to utilization load on the underlying network by such data transfer can be significant.

For example the data sets of the low latency data store may be virtual disk files i.e. file s that can contain sequences of bytes that represent disk partitions and file systems or other logical volumes. The low latency data store may include a low overhead virtualization layer providing access to underlying data storage hardware. For example the virtualization layer of the low latency data store may be low overhead relative to an equivalent layer of the high durability data store . Systems and methods for establishing and maintaining low latency data stores and high durability data stores in accordance with at least one embodiment are known to those of skill in the art so only some of their features are highlighted herein. In at least one embodiment the sets of underlying computing resources allocated to the low latency data store and the high durability data store respectively are substantially disjoint. In a specific embodiment the low latency data store could be a Storage Area Network SAN target or the like. In this exemplary embodiment the physical computer system that hosts the virtual computer system instance can send read write requests to the SAN target.

The low latency data store and or the high durability data store may be considered non local and or independent with respect to the virtual computer system instances . For example physical servers implementing the virtual computer system service may include local storage facilities such as hard drives. Such local storage facilities may be relatively low latency but limited in other ways for example with respect to reliability durability size throughput and or availability. Furthermore data in local storage allocated to particular virtual computer system instances may have a validity lifetime corresponding to the virtual computer system instance so that if the virtual computer system instance fails or is de provisioned the local data is lost and or becomes invalid. In at least one embodiment data sets in non local storage may be efficiently shared by multiple virtual computer system instances . For example the data sets may be mounted by the virtual computer system instances as virtual storage volumes.

Data stores in the virtual data store service including the low latency data store and or the high durability data store may be facilitated by and or implemented with a block data storage BDS service at least in part. The BDS service may facilitate the creation reading updating and or deletion of one or more block data storage volumes such as virtual storage volumes with a set of allocated computing resources including multiple block data storage servers. A block data storage volume and or the data blocks thereof may be distributed and or replicated across multiple block data storage servers to enhance volume reliability latency durability and or availability. As one example the multiple server block data storage systems that store block data may in some embodiments be organized into one or more pools or other groups that each have multiple physical server storage systems co located at a geographical location such as in each of one or more geographically distributed data centers and the program s that use a block data volume stored on a server block data storage system in a data center may execute on one or more other physical computing systems at that data center.

The BDS service may facilitate and or implement local caching of data blocks as they are transferred through the underlying computing resources of the distributed program execution service including local caching at data store servers implementing the low latency data store and or the high durability data store and local caching at virtual computer system servers implementing the virtual computer system service . In at least one embodiment the high durability data store is an archive quality data store implemented independent of the BDS service . The high durability data store may work with sets of data that are large relative to the data blocks manipulated by the BDS service . The high durability data store may be implemented independent of the BDS service . For example with distinct interfaces protocols and or storage formats.

Each data set may have a distinct pattern of change over time. For example the data set may have a higher rate of change than the data set . However in at least one embodiment bulk average rates of change insufficiently characterize data set change. For example the rate of change of the data set may itself have a pattern that varies with respect to time of day day of week seasonally including expected bursts correlated with holidays and or special events and or annually. Different portions of the data set may be associated with different rates of change and each rate of change signal may itself be composed of independent signal sources for example detectable with Fourier analysis techniques. Any suitable statistical analysis techniques may be utilized to model data set change patterns including Markov modeling and Bayesian modeling.

As described above an initial capture of the data set may involve a substantially full copy of the data set and transfer through the network to the high durability data store may be a full capture . In a specific example this may include taking a snapshot of the blocks that make up a virtual storage volume. Data transferred between the low latency data store and high durability data store may be orchestrated by one or more processes of the BDS service . As another example a virtual disk storage volume may be transferred to a physical computer hosting a virtual computer system instance . A hypervisor may generate a write log that describes the data and location where the virtual computer system instance writes the data. The write log may then be stored by the high durability data store along with an image of the virtual disk when it was sent to the physical computer.

The data set may be associated with various kinds of metadata. Some none or all of such metadata may be included in a capture of the data set depending on the type of the data set . For example the low latency data store may specify metadata to be included in a capture depending on its cost of reconstruction in a failure recovery scenario. Captures beyond the initial capture may be incremental for example involving a copy of changes to the data set since one or more previous captures. Changes to a data set may also be recorded by a group of differencing virtual disks which each comprise a set of data blocks. Each differencing virtual disk may be a parent and or child differencing disk. A child differencing disk may contain data blocks that are changed relative to a parent differencing disk. Captures may be arranged in a hierarchy of classes so that a particular capture may be incremental with respect to a sub hierarchy of capture classes e.g. a capture scheduled weekly may be redundant with respect to daily captures of the past week but incremental with respect to the previous weekly capture . Depending on the frequency of subsequent captures utilization load on the underlying computing resources can be significantly less for incremental captures compared to full captures.

For example a capture of the data set may include read access of a set of servers and or storage devices implementing the low latency data store as well as write access to update metadata for example to update a data structure tracking dirty data blocks of the data set . For the purposes of this description data blocks of the data set are dirty with respect to a particular class and or type of capture if they have been changed since the most recent capture of the same class and or type . Prior to being transferred from the low latency data store to the high durability data store capture data may be compressed and or encrypted by the set of servers. At the high durability data store received capture data may again be written to an underlying set of servers and or storage devices. Thus each capture involves a load on finite underlying computing resources including server load and network load. It should be noted that while illustrative embodiments of the present disclosure discuss storage of captures in the high durability data store captures may be stored in numerous ways. Captures may be stored in any data store capable of storing captures including but not limited to low latency data stores and the same data stores that store the data being captured.

Captures of the data set may be manually requested for example utilizing the storage administration interface . In at least one embodiment the captures may be automatically scheduled in accordance with a data set capture policy. Data set capture policies in accordance with at least one embodiment may be specified with the storage administration interface as well as associated with one or more particular data sets . The data set capture policy may specify a fixed or flexible schedule for data set capture. Fixed data set capture schedules may specify captures at particular times of day days of the week months of the year and or any suitable time and date. Fixed data set capture schedules may include recurring captures e.g. every weekday at midnight every Friday at 2 am 4 am every first of the month as well as one off captures.

Additionally some any or all of the processes may be performed under the control of one or more computer systems configured with executable instructions and may be implemented as code e.g. executable instructions one or more computer programs or one or more applications executing collectively on one or more processors by hardware or combinations thereof. As noted above the code may be stored on a computer readable storage medium for example in the form of a computer program comprising a plurality of instructions executable by one or more processors. The computer readable storage medium may be non transitory.

In some aspects the one or more service provider computers shown in may perform the process of . The process may begin by monitoring infrastructure components of a distributed system at . As noted the infrastructure components may include but are not limited to physical hosts host OSs network interfaces switches power sources racks servers data centers or regions of the distributed systems and or distributed sub systems of . Additionally monitoring the components may include regularly polling the components regularly receiving information from the components and or regularly receiving information from a third party monitoring service. At the process may determine a health level of the infrastructure components. In some examples the health level may be based at least in part on the monitored or otherwise received performance information. The process may also receive information associated with operation of a resource instance at . This information may in some examples be utilized by the service provider computers to provide appropriate notifications i.e. targeted notifications to the users when notifications are provided. For example if a notification that a particular physical region has gone down is to be provided the information received at may be utilized to identify the appropriate users to which to provide the notification. However in other examples the information received at may be comments and or questions received from one or more of a plurality of different channels. For example this information may include feedback about performance of the system received from social media services bulletin boards web sites or the like.

At the process may determine whether a triggering event has occurred. In some examples a triggering event may a health level a user comment and or a correlation between the health level information received and or stored based at least in part on the monitoring of infrastructure components and or the user comments. The process may also identify one or more infrastructure impairments or issues at . Again these impairments and or issues may be based at least in part on correlation information. At the process may provide a notification of an identified infrastructure issue to a user and or to a group of users. The notifications may be private or public based at least in part on the medium channel and or whether the user is logged in. The process may then end at by enabling the user to select a remediative action. For example the notification may include one or more resolution options that may be performed. Via a user interface the user may select one or more of the resolution and or remediative options. Alternatively or in addition certain resolution actions may be performed automatically based at least in part on user settings.

If it is determined at that the health level is not below a predefined level i.e. that the system and or resource is healthy the process may return to to determine the health level of the system. In this way the health level may be regularly assessed such that each time the process attempts to determine whether the health level is below the predefined level the process will have the most current information. Alternatively if the process determines at that the health level is below the predefined level i.e. an issue the process may provide an indication of the health level to a user at . The process may also end at by enabling automatic modification operations of the client resource to resolve or otherwise remediate the determined issues. As noted above the automatic modification remediation and or resolution may be based at least in part the user configuration settings from .

Illustrative methods and systems for providing notification and or resolution of infrastructure issues are described above. Some or all of these systems and methods may but need not be implemented at least partially by architectures and or process such as those shown in above.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment. The application server can include any appropriate hardware and computer executable instructions for integrating with the data store as needed to execute aspects of one or more applications for the client device handling a majority of the data access and business logic for an application. The application server provides access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the web server in the form of HTML XML or another appropriate structured language in this example. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the web server. It should be understood that the web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein.

The data store can include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect. For example the data store illustrated includes mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log data which can be used for reporting analysis or other such purposes. It should be understood that there can be many other aspects that may need to be stored in the data store such as for page image information and to access right information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. In one example a user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information then can be returned to the user such as in a results listing on a web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser.

Each server typically may include an operating system that provides executable program instructions for the general administration and operation of that server and typically may include a computer readable storage medium e.g. a hard disk random access memory read only memory etc. storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

The various embodiments further can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile applications and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In embodiments utilizing a web server the web server can run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as RAM or ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically may include a number of computer executable applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware computer instructions including portable applications such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the a system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

Further the example architectures tools and computing devices shown in are provided by way of example only. Numerous other operating environments system architectures and device configurations are possible. Accordingly embodiments of the present disclosure should not be construed as being limited to any particular operating environment system architecture or device configuration.

Although embodiments have been described in language specific to structural features and or methodological acts it is to be understood that the disclosure is not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as illustrative forms of implementing the embodiments. Conditional language such as among others can could might or may unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments could include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without user input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

Other variations are within the spirit of the present disclosure. Thus while the disclosed techniques are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the invention to the specific form or forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the invention as defined in the appended claims.

The use of the terms a an the and similar referents in the context of describing the disclosed embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments of the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Preferred embodiments of this disclosure are described herein including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for the invention to be practiced otherwise than as specifically described herein. Accordingly this invention includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the invention unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

