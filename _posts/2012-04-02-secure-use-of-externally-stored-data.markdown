---

title: Secure use of externally stored data
abstract: A smart card reader is adapted to extract and store authentication data from a response APDU received from a smart card before generating a filtered response APDU, wherein the filtered response APDU does not include the authentication data. Beneficially, when the smart card reader transmits the filtered response APDU toward a destination, the biometric template data is less susceptible to interception, thereby providing a more secure solution.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08448875&OS=08448875&RS=08448875
owner: Research In Motion Limited
number: 08448875
owner_city: Waterloo, Ontario
owner_country: CA
publication_date: 20120402
---
The present application is a continuation application of U.S. patent application Ser. No. 13 037 328 filed Feb. 28 2011 which in turn is a continuation of U.S. patent application Ser. No. 12 325 582 filed Dec. 1 2008 which issued as U.S. Pat. No. 7 896 247 on Mar. 1 2011 both of which are herein incorporated by reference in their entirety.

The present application relates generally to authentication of access to a device and more specifically to the secure use of externally stored data to authenticate the access to the device.

Computing devices which have been ubiquitous for years are increasingly becoming critical tools to professionals and employees at all levels and in all positions. Government employees researchers law enforcement national security and intelligence officers and military personnel rely heavily on technology to perform their jobs. However people in these roles must be able to rely on their computing devices to provide a secure system of information storage that is not susceptible to intrusion by outsiders or unauthorized users. Biometric authentication is often considered for providing secure access to computing devices in use by people in such roles.

Biometric authentication relates to automatically and uniquely recognizing humans based upon one or more intrinsic physical or behavioral traits. Biometric authentication often involves technologies that measure and analyze human physical and behavioral characteristics. Examples of physical characteristics include fingerprints retinas irises facial patterns and hand measurements while examples of mostly behavioral characteristics include signature gait and typing patterns. Voice is considered a mix of both physical and behavioral characteristics.

To obtain access to a secure device a user provides a candidate physical characteristic a biometric candidate . Authenticating the user involves comparing the biometric candidate to a previously recorded corresponding biometric template. To facilitate this comparison the previously recorded corresponding biometric entry may be digitized and stored as the biometric template. Additionally collection of a biometric candidate from the user involves obtaining a digital representation of one or more physical characteristics of the user.

In many instances the device that obtains a biometric candidate is different from the device that uses the biometric candidate to authenticate a user and these devices may be distinct from a further device that stores biometric templates necessary for comparison during authentication.

A primary device that reads information from or writes information to a smart card typically does so using a peripheral device known as a smart card reader. The smart card reader may be connected e.g. through a directly wired connection or a wireless connection to the primary device. Specific software called a driver is generally executed by the primary device to facilitate reading from and writing to a memory component of the smart card using the smart card reader. The driver includes an application programming interface API that allows other programs to issue requests and commands that will be understood by the driver. An API generally comprises a source code interface that a computer system or program library provides in order to support requests for services to be made of it by a computer program.

When biometric templates are stored on a smart card and a smart card reader is used to obtain a biometric candidate one or both of the biometric candidate and the biometric template may be required to be transferred from the smart card reader to the primary device. Unfortunately as the biometric candidate and the biometric template are transferred to the primary device the security of these biometric items is decreased.

A message that is intended to carry biometric template data from a smart card reader to a device associated therewith may be adapted such that the biometric template data is removed. Advantageously since the biometric template data does not reach the device the biometric template data remains secret. Furthermore a process executing on the device that expects the message may continue to maintain an up to date record of the state of the smart card.

In accordance with an aspect of the present application there is provided at a smart card reader a method of making secure use of authentication data stored on a smart card by the smart card reader. The method may comprise receiving a response Application Protocol Data Unit APDU from the smart card the response APDU including authentication data from the smart card the response APDU indicating a destination extracting the authentication data from the smart card from the response APDU storing the authentication data from the smart card generating a filtered response APDU wherein the filtered response APDU does not include the authentication data from the smart card and transmitting the filtered response APDU toward the destination. In other aspects of the present application a smart card reader is provided for carrying out this method and a computer readable medium is provided for adapting a processor in a smart card reader to carry out this method.

Other aspects and features of the present disclosure will become apparent to those of ordinary skill in the art upon review of the following description of specific embodiments of the disclosure in conjunction with the accompanying figures.

In addition to the microprocessor other parts of the PC are shown schematically in . These may include a communications subsystem a short range communications subsystem . The PC may further include other input output devices such as a set of auxiliary I O devices a serial port . The PC may further include memory devices including a memory and a Random Access Memory RAM . Furthermore the PC may include various other device subsystems . The PC may have the capability to communicate with other computer systems via the Internet.

Operating system software executed by the microprocessor may be stored in a computer readable medium such as the memory but may be stored in other types of memory devices such as a read only memory ROM or similar storage element. In addition system software specific device applications or parts thereof may be temporarily loaded into a volatile store such as the RAM .

The microprocessor in addition to its operating system functions enables execution of software applications on the PC . A predetermined set of software applications that control basic device operations such as a Programmable Login Authentication Module may be installed on the PC . A smart card reader driver may also be installed on the PC to implement aspects of the present disclosure. As well additional software modules illustrated as a third party smart card middleware module .

Communication functions may be performed through the communication subsystem and through the short range communications subsystem .

The short range communications subsystem enables communication between the PC and other proximate systems or devices which need not necessarily be similar devices. For example the short range communications subsystem may include a Bluetooth communication module to provide for communication with the smart card reader where the smart card reader also implements a Bluetooth communication module. As another example the short range communications subsystem may include an infrared device to provide for communication with similarly enabled systems and devices.

The smart card reader microprocessor operates under stored program control with code or firmware being stored in the flash memory or other type of non volatile memory device or devices . As depicted in the stored programs e.g. firmware include an operating system program or code module and other programs or software application modules indicated generally by reference . The operating system module of the smart card reader further includes a smart card reader driver component .

The smart card reader driver component is responsible for coordinating communications between the smart card reader and the smart card and or the smart card reader driver of the PC . The operating system module code code for specific device application modules code for the smart card reader driver component or code components thereof may be temporarily loaded into a volatile storage medium such as the RAM . Received communication signals and other data may also be stored in the RAM . Additionally the storage component interface receives the smart card which may provide additional storage space for the smart card reader .

In one embodiment the smart card has a controller responsible for coordinating communications between the smart card and the smart card reader driver component of the smart card reader .

The stored program control i.e. software application modules for the smart card reader microprocessor may include a predetermined set of applications code components or software modules that control basic device operations for example management and security related control of the data of the smart card reader and may be installed on the smart card reader as a component of the software application modules during the manufacturing process. Further applications may also be loaded i.e. downloaded onto the smart card reader through the operation of the serial port the smart card reader short range communications subsystem or from the smart card . The downloaded code module or components are then installed by the user or automatically in the RAM or non volatile program memory e.g. the flash memory .

While the smart card reader driver component is shown to be an integrated portion of the operating system for security purposes e.g. individuals are not permitted to tamper with the smart card reader driver component the smart card reader driver component may be installed as one of the software applications so long as suitable security related precautions are taken to ensure that the smart card reader driver component cannot be modified or tampered with by unauthorized users.

The serial port may be a USB type interface port for interfacing or synchronizing with another device such as the PC . The serial port may be used to set preferences through an external device or software application or exchange data with a device such as the PC . Such data may be stored on the smart card that is plugged into the storage component interface of the smart card reader . The serial port is also used to extend the capabilities of the smart card reader by providing for downloads to the smart card reader of information or software including user interface information.

The short range communications subsystem provides an interface for communication between the PC and the smart card reader . In one embodiment the short range communications subsystem employs an infrared communication link or channel. In another embodiment the short range communications subsystem operates according to a wireless RF bus protocol such as Bluetooth . However the short range communications subsystem may operate according to any suitable local wired or wireless communication protocol so long as the short range communications subsystem of the PC operates using the same protocol thereby facilitating wireless communication between the PC and the smart card reader . Any communications mechanism and or protocol may be implemented for the short range communications subsystems so long as the PC can communicate with the smart card reader when the PC is no more than a predetermined distance away from the smart card reader .

Traditionally the third party smart card middleware is supplied by the manufacturer of the smart card . The operating system of the PC includes an API defining a smart card framework. The third party smart card middleware registers with the operating system of the PC so that calls to smart card framework aspects of the API can be appropriately handled by the smart card reader driver module . The third party smart card middleware is configured with appropriate commands for communicating with the smart card and is configured to maintain a record of the state of the smart card . To send a command to the smart card the third party smart card middleware interacts with the smart card reader driver module .

According to instructions received from the third party smart card middleware the smart card reader driver module may send a command to the smart card reader . Eventually the smart card reader sends a response to the smart card reader driver . The smart card reader driver provides the response to the third party smart card middleware and the third party smart card middleware updates the status of the smart card .

In computing Winlogon is a component of the Microsoft Windows operating systems that is responsible for handling a secure attention key loading a user profile on logon and optionally locking the computer responsive to a locking command or responsive to expiry of a predetermined time out period requiring another authentication step . The obtaining and verification of user credentials is left to other components.

Winlogon handles interface functions that are independent of authentication policy. Winlogon creates desktops for the workstation implements time out operations provides a set of support functions for a Programmable Login Authentication Module and takes responsibility for configuring Group Policy for machine and user.

The Programmable Login Authentication Module is a component of some Microsoft Windows operating systems that provides secure authentication and interactive logon services. The Programmable Login Authentication Module is a dynamically linked library DLL that is loaded in the context of the Winlogon process when the machine is started. The Programmable Login Authentication Module is responsible for handling a secure attention sequence typically Control Alt Delete and interacting with the user when this sequence is received. The Programmable Login Authentication Module is also responsible for starting initial processes for a user such as the Windows Shell when the user first logs on.

Winlogon is by default configured to use a default Login Authentication Module. Winlogon can be configured to use a different Login Authentication Module thereby providing for non standard authentication methods and or providing for a visual user interface that is different than the visual user interface that is provided by the default Login Authentication Module.

A file representative of the Programmable Login Authentication Module DLL is typically located in the System folder and can be replaced with a file representative of a customized Programmable Login Authentication Module DLL that provides alternative user identification and authentication procedures such as those authentication procedures that depend on communication with a biometric peripheral device.

Exemplary non standard authentication methods may involve a smart card reader and may involve identifying a user based on biometrics. Developers who implement a replacement Programmable Login Authentication Module provide implementations for a set of API calls which cover functionality such as displaying a workstation locked dialog processing the secure attention sequence in various user states responding to queries as to whether or not locking the workstation is an allowed action supporting the collection of user credentials on Terminal Services based connections and interacting with a screen saver. The Winlogon component is solely responsible for calling these APIs in the Programmable Login Authentication Module.

In one implementation of the system of the smart card stores a set of fingerprint templates. Additionally the Programmable Login Authentication Module see is configured to allow access to the PC based on authentication of a fingerprint obtained using the fingerprint sensor . Responsive to a user providing a finger to the fingerprint sensor authentication involves matching a fingerprint candidate obtained by the fingerprint sensor against a fingerprint template stored on the smart card . If a match is found then access to the PC is allowed.

It is desirable to keep secret both the fingerprint candidate obtained by the fingerprint sensor and the fingerprint template stored on the smart card . One strategy for maintaining secrecy of the fingerprint candidate and the fingerprint template is to avoid transmitting either of these over the link to the PC . Implementation of this strategy involves determining on the smart card reader whether a match exists between the fingerprint candidate and the fingerprint template. However a challenge is posed in the implementation of this strategy in that the third party smart card middleware is configured to maintain awareness of the state of the smart card at all times.

Sending a command to the smart card changes the state of the smart card . Once the state of the smart card has been altered by a command that did not originate from the third party smart card middleware an attempt by the third party smart card middleware to access the smart card may fail due to the state of the smart card being distinct from that which has been recorded by the third party smart card middleware .

Communication between the PC and the smart card reader and communication between the smart card reader and the smart card may be standardized to use Application Protocol Data Units APDUs where a standard structure for an APDU is defined by ISO 7816 Identification cards Integrated circuit s cards with contacts which is available from the International Organization for Standardization at www.iso.ch. There are various categories of APDUs including command APDUs and response APDUs. A command APDU is sent for instance by the smart card reader to the smart card . A command APDU contains a header and may contain data. A response APDU is sent by the smart card to the smart card reader . A response APDU contains a status word and may contain data.

A typical exchange of messages is presented in . In anticipation of using biometric authentication to allow access to the PC the Programmable Login Authentication Module may transmit a request to the third party smart card middleware where the request indicates a requirement for a set of fingerprint templates stored on the smart card . Responsive to the request the third party smart card middleware generates a request command APDU in a manner that will be understood by the smart card . The third party smart card middleware then transmits the request command APDU to the smart card reader driver . Responsive to receiving the request command APDU the smart card reader driver arranges the transmission of the request command APDU to the smart card reader . Responsive to receiving the request command APDU the smart card reader transmits the request command APDU to the smart card .

Responsive to receiving the request command APDU the smart card generates a response APDU A that includes a status word and the requested data e.g. fingerprint template data. The smart card transmits the response APDU A to the smart card reader . In turn the smart card reader transmits the response APDU A to the PC where the response APDU A is received and processed by the smart card reader driver . The smart card reader driver transmits the response APDU A to the third party smart card middleware where the response APDU A is processed and used to generate a response A that includes the data fingerprint template data from the response APDU A. The third party smart card middleware then transmits the response A to the Programmable Login Authentication Module .

It may be that the entirety of the data requested in the request command APDU does not fit into the structure of the single response APDU A. Accordingly the smart card may respond to the receipt of the request command APDU with multiple response APDUs. Illustrated in are three response APDUs that is two response APDUs in addition to the first response APDU A namely a second response APDU B and a third response APDU C. The second response APDU B and the third response APDU C follow the same path to the third party smart card middleware where the APDUs are used to generate a second response B and a third response C respectively. Like the first response A the second response B and the third response C are also transmitted to the Programmable Login Authentication Module by the third party smart card middleware .

It should be appreciated by a person of ordinary skill in the art that the smart card may generate many more than one two or three response APDUs to transfer requested fingerprint template data.

After the series of messages the Programmable Login Authentication Module has the fingerprint template data from the smart card and the third party smart card middleware has an accurate record of the state of the smart card .

Upon receiving notification of a logon attempt the Programmable Login Authentication Module transmits a fingerprint template to a component that has registered with the microprocessor of the PC as being responsible for fingerprint matching. The transfer of the fingerprint template to such a component for fingerprint matching also triggers transmission of a command to a component for fingerprint candidate obtaining. Notably there are many possibilities for the components. For example the microprocessor of the PC may be registered as the component responsible for fingerprint matching and a fingerprint sensor e.g. as an integral component not shown of the PC or as a single purpose peripheral not shown connected to the PC by way of the serial port may be registered as the component responsible for fingerprint obtaining.

In the case of the smart card reader as illustrated in the smart card reader can act as both the component responsible for fingerprint matching and the component responsible for fingerprint obtaining.

Accordingly and in view of upon receiving notification of a logon attempt from a user attempting to gain access to the PC the Programmable Login Authentication Module transmits a fingerprint template to the smart card reader driver . Responsively the smart card reader driver transmits a message to the smart card reader . The message includes the fingerprint template received from the Programmable Login Authentication Module and a set of commands to obtain a fingerprint candidate perform a comparison of the fingerprint candidate with the fingerprint template and respond with a result of the comparison. The smart card reader microprocessor upon receiving the message transmits an instruction to the fingerprint sensor to obtain a fingerprint candidate. After obtaining a fingerprint candidate from the user attempting to gain access the fingerprint sensor responds with the obtained fingerprint candidate . The smart card reader microprocessor then performs a comparison of the fingerprint template to the fingerprint candidate and transmits a result of the comparison to the PC . At the PC the smart card reader driver receives the result and transmits an indication of the result to the Programmable Login Authentication Module . Based on the indication of the result of the comparison the Programmable Login Authentication Module can either permit or deny access to the PC to the user attempting to gain access.

Notably since the obtaining of a fingerprint comparison result did not involve the smart card the state of the smart card did not change. Additionally there was no need to communicate through the third party smart card middleware .

For those particularly concerned with security of biometric data there are messages in the message exchanges represented by and that raise some alarm. One message of concern is the first response APDU A see especially as the first response APDU A is transmitted wirelessly from the smart card reader to the PC . Another message of concern is the message see which is transmitted wirelessly from the PC to the smart card reader . Each of these messages carries fingerprint template data and by doing so each message exposes the fingerprint template data to potential interception. Note that the second response APDU B and the third response APDU C are also of concern for the same reason.

An additional vulnerability arises by temporarily storing fingerprint template data on the PC . The PC is generally a more insecure platform than the smart card reader . For example malicious third party software could be installed on the PC so that when executed the malicious third party software may read fingerprint template data from the PC memory and transmit the fingerprint template data to an unauthorized receiving party.

For security reasons then it appears that it would be desirable to eliminate the transmission of the response APDUs from the smart card reader to the PC . However at least two problems arise when the response APDUs are not provided to the PC . The first problem relates to the third party smart card middleware . If the fingerprint template data are read from the smart card then the smart card will change state. If the third party smart card middleware does not receive a response APDU that includes a corresponding status update word the third party smart card middleware will be maintaining an incorrect record of the current state of the smart card . The incorrect state may lead to problems in later operation if later operation involves access to the smart card . The second problem relates to the Programmable Login Authentication Module . Future operation of the Programmable Login Authentication Module has been based on the Programmable Login Authentication Module maintaining a set of fingerprint template data.

In overview it is proposed herein to alter the Programmable Login Authentication Module so that maintenance of fingerprint template data by the Programmable Login Authentication Module is not necessary and to filter response APDUs at the smart card reader so that fingerprint template data are not transmitted from the smart card reader to the PC . With reduced traffic of fingerprint template data between the smart card reader and the PC the security of the fingerprint data in general is improved.

More particularly it is proposed herein to implement filtering at the smart card reader microprocessor . The filtering is to be configured to apply to response APDUs received from the smart card and perhaps may be configured to apply to command APDUs received from the PC . The smart card reader microprocessor is to alter the response APDU to extract fingerprint template data from the response APDU before transmitting a filtered response APDU to the PC .

Consider a message exchange in which is based on the message exchange presented in . Notably due to the filtering at the smart card reader the Programmable Login Authentication Module will not be receiving fingerprint template data read from the smart card in response to requesting the fingerprint template data. Accordingly the Programmable Login Authentication Module may adapted so as to not expect that a request for fingerprint template data will actually result in receipt of fingerprint template data. As part of the adaptation of the Programmable Login Authentication Module the Programmable Login Authentication Module may be configured to send a filter activation message to the smart card reader driver ahead of sending a fingerprint template request message to the third party smart card middleware . Upon receipt the smart card reader driver may directly forward the filter activation message to the smart card reader .

Responsive to receiving the fingerprint template request the third party smart card middleware generates a request command APDU in a manner that will be understood by the smart card . The third party smart card middleware then transmits the request command APDU to the smart card reader driver . Responsive to receiving the request command APDU the smart card reader driver arranges the transmission of the request command APDU to the smart card reader . Responsive to receiving the request command APDU the smart card reader transmits the request command APDU to the smart card .

Responsive to receiving the request command APDU the smart card generates a response APDU A that includes a status word and the requested data e.g. fingerprint template data. The smart card transmits the response APDU A to the smart card reader . The microprocessor of the smart card reader then carries out a filtering method example steps of which are presented in .

Initially the microprocessor receives step the response APDU A. Responsive to receiving the response APDU A the microprocessor extracts step the fingerprint template data from the response APDU A and stores step the fingerprint template data locally on the smart card reader e.g. in the RAM see . The microprocessor then generates step a filtered response APDU A. Once the filtered response APDU A has been generated the microprocessor transmits step the filtered response APDU A to the PC .

The filtered response APDU A generated step by the microprocessor may take one of several forms. It is typical that a response APDU should have a header section that includes an indication of a length of a payload section. After extraction of the fingerprint template data the microprocessor may generate the filtered response APDU A to include an indication of a zero length payload section. Alternatively the microprocessor may generate the filtered response APDU A to include a payload of usual length but rather than carrying fingerprint template data the payload may carry a null. That is the payload may be filled with zero values. Further alternatively the microprocessor may arrange the payload of the filtered response APDU A to carry dummy fingerprint template data. Dummy fingerprint template data may be a fingerprint template constructed from random values or may be an actual fingerprint template chosen such that exposure of the actual fingerprint template does not reduce the security of the communication system of .

Upon receipt of the filtered response APDU A at the PC the filtered response APDU A is processed by the smart card reader driver . The smart card reader driver transmits the filtered response APDU A to the third party smart card middleware which processes the filtered response APDU A to generate a filtered response A that includes whatever payload if any has been inserted into the filtered response APDU A by the microprocessor at the smart card reader . The third party smart card middleware then transmits the filtered response A to the Programmable Login Authentication Module .

Advantageously by processing the filtered response APDU A the third party smart card middleware maintains an accurate record of the state of the smart card .

It may be that the entirety of the data requested in the request command APDU does not fit into the structure of the single response APDU A. Accordingly the smart card may respond to the receipt of the request command APDU with multiple response APDUs. Illustrated in are three response APDUs that is two response APDUs in addition to the first response APDU A namely a second response APDU B and a third response APDU C. The second response APDU B and the third response APDU C are also processed by the microprocessor of the smart card reader to lead to a second filtered response APDU B and a third filtered response APDU C respectively. The smart card reader transmits the second filtered response APDU B and the third filtered response APDU C to the PC . At the PC the filtered response APDUs reach the third party smart card middleware where the APDUs are used to generate a second filtered response B and a third filtered response C respectively. Like the first filtered response A the second filtered response B and the third filtered response C are also transmitted to the Programmable Login Authentication Module by the third party smart card middleware . Without regard to whether a given response APDU contains an entire fingerprint template or just a portion of a fingerprint template the response APDU may be considered to include data related to a biometric template more specifically data related to a fingerprint template.

It is notable that according to the above mode of operation the Programmable Login Authentication Module does not store fingerprint template data from the smart card . As such upon receiving notification of a logon attempt from a user attempting to gain access to the PC rather than transmit a fingerprint template as shown as fingerprint template in the Programmable Login Authentication Module transmits a fingerprint template index message see to the smart card reader driver . It is expected that the fingerprint template data extracted and stored by the microprocessor of the smart card reader is indexed in such a manner that a particular finger may be referenced. Therefore the Programmable Login Authentication Module can cause the display of the PC to present a dialog requesting a particular finger be swiped at the fingerprint sensor of the smart card reader . Correspondingly the fingerprint template index message can identify an index of the particular finger.

Upon receiving the fingerprint template index message the smart card reader driver transmits a fingerprint template index message to the smart card reader .

The fingerprint template index message includes the fingerprint template index received from the Programmable Login Authentication Module and a set of commands to obtain a fingerprint candidate perform a comparison of the fingerprint candidate with the stored fingerprint template corresponding to the fingerprint template index and respond with a result of the comparison. The smart card reader microprocessor upon receiving the fingerprint template index message transmits an instruction to the fingerprint sensor to obtain a fingerprint candidate. After obtaining a fingerprint candidate from the user attempting to gain access the fingerprint sensor responds with the obtained fingerprint candidate . The smart card reader microprocessor then performs a comparison of the indexed stored fingerprint template to the fingerprint candidate and transmits a result of the comparison to the PC . At the PC the smart card reader driver receives the result and transmits an indication of the result to the Programmable Login Authentication Module . Based on the indication of the result of the comparison the Programmable Login Authentication Module can either permit or deny access to the PC to the user attempting to gain access.

As discussed briefly above the third party smart card middleware is specific to the manufacturer of the smart card . Accordingly the PC may have a library of third party smart card middleware modules one third party smart card middleware module for each of a set of smart manufacturers. Often the manufacturers differ in the content that is placed in command APDUs by the third party smart card middleware and in the content that is placed in response APDUs by the smart card . As such it is anticipated that a single filtering implementation executed on the microprocessor of the smart card reader will not be suitable for filtering response APDUs from smart cards produced by all smart card manufacturers. It is therefore expected that manufacturer specific filtering implementations may be utilized on the smart card reader in the same way that manufacturer specific third party smart card middleware modules are utilized on the PC .

A given filtering implementation can be queried to determine whether the given filter is suitable to filter response APDUs for a particular type of smart card. A filter manager executed on the microprocessor of the smart card reader can query each filtering implementation also executed on the microprocessor to respond with an answer to reset code. The filter manager can also query a given smart card for the answer to reset code. If the filter manager determines a match among the two answer to reset codes the given filtering implementation is considered suitable to filter response APDUs generated at the given smart card.

In some instances it may be advantageous to configure the microprocessor of the smart card reader to intercept command APDUs before the command APDUs are transmitted from the smart card reader to the smart card . The microprocessor may alter an intercepted command APDU to generate a filtered command APDU and then transmit the filtered command APDU to the smart card .

Beneficially a given filtering implementation executed on the microprocessor of the smart card reader may be configured to determine that there has been a problem obtaining a fingerprint candidate.

Although the biometric candidates and biometric templates discussed in the foregoing are based on fingerprints it should be appreciated by a person of skill in the art that the systems and methods outlined hereinbefore apply equally to other biometrics such as those based on retinas irises facial patterns hand measurements signature gait typing patterns and voice.

It should similarly be appreciated that the data from the smart card that is extracted from a response APDU and stored at the smart card reader need not necessarily comprise data related to a biometric template. There may be situations in which it may be advantageous to extract other types of authentication data from the smart card e.g. social security number digital photograph and store the data from the smart card before transmitting a filtered response APDU to the destination.

The above described embodiments of the present application are intended to be examples only. Alterations modifications and variations may be effected to the particular embodiments by those skilled in the art without departing from the scope of the application which is defined by the claims appended hereto.

