---

title: Method and apparatus for analyzing a document
abstract: Method, apparatus, and computer-readable medium are provided for analyzing a document including text. In one example, a method for identifying patterns in a document is described. The method includes identifying a plurality of candidate phrases in the document based on candidate identification criteria, grouping the candidate phrases of the plurality of candidate phrases with a phrase family based on family criteria and comparison between candidate phrases of the plurality of candidate phrases to obtain consistent phrases, and, for remaining phrases not meeting all of the candidate identification criteria, associating at least one of the remaining phrases with a phrase family based on inconsistent phrase criteria to obtain inconsistent phrases. Identified in this manner, the inconsistent phrase may be displayed via a user interface to permit a user the opportunity to determine whether an inconsistent phrase requires modification.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09171069&OS=09171069&RS=09171069
owner: FREEDOM SOLUTIONS GROUP, LLC
number: 09171069
owner_city: Downers Grove
owner_country: US
publication_date: 20120731
---
This application is related to co pending U.S. patent application Ser. No. 13 343 423 filed on Jan. 4 2012.

Tools exist to aid with electronic document analysis proofreading and editing. Generally such tools are software programs capable of interfacing with word processing software e.g. Microsoft Word used to create the electronic document. For example conventional tools are capable of obtaining extensive information about electronic documents that are normally opened in a word processing software program. This information may include characteristics describing the electronic document itself and or characteristics describing the electronic document s text.

With regard to characteristics describing an electronic document itself these characteristics may include information describing the number of paragraphs in the document the size of the document the creation date of the document the last edit date of the document security restrictions associated with the document the file name of the document etc. With regard to characteristics describing the electronic document s text these characteristics may include information describing primary attributes of the text e.g. whether specific text is capitalized and positional information regarding the text and secondary attributes of the text e.g. whether specific text is italicized bolded and or underlined the font size of specific text the font type of specific text etc. .

After obtaining characteristics describing an electronic document itself and the text within a given electronic document these conventional tools analyze the text and the characteristics in order to provide additional useful information about the document. Frequently this additional useful information is provided via a user interface such as a graphical user interface displayed on a display screen. In this manner a person using such a conventional tool can review the useful additional information and make changes to the underlying electronic document as needed. By way of example and not limitation such additional useful information may include the following information about a given electronic document information identifying all of the defined terms in the document information identifying potentially inconsistent uses of phrases within the document information identifying possible editing mistakes within the document information identifying possible incomplete segments of the text within the document etc.

The user interface that displays the useful additional information is often provided in a manner that allows it to be viewed simultaneously with the electronic document itself. Furthermore the user interface is frequently interactive such that if a user selects e.g. by clicking a mouse a particular piece of information being displayed in the user interface e.g. a particular defined term among a list of defined terms the view of the document in the word processing software user interface will change to e.g. show the first instance of the defined term that was selected within the document. Accordingly existing tools for performing document analysis editing and proofreading provide useful mechanisms for ensuring consistency and preventing ambiguity within electronic documents such as legal contracts.

However existing tools for performing document analysis editing and proofreading also suffer from a number of drawbacks. For example existing tools for performing document analysis editing and proofreading are known to require user intervention in order to update the tool s user interface after a change has been made to the text in the underlying document under analysis. Accordingly a need exists for a method and apparatus designed to generate an updated user interface for displaying additional useful information without user intervention following a change to the text of the electronic document under analysis.

Another drawback of existing tools is the poor performance of existing tools in finding subtle errors and in differentiating between variations in the language of a document and unintended inconsistencies in a document. Existing tools can be under inclusive i.e. not identifying unintended inconsistencies or over inclusive i.e. identifying normal variations in the language of a document . These drawbacks make the identification of errors and the correction of documents more difficult.

The instant disclosure describes techniques and an apparatus for analyzing a document including text. In one embodiment a method for identifying patterns in a document is described. The method includes identifying a plurality of candidate phrases in the document based on candidate identification criteria grouping the candidate phrases of the plurality of candidate phrases with a phrase family based on family criteria and comparison between candidate phrases of the plurality of candidate phrases to obtain consistent phrases and for remaining phrases not meeting all of the candidate identification criteria associating at least one of the remaining phrases with a phrase family based on inconsistent phrase criteria to obtain inconsistent phrases.

In another embodiment the method further includes generating an inconsistent phrase user interface including a representation of the phrase family the consistent phrases and the inconsistent phrases.

In another embodiment the method further includes generating a phrase criteria user interface that includes an adjustable candidate identification criteria control an adjustable family criteria control and an adjustable inconsistent phrase criteria control.

In still another embodiment the candidate identification criteria include at least one of a frequency of a phrase in the document a number of words in the phrase and a number of characters in the phrase.

The following description of the embodiments is merely exemplary in nature and is in no way intended to limit the disclosure its application or uses. illustrates an apparatus for analyzing a document including text in accordance with the present disclosure. As used herein a document such as document includes any electronic document capable of being viewed using any known word processing program. Apparatus includes one or more controllers an index engine a pattern engine and a user interface . In practice the functionality of apparatus may be implemented for example using the device of as described below. In one example the index engine and pattern engine may comprise software modules configured to perform the functionality described herein when executed by a suitable processing device such as device of . In one example the user interface is implemented as display data configured for display on a suitable display device such as display of .

Via the controller s apparatus is configured to communicate with for example a word processing program e.g. Microsoft Word not shown that has an electronic document opened in it. Although controller s are illustrated as being directly connected to document those having ordinary skill in the art will appreciate that information may be communicated between the document and apparatus over one or more private or public communication networks databus ses or other communication channels equally well using suitable techniques known in the art.

The illustrated controller s operate to interact with and manage communications between the document index engine pattern engine and user interface . For example the controller s obtain text from the document to provide obtained text . In one example the text is automatically furnished from the word processing program within which the document is open to the apparatus i.e. pushed in order to provide the obtained text . However in another embodiment the apparatus fetches the text from the document i.e. pulls the text in order to provide the obtained text . In either case techniques for obtaining text from a document opened in a word processing program are well known to those having ordinary skill in the art e.g. via a suitable application programming interface API and will not be discussed in additional detail in the instant disclosure.

Controller s are further operative to provide the obtained text to the index engine . The index engine is operative to generate a plurality of indices representative of the obtained text . In one example the index engine is operative to generate at least one document level index and at least one paragraph level index. For example in an embodiment the index engine parses the obtained text from beginning to end to identify occurrences of new paragraphs. Each new occurrence of a paragraph is created as a new entry in the at least one paragraph level index. While the instant disclosure discusses generating indices on a document level and a paragraph level other levels of abstraction e.g. sentence level word level character level may be equally employed as a design choice. Furthermore the instant disclosure recognizes that it may be desirable to generate one or more paragraph level indices that only contain paragraphs from the document s text that are numbered. In this example the indices may include both the number assigned to that paragraph e.g. 5 for the fifth numbered paragraph in a document as well as the text included within that paragraph.

As will be discussed in additional detail below with regard to each document level index includes a copy of all of the text in an entire document such as document . Conversely each paragraph level index only includes data representative of all of the text in a given paragraph of an entire document such as document . Thus if document included two paragraphs worth of text in one example index engine would be operative to generate 1 a single document level index including a copy of all of the text in the entire document i.e. all of the text in each of the two paragraphs and 2 two separate paragraph level indices where each individual paragraph level index includes a copy of all of the text within a single paragraph of the document. As will be discussed in greater below with regard to in many instances there will be a plurality of indices produced on both a document level and a paragraph level.

Once the plurality of indices representative of the obtained text have been generated the index engine may provide the plurality of indices to the controller s for further processing. The controller s are operative to generate the user interface based on the plurality of indices representative of the obtained text .

The user interface of is shown in a Defined Terms mode. In the Defined Terms mode the user interface includes categories of terms e.g. letters words and or phrases within the document s text that appear to be incompletely defined or incorrectly used based upon determinations made by the pattern engine in line with the functionality of the pattern engine described below . For example a first category is labeled Used but Not Defined 10 . As an initial matter the 10 indicates that the document s text includes ten terms that are used within the document but that are not supplied with a formal definition within the document text . With continued reference to the category Used but Not Defined the term Accountant is contained in the list of terms for this category. This indicates for example that the term Accountant is used somewhere within the document text but that the term Accountant is not supplied with a formal definition within the text .

The techniques employed for determining which specific terms should occupy categories such as Used but Not Defined are known by those having ordinary skill in the art and will not be discussed in detail herein. However other categories that may be processed by the pattern engine and suitably included within a user interface in a Defined Terms mode include Defined but Not Used Used Before Defined Duplicated Terms Improper Capitalization Out of Alphabetical Order and Defined Terms. 

The Defined but Not Used category lists terms that are supplied with a formal definition in the text e.g. within a Definitions section of the text but that are not used anywhere else in the text. The Used Before Defined category lists terms that are generally used in the text before their definition however certain exceptions to this rule may exist. For example page 1 of the document may include the term 120 unit Project Property however this term might not be formally defined until page 5 of the document. Thus the term 120 unit Project Property would be displayed within the Used Before Defined category of the user interface in this example. The Duplicated Terms category includes terms that are for example of concern because they are defined twice within the same document . The Improper Capitalization category includes terms for example that are defined within the document e.g. if the term Accountant is formally defined within the document but that are used within the document without the expected capitalization e.g. the term accountant is found elsewhere in the document without the first a being capitalized . The Out of Alphabetical Order category includes defined terms that are listed out of alphabetical order. For example where the document includes a Definitions section oftentimes the terms that are defined within that section are listed in alphabetical order e.g. Accountant is likely defined before Cost Certification . Thus the Out of Alphabetical Order category lists terms that appear to be out of alphabetical order within the document s text . Finally the Defined Terms category includes terms that are properly defined as determined by the pattern engine .

Although not shown in the user interface may also operate in additional modes beyond the Defined Terms operating mode described above. For example the user interface may also operate in an Inconsistent Phrases operating mode whereby phrases that are not used consistently within the text are identified. In another example the user interface may operate in an Editing Mistakes operating mode as will be described in more detail later whereby common editing mistakes are identified and displayed. For example anytime an open bracket is provided without a complementary closed bracket this editing mistake may be displayed on the user interface . The foregoing exemplary operating modes are not intended to be exhaustive and those having ordinary skill in the art will appreciate that other similar operating modes for the user interface may also be provided in accordance with the instant disclosure. As those of ordinary skill in the art will appreciate the techniques described herein are equally applicable to the various Defined Terms Inconsistent Phrases and Editing Mistakes operating modes described herein or other modes the operation of which is dependent upon editable documents.

With continued reference to the user interface is operative to receive input from a user e.g. though user interaction with a mouse keyboard microphone or any other suitable input mechanism known in the art. For example if a user were to click a mouse cursor over the term Accountant found within the category Used but Not Defined the view in the word processing program s user interface would change to show the selected instance of the term Accountant within the document. In one example this functionality may be accomplished by apparatus communicating with the word processing program within which the document is opened via the API discussed above. For example the apparatus may instruct the word processing program to display the particular instance of the selected term. In one example the apparatus may further instruct the word processing program via the API to highlight the term that was selected to further delineate the location of the sought after term. The apparatus may use paragraph identification information and relative position information regarding the selected term to instruct the word processing program exactly what to display.

Returning to the discussion of the operation of the apparatus of once the index engine generates the plurality of indices representative of the obtained text this information may be provided to the pattern engine via the controller s . In addition the pattern engine may be provided with secondary attributes data . The secondary attributes data is data describing which text of the document has been underlined italicized and or bolded and as illustrated is obtained by the controller s from the document via for example the API. In one embodiment the secondary attributes data may be obtained at the same time as the initial parsing of the text . In another embodiment the secondary attribute data may be obtained after the initial parsing of the text . For example the secondary attribute data may be obtained when it is needed by the pattern engine to identify patterns in the obtained text . As such in one example the secondary attribute data may be only obtained as needed for example by the pattern engine in identifying patterns within the obtained text . In another example the secondary attribute data may be stored for example in storage discussed below with regard to . In any event based upon the plurality of indices representative of the obtained text and the secondary attributes data the pattern engine is operative to generate pattern data . Pattern data describes a particular term contained within the text that should be categorized and displayed by the user interface in accordance with patterns corresponding to the various operating modes as provided above.

In one example the pattern engine relies upon user supplied rules i.e. patterns to identify terms within the text that meet any of the characteristics of for example the Defined Terms operating mode of the user interface described above. For example a user supplied rule might provide that a word phrase that is 1 found within quotation marks and 2 has the first letter capitalized should be treated as a defined term. Accordingly when the pattern engine identifies a term from the text such as Accountant e.g. by parsing one or more of the plurality of indices representative of the obtained text it treats that term as a defined term and includes that information in the pattern data . Thus because the pattern data is supplied to the user interface via the controller s the user interface may display the term Accountant within the Defined Terms category e.g. when the user interface is in the Defined Terms operating mode .

In another example the pattern engine relies upon pre defined rules to identify terms within the text that meet any of the characteristics of for example the Used but Not Defined Terms operating mode of the user interface described above. This embodiment operates similarly to the embodiment discussed above i.e. the user supplied rule embodiment however in this embodiment the pattern engine relies upon pre defined e.g. hard coded rules in performing its processing. For example a pre defined rule might state that terms having their first letter capitalized should be considered for inclusion in the Used but Not Defined Terms category. Another pre defined rule might further refine the universe of candidate Used but Not Defined Terms to those terms having their first letter capitalized that are not found within the Table of Contents section of the document e.g. because most terms have their first letter capitalized in the Table of Contents . Regardless after identifying patterns in the text consistent with the pre defined rules the pattern engine is operative to include that information in the pattern data for use by the user interface .

The foregoing discussion of the operation of apparatus describes an initialization phase that is instituted the first time that the apparatus is used to analyze a document including text . However frequently a user will want to edit the text of the underlying document while still utilizing the apparatus e.g. while retaining the user interface on a display screen . Accordingly it is one object of the present disclosure to provide a user interface that updates substantially in real time to reflect any changes to the text of the underlying document without user intervention.

To this end in one example the apparatus is operative to monitor the document for a change in the text . For example the controller s may monitor the document for a change in the text . As used herein monitoring may include for example periodically polling the word processing software that the document is open in to determine whether the text has changed since a previous poll. In another example the word processing software may notify for example the controller s that the text has been changed by providing for example a notification of a change event . In this manner the apparatus effectively listens for a change event where a change event includes an indication that the text has been modified in any way since a previous accounting of the text in the document by apparatus e.g. a deletion insertion or modification of the text . For example those having skill in the art will appreciate that existing word processing software e.g. Microsoft Word is capable of tracking the occurrence of and sending a notification of a change event.

Upon detecting a change in the text e.g. by polling the word processing software or receiving a change event notification the apparatus obtains the changed text from the document . As used herein the changed text may include 1 only that portion of the original text that was changed 2 a new copy of all of the text from the document including the changed text or 3 the changed text and some portion of the original text that remained unchanged. For example in one embodiment where text in a particular paragraph of the document has changed e.g. one word is changed in the paragraph the entire paragraph including the changed text collectively changed text is provided to the apparatus . Accompanying the changed text is location information identifying for example 1 the paragraph number of the paragraph including the changed text and 2 the location within that paragraph of the changed text. Regardless after obtaining the changed text the controller s pass the changed text on to the index engine for further processing. The index engine is operative to update the plurality of indices such that the updated plurality of indices are representative of the changed text . The updated plurality of indices are then provided to the pattern engine and the user interface .

Upon receiving the updated plurality of indices the pattern engine is operative to update the pattern data to reflect the changed text . Accordingly the updated pattern data and the updated plurality of indices are used by the controller s to generate an updated user interface reflecting the changed text without user intervention. As used herein the phrase without user intervention means that a user does not need to take any affirmative action other than changing the text in the underlying document in order for the user interface to update. This stands in stark contrast to existing tools for analyzing a document where users are required to refresh a user interface e.g. click the mouse cursor on a refresh button that triggers an update process after making changes to the text of the underlying document. In contrast in line with the teachings of the present disclosure merely changing the text in the document is sufficient to trigger the process whereby the apparatus automatically updates the user interface to reflect the changed text .

Referring now to a detailed view of one example of the plurality of indices representative of the obtained text is provided. As shown in in one example the plurality of indices representative of the obtained text may include document level indices and paragraph level indices . In this example the document level indices include a normalized word index a non normalized word index a normalized character index and a non normalized character index . In one example the normalized indices and the non normalized indices may be generated simultaneously from the obtained text .

The document level normalized word index includes normalized words . Normalized words include all words in the obtained text . Stated another way normalized words include all words in the entire document however the words have been normalized. As used herein normalized means that all of the capitalization associated with the words in the obtained text has been removed. Consider an example where the only text in a document is the phrase See Spot Run i.e. the obtained text is simply See Spot Run . In this scenario the document level normalized word index would include the normalized words see spot run . Thus the document level normalized word index includes a normalized set of all of the words in the entire document where spaces and punctuation marks are treated as being words for the purposes of indexing . Stripping the words of any capitalization information in this manner can provide for processing efficiency gains when for example performing pattern recognition with the pattern engine .

Conversely the document level non normalized word index includes non normalized words . Non normalized words include all of the words in the obtained text however these words have not been normalized. That is to say the non normalized words retain capitalization information associated with the obtained text . Referring back to the above example where the only text in the document is the phrase See Spot Run the document level non normalized word index would include the non normalized words See Spot Run . Retaining capitalization information associated with the words in the document assists with for example pattern recognition by the pattern engine . For example defined terms within a document often start with a capital letter. Accordingly the pattern engine can parse the non normalized word index in order to identify candidate defined terms.

The document level normalized character index includes normalized characters . Normalized characters include all characters in the obtained text . However in line with the above discussion on normalization all of the capitalization information associated with the obtained text has been removed. Thus continuing with the example provided above if the only text in the document is the phrase See Spot Run then the document level normalized character index would include the normalized characters see spot run . As with the word indices discussed above spaces and punctuation marks are treated as characters for the purposes of indexing.

The document level non normalized character index includes non normalized characters . Non normalized characters include all of the characters in the obtained text however these characters have not been normalized. That is to say the non normalized characters retain capitalization information associated with the obtained text . Again referring back to the example provided above if the only text in the document is the phrase See Spot Run then the document level non normalized character index would include the non normalized characters See Spot Run .

The paragraph level indices function identically to the document level indices . The only difference being that in this example a normalized word index non normalized word index normalized character index and non normalized character index are provided for each paragraph in the document . Thus if all of the text in the document is broken up into two paragraphs then in this example there would be eight 8 separate paragraph level indices created for that document . These paragraph level indices may exist in addition to any document level indices that are also generated for a given document . While the foregoing discussion describes indices being on either a document level or a paragraph level those having ordinary skill in the art will appreciate that indices could suitable be provided on any desirable level of abstraction e.g. on a sentence level .

The index engine is able to identify which portions of the obtained text belong to which paragraphs within the document according to unique identifiers assigned to each paragraph in the document. In one embodiment the word processing software used to create the document includes a function that allows each paragraph to be assigned a unique identifier. That is the word processing software that the document is open in is able to provide the architecture for the unique identifier while the controller for example is capable of assigning a unique value to each paragraph. For example a unique new sequential value may be assigned to each new paragraph in a document by apparatus . Thus if the document originally included five 5 paragraphs worth of text apparatus would be operative to assign five unique Ids one to each paragraph worth of text e.g. ID numbers 1 5 . Then if a new paragraph was added this new paragraph could be assigned its own unique ID e.g. ID number 6 . Apparatus is operative to keep track of the unique IDs assigned to each paragraph. In this manner apparatus may instruct the word processing program to change the view within its user interface to depict for example the first instance of a Defined Term when that defined term has been selected by a user from user interface .

Referring now to a flowchart illustrating one example of a method for analyzing a document in accordance with the present disclosure is provided. While the apparatus is a form for implementing the processing described herein those having ordinary skill in the art will appreciate that other functionally equivalent techniques may be employed. For example as known in the art some or all of the functionalities implemented via executable instructions may also be implemented using firmware and or hardware devices such as application specific integrated circuits ASICs programmable logic arrays state machines etc. Further still other implementations of the apparatus may include a greater or lesser number of components than those illustrated. Once again those of ordinary skill in the art will appreciate the wide number of variations that may be used is this manner.

Beginning at block text is obtained from a document to provide obtained text. At block a plurality of indices representative of the obtained text are generated. At block a user interface is generated. The user interface includes at least a portion of the obtained text based on the plurality of indices that were generated at block . At block the document is monitored to detect a change in the text of the document. At block a determination is made as to whether the document text has changed. If it is determined that the document text has not changed then the process returns to block . However if it is determined that the text has changed then the method proceeds to block . At block the plurality of indices are updated to reflect the change in the text to provide updated indices. Finally at block an updated user interface is generated based on the updated indices without user intervention.

As shown the device may comprise one or more user input devices a display a peripheral interface other output devices and a network interface in communication with the processor . The user input device may comprise any mechanism for providing user input such as inputs selecting a term such as accountant from the user interface as described above to the processor . For example the user input device may comprise a keyboard a mouse a touch screen microphone and suitable voice recognition application or any other means whereby a user of the device may provide input data to the processor . The display may comprise any conventional display mechanism such as a cathode ray tube CRT flat panel display or any other display mechanism known to those having ordinary skill in the art. In an embodiment the display in conjunction with suitable stored instructions may be used to implement the user interface . Implementation of a graphical user interface in this manner is well known to those having ordinary skill in the art. The peripheral interface may include the hardware firmware and or software necessary for communication with various peripheral devices such as media drives e.g. magnetic disk or optical disk drives other processing devices or any other input source used in connection with the instant techniques. Likewise the other output device s may optionally comprise similar media drive mechanisms other processing devices or other output destinations capable of providing information to a user of the device such as speakers LEDs tactile outputs etc. Finally the network interface may comprise hardware firmware and or software that allows the processor to communicate with other devices via wired or wireless networks whether local or wide area private or public as known in the art. For example such networks may include the World Wide Web or Internet or private enterprise networks as known in the art.

While the device has been described as one form for implementing the techniques described herein those having ordinary skill in the art will appreciate that other functionally equivalent techniques may be employed. For example as known in the art some or all of the functionality implemented via executable instructions may also be implemented using firmware and or hardware devices such as application specific integrated circuits ASICs programmable logic arrays state machines etc. Furthermore other implementations of the device may include a greater or lesser number of components than those illustrated. Once again those of ordinary skill in the art will appreciate the wide number of variations that may be used is this manner. Further still although a single processing device is illustrated in it is understood that a combination of such processing devices may be configured to operate in conjunction for example using known networking techniques to implement the teachings of the instant disclosure.

The top portion of depicts one example of how the text may be stored in word indices in line with the teachings of the instant disclosure. Non normalized word index includes five entries 1 the word See 2 a space 3 the word Spot 4 the word Run and 5 an exclamation point. Because the non normalized word index is not normalized the words See Spot and Run each retain their capitalization. In addition the punctuation mark and the space are both treated as words for the purposes of the non normalized word index . Another notable feature of the non normalized word index is its use of pointers. Rather than storing a separate entry for each instance of the same word in text index utilizes pointers to store a single instance of each word and a pointer i.e. location information identifying where other occurrences of that word exist within the document or paragraph depending on whether the index is a document level index or a paragraph level index . Thus only a single instance of the space is stored in the non normalized index . The non normalized word index also stores a pointer indicating that the text includes another space in between the words Spot and Run .

Similarly normalized word index includes five entries treats spaces and punctuation marks as words and uses pointers to represent multiple instances of the same word. The key difference between the normalized word index and the non normalized word index is that the normalized word index does not store any capitalization information associated with the text .

The bottom portion of depicts one example of how the same text discussed above may be stored in character indices in line with the teachings of the instant disclosure. Non normalized character index includes ten entries 1 the capitalized letter S 2 the lower case letter e 3 a space 4 a lower case letter p 5 a lower case letter 0 6 a lower case letter t 7 an upper case letter R 8 a lower case letter u 9 a lower case letter n and 10 an exclamation point. Because the non normalized character index is not normalized the letters S and R retain their capitalization. In addition the punctuation mark and the space are both treated as characters for the purposes of the non normalized character index . Similar to the word indices discussed above the non normalized character index also makes use of pointers to store a single instance of each character and a pointer identifying where other occurrences of that character exist within the document or paragraph as the case may be . Normalized character index is similar to the non normalized character index except that capitalization information associated with the text is not retained.

With regard to the character indices of it is clear that the four entries for R u n and that were present in the non normalized character index of have been replaced by the three entries J g and . in the non normalized character index of . In addition non normalized character index includes an additional pointer from the letter o . Specifically because the text of now has two o s non normalized character index includes an additional pointer from the letter o when compared with non normalized character index of . This additional pointer indicates that text also includes the letter o between the letters j and g . Normalized character index stores text in a similar fashion to non normalized character index except capitalization information associated with the text has not been retained.

As stated earlier the user interface may operate in additional modes beyond the Defined Terms operating mode previously described. One such operating mode is the Inconsistent Phrases operating mode. In one example of the Inconsistent Phrases operating mode pattern engine includes executable instructions or modules that enable the pattern engine to analyze a document and identify patterns. Generally speaking the Inconsistent Phrases operating mode includes functionality such that a document is analyzed and phrases are identified and presented to assist in the correction of inconsistencies in the document.

Referring now back to one example method of the Inconsistent Phrases operating mode at step of text is obtained from a document to provide obtained text and at block a plurality of indices representative of the obtained text are generated. As can be seen the processing previously described and the indices including the multiple levels the normalized and non normalized indicies can be used to assist in the document analysis in the Inconsistent Phrases operating mode. At step the text of the document is filtered to obtain filtered text. In this embodiment the text or obtained text as may be the case is analyzed and some elements of the text are eliminated from consideration and analysis as hereafter will be described. The text is filtered according to filtering criteria. Filtering criteria are characteristics either pre determined or user modifiable that reduce the content of the text to be analyzed. Some characteristics that may be used as filtering criteria are certain punctuation text spacing or common reoccurring words e.g. the word it may be filtered because it occurs more than 200 times in a document . Other filtering criteria may be used as are known to those of ordinary skill in the art to reduce the amount of text that will be considered in later steps. After the filtering criteria are applied against the text of the document filtered text is obtained and may be stored for later analysis.

At step of a plurality of candidate phrases are identified based on candidate identification criteria. Phrases as used herein mean one or more words expressions or grouping of characters that appears in a document. Candidate phrases are phrases that meet certain requirements or characteristics and that will be analyzed further by the processes of the Inconsistent Phrases operating mode. Candidate identification criteria are the requirements or characteristics used to separate candidate phrases from other phrases in a document. In one example candidate identification criteria may include the frequency that a phrase appears in a document a number of words in a phrase and a number of characters in the phrase. Minimum maximum or a range of a characteristic may serve as a candidate identification criteria but other types of characteristics or limits of a characteristics may be used as well.

In one embodiment pattern engine in the Inconsistent Phrases operating mode identifies candidate phrases by analyzing the content of the document to find phrases that meet the candidate identification criteria. Each occurrence of the phrase is collected and information about the candidate phrase occurrence is stored for later use. In an embodiment the processing to identify phrases that meet the candidate identification criteria may be performed at substantially the same time as the indexing operations described above. That is as the document is indexed the candidate identification criteria may also be assessed to identify phrases meeting the criteria. Of course it is also possible to separate these operations such that for example the candidate identification criteria are assessed after the indexing has been completed.

At step the candidate phrases of the plurality of candidate phrases are grouped with a phrase family based on family criteria to obtain consistent phrases. A phrase family is a grouping of phrases that meets the characteristics or requirements as defined in the family criteria and thus considered to be substantially similar if not always identical so as to be considered part of the same family of phrases. Family criteria can include almost any characteristic or requirement of a phrase. Examples of family criteria include the number of common words between phrases and the proximity between the words that two phrases may have in common. For example the proximity between common words in phrases can be measured by comparing the words of two phrases and determining both the overall number of common words between the two phrases and also determining the number of words that are not common between the two phrases. In this example the proximity between the common words can be represented as a ratio of the number of words that are not common between the phrases to the number of common words. Thus the smaller the ratio the greater the likelihood that the common words are proximate to each other. Other family criteria such as but not limited to the number of common characters the location of characters the order of the common words and other measurements and characteristics as known to one of ordinary skill in the art can be used.

In an embodiment families of phrases are identified by assessing the candidate phrases in the order in which they are found in the document. Thus the first candidate phrase is compared to the next occurring candidate phrase in the document based on the family criteria. For example the phrase Acquired Company s Assets occurring in this example 10 times in the document and the phrase Acquired First Company s Assets occurring in this example 8 times in the document are compared based on the family criteria. If according to the family criteria these two phrases are deemed sufficiently similar then they are combined into a single phrase family consisting in this case into a single phrase family consisting of 18 occurrences. In one embodiment a phrase family is defined by that candidate phrase that occurs first in the document. In this embodiment the candidate phrase that defines the phrase family i.e. is listed as the first phrase in the family and is used to identify the phrase family in a user interface as will be explained later is referred to as the lead phrase. In another embodiment the lead phrase is the phrase in the phrase family with the highest frequency of occurrence in the document. Other phrases with different characteristics as known to those of ordinary skill in the art can also be identified as the lead phrase for a phrase family.

Once a family of phrases has been defined it may also be included in the process of comparisons such that it is compared with other candidate phrases or other previously identified phrase families. When comparing based on a phrase family having constituent phrases that are similar but not identical the lead phrase for that phrase family may be used as the basis for comparing that phrase family with other candidate phrases and or phrase families according to the family criteria. This process of comparing candidate phrases and or families to determine consistent phrases continues until all candidate phrases have been analyzed and grouped into a phrase family.

Referring back to step in one example candidate phrases of the plurality of candidate phrases are compared with one another or other phrase families based on the family criteria and grouped into one or more phrase families. As can be appreciated by one of ordinary skill in art as the family criteria are more restrictive the number of phrases that are grouped into any one family may become fewer and less of the candidate phrases are grouped. As the family criteria are less restrictive the converse becomes true i.e. the number of phrases that are grouped into any one family may increase and more candidate phrases are grouped . The grouped candidate phrases at the conclusion of the processing of step are called consistent phrases. The consistent phrases may then be stored for later processing.

At step for remaining phrases not meeting all of the candidate identification criteria at least one of the remaining phrases are associated with a phrase family based on inconsistent phrase criteria to obtain inconsistent phrases. Remaining phrases are those phrases in the document that meet some but not all of the candidate identification criteria discussed earlier. In one example remaining phrases are those phrases that meet the number of words criteria and the number of characters criteria but not the number of occurrences criteria. In this example the phrases meeting the number of words criteria and the number of characters criteria are identified as remaining phrases in the document. Optionally the remaining phrases can be stored for later access and use.

Referring back to step the remaining phrases are then analyzed and compared against the consistent phrases based on inconsistent phrase criteria. Inconsistent phrase criteria are characteristics or requirements used to identify phrases that are similar enough to a consistent phrase to warrant identification because they may have been drafted in error or include an unintentional variation from other phrases in a document. That is an inconsistent phrase is associated with an otherwise consistent phrase i.e. a phrase or lead phrase in a phrase family in the sense that it is flagged as a potential error or mistake that might benefit from a user assessing whether there is in fact an error or mistake. Inconsistent phrase criteria in one example may include characteristics or requirements similar to those discussed above with regards to family criteria such as the number of common words and the proximity of words that two phrases may have in common. Other characteristics or requirements of phrases may equally be used.

The remaining phrases in this example are compared against the consistent phrases grouped earlier based on the inconsistent phrase criteria. While the remaining phrases can be compared against any one or all of the consistent phrases in one example the remaining phrases are compared against the phrase in each phrase family identified as the lead phrase. If the remaining phrase meets the requirements of the inconsistent phrase criteria when compared against the consistent phrase the remaining phrase is associated with the same phrase family as the consistent phrase. This process continues until all remaining phrases have been analyzed. In one example each remaining phrase is analyzed and if meeting the inconsistent phrase criteria when compared against a consistent phrase the remaining phrase is associated with a phrase family and is considered an inconsistent phrase. Further in this example if a remaining phrase does not meet the inconsistent phrase criteria when compared against a consistent phrase the remaining phrase is removed from further consideration and is not considered an inconsistent phrase. Other processing may also be used in other embodiments such as the storing of non associated remaining phrases for display or further consideration.

In other examples where a remaining phrase does not meet the requirements of the inconsistent phrase criteria when compared against a candidate phrase as discussed above the remaining phrase un associated with a phrase family at this point can be associated with a new phrase family that is created such that the remaining phrase is still identified as an inconsistent phrase via the methods later described. In other examples remaining phrases are associated with phrase families that most closely resemble the remaining phrases despite not meeting the requirements of the inconsistent phrase criteria. Other methods of associating the remaining phrases known to those of ordinary skill in the art may also be used.

At step an inconsistent phrase user interface is generated. The inconsistent phrase user interface is an example of user interface for use with the Inconsistent Phrases operating mode. One embodiment of inconsistent phrase user interface is illustrated in each of . As can be seen in in this example inconsistent phrase user interface is provided as part of a larger user interface for a word processing program in which the document including text is visible. Alternatively the inconsistent phrase user interface can be presented separate from but adjacent to the word processing program or independently from and without the word processing program.

For example shows further information that may be provided in inconsistent phrase user interface . In addition to a representation of phrase family and representations of consistent and inconsistent phrases and inconsistent phrase user interface can additionally include a representation of phrase text that includes the consistent or inconsistent phrase . This information can be useful for the user such that the context of the phrase can be easily viewed. Inconsistent phrase user interface can additionally provide functionality to interact with document and its display in a word processing program. In one example if a user places a pointer over or clicks on the representation of phrase text in inconsistent user interface the corresponding text in document can be identified by selecting or otherwise indicating the corresponding text as shown by indicated text . Other interactions and functionality known to those of ordinary skill the art may additionally be provided in inconsistent phrase user interface .

Referring back to at step a decision point may be included in one method of Inconsistent Phrases operating mode in which a determination is made whether or not the processing and analysis performed to this point has provided an analysis of the document in which the results are satisfactory for a user s needs. As can be appreciated a user at any given time during the drafting of a document may want loose evaluation criteria to identify more consistent and inconsistent phrases or when a document is being finalized may want to use more stringent criteria to result in a more pointed analysis. No matter the needs of the user or the stage in the drafting of a document the Inconsistent Phrases operating mode provides functionality to aid the user in the drafting process. If the results of the analysis are satisfactory which may be determined for example in response to viewing the results of the analysis as presented via an inconsistent phrase user interface the method concludes. If the analysis has not provided the desired information such as for example not identifying enough consistent and inconsistent phrases or the phrases are grouped in phrase families in an unanticipated or unhelpful way the Inconsistent Phrases operating mode can supply functionality to modify the results.

One way that the Inconsistent Phrases operating mode can address a circumstance in which the results of the analysis are unsatisfactory is via processing that may occur when a change to the text of the document is made. At step the document is monitored for a change in text. In one embodiment the controller s may poll the word processing software or receive a change event notification as described earlier indicating that a change to the text has been made. In response to the change in text and without user intervention the processing as earlier described can be performed again based on the changed text. In this manner new candidate phrases revised phrase families revised consistent phrases and modified inconsistent phrases can be identified and generated for display via the inconsistent phrases user interface . shows one example wherein the flow of steps is such that all the steps as previously described are re performed in response to the change in text however only a sub set or portion of the steps and processes may be performed. Additionally as described earlier the Inconsistent Phrases operating mode can be monitoring for changes to the text of the document and updating the Inconsistent Phrases user interface continuously and without user intervention as the document being analyzed is being modified or changed.

In another example all the steps of are not performed in response to a change in text. In the example when a change to the text is made the Inconsistent Phrases operating mode identifies a portion of the document that has been changed. For example the paragraph of the document that has been changed can be identified. In response the Inconsistent Phrases operating mode can then revise the display of the consistent phrases and the inconsistent phrases to indicate that a revision to the portion of the document including the phrase has been made. In one example the consistent phrases and the inconsistent phrases found in the modified and identified paragraph are removed from display on the inconsistent phrases user interface. Other methods of indicating a revision to the document such as different colors icons or other indicators known to those of ordinary skill in the art may also be used. In this example the indication of the revision to a portion of the document including a consistent or inconsistent phrase can be useful to a document drafter to track the correction of a document. Further functionality can also be provided in this example whereby the user can re analyze the document. Consistent and inconsistent phrases in one example can be re analyzed and re displayed after receiving an indication of the user s desire for re analysis by a user input device. A control button keystroke or other control mechanism as known to those of ordinary skill in the art can be used to facilitate this functionality. Upon receiving an indication of a user s desire for re analysis all or a subset of the steps shown in can be performed.

Another way that the Inconsistent Phrases operating mode can address a circumstance in which the results of the analysis are unsatisfactory is shown through the modification of the different phrase criteria. At step a phrase criteria user interface is generated. Phrase criteria user interface is a user interface that enables various criteria used in the analysis of the document to be varied or adjusted. Any user interface may be used as are known to those of ordinary skill in the art. One example phrase criteria user interface is shown in . In this example phrase criteria user interface is presented as a window on a display. Phrase criteria user interface includes candidate identification control family criteria control and inconsistent phrase criteria control . Candidate identification control is a mechanism that allows for the adjustment of the candidate identification criteria. As can be seen in this example candidate identification control includes the display of 1 minimum number of times found 2 minimum number of words and 3 minimum number of characters. Next to each of these candidate identification criteria is a text box and control buttons that allows the candidate identification criteria to be changed or adjusted. This adjustment enables more or less candidate phrases to be identified during processing. Other controls and display techniques can be used in the candidate identification control such as icons images or text coupled with text boxes radio buttons slider bars or other representations or controls known to those of ordinary skill in the art.

In one example as seen in phrase criteria user interface includes family criteria control . Similarly to the example candidate identification control discussed above family criteria control is a mechanism that enables the adjustment of family criteria. In this example family criteria control includes family criteria 1 the number of words in common and 2 the proximity between words in common. Next to these two example family criteria are slider controls . As can be appreciated slider control can be adjusted independently of each other in this example such that each family criteria can be modified according to the needs of a user. Other controls and display techniques can be used in the candidate identification control such as icons images or text coupled with text boxes radio buttons command buttons or other representations or controls known to those of ordinary skill in the art.

Phrase criteria user interface additionally may include as shown in this example inconsistent phrase criteria control . Inconsistent phrase criteria control allows for the adjustment of inconsistent phrase criteria. In this example inconsistent phrase criteria control includes inconsistent phrase criteria 1 the number of words in common and 2 the proximity between words in common. Next to these two example inconsistent phrase criteria are slider controls . As these slider bars are moved to the left or to the right the associated inconsistent phrase criteria are modified to be less or more restrictive respectively. Other controls and display techniques can be used in the candidate identification control such as icons images or text coupled with text boxes radio buttons command buttons or other representations or controls known to those of ordinary skill in the art.

Referring back to at step modified candidate identification criteria family criteria or inconsistent phrase criteria is received. In this example in response to the display of phrase criteria user interface any one of the previously listed criteria can be modified. This modified criteria can then be received and reapplied against the document. Through this functionality different candidate phrases can be identified the candidate phrases can be grouped based on different family criteria and remaining phrases can be associated with phrase families based on different inconsistent phrase criteria. As can be appreciated the adjustment of the various criteria can be made iteratively until the analysis of the document is satisfactory to a user.

The steps of the exemplary method of the instant disclosure have been described in the sequence shown in . The steps however can be performed in different orders than that previously described. For example the generation of phrase criteria user interface at step and the receipt of modified criteria at step can be performed before the initial analysis of the document in the Inconsistent Phrases operating mode. Other variations of the described method as known to those of ordinary skill in the art may also be applied.

The above detailed description and the examples described therein have been presented for the purposes of illustration and description only and not by way of limitation. It is therefore contemplated that the present disclosure cover any and all modifications variations or equivalents that fall within the spirit and scope of the basic underlying principles disclosed above and claimed herein.

