---

title: Monitoring resources in a cloud-computing environment
abstract: Provided are a computer program product, system, and method for monitoring resources in a cloud computing environment. A set of cloud resources is provisioned to a user of the cloud-computing environment. A set of private resources is provided for the user, each private resource being provisioned within the set of cloud resources of the user. Monitoring templates are exposed, each one for a corresponding type of a private resource to the user. A user subscription is received to at least one of the monitoring templates, wherein each of the subscribed monitoring templates is for one of the user private resources. A private monitoring agent is provided within the cloud resources of the user housing the private resource of the user to monitor the private resource according to the corresponding selected monitoring template.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09591074&OS=09591074&RS=09591074
owner: International Business Machines Corporation
number: 09591074
owner_city: Armonk
owner_country: US
publication_date: 20120611
---
This application is a non provisional application that claims priority benefits under Title 35 United States Code Section 119 a d from Italian Patent Application entitled USER LEVEL MONITORING IN A CLOUD COMPUTING ENVIRONMENT by Antonio DICOCCO Luigi PICHETTI Claudio MARINELLI and Fabio BENEDETTI having Italian Patent Application No. MI2011A001209 filed on Jun. 30 2011 which Italian Patent Application is incorporated herein by reference in its entirety.

The present invention relates to a computer program product system and method for monitoring resources in a cloud computing environment.

Cloud computing is a new data processing model that has become increasingly popular in recent years. In a cloud computing environment users are allowed to access a pool of shared computing resources referred to as cloud resources on demand which cloud resources are provisioned configured and released very rapidly and then are generally of the virtual type . These cloud resources are supplied by cloud providers which are accessed through a communication network whereas their actual implementation is completely opaque to the users .

In this way the users are relived of the management of the actual physical resources that are needed to implement the cloud resources for example their installation and maintenance particularly. This provides economies of scale improved exploitation of the physical resources and high peak load capacity. Moreover the users are now allowed to perform tasks on a pay per use basis that were not feasible previously because of their cost and complexity especially for individuals or small companies . The de coupling of the cloud resources from their implementation provides the illusion of an infinite capacity thereof. Moreover the de localization of the physical resources implementing the cloud resources enables the users to access them from anywhere.

Monitoring performance of cloud computing environments is a very common activity. For this purpose monitoring tools are available to measure usage of their physical resources such as processing power mass memory and working memory examples of commercial monitoring tools available on the market are International Business Machines Corporation IBM products including CLOUDBURST and SERVICE DELIVERY MANAGER. The information provided by the monitoring tools is very useful for administrators of the cloud computing environments. Particularly the administrators may get instantaneous notifications when any problem is experienced so that appropriate steps may be taken to remedy the situation . Moreover the collected information may be logged for tracking over time for example for charge back accounting service level agreement verification and capacity planning CLOUDBURST and SERVICE DELIVERY MANAGER are trademarks of IBM in the United States and other countries .

However these monitoring tools may only be available to the administrators of the cloud computing environments. The provision of the same monitoring tools to the users is not feasible in practice because since they are designed to provide complete access to all the physical resources of the cloud computing environments and such tools would not be of interest to users since the users are not interested in this kind of information.

United States Patent Publication No. 2010 0088150 the entire disclosure of which is herein incorporated by reference discusses a cloud computing environment wherein each user may configure special monitoring alert requests for example when a firewall rule is breached or when an average processing power exceeds a threshold value for a given time in a given tier through a user interface or a configuration file. The cloud computing environment is then monitored accordingly for example by means of corresponding agents so as to generate events that trigger the delivering of corresponding user notifications via different means for example via e mail or SMS .

United States Patent Publication No. 2011 0055385 the entire disclosure of which is herein incorporated by reference discloses the possibility of monitoring the cloud resources for example when they change in status or when their usage reaches a predefined threshold in response to corresponding user requests entered with a Graphical User Interface GUI . The collected information may also be organized per user or project when the same cloud resources are shared among multiple users or projects. This information may be used to track the usage of the cloud resources particularly on a per user or per project basis or to send corresponding notifications to the users.

However the above mentioned techniques only allow monitoring cloud resources that are under the direct control of the cloud computing environment such as the virtual machines . Information about the internal behavior of these cloud resources may not be collected because it is only accessible to the corresponding users. Therefore the above mentioned techniques do not provide comprehensive information at the user level making it difficult for the users to detect real problems and to investigate their causes. For example the users may not be able to ascertain the health of critical software applications running on their virtual machines such as whether they have been started or they are in hang whether an excessive usage of resources of a virtual machine is due to an actual problem of a software application running thereon or simply to a load peak and the like.

Provided are a computer program product system and method for monitoring resources in a cloud computing environment. A set of cloud resources is provisioned to a user of the cloud computing environment. A set of private resources is provided for the user each private resource being provisioned within the set of cloud resources of the user. Monitoring templates are exposed each one for a corresponding type of a private resource to the user. A user subscription is received to at least one of the monitoring templates wherein each of the subscribed monitoring templates is for one of the user private resources. A private monitoring agent is provided within the cloud resources of the user housing the private resource of the user to monitor the private resource according to the corresponding selected monitoring template.

Described embodiments provide a monitoring method for use in a cloud computing environment. As part of the method a set of cloud resources for example virtual machines is provisioned to each one of a set of users of the cloud computing environment. A set of private resources is provided by each user each private resource is housed within a cloud resource of the user for example a software application running on a virtual machine thereof . A set of monitoring templates each one for a corresponding type of resource is exposed to the users for example each one defining a type of monitoring event to be monitored such as a change of status or the reaching of a threshold value by a metric of the corresponding type of cloud and or private resource . The method continues subscribing to a set of selected monitoring templates by each one of a set of selected users. Each selected monitoring template is subscribed for a selected resource of the selected user corresponding to the type of resource of the selected monitoring template such as for a specific instance of a software application. A private monitoring agent within each cloud resource housing at least one selected private resource such as within a virtual machine wherein a selected software application runs then monitors each of said at least one selected private resource according to the corresponding selected monitoring template. This monitoring may notify the corresponding user according to a predefined notification template associated with the monitoring template when a corresponding monitoring event is raised.

In further embodiments a computer program comprising code means causes a data processing system for example a cloud provider to perform the steps of this method when the computer program is executed on the data processing system.

Further embodiments provide a computer program product comprising a non transitory computer readable medium embodying a computer program the computer program comprising code means directly loadable into a working memory of a data processing system thereby configuring the data processing system to perform the same method.

In a further embodiment a system for example a cloud provider performs the monitoring method embodiment.

With reference in particular to the a pictorial representation is shown of a cloud computing environment . The cloud computing environment comprises one or more cloud providers only one shown in the figure for the sake of simplicity . Each cloud provider is an entity that makes available a pool of cloud resources on demand i.e. shared computing resources that may be provisioned configured and released very rapidly . These cloud resources are generally of the virtual type i.e. emulations by software of physical resources . For example the cloud resources may comprise virtual machines Software As a Service SAS facilities i.e. software applications supplied on demand Platform as a Service PaaS facilities i.e. virtual machines with software applications running thereon virtual storage devices virtual network resources Infrastructure as a Service IaaS facilities i.e. implementations of complete virtual data centers on line services or any combinations thereof. Each user has the sole control of his her cloud resources which may then be used exactly as if they were dedicated physical resources. For instance the user may provide his her own private resources that are housed in these cloud resources and are not visible to anyone else in the cloud computing environment for example operating systems and software applications running on virtual machines data bases stored therein or any combinations thereof .

The cloud provider has a front end component that is exposed to users of the cloud provider for accessing the desired cloud resources either for personal purposes or for providing services to third parties . The cloud resources are actually implemented by a back end component of the cloud provider . The back end component of the cloud provider may comprise a pool of physical server computers or simply servers and storage devices being loosely coupled to each other with a redundant architecture to ensure the required reliability level with the servers and the storage devices that in turn may be implemented by cloud resources as well . The back end component of the cloud provider may not be accessible from the outside so that the users may be unaware of the actual location and configuration thereof.

Each user may exploit selected cloud resources of the cloud provider by means of a corresponding client computer or simply client . The client may be of the thin type such as a netbook a tablet computer or a Smartphone since the required computational and storage capabilities are supplied by the cloud provider . For this purpose the client accesses the cloud provider through a communication network . Generally the cloud computing environment is public wherein the cloud provider is implemented by a third party that bills the users on a pay per use basis and it is accessed through the Internet . Alternatively it is also possible to have a cloud computing environment of private type wherein the cloud provider is implemented internally and it is accessed through a company LAN of community type established by multiple companies for their exclusive use or of hybrid type based on a combination of a public cloud environment and a private cloud environment .

With respect to a generic user accesses corresponding virtual machines or other cloud resources that are provisioned by the cloud provider . The user may then install and configure software applications within the virtual machines or provide any other private resources housed therein .

The cloud provider exposes a set of monitoring templates each one for a type of private resource such as software applications . Each monitoring template may define a type of monitoring event to be monitored for its type of resource such as when a software application changes its status or when a metric thereof such as the usage of the processing power mass memory or working memory of the corresponding virtual machine reaches a threshold value. The user may then subscribe to one or more monitoring templates for resources of the corresponding type. As a further improvement each monitoring template is associated with a notification template which defines a format to be used to inform the user when a corresponding monitoring event has been raised for example according to a predefined Application Program Interface API .

For each monitoring template that has been subscribed by the user for a software application as shown in the the cloud provider monitors this software application according the corresponding monitoring template i.e. to detect any occurrence of the corresponding monitoring event . For this purpose a monitoring agent may be injected within the virtual machine . The monitoring agent is then configured to monitor the software application accordingly for example to check the status of the software application for detecting its change or to measure the desired metric of the software application for detecting the reaching of the corresponding threshold value.

As soon as the monitoring agent raises any monitoring event as shown in the the user is notified accordingly on the basis of the associated notification template for example by means of a corresponding notification message via a REST API .

In this way it is possible to monitor the internal behavior of the cloud resources even if it is only accessible to the corresponding users . Therefore this provides comprehensive information at the user level to allow the users to detect real problems and investigate their causes. For example the users may ascertain the health of critical software applications running on their virtual machines such as whether they have been started or they are in hang whether an excessive usage of resources of a virtual machine is due to an actual problem of a software application running thereon or simply to a load peak and the like. Moreover the above mentioned monitoring templates provide a general purpose non multi tenant solution which allows each user to monitor only the resources to which the user is entitled and has interest.

In described embodiments the use of the notification templates ensures that all the users always receive the same type of information for the same type of monitoring events but with different contents relating to corresponding current values.

A collaboration diagram representing the roles of the main software components that may be used to implement the described embodiments is shown in . These software components are denoted as a whole with the reference . The information programs and data is typically stored in the hard disk and loaded at least partially into the working memory of each computer when the programs are running together with an operating system and other application programs not shown in the figure . The programs are initially installed onto the hard disk for example from DVD ROM. Particularly the figure describes both the static structure of the software components and their dynamic behavior by means of a series of exchanged messages each one representing a corresponding action denoted with sequence numbers preceded by the symbol A .

An administrator of the cloud provider may use an administration interface for managing the cloud provider action A1.Manage . For this purpose the administration interface interacts with a hypervisor for example VMware ESX by VMWare trademarks of VMWare Inc. which emulates the cloud resources supplied by the cloud provider such as virtual machines . For example the administrator may control the distribution of the virtual machines throughout the available physical resources for load balancing purposes may control the provisioning of the physical resources required to implement the virtual machines may monitor the consumption of the physical resources used to implement the virtual machines such as processing power mass memory and working memory and the like.

On the other hand a user of a generic client exploits an access module to access the cloud provider . For example the access module may be a browser which is used in general to surf the Internet and in particular to access the cloud provider . For this purpose the cloud provider exposes a self service interface for example implemented with a web portal . The user interacts with the self service interface through the browser for submitting any desired request to the cloud provider . Normally these requests are for provisioning cloud resources of the user hereinafter referred to as provisioning requests . For example the user may request the instantiation of a new virtual machine a change of the configuration thereof or its deletion action A2.Subunit . Any provisioning request submitted by the user to the self service interface is forwarded to a request manager which handles its execution. Particularly for each provisioning request received from the self service interface the request manager invokes a provisioning manager for performing the corresponding operations action A3.Invoke . In response thereto the provisioning manager submits corresponding commands to the hypervisor action A4.Provision . At this point the user having the sole control of his her virtual machines may control i.e. install configure or delete private resources being housed in these virtual machines for example software applications running thereon action A5.Control .

The administrator may also use the administration interface for configuring monitoring templates for example for injecting modifying or deleting them . The monitoring templates are stored in a corresponding catalogue which is exposed to the all the users of the cloud provider action A6.Expose . Each monitoring template identified by a corresponding unique identifier defines a corresponding type of monitoring event for example by means of a corresponding attribute such as event type vm change status for the change of status of a virtual machine event type vm metric threshold for the reaching of a threshold value by a metric of a virtual machine event type application change status for the change of status of a software application and event type application metric threshold for the reaching of a threshold value by a metric of a software application the monitoring template may also comprise the definition of specific parameters of the type of monitoring event for example by means of corresponding attributes or key value pairs such as key new vm status value poweron on shutdown reboot off boot failed for a change of status of a virtual machine app name myApplicationName for the name of a software application to be monitored key new app status value down running loading for a change of status of a software application key myMetric value myThreshold for a default threshold value of a metric to be monitored .

Likewise the administrator uses the administration interface for configuring notification templates for example for injecting modifying or deleting them . The notification templates are stored in a corresponding catalogue which is exposed to the all the users of the cloud provider action A7.Expose . Each notification template identified by a corresponding unique identifier comprises a context section and an event section for a list of monitoring events which are defined by keywords and placeholders for corresponding values. The context section defines a context wherein the monitoring events have been raised for example by means of corresponding attributes such as vm id myVmId and url myURL for a unique identifier and a URL respectively of the corresponding virtual machine . The event section then defines for each monitoring event its type for example by means of a corresponding attribute such as event type myEventType and the values of relevant parameters for example by means of corresponding attributes or key values pairs such as key new vm status value myNewStatus for a new status of a virtual machine app name myApplicationName for the name of a software application under monitoring key new app status value myNewStatus for a new status of a software application key myMetric for a metric under monitoring value myValue for the value of a metric exceeding the corresponding threshold value and timestamp myTimeStamp for the raising time of the monitoring event .

Each monitoring template is associated with a notification template for example by means of a corresponding attribute such as notification template myNotificationTemplate with the same notification template that may be associated with multiple monitoring templates .

At the same time the user may also submit requests for subscribing to the monitoring templates hereinafter referred to as monitoring requests to the self service interface through the browser action A8.Subscribe . For this purpose the user selects one or more among his her cloud resources for example virtual machines and or private resources for example software applications . For each selected cloud or private resource the user then selects a monitor template with the associated notification template among the ones that are applicable thereto i.e. for the type of the selected resource . In this phase the user may also customize some parameters of the selected monitoring template for example the threshold value for the metric to be monitored . The self service interface is also used to specify a notification address or more of the user for the notification of the monitoring events corresponding to the selected monitoring templates . The notification address may be either a default address for all the selected monitoring templates of the user or a specific address for each selected monitoring template for example the notification address may be a URL an e mail address a mobile phone number a pager number and the like. Additional configuration options may also be available to the user for example to define when and or how the monitoring events have to be notified such as periodically or as soon as they are raised .

Monitoring requests submitted by the user to the self service interface are forwarded to the request manager as above. The monitoring request comprises the identifier of the selected monitoring template with possible customized values overriding the default values thereof an identification of the corresponding selected resource for example the identifier and the URL of a virtual machine and possibly the name of a software application running thereon and the applicable notification address of the user . In this case the request manager invokes a notification manager for performing the corresponding operations action A9.Invoke . In response thereto a new monitoring policy is created by defining the corresponding monitoring event according to the type of monitoring event from the selected monitoring template and the selected resource from the monitoring request and by associating the notification address of the user from the monitoring request therewith. The new monitoring policy is stored into a corresponding repository action A10.Create . Likewise the user may also use the self service interface through the browser to modify the selected monitoring templates or to delete them with the changes that are reflected into the corresponding monitoring policies .

A monitoring manager applies each newly created or modified monitoring policy . Particularly when the new monitoring policy relates to a cloud resource that is managed by the cloud provider directly for example a virtual machine the monitoring manager configures a global monitoring agent running on the hypervisor to monitor the corresponding monitoring event action A11.Configure . For example the global monitoring agent periodically checks the status of the virtual machine for detecting its change or measures the desired metric of the virtual machine for example its usage of the power processing mass memory or working memory of the physical resources implementing it to determine whether the corresponding threshold value is reached. Conversely when the monitoring event relates to a private resource under the control of the user within a cloud resource thereof for example a software application running on a virtual machine the monitoring manager may at first inject a private monitoring agent if necessary within the cloud resource housing the private resource such as the virtual machine in which the software application runs action A12.Inject . In any case the monitoring manager then configures the private monitoring agent to monitor the corresponding monitoring event. For example the private monitoring agent periodically checks the status of the software application to detect a change or measures the desired metric of the software application for example its usage of the power processing mass memory or working memory of the virtual machine housing it for determining the reaching of the corresponding threshold value action A13.Configure .

Whenever a monitoring event is raised by the global monitoring agent or by any private monitoring agent the corresponding global or private monitoring agent returns event information relating to this monitoring event to the monitoring manager which in turn passes it to the notification manager action A14.Raise . In response thereto the notification manager creates a notification message for the monitoring event according to the notification template associated with the corresponding monitoring template as indicated in the corresponding monitoring policy and the received event information. For this purpose each placeholder of the notification template is replaced with the corresponding value extracted from the event information for example vm id myVmId and url myURL for the relevant virtual machine key new vm status value myNewStatus or key new app status value myNewStatus for the new status of a virtual machine or of a software application respectively key myMetric value myValue for the value of a metric exceeding the corresponding threshold value and timestamp myTimeStamp for the raising time of the monitoring event Action A15.Create . The notification manager then sends the notification message so obtained to the notification address of the user as indicated in the corresponding monitoring policy action A16.Notify . The notification may be achieved by means of a REST API an e mail message an SMS a pager message and the like. The user may then react to the notification message by taking the appropriate steps for remedying the situation either manually or automatically . Particularly the user may implement the API of the notification template associated with each selected monitoring template so as to react programmatically to each corresponding notification message accordingly. For example this API may have the following signature 

An example of a corresponding notification message grouping three events of the same user being raised in the last hour for a given virtual machine is 

Naturally in order to satisfy local and specific requirements a person skilled in the art may apply to the embodiments described above many logical and or physical modifications and alterations. More specifically although the embodiments have been described with a certain degree of particularity it should be understood that various omissions substitutions and changes in the form and details as well as other embodiments are possible for example with respect to numerical values . Particularly different embodiments of the invention may even be practiced without the specific details set forth in the preceding description to provide a more thorough understanding thereof. Further well known features may have been omitted or simplified in order not to obscure the description with unnecessary particulars. Moreover it is expressly intended that specific elements and or method steps described in connection with any embodiments of may be incorporated in any other embodiment as a matter of general design choice.

In any case the terms include comprise have and contain and any forms thereof should be intended with an open non exhaustive meaning i.e. not limited to the recited items the terms based on dependent on according to function of and any forms thereof should be intended as a non exclusive relationship i.e. with possible further variables involved and the term a an should be intended as one or more items unless expressly indicated otherwise .

For example similar considerations apply if the same solution is implemented with an equivalent method by using similar steps with the same functions of more steps or portions thereof removing some steps being non essential or adding further optional steps . Moreover the steps may be performed in a different order concurrently or in an interleaved way at least in part .

Moreover the above mentioned monitoring templates are merely illustrative and in no way limitative. For example with the possibility of defining monitoring templates for complex resources based on combinations of multiple cloud and or private resources.

The possibility of injecting the private monitoring agent into each virtual machine when it is created for its next activation when it is necessary is not excluded.

The above mentioned cloud resources and private resources are merely illustrative and in no way limitative for example alternative cloud resources may be a virtual router and alternative private resources may be a configuration file .

The notification templates may have any other format moreover nothing prevents defining the format of the notification messages directly within the monitoring templates.

The monitoring of the private and or cloud resources may also be based on any other strategy such as with information that is collected periodically and not only when specific monitoring events are raised. As a consequence the collected information may also be used in a different way such as only for reporting purposes.

In any case the above mentioned monitoring events are merely illustrative and in no way limitative for example with the possibility of defining complex monitoring events based on combinations of multiple monitoring events even relating to different cloud and or private resources .

Nothing prevents having monitoring messages conforming to any other API or more generally with any other format .

The described embodiments may be implemented as a stand alone module as a plug in for the front end component of the cloud computing environment or even directly in the front end component itself. It would be readily apparent that it is also possible to deploy the described embodiments as a service. In any case similar considerations apply if the program which may be used to implement each embodiment of the invention is structured in a different way or if additional modules or functions are provided likewise the memory structures may be of other types or may be replaced with equivalent entities not necessarily consisting of physical storage media . The program may take any form suitable to be used by any data processing system or in connection therewith for example within a virtual machine thereby configuring the system to perform the desired operations. Particularly the program may be in the form of external or resident software firmware or microcode either in object code or in source code for example to be compiled or interpreted . Moreover it is possible to provide the program on any computer usable medium and particularly as an article of manufacture on a non transitory medium . The medium may be any element suitable to contain store communicate propagate or transfer the program. For example the medium may be of the electronic magnetic optical electromagnetic infrared or semiconductor type. Examples of such medium are fixed disks where the program may be pre loaded removable disks tapes cards wires fibers wireless connections networks broadcast waves and the like. In any case the described embodiments may be implemented with a hardware structure for example integrated in a chip of semiconductor material or with a combination of software and hardware suitably programmed or otherwise configured.

Similar considerations apply if the cloud computing environment has a different structure or comprises equivalent components or it has other operative characteristics. In any case every component thereof may be separated into more elements or two or more components may be combined together into a singe element moreover each component may be replicated to support the execution of the corresponding operations in parallel. It is also pointed out that unless specified otherwise any interaction between different components generally does not need to be continuous and it may be either direct or indirect through one or more intermediaries.

