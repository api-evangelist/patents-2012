---

title: Decentralized cloud workflows
abstract: Technologies related to decentralized cloud workflows are generally described. In some examples, client applications may generate workflow packages. The workflow packages may be used to access multiple network services, such that client applications need not communicate with intermediate network services in a network service workflow. A client application may send a workflow package to a first network service in the network service workflow. The first network service may process instructions in the workflow package, store transaction results, and forward the workflow package to a next network service. Each intermediate network service may similarly process instructions, store transaction results, and forward the workflow package. Ultimately a last network service in the network service workflow may send workflow completion information to the client application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09258355&OS=09258355&RS=09258355
owner: EMPIRE TECHNOLOGY DEVELOPMENT LLC
number: 09258355
owner_city: Wilmington
owner_country: US
publication_date: 20121112
---
This Application is a U.S. National Stage Application filing under 35 U.S.C. 371 of PCT Application No. PCT US2012 064654 entitled DECENTRALIZED CLOUD WORKFLOWS filed on Nov. 12 2012 which is an International Application that claims priority under 35 U.S.C. 365 of India Patent Application No. 3955 CHE 2012 entitled DECENTRALIZED CLOUD WORKFLOWS filed on Sep. 24 2012. The disclosures of the PCT Application and the India Patent Application are incorporated by reference herein in their entireties.

Unless otherwise indicated herein the materials described in this section are not prior art to the claims in this application and are not admitted to be prior art by inclusion in this section.

Mainstream computer use is evolving from individually managed stand alone computing devices to connected devices that access software and or data via a network connection. Cloud computing refers to a computing model in which computing resources may be accessed via a network connection. Resources available from the network may be referred to as in the cloud .

Behind a network connection a cloud may comprise professionally managed hardware and software. Data center infrastructure providers may supply hardware infrastructure itself e.g. racks and rows of servers comprising processors memory cabling cooling systems raw storage firewalls and load balancers. Platform as a Service PaaS providers may supply platform layers that use infrastructure provider hardware. Platform layers may include for example computing platforms such as operating systems programming language execution environments databases and web servers. Software as a Service SaaS providers may supply software layers that use platform providers platforms. SaaS software layers may include for example application software implementing network services that can be made available in a cloud to client applications operated by end users and or other network services.

The present disclosure generally describes technologies including devices methods and computer readable media relating to decentralized cloud workflows. Some example methods may be directed to accessing network services by client workflow managers executing on computing devices coupled to a network. Example methods may include generating a workflow package by a client workflow manager sending the workflow package to a first network service in a network service workflow and or receiving workflow completion information from a last network service in the network service workflow without further interaction between the client workflow manager and the first network service or intermediate network services in the network service workflow.

Some example methods may be directed to processing a network service workflow by a network service executing on a server coupled to a network. Example methods may include receiving by the network service a workflow package executing an instruction set from the workflow package to effect a custom transaction on behalf of the client application storing transaction result information in a storage location designated in the workflow package and or identifying a next network service in the network service workflow or a return to the client application. When a next network service is identified in the network service workflow the network service may send the workflow package to the next network service without interaction between the client application and the network service. When a next network service is not identified in the network service workflow the network service may send workflow completion information to the client application.

Computing devices and computer readable media having instructions implementing the various technologies described herein are also disclosed. Example computer readable media may comprise non transitory computer readable storage media having computer executable instructions executable by a processor the instructions that when executed by the processor cause the processor to carry out any combination of the various methods provided herein. Example computing devices may include a server comprising a processor a memory and a client application or network service configured to carry out the methods described herein.

The foregoing summary is illustrative only and is not intended to be in any way limiting. In addition to the illustrative aspects embodiments and features described above further aspects embodiments and features will become apparent by reference to the drawings and the following detailed description.

In the following detailed description reference is made to the accompanying drawings which form a part hereof. In the drawings similar symbols typically identify similar components unless context dictates otherwise. The illustrative embodiments described in the detailed description drawings and claims are not meant to be limiting. Other embodiments may be utilized and other changes may be made without departing from the spirit or scope of the subject matter presented here. It will be readily understood that the aspects of the present disclosure as generally described herein and illustrated in the Figures may be arranged substituted combined and designed in a wide variety of different configurations all of which are explicitly contemplated and made part of this disclosure.

The present disclosure is generally drawn inter alia to technologies including methods devices systems and or computer readable media deployed therein relating to decentralized cloud workflows. In some examples client applications may generate workflow packages. The workflow packages may be used to access multiple network services such that client applications need not communicate with intermediate network services in a network service workflow. A client application may send a workflow package to a first network service in the network service workflow. The first network service may process instructions in the workflow package store transaction results and forward the workflow package to a next network service. Each intermediate network service may similarly process instructions store transaction results and forward the workflow package. Ultimately a last network service in the network service workflow may send workflow completion information to the client application.

Cloud technologies increasingly provide discrete network services in the cloud. The cloud itself may comprise infrastructure as a service. Queues databases load balancers and other software components are used as underlying building blocks of client applications being provided as services. Over time it is expected that this trend may continue resulting in more and more functional components of client applications becoming well defined paid network services.

Cloud based client applications may utilize multiple network services to carry out operations. At an infrastructure level network services accessed by client applications may comprise auto scaling services load balancing services backup services and the like. At a functional level network services accessed by client applications may for example comprise transcoding services search services e.g. network services that send automated Application Programming Interface API search queries to third party network services payment processing services that connect to payment gateways to process payments and a wide variety of other network services.

If a client application accesses multiple network services directly i.e. with a first communication between the client application and a first network service a second communication between the client application and a second network service and so on without the benefit of using a workflow package according to this disclosure then service calls may go to each network service one at a time and the responsibility to orchestrate the network services is with the client application. Moreover for utilizing N network services such an approach incurs at least 2N transactions by the client application. There are several problems with this approach. First the various network service providers may have a single coordinator the client application and may be susceptible to failure of the coordinator. Second the network services may be disconnected from each other the responsibility of a successful operation and Quality of Service QOS may depend on the client application and rollback of all network services due to failure of one network service may be impossible. Third the client application may not have access to the progress in executing a task by a network service without an explicit mechanism which may be proprietary to each network service. If any of the network services suffers a failure or has an error in processing a client application request the client application may have no direct insight into the cause of the failure and thus may have to depend on the network service for support. Fourth client application developers may spend more time in developing solutions since they need to know APIs of each network service which may not be standardized. Fifth client application developers may be discouraged to engage with larger numbers of network services in a pipeline and there may be a tendency to over develop client application functions internally rather than rely on network services. Sixth network services may sometimes lose out to competition due to insufficient integration options rather than core functionality.

Embodiments of this disclosure may be directed to utilization by client applications of network services hosted in the cloud. A client application may generate a workflow package configured for consumption by multiple network services. The client application may send the workflow package to the first network service in the network service workflow and the client application need not communicate with intermediate network services thereafter. Each network service may process the workflow package to complete its particular task and may hand the workflow package to the next network service in the network service workflow. As each network service executes its task it may optionally log its activity in a central log and or store transaction results in a common storage location. Upon finishing a task each network service may determine the next appropriate network service to continue the network service workflow and may send the workflow package to the next appropriate network service.

Embodiments of this disclosure may reduce communication overhead eliminate the single point failure associated with direct communications between client applications and multiple network services enable logging to troubleshoot network service problems and failures and or enable client applications to take advantage of competition between competing providers of similar network services as described further herein.

In some embodiments client applications may configure network service requests such that multiple network service requests and the sequence thereof are defined upfront in a workflow package. Each network service may process its own network service request and then send the workflow package to the next network service in the network service workflow. Such an approach may improve efficiency of the whole system including the client application and the various network services. For example in some embodiments the client application may perform 2 network transactions sending the workflow package and receiving workflow completion information. Also the total network transactions in the system may be reduced from 2N to N. Efficiency gains may be especially pronounced in scenarios where some or all network services are hosted by a same cloud provider such as AMAZON . A cloud provider like AMAZON may host some or all network services used by a client application though such network services need not necessarily be provided by a same vendor. In this case data sharing and protocol sharing may also be simplified.

In some embodiments workflow packages may be implemented in the form of Extensible Markup Language XML or other declarative language packages that contain instructions necessary for carrying out network services in a network service workflow. Workflow package generation may comprise for example a client application may determine network services to include in a workflow package and a sequence in which network services are to be engaged the client application may include placeholder and logger information where transaction result and or log information may be stored by each of the network services the client application may include information relating to expected performance and price of network services e.g. in scenarios where similar network services may be performed by different network service providers a price mechanism may allow execution by the most cost effective network service provider in real time the client application may include network service addresses such as network service Uniform Resource Indicators URIs for each network service the client application may include a payload XML package that contains transaction instructions information for each network service and the client application may encrypt the workflow package and or portions thereof using for example a network service provider s public key so that the workflow package is secured from being tampered. The client application may provide the generated workflow package e.g. as a self contained encoded message or URI along with workflow processing instructions to a first network service in the network service workflow.

In some embodiments as discussed in greater detail herein each network service can log its operations to a central log service so that debugging and progress information may be accessed by client applications when needed. Client applications may be configured to access the central log service in the event of a failure timeout of a network service workflow.

In some embodiments network services may be selected by other network services in a network service workflow on behalf of client applications in real time e.g. for budget optimization. For example real time selection of a cheapest shipping service may be delegated to a payment service or other network service in a network service workflow while real time selection of a cheapest notification service may be delegated to a shipping service or other network service in a network service workflow . In some embodiments any of the network services may embed ads or other information in workflow packages and the ads or other information be returned to the client application upon completion of the network service workflow.

In some embodiments network services may be grouped into packaged offerings e.g. a combination of payment shipping or video transcoding Content Delivery Network CDN or video transcoding advertising audience measurement. The packaged offerings may be accessible by workflow packages. Packaged offerings may compete with each other and with unbundled individual network services allowing client applications to choose most appropriate combinations of network services.

Any client application operations that include several network services could benefit from embodiments of this disclosure. Example scenarios include merchant sites that use billing fulfillment and shipping services online video platforms which use transcoding advertisement and storage services and analytics platforms which use data collection pruning mining and visual reporting services.

In some embodiments solutions may include methods of coordinating network service workflows of cloud based network services that comprise individual linked network services hosted on different cloud platforms. An example use case scenario may comprise provision of an end to end online service that entails several SaaS modules that are hosted on different cloud platforms possibly by different providers. The network services may be coordinated using a workflow package to provide integrated services called for by the client application.

Some embodiments of this disclosure may employ traveling workflow processing instructions which may also be referred to herein as a task manager. The task manager may travel with a workflow package and may be configured to direct the flow of the workflow package from network service to network service. The task manager may be packaged in an XML or other declarative language object that encodes instructions for executing each stage of the network service workflow along with URI s of the executing network services. The task manager may furthermore execute the workflow package as a self contained payload. The task manager may also include or access placeholders for storing transaction results of each network service in the network service workflow and an operations logger. The results of each network service may be reported to a central logger storage location for access by the client application at any stage of execution.

In embodiments configured to provide dynamic real time selection of network services in midstream the task manager may be configured to determine the optimum network service choice for a network service at intermediate stages where more than one network service provider is available. The task manager may be configured to schedule the services of the selected network service provider for the network service workflow.

As noted in the summary section some example methods may be directed to accessing network services by client workflow managers executing on computing devices coupled to a network. Example methods may include generating a workflow package by a client workflow manager sending the workflow package to a first network service in a network service workflow and or receiving workflow completion information from a last network service in the network service workflow without further interaction between the client workflow manager and the first network service or intermediate network services in the network service workflow. Example workflow packages may include inter alia an identification of a client application a network service workflow comprising a plurality of network services and workflow sequence information to engage the network services according to a workflow sequence instruction sets for each of the network services in the network service workflow each instruction set including instructions configuring a corresponding network service to perform a custom transaction on behalf of the client application and or result storage instructions directing storage of transaction result information by each of the network services. In some embodiments the workflow package may comprise an XML package.

In some embodiments the result storage instructions directing storage of transaction result information by each of the network services may direct storage to a common location for use by the network services wherein the common location may comprise a network storage location or a location within the workflow package. In some embodiments the workflow package may comprise one or more log storage locations directing storage of log information by each of the network services.

In some embodiments one or more of the plurality of network services in the network service workflow may be specified using a URI. In some embodiments one or more of the plurality of network services in the network service workflow may be specified as an identified network service type along with real time selection criteria. In some embodiments the plurality of network services may comprise a bundle of services that includes for example a payment service and a shipping service a video transcoding service and a storage service or a data collection service and a visual reporting service.

In some embodiments the instruction sets for one or more of the network services may include one or more of a self contained encoded message or a URI along with instructions. In some embodiments one or more of the instruction sets for the network services in the network service workflow may include encryption instructions to encrypt transaction result information.

In some embodiments a non transitory computer readable storage medium may be provided having computer executable instructions executable by a processor the instructions that when executed by the processor implement a client workflow manager which causes the processor to generate a workflow package as described above in connection with methods directed to accessing network services by client workflow managers send the workflow package to a first network service in a network service workflow and receive workflow completion information from a last network service in the network service workflow without further interaction between the client workflow manager and the first network service or intermediate network services in the network service workflow. The computer readable storage medium may furthermore have instructions which cause the processor to carry out the various method steps described above.

In some embodiments a computing device may be configured to provide a client workflow manager configured to engage network services on behalf of a client application. The computing device may comprise a processor a memory and a client workflow manager stored in the memory and executable by the processor. The client workflow manager may be configured to generate a workflow package as described above in connection with methods directed to accessing network services by client workflow managers send the workflow package to a first network service in a network service workflow and receive workflow completion information from a last network service in the network service workflow without further interaction between the client workflow manager and the first network service or intermediate network services in the network service workflow. The computing device may furthermore be configured to carry out the various method steps described above.

As noted in the summary section some example methods may be directed to processing a network service workflow by a network service executing on a server coupled to a network. Example methods may include receiving by the network service a workflow package executing an instruction set from the workflow package to effect a custom transaction on behalf of the client application storing transaction result information in a storage location designated in the workflow package and or identifying a next network service in the network service workflow or a return to the client application. When a next network service is identified in the network service workflow the network service may send the workflow package to the next network service without interaction between the client application and the network service. When a next network service is not identified in the network service workflow the network service may send workflow completion information to the client application. The workflow package may include an identification of a client application a network service workflow comprising a plurality of network services and workflow sequence information to engage the network services according to a workflow sequence instruction sets for each of the network services in the network service workflow each instruction set including instructions configuring a corresponding network service to perform a custom transaction on behalf of the client application and result storage instructions directing storage of transaction result information by each of the network services. In some embodiments the workflow package may comprise an XML package. In some embodiments the network service may comprise a payment service a shipping service a video transcoding service a storage service a data collection service or a visual reporting service.

In some embodiments the result storage instructions directing storage of transaction result information by each of the network services may direct storage to a common location for use by the network services wherein the common location comprises a network storage location or a location within the workflow package. In some embodiments the network service may encrypt transaction result information. In some embodiments the workflow package may comprise one or more log storage locations directing storage of log information by each of the network services and methods may further comprise storing by the network service log information in a storage location from among the one or more log storage locations.

In some embodiments identifying the next network service in the network service workflow may comprise referencing a URI in the workflow package that identifies the next network service. In some embodiments the next network service in the network service workflow may be specified as an identified network service type along with real time selection criteria and identifying by the network service the next network service in the network service workflow may comprise determining a network service of the identified network service type according to the real time selection criteria from among a plurality of network services according to the identified network service type.

In some embodiments the executed instruction set may be included in one or more of a self contained encoded message or a URI along with instructions and methods may further comprise opening the self contained encoded message and or accessing the URI to execute the instruction set.

In some embodiments methods may further comprise receiving by the network service a failure notification indicating a failure to execute a transaction by a network service in the network service workflow rolling back by the network service the custom transaction performed by the network service on behalf of the client application identifying by the network service a previous network service in the network service workflow or the client application and sending by the network service a failure notification to the identified previous network service or the client application.

In some embodiments a non transitory computer readable storage medium may be provided having computer executable instructions executable by a processor the instructions that when executed by the processor implement a network service which causes the processor to receive a workflow package as described above in connection with the methods directed to processing a network service workflow execute an instruction set from among the instruction sets in the workflow package to effect a custom transaction on behalf of the client application store transaction result information in a storage location according to the result storage instructions in the workflow package identify a next network service in the network service workflow or a return to the client application and when a next network service is identified in the network service workflow send the workflow package to the next network service in the network service workflow without interaction between the client application and the network service and when a next network service is not identified in the network service workflow send workflow completion information to the client application. The computer readable storage medium may furthermore have instructions which cause the processor to carry out the various network service method steps described above.

In some embodiments a server device may be configured to provide a network service. The server device may comprise a processor a memory and a network service stored in the memory and executable by the processor. The network service may be configured to receive a workflow package as described above in connection with the methods directed to processing a network service workflow execute an instruction set from among the instruction sets in the workflow package to effect a custom transaction on behalf of the client application store transaction result information in a storage location according to the result storage instructions in the workflow package identify a next network service in the network service workflow or a return to the client application and when a next network service is identified in the network service workflow send the workflow package to the next network service in the network service workflow without interaction between the client application and the network service and when a next network service is not identified in the network service workflow send workflow completion information to the client application. The server device may furthermore be configured to carry out the various network service method steps described above.

In end user may perform a setup activation with client application . Client application may be configured to activate a client workflow manager e.g. client workflow manager illustrated in to generate and send a workflow package to network service wherein network service is first in a workflow sequence specified in workflow package . Client application and or client workflow manager may optionally also be configured to perform a storage retrieval operation with common storage location .

Network service may be configured to execute an instruction set in workflow package to perform a transaction on behalf of end user and or client application . Network service may optionally be configured to perform storage retrieval operations with common storage location to carry out the transaction and or store transaction results. Network service may be configured to identify next network service in the workflow sequence specified in workflow package and to send workflow package to next network service .

Network service may be configured to execute an instruction set in workflow package to perform a transaction on behalf of end user and or client application . Network service may optionally be configured to perform storage retrieval operations with common storage location to carry out the transaction and or store transaction results. Network service may be configured to identify next network service in the workflow sequence specified in workflow package and to send workflow package to next network service .

Network service may be configured to execute an instruction set in workflow package to perform a transaction on behalf of end user and or client application . Network service may optionally be configured to perform storage retrieval operations with common storage location to carry out the transaction and or store transaction results. Network service may be configured to identify a return to client application in the workflow sequence specified in workflow package and to send workflow completion information to client application .

In some embodiments client application may itself be implemented as a network service. End user may employ an end user device such as a personal computer or mobile device equipped with a browser or other software configured to interact with client application via a network connection to a server comprising client application . Any of client application network services and and common storage location may be implemented within a same data center or at different data centers. Connections between client application network services and and or common storage location may therefore be implemented as local network connections e.g. Local Area Network LAN type network connections or as remote network connections e.g. as Wide Area Network WAN type network connections as appropriate.

In some embodiments client application may comprise an application at a client device operated by end user and network services and and common storage location may comprise applications storage in the cloud i.e. at servers accessible via a network connection. Client application may for example be coupled to network services and and to common storage location via a Wide Area Network WAN type network connection. Meanwhile network services and and common storage location may be coupled to one another via WAN or Local Area Network LAN type network connections as appropriate depending on whether network services and and common storage location are implemented within a same data center. For example when network services and and common storage location are all implemented within a same data center connections between these components may be implemented as local network connections.

In some embodiments client application may be developed using a software development framework. Software development frameworks generally assist in creating applications by providing a variety of software development tools as will be appreciated. In some embodiments a software development framework may include one or more tools configured to insert client workflow manager into client application during design of client application .

The terms client device and or client computing device are used herein to refer to a device comprising client application regardless of whether client application is implemented as a network service or locally at an end user device. A client device may therefore comprise a server in some embodiments wherein the server is a client of other network services as will be appreciated by those of skill in the art. The term network service device and or network service computing device are used herein to refer to a device comprising a network service such as one or more of network services and or . It will also be appreciated those of skill in the art that in some embodiments client application and one or more of network services and or may be implemented on a same computing device in the cloud.

In some embodiments setup activation may comprise one or more workflow setup interactions between end user and client application to receive workflow configuration data that client application may provide to client workflow manager to generate workflow package . For example client application may be configured to enable end user to purchase eBook translations. Setup activation may comprise receiving by client application workflow configuration data such as network service identification sequence and or transaction data. In the eBook translation example workflow configuration data may include a selection of an eBook to translate a selected language to translate the eBook into a selected translation service formatting selections for the eBook payment information and or eBook delivery instructions. In general network services included in workflow package may comprise any bundle of services. Payment and shipping services video transcoding and storage services and data collection and visual reporting services are all examples of network services that may be bundled in workflow package .

Client application may be configured to provide received workflow configuration data to client workflow manager to generate workflow package including received workflow configuration data. Example workflow packages are described in connection with and . In general workflow package may comprise inter alia an identification of client application identifications of network services workflow sequence information instruction sets for each of the network services to perform custom transactions on behalf of client application and result storage instructions directing storage of transaction result information by each of the network services.

In the eBook translation example workflow package may identify network services and and workflow sequence information may indicate that network service is to be performed first network service is to be performed second and network service is to be performed third last. Network service may provide a payment processing service network service may provide a translation service and network service may provide an eBook formatting and delivery service.

Workflow package may comprise an instruction set for network service to perform a custom transaction including processing a payment according to end user payment data. Workflow package may comprise an instruction set for network service to perform a custom transaction including translating a selected eBook into a selected language according to end user eBook and language translation selections. Workflow package may comprise an instruction set for network service to perform a custom transaction including formatting translated eBook text in a translated eBook and delivering the translated eBook to end user .

Client application and or client workflow manager may be configured to initiate a network service workflow in response to an activation command received from end user . Client application and or client workflow manager may be configured to initiate the network service workflow by identifying first network service in workflow package and sending workflow package to first network service . In some embodiments client application and or client workflow manager may be configured to store workflow information as may be needed by any of network services and or in common storage location for use by network services and or when carrying out various custom transactions according to the network service workflow. Workflow information stored in common storage location may be identified for example with a client application identifier ID and or a workflow package ID allowing network services and or to look up information in common storage location for the purpose of performing transactions according to the network service workflow.

Each of network services may generally be configured to receive workflow package extract custom transaction instructions from workflow package perform extracted custom transaction instructions according to instructions in workflow package store custom transaction results according to storage instructions in workflow package identify a next network service or a return to client application and or a return to client workflow manager according to the network service workflow and either send workflow package to the next network service or send workflow completion information to client application and or to client workflow manager .

In the eBook translation example network service may be configured to receive workflow package from client application and or client workflow manager extract custom payment transaction instructions from workflow package perform extracted custom payment transaction instructions store custom payment transaction results according to storage instructions in workflow package identify network service as the next network service and send workflow package to next network service .

Network service may be configured to receive workflow package from network service extract custom transaction instructions including an eBook selection and a translation language selection from workflow package perform extracted custom translation transaction instructions store custom translation transaction results according to storage instructions in workflow package identify network service as the next network service and send workflow package to next network service .

Network service may be configured to receive workflow package from network service extract custom transaction instructions including eBook formatting and delivery selections from workflow package perform extracted custom eBook formatting transaction instructions perform extracted custom eBook delivery transaction instructions store custom formatting and delivery transaction results according to storage instructions in workflow package identify a return to client application and or to client workflow manager and send workflow completion information to client application and or to client workflow manager .

Workflow completion information may comprise any of a variety of data. In some embodiments workflow completion information may comprise workflow package . In some embodiments workflow completion information may comprise a notification that a network service workflow is complete. In some embodiments workflow completion information may comprise a result retrieval location e.g. within common storage location from which client application and or client workflow manager may retrieve workflow transaction results.

Client application and or client workflow manager may be configured to receive workflow completion information . In some embodiments client application and or client workflow manager may be configured to flag a workflow as completed e.g. in a list of workflow orders upon receiving workflow completion information . In some embodiments client application and or client workflow manager may be configured to notify end user of workflow completion. In some embodiments client application and or client workflow manager may be configured to automatically retrieve stored workflow information from common storage location in response to receiving workflow completion information .

Network services in a network service workflow may be specified within workflow package using any of a variety of techniques. In some embodiments network services may be specified using URIs and or other unique IDs that uniquely identify specific network services such as for example a URI to identify a translation service provided by GOOGLE . In some embodiments network services may be specified by network service type and real time selection criteria. For example a network service may be specified as any network service having a translation type along with real time selection criteria specifying lowest cost. When identifying a next network service network service may be configured to search for network services of the specified type poll available network services of the specified type for real time cost information and send workflow package to a lowest cost translation service. Cost is just one example of real time selection criteria and other real time selection criteria such as speed quality geographical location available options vendor preferences and or recommendations and other third party evaluation criteria may be used instead of or in combination with cost based real time selection criteria.

In some embodiments common storage location may comprise a network storage location such as a network drive cloud storage location or other location that may be accessed by each of client application and network services . In some embodiments transaction result information may be stored within workflow package to potentially eliminate any need for storage retrieval operations and or . Either or both of workflow package and common storage location may therefore be referred to herein as a common storage location .

Transaction result information produced by network services and or may optionally be handled differently than log information. Transaction result information may comprise results of transactions performed in accordance with custom transaction instructions in workflow package . Log information may comprise for example logs of activities performed by a network service in the course of performing a transaction. While log information can be relevant for failure roll back troubleshooting and the like end user and client application are typically interested in transaction results. In some embodiments transaction result information may be stored in a common storage location such as in common storage location with storage retrieval operations and or or in workflow package while log information may be stored in a separate location which may or may not also comprise a common storage location. In some embodiments transaction result information may be stored in workflow package while log information may be stored in common storage location with storage retrieval operations and or for use in roll back and troubleshooting as necessary.

In some embodiments workflow package and or transaction results produced by network services and may be wholly or partially encrypted. Each network service may for example be configured to decrypt workflow package upon receiving workflow package and to encrypt workflow package prior to sending workflow package or workflow completion information to a next network service or to client application and or client workflow manager . In some embodiments each network service may be configured to encrypt transaction results for storage in common storage location . In some embodiments encryption decryption keys for encrypting decrypting workflow package and or transaction results may be included in workflow package along with encryption decryption instructions.

In some embodiments client application client workflow manager and or network services and may be configured to sign workflow package using public private key architectures and or to use any of a variety of authentication protocols to authenticate workflow package upon receiving workflow package from a previous network service or client application .

Network service ID is associated with a network service instruction set comprising custom transaction instructions log storage instructions and failure roll back instructions . Custom transaction instructions include result storage instructions and encryption instructions .

Network service ID and real time selection criteria is associated with a network service instruction set comprising custom transaction instructions log storage instructions and failure roll back instructions . Custom transaction instructions include result storage instructions and encryption instructions .

Network service ID is associated with a network service instruction set comprising custom transaction instructions log storage instructions failure roll back instructions and workflow completion instructions . Custom transaction instructions include result storage instructions and encryption instructions . Workflow completion instructions may be configured to provide a notification or instruction configuring a network service identified by network service ID to return workflow completion information to client application and or to client workflow manager e.g. rather than attempting to identify a next network service within network service workflow . Workflow completion instructions may reference or include client application ID and the network service identified by network service ID may be configured to use client application ID to determine a destination for workflow completion information.

In some embodiments workflow package may comprise for example an Extensible Markup Language XML package. Any other markup language format as well as non markup language formats may also be used as convenient to suit particular embodiments. It will be appreciated that a wide variety of layouts and structuring of workflow package contents are possible.

Workflow processing instructions may comprise for example global instructions for use by network services in handling workflow package . Workflow processing instructions may include for example instructions for network services to open network service workflow extract an applicable network service instruction set store transaction results identify a next network service or return to a client application send workflow package to an identified next network service and or send workflow completion information to the client application. In some embodiments network services configured for use according to this disclosure may each be configured with workflow processing instructions similar to workflow processing instructions in which case workflow processing instructions need not be included in workflow package .

Network service workflow may comprise a plurality of network services in the form of network service IDs and workflow sequence information to engage the network services according to a workflow sequence. For network service workflow workflow sequence information is embodied by the order in which network service IDs are included in network service workflow that is the structure of the data may imply the workflow sequence information.

When a next network service is specified as a URI or other unique identifier in workflow package network services may be configured to reference the URI to identify the next network service and to send workflow package to the next network service at the designated URI. When the next network service is specified as a network service type and real time selection criteria e.g. as with network service type ID and real time selection criteria network services may be configured to identify the next network service by determining a plurality of network services according to the identified network service type which network services may be referred to as network services X Y and Z and selecting a next network service e.g. network service X from among the plurality of network services according to the real time selection criteria. For example when network service type ID and real time selection criteria indicates a lowest cost network service according to an identified network service type network services may be configured to determine a lowest cost network service of the identified network service type from among the plurality of network services according to the identified network service type.

Instruction sets and for network services and respectively may include custom transaction instructions and respectively which configure corresponding network services to perform custom transactions on behalf of the client application. Instruction sets and may include for example self contained encoded messages and or URI along with custom transaction instructions. Network services and may be configured to open the self contained encoded messages and or access URI to execute instruction sets and .

In some embodiments custom transaction instructions and may include result storage instructions and respectively and or encryption instructions and respectively directing storage and encryption of transaction result information by each of network services and . Result storage instructions and may for example direct storage in result storage locations comprising e.g. common locations for use by network services and such as network storage location s or location s within workflow package .

In some embodiments network service instruction sets and for network services and respectively may include log storage instructions and respectively. Log storage instructions and may direct storage of log information by each of the network services and . In some embodiments log storage locations designated in log storage instructions and may be similar for each of network services and e.g. by designating a common storage location for log information produced by each of network services and .

In some embodiments network service instruction sets and for network services and respectively may include failure roll back instructions and respectively. Failure roll back instructions may be activated when a network service fails to carry out network service instructions within an applicable network service instruction set and optionally when a workflow failure notification is received from another network service in a workflow. In some embodiments failure roll back instructions and may instruct corresponding network services to notify a previous network service in the workflow. For example should the network service identified by network service ID fail the network service identified by network service ID may be configured carry out failure roll back instructions to roll back a transaction performed according to custom transaction instructions and to notify a network service from which the network service identified by network service ID received workflow package referred to herein as network service X of the failure. Network service X may be configured to roll back a transaction performed according to custom transaction instructions and to carry out failure roll back instructions to notify the network service identified by network service ID of the failure. The network service identified by network service ID may be configured to roll back a transaction performed according to custom transaction instructions and to carry out failure roll back instructions to notify client application and or client workflow manager of the failure. In some embodiments any of failure roll back instructions and or and may be configured to re try identifying a next network service and sending workflow package rather than rolling back. For example failure roll back instructions may be configured to cause the network service identified by network service ID to re select a network service according to network service type ID and real time selection criteria and to send workflow package to a newly selected network service.

Elements included in example workflow package may be similar to those included in example workflow package . Network service workflow may include a plurality of network services identified within network service IDs . Workflow sequence may include workflow sequence information for example sequence identifiers corresponding to each of network service IDs to engage network services identified by network service IDs according to a workflow sequence. Instruction sets and may include instructions for each of the network services in network service workflow . For example each of instruction sets and may include a network service identifier allowing instruction sets to be located and executed by an appropriate network service. Each instruction set and may include custom transaction instructions and respectively configuring corresponding network services to perform custom transactions on behalf of client application .

In embodiments according to network service workflow may include common elements that may be processed by multiple network services. For example each network service in network service workflow may be configured to process common result storage instruction s encryption instructions log storage instruction s and or failure roll back instructions . Any network service in network service workflow that is configured to select a next network service using selection criteria may be configured to use real time selection criteria . Any last network service in workflow sequence may be configured to send workflow completion information according to workflow completion instructions and to identify a destination for workflow completion information using client application ID .

Depending on the desired configuration processor may be of any type including but not limited to a microprocessor P a microcontroller C a digital signal processor DSP or any combination thereof. Processor may include one or more levels of caching such as a level one cache and a level two cache a processor core and registers . Processor core may include an arithmetic logic unit ALU a floating point unit FPU a digital signal processing core DSP Core or any combination thereof. A memory controller may also be used with processor or in some implementations memory controller may be an internal part of processor .

Depending on the desired configuration system memory may be of any type including but not limited to volatile memory such as RAM non volatile memory such as ROM flash memory etc. or any combination thereof. System memory typically includes an operating system one or more applications and program data . In some embodiments operating system may comprise a virtual machine that is managed by a Virtual Machine Manager VMM . Applications may include client application . Operating system and or client application may include for example a client workflow manager configured to generate workflow packages and carry out operations as necessary to initiate and manage workflows on behalf of client application as discussed herein. Program data may include workflow data and any other data that may be used by client workflow manager .

Computing device may have additional features or functionality and additional interfaces to facilitate communications between the basic configuration and any required devices and interfaces. For example a bus interface controller may be used to facilitate communications between the basic configuration and one or more data storage devices via a storage interface bus . The data storage devices may be removable storage devices non removable storage devices or a combination thereof. Examples of removable storage and non removable storage devices include magnetic disk devices such as flexible disk drives and hard disk drives HDD optical disk drives such as compact disk CD drives or digital versatile disk DVD drives solid state drives SSD and tape drives to name a few. Example computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data.

Level 1 cache level 2 cache system memory removable storage devices and non removable storage devices are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that may be used to store the desired information and that may be accessed by computing device . Any such computer storage media may be part of computing device .

Computing device may also include an interface bus for facilitating communication from various interface devices e.g. output interfaces peripheral interfaces and communication interfaces to the basic configuration via the bus interface controller . Example output devices include a graphics processing unit and an audio processing unit which may be configured to communicate to various external devices such as a display or speakers via one or more A V ports . Example peripheral interfaces may include a serial interface controller or a parallel interface controller which may be configured to communicate through either wired or wireless connections with external devices such as input devices e.g. keyboard mouse pen voice input device touch input device etc. or other peripheral devices e.g. printer scanner etc. via one or more I O ports . Other conventional I O devices may be connected as well such as a mouse keyboard and so forth. An example communications device includes a network controller which may be arranged to facilitate communications with one or more other computing devices namely any computing devices providing network services and and common storage location via one or more communication ports .

The computer storage media may be one example of a communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. A modulated data signal may be a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared IR and other wireless media.

In some embodiments computing device may also be implemented as a business or personal use computer including both laptop computer and non laptop computer configurations. Computing device may also be implemented as a server e.g. when client application provides a network service. In some embodiments computing device may comprise mobile device such as a smart phone or tablet computing device or virtually any other device including for example a television set a DVD player an eBook reader and a gaming console.

In blocks are illustrated as including blocks being performed sequentially e.g. with block first and block last. It will be appreciated however that these blocks may be re arranged as convenient to suit particular embodiments and that these blocks or portions thereof may be performed concurrently in some embodiments. It will also be appreciated that in some examples various blocks may be eliminated divided into additional blocks and or combined with other blocks.

At an End User Setup Activation Interaction s block client application may for example interact with one or more end users via one or more User Interfaces UIs . Example interactions are discussed for example in connection with setup activation in . Example UIs may provide fields and controls allowing end user to provide workflow configuration data to client application . For example in the eBook translation example introduced herein a UI may provide fields and or controls configured to receive an item eBook selection service and service preference selections e.g. a language to translate the eBook into and eBook format preferences network service provider selections real time selection criteria selections and or enter payment information and delivery preference selections.

It will be appreciated that network services can provide virtually any services possible workflow configuration data consumed by network services may include virtually any workflow configuration data and UI configurations that may be deployed for end user interactions are subject to a wide variety of design and functional considerations. The present disclosure is therefore not limited to any specific UI or workflow configuration data that may be received by client application pursuant to block . In response to receiving an activation command from end user client application may activate client workflow manager to generate the workflow package including received workflow configuration data. Block may be followed by block .

At a Generate Workflow Package block client workflow manager may generate the workflow package. Client workflow manager may generally initialize a workflow package envelope and insert into the workflow package envelope workflow configuration data received in block and or workflow configuration data calculated based on input received in block . Block may include blocks .

At an Initialize Workflow Package Envelope block client workflow manager may create the workflow package envelope such as a file or other data structure in a memory accessible by computing device . In some embodiments any metadata that is generic to some or all workflow packages and or data that is applicable to the workflow package as a whole may be automatically included in the workflow package envelope. For example in some embodiments a client application ID such as or workflow processing instructions such as a network service workflow data structure such as or a transaction result storage data structure such as a table other data structure and optionally any result storage encryption log storage failure roll back workflow completion instructions such as and and real time selection criteria such as applicable to network services within the network service workflow may be inserted in block . Any workflow instructions that are unique to specific network services to be included in the workflow package may be inserted in connection with block . Block may be followed by block .

At an Insert Client Application ID Workflow Processing Instructions block client workflow manager may insert a client application ID and or workflow processing instructions into the workflow package if not done as part of block . For example in some embodiments client workflow manager may be configured within operating system in . Client workflow manager may be accessed by multiple different client applications. Client workflow manager may determine an appropriate client application ID for insertion in the workflow package by using a client application ID for a client application that requested generation of a workflow package. Similarly client workflow manager may determine workflow processing instructions from a variety of available workflow processing instructions depending on the client application and or the bundle of network services to be included in the workflow package. Block may be followed by block .

At an Insert Network Service IDs and Workflow Sequence Info block client workflow manager may insert network service IDs into a network service workflow data structure such as or within the workflow package. Network services in the network service workflow may be specified using URI or any other identifiers. Network services in the network service workflow may also be specified according to network service type and real time selection criteria e.g. by including identified network service type and selection criteria real time such as lowest cost.

Network service IDs may comprise network service IDs for some or all network services involved in completing operations pursuant to end user setup interactions in block . For example network service IDs may comprise a bundle of related network services such as a payment service and a shipping service a video transcoding service and a storage service or a data collection service and a visual reporting service. Such bundles of related network services may supply network services specified in block or alternatively some network services may be carried out within a network service workflow while other network services may be separately accessed e.g. by client application outside the network service workflow or via a separate network service workflow. In some embodiments client workflow manager may be configured to generate multiple workflow packages and initiate multiple network service workflows to deploy network services on behalf of client application .

Workflow sequence information may engage network services according to a workflow sequence. Workflow sequence information may comprise for example sequence identifiers for network service IDs included in the workflow package. Client workflow manager may be configured to send the workflow package to a first network service in the sequence and each network service may be configured to send the workflow package to a next network service in the sequence or else to return workflow completion information to client workflow manager .

In some embodiments workflow sequence information may be pre determined for certain bundles of network services and client workflow manager may insert pre determined workflow sequence information. Alternatively client workflow manager may assign workflow sequence information according to dependencies of network services included in the workflow package. For example when a second network service is dependent on an output generated by a first network service client workflow manager may insert workflow sequence information that sequences the first network service prior to the second network service. Other approaches for calculating network sequence information for insertion in a workflow package according to block may also be used. In some embodiments sequence information may be assigned randomly. In some embodiments sequence information may be assigned by end user in block . In some embodiments more error prone network services may be sequenced prior to less error prone network services to reduce complexity in event of a failure roll back or vice versa to allow for partial roll back and re trying more error prone network services. Block may be followed by block .

At an Insert Instruction Set for Each Network Service block client workflow manager may insert instruction sets for each of the network services in the workflow package each instruction set including instructions configuring a corresponding network service to perform a custom transaction on behalf of the client application . In some embodiments instruction sets for one or more of the network services may include self contained encoded messages and or URI along with instructions. URI may for example direct network services to resources involved in carrying out instruction sets while accompanying instructions direct processing of resources available at the URI.

Instruction sets may be generated by client application according to workflow configuration data received in block . For example an instruction set for a payment service may include end user credit card information received in block along with an explicit or implicit instruction to process a payment. A payment service may perform a custom transaction by processing the payment using the end user credit card information inserted into the workflow package. Similarly instruction sets for any network services included in the workflow package may comprise workflow configuration data received in block and or workflow configuration data calculated based on end user information selections and instructions received in block as well as explicit or implicit instructions to carry out a transaction using the workflow configuration data.

In some embodiments instruction sets for network services in the network service workflow may include result storage encryption log storage failure roll back workflow completion instructions and or real time selection criteria within each instruction set e.g. as illustrated in . In some embodiments instruction sets may reference shared result storage encryption log storage failure roll back workflow completion instructions and or real time selection criteria e.g. as illustrated in . Block may be followed by block .

At an Insert Result Storage Encryption Log Storage Failure Roll Back Workflow Completion Instructions and Real Time Selection Criteria block client workflow manager may insert into the workflow package any shared result storage encryption log storage failure roll back workflow completion instructions such as and and real time selection criteria such as applicable to network services within the network workflow when not done as part of block . Any workflow instructions that are unique to specific network services to be included in the workflow package may be inserted in connection with block .

In some embodiments result storage instructions directing storage of transaction result information by each of the network services may direct storage to a common location for use by the network services. Such a common location may include for example a network storage location or a location within the workflow package. In some embodiments log storage location s may direct storage of log information by each of the network services. Block comprising blocks may be followed by block .

Blocks may be performed by client application operating system and or client workflow manager . For simplicity of explanation blocks are discussed herein as performed by client workflow manager however this disclosure is not limited to embodiments in which client workflow manager performs blocks .

At a Send Workflow Package to First Network Service block client workflow manager may send the workflow package to a first network service in the network service workflow i.e. to the first network service specified in workflow sequence information within the workflow package. Client workflow manager may for example read a network service ID for the first network service in the network service workflow determine a destination address from the network service ID or otherwise look up a destination address for the first network service and send the workflow package to the destination address for the first network service.

In some embodiments client workflow manager may perform encryption authentication of the workflow package prior to sending it to the first network service. For example client workflow manager may digitally sign the workflow package so that recipient network services may authenticate client workflow manager client application computing device and or end user as an originator of the workflow package. Client workflow manager may engage an encryption algorithm to encrypt the workflow package. After sending the workflow package to the first network service in the network service workflow in some embodiments the network services may proceed to process the network service workflow without further interaction between client workflow manager and the first network service or intermediate network services in the network service workflow. When the last network service in the network service workflow executes a further interaction between client workflow manager and the last network service may take place for example in the form of the last network service passing workflow completion information to the client workflow manager through a callback function. In some embodiments client workflow manager may allow completion of the first network service in the network service workflow and any intermediate network services in the network service workflow without further interaction between client workflow manager and the first network service or the intermediate network services. Allowing completion of network services may reduce network traffic between client workflow manager and network services as network services may communicate the workflow package to next network services without communications between client workflow manager and the network services until the last network service in the network service workflow returns workflow completion information to client workflow manager .

In some embodiments client workflow manager may idle or spin during operations of network services pursuant to the workflow while maintaining state information relating to the network service workflow in an active memory of computing device . In some embodiments client workflow manager may write state information to disk and shut down and then subsequently re start in response to receiving workflow completion information at computing device .

In some embodiments client workflow manager may be configured to allow completion of network services for a predetermined period of time. If client workflow manager does not receive workflow completion information within the predetermined period of time client workflow manager may check for errors e.g. by communications with some or all network services and or common storage location in the network service workflow. Client workflow manager may report errors and or received workflow failure information to end user . In some embodiments client workflow manager may automatically prompt end user to re activate the network service workflow optionally providing fields and or controls for end user update or correction of workflow configuration data. In some embodiments client workflow manager may be configured to automatically re activate the network service workflow without further end user input. Block may be followed by block .

At a Receive Workflow Completion Information block client workflow manager may receive workflow completion information from a last network service in the network service workflow without further interaction between client workflow manager and the first network service or intermediate network services in the network service workflow that is without interaction between client workflow manager and the first network service or intermediate network services in the network service workflow between sending the workflow package to the first network service in block and receiving workflow completion information in block . In some embodiments client workflow manager may perform decryption authentication of received workflow completion information. For example client workflow manager may engage an authentication protocol to ensure that received workflow completion information comes from a last network service in the network service workflow and or to ensure that any transaction results included in received workflow completion information are in fact produced by network services in the network service workflow. Client workflow manager may engage a decryption algorithm to decrypt received workflow completion information.

In some embodiments workflow completion information may comprise a notification that the network service workflow is complete. In some embodiments workflow completion information may comprise transaction result information from some or all network services in the network service workflow. In some embodiments workflow completion information may comprise a common storage location address from which transaction result information can be retrieved. In some embodiments workflow completion information may comprise the workflow package wherein the workflow package is modified to include workflow completion information. It will be appreciated that workflow completion information may be configured in a variety of ways and any information notification or other communication that indicates workflow completion may be used as appropriate for particular implementations. Block may be followed by block .

At a Workflow Completion Processing block client workflow manager may for example store workflow completion information notify end user of workflow completion and or automatically retrieve transaction results from common storage location . Client workflow manager may also notify client application of workflow completion so that client application may proceed with further end user interactions or other client application operations.

In network service computing devices according to system memory may include an operating system one or more applications and program data . Applications may include network service as an example network service. Operating system and or network service may include for example a network service workflow manager configured to process network service workflows for example by receiving workflow packages processing instruction sets within received workflow packages storing transaction results and sending workflow packages to a next network service or returning workflow completion data to client application or client workflow manager as discussed herein. Program data may include application data and any other data that may be used by network service workflow manager . Devices according to may provide any network service e.g. any of network services or and accordingly any network service may be configured to include network service workflow manager or to access network service workflow manager in operating system .

In some embodiments computing device may be implemented as a server e.g. a server managed by a network service provider and coupled to a network to provide a network service pursuant to incoming electronic service requests. Computing device may also comprise one or more professionally managed devices within a data center.

In blocks are illustrated as including blocks being performed sequentially e.g. with block first and block last. It will be appreciated however that these blocks may be re arranged as convenient to suit particular embodiments and that these blocks or portions thereof may be performed concurrently in some embodiments. It will also be appreciated that in some examples various blocks may be eliminated divided into additional blocks and or combined with other blocks.

At a Receive Workflow Package block network service may receive the workflow package. The workflow package may be received from client application or a previous network service. The workflow package may be digitally signed and or encrypted and may include inter alia an identification of client application a network service workflow data structure such as network service workflow or network service workflow comprising a plurality of network services and workflow sequence information to engage the network services according to a workflow sequence instruction sets for each of the network services in the network service workflow each instruction set including instructions configuring a corresponding network service to perform a custom transaction on behalf of client application log storage locations directing storage of log information by each of the network services and or result storage instructions directing storage of transaction result information by each of the network services. Block may be followed by block .

At a Process Workflow Package block network service may generally perform operations to open the workflow package and execute instructions therein for network service . Block may include blocks .

At a Decryption Authentication block network service may perform decryption authentication of the workflow package. For example network service may engage an authentication protocol to ensure that the received workflow package comes from client application or a previous network service in the network service workflow. Network service may engage a decryption algorithm to decrypt the workflow package. Block may be followed by block .

At an Execute Workflow Processing Instructions block network service may execute workflow processing instructions for example to access an instruction set for network service in the workflow package and or to perform other actions pursuant to processing the workflow package. In some embodiments the workflow processing instructions may be included in the workflow package e.g. as workflow processing instructions illustrated in and . In some embodiments network services may have native workflow processing instructions which may be executed when workflow packages are received. Block may be followed by block .

At an Execute Instruction Set to Effect Custom Transaction block network service may extract from the workflow package load and execute an instruction set from among the instruction sets in the workflow package to effect a custom transaction on behalf of client application . For example when an instruction set for network service is included in a self contained encoded message and or a URI along with instructions network service may open the self contained encoded message and or access the URI to execute the instruction set.

Network service may identify its instruction set within the workflow package for example by referring to an instruction set sequence number a network service name type identifier or other identifier. Network service may effect a custom transaction on behalf of client application by performing a service according to any workflow configuration data included in the workflow package. For example a custom payment transaction may be effected by using payment information included in the workflow package or any other service may be carried out as specified in the workflow package. Block may be followed by block .

At a Store Transaction Result Information block network service may store transaction result information in a storage location according to result storage instructions in the workflow package. As noted herein the result storage location may comprise a location within the workflow package or for example one or more additional result files that may be packaged alongside the workflow package such as in a same .ZIP file or other multi file package. In some embodiments the result storage location may comprise common storage location implemented as a network drive or other storage accessible to a plurality of network services. In some embodiments network service may digitally sign and or encrypt transaction result information prior to storage. In some embodiments network service may store log information according to instructions in the workflow package. When the workflow package comprises log storage locations directing storage of log information by network service network service may store log information in a storage location from among the one or more log storage locations in the workflow package namely in a storage location designated for use by network service . Block including blocks may be followed by block .

At a Workflow Handoff block network service may generally determine a next recipient within the network service workflow such as a next network service in the network service workflow or a return to client application and take any steps to communicate workflow information such as the workflow package or workflow completion information to the next recipient. Block may include blocks .

At an Identify Next Recipient block network service may identify a next network service in the network service workflow or a return to client application . Network service may for example check a workflow sequence number for itself in this example network service in the workflow package and then identify the next network service in the network service workflow by identifying a network service with a next sequence number. When no next network service exists in the workflow package network service may identify a return to client application either explicitly based on data included in the workflow sequence information or implicitly based on the lack of any next network service in the workflow sequence information. When the next network service is identified as a URI within the workflow package identifying the next network service in the network service workflow may comprise referencing the URI in the workflow package that identifies the next network service.

In some embodiments the next network service in the network service workflow may be specified as an identified network service type along with real time selection criteria. Network service may identify the next network service in the network service workflow by determining a network service of the identified network service type according to the real time selection criteria from among a plurality of network services according to the identified network service type. For example an identified network service type may comprise a translation service and real time selection criteria may comprise a lowest cost. Network service may determine available translation services e.g. using an additional network service or other service provider identification technology and network service may compare costs of the available services according the real time selection criteria and network service may select a lowest cost translation service. Block may be followed by block .

At an Encryption Authentication block network service may perform encryption authentication of the workflow package and or workflow completion information prior to sending it to the next network service or client application . For example network service may digitally sign the workflow package so that recipient network services may authenticate network service computing device and or network service workflow manager as an originator of the workflow package. Network service may engage an encryption algorithm to encrypt the workflow package. Block may be followed by block .

At a Send Workflow Package Workflow Completion Information to Next Recipient block when a next network service is identified in the network service workflow in block network service may send the workflow package to the next network service in the network service workflow without interaction between client application and network service . When a next network service is not identified in the network service workflow network service may send workflow completion information to client application .

In blocks and are illustrated as including blocks being performed sequentially e.g. with block first and either block or block last. It will be appreciated however that these blocks may be re arranged as convenient to suit particular embodiments and that these blocks or portions thereof may be performed concurrently in some embodiments. It will also be appreciated that in some examples various blocks may be eliminated divided into additional blocks and or combined with other blocks.

At a Generate Receive Failure Notification block network service may generate a failure notification in response to a failure to execute a transaction by network service . Alternatively network service may receive a failure notification relating to the workflow package e.g. from a next network service in the network service workflow. Block may be followed by decision block .

At a Roll Back Determination decision block network service may determine whether a roll back is to be performed in view of the failure notification generated received in block . If a roll back is to be performed methods according to may proceed to block Roll Back Transaction and or block Identify Previous Network Service Client Application . If a roll back is not to be performed methods according to may proceed to block Process Workflow Package and or block Workflow Handoff. 

In some embodiments network service may roll back in response to any failure notification in block . In some embodiments network service may roll back in response to some failure notification conditions and network service may attempt to re try to the network service workflow in response to other failure notification conditions. For example when network service receives a failure notification from a network service that was selected by network service type and real time selection criteria network service may determine not to roll back but rather to proceed to block to re select another acceptable network service. When network service generates a failure notification due to failure of network service in processing a transaction network service may determine to proceed with a roll back via block . Any number of other scenarios or conditions may be deemed appropriate for determining to re try a network service workflow or to proceed with a roll back. In some embodiments decision block may be followed by blocks or .

At a Process Workflow Package block and at a Workflow Handoff block in response to a determination to not roll back the network service workflow network service may perform blocks or as described in connection with . Blocks and may be performed when network service failed to execute a transaction while block may be performed without re trying block when network service did not fail however network service received a failure notification from a next network service in the network service workflow.

At a Roll Back Transaction block network service may roll back its own transaction carried out pursuant to execution of its instruction set in the workflow package. Block may be followed by block .

At an Identify Previous Network Service Client Application block network service may identify a previous network service or a return to client application for example by reference to workflow sequence information in the workflow package. Block may be followed by block .

At a Send Failure Notification block network service may send a failure notification to the previous network service or to client application identified in block . The failure notification may include information including for example which network service in the workflow failed and any failure information provided by the failed network service.

There is little distinction left between hardware and software implementations of aspects of systems the use of hardware or software is generally but not always in that in certain contexts the choice between hardware and software may become significant a design choice representing cost vs. efficiency tradeoffs. There are various vehicles by which processes and or systems and or other technologies described herein may be effected e.g. hardware software and or firmware and that the preferred vehicle will vary with the context in which the processes and or systems and or other technologies are deployed. For example if an implementer determines that speed and accuracy are paramount the implementer may opt for a mainly hardware and or firmware vehicle if flexibility is paramount the implementer may opt for a mainly software implementation or yet again alternatively the implementer may opt for some combination of hardware software and or firmware.

The foregoing detailed description has set forth various embodiments of the devices and or processes via the use of block diagrams flowcharts and or examples. Insofar as such block diagrams flowcharts and or examples contain one or more functions and or operations it will be understood by those within the art that each function and or operation within such block diagrams flowcharts or examples may be implemented individually and or collectively by a wide range of hardware software firmware or virtually any combination thereof. In one embodiment several portions of the subject matter described herein may be implemented via Application Specific Integrated Circuits ASICs Field Programmable Gate Arrays FPGAs digital signal processors DSPs or other integrated formats. However those skilled in the art will recognize that some aspects of the embodiments disclosed herein in whole or in part may be equivalently implemented in integrated circuits as one or more computer programs running on one or more computers e.g. as one or more programs running on one or more computer systems as one or more programs running on one or more processors e.g. as one or more programs running on one or more microprocessors as firmware or as virtually any combination thereof and that designing the circuitry and or writing the code for the software and or firmware would be well within the skill of one of skill in the art in light of this disclosure. In addition those skilled in the art will appreciate that the mechanisms of the subject matter described herein are capable of being distributed as a program product in a variety of forms and that an illustrative embodiment of the subject matter described herein applies regardless of the particular type of signal bearing medium used to actually carry out the distribution. Examples of a signal bearing medium include but are not limited to the following a recordable type medium such as a floppy disk a hard disk drive a Compact Disc CD a Digital Video Disk DVD a digital tape a computer memory etc. and a transmission type medium such as a digital and or an analog communication medium e.g. a fiber optic cable a waveguide a wired communications link a wireless communication link etc. .

Those skilled in the art will recognize that it is common within the art to describe devices and or processes in the fashion set forth herein and thereafter use engineering practices to integrate such described devices and or processes into data processing systems. That is at least a portion of the devices and or processes described herein may be integrated into a data processing system via a reasonable amount of experimentation. Those having skill in the art will recognize that a typical data processing system generally includes one or more of a system unit housing a video display device a memory such as volatile and non volatile memory processors such as microprocessors and digital signal processors computational entities such as operating systems drivers graphical user interfaces and applications programs one or more interaction devices such as a touch pad or screen and or control systems including feedback loops and control motors e.g. feedback for sensing position and or velocity control motors for moving and or adjusting components and or quantities . A typical data processing system may be implemented utilizing any suitable commercially available components such as those typically found in data computing communication and or network computing communication systems. The herein described subject matter sometimes illustrates different components contained within or connected with different other components. It is to be understood that such depicted architectures are merely examples and that in fact many other architectures may be implemented which achieve the same functionality. In a conceptual sense any arrangement of components to achieve the same functionality is effectively associated such that the desired functionality is achieved. Hence any two components herein combined to achieve a particular functionality may be seen as associated with each other such that the desired functionality is achieved irrespective of architectures or intermediate components. Likewise any two components so associated may also be viewed as being operably connected or operably coupled to each other to achieve the desired functionality and any two components capable of being so associated may also be viewed as being operably couplable to each other to achieve the desired functionality. Specific examples of operably couplable include but are not limited to physically connectable and or physically interacting components and or wirelessly inter actable and or wirelessly interacting components and or logically interacting and or logically inter actable components.

With respect to the use of substantially any plural and or singular terms herein those having skill in the art may translate from the plural to the singular and or from the singular to the plural as is appropriate to the context and or application. The various singular plural permutations may be expressly set forth herein for sake of clarity.

It will be understood by those within the art that in general terms used herein and especially in the appended claims e.g. bodies of the appended claims are generally intended as open terms e.g. the term including should be interpreted as including but not limited to the term having should be interpreted as having at least the term includes should be interpreted as includes but is not limited to etc. . It will be further understood by those within the art that if a specific number of an introduced claim recitation is intended such an intent will be explicitly recited in the claim and in the absence of such recitation no such intent is present. For example as an aid to understanding the following appended claims may contain usage of the introductory phrases at least one and one or more to introduce claim recitations. However the use of such phrases should not be construed to imply that the introduction of a claim recitation by the indefinite articles a or an limits any particular claim containing such introduced claim recitation to inventions containing only one such recitation even when the same claim includes the introductory phrases one or more or at least one and indefinite articles such as a or an e.g. a and or an should typically be interpreted to mean at least one or one or more the same holds true for the use of definite articles used to introduce claim recitations. In addition even if a specific number of an introduced claim recitation is explicitly recited those skilled in the art will recognize that such recitation should typically be interpreted to mean at least the recited number e.g. the bare recitation of two recitations without other modifiers typically means at least two recitations or two or more recitations . Furthermore in those instances where a convention analogous to at least one of A B and C etc. is used in general such a construction is intended in the sense one having skill in the art would understand the convention e.g. a system having at least one of A B and C would include but not be limited to systems that have A alone B alone C alone A and B together A and C together B and C together and or A B and C together etc. . In those instances where a convention analogous to at least one of A B or C etc. is used in general such a construction is intended in the sense one having skill in the art would understand the convention e.g. a system having at least one of A B or C would include but not be limited to systems that have A alone B alone C alone A and B together A and C together B and C together and or A B and C together etc. . It will be further understood by those within the art that virtually any disjunctive word and or phrase presenting two or more alternative terms whether in the description claims or drawings should be understood to contemplate the possibilities of including one of the terms either of the terms or both terms. For example the phrase A or B will be understood to include the possibilities of A or B or A and B. 

While certain example techniques have been described and shown herein using various methods devices and systems it should be understood by those skilled in the art that various other modifications may be made and equivalents may be substituted without departing from claimed subject matter. Additionally many modifications may be made to adapt a particular situation to the teachings of claimed subject matter without departing from the central concept described herein. Therefore it is intended that claimed subject matter not be limited to the particular examples disclosed but that such claimed subject matter also may include all implementations falling within the scope of the appended claims and equivalents thereof.

