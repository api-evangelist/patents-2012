---

title: Rest interface for job submission
abstract: Methods, systems, and computer program products for REST interface for job submission are provided for use at a computing system that includes one or more clients, one or more hosting programs and a cluster that includes a plurality of schedulers. The hosting program works between the clients on different platforms and the schedulers of the cluster system. The hosting program receives requests from the clients and then submits the requests to the schedulers. The communication between the hosting program and the schedulers may be based on .Net remoting protocol. Regardless of what platform the clients use, the hosting program maintains a same user interface to all the clients and the communication between the clients and the hosting program may be based on Representational State Transfer (“REST”). In addition, the hosting program also delegates identities to the clients when it receives multiple authentications from the schedulers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08775507&OS=08775507&RS=08775507
owner: Microsoft Corporation
number: 08775507
owner_city: Redmond
owner_country: US
publication_date: 20120105
---
Computer systems and related technology affect many aspects of society. Indeed the computer system s ability to process information has transformed the way we live and work. Computer systems now commonly perform a host of tasks e.g. word processing scheduling accounting etc. that prior to the advent of the computer system were performed manually. More recently computer systems have been coupled to one another and to other electronic devices to form both wired and wireless computer networks over which the computer systems and other electronic devices can transfer electronic data. Accordingly the performance of many computing tasks are distributed across a number of different computer systems and or a number of different computing environments.

High performance computing HPC clusters allow the users to submit computing jobs to the clusters. The computing jobs run on cluster resources such that the computing jobs will not consume the users local computing resources. That being said the users could be operating on different platforms including non Windows platforms such as Mac OS or Linux. Thus the High performance computing cluster need be able to receiving requests of computing jobs from different platforms.

Further while the High performance cluster allows job submission from different platforms the application programming interfaces API are usually different between different platforms. These different APIs can cause independent software vendors ISV substantial difficulties in building their applications.

The present invention extends to methods systems and computer program products for REST interface for job submission. At a cluster system a hosting program works between the clients on different platforms and the schedulers of the cluster system. The hosting program receives requests from the clients and then submits the requests to the schedulers. Independent of what platform the clients use the hosting program maintains a consistent user interface to clients. Communication between the clients and the hosting program can be based on Representational State Transfer REST . In addition the hosting program also delegates identities to the clients when it receives multiple authentications from the schedulers.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Additional features and advantages of the invention will be set forth in the description which follows and in part will be obvious from the description or may be learned by the practice of the invention. The features and advantages of the invention may be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the present invention will become more fully apparent from the following description and appended claims or may be learned by the practice of the invention as set forth hereinafter.

The present invention extends to methods systems and computer program products for REST interface for job submission. At a cluster system a hosting program works between the clients on different platforms and the schedulers of the cluster system. The hosting program receives requests from the clients and then submits the requests to the schedulers. Independent of what platform the clients use the hosting program maintains a consistent user interface to clients. Communication between the clients and the hosting program can be based on Representational State Transfer REST . In addition the hosting program also delegates identities to the clients when it receives multiple authentications from the schedulers.

Embodiments of the present invention may comprise or utilize a special purpose or general purpose computer including computer hardware such as for example one or more processors and system memory as discussed in greater detail below. Embodiments within the scope of the present invention also include physical and other computer readable media for carrying or storing computer executable instructions and or data structures. Such computer readable media can be any available media that can be accessed by a general purpose or special purpose computer system. Computer readable media that store computer executable instructions are computer storage media devices . Computer readable media that carry computer executable instructions are transmission media. Thus by way of example and not limitation embodiments of the invention can comprise at least two distinctly different kinds of computer readable media computer storage media devices and transmission media.

Computer storage media devices includes RAM ROM EEPROM CD ROM solid state drives SSDs e.g. based on RAM Flash memory phase change memory PCM other types of memory other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium which can be used to store desired program code means in the form of computer executable instructions or data structures and which can be accessed by a general purpose or special purpose computer.

A network is defined as one or more data links that enable the transport of electronic data between computer systems and or modules and or other electronic devices. When information is transferred or provided over a network or another communications connection either hardwired wireless or a combination of hardwired or wireless to a computer the computer properly views the connection as a transmission medium. Transmissions media can include a network and or data links which can be used to carry or desired program code means in the form of computer executable instructions or data structures and which can be accessed by a general purpose or special purpose computer. Combinations of the above should also be included within the scope of computer readable media.

Further upon reaching various computer system components program code means in the form of computer executable instructions or data structures can be transferred automatically from transmission media to computer storage media devices or vice versa . For example computer executable instructions or data structures received over a network or data link can be buffered in RAM within a network interface module e.g. a NIC and then eventually transferred to computer system RAM and or to less volatile computer storage media devices at a computer system. Thus it should be understood that computer storage media devices can be included in computer system components that also or even primarily utilize transmission media.

Computer executable instructions comprise for example instructions and data which when executed at a processor cause a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language or even source code. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the described features or acts described above. Rather the described features and acts are disclosed as example forms of implementing the claims.

Those skilled in the art will appreciate that the invention may be practiced in network computing environments with many types of computer system configurations including personal computers desktop computers laptop computers message processors hand held devices multi processor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers mobile telephones PDAs tablets pagers routers switches and the like. The invention may also be practiced in distributed system environments where local and remote computer systems which are linked either by hardwired data links wireless data links or by a combination of hardwired and wireless data links through a network both perform tasks. In a distributed system environment program modules may be located in both local and remote memory storage devices.

Representational State Transfer REST is a style of software architecture for distributed hypermedia systems such as World Wide Web. REST style architectures consist of clients and servers. Clients initiate requests to servers servers process requests and return appropriate responses. Requests and responses are built around the transfer of representations of resources. A resource can be essentially any coherent and meaningful concept that may be addressed. A representation of a resource can be for example a document that captures the current or intended state of a resource.

The client begins sending requests when it is ready to make the transition to a new state. While one or more requests are outstanding the client is considered to be in transition. The representation of each application state contains links that may be used next time the client chooses to initiate a new state transition.

REST can be used in the context of HTTP as well as other protocol. For example RESTful architectures can be based on other Application Layer protocol such as those that provide a uniform vocabulary for applications based on the transfer of meaningful representational state. RESTful applications maximize the use of the pre existing interface and other built in capabilities provided by the chosen network protocol and minimize the addition of new application specific features on top of it.

Hosting program includes web service host and web service host . Web service host communicates with .Net client and Linux client . Web service host communicates with Jave Python C client . The communication can be established over local network or Internet. Notably each web service host is capable of communicating with more than two clients and such clients may be operating on same or different platforms. For example web service host can communicate with a .Net client two Linux clients and three Jave Python C clients.

To optimize for performance or interoperation as depicted in hosting program provides a REST interface to all the clients regardless of the type of the platform. The clients then can submit requests to hosting program the requests including computing jobs and monitoring the job queue.

Web service host and then submits the request to schedulers A and B respectively over a local network. Local network communications can be based on .Net remoting interface. Each of schedulers A and B can be connected to a corresponding database A and B and computer nodes A and B respectively.

Method includes an act of receiving a plurality of requests from the clients based on a first communication protocol the plurality of requests including performing a plurality of computing jobs and monitoring a job queue wherein the plurality of computing jobs each have a plurality of properties exposed as a plurality of uniform resource identifiers the hosting programs maintaining one user interface for the clients the clients running at two or more operating platforms including a first operating platform and a second operating platform wherein the first operating platform differs from the second operating platform act . For example .Net client Linux client and Jave Python C client can submit requests to hosting program . In addition the clients possess substantial state information of the schedulers before the clients submit the requests.

The requests can include performing multiple computing jobs and monitoring a job queue. The multiple computing jobs that have multiple properties are exposed as a plurality of uniform resource identifiers. Specifically the job queue can be retrieved according to the uniform resource identifiers be updated and be displayed. The state information of the computing jobs can be acquired during retrieving the job queue. When updating the job queue only the computing jobs whose state information changed after the job queue is retrieved are to be transmitted such that the amount of data transmitting over the network can be largely reduced.

In addition since the multiple computing jobs have multiple properties the clients can determine their interested properties and further can request to display only the computing jobs having the properties specified by the clients.

Further the host programs maintain one user interface for the clients the clients running at two or more operating platforms including a first operating platform and a second operating platform wherein the first operating platform differs from the second operating platform. For example hosting program can provide REST interface to all the clients including .Net client Linux client and Jave Python C client . Each of the clients is working on different platforms including Windows Linux and Java.

Method includes an act of submitting the requests to the schedulers such that the hosting programs switch to a second communication protocol act . For example hosting program can submit the requests from .Net client Linux client and Jave Python C client to schedulers . The second communication protocol can be the same or different from the first protocol mentioned in act .

Method includes an act of receiving a plurality of authentications from the schedulers wherein the authentications contain a plurality of identities act . For example hosting program can receive authentications from schedulers A and B such authentications including multiple identities.

Method includes an act of delegating the identities to the clients act . For example hosting program can delegate the multiple identities to .Net client Linux client and Jave Python C client . With the hosting program working between clients and and schedulers A and B the schedulers A and B can delegate identities to the clients that work on non Windows platforms.

The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is therefore indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.

