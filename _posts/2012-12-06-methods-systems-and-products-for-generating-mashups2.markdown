---

title: Methods, systems, and products for generating mashups
abstract: Methods, systems, and products simplify widgets for graphical mashups, such as digital dashboards and other user interfaces. When a software widget is a component of a graphical mashup, the widget is completely defined using a single file. The single file specifies both source data and presentation of the source data. Because the widget is completely defined by the single file, the single file allows faster processing of the widget.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09558286&OS=09558286&RS=09558286
owner: AT&T INTELLECTUAL PROPERTY I, L.P.
number: 09558286
owner_city: Atlanta
owner_country: US
publication_date: 20121206
---
A portion of the disclosure of this patent document and its attachments contain material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent files or records but otherwise reserves all copyrights whatsoever.

Graphical mashups visually present data. A mashup may integrate data specified by one or more widgets. Widgets though are difficult to specify thus leading to errors in integration.

The exemplary embodiments will now be described more fully hereinafter with reference to the accompanying drawings. The exemplary embodiments may however be embodied in many different forms and should not be construed as limited to the embodiments set forth herein. These embodiments are provided so that this disclosure will be thorough and complete and will fully convey the exemplary embodiments to those of ordinary skill in the art. Moreover all statements herein reciting embodiments as well as specific examples thereof are intended to encompass both structural and functional equivalents thereof. Additionally it is intended that such equivalents include both currently known equivalents as well as equivalents developed in the future i.e. any elements developed that perform the same function regardless of structure .

Thus for example it will be appreciated by those of ordinary skill in the art that the diagrams schematics illustrations and the like represent conceptual views or processes illustrating the exemplary embodiments. The functions of the various elements shown in the figures may be provided through the use of dedicated hardware as well as hardware capable of executing associated software. Those of ordinary skill in the art further understand that the exemplary hardware software processes methods and or operating systems described herein are for illustrative purposes and thus are not intended to be limited to any particular named manufacturer.

As used herein the singular forms a an and the are intended to include the plural forms as well unless expressly stated otherwise. It will be further understood that the terms includes comprises including and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof. It will be understood that when an element is referred to as being connected or coupled to another element it can be directly connected or coupled to the other element or intervening elements may be present. Furthermore connected or coupled as used herein may include wirelessly connected or coupled. As used herein the term and or includes any and all combinations of one or more of the associated listed items.

It will also be understood that although the terms first second etc. may be used herein to describe various elements these elements should not be limited by these terms. These terms are only used to distinguish one element from another. For example a first device could be termed a second device and similarly a second device could be termed a first device without departing from the teachings of the disclosure.

The mashup server generates the mashup . The mashup server has a processor e.g. P application specific integrated circuit ASIC or other component that executes a mashup algorithm stored in the local memory . When the mashup server receives the web page request the mashup algorithm retrieves the widget associated with the mashup identifier . The mashup algorithm reads the single file structure of the widget to obtain the source definition and the presentation definition . The source definition specifies the data to be retrieved and the presentation definition specifies how the data is presented in the mashup .

Exemplary embodiments may be applied regardless of networking environment. The communications network illustrated as reference numeral in may be a wired and or wireless network having cellular and or WI FI capabilities. The communications network however may also operate using any other frequency or standard such as the BLUETOOTH standard or the Internet Protocol IP . The communications network however may be a cable network operating in the radio frequency domain and or the Internet Protocol IP domain. The communications network however may also include a distributed computing network such as the Internet or an application of the Internet such as cloud based computing an intranet a local area network LAN and or a wide area network WAN . The communications network may include coaxial cables copper wires fiber optic lines and or hybrid coaxial lines. The communications network may even include wireless portions utilizing any portion of the electromagnetic spectrum and any signaling standard such as the IEEE 802 family of standards GSM CDMA TDMA or any cellular standard and or the ISM band . The communications network may even include powerline portions in which signals are communicated via electrical wiring. The concepts described herein may be applied to any wireless wireline communications network regardless of physical componentry physical configuration or communications standard s .

Exemplary embodiments may include thresholding and alerting. As the one or more streams of data are received exemplary embodiments may compare the stream of data to one or more threshold values. Some logical statement is defined that compares any data value in the stream of data to a threshold value. If the data value satisfies or matches the threshold value then an action is taken. The action for example may include a visual notification that is displayed in the mashup . The visual notification alerts the user of the client device to some unexpected or out of spec condition in the source data .

Visualization may be explained. As illustrates a visualization engine may be triggered by a loader and installs resources required for visualization of the widget . A dashboard controller provides web services for widget or dashlet installation and management stream management and threshold and alerting management. The Loader provisions the mashup with new dashlets and loads pre packaged and installable widgets perhaps in the JAVA archive format . An alerts engine includes a pre packaged alerts dashlet that subscribes to threshold streams with stream subscription service of streams cache and configurable alert destinations. A streams cache provides another web service that supports fetching of stream posts and cache control. The streams cache may have any type and or characteristic such as a weak hashmap homegrown on vm heap single instance an off heap map homegrown nio single instance an ORACLE Coherence distributed commercial non persistent non time series and or an APACHE Cassandra distributed open source persistent time series . The dashboard controller may interact with a model view controller MVC framework that provides streams access to controllers and delivers alerts to controllers. The dashboard controller may also have an interface to a collector and thresholding engine that compares any data value in the stream of data to a threshold value for both direct in process and indirect out of process w s sources. further illustrates an architecture for the model view controller MVC illustrated in .

The collector mechanism may also be further explained. The collector and thresholding engine manages the stream providers the stream definitions and the stream subscription services. The collector and thresholding engine also provides a web service to the collector mechanism . The web service provides stream definition stream control and stream subscriptions. The stream providers collect the source data support scheduling support threshold detection basis for alert definitions support aggregation and or summarization and broadcast the stream s of data. The collector mechanism may also provide an outgoing interface to the dashboard engine for direct in process and indirect processing that isolates the collector from the engine data path stream results .

The stream of data may thus define its origination and syntax. The stream of data may thus specify its collection method and syntax of the source data processed by the engine. Each stream of data may be named and typed and a group of streams of data having a same type classification may share a single stream provider. Each stream of data may thus be registered with its provider. Each stream of data may define the one or more polling intervals or be on demand. Each stream of data may self represent itself as the plain old JAVA objects. Each stream provider may source all streams of data in its type class and works with any underlying data source s . The stream provider may be responsible for starting or stopping the stream of data. The stream provider may obtain any supplemental stream information e.g. query string and the stream provider may provides a stream listener to enable cache updates.

The single file structure of the widget may utilize file compression. The widget may have multiple components that are compressed into the single file structure. Each file component may be individually compressed and archived within the single file structure. When the single file is read each component file may be individually extracted and decompressed. The widget may thus have its required components zipped into the single file structure. The single file may then unzip and reveal its component files. The single file for example may automatically unzip when a logical rule is satisfied. The single file for example may automatically bloom to reveal its component files based upon a location or an internal temperature of the client device and or the mashup server .

The algorithm continues with . The source data is integrated into the mashup according to the single file Block . The mashup is converted into the web page Block . The web page is sent to the client device Block . The source data is compared to a threshold value Block . When the source data satisfies the threshold value an alarm is generated Block . The alarm is incorporated into the mashup Block and into the web page Block .

Exemplary embodiments may be physically embodied on or in a computer readable storage medium. This computer readable medium for example may include CD ROM DVD tape cassette floppy disk optical disk memory card memory drive and large capacity disks. This computer readable medium or media could be distributed to end subscribers licensees and assignees. A computer program product comprises processor executable instructions for generating mashups as the above paragraphs explained.

While the exemplary embodiments have been described with respect to various features aspects and embodiments those skilled and unskilled in the art will recognize the exemplary embodiments are not so limited. Other variations modifications and alternative embodiments may be made without departing from the spirit and scope of the exemplary embodiments.

