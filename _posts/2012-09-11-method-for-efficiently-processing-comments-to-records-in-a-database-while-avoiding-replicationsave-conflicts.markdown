---

title: Method for efficiently processing comments to records in a database, while avoiding replication/save conflicts
abstract: A system for processing comment contents associated with a parent document by providing a parent document user interface including a display object enabling a user to enter comment contents, creating a comment document associated with said parent document and storing said comment contents in said comment document, obtaining said comment contents from said comment document and displaying said comment contents within a region of said parent document user interface, copying, in response to detecting a change of state of said parent document from a state in which comments can be added to a state in which comments cannot be added, said comment contents from said comment document into said parent document, deleting said comment document, and presenting said comment contents after deleting said comment document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09424553&OS=09424553&RS=09424553
owner: GOOGLE INC.
number: 09424553
owner_city: Mountain View
owner_country: US
publication_date: 20120911
---
The present application is a continuation under 35 U.S.C. 120 of U.S. application Ser. No. 12 534 845 filed Jan. 16 2009 now allowed which is a continuation of U.S. application Ser. No. 11 165 009 filed Jun. 23 2005 now U.S. Pat. No. 7 552 383.

The present invention relates generally to computer application programs for sharing documents among multiple users sometimes referred to as groupware and more specifically to a system for displaying response documents in a database in chronological order within a parent document and avoiding replication save conflicts regardless of the number of people using local document replicas.

As it is generally known software that supports multiple users working on related tasks across one or more communication networks is often referred to as groupware . Groupware applications allow multiple users to access the same data and may also provide tools and mechanisms to assist users in coordinating and managing projects. One example of a groupware application is Lotus Notes which is a multifunction groupware system and development environment.

A well known use of groupware products is as databases for users to submit problem reports to for support staff to work on. These systems may be referred to as tracking databases. Adequate solutions in this area must support significant amounts of communication between end users and the support team. Without an effective groupware solution large numbers of electronic mail e mail messages may be exchanged between end users and the support team to resolve each issue. Such e mail message flurries may lack adequate records and important information can be missed or lost if the right people are not copied on every correspondence.

In many cases groupware has been used by support teams to track their progress in resolving outstanding issues. However problems associated with independent e mail messaging have persisted. One approach to avoiding the use of separate e mail messaging in this area has been to provide a user interface construct such as a comment button within an issue record for an issue or topic to allow users to enter comments directly onto the issue record form. However during investigation of a given problem both end users and support staff may enter many comments into the issue record. Accordingly large numbers of people may simultaneously be accessing the issue record. If two or more people attempt to add their comments simultaneously many problems can arise potentially resulting in comments being lost and general dissatisfaction with the database.

Another approach taken by existing systems has been to create separate response documents containing each user s comments with respect to an issue record. Using such a system each commenting user works directly with a separate comment document and conflicts between two users in this regard are accordingly not an issue. However there remain significant drawbacks to this solution effectively making it unusable for a large scale tracking database.

First as more and more comments are added the database begins to fill up with large numbers of comment documents supporting a single issue record and any user wishing to understand the entire problem is forced to read through each separate document in order to see all of the comments. Second as issues are resolved all of the supporting comment documents continue to exist and the database quickly grows out of control in terms of disk space and total number of documents.

For the above reasons and others it would be desirable to have a new system for maintaining a database such as a tracking database. The new system should enable users to enter comments with respect to an issue record or the like in a way that is intuitive and such that all comments can conveniently be reviewed. The new system should further operate without causing excessive numbers of comment documents to be maintained so that overall system performance is not unduly compromised.

To address the above described and other shortcomings of the prior art a system for displaying comment documents in a chronological ordering within a parent document is disclosed that avoids replication save conflicts regardless of the number of users having local document replicas. In the disclosed system the graphical user interface to a parent document such as an electronic form interface to an issue record in an issue tracking database provides the user with the ability to enter a comment with regard to the parent document. This ability may be provided through presentation of a graphical user interface button display object or the like that can be clicked on by the user. In response to a user providing indication that a comment is to be entered the user interface to the parent document goes into an edit mode allowing the user to enter content to be included in the comment. The graphical user interface to the parent document further provides the user with the ability to save the comment for example by way of another graphical user interface button display object or the like.

When the user provides an indication that the entered comment should be saved the disclosed system captures the comment contents and stores it into a newly created comment document associated with the parent document. The creation of comment documents is transparent to the user and they may be associated with the parent document in any appropriate manner. After a comment document has been created its contents are presented through a predetermined display region within the user interface to the parent document.

The disclosed system further associates a status with each parent document indicating whether the parent document is in a state in which comments can still be added or is in a state in which comments can no longer be added. The status of a parent document may be changed by a user through a graphical user interface to the parent document. In response to detection of a transition of a parent document from a state in which comments can be added to a state in which comments can no longer be added the disclosed system locates all comment documents associated with the parent document copies the contents of those comment documents into the parent document such that the comment document contents are displayed as part of the parent document and deletes the associated comment documents for that parent document.

Thus there is disclosed a new system for maintaining a database such as a tracking database that enables users to enter comments with respect to a parent document such as an issue record in a way that is intuitive and such that all comments for the parent document can conveniently be reviewed regardless of the specific state of the parent document with regard to whether or not comments can be added. The new system further operates without causing excessive numbers of comment documents to be maintained and as a result overall system performance is not compromised.

As shown in in an embodiment of the disclosed system a number of software components execute on various computer systems shown for purposes of illustration in including a client computer system and other client computer systems shown including a number of client computer systems etc. as well as one or more server computer systems . The client computer systems and and server computer system s may for example each include at least one processor program storage such as memory for storing program code executable on the processor and one or more input output devices and or interfaces such as data communication and or peripheral devices and or interfaces. The client computer systems and and server computer system s are communicably connected by a data communication network such as a Local Area Network LAN the Internet or the like which may also be connected to a number of other client and or server computer systems. The client computer systems and and server computer system s may further include appropriate operating system software.

During operation of the embodiment shown in an issue tracking database user is provided with an issue tracking user interface by issue tracking database client software . Issue tracking user interface includes a graphical user interface GUI having a number of interface display objects such as buttons or the like and or menus that can be clicked on using a mouse user interface device or the like to trigger associated functionalities. As described further below the issue tracking user interface provides an interface to issue tracking records.

The issue tracking database client software may for example operate with a local copy of an issue tracking database. The local copy of the issue tracking database is shown for purposes of illustration as including at least one issue record which corresponds for purposes of explanation to an system performance or operations issue relating to support of a number of information systems by a support team. The issue record is linked to a number of comment documents shown for purposes of illustration as including comment document comment document comment document etc. The comment documents may be linked in any particular way to the issue record for example by way of a unique identifier associated with the issue record . The comment documents are created transparently to the issue tracking database user in response to the user entering or otherwise indicating comment content through the issue tracking user interface . In the illustrative embodiment of the issue tracking user interface provides an interface to the issue record which provides the user with the ability to enter comment content that is stored in the comment documents .

When the user replicates the local copy of the issue tracking database to the server computer system the issue tracking database software stores the issue record and associated comment documents into the server copy of the issue tracking database. When either the client computer system or one of the client computer systems opens up an issue record or obtains a local copy of the issue tracking database the issue record and any associated comment documents or the complete issue tracking database including the issue record and any associated documents are copied to the client system from the server copy of the issue tracking database. Thus issue records and comment documents are conveyed over the network between the client computer system client computer systems and the server computer system .

As described further below when an issue record has a status that allows comments to be added to it one or more comment documents may exist containing any previously entered comment contents associated with that issue record. When the disclosed system detects that an issue record has changed status to one in which comments can no longer be added the contents of those comment documents associated with the issue record are copied into the comment record and the comment documents are deleted. Thus when a user opens an issue record the disclosed system may obtain the comment contents either from a number of comment documents related to the issue record or from within the issue record itself depending on whether the issue record is in a state in which comments can be added or a state in which comments cannot be added.

While the embodiment of is described for purposes of explanation as involving use of an issue tracking database the present invention is not so limited. Accordingly the present invention may be embodied using any specific database storing any specific type of data. Moreover the database of the present system may be of any specific kind such a relational database non relational database or other type of groupware involving the sharing of information between users over a network.

Similarly while the client computer system is shown including a local copy of the database the disclosed system is not limited to such a use or embodiment. The present system accordingly may or may not involve the use of local copies of the database. Advantageously separate comment documents created on the client computer system and or client computer systems can be created locally on those client computer systems by different users for different local copies of a single associated issue record and subsequently saved to the server copy of the tracking database without causing save replication conflicts between different copies of the associated issue record.

Additionally while the embodiment of the disclosed system in is described in terms of an issue record and associated comment documents these terms are used for purposes of explanation only. The issue record and or comment documents may for example each consist of groups of related fields in a database storing data about a subject or activity and or a file in a file system.

At step the issue record being opened is in a state in which comments can be added. Accordingly the issue record form presented to the user at step allows input of comments directly into the issue record form. The issue record form presented at step further provides a view of all previously entered comment content for the issue record created at step and provided by any user. The disclosed system obtains the previously entered comment content presented at step from any previously created comment documents associated with the issue record responsive to a determination that the issue record is in a state that allows comments to be added to the issue record. Such previously entered comment documents may for example be obtained from the server copy of the tracking database. The previously entered comment content may for example be presented in reverse chronological order such that most recently entered comments are presented at a top most location within a list of previous comments or the like.

At step the disclosed system obtains comment content from the user and responds by creating a new comment document to store the newly received comment content. For example the disclosed system may provide a display object menu option or the like for the user to select or click on in order to enter a new comment. When the user is finished entering in the new comment the disclosed system may provide another display object menu option or the like for the user to save the comment content they have entered. The creation of the new comment document may for example be in response to detection of the user clicking on or selecting such a display object menu object or the like. In the embodiment of the creation of the new comment document is transparent to the user entering the comment content and no indication of the newly created document is provided to the user. For example the newly created comment document may be created by tracking database client software and be stored within the local copy of the tracking database as shown in for later replication to the server copy .

At step the disclosed system detects a change in status for the issue record such that comments can no longer be added to the issue record and thus the status of the issue record is closed . In response to this change of status the disclosed system locates all comment documents related to the issue record and moves the content of those comment documents into the body of the issue record. The comment documents for the issue record are then deleted. When at step a user accesses the issue record in a state which no comments can be added the comment content from the previously deleted comment documents is presented to the user as part of the user interface to the issue record for example in reverse chronological order within a predetermined region of the issue record user interface form. The presentation of comment contents at step is provided based on comment contents stored within the issue record and without attempting to access any comment documents for the issue record when the issue record is in a state in which no comments can be added.

The issue record user interface further includes an issue number and a current status indication . In the example of the issue status indication indicates a current status of Submitted which is an example of a status for an issue record in which comments can be added. An issue description is further provided. An add comment button is included in the issue record user interface . When a user clicks on the add comment button the disclosed system operates to enter a comment entry mode as further illustrated in . The add comment button is just one example of a user interface construct that may be provided through the issue record user interface to capture a user indication that a new comment is to be entered. A previous comments display region is also provided in the issue record user interface for displaying any previously entered comment contents. In the example of no comments have been previously entered for the associated issue record so the previous comment display region is empty.

The disclosed system may be embodied to use the comments table to locate all comment documents for a issue record. For example when a user requests access to an issue record that is in a state in which comments can still be added the disclosed system operates to read the comment bodies associated with that issue record and present those comments through the previous comment display region of the user interface for that issue record. Additionally when the status of an issue record changes to a status indicating a state in which comments cannot be added in that the issue has been resolved the disclosed system may operate to find all comments in the comments table that are associated with that issue record and copy the comment bodies of those associated comments into the issue record so that they will subsequently be displayed within the previous comment display region of an issue record user interface associated with that issue record in the event that a user requests access to the issue record after comments can no longer be added.

Those skilled in the art will recognize that are simplified screen shots provided for illustrative and explanatory purposes only and that the present invention may be embodied using various specific user interface screens forms and or display objects to provide the functions described. Moreover while the description of the preferred embodiments includes reference to button graphical display objects for triggering certain operations the disclosed system is not limited to such embodiments and other types of user interface display objects menus techniques and or mechanisms may be used in the alternative.

Those skilled in the art should readily appreciate that programs defining the functions of the present invention can be delivered to a computer in many forms including but not limited to a information permanently stored on non writable storage media e.g. read only memory devices within a computer such as ROM or CD ROM disks readable by a computer I O attachment b information alterably stored on writable storage media e.g. floppy disks and hard drives or c information conveyed to a computer through communication media for example using wireless baseband signaling or broadband signaling techniques including carrier wave signaling techniques such as over computer or telephone networks via a modem.

While the invention is described through the above exemplary embodiments it will be understood by those of ordinary skill in the art that modification to and variation of the illustrated embodiments may be made without departing from the inventive concepts herein disclosed. Moreover while the preferred embodiments are described in connection with various illustrative program command structures one skilled in the art will recognize that they may be embodied using a variety of specific command structures.

