---

title: Optimization to identify nearest objects in a dataset for data analysis
abstract: In one embodiment, a plurality of objects associated with a dataset and a specified number of nearest objects to be identified are received. The received objects are sorted in a structured format. Further, a key object and a number of adjacent objects corresponding to the key object are selected from the sorted plurality of objects, wherein the number of adjacent objects is selected based on the specified number of nearest objects to be identified. Furthermore, distances between the key object and the number of adjacent objects are determined to identify the specified number of nearest objects, wherein the distances are determined until the specified number of nearest objects is identified. Based on the determined distances, the specified number of nearest objects in the dataset is identified for data analysis.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09043253&OS=09043253&RS=09043253
owner: BUSINESS OBJECTS SOFTWARE LIMITED
number: 09043253
owner_city: Dublin
owner_country: IE
publication_date: 20121107
---
Embodiments generally relate to data analysis and more particularly to methods and systems to optimize identification of objects with nearest degree of affinity in a dataset.

Data analysis a process of analyzing data from different perspectives and summarizing it into useful information facilitates an organization in understanding and interpreting the data. For instance data is analyzed by grouping objects in a dataset into groups e.g. clustering objects detecting one or more outliers to the group e.g. anomaly detection and the like. Some of the techniques used to analyze data are from data mining pattern recognition machine learning and the like. One technique from machine learning is the K Nearest Neighbor KNN algorithm. In the KNN algorithm the affinity or closeness of the objects in the dataset is determined. The affinity is also known as distance in a feature space between objects in the dataset. Further based on the determined distances the objects are clustered and the outlier is detected for data analysis.

Specifically the KNN algorithm is technique to find distance based outliers based on the distance of an object from its k nearest neighbors in the feature space. Each object is ranked on the basis of its distance to its k nearest neighbors. The farthest away object is declared the outlier. In some cases the farthest objects are declared outliers. That is an object in a data set is an outlier with respect to parameters such as a k number of neighbors and a specified distance if no more than k objects in the data set are at the specified distance or less from the object. As well the KNN is a classification technique that uses supervised learning. An item is presented and compared to a training set with two or more classes. The item is assigned to the class that is most common amongst its k nearest neighbors. That is compute the distance to all the items in the training set to find the k nearest and extract the majority class from the k and assign to item. However the technique to find the nearest neighbors based on the distance can be computationally intensive as it requires calculation of the distance of objects under consideration to every other object in the dataset and ordering of them by the distance with the lowest distance first. This may affect the performance of a computer system especially when the dataset is large in terms of memory and processing time complexity.

Embodiments of techniques to optimize identification of nearest objects corresponding to a key object in a dataset for data analysis are described herein. According to various embodiments the dataset includes objects associated with one or more attributes. For example the objects can be numbers. The objects represent numeral values of the attribute such as but are not limited to objects pertaining to salary packages of employees and number of projects associated with each employee. An object can be associated with two more numerical values for example a color expressed as hue saturation and brightness values. Affinity or distances between the key object e.g. an object of interest in a given analysis and other objects in the dataset are determined to group similar kind of objects in the dataset detect outlier detection in the dataset and the like for data analysis. In one embodiment the objects are sorted in a structured format e.g. in an ascending order or a descending order . Further a number of adjacent objects corresponding to the key object from the sorted plurality of objects are selected based on a specified number of nearest objects to be identified. The number of nearest objects to be identified is specified by a user based on how many objects have to be grouped as a cluster for instance. Furthermore distances between the key object and at least some of the selected number of adjacent objects are determined until the specified number of nearest objects is identified. Therefore the distance of the key object under consideration to few adjacent objects are determined to identify nearest objects in the dataset. Since the method does not require the determination of the distances to every other object in the dataset the complexity of determining distances is reduced and the process of identifying nearest objects is optimized.

Reference throughout this specification to one embodiment this embodiment and similar phrases means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one of the one or more embodiments. Thus the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

In one embodiment the object sorter sorts the plurality of objects in a structured format. According to one embodiment the structured format includes one of an ascending order and a descending order. Further the object selector selects a required number of adjacent objects corresponding to the key object e.g. an object under consideration from the sorted plurality of objects. In one exemplary embodiment the required number of adjacent objects is selected based on a specified number of nearest objects to be identified. According to one embodiment the number of adjacent objects includes twice the specified number of nearest objects to be identified. Since the objects are sorted in the structured format and the adjacent objects include twice the specified number of nearest objects to be identified the selected adjacent objects will include the specified number of nearest objects corresponding to the key object. Therefore by determining the distances between the key object and the selected adjacent objects the specified number of nearest objects can be identified rather than determining distances between the key object and every other object in the dataset. The advantage of selecting adjacent objects based on the specified number of nearest objects to be identified is described with an example in .

In one embodiment the distance calculator determines distances between the key object and at least some of the adjacent objects to identify the specified number of nearest objects most near to the key object. Further the distances are determined until the specified number of nearest objects is identified. In other words not all the distances between the key object and the adjacent objects are determined. Therefore reducing the processing time of a computing system. The process of determining distances is explained in greater detail with examples in . Further the identified nearest objects are used to analyze the dataset. For example the nearest objects of the key object are grouped to form clusters and thus facilitate visualizing similar kinds of objects in the dataset. Further patterns of objects in the dataset can be easily detected for outlier detecting using the identified nearest objects.

At step the plurality of objects is sorted in a structured format. The structured format includes one of an ascending order and a descending order. In the example the objects in the dataset are sorted in the ascending order as depicted in . At step a number of adjacent objects corresponding to the key object are selected from the sorted plurality of objects. The key object is an anchor object for which the nearest objects are identified. Each object in the dataset can be the key object. In the example the object is considered as the key object. Further the number of adjacent objects corresponding to the key object is selected. In one exemplary embodiment the number of adjacent objects is selected based on the specified number of nearest objects to be identified. According to one embodiment the number of adjacent objects includes twice the specified number of nearest objects to be identified. Further the number of adjacent objects is selected from the structured format on both sides of the key object. For example in if 5 nearest objects corresponding to the key object are to be identified 5 adjacent objects on both sides A and B e.g. a total of 10 adjacent objects are selected. Since the nearest object may fall on either side of the key object a window including the key object and the number of adjacent objects on either sides of the key object is defined without calculating the distance of all the objects in the dataset from the key object.

Further in the structured or ordered set of objects an object cannot be in the 5 nearest objects of the key object as there are five other objects from the key object to the object in the dataset that falls between them. Similarly an object cannot be in the 5 nearest objects of the key object . Therefore the nearest objects corresponding to the key object exist in the defined window e.g. A and B and thus computation complexity of determining nearest objects corresponding to the key object is reduced.

At step distances between the key object e.g. and the number of adjacent objects e.g. A and B are determined to identify the specified number of nearest objects corresponding to the key object e.g. . In one embodiment the distances are determined until the specified number of nearest objects is identified. In other words not all the distances between the key object and the adjacent objects are determined but the distances are determined until the specified number of nearest objects is identified. Further the identified nearest objects are used for data analysis such as but not limited to clustering of the objects and anomaly detection. The process of determining distances is explained in greater detail in .

In the example the distance between the two objects is determined using the Euclidean distance as shown in equation 1 . square root over 1 Wherein 

Therefore the distance d between the key object p and first adjacent object q is determined as shown in Equation 2 . 410 430 square root over 144 145 1 2 

The distance d between the key object p and second adjacent object q is determined as shown in Equation 3 . 410 440 square root over 144 138 6 3 At step based on the determined distances one of the first adjacent object and the second adjacent object is identified as a first nearest object. In one exemplary embodiment the first adjacent object is identified as the first nearest object when the distance between the key object and the first adjacent object is less than or same as the distance between the key object and the second adjacent object. On the other hand the second adjacent object is identified as the first nearest object when the distance between the key object and the first adjacent object is greater than the distance between the key object and the second adjacent object. In the example the distance between the key object and the first adjacent object e.g. 1 is less than the distance between the key object and the second adjacent object e.g. 6 . Therefore the first adjacent object is identified as the first nearest object.

At step a distance between the key object and a third adjacent object adjacent to the first nearest object is determined. In the example the third adjacent object is which is adjacent to the first nearest object . The distance d between the key object p and third adjacent object q is determined as shown in Equation 4 . 410 450 square root over 144 148 4 4 

At step based on the determined distance one of the third adjacent object and remaining one of the first adjacent object and the second adjacent object is identified as a second nearest object. In the example the distance between the key object and the third adjacent object is e.g. is less than the distance between the key object and the second adjacent object e.g. 6 . Therefore the third adjacent object is identified as the second nearest object.

At step distances between the key object and next adjacent objects are determined to identify next nearest objects until the specified number of nearest objects are identified. For example the distances between the key object and the next adjacent objects are determined until the specified number of nearest objects e.g. is identified.

In the example to determine a third nearest object the distance d between the key object p and a fourth adjacent object q adjacent to the second nearest object is determined as shown in Equation 5 . 410 460 square root over 144 152 8 5 

Further the distance between the key object and the fourth adjacent object is e.g. 8 is greater than the distance between the key object and the second adjacent object e.g. 6 . Therefore the second adjacent object is identified as the third nearest object. Till now three nearest objects are identified from the first four adjacent objects. Similarly all the five nearest objects can be found by just evaluating only one more extra object from the defined window.

In the example to determine a fourth nearest object the distance d between the key object p and a fifth adjacent object q adjacent to the third nearest object is determined as shown in Equation 6 . 410 470 square root over 144 133 11 6 

The distance between the key object and the fifth adjacent object is e.g. 11 is greater than the distance between the key object and the fourth adjacent object is e.g. 8 . Therefore the fourth adjacent object is identified as the fourth nearest object.

Similarly to determine a fifth nearest object the distance d between the key object p and a sixth adjacent object q adjacent to the fourth nearest object is determined as shown in Equation 7 . 410 480 square root over 144 171 21 7 

Further the distance between the key object and the sixth adjacent object is e.g. 27 is greater than the distance between the key object and the fifth adjacent object is e.g. 11 . Therefore the fifth adjacent object is identified as the fifth nearest object. At this step determining the distances is stopped as the specified number of nearest objects e.g. 5 is identified. Therefore the determining distances in the data set is reduced from 2K i.e. 2K is the twice the specified number of nearest objects to be identified i.e. adjacent objects to K 1.

In one embodiment the Euclidean distance to the adjacent objects immediately on both the sides of the key object is determined. Further by comparing the determined distances the lowest value is identified to be one of the nearest objects. In one exemplary embodiment for adjacent objects which are equal to some adjacent objects that have been considered already for calculations the distance calculation for such adjacent objects is avoided. In other words a check is made to determine whether the adjacent object is analogous to a previous object e.g. object that is considered already for calculations . Further when the adjacent object is analogous to the previous object the distance between the key object and the next adjacent object is considered same as the distance between the key object and the previous object. Thereby while picking the objects for consideration a check is performed for a similar object has been already considered and when considered the distance value for this object also will be updated and thus not considered again for calculations. In another exemplary embodiment if the defined window includes no objects e.g. when a first object in the dataset is considered as the key object adjacent objects on one side of the first object are considered as null objects. Therefore the complexity of identifying nearest objects is reduced as the process of identifying the nearest objects is optimized and thereby improving performance.

Some embodiments may include the above described methods being written as one or more software components. These components and the functionality associated with each may be used by client server distributed or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as functional declarative procedural object oriented lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively the components maybe implemented in server and client applications. Further these components may be linked together via various distributed programming protocols. Some example embodiments may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level e.g. a graphical user interface . These first and second computer systems can be configured in a server client peer to peer or some other configuration. The clients can vary in complexity from mobile and handheld devices to thin clients and on to thick clients or even other servers.

The above illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term computer readable storage medium should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term computer readable storage medium should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store encode or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described represented or illustrated herein. Examples of computer readable storage media include but are not limited to magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROMs DVDs and holographic devices magneto optical media and hardware devices that are specially configured to store and execute such as application specific integrated circuits ASICs programmable logic devices PLDs and ROM and RAM devices. Examples of computer readable instructions include machine code such as produced by a compiler and files containing higher level code that are executed by a computer using an interpreter. For example an embodiment may be implemented using Java C or other object oriented programming language and development tools. Another embodiment may be implemented in hard wired circuitry in place of or in combination with machine readable software instructions.

A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases such as relational transactional hierarchical multi dimensional e.g. OLAP object oriented databases and the like. Further data sources include tabular data e.g. spreadsheets delimited text files data tagged with a markup language e.g. XML data transactional data unstructured data e.g. text files screen scrapings hierarchical data e.g. data in a file system XML data files a plurality of reports and any other data source accessible through an established protocol such as Open Data Base Connectivity ODBC produced by an underlying software system e.g. ERP system and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams broadcast data and the like. These data sources can include associated data foundations semantic layers management systems security systems and so on.

In the above description numerous specific details are set forth to provide a thorough understanding of embodiments. One skilled in the relevant art will recognize however that the embodiments can be practiced without one or more of the specific details or with other methods components techniques etc. In other instances well known operations or structures are not shown or described in detail.

Although the processes illustrated and described herein include series of steps it will be appreciated that the different embodiments are not limited by the illustrated ordering of steps as some steps may occur in different orders some concurrently with other steps apart from that shown and described herein. In addition not all illustrated steps may be required to implement a methodology in accordance with the one or more embodiments. Moreover it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.

The above descriptions and illustrations of embodiments including what is described in the Abstract is not intended to be exhaustive or to limit the one or more embodiments to the precise forms disclosed. While specific embodiments of and examples for the one or more embodiments are described herein for illustrative purposes various equivalent modifications are possible within the scope as those skilled in the relevant art will recognize. These modifications can be made in light of the above detailed description. Rather the scope is to be determined by the following claims which are to be interpreted in accordance with established doctrines of claim construction.

