---

title: Presenting multiple possible selectable domain names from a URL entry
abstract: A multiending controller within a network detects a URL entry including at least a portion of a particular domain name. The multiending controller automatically selects multiple possible domain names for at least said portion of said particular domain name, wherein each of the multiple possible domain names includes a separate one of multiple ending types available for a domain. The multiending controller directs output of the multiple possible domain names for selection by a user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08515995&OS=08515995&RS=08515995
owner: International Business Machines Corporation
number: 08515995
owner_city: Armonk
owner_country: US
publication_date: 20120328
---
This application is a continuation of commonly assigned U.S. patent application Ser. No. 11 138 828 filed Mar. 26 2005 which is hereby incorporated herein by reference.

The present invention relates in general to computer managed communication networks and particularly to the detection of a Universal Resource Location URL entry and concurrent presentation of multiple possible domain names with separate ending types wherein each of the multiple possible domain names includes at least a portion of the URL entry.

Within a computer managed communication network such as the Internet each computer system accessible via the network is typically identified by an address. In the example of the Internet Transmission Control Protocol Internet Protocol TCP IP controls the distribution of packets of information between computer systems where each packet is directed from a system at one network address to a system at another network address. An IP address identifying a location of system within a network may take the form of a numerical address such as 165.55.128.60.

More user friendly networks such as the Internet may implement an address translation system such as the Domain Name System DNS so that users may request access to other systems through a name based address rather than a numerical IP address. The DNS can be implemented through DNS servers that store database tables of the domain name corresponding to an IP address. A user seeking to access a web page located at a particular server need only enter the domain name such as www.abc.com rather than the IP address of the server location and the DNS server translates the domain name into the associated IP address.

Domain names in the Internet based network are hierarchically configured. For example in the domain name www.ibm.com .com is the ending which identifies the type of domain. If one DNS server cannot locate a particular domain name that DNS server will send the domain name entry to a DNS server with a database of domain names ending with .com or search for other DNS servers that are able to translate the domain name. While a DNS server can search other DNS servers for a domain name entry currently the user must still enter a valid and complete domain name if a DNS server is to locate an IP address for the domain name. A web browser through which a user may enter domain name access requests views a domain name entry as a Universal Resource Locator URL which also identifies the type of protocol used such as File Transfer Protocol FTP or Hypertext Transfer Protocol HTTP and directs the domain name access request to a DNS server that services domain names of the particular protocol type.

Initially when the Internet started becoming more accessible to the public few domain name types or endings were available. Today one of the common expectations of the Internet is that most important web sites end with .com or .edu even though the number of domain name endings has been expanded to include endings such as .net .org .tv and others. With so many different endings available if a user only knows a portion of a domain name but not the specific ending type the user may end up looking up page after page with each ending that the user knows in an attempt to locate a particular web page with information expected by the user. Thus one limitation of the DNS and other addresses translations systems is that the user must know and enter a full domain name including correct ending to access a desired web page. Further a limitation of web browsers and other web access software is that a user can only attempt to access one domain name at a time in a single web browser window.

Therefore in view of the foregoing the present invention provides for a service that detects a Universal Resource Location URL entry and concurrently presents multiple possible domain names with separate ending types wherein each of the multiple possible domain names includes at least a portion of the URL entry for selection by a user.

In one embodiment a multiending controller detects a URL entry including at least a portion of a particular domain name. The multiending controller automatically selects multiple possible domain names for at least said portion of said particular domain name wherein each of the multiple possible domain names includes a separate one of multiple ending types available for a domain. The multiending controller directs output of the multiple possible domain names for selection by a user.

Referring now to the drawings and in particular to there is depicted one embodiment of a computing system through which the present method system and program may be implemented. The invention may be executed in a variety of systems including a variety of computing systems and electronic devices.

Computer system includes a bus or other communication device for communicating information within computer system and at least one processing device such as processor coupled to bus for processing program code and data. Bus may include low latency and higher latency paths that are connected by bridges and adapters and controlled within computer system by multiple bus controllers. Processor may be a general purpose processor such as IBM s PowerPC PowerPC is a registered trademark of International Business Machines Corporation processor. When implemented as a server system computer system typically includes multiple processors designed to improve network servicing power.

Processor is coupled directly or indirectly through bus to memory elements. During normal operation processor processes data under the control of program code accessed from the memory elements. Memory elements can include local memory employed during actual execution of the program code such as random access memory RAM bulk storage such as mass storage device and cache memories not depicted which provide temporary storage of at least some program code to reduce the number of times code must be retrieved from bulk storage during execution. In one example the program code accessible in RAM is an operating system and application software . Operating system includes program code that facilitates for example a graphical user interface GUI via a display and other output interfaces.

The invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc. For example in one embodiment operating system and or application software contains program code that when executed on processor carry out the operations depicted in the flow diagrams and flowcharts of and other operations described herein. Alternatively the steps of the present invention might be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components. Additionally RAM may include an application programming interface API or other interface that provides extensions to enable application developers to develop application software that extend the functionality of operating system .

In addition the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing computer readable program code for use by or in connection with computer system or any instruction execution system. For purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device. In one example a computer usable or computer readable medium is any apparatus that participates in providing program code to processor or other components of computer system for execution.

Such a medium may take many forms including but not limited to electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include but are not limited to a semiconductor or solid state memory magnetic tape a flexible disk a hard disk a removable computer diskette random access memory RAM read only memory ROM punch cards or any other physical medium with patterns of holes a rigid magnetic disk and an optical disk. Current examples of optical disks include a compact disc ROM CD ROM a compact disc read write CD R W and a digital video disc DVD . In another example a computer readable medium may include mass storage device which as depicted is an internal component of computer system but may be provided as a device external to computer system .

A communication interface including network adapters may also be coupled to the system to enable computer system to become coupled to other computer systems such as server or client remote printers or storage devices through intervening private or public networks. Network adapters within communication interface may include but are not limited to modems cable modems and Ethernet cards.

In particular communication interface enables coupling to other devices through a network link to a network . For example a local area network LAN wide area network WAN or an Internet Service Provider ISP may facilitate network link . Network link may provide wired and or wireless network communications to one or more networks such as network . Network may refer to the worldwide collection of networks and gateways that use a particular protocol such as Transmission Control Protocol TCP and Internet Protocol IP to communicate with one another.

In general network link and network both use electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system are examples of forms of carrier waves transporting the information. In one example a remote computer such as server transfers the program code for the invention to requesting computer system by way of data signals embodied in a carrier wave or other propagation medium via a network link to a communications interface coupled to bus .

When implemented as a server system computer system typically includes multiple communication interfaces accessible via multiple peripheral component interconnect PCI bus bridges connected to an input output controller. In this manner computer system allows connections to multiple network computers such as client via network .

In addition computer system typically includes multiple peripheral components e.g. input output devices that facilitate communication. These peripheral components are coupled to computer system either directly or indirectly through connections to multiple input output I O controllers adapters and expansion slots coupled to one of the multiple levels of bus . For example an audio output device and audio input device are connectively enabled on bus for controlling audio outputs and inputs. A display device is also connectively enabled on bus for providing visual tactile or other graphical representation formats and a cursor control device is connectively enabled on bus for controlling the location of a pointer within display device . A keyboard is connectively enabled on bus as an interface for user inputs to computer system . In alternate embodiments of the present invention additional input and output peripheral components may be added.

Those of ordinary skill in the art will appreciate that the hardware depicted in may vary. Furthermore those of ordinary skill in the art will appreciate that the depicted example is not meant to imply architectural limitations with respect to the present invention.

With reference now to a block diagram depicts a network environment for supporting web page access in accordance with the method system and program of the present invention. As illustrated a distributed network is a network of multiple computer systems such as client system client system web server web server web server and DNS server through which web pages are accessed and downloaded. In alternate embodiments distributed network may include other embodiments of computing systems enabled to communicate with one another via a connection. Although not depicted in following the description of computing system in general each of client system client system web server web server web server and DNS server includes at least one processor and memory for supporting program code which may include an operating system APIs and application programs. In addition web server web server web server and DNS server other systems that perform server functions may include middleware applications loaded into memory that support server functions where the middleware applications may include for example IBM s Websphere or NetFinity Websphere and NetFinity are registered trademarks of International Business Machines Corporation .

In the embodiment distributed network includes network which is the medium used to provide communications links between various devices and computers connected together within distributed network . Network may include permanent connections such as wire or fiber optics cables and temporary connections made through telephone connections and wireless transmission connections for example.

In particular in the embodiment distributed network includes at least one server such as web server web server or web server and at least one client such as client systems and communicatively connected via network . In addition distributed network may include at least one Domain Name System DNS server such as DNS server for implementing the Domain Name System or other address translation service. It will be understood that each of web servers and DNS server and client systems and may be distributed in geographically disparate locations throughout heterogeneous types of computer systems operating within disparate local networks. In addition it will be understood that web servers and and DNS server may represent a single server system a cluster of server systems a grid of server systems or other combination of systems providing access to a particular web page or multiple web pages. In addition it will be understood that distributed network may include additional servers clients and other devices not shown.

Web servers and DNS server and client systems and may communicate within distributed network in conformance with different network environment architectures. In the embodiment depicted distributed network conforms to a client server network architecture where web servers and perform as servers for providing web services such as downloading web pages to client system and client system responsive to requests for web services from client system and client system . In facilitating the client server environment in one example network represents the worldwide collection of networks and gateways that use the TCP IP suite of protocols to communicate with one another. In another example network is implemented as an intranet a local area network LAN or a wide area network WAN . It will be understood that distributed network may conform to other network environments or a combination of multiple types of network environments. Further it will be understood that in the client server environment any of client systems and may perform as a server if providing web services to another computer system via network . Additionally it will be understood that distributed network may support peer to peer network communications between client system and client system where one client system distributes a web page to another client system.

Each of web server and may maintain separate communications with and downloads web pages and other data to client systems and via network responsive to requests and communications received from client systems and . In one embodiment a web page is a document consisting of a particular web protocol based file with associated files for graphics embedded audio and video players and scripts.

A web page may be identified and requested by a uniform resource locator URL or an IP address. A URL specifies the protocol to be used in accessing the web page and the domain name address or IP address correlating to a web server at which the web page resides. A domain name address may include multiple hierarchical levels. For example a domain name address may include a type ending such as .com .edu .org .net .tv or other available type endings. In addition a domain name address may indicate other levels as separated by periods backslashes and other separators.

To facilitate user ease in entering a URL to request access to a web page distributed network may support an addressing system such as the Domain Name Service that translates domain name addresses into network location numerical addresses. For example where network represents the Internet web pages accessible from each of web servers and are assigned both an alphanumeric domain name address and a numerical network IP address. DNS server may maintain a database of web server domain name addresses and corresponding network IP addresses. When DNS server receives a domain name address resolution request DNS server attempts to translate the domain name address into an IP address and return the IP address to the requesting system. If DNS server is not able to locally translate the domain name address DNS server may transfer the domain name address resolution request to other DNS servers with other translation tables. It is important to note that while the invention is described with reference to the DNS in other embodiments where user entries are translated into a network address the present invention may be implemented.

Client systems and include software that facilitates communication with web server . In one embodiment client systems and include web browsers and respectively where a web browser is application software that facilitates web page access requests and the display of accessed web pages through browser windows displayed in output interfaces such as a graphical user interface associated with client systems and . It will be understood that web browsers and may be integrated within an operating system such as operating system or may be included within application software as stand alone applicants. Further it will be understood that in addition to web browsers and the operating system or other application software may provide additional components and interfaces for enabling users to select to access web pages. For example a stand alone application may automatically request access to a web page that provides weather information every five minutes and update a user interface specified for displaying the weather information alone.

In one embodiment when a user at any of client systems and enters or selects a URL for access via one of web browsers or for example if the URL includes a domain name address web browsers or will pass the domain name address to a DNS resolver not depicted in . The DNS resolver determines which DNS server such as DNS server to pass the domain name address with a request for resolution of the IP address associated with the domain name address. Client system and may include DNS resolver software or may pass the domain name address to a DNS resolver residing in another client system or in a server system accessible via network . The DNS resolver will receive an IP address in response to the resolution request if DNS server can locate an IP address matching the domain name address or will receive an error message indicating a lack of matching IP address or domain name registration. The DNS resolver passes the IP address or error to the requesting software application such as one of web browsers or and the requesting software application then sends a communication request to the returned IP address or controls output of an error message to the user.

According to an advantage distributed network may include a multiending controller not depicted in that selects multiple URL name combinations for a URL entry determines which of the multiple URL name combinations are accessible and directs output of the accessible multiple URL name combinations for selection by the user. In one embodiment the multiending controller is triggered when an incomplete URL entry is detected. In another embodiment the multiending controller is triggered by a user request. As will be further described the multiending controller may be incorporated within or distributed across any of client systems and web servers and DNS server or within a separate dedicated server system.

With reference now to a block diagram illustrates one embodiment of the implantation of a multiending controller for detecting multiple possible URLs from a portion of a URL name and returning a selection of accessible URL name combinations for selection by a user. In the example a web browser passes a URL entry to a DNS resolver . Web browser facilitates a user interface for displaying web pages accessed from web servers such as web server and for responding to user inputs such as input of a URL entry. DNS resolver facilitates the resolution of a location of the web server hosting a web page identified by a URL entry. In one embodiment web browser and DNS resolver are applications residing within a single client system such as client system . In another embodiment web browser and DNS resolver are applications distributed across a client system and a server system or service provider system.

In the example DNS resolver includes a multiending controller . Multiending controller detects URL entry is incomplete and determines a first selection of URL name combinations with the portion of the URL name. In particular multiending controller may both passively and actively detect incomplete URL entries. In one embodiment multiending controller detects that URL entry is incomplete by detecting that the URL cannot be resolved. In another embodiment multiending controller actively monitors each URL entry to determine if all the required portions of a URL are included. In yet another embodiment web browser may include a selectable multiending option that when selected by a user upon entry of a URL through a web browser window indicates that the URL entry is incomplete and that multiple URL name combinations for the URL should be returned.

Multiending controller directs DNS resolver to send requests to resolve the location of each of the URL name combinations to DNS server . In particular in the example URL entry is X . Multiending controller detects that URL entry lacks a URL ending and selects URL name combinations X.com X.edu and X.org . DNS resolver sends each of the URL name combinations to DNS server for resolution of the location of each of URL name combination. DNS server determines the location of each URL name combination and returns the location addresses to DNS resolver . It is important to note that although the invention is described with reference to multiending controller selecting URL name combinations to complete a URL entry multiending controller may also detect a complete URL but select URL name combinations that vary the ending type or other portions of the URL.

In addition in the example multiending controller detects when the locations of URL name combinations are retrieved and returns multi ending options to web browser . Multi ending options include all or a selection of the URL name combinations and resolved locations for URL entry . In the example when multiending controller detects a URL name combination without a location such as the error indicator for X.org that URL name combination is not included in multi ending options . In one embodiment multi ending options are returned as a web page for output within a web browser window facilitated by web browser . In another embodiment multi ending options are returned in a format supported by web browser for displaying multiple URL name combinations. In particular web browser may provide multiple selectable output formats for controlling output of multiple URLs returned by multiending controller where multiending controller specifies a particular selectable output format or where a user preference for web browser specifies a particular selectable output format.

It is important to note that in an alternate embodiment other applications or computing systems may pass URL entry to DNS resolver . In addition it is important to note that in an alternate embodiment DNS server may include multiending controller such that DNS server detects that a URL entry from DNS resolver selects URL name combinations resolves the locations of each URL name combination and returns the URL name combinations and locations to DNS resolver to return to web browser . In another alternate embodiment both DNS resolver and DNS server can implement multiending controller . Further multiending controller may reside in a system independent of DNS resolver or DNS server or may be a component of web browser .

Referring now to a block diagram illustrates components of a multiending controller. In the example multiending controller includes a multiending search controller user multiending preferences user preference entry controller and ending database . In one embodiment multiending search controller controls the performance of multiending controller as described with reference to . In addition according to an advantage multiending search controller accesses user multiending preferences and ending database and customizes the selection of URL name combinations and the output of multiending options according to user multiending preferences . Examples of user multiending preferences are depicted in .

A user preference entry controller can direct a user through entry of user multiending preferences . It is important to note that user multiending preferences may include preferences for a single user or multiple individual users and multiending preferences may include preferences set by a network administrator for all network users or for by a particular service provider for all service users. It will be understood that the components of multiending controller may reside within a single computer system or reside across multiple computer system accessible to one another via a network such as network .

Ending database can be updated to include all possible endings available in a particular network. Further ending database may include other types of network language identifiers such as protocol type identifiers. Multiending search controller may access ending database to determine all possible endings for a portion of a URL entry. In addition user multiending preferences may reference the possible endings in ending database . Further user preference entry controller may access ending database to provide a user with a selection of the possible endings. Ending database may be updated periodically by accessing a network location that maintains a database of endings or through receipt of periodic communications including the database of endings.

With reference now to a block diagram illustrates types of user multiending preferences. In the example user multiending preferences include filtering preferences and output preferences . It will be understood that user multiending preferences may include other types of preferences for controlling multiending search controller and that multiending preferences may be sorted according to user or other qualifier. In addition it will be understood that while in the example user multiending preferences illustrates preferences already selected by a user user preference entry controller may prompt a user to add or delete pre defined preferences or define new preferences within a user interface.

Under filtering preferences a user may designate multiple types of preferences generally described as pre resolution preferences and post resolution preferences based on whether the multiending search controller applies the preference in determining the URL name combinations to resolve or in determining which URL name combinations with locations to include in multi ending options returned to the requesting application.

In the example depicted of a pre resolution preference indicated at reference numeral a user designates to select URL name combinations with endings of .com .org and .edu . In another pre resolution preference example a user may select a preference to send the portion of the URL name to a search engine that searches for all possible combinations of the URL entry within a URL name combination or detects possible alternative combinations of letters in a URL entry that represents an available complete URL name. In yet another pre resolution preference example a user may select a preference for URL name combinations with protocol indicators of www. and ftp. for example. It will be understood that user multiending preferences may include other pre resolution preferences that direct multiending search controller in creating and selecting URL name combinations that include at least a portion of the URL name received in URL entry .

In the example depicted of post resolution preferences indicated at reference numerals and a user designates to filter out the lowest hit URL and to filter out any URLs that lead to web pages that are for sale. In particular when multiending search controller receives the address locations of the selected URL name combinations multiending search controller can access each of the address locations and search the coding for each accessed web site to access information such as number of hits and whether the page is for sale. Multiending search controller may also send the locations to web services that return statistical use and ownership status about web site locations. It will be understood that user multiending preferences may include other post resolution preferences that direct multiending search controller in creating and selecting URL name combination with at least a portion of the URL name received in URL entry .

Under output preferences a user may designate multiple types of preferences for output of the URL name combinations and address locations as multi ending options . A user may specify output preferences in general such as the output preference to direct display the multi ending options in a selectable list in a window open for the application as indicated at reference numeral . In addition a user may specify output preferences according to the application sending the URL entry. For example output preference indicates that if the URL entry is requested by a web browser and there are four or less URL name combinations then the preference is to output a selectable thumbnail representation of the web page accessed from each filtered URL name combination in a separate portion of the requesting web browser window. In other example a user may specify output preferences according to the number of accessible URL name combinations and locations or other conditional criteria. Other examples of output preferences may include a preference to open a separate window to display selectable multi ending options.

Referring now to an illustrative representation depicts a web browser window includes a selectable listing of a selection of URLs based on a portion of a domain name entered by a user as a URL. In the example a web browser window directed by a web browser includes a URL entry area . In the URL entry area a user enters a portion of a domain name as X . It will be understood that X may include multiple types of portions of URL names. The web browser directing web browser window passes the portion of the URL name to a DNS resolver for example or other system enabled to retrieve a location for a URL name. Since the portion of the URL name X is not resolvable to a particular location the portion of the URL name is passed to multiending controller . A selectable list within web browser window illustrates the results of multiending controller selecting possible URL name combinations with X and determining which URL name combinations have an addressable location. In the example each URL name combination is a selectable link where a user may select to access a web page accessible at the URL name combination by selecting the link through the positioning of cursor without web browser window .

It is important to note that when a user enters a URL entry that does not indicate a protocol such as http or ftp then the web browser may automatically select a default protocol. Alternatively multiending controller may select a default protocol or may select URL name combinations with different protocols.

With reference now to an illustrative representation depicts a web browser window that includes thumbnail images of the selection of URLs accessible based on a portion of a URL name entered by a user. In the example a web browser window directed by a web browser includes a URL entry area in which the user has entered ABC.org with a request for multiple endings through selection of selectable multi button . It will be understood that a user may request multiple endings through other types of input and that a requesting application may include additional selectable interfaces or preference settings through which a user may indicate a preference to trigger multiending controller for a particular URL entry or all URL entries.

Multiending controller is triggered to receive the URL entry of ABC.org and select multiple URL name combinations of other ending types to ABC . Multiending controller resolves whether each URL name combination has an addressable location. Then multiending controller directs output of the URL name combinations with addressable locations by directing web browser window to include selectable thumbnail images and each in a separate quadrant of web browser window . Each thumbnail image may include a reduced selectable image of the web page accessible through the each URL name combination. A user may select one of selectable thumbnail images or and trigger opening of a full size image of the selected web page location.

Referring now to a high level logic flowchart depicts a process and program for detecting an incomplete URL entry and resolving multiple possible URLs for the incomplete URL entry. As illustrated the process starts at block and thereafter proceeds to block . Block depicts a determination of whether a multiending controller is triggered. It will be understood that other applications may pass incomplete URL entries to the multiending controller to trigger the multiending controller or that multiending controller may actively monitor a channel through which URL entries pass for error messages that trigger the multiending controller. Further a user may request that the multiending controller be triggered for a particular URL entry.

If the multiending controller is triggered then the process passes to block . Block depicts the multiending controller selecting all possible URL combinations with at least a portion of the URL entry according to user preferences. Next block illustrates the multiending controller resolving the locations of each of the possible URL combinations. In resolving locations multiending controller may pass each of the URL combinations to a DNS resolver which directs resolution or directly to a DNS server. Thereafter block depicts the multiending controller filtering the possible URLs according to user preferences. Next block illustrates the multiending controller directing output of the filtered URLs for selection according to user output preferences and the process ends. In particular in directing output of the filtered URLS for selection according to user output preferences the multiending controller may dynamically create web pages for output in a web browser window or a separate window for output of the filtered URLs for selection by the user. Alternatively where a web browser or other requesting application facilitates the output of multiending options multiending controller may send directions for output of the filtered URLs according to the multiending output options of the requesting application.

Referring now to a high level logic flowchart depicts a process and program for responding to multi ending options. In particular a web browser may facilitate the output of multi ending options by including a selection of output interfaces specified for output of multiple URL name combinations responsive to a user entry of an incomplete URL. As illustrated the process starts at block and thereafter proceeds to block . Block depicts a determination by the web browser whether a communication of multiple URL addresses is received. If multiple URL addresses are received then the process passes to block . Block depicts selecting one of multiple output formats for multiple URL addresses according to user output preferences. User output preferences may be indicated in the communication of multiple URL addresses or in separate user preferences associated with the web browser for example. Next block illustrates facilitating the display of the multiple URL addresses according to the selected output format and the process ends.

While the invention has been particularly shown and described with reference to a preferred embodiment it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention.

