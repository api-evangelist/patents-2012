---

title: Combining key control information in common cryptographic architecture services
abstract: A method for creating a key token includes receiving a first key token, second key token and a request to combine the first key token with the second key token, identifying a key type of the first key token and a key type of the second key token, determining whether the key type of the first key token may be combined with the key type of the second key token, combining the first key token with the second key token to create a third key token responsive to determining that the key type of the first key token may be combined with the key type of the second key token, and outputting the third key token.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08953792&OS=08953792&RS=08953792
owner: International Business Machines Corporation
number: 08953792
owner_city: Armonk
owner_country: US
publication_date: 20121010
---
This is a continuation application of and claims priority from U.S. application Ser. No. 13 150 448 filed on Jun. 1 2011 the entire contents of which are incorporated herein by reference.

The present invention relates to cryptographic keys and more specifically to cryptographic keys in the common cryptographic architecture CCA services.

The CCA is often used in financial services such as payment card services to protect financial data such as user account data and verification codes. The CCA specifies a byte array of key control information called a control vector CV that is bound to a cryptographic key such as a data encryption standard DES key that is secured using a physically secure hardware security module HSM . The CV is used in both the management of the key and to control the key usage.

Bits in the CV represent for example a key type that identifies broad capabilities of the key such as whether the key may encipher and or decipher data wrap or unwrap keys computing or verifying message authentication codes MACs encrypting or decrypting personal identification number PIN information and generating or verifying PIN information. The CV bits may also represent a key sub type that is a restriction on key capability within actions supported by the key type such as limiting the key to be used for either encrypting or decrypting but not both. The CV bits may include key management indicators that control whether the key may be distributed and if so whether the key is exportable when wrapped in a key block. The key usage may also be represented in the CV bits. Key usage controls how the key may be used beyond limits imposed by the key type and key sub type such as for example limits on the types of data that may be processed by the key or types of keys that may be wrapped with the key.

The CV is usually an 8 Byte or 16 Byte quantity matching the length of a DES key to which it is bound. The CV is usually included in a CCA data structure called a key token that also includes a wrapped version of the key. The wrapping process cryptographically binds the CV to the key such that changing the CV will alter the resultant value of the key when unwrapped rendering the key useless.

According to one embodiment of the present invention a method for creating a key token includes receiving a first key token second key token and a request to combine the first key token with the second key token identifying a key type of the first key token and a key type of the second key token determining whether the key type of the first key token may be combined with the key type of the second key token combining the first key token with the second key token to create a third key token responsive to determining that the key type of the first key token may be combined with the key type of the second key token and outputting the third key token.

Additional features and advantages are realized through the techniques of the present invention. Other embodiments and aspects of the invention are described in detail herein and are considered a part of the claimed invention. For a better understanding of the invention with the advantages and the features refer to the description and to the drawings.

An example of a common cryptographic architecture CCA service is called card verification value generate CVV generate that uses two eight byte CCA keys to generate payment card verification values. Another CCA service is called CVV verify which uses either the original set of keys or in some instances a second set of keys that include control vector CV based restrictions that may be used only with the CVV verify service to verify CVVs.

Each service uses two separate eight byte key tokens referred to as key a and key b. The cryptographic keys wrapped in the tokens are used for distinct purposes in the CVV generate and CVV verify services. The CCA service supports three types of keys that may be used for the key a and key b. The three types of keys include process specific keys that are used for CVV verify and CVV generate services the process specific keys are called CVV KEYA and CVV KEYB. Keys that may compute message authentication codes MACs as well as CVVs are called ANY MAC keys. Keys that may compute MACs as well as encrypt and decrypt data as well as computing CVVs are called DATA keys.

Under previous CCA specifications separate 8 byte keys were used for the key a and the key b. Under some CCA specifications a single 16 byte key may be used for the processes where the 16 byte key includes two halves each half cryptographically bound to the key token using a wrapping process implemented in a hardware security module HSM .

The methods and systems described below allow users of schemes using the separate 8 byte keys to convert the separate 8 byte keys into a single 16 byte key while maintaining control information and security of the keys. For illustrative exemplary purposes the example keys include two 8 byte keys that are combined into a single 16 byte key however the exemplary embodiments are not limited to particular key lengths. Thus any arrangement of any number of shorter keys having any key length may be combined into a single larger key using methods and systems similar to the methods and systems described below.

In this regard illustrates an exemplary embodiment of a system . The system includes a processor that is communicatively connected to a display device input devices memory a networking device and a HSM . The networking device may be communicatively connected to communications networks that may be communicatively connected to other processors not shown . The HSM includes an HSM processor that is communicatively connected to an HSM memory .

In operation the processor may operate for example application programming interfaces APIs that perform processing tasks and creates and sends data packets with call parameters to the HSM . The HSM processor receives and processes the data packets and creates a response packet that is sent to the requesting API. A data packet may include for example a set of parameters that are defined as pointers to objects. The parameters include for example key a identifier length that is a pointer to an integer specifying the length of the key a identifier parameter in bytes. The key a identifier is a pointer to a string variable containing the CCA key token containing the key. A key b identifier length and a key b identifier parameter are similar to the key a parameters described above but are associated with the key b. An output key identifier length is a pointer to an integer specifying the length of the output key identifier parameter in bytes. The output key identifier parameter is a pointer to a string variable that receives the output key token carrying the 16 byte version of the 8 byte input key a and 8 byte input key b and the CV.

In this regard illustrates a table that is used by the HSM to logically determine whether the combination process is allowed based on the particular types of keys that are designated as key a and key b. Referring to the HSM determines what type of key is designated as key a and what type of key is designated as key b and applies the table to determine whether the combination process is allowed or not allowed. For example if the 8 byte input key designated as key a is a CVVKEY A type key and the 8 byte input key designated as key b is a CVVKEY B type key the combination process to combine the keys into a 16 byte key is allowed. If the 8 byte input key designated as key a is a DATA type key and the 8 byte input key designated as key b is a DATA type key the combination process to combine the keys into a 16 byte key is allowed. Similarly if the 8 byte input key designated as key a is an ANY MAC type key and the 8 byte input key designated as key b is an ANY MAC type key the combination process to combine the keys into a 16 byte key is allowed. Alternatively if the if the 8 byte input key designated as key a is a CVVKEY B type key the combination process is not allowed regardless of the type of key designated as key b while if the 8 byte input key designated as key b is a CVVKEY A type key the combination process is not allowed regardless of the type of key designated as key a.

Referring back to if the combination process is not allowed for the combination of the particular types of keys that are designated as key a and key b a rejection message may be output in block . In block the HSM determines whether the user has the necessary permissions to direct the system to perform the combination process. For the combinations of keys designated as allowed in the table of most or all users may be allowed to direct the system to perform the combination process. Other combination of key types may be allowed if the user has the necessary security permissions to direct the system to perform the combination of the particular key types. The security permissions of the user may be determined using for example a user login procedure that identifies the user and indicates a security level for the user. For example referring to if the if the 8 byte input key designated as key a is a CVVKEY A type key and the 8 byte input key designated as key b is either a DATA type key or an ANY a MAC type key the combination process to combine the keys into a 16 byte key is allowed conditionally as long as the user requesting the combination process is authorized or has the necessary permissions to direct the system to perform such a combination process. Referring to if the user does not have the necessary permissions to direct the system to perform the combination process for the particular keys as indicated in the table a rejection message may be output in the block . If the user does have the necessary permissions to perform the combination process for the particular keys as indicated in table the HSM creates a 16 byte key token using the received 8 byte key tokens and outputs the created 16 byte key token to the user which may be output for example via the display device of or saved in the memory for later retrieval by a user.

An example key wrapping process is described below however any appropriate alternative key wrapping process may be used in alternate embodiments. In this regard for a 16 byte DES key K where the left 8 bytes are KL and the right 8 bytes are KR a double length DES key encrypting key KEK having two halves KEKL and KEKR will be used to wrap the key K along with a control vector CV having two halves CVL and CVR. The process includes computing KEKL KEKL XOR CVL where XOR is an exclusive OR logical operation and KEKR KEKR XOR CVR. The values KEKL and KEKR are used together as a double length DES key KEK . The KL is encrypted with KEK using triple DES electronic code book ECB encryption to define the left half of the wrapped key and the KR is encrypted with KEK using triple DES ECB encryption to define the right half of the wrapped key. The key token structure described above receives the CV the left and write halves of the wrapped key and other elements that are part of the token structure.

The technical effects and benefits of the above described embodiments allow a set of short keys to be combined into a longer key that may be output to a user without compromising the security of the keys or the system.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon. Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks. The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks. The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one more other features integers steps operations element components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated

The flow diagrams depicted herein are just one example. There may be many variations to this diagram or the steps or operations described therein without departing from the spirit of the invention. For instance the steps may be performed in a differing order or steps may be added deleted or modified. All of these variations are considered a part of the claimed invention.

While the preferred embodiment to the invention had been described it will be understood that those skilled in the art both now and in the future may make various improvements and enhancements which fall within the scope of the claims which follow. These claims should be construed to maintain the proper protection for the invention first described.

