---

title: Optimizing battery use for known future load
abstract: Methods for optimizing battery use for a known future load are described. In an embodiment, one or more battery cells are selected from a set of battery cells to provide power to a computing-based device. The battery cells are selected based on discharge profile data for each battery cell and both the current power requirement and a known future power requirement of the computing-based device. The known future power requirement is calculated based on information available to the operating system running on the computing-based device. In some examples, one or more battery cells may also be selected for charging when a power source is available and these cells may be selected based on charge profile data and the known future power requirement. The selection of the battery cells may also be made in order to satisfy a battery optimization goal, which may be defined by a user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09285851&OS=09285851&RS=09285851
owner: Microsoft Technology Licensing, LLC
number: 09285851
owner_city: Redmond
owner_country: US
publication_date: 20120622
---
Consumer electronic devices such as portable computing devices e.g. smart phones laptops tablets etc typically use lithium ion or lithium polymer batteries. With the ever increasing functionality of such devices the demands on battery technology are increasing rapidly. Battery performance is increasing year on year but these improvements are linear compared to the exponential Moore s Law growth in the performance of the electronic systems they power. To address these requirements new battery chemistries are being developed however whilst a particular new battery chemistry may offer benefits in one area e.g. speed of charging there is typically a trade off against another characteristic e.g. storage capacity .

The embodiments described below are not limited to implementations which solve any or all of the disadvantages of known methods of managing battery use.

The following presents a simplified summary of the disclosure in order to provide a basic understanding to the reader. This summary is not an extensive overview of the disclosure and it does not identify key critical elements or delineate the scope of the specification. Its sole purpose is to present a selection of concepts disclosed herein in a simplified form as a prelude to the more detailed description that is presented later.

Methods for optimizing battery use for a known future load are described. In an embodiment one or more battery cells are selected from a set of battery cells to provide power to a computing based device. The battery cells are selected based on discharge profile data for each battery cell and both the current power requirement and a known future power requirement of the computing based device. The known future power requirement is calculated based on information available to the operating system running on the computing based device. In some examples one or more battery cells may also be selected for charging when a power source is available and these cells may be selected based on charge profile data and the known future power requirement. The selection of the battery cells may also be made in order to satisfy a battery optimization goal which may be defined by a user.

Many of the attendant features will be more readily appreciated as the same becomes better understood by reference to the following detailed description considered in connection with the accompanying drawings.

The detailed description provided below in connection with the appended drawings is intended as a description of the present examples and is not intended to represent the only forms in which the present example may be constructed or utilized. The description sets forth the functions of the example and the sequence of steps for constructing and operating the example. However the same or equivalent functions and sequences may be accomplished by different examples.

The battery cells may all be part of a single battery e.g. as indicated by dotted line in or the computing based device may comprise multiple batteries as indicated by dotted lines in with each battery comprising one or more battery cells . Where any battery within the computing based device comprises a plurality of cells the battery may be described as having multiple modes of operation with each mode corresponding to a different combination of cells being connected to provide power to the computing based device .

In various examples the battery cells which are adaptively controlled may all be of the same type i.e. each battery cell may use the same battery technology i.e. homogeneous battery technology and any suitable battery technology may be used. Examples of battery technologies include but are not limited to lithium ion lithium polymer and lithium iron phosphate LiFePO chemistries supercapacitors also known as ultracapacitors and fuel cells. In other examples the plurality of battery cells within the computing based device may comprise battery cells of different types and in some examples these battery cells may operate internally at different voltages. For example the computing based device which may for example be a mobile phone may comprise a lithium ion battery and a supercapacitor. In another example the computing based device may comprise a fuel cell and a lithium polymer cell. In further examples the computing based device may comprise more than two different types of battery cells. Where the battery cells within the computing based device comprise more than one battery technology the cells may be described as using heterogeneous battery technology.

The computing based device also comprises one or more processors which may be microprocessors controllers or any other suitable type of processors for processing computer executable instructions to control the operation of the device. In some implementations for example where a system on a chip architecture is used the processors may include one or more fixed function blocks also referred to as accelerators which implement a part of the method of operation in hardware rather than software or firmware . Platform software comprising an operating system or any other suitable platform software may be provided at the computing based device to enable application software to be executed on the device.

The computer executable instructions may be provided using any computer readable media that is accessible by computing based device . Computer readable media may include for example computer storage media such as memory and communications media. Computer storage media such as memory includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other non transmission medium that can be used to store information for access by a computing device. In contrast communication media may embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism. As defined herein computer storage media does not include communication media. Therefore a computer storage medium should not be interpreted to be a propagating signal per se. Propagated signals may be present in a computer storage media but propagated signals per se are not examples of computer storage media. Although the computer storage media memory is shown within the computing based device it will be appreciated that the storage may be distributed or located remotely and accessed via a network or other communication link e.g. using communication interface . The communication interface may use any appropriate technology and protocol and this may include wired and or wireless technologies.

The memory may also provide a data store and may for example be used to store battery cell profile data . This battery cell profile data comprises charging and or discharging profiles for each battery cell and these profiles may be derived learned or uploaded to the device as described in more detail below. Alternatively this battery cell profile data may comprise a model which can be used to generate charging and or discharging profiles. Although the battery cell profile data is shown in has being stored in memory within computing based device in other examples the data may be stored in a separate data store separate from memory . Other elements shown in are described below.

In some examples the method may further comprise adaptively controlling which of the battery cells are charged block and this adaptive control of charging may be based on at least the battery cell profile data and the known future load as determined in block . In yet further examples the method may comprise adaptively controlling charging in block instead of adaptively controlling which battery cells are used to power the device i.e. block is omitted . As shown in the computing based device may further comprise a charging interface and this interface may comprise a power input connection and any associated charging circuitry. The switching element may be used to selectively connect any of the battery cells to the charging interface .

By adaptively controlling which battery cells are discharged and or charged as described above the operation of the battery cells can be optimized. The action of discharging a battery cell is used herein to refer to reducing the charge in a battery cell by powering the device or another device or by providing power to charge another battery cell where this battery cell may be located within the device or within another device . This optimization of the operation of the battery cells may be defined in terms of one or more different goals and various examples are described below. These goals may be referred to as battery optimization goals .

In a first example the set of battery cells may be adaptively controlled to improve the collective efficiency of the set of battery cells . This may for example comprise increasing e.g. to maximizing the electrical energy that can be delivered by the set of cells by reducing e.g. by minimizing the energy which is lost in the form of heat or chemical change within the cells. This may involve adaptively controlling which cells are charged discharged in order to keep the charging discharging rates as close to the cell s optimum operating conditions. For example a computing based device which comprises a lithium ion cell and a supercapacitor may draw power from the supercapacitor during periods of increased load e.g. during spikes in the load profile in order to smooth the power drawn from the lithium ion cell and such that the power drawn from the lithium ion cell is closer to the optimum discharge curve or rate . In another example the set of battery cells may be adaptively controlled to provide power at a required voltage level in the most efficient way and taking into consideration that different battery cells may operate at different voltages internally. By selecting the appropriate combination of battery cells inefficient voltage conversion stages may be reduced or eliminated.

In a second example the set of battery cells may be adaptively controlled to increase e.g. to maximize or otherwise optimize the long term collective life of the battery cells. This may be particularly relevant where the battery cells are part of a single battery and or where the battery cells are not replaceable and therefore by increasing the long term life of the battery cells the operating life of the computing based device itself is increased.

In a third example the set of battery cells may be adaptively controlled to reduce e.g. to minimize the cost of replacement of the battery cells where cost may be defined in terms of money environmental cost e.g. based on the ability to recycle or use of hazardous materials or pollutants ease of replacement e.g. ease of access or time taken to replace etc. This may for example involve adaptively controlling the charging discharging of the battery cells such that battery cells which are less expensive to replace are sacrificed in some way e.g. through non optimum charging discharging so that more expensive battery cells can be operated closer to their optimum conditions. In an example cells which can be recycled and hence have lower environmental cost may be operated away from their optimum operating conditions in order that cells which cannot be recycled can be charged discharged in a manner which is closer to their optimum operating conditions and so maximize the operational life of the non recyclable cells.

In a fourth example the set of battery cells may be adaptively controlled to increase e.g. to maximize the use of upcoming recharging opportunities thus increasing the utility of such recharging opportunities. Where heterogeneous battery cells are used this adaptive control uses both the availability and type of recharging opportunities because different battery types may be recharged in very different ways and at different locations. For example a computing based device comprising a fuel cell and a lithium polymer cell may discharge the fuel cell as a higher priority when it expects to be near a re fill opportunity which recharges the fuel cell but switch to the lithium polymer cell when nearer a recharging point for the lithium polymer cell . There are many ways that a computing based device may determine that there is an upcoming recharging opportunity and examples include prediction based on previous history e.g. the device is connected to a charger on most days between 10 pm and 7 am prediction based on a combination of location information and history e.g. the device is usually connected to a charger when in a particular location and sensing the presence of a charging device e.g. using RFID tags Bluetooth etc .

In a fifth example the computing based device may detect the presence of an alternative power source and then use this knowledge in adaptively controlling the battery cells e.g. in blocks and or . Examples of alternative power sources may comprise a spare battery e.g. which is not currently connected to the computing based device or power which may be available to be scavenged from the environment. Examples of power that may be scavenged from the environment include but are not limited to generating electricity from solar power generating electricity from heat e.g. using a Peltier device and generating electricity from vibrations. These alternative power sources may be used to provide power directly to the computing based device instead of using the battery cells .

The detection of the alternative power source may be performed using a sensing element within the computing based device e.g. as shown in . This sensing element may for example comprise an RFID reader or wireless receiver e.g. a Bluetooth module . Such an element may be used to detect alternative power sources such as spare batteries which are tagged with an RFID tag or which comprise a wireless module arranged to transmit a beacon signal. In examples where power is scavenged from the environment the sensing element may also be the element which generates power from the environment e.g. an array of solar cells or a Peltier device. In various examples there may also be a software component e.g. stored in memory which is used in performing the detection of the alternative power source or this functionality may be integrated within the software that performs the adaptive control of the battery cells e.g. within the adaptive battery control module .

It will be appreciated that the alternative power source may be used for discharging and or charging one or more of the battery cells e.g. a subset of the battery cells as determined in block of in addition to or instead of being used to power the device directly and in such an instance the availability of a such a power source may be considered a recharging opportunity as discussed above.

In a sixth example the set of battery cells may be adaptively controlled to increase the flexibility in providing power to the computing based device . In a specific example a laptop may comprise 9 cells arranged in 3 groups of 3 cells. When operating in high current mode all the cells may be selected in block to provide power to the laptop but when operating in a lower power mode only 3 or 6 cells may be used. The adaptive control mechanism may switch between groups of cells such that all cells maintain a similar voltage level in case all 9 need to be used in parallel again. Deepening the discharge of one set of 3 cells in this manner may also reduce capacity degradation over time.

In further examples any combination of any of these six goals described above may be used e.g. by keeping the charging discharging rates as close to optimum as possible whilst also maximizing the utility of any recharging opportunities or other goals may be used e.g. maximizing performance at the expense of battery life or maximizing operating time on a single charge . In various examples a user of the computing based device may provide user input specifying a battery optimization goal to be used when adaptively controlling which cells are charged discharged. For example as shown in the computing based device may receive a user input defining a battery optimization goal block and then this goal may be used when adaptively controlling which battery cells are discharged in block or charged in block .

The user defined battery optimization goal may be one of the six example goals described above or a different goal. For example the user defined battery optimization goal received in block may specify a required device lifetime e.g. two years which may correspond to the contract length for a mobile telephone and then the adaptive control mechanism may control the charge discharge of the plurality of battery cells to optimize their collective operation over the user defined lifetime e.g. over a two year period . In some examples the computing based device may provide a user interface to enable a user to select one or more goals e.g. from a list of the goals described above or otherwise specify the user defined battery optimization goal.

The method shown in comprises the step of determining a known future power requirement or load based on information available to the operating system in block . This known future power requirement is not a prediction of future load based on the existing load or user history but instead is based on knowledge held by the operating system of the future activity that will be performed by the computing based device . For example the known future power requirement at a time in the future t t where the current time is tand the interval between the current time and the time of the known future load is t may be based on knowledge that various processes will be running on the computing based device and as a result the power requirement of the computing based device at that time can be calculated. For example the operating system may be arranged to check for software updates periodically e.g. at a set time each week and so the operating system will know that at a particular time the computing based device will be powered up with the communication interface active and will be downloading data. As a result the known future load may be quite high and the value of t i.e. the time interval until the known future load will be required may be in the order of hours.

In various examples the known future load may be an immediate future load or a short term future load e.g. where t is a few seconds or a few minutes. For example where a data transfer is occurring between the computing based device and another device e.g. via communication interface the operating system will know how long the transfer is going to take e.g. a few seconds or a few minutes and so will know the future load over this time period. Similarly where big disk read writes are occurring e.g. big file transactions or a hibernating operation the operating system will know how long the operation is going to take and hence can calculate the future load over this time period. In a further example the operating system may know of future sensor activity such as a GPS receiver detecting the location of the device. In some instances the operating system may periodically update its known location so that applications can use this information and in such an example the value of t i.e. the time interval until the known future load will be required may be in the order of tens of minutes e.g. 20 minutes .

This knowledge held by the operating system and which is used in determining a known future load in block may for example be obtained using context sensing. The determination of a particular load may also use the results of profiling which may be performed by the operating system. The operating system may profile different applications processes and or services to obtain an estimate of the power requirement for a particular application process service and then based on knowledge of applications processes services that will be running at a particular time in the future the load at that time can be determined in block .

The method shown in includes the step of accessing profile data for each battery cell block e.g. battery cell profile data where this profile data comprises charging and or discharging profiles for each battery cell and may in some examples comprise a model of the charging discharging properties of a battery cell. The profile data may for example comprise one or more of 

The method may further comprising storing the profile data for each battery cell block and in which case the profile data may be accessed from the local storage location. Alternatively the profile data may be accessed from another location e.g. a remote device . The profile data which is stored for each battery cell in block may be provided by the manufacturer of the battery cell e.g. based on factory characterization of the battery cell or by a third party e.g. using standard characteristics provided for a particular type of battery cell . In other examples however the profile data may be learned by the computing based device block .

Irrespective of whether the initial profile data which is stored in block is provided by a third party and uploaded to the computing based device or learned by the computing based device in block the computing based device may monitor battery cell operation block and update the stored profile data based on the output of the monitoring step block .

There are many ways in which the adaptive control of the plurality of battery cells as described above may be implemented. In the example shown in the adaptive control is performed by the operating system itself and in such an example the operating system may include an adaptive battery control module . This module comprises computer executable instructions which when executed cause the processor to determine the current load and the known future load in block and to adaptively control which of the battery cells are charged in block and or discharged in block . The adaptive battery control module sends commands to the switching element or otherwise controls the switching element to connect disconnect individual battery cells or groups of battery cells to the device and or to the charging interface . This module may also comprise computer executable instructions which when executed cause the processor to perform one or more of the following optional steps store profile data for each battery cell in block learning profile data for each battery cell in block monitoring battery cell operation in block and updating the stored profile for a battery cell in block .

In some examples the adaptive battery control module or another component within the device e.g. another software module may also adaptively control the charging operation block in i.e. may control the operation of the charging interface e.g. via link to provide accelerated or fast charging by overdriving the charging interface . Any suitable mechanism may be used to implement this overdriving such that the charging interface is able to charge a battery cell more quickly than in its standard operating mode and in an example the current output by the charging interface to a battery cell may be increased above the standard level. This fast charging may only be operable for a short period of time and may for example be used in order to optimize a short charging opportunity or to quickly boost the charge level of a battery cell before the end of the charging opportunity. The overdriving may be controlled according to the stored charging profiles for the battery cells in order that the battery cells are not damaged by the process. In some examples the overdriving may be implemented automatically e.g. by the adaptive battery control module and in other examples it may be implemented at the request of a user e.g. in response to a user input received in block of .

The computing based device shown in also comprises an input output controller arranged to output display information to a display device which may be separate from or integral to the computing based device . The display information may provide a graphical user interface. This graphical user interface may be arranged to enable a user to define a battery optimization goal e.g. by selecting one or more goals from a list of possible goals . In some examples this graphical user interface may be arranged to display information generated by the adaptive battery control module such as information showing how well a battery optimization goal is being met or advice warning messages for the user. For example a warning message may alert the user of battery cells approaching the end of their operating life and an advice message may inform the user about a type of battery cells to use when replacing battery cells to more closely meet a defined goal e.g. based on past user data .

The input output controller is also arranged to receive and process input from one or more devices such as a user input device e.g. a mouse keyboard camera microphone or other sensor . In some examples the user input device may detect voice input user gestures or other user actions and may provide a natural user interface NUI . This user input may be used to receive a user input which defines a battery optimization goal e.g. as received in block . In an embodiment the display device may also act as the user input device if it is a touch sensitive display device. The input output controller may also output data to devices other than the display device e.g. a locally connected printing device not shown in .

Any of the input output controller display device and the user input device may comprise NUI technology which enables a user to interact with the computing based device in a natural manner free from artificial constraints imposed by input devices such as mice keyboards remote controls and the like. Examples of NUI technology that may be provided include but are not limited to those relying on voice and or speech recognition touch and or stylus recognition touch sensitive displays gesture recognition both on screen and adjacent to the screen air gestures head and eye tracking voice and speech vision touch gestures and machine intelligence. Other examples of NUI technology that may be used include intention and goal understanding systems motion gesture detection systems using depth cameras such as stereoscopic camera systems infrared camera systems rgb camera systems and combinations of these motion gesture detection using accelerometers gyroscopes facial recognition 3D displays head eye and gaze tracking immersive augmented reality and virtual reality systems and technologies for sensing brain activity using electric field sensing electrodes EEG and related methods .

The computing based device shown in comprises a smart battery which comprises multiple battery cells as described above and performs the adaptive control of the charging and or discharging of these cells. The smart battery also comprises a processor memory switching element as described above and a communication interface . The communication interface may use any suitable technology to interact with the rest of the system and examples of suitable interfaces include but are not limited to serial IC SPI. In an example the communication interface may comprise a WiFi or other wireless technology module which is arranged to communicate with the rest of the system via communication interface . The smart battery may also comprise a sensing element as described above .

The processor may be a microprocessor controller or any other suitable type of processor for processing computer executable instructions to control the operation of the smart battery and may include one or more fixed function blocks as described above. As described above with reference to memory in computing based device the memory or other form of computer storage media in the smart battery includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data.

This memory is used to store the adaptive battery control module . This module is similar to the adaptive battery control module in but is not part of the computing based device s operating system . In such an embodiment the operating system exposes an API application programming interface which the smart battery uses to query the operating system for information via communication interface . Information which may be provided to the smart battery by the operating system via the API comprises information to enable the adaptive battery control module to determine a known future load in block of and information relating to user input e.g. where a user input defining a battery optimization goal is received by the computing based device as in block . As described above with reference to module the adaptive battery control module comprises computer executable instructions which when executed cause the processor to determine the current load and the known future load in block based on information available via the API and to adaptively control which of the battery cells are charged in block and or discharged in block . This module may also comprise computer executable instructions which when executed cause the processor to perform one or more of the following optional steps store profile data for each battery cell in block learning profile data for each battery cell in block monitoring battery cell operation in block and updating the stored profile for a battery cell in block and adaptive control of charging operations in block . Where the battery cell profile data is stored this also be stored in memory as described above .

Through use of a smart battery as described above and shown in the adaptive control of battery cells may be transparent to the operating system and or application software running on the device .

Most of the features of computing based device are the same as shown in and described above however the operating system does not comprise an adaptive battery control module as this functionality is implemented at the remote device . Similarly the battery cell profile data may be stored in the memory of the remote device instead of in the memory of the computing based device . As described above with respect to the operating system provides information to the remote device to enable it to perform the adaptive control of the battery cells and this information may be provided via an API as described above or by any other method e.g. information to enable load calculations and in some examples information about a user input .

The remote device comprises one or more processors wherein a processor may be a microprocessor controller or any other suitable type of processor for processing computer executable instructions to perform adaptive battery control and may include one or more fixed function blocks as described above. The remote device also comprises computer storage media such as memory . As described above with reference to memory in computing based device the memory or other form of computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data.

The memory is used to store the adaptive battery control module . This module provides much of the same functionality as the adaptive battery control module in and adaptive battery control module in . As described above with reference to modules and the adaptive battery control module comprises computer executable instructions which when executed cause the processor to determine the current load and the known future load in block however in this implementation these loads relate to the computing based device and not remote device and are based on information available to the computing based device s operating system . As described above this information may be made available to the remote device via an API or using other means.

The adaptive battery control module further comprises computer executable instructions which when executed cause the processor to adaptively control which of the battery cells in the computing based device are charged in block and or discharged in block . This module may also comprise computer executable instructions which when executed cause the processor to perform one or more of the following optional steps storing profile data for each battery cell in the computing based device in block e.g. in memory learning profile data for each battery cell in the computing based device in block monitoring battery cell operation in block and updating the stored profile for a battery cell in block and adaptively controlling charging operations in block .

The stored profile data in memory in the master device relates not only to the local battery cells within the master device but also to battery cells in slave devices . The operating systems in the slave devices may provide information to the master device to enable the current and future known loads to be determined in block of in a similar manner to described above with reference to . It will be appreciated that there may be more than one slave device and that only a subset of the functional elements within the slave device are shown in e.g. the slave device may comprise an input output controller . Further in this embodiment any one device master slave may comprise one or more battery cells of the same or different types and the adaptive battery control module is arranged to control a plurality of battery cells which are distributed between the devices in the system.

The methods described above may be used to build batteries from multiple heterogeneous battery cells and to provide increased operating efficiency or to satisfy another battery optimization goal . The fine grained control of individual cells or groups of cells which is provide by the adaptive battery control module according to the charge discharge characteristics of the cells enables the operating efficiency to be improved e.g. maximized and so improve e.g. maximize the efficiency of the battery as a whole.

Although the present examples are described and illustrated herein as being implemented in a computing based device as shown in or system of such devices e.g. as shown in the system described is provided as an example and not a limitation. As those skilled in the art will appreciate the present examples are suitable for application in a variety of different types of battery powered devices systems.

Furthermore although the adaptive battery control module is described above as being implemented in software running on a processor in other examples the module may be implemented in hardware. Alternatively or in addition to the examples described above the functionality described herein can be performed at least in part by one or more hardware logic components. For example and without limitation illustrative types of hardware logic components that can be used include Field programmable Gate Arrays FPGAs Program specific Integrated Circuits ASICs Program specific Standard Products ASSPs System on a chip systems SOCs Complex Programmable Logic Devices CPLDs .

The term computer or computing based device is used herein to refer to any device with processing capability such that it can execute instructions. Those skilled in the art will realize that such processing capabilities are incorporated into many different devices and therefore the terms computer and computing based device each include PCs servers mobile telephones including smart phones tablet computers set top boxes media players games consoles personal digital assistants and many other devices.

The methods described herein may be performed by software in machine readable form on a tangible storage medium e.g. in the form of a computer program comprising computer program code means adapted to perform all the steps of any of the methods described herein when the program is run on a computer and where the computer program may be embodied on a computer readable medium. Examples of tangible or non transitory storage media include computer storage devices comprising computer readable media such as disks thumb drives memory etc and do not include propagated signals. Propagated signals may be present in a tangible storage media but propagated signals per se are not examples of tangible storage media. The software can be suitable for execution on a parallel processor or a serial processor such that the method steps may be carried out in any suitable order or simultaneously.

This acknowledges that software can be a valuable separately tradable commodity. It is intended to encompass software which runs on or controls dumb or standard hardware to carry out the desired functions. It is also intended to encompass software which describes or defines the configuration of hardware such as HDL hardware description language software as is used for designing silicon chips or for configuring universal programmable chips to carry out desired functions.

Those skilled in the art will realize that storage devices utilized to store program instructions can be distributed across a network. For example a remote computer may store an example of the process described as software. A local or terminal computer may access the remote computer and download a part or all of the software to run the program. Alternatively the local computer may download pieces of the software as needed or execute some software instructions at the local terminal and some at the remote computer or computer network . Those skilled in the art will also realize that by utilizing conventional techniques known to those skilled in the art that all or a portion of the software instructions may be carried out by a dedicated circuit such as a DSP programmable logic array or the like.

Any range or device value given herein may be extended or altered without losing the effect sought as will be apparent to the skilled person.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

It will be understood that the benefits and advantages described above may relate to one embodiment or may relate to several embodiments. The embodiments are not limited to those that solve any or all of the stated problems or those that have any or all of the stated benefits and advantages. It will further be understood that reference to an item refers to one or more of those items.

The steps of the methods described herein may be carried out in any suitable order or simultaneously where appropriate. Additionally individual blocks may be deleted from any of the methods without departing from the spirit and scope of the subject matter described herein. Aspects of any of the examples described above may be combined with aspects of any of the other examples described to form further examples without losing the effect sought.

The term comprising is used herein to mean including the method blocks or elements identified but that such blocks or elements do not comprise an exclusive list and a method or apparatus may contain additional blocks or elements.

It will be understood that the above description is given by way of example only and that various modifications may be made by those skilled in the art. The above specification examples and data provide a complete description of the structure and use of exemplary embodiments. Although various embodiments have been described above with a certain degree of particularity or with reference to one or more individual embodiments those skilled in the art could make numerous alterations to the disclosed embodiments without departing from the spirit or scope of this specification.

