---

title: Mechanism for facilitating efficient operations paths for storage devices in computing systems
abstract: A mechanism is described for facilitating efficient operations paths for storage devices in computing systems according to one embodiment of the invention. A method of embodiments of the invention includes identifying a request for power mode change at a storage device at a computing system. The request for power mode change indicates potential reduced power state of the storage device. The method may further include transferring context information at the storage device to a host memory at the computing system, in response to the first command, and saving the context information at the host memory, wherein the storage device is at reduced power state.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09207749&OS=09207749&RS=09207749
owner: Intel Corporation
number: 09207749
owner_city: Santa Clara
owner_country: US
publication_date: 20120828
---
Embodiments of the invention relate to messaging systems. More particularly embodiments of the invention relate to a mechanism for facilitating efficient operations paths for storage devices in computing systems.

Wear leveling is a well known technique for extending erasable computer storage media lifetime such as for Flash memory used in solid state devices SSDs and universal serial bus USB Flash drives. For example SSD includes an internal firmware that manages its wear leveling such as by removing its data structures into its own flash and retrieving thereafter. However these hibernation and resumption processes can consume a great deal of time and power for example each process could take nearly 800 msec of time and about 2 W of power to complete. Moreover in case of a sudden power off without proper saving of the drive context the drive s firmware requires and consumes additional time of about 16 sec and power of about 2 W for restoration and rebuilding of the lost drive context to maintain data consistency.

In the following description numerous specific details are set forth. However embodiments of the invention may be practiced without these specific details. In other instances well known circuits structures and techniques have not been shown in details in order not to obscure the understanding of this description.

Embodiments of a mechanism are provided for facilitating efficient operations e.g. suspension resumption path for storage devices also referred to as derives e.g. SSDs in computing devices. In one embodiment a storage device s data structures context are saved outside the device itself such as at a host memory e.g. random access memory RAM dynamic RAM DRAM etc. of a computing device as opposed to at the storage device s own flash memory to provide an efficient and faster path that saves both power and time in performing various derive related operations such as suspend operation resume operation etc.

Embodiments of the invention provide for 1 reducing time spent in entering and exiting sleep states improving overall platform residency in the lower power state 2 reducing energy spent in the save and restore of for example SSD management data structures or context to improve energy efficiency of going to low power states and 3 reducing the wear of SSD that may be caused by frequent save of the context on the flash. In one embodiment host memory is used to receive transfer of context from the storage derive as the host memory in a particular platform may remain available as operation system preserves platform state in various power states even when some devices become idle and no longer in use. Examples of such power states include S0 working partial operation in S0 where device may be put to a low power mode such as D3 slumber or hibernate S1 sleep S2 sleep S3 standby sleep etc. as prescribed and defined by Advanced Configuration and Power Interface ACPI specification serving as an open standard for device configuration and power management by the operating system. Further the functionalities of the mechanism may be performed with the knowledge of the computing system s target state.

Computing device includes an operating system serving as an interface between any hardware or physical resources of the computer device and a user. Computing device further includes one or more processors memory devices network devices drivers or the like as well as input output I O sources such as touchscreens touch panels touch pads virtual or regular keyboards virtual or regular mice etc. It is to be noted that terms like computing device node computing node client memory client host server memory server machine device computing device computer computing system and the like are used interchangeably and synonymously throughout this document.

In one embodiment when drive becomes idle command logic may facilitate a modified storage driver that supports efficient path mechanism to issue a novel device context command e.g. DUMP DEVICE CONTEXT instead of the conventional STANDBY IMMEDIATE command. This command may be implemented as a vendor specific command over a connection or an interface such as the Serial Advanced Technology Attachment SATA . It is contemplated that embodiments are not limited to SATA and that other forms of connections interfaces etc. may be employed and used. Upon reception of the command at the drive firmware of storage device generator generates a blob including context of storage device . In alternate embodiments the command may be generated in the SATA controller which may be part of PCH or the like using hardware state machine or other controllers that intercept the standard STANDABY IMMEDIATE command that the host may send. This hardware or firmware in the SATA controller may continue to perform other operations that otherwise a driver performs and are described below. In one embodiment generator may facilitate the drive firmware to generate the blob. The newly generated blob may include one or more of 1 context including contents of the DRAM to be stored to be stored at host memory as opposed to the flash of storage device 2 anti replay protect random number such as a NONCE representing an arbitrary or random number used once to sign a cryptographic communication 3 encryption and 4 signature for authentication. In one embodiment security logic provides security and authentication e.g. cryptographic encryption decryption security signatures etc. of the blob to prevent any exposure or read of data by any kind of host software or other attacks that may attempt to modify or reuse without it being detected by the drive firmware of storage device . Communication logic transfers blob having encrypted and secured context to host memory to be saved there while the storage drive prepares to be powered down.

Storage drive may save blob in an internal non volatile memory including the keys used for the encryption and signature as well as for example the NONCE used against anti replay and the like. Additionally dump restore logic may insert a flag into or associate it with blob to indicate that at next power up blob should not re load the DRAM from flash at storage drive but instead it should wait for blob to be restored from host memory . Once blob is properly stored at host memory as facilitated by dump restore logic the dumb command DUMP DEVICE CONTEXT is satisfied and the storage drive powers down. This power down may not need further delay as drive context is securely preserved as blob at host memory system that is still available as the operating system keeps running. As aforementioned blob may not be understood by any host software or any other software due to its secured encryption so that blob may not be altered or re used without being noticed by storage drive when for example attempting to re load it.

At a later stage when storage drive is needed again the operating system powers up the drive and at this power up the storage drive firmware detects that need as the internal non volatile flag is set which means that the driver s context is about to be restored from host memory as facilitated by dump restore logic . Once storage drive is powered up and stable command logic issues a restore command e.g. RESTORE DEVICE CONTEXT to storage derive which then triggers and is followed by blob being transferred over to storage drive as restored context as facilitated by communication logic . Upon completion of the transfer security logic may facilitate the drive firmware to authenticate the contents of the blob and check it against any replay attacks before the contents can be restored at storage drive . If the contents are determined to be valid it decrypts the data back into is memory as restored context . Once the restoration is completed at storage drive the drive s firmware may respond successfully to host commands and resume its operation with normalcy.

It is contemplated that any cryptographic methods employed and used by security logic may be one of existing methods and algorithms such as an Advanced Encryption Standard AES method for signing and encrypting with keys that have various strengths e.g. size while the decryption may be done in blocks directly to host memory and be identified as valid only when all parts of the restored context are identified as valid and verified against replay attacks. Embodiments of the invention may be used with drives e.g. SSD drives that utilize Opal encryption and drives that are password protected as the drive context is fully saved and restored with both the drive and the OS driver support this capability and its related commands while the system memory remains available.

Embodiments of the invention are not limited to this illustration and for example various embodiments may be used in S0 to S3 to S0 flow and other such combinations may be applicable with simply modifications to one or more components of efficient path mechanism and other system resources such as a modification at the OS infrastructure level and or to the BIOS to have OS storage driver communicate the blob buffer location to the BIOS for an S3 exit. For example a low power mode may be entered even when the computing system is in state S0 in response to long idle durations or specific indications by the operating system of an inactivity window is expected. Further embodiments of the invention may be used with SSD drives that are attached to various interfaces such as SATA Peripheral Component Interconnect Express PCIe and other type or form of interface that for example allows command based communication with the computing device .

It is contemplated that any number and type of components may be added to and or removed from efficient path mechanism to facilitate various embodiments of the invention including adding removing and or enhancing certain features. For brevity clarity and ease of understanding of efficient path mechanism many of the standard and or known components such as those of a computing device are not shown or discussed here. It is contemplated that embodiments of the invention are not limited to any particular technology topology computing system memory systems architecture and or standard and are dynamic enough to adopt and adapt to any future changes.

At system re boot storage class driver discovers an attached storage drive e.g. SSD drive and its capabilities and consequently storage drive is identified through derive firmware . In one embodiment upon identification a response is provided in the form of a dump command such as DUMP DEVICE CONTEXT while the storage class driver identifies storage drive idleness. Any data structures or context of the storage device is encrypted and authenticated as an anti replay device context and further the storage drive s context is set to be dumped with a state flag and saved encryption and authentication parameters and formed into a blob of data. In one embodiment the blob of data is transferred from the storage device to the host memory as opposed to being conventionally transferred to the storage device s flash . At this point once the blob is saved and settled at the host memory the storage device is powered off .

Upon the storage class driver needing the storage device the storage device is powered on . Upon powering on the storage device needs its context back so contents of the blob are to be transferred upon the associated state flag being triggered along with its encryption and authentication parameters being verified for security. Storage drive is powered on and awaits its context so it may be restored and in one embodiment via efficient path mechanism a restore command RESTORE DEVICE CONTEXT is issued . The contents of the blob are transferred back from the host memory to the storage device . Prior to the storage device receiving the contents the blob the contents are decrypted and authenticated to remain as anti replay device context . Once authenticated the contents are adopted at storage device as restored context. Storage device is ready for operation is acknowledged and is powered on restores back its context and is ready for use.

Method begins with block with a storage device e.g. SSD drive is powered up at block and it is read from flash power down state context at block . At block a determination is made as to whether the blob having the original context at a host memory of the computing system is secured with a minimum integrity e.g. it is encrypted and secure etc. . If the context is secure enough at block the process waits for the host command e.g. a restore command and determines whether the restore command RESTORE DEVICE CONTEXT has been issued at block . In one embodiment if the restore command has been received at block the contents of the blob is decrypted and other factors are verified such as an anti replay check is performed an integrity check on the contents of the blob is performed with parameters context restored from flash at power up of the storage device. At block a determination is made as to whether all the checks were successfully performed. If yes a successful power up of the storage device is performed and its context is ready and restored to be used again. In one embodiment the aforementioned novel processes merely take for example 43 mSec to operate. It is contemplated that embodiments are not limited to 43 mSec or the number and type of processes as with any changes to any of the components of efficient path mechanism as shown in and or depending on the types and resources of storage devices host memory computing systems etc. these processes time savings power savings etc. may also change accordingly.

Referring back to blocks and if the answer to any of the decision processes is negative the context is read from a flash regular file system ware leveling information at block . At block a determination is made as to whether the integrity of wear leveling is good enough and secure. If not the file is recovered at block . If yes a power up of the storage device is performed with a successful restoration of its context at block .

Computing system includes bus or a link an interconnect or another type of communication device or interface to communicate information and processor coupled to bus that may process information. While computing system is illustrated with a single processor electronic system and may include multiple processors and or co processors such as one or more of central processors graphics processors and physics processors etc. Computing system may further include random access memory RAM or other dynamic storage device referred to as main memory coupled to bus and may store information and instructions that may be executed by processor . Main memory may also be used to store temporary variables or other intermediate information during execution of instructions by processor .

Computing system may also include read only memory ROM and or other storage device coupled to bus that may store static information and instructions for processor . Date storage device may be coupled to bus to store information and instructions. Date storage device such as magnetic disk or optical disc and corresponding drive may be coupled to computing system .

Computing system may also be coupled via bus to display device such as a cathode ray tube CRT liquid crystal display LCD or Organic Light Emitting Diode OLED array to display information to a user. User input device including alphanumeric and other keys may be coupled to bus to communicate information and command selections to processor . Another type of user input device is cursor control such as a mouse a trackball or cursor direction keys to communicate direction information and command selections to processor and to control cursor movement on display .

Camera and microphone arrays of computer system may be coupled to bus to observe gestures record audio and video and to receive and transmit visual and audio commands.

Computing system may further include network interface s to provide access to a network such as a local area network LAN wide area network WAN metropolitan area network MAN personal area network PAN Bluetooth an intranet the Internet etc. Network interface s may include for example a wireless network interface having antenna which may represent one or more antenna e . Network interface s may also include for example a wired network interface to communicate with remote devices via network cable which may be for example an Ethernet cable a coaxial cable a fiber optic cable a serial cable or a parallel cable.

Network interface s may provide access to a LAN for example by conforming to IEEE 802.11b and or IEEE 802.11g standards and or the wireless network interface may provide access to a personal area network for example by conforming to Bluetooth standards. Other wireless network interfaces and or protocols including previous and subsequent versions of the standards may also be supported.

In addition to or instead of communication via the wireless LAN standards network interface s may provide wireless communication using for example Time Division Multiple Access TDMA protocols Global Systems for Mobile Communications GSM protocols Code Division Multiple Access CDMA protocols and or any other type of wireless communications protocols.

Network interface s may including one or more communication interfaces such as a modem a network interface card or other well known interface devices such as those used for coupling to the Ethernet token ring or other types of physical wired or wireless attachments for purposes of providing a communication link to support a LAN or a WAN for example. In this manner the computer system may also be coupled to a number of peripheral devices clients control surfaces consoles or servers via a conventional network infrastructure including an Intranet or the Internet for example.

It is to be appreciated that a lesser or more equipped system than the example described above may be preferred for certain implementations. Therefore the configuration of computing system may vary from implementation to implementation depending upon numerous factors such as price constraints performance requirements technological improvements or other circumstances. Examples of the electronic device or computer system may include without limitation a mobile device a personal digital assistant a mobile computing device a smartphone a cellular telephone a handset a one way pager a two way pager a messaging device a computer a personal computer PC a desktop computer a laptop computer a notebook computer a handheld computer a tablet computer a server a server array or server farm a web server a network server an Internet server a work station a mini computer a main frame computer a supercomputer a network appliance a web appliance a distributed computing system multiprocessor systems processor based systems consumer electronics programmable consumer electronics television digital television set top box wireless access point base station subscriber station mobile subscriber center radio network controller router hub gateway bridge switch machine or combinations thereof.

Embodiments may be implemented as any or a combination of one or more microchips or integrated circuits interconnected using a parentboard hardwired logic software stored by a memory device and executed by a microprocessor firmware an application specific integrated circuit ASIC and or a field programmable gate array FPGA . The term logic may include by way of example software or hardware and or combinations of software and hardware.

Embodiments may be provided for example as a computer program product which may include one or more machine readable media having stored thereon machine executable instructions that when executed by one or more machines such as a computer network of computers or other electronic devices may result in the one or more machines carrying out operations in accordance with embodiments of the present invention. A machine readable medium may include but is not limited to floppy diskettes optical disks CD ROMs Compact Disc Read Only Memories and magneto optical disks ROMs RAMs EPROMs Erasable Programmable Read Only Memories EEPROMs Electrically Erasable Programmable Read Only Memories magnetic or optical cards flash memory or other type of media machine readable medium suitable for storing machine executable instructions.

Moreover embodiments may be downloaded as a computer program product wherein the program may be transferred from a remote computer e.g. a server to a requesting computer e.g. a client by way of one or more data signals embodied in and or modulated by a carrier wave or other propagation medium via a communication link e.g. a modem and or network connection . Accordingly as used herein a machine readable medium may but is not required to comprise such a carrier wave.

References to one embodiment an embodiment example embodiment various embodiments etc. indicate that the embodiment s of the invention so described may include particular features structures or characteristics but not every embodiment necessarily includes the particular features structures or characteristics. Further some embodiments may have some all or none of the features described for other embodiments.

In the following description and claims the term coupled along with its derivatives may be used. Coupled is used to indicate that two or more elements co operate or interact with each other but they may or may not have intervening physical or electrical components between them.

As used in the claims unless otherwise specified the use of the ordinal adjectives first second third etc. to describe a common element merely indicate that different instances of like elements are being referred to and are not intended to imply that the elements so described must be in a given sequence either temporally spatially in ranking or in any other manner.

The following clauses and or examples pertain to further embodiments. Specifics in the examples may be used anywhere in one or more embodiments. The various features of the different embodiments may be variously combined with some features included and others excluded to suit a variety of different applications. Some embodiments pertain to a method comprising identifying a request for power mode change at a storage device at a computing system wherein the request for power mode change indicates potential reduced power state of the storage device transferring context information at the storage device to a host memory at the computing system in response to the first command and saving the context information at the host memory wherein the storage device is at reduced power state.

Embodiments include any of the above methods further comprising identifying a power change at the storage device wherein the power change indicates powering on of the storage device wherein following the power change transferring from the host memory contents of the blob having the context back to the storage device and restoring the context information as restored context at the storage device.

Embodiments include any of the above methods further comprising generating the blob having the context wherein the context is encrypted prior to the context being transferred as the blob to the host memory.

Embodiments include any of the above methods further comprising decrypting the contents of the blob prior to them being transferred as the restored context to the storage device.

Embodiments include any of the above methods wherein the second command comprises a transfer command.

Embodiments include any of the above methods wherein the storage memory comprises a solid state drive SSD including a flash memory and wherein the host memory comprises a dynamic random access memory DRAM .

In another embodiment an apparatus comprises first logic to identify a request for power mode change at a storage device at a computing system wherein the request for power mode change indicates potential reduced power state of the storage device second logic to transfer context information at the storage device to a host memory at the computing system in response to the first command and third logic to save the context information at the host memory wherein the storage device is at reduced power state.

Embodiments include the apparatus above wherein the first logic is further to identify a power change at the storage device wherein the power change indicates powering on of the storage device wherein following the power change the second logic is further to transfer from the host memory contents of the blob having the context back to the storage device and the third logic is further to restore the context information as restored context at the storage device.

Embodiments include the apparatus above wherein the efficient path mechanism further comprises fifth logic to generate the blob having the context wherein the context is encrypted prior to the context being transferred as the blob to the host memory.

Embodiments include the apparatus above wherein the fifth logic is further to decrypt the contents of the blob prior to it being transferred as the restored context back to the storage device.

Embodiments include the apparatus above wherein the storage memory comprises a solid state drive SSD including a flash memory and wherein the host memory comprises a dynamic random access memory DRAM .

In another embodiment a system comprises a computing device having a memory to store instructions and a processing device to execute the instructions wherein the instructions cause the processing device to detect a first power change at a storage device at a computing system wherein the first power change indicates powering off of the storage device receive a first command to move context at the storage device transfer the context at the storage device to a host memory at the computing system in response to the first command wherein the context is transferred as a blob and save a blob having context at the host memory wherein the storage device is powered off.

Embodiments include the system above wherein the processing device is further to detect a second power change at the storage device wherein the second power change indicates powering on of the storage device receive a second command to move the context back to the storage device transfer from the host memory contents of the blob having the context back to the storage device and save the contents of the blob as restored context at the storage device wherein the storage device is powered on.

Embodiments include the system above wherein processing device is further to generate the blob having the context wherein the context is securely encrypted prior to the context being transferred as the blob to the host memory.

Embodiments include the system above wherein processing device is further to decrypt the contents of the blob prior to it being transferred as the restored context back to the storage device.

Embodiments include the system above wherein the storage memory comprises a solid state drive SSD including a flash memory and wherein the host memory comprises a dynamic random access memory DRAM .

In another embodiment an apparatus comprises means for performing any one or more of the operations mentioned above.

A computing device arranged to perform a method according to any one or more of the operations mentioned above.

In yet another embodiment at least one machine readable medium comprising a plurality of instructions that in response to being executed on a computing device causes the computing device to carry out a method according to any one or more of the operations mentioned above.

The drawings and the forgoing description give examples of embodiments. Those skilled in the art will appreciate that one or more of the described elements may well be combined into a single functional element. Alternatively certain elements may be split into multiple functional elements. Elements from one embodiment may be added to another embodiment. For example orders of processes described herein may be changed and are not limited to the manner described herein. Moreover the actions any flow diagram need not be implemented in the order shown nor do all of the acts necessarily need to be performed. Also those acts that are not dependent on other acts may be performed in parallel with the other acts. The scope of embodiments is by no means limited by these specific examples. Numerous variations whether explicitly given in the specification or not such as differences in structure dimension and use of material are possible. The scope of embodiments is at least as broad as given by the following claims.

