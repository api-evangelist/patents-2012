---

title: Constrained credentialed impersonation
abstract: Client impersonation is recognized by an access control service using servicer credentials to allow a servicer to impersonate a user's context while requesting actions be performed on a computing resource. A servicer may be requested to perform an action through impersonation, granting access to the context of a user related to the computing resource. The computing resource receives servicer credentials and impersonation information from the servicer. After verifying the servicer's authorization to perform actions under the context of the user, the servicer may attempt to perform the requested action. The action may be logged as performed by the servicer impersonating the user. The user may also be billed for any costs incurred.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09225744&OS=09225744&RS=09225744
owner: Amazon Technologies, Inc.
number: 09225744
owner_city: Reno
owner_country: US
publication_date: 20120501
---
Delegation can allow an entity to perform tasks on behalf of another entity. With delegation a developer may leverage the knowledge and work of another that may be more experienced in an area. In some environments a user may provide their credentials to a service to act on behalf of the user. While this allows the service to perform actions as the user it also gives the service full access to the user s account which may not be desirable. For example a user can provide a credential to a load balancing service and the load balancing service can use the credential to manage load balancing for services associated with the user as all actions are performed under the username. In other environments a service may be granted permissions to access resources owned by another. The service receives permissions required to manage the resources assigned such as through an access control list.

However tracking delegation and using delegation can be difficult. In the case of distributing a username and password all actions may appear to be performed by a user because the user s credential may be used to determine the actor logged as performing the action. In addition upon any change to the credential the credential must be redistributed to services that use the credential. For example a database administrator may give its credentials to a service for managing databases. Changes would be attributed to the database administrator credential and not the service actually using the credential. In the case of access control lists a service is granted access to a resource but the reasons for access may not be clear. For example a service may be granted access to a file by two administrators for different reasons such as logging and analytics. When the service accesses the file it may be unclear under which permission the file is accessed as the service merely has permission to access the file. In some systems delegation may not be possible. While various techniques have been employed to effectively perform delegation due to the complexity of the tasks the employed techniques are of varied success.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the subject matter being described.

Techniques described and suggested herein include using client impersonation recognized by an access control service and servicer credentials to allow a servicer to impersonate a user s context while requesting actions be performed on a computing resource. In one embodiment a servicer is requested to perform an action through impersonation granting access to the context of a user related to the computing resource. The computing resource receives servicer credentials and a claim from the servicer. After verifying the servicer s claim demonstrating authorization to perform actions under the context of the user the servicer may attempt to perform the requested action. The action may be logged as performed by the servicer impersonating the user. The user may also be billed for any costs incurred. For example a client such as a user can request an access control service to prepare impersonation credentials for a servicer to perform actions within the context of the user. The servicer may retrieve the impersonation credentials from the access control service using the servicer s credentials. The servicer may then request a computing resource perform an action using the impersonation credentials with the servicer credentials. The computing resource may perform the action in an environment as would exist if the user performed the request. The actions may be recorded in a log to indicate the request was performed in a client context with involvement of the servicer.

Impersonation that includes associating the servicer with the client request gives several advantages. By performing the action as if requested by the client or under the context of the client such as assuming the client s role and or impersonating the client the client context and environment are preserved while the servicer makes an explicit act to assume the client role. This explicit act is unlike other security measures such as an access control list where access is associated with the servicer role. The client and or service responsible for the computing resource do not need to set up a separate environment for the servicer as the request is performed in the client context. The service responsible for the computing resource also does not need to understand the relationship between the client and servicer. In fact in some embodiments the computing resource may not function differently between a client request and an impersonated request. The service responsible for the computing resource may forward the impersonated request as if the client made the request to the computing resource and record the impersonation. However the servicer may still be limited by the scope of the allowed impersonation to a subset of the context of the client. The impersonation separates the identity of the servicer from the role the servicer is assuming. For example a log may show that a service called SuperBest scaling service for the purpose of illustration acting as a hockey website administrator under a hockey website serving profile added a virtual machine using impersonation. This level of detail of who was impersonated may be improved over a log stating that SuperBest scaling service added a virtual machine such as when using an access control list . The impersonation log entry may better indicate a context of the scaling service such as the hockey website as opposed to the soccer database and who was responsible such as in this example SuperBest within the context of the hockey website administrator. By logging the request as performed in a client context through involvement of the servicer a context for the impersonation is given. In some embodiments the log may indicate the action as performed by the client at the request of the servicer. In other embodiments the log may indicate the action as performed by the servicer at the request and or authorization of the client.

When delegating by associating the servicer with the client request the history of accesses by both the client and the requestor may be known as well as the relationship between the two. In fact specific impersonation can also be traced in the case of multiple impersonations that is a single impersonator is identified in a request when two clients may have granted impersonation access to a servicer for the same resource. This logging allows for tracing an origin of impersonation in complex relationships. For example a website administrator may delegate management of virtual machines to a scaling service. The scope of authority may be management of virtual machines or a set of one or more actions falling within the scope of management of virtual machines . Actions within the scope of authority may be starting stopping adding and removing virtual machines through application programming interface API calls. The scope of authority may be identified in an access control policy. The scaling service may receive impersonation credentials from an access control service. The scaling service requests starts and stops of virtual machines e.g. provisioning and deprovisioning of virtual computer systems in the client context to react to system loads using the impersonation credentials. Each authorized stop and or start is performed as if the website administrator had requested the stop or start him or herself. Logs may describe the stops and or starts as performed by the website administrator through a request provided by the scaling service. As used herein client context is used to refer to the operational environment associated with a client.

In some embodiments a claim is used as evidence of authorization of a servicer to impersonate a client. The claim may include impersonation credentials such as a token a reference to impersonation credentials stored by an impersonation service or generated data. The claim may be provided to the servicer before impersonation is allowed. In one embodiment a servicer may prove the servicer is authorized by a client to impersonate a client by proving the servicer identity and showing a signed request signed by the client. The signed request may be from the client to the servicer requesting the servicer impersonate the client. Upon this proof the impersonation service may generate a token that includes the impersonation credentials evidencing the authorization of the servicer to impersonate the client. In other embodiments the impersonation service may provide a reference to credentials stored by the impersonation service. In another embodiment the impersonation service may provide data such as randomized data to the servicer as part of the claim. For example the data may be generated by the impersonation service sent to the client for signature and then sent to the servicer for use. In another example the data may be generated by the client signed by the client and then registered with the impersonation service and given to the servicer.

Upon receipt of a request for impersonation having a claim a service or authorization service may verify the authorization of a servicer to impersonate a client. In one embodiment an authorization service verifies the identity of the servicer. The authorization service may then verify the claim of the servicer to be authorized to impersonate the client. The authorization service may then verify the servicer has permission to perform an action while impersonating the client such as by checking an access control policy. The impersonation access control policy may be stored with the client or the servicer. The service may then perform the action and emit an audit message that an action was requested by the servicer as the client.

Turning now to an impersonation environment using credentials according to one embodiment is shown. A client through a client machine such as a desktop laptop mobile device and or server issues a request to an access control service to allow a servicer to perform a set of actions on its behalf. The actions may fall within a grant of a scope of authority in an access control policy. In many cases the scope of authority granted to the servicer is smaller than the scope of authority granted to the client . Along with the request the client may provide the identity of the servicer . If approved the client may notify the servicer that the impersonation has been granted with a message . The servicer may identify itself to the access control service with servicer credentials . The access control service may create impersonation credentials allowing the servicer to act within the context of the client within the scope of authority granted to the servicer . The servicer may contact a service and or resource and send a request that an action be performed within the scope of authority granted to the servicer . The service and or resource may receive with the request the impersonation credentials and servicer credentials . The service and or resource may verify the authorization of the servicer to send a request that the action be performed with the access control service using the impersonation credentials and servicer credentials . If authorized the servicer may perform the action in a client context as if the client requested the action. The actions may be recorded in a log to indicate the request was performed in a client context with involvement of the servicer.

In some embodiments the request is an API call. The API call may be an extended version of a normal API call in that it includes parameters for principal and impersonator where a client can be the principal and the servicer can be the impersonator. In some embodiments the API call may receive servicer credentials that are associated with a prior impersonation grant requested by a client. In one embodiment the impersonation credentials may include two credentials client credentials associated with the service providing proof of the client being authorized to access the service and client credentials associated with the access control service providing proof the servicer has been authorized to act within the context of the client. In another embodiment bearer credentials may include client credentials associated with the service and signed authorization from the access control service. In some embodiments the authorized actions may be included in the credentials. In other embodiments the authorized actions may be stored in the service and or access control service.

Turning now to an embodiment of an impersonation environment using a stored grant procedure is shown. A client through a client machine such as a desktop laptop mobile device and or server requests an access control service to allow a servicer to perform a set of actions on its behalf. The servicer may be identified by an identifier known to the access control service . The actions may fall within a grant of a scope of authority. The access control service may store the grant as associated with the servicer and an identity of the client . The client may also request the servicer perform the set of actions on the client s behalf. The servicer may contact a service and or resource and send a request that an action be performed within the scope of authority granted to the servicer . The service and or resource may receive with the request servicer credentials and a claim that includes a client identifier . The service and or resource may verify the authorization of the servicer to send a request that the action be performed with the access control service using the client identifier and servicer credentials . In some embodiments the request is also sent for authorization to perform the action. In other embodiments the grant is returned to the service and or resource to determine if the action is authorized. If authorized the servicer may perform the action using a context of a client as if the client requested the action. The actions may be recorded in a log to indicate the request was performed in a client context with involvement of the servicer .

Turning now to an impersonation environment using bearer credentials according to one embodiment is shown. A client through a client machine such as a desktop laptop mobile device and or server requests an access control service to allow a servicer to perform a set of actions on its behalf. The actions may fall within a grant of a scope of authority. Along with the request the client may provide the identity of the servicer . The access control service may provide bearer credentials such as a secure token to the client. The client may give the servicer the bearer credentials allowing the servicer to act within the context of the client within the scope of authority granted to the servicer . The servicer may contact a service and or resource and send a request that an action be performed within the scope of authority granted to the servicer . The service and or resource may receive with the request the bearer credentials and servicer credentials . The service and or resource may recognize the authorization of the servicer to send a request that the action be performed with the access control service using the bearer credentials and servicer credentials . If authorized the servicer may perform the action in a client context as if the client requested the action. The actions may be recorded in a log to indicate the request was performed in a client context with involvement of the servicer.

Bearer credentials may take several forms. In one embodiment bearer credentials are credentials having the signature of the client and or the access control service . The credentials may include access restrictions such as IP address times authorized servicers duration expiration date protocol and or other limits on time place or manner of access. In some embodiments the bearer credentials are tied to a servicer such as by being associated with a servicer in a data store.

Turning now to communication in an impersonation environment using credentials is shown in accordance with one embodiment. The method may include a setup phase a distribution phase and a use phase . During the setup phase a client may send a request for impersonation that includes a servicer identity to an access control service . The access control service may then create impersonation credentials . During the distribution phase a servicer may retrieve the impersonation credentials from the access control service by providing its servicer credentials . During the use phase a servicer may send a request to perform an action to a service and or resource within the context of the client . The request may include impersonation credentials and servicer credentials . The service and or resource may verify the credentials. The verifying may be through a message to the access control service a public key shared secret or other use of the credentials and or access control service. Once verified the service and or resource may perform the action in a client context as if the client requested the action. The actions may be recorded in a log to indicate the request was performed in a client context with involvement of the servicer .

Impersonation credentials may be created in multiple ways. In one embodiment the impersonation credential is created by the client and signed by the access control service . In another embodiment the impersonation credential is created by the service and or resource and signed by the access control service . In some embodiments a servicer requests the impersonation credential. A client will approve the servicer s request after which the impersonation credential is created by the access control service and delivered to the servicer . In some embodiments a service provider such as a program execution service provider may provide infrastructure for the servicer service access control service and or client . In one embodiment the service provider may request the impersonation credential within the context of the servicer. For example a client may select a configuration of a database from a service provider. The service provider may request a credential from the access control service to give to a database servicer to perform the client s requested setup.

Turning now to communication in an impersonation environment using a stored grant is shown in accordance with one embodiment. The method may include a setup phase a request phase and a performance phase . During the setup phase a client may send a request to an access control service that a set of actions be delegated to a servicer with a servicer identity . If approved in an embodiment the access control service will store a grant representing the impersonation of actions. During the request phase a servicer may send a request to a service and or resource to perform an action within the context of the client . The request may be accompanied by servicer credentials and a claim . In the embodiment shown servicer credentials and the claim are sent to the access control service to be verified. During the performance phase the access control service may authorize the delegated action and provide more specifics on the identity of the client if needed. In the embodiment shown the service and or resource makes the decision to allow the action as the grant is passed to the service and or resource . In other embodiments the access control service may make the decision to allow and pass it to the service and or resource . Once verified the service and or resource may perform the action in a client context as if the client requested the action. The actions may be recorded in a log to indicate the request was performed in an identified client context with involvement of the servicer.

Using a claim may help in preventing theft of an impersonation credential. An impersonation credential can be used to generate many claims which can avoid exposing the credential itself to theft. In one embodiment the servicer receives the impersonation credential and uses the impersonation credential to generate a claim . The resulting claim is presented to a system owned by a service provider. In this embodiment the servicer is the claim constructor.

Turning now to communication in an impersonation environment using bearer credentials is shown in accordance with one embodiment. The method may include a setup phase a use phase and a log phase . During the setup phase a client may send a request to an access control service to allow a servicer to perform actions within the context of the client . If approved the access control service may provide bearer credentials . In the embodiment shown the bearer credentials are returned to the client and forwarded to the servicer . In some embodiments the servicer may retrieve the bearer credentials itself. During the use phase the servicer may send a request to perform an action to a service and or resource . The request may be accompanied by the bearer credentials and servicer credentials . The service and or resource may use the bearer credentials and servicer credentials to determine if the servicer is authorized to perform the action. For example the bearer credentials may contain the grant given to the servicer . The service and or resource may verify the authenticity of the bearer credentials such as through a signature and determine the action is with a scope of delegated authority. Once verified the service and or resource may perform the action in a client context as if the client requested the action. The actions may be recorded in a log to indicate the request was performed in a client context with involvement of the servicer.

Turning now to a process that may be used to perform impersonation in accordance with at least one embodiment is shown. For example as seen in a client may delegate a scope of authority to a servicer to request actions of a service and or resource be performed within the context of the client . A service and or resource may receive a request to perform a desired action within the context of a client. The service and or resource may verify the credentials of the servicer as authorized to perform the desired action within the context of the client . Upon verification the service and or resource may perform the action using the context of the client. The actions may be recorded in a log to indicate the request was performed in a client context with involvement of the servicer . The client may be billed for usage accrued through the delegated request.

Turning now to a process that may be used to perform impersonation using credentials in accordance with at least one embodiment is shown. For example as seen in a client such as a client may delegate a scope of authority to a servicer to request actions of a service and or resource be performed within the context of the client using impersonation credentials . Some or all of the process or any other processes described herein or variations and or combinations thereof may be performed under the control of one or more computer systems configured with executable instructions and may be implemented as code e.g. executable instructions one or more computer programs or one or more applications executing collectively on one or more processors by hardware or combinations thereof. The code may be stored on a computer readable storage medium for example in the form of a computer program comprising a plurality of instructions executable by one or more processors. The computer readable storage medium may be non transitory.

The process may occur in two phases a setup phase and an execution phase . The setup phase may begin by an authorization server receiving a request for impersonation of a client by a servicer. The impersonation of the servicer as the client may be limited to a subset of actions within a scope of authority. The authorization server may provide an impersonation credential to the servicer . In the execution phase a service and or resource may receive servicer credentials and impersonation credentials from the servicer . The service and or resource may verify the action is within a scope of authority and the servicer is authorized to perform the impersonated action. Once verified the service and or resource may perform the action as if requested by the client. The actions may be recorded in a log to indicate the request was performed in a client context with involvement of the servicer.

Impersonation of tasks may be limited by all three parties to the impersonation. These may include restrictions on the access control service servicer and client. In one embodiment the access control service may be restricted from authorizing certain actions or parties by an administrator or a client. For example a website administrator may require that an impersonation of the administrator be limited to a first servicer and not be further performed by a second servicer impersonating the first servicer impersonating the website administrator. In another embodiment a servicer may be restricted in the manner in which actions are performed. For example the servicer may face access restrictions such as IP address times authorized servicers duration expiration date protocol and or other limits on time place or manner of access. In some embodiments the client may be restricted to approved impersonations including actions and servicers. For example a client may be restricted to allowing a few actions be impersonated by an untrusted third party but may allow impersonation of many actions by a service provider in control of the access control service and or the resource.

Verification of the credentials may be done in several ways. In one embodiment the impersonation credential is signed with a private key that may be verified with a public key from the access control service. In another embodiment the impersonation credential is sent to the access control service to verify authority and authenticity. In another embodiment the servicer and access control service share a secret that may be used to verify the credentials without further contact with the access control service.

The credentials may be associated with different systems. In one embodiment the servicer credential is related to the access control service. In another embodiment the servicer credential is one associated with the service and or resource. In another embodiment the impersonation credential is used to relate a servicer credential with an authorization server to a servicer credential with the service and or resource. By relating the different identities with a credential the service may trust the servicer s impersonation.

Turning now to a process that may be used to perform impersonation using a stored grant in accordance with at least one embodiment is shown. For example as seen in a client such as a customer may allow impersonation within a scope of authority by a servicer allowing the servicer to request actions of a service and or resource be performed within the context of the client using a stored grant . The process may occur in two phases a setup phase and an execution phase . The setup phase may begin by an authorization server receiving a request to allow impersonation of a client by a servicer for a task. The impersonation of the servicer by the client may be limited to a subset of actions within a scope of authority. The authorization server may store the impersonation authorization. In the execution phase a service and or resource may receive servicer credentials and a client identifier from the servicer . The service and or resource may verify with the authorization server that the action is within scope and the servicer is authorized to perform the impersonated action as stored in the impersonation authorization. Once verified the service and or resource may perform the action as if requested by the client. The actions may be recorded in a log to indicate the request was performed in a client context with involvement of the servicer.

Turning now to a process that may be used to perform impersonation using a bearer credential in accordance with at least one embodiment is shown. For example as seen in a client such as a customer may allow impersonation within a scope of authority by a servicer to allow actions of a service and or resource be performed within the context of the client using bearer credentials . The process may occur in two phases a setup phase and an execution phase . The setup phase may begin by an authorization server receiving a request for impersonation to perform a task. The impersonation allowed to the servicer by the client may be limited to a subset of actions within a scope of authority. Based on the subset of actions the authorization server may create bearer credentials. The bearer credentials may be provided to the client to distribute to the servicer. In other embodiments the bearer credentials may be distributed directly to the servicer. In the execution phase a service and or resource may receive servicer credentials and bearer credentials from the servicer . The service and or resource may verify that the action is within a scope of authority and the servicer is authorized to perform the impersonated action as described in the bearer credentials. Once verified the service and or resource may perform the action as if requested by the client. The actions may be recorded in a log to indicate the request was performed in a client context with involvement of the servicer.

It should be recognized that impersonation may occur several levels deep. For example a client may allow impersonation to perform a task by a first servicer through the impersonation processes and systems described above. The first servicer may then in turn allow impersonation of a subset of the task to a second servicer through the impersonation processes and systems described above. In some embodiments the chain of impersonation is stored in the impersonation credentials or bearer credentials. In another embodiment the chain of impersonation is stored in the access control service as part of the grant. However by allowing this impersonation actions may be performed within the context of an original client no matter the levels of impersonation. In one embodiment as each servicer does not receive its own context only a grant permissions follow the grant and the client s context. A servicer would receive any benefit of changes to the client s context.

It should also be recognized that systems described herein may include one or more computer systems. In some embodiments an authorization server servicer client service and or resource may all include one or more computing systems and or computing resources. For example an authorization server as shown in may include several virtual machines to respond to client servicer and or service resource requests.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment. The application server can include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device handling a majority of the data access and business logic for an application. The application server provides access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the Web server in the form of HTML XML or another appropriate structured language in this example. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the Web server. It should be understood that the Web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein.

The data store can include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect. For example the data store illustrated includes mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log data which can be used for reporting analysis or other such purposes. It should be understood that there can be many other aspects that may need to be stored in the data store such as for page image information and to access right information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. In one example a user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information then can be returned to the user such as in a results listing on a Web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable storage medium e.g. a hard disk random access memory read only memory etc. storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

The various embodiments further can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In embodiments utilizing a Web server the Web server can run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the a system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the various embodiments as set forth in the claims.

Other variations are within the spirit of the present disclosure. Thus while the disclosed techniques are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the scope of the claimed subject matter to the specific form or forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the various embodiments as defined in the appended claims.

The use of the terms a and an and the and similar referents in the context of describing the disclosed embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate various embodiments and does not pose a limitation on the scope of the claimed subject matter unless otherwise indicated. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Preferred embodiments of this disclosure are described herein including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for the invention to be practiced otherwise than as specifically described herein. Accordingly this invention includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the invention unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

