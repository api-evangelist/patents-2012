---

title: Visualization for resource capacity management
abstract: A method includes displaying a plurality of user modifiable utilization views of a monitored software application, where each of the plurality of user modifiable utilization views is customizable to fit a domain of analysis by identifying one or more resource types of multiple resource components. Each of the plurality of user modifiable utilization views is displayed in one more graphical user interfaces. The method includes determining a desired ordering of the one or more resource types within a hierarchy of types and filtering one or more details of the multiple resource components to create a customized view. A user can navigate between each of the plurality of user modifiable utilization views to dynamically construct related target analysis views including filtered details across one or more other domains of analysis.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08751415&OS=08751415&RS=08751415
owner: Microsoft Corporation
number: 08751415
owner_city: Redmond
owner_country: US
publication_date: 20120104
---
The present application claims priority from and is a continuation application of U.S. patent application Ser. No. 12 242 826 filed on Sep. 30 2008 and entitled EXPERT SYSTEM AND VISUALIZATION FOR MULTI SERVER CAPACITY MANAGEMENT the contents of which are expressly incorporated herein by reference in their entirety.

Software applications are typically managed independently from the computer system hardware and on which they depend. In addition multiple software applications may share software and hardware resources. The lack of integrated management tools across software applications operating systems and computer system hardware commonly results in several problems. For example hardware is often over provisioned to mitigate possible capacity bottlenecks resulting in wasted hardware resources. The serviceability and predictability of software applications may be negatively affected by unexpected capacity bottlenecks in the underlying software and hardware. Further still lack of integrated management tools may result in an inability to understand the required adjustments to capacity related items.

The present disclosure describes a visualization technique which represents the relationship of software applications to the individual operating system and hardware capacity utilized over varying time intervals. For example the visualization technique can display the relationship between hardware capacity utilization rates and software application components such as files storage volumes and physical storage devices application components such as files storage volumes and physical storage devices from a single user interface. The capacity of the software application optionally also displays visualizations which include software based hardware utilization restrictions that are imposed by the software applications. An example of a software based hardware restriction is a resource governing rule that limits the CPU resources accessible to the software application or limits the space available to a file which is utilized by the software application. The invention presents software based hardware utilization restrictions as an allocated subset within the larger less restrictive total capacity available on the hardware resource. Utilization targets are captured through rules policies and best practices. The visualization technique highlights the violations of the utilization rules policies and best practices and generates one or more actions which serve to rectify the violations by changing the relationship between the application software and the hardware. The structure of the visualization can be modified to fit a particular domain of capacity analysis by restricting the particular hardware and software components displayed and changing the manner in which utilization statistics are aggregated.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

In a particular embodiment a system is disclosed that includes an interface to receive a resource governance rule applicable to one or more hardware resources supporting a monitored software application. The system includes utilization logic to measure usage of a particular hardware resource by the monitored software application. An available utilization of the particular hardware resource is determined based on the resource governance rule and a total utilization of the particular hardware. One or more utilization metrics are determined based on a historical usage of the particular hardware resource as compared to a governed capacity and a non governed capacity available to the particular hardware resource. The system also includes recommendation logic to determine a recommended action to be taken with respect to the monitored software application based on one or more rules.

In another particular embodiment a method is disclosed that includes identifying consumers of a resource. Usage of the resource by each consumer of the resource is monitored. A total utilization of the resource by each of the consumers is determined based on a model of the resource and of a computer system. A resource governed utilization of the resource by each of the consumers is determined based on the model of the resource and of the computer system. The method also includes displaying the total utilization of the resource and the resource governed utilization of the resource for each of the consumers of the resource in a single view.

In another particular embodiment a method of displaying a plurality of user modifiable utilization views of a monitored software application is disclosed. Each of the plurality of user modifiable utilization views are customizable to fit a domain of analysis. The views may be customized by identifying one or more resource types of multiple resource components determining a desired ordering of the one or more resource types within a hierarchy of types and filtering one or more details of the multiple resource components to create a customized view. Each of the plurality of user modifiable utilization views are displayed in one or more graphical user interfaces. A user can navigate between each of the plurality of user modifiable utilization views to dynamically construct related target analysis views including filtered details across one or more other domains of analysis.

Referring to a view of a first particular embodiment of a system that measures and displays resource capacity is illustrated. The system includes a system analyzer that includes an interface utilization logic and recommendation and prediction logic . The interface is adapted to receive a resource governance rule applicable to one or more hardware resources supporting a monitored software application. The system analyzer communicates with a computer system via the interface and communicates with a user interface via a display interface .

The interface receives a resource governance rule applicable to one or more hardware resources supporting a monitored software application . The utilization logic measures usage of a particular hardware resource by the monitored software application . The utilization logic determines an available utilization of the particular hardware resource based on the resource governance rule and determines a total utilization of the particular hardware resource. The utilization logic determines one or more utilization metrics based on a historical usage of the particular hardware resource as compared to a governed capacity available to the particular hardware resource and a non governed capacity available to the particular hardware resource.

In a particular embodiment the resource governance rule allocates a limited amount of processor capacity to the software application . In another particular embodiment the software application is allocated a first percentage usage of a processor and the allocated utilization metric is determined by calculating a percentage of the processor that is used by the software application. For example referring to the software application may be allocated a percentage of the processor of computer system .

The resource governed utilization may include a Microsoft SQL Server utilization after taking into account software based restrictions on the amount of hardware available to a Microsoft SQL Server instance. For example in the case of central processing unit CPU measurement the resource governance rule may restrict CPU capacity available to the Microsoft SQL Server instance to a subset of the total CPU capacity via several means. For example the number of CPUs available may be reduced via Microsoft SQL Server CPU affinity settings or using operating environments such as virtual machines VMs that reduce the number of CPUs available to Microsoft SQL Server. Alternatively the resource governance rule may restrict CPU capacity available to the Microsoft SQL Server instance to a subset of total capacity by running Microsoft SQL Server with Microsoft Windows or Microsoft SQL Server resource governing the CPU capacity to restrict the amount of the physical CPU that can be allocated to Microsoft SQL Server during periods of high load. If Microsoft SQL Server is allocated one CPU and the computer contains two CPUs then the measurement of allocated CPU capacity may be calculated as a percentage of the one CPU that is used by Microsoft SQL Server. Similarly as an example if resource governing restricts the total CPU utilization of Microsoft SQL Server to 50 on a computer and Microsoft SQL Server runs on only one processor at a time then the measurement of allocated CPU capacity may be calculated as a percentage of one CPU that is used by Microsoft SQL Server when the system overall is experiencing 100 CPU utilization.

The recommendation and prediction logic determines a recommended action to be taken with respect to the monitored software application based on one or more rules. For example the one or more rules may include one or more deployment configuration constraints and one or more resource allocation best practices. The one or more rules may be defined by the system or may be definable or modifiable by a user. In a particular embodiment the recommended action includes re allocating hardware resources of the computer system . In another particular embodiment the recommended action includes moving the software application and files associated with the software application to a second computer system e.g. a computer system other than the computer system of .

In a particular embodiment the recommendation and prediction logic estimates a predicted impact of executing the recommended action . The user interface may display a predicted utilization view of related hardware resources and software applications of the computer system based on the predicted impact of executing the recommended action . The predicted impact of executing the recommended action may allow an administrator to decide whether to execute the recommended action . For example if the administrator considers the predicted impact unacceptable the administrator may choose not to execute the recommended action . If the administrator determines that the predicted impact is acceptable the administrator may choose to execute the recommended action .

In a particular embodiment the user interface displays the one or more utilization metrics and the recommended action . The user interface may include a graphical user interface or a command line interface. The one or more utilization metrics may include a resource governed utilization of a particular hardware resource and the user interface may display the resource governed utilization of the particular hardware resource. The user interface may further display a contribution of each of one or more consumers of the particular hardware resource relative to the total utilization of the particular hardware resource and the resource governed utilization of the particular hardware resource. The one or more utilization metrics may be determined periodically and displayed periodically at the user interface . In another particular embodiment the utilization logic detects a usage of the monitored software application that approaches a hardware resource limit before the usage exceeds the hardware resource limit and the recommendation and prediction logic automatically executes the recommended action before the usage exceeds the hardware resource limit. For example automatically executing the recommended action may include automatically re allocating hardware resources of the computer system e.g. a first computer system and or automatically moving the software application and files associated with the software application to a second computer system. As shown in the recommendation and prediction logic may automatically execute the recommended action by communicating with an operating system of the computer system .

In one embodiment the computing system includes a set of storage elements available for use by a software application of the computer system . In a particular embodiment the software application includes an operating system file residing on an operating system volume and the volume is constrained to a predetermined number of input output storage accesses per second. In the particular embodiment shown in the computer system also includes Application Programming Interfaces APIs operating system a database manager one or more processors and a storage array .

Referring to a view of a graphical user interface is illustrated at . The graphical user interface displays an example of a recommended action . In one embodiment the graphical user interface of is the user interface of . In one embodiment the recommended action displayed in is the recommended action determined in . In a user is presented with a user interface that displays an option of automatically executing the recommended action . Alternatively the recommended action may be executed automatically without user input. In one embodiment the recommended action may be automatically executed by a computing system e.g. computer system in . In the user is also presented with a user interface that displays an option of estimating a predicted impact of executing the recommended action . For example upon selection the user may be presented with a predicted utilization view of related hardware resources and software applications of the system based on the predicted impact of executing the recommended action .

In a particular embodiment the recommended action includes re allocating hardware resources of a computer system. In alternative embodiments the recommended action may include moving a software application and files associated with the software application to a second computer system. In another particular embodiment a usage of the monitored software application that approaches a hardware resource limit is detected before the usage exceeds the hardware resource limit. The recommended action is automatically executed before the usage exceeds the hardware resource limit.

Referring to a flow diagram to illustrate a first particular embodiment of a method of determining a resource governed utilization of a resource is illustrated.

At the method includes identifying consumers of a resource. The consumers of the resource may be one or more applications e.g. software applications such as database applications . The resource may include a processor device a memory device a storage device or network device. At the method includes monitoring usage of the resource by each of the consumers of the resource. The method includes determining a total utilization of the resource by each of the consumers of the resource based on a model of the resource and of a computer system at . The method includes determining a resource governed utilization of the resource by each of the consumers of the resource based on the model of the resource and of the computer system at .

In one embodiment the resource governed utilization is a Microsoft SQL Server utilization after taking into account any software based restrictions on the amount of hardware available to an Microsoft SQL Server instance. For example in the case of central processing unit CPU measurement the resource governance rule may restrict CPU capacity available to the Microsoft SQL Server instance to a subset of the total CPU capacity via several means. For example the number of CPUs available may be reduced via Microsoft SQL Server CPU affinity settings or using operating environments such as virtual machines VMs which reduce the number of CPUs available to Microsoft SQL Server. Alternatively the resource governance rule may restrict CPU capacity available to the Microsoft SQL Server instance to a subset of total capacity by running Microsoft SQL Server with Microsoft Windows or Microsoft SQL Server resource governing CPU capacity to restrict the amount of the physical CPU which can be allocated to Microsoft SQL Server during periods of high load. If Microsoft SQL Server is allocated one CPU and the computer contains two CPUs then the measurement of allocated CPU capacity may be calculated as a percentage of the one CPU that is used by Microsoft SQL Server. Similarly as an example if resource governing restricts the total CPU utilization of Microsoft SQL Server to 50 on a computer and Microsoft SQL Server runs on only one processor at a time then the measurement of allocated CPU capacity may be calculated as a percentage of one CPU that is used by Microsoft SQL Server when the system overall is experiencing 100 CPU utilization.

At the method further includes displaying the total utilization of the resource and the resource governed utilization of the resource for each of the consumers of the resource in a single view. In a particular embodiment the method further includes determining a recommended action to be taken with respect to a particular resource in response to the resource governed utilization and the total utilization of the particular resource and determining a predicted impact of executing the recommended action on one or more elements of the computer system at . At in another particular embodiment the method further includes displaying a modified total utilization of the particular resource and a modified resource governed utilization of the particular resource for each of the consumers of the particular resource in the single view and displaying information that illustrates the predicted impact on the one or more elements of the computer system. The method ends at .

Referring to a method of displaying a plurality of user modifiable utilization views of a monitored software application is illustrated. Each of the plurality of user modifiable utilization views are customizable to fit a domain of analysis. For example each of the views may be customized by identifying one or more resource types of multiple resource components determining a desired ordering of the one or more resource types within a hierarchy of types and filtering one or more details of the multiple resource components to create a customized view. Each of the plurality of user modifiable utilization views are displayed in one or more graphical user interfaces. A user can navigate between each of the plurality of user modifiable utilization views to dynamically construct related target analysis views including filtered details across one or more other domains of analysis. For example a user can initially view a utilization metric of a particular software application in the hardware capacity utilization view as shown in . Upon selection or other input the user can obtain further detailed information on the particular software application such as by accessing a filtered and customized detailed view based on further information related to performance of the software application. For example a user can select or construct a view of database instances that support the particular software application so that the user can view information related to the particular software application in a different domain e.g. the database instance domain as shown in . Another exemplary domain is the network bandwidth domain as shown in . Accordingly a dynamic presentation of utilization information is customized and may be presented across various domains of analysis for visualization.

In a particular embodiment the user modifiable utilization views are provided by a user interface that allows new elements or properties to be added to an extensible fabric meta data model without requiring changes to fabric program executable code associated with the extensible fabric meta data model. In another particular embodiment the user modifiable utilization views are provided by a user interface that presents fabric actions of an extensible fabric meta data model and that allows new custom executable program code to be launched to operate on elements of the extensible fabric meta data model without requiring changes to the fabric program executable code. In another particular embodiment the user modifiable utilization views are provided by a user interface that presents a fabric dashboard that allows one or more new summaries of fabric elements of an extensible fabric meta data model to be presented without requiring changes to the fabric program executable code. Thus an extensible fabric meta data model may be used to support various visualization features.

In the particular embodiment illustrated in the method includes displaying a first view including first hardware capacity utilization information related to first hardware resource components supporting the monitored software application at . For example the first hardware capacity utilization information displayed may include processor utilization metrics storage I O capacity utilization metrics storage space utilization metrics and network bandwidth utilization metrics. In the particular embodiment illustrated in the method also includes displaying a second view including second hardware capacity utilization information related to second hardware resource components supporting one or more computers or database instances at . In the particular embodiment illustrated in the method also includes displaying a third view including third hardware capacity utilization information related to third hardware resource components supporting one or more computers database instances operating system volumes groups of database files or files as shown at . In the particular embodiment illustrated in the method also includes displaying a fourth view including fourth hardware capacity utilization information related to fourth hardware resource components supporting one or more computers or computer network interfaces as shown at .

In the particular embodiment illustrated in at the method also includes automatically recalculating a spatial aggregation of utilization statistics to populate the customized view after hierarchical relationships between hardware resource components are reordered as shown at . The method ends at .

In another particular embodiment the first view the second view the third view and the fourth view are displayed in one or more graphical user interfaces. Examples of the first view the second view the third view and the fourth view are illustrated in as described below.

Referring to a particular illustrative embodiment of a first view displays hardware capacity utilization information related to hardware resource components supporting a database application.

In a particular embodiment the first view includes a first graphical user interface that includes a database application visualization. The database application visualization includes a first field that shows a database application . For example the database application in is named HeadTrax with an associated connection name of the same name. The first view also includes a second field that shows one or more total hardware capacity utilization metrics of the database application . For example in the first view includes a first total hardware capacity utilization metric and a second total hardware capacity utilization metric . For example the first total hardware capacity utilization metric in is a total CPU utilization metric. As a further example the second total hardware capacity utilization metric in is a total memory utilization metric. The first view also includes a third field that shows one or more allocated hardware capacity utilization metrics of the database application. For example in the first view includes a first allocated hardware capacity utilization metric and a second allocated hardware capacity utilization metric are shown. For example the first allocated hardware capacity utilization metric in is an allocated CPU utilization metric. As a further example the second allocated hardware capacity utilization metric is an allocated memory utilization metric.

In alternative embodiments the hardware capacity utilization information may include storage I O capacity utilization metrics storage space utilization metrics and network bandwidth utilization metrics.

Referring to a particular illustrative embodiment of a second view displays hardware capacity utilization information related to hardware resource components supporting one or more computers or database instances.

In a particular embodiment the second view includes a second graphical user interface that includes a first field that shows a computer . For example the computer in is named SQLGECKO03 . The second view also includes a second field that shows one or more Microsoft SQL Server instances. In the embodiment shown in the second field shows a first Microsoft SQL Server instance and a second Microsoft SQL Server instance . For example in the first Microsoft SQL Server instance is named GASPRA and the second Microsoft SQL Server instance is named MARS . The second view also includes a third field that shows one or more total hardware capacity utilization metrics of the computer and the one or more Microsoft SQL Server instances. For example in the second view includes a total hardware capacity utilization metric and a second total hardware capacity utilization metric . For example the first total hardware capacity utilization metric in is a total CPU utilization metric. As a further example the second total hardware capacity utilization metric in is a total memory utilization metric.

The second view also includes a fourth field that shows one or more allocated hardware capacity utilization metrics of the computer and the one or more Microsoft SQL Server instances. In the embodiment shown in the fourth field shows an allocated hardware capacity utilization metric and an allocated hardware capacity utilization metric . For example the first allocated hardware capacity utilization metric is an allocated CPU utilization metric. As a further example the second allocated hardware capacity utilization metric is an allocated memory utilization metric.

In a particular embodiment a user can switch between the first view the second view the third view and the fourth view. For example the user can switch between the first view of and the second view of by clicking on a viewpoint tab as in . Further the user may change the view of the hardware capacity utilization information displayed by clicking on the viewpoint tab . For example hardware capacity utilization information may include processor utilization metrics storage I O capacity utilization metrics storage space utilization metrics and network bandwidth utilization metrics.

Referring to a particular illustrative embodiment of a third view displays hardware capacity utilization information related to hardware resource components supporting one or more database instances operating system volumes Microsoft SQL Server filegroups or files.

In a particular embodiment the third view includes a third graphical user interface that includes a first field that shows one or more storage components. For example the third view displays information for a first storage component and for a second storage component . The first storage component is named C and the second storage component is named D . The third view also includes a second field that shows a Microsoft SQL Server instance . For example in the Microsoft SQL Server instance is named SQLGECKO05 . The third view also includes a third field that shows one or more database applications including one or more Microsoft SQL Server instances Microsoft SQL Server databases Microsoft SQL Server filegroups or Microsoft SQL Server files. For example the third view displays information for a first Microsoft SQL Server database and for a second Microsoft SQL Server database . The first Microsoft SQL Server database is named tempdb and the second Microsoft SQL Server database is named RAD . As a further example information for a first Microsoft SQL Server filegroup is shown. The first Microsoft SQL Server filegroup is named PRIMARY . As another example a first Microsoft SQL Server file named RAD.mdf is also shown.

The third view also includes a fourth field that shows one or more total hardware capacity utilization metrics of the one or more Microsoft SQL Server instances Microsoft SQL Server databases Microsoft SQL Server filegroups and Microsoft SQL Server files. For example in the third view shows a first total hardware capacity utilization metric and a second total hardware capacity utilization metric . For example the first total hardware capacity utilization metric in is a total space utilization metric. As a further example the second total hardware capacity utilization metric in is a total storage I O utilization metric. The third view also includes a fifth field that shows one or more allocated hardware capacity utilization metrics of the one or more Microsoft SQL Server instances Microsoft SQL Server databases Microsoft SQL Server filegroups and Microsoft SQL Server files. For example the third view shows a first allocated hardware capacity utilization metric . In the embodiment shown in the first allocated hardware capacity utilization metric is an allocated space utilization metric.

The third view as well as other views display capacity utilization based on models of the underlying components. The views may be created and customized dynamically. In a particular embodiment the first view the second view the third view and the fourth view are customizable to fit a particular domain of analysis by changing one or more of types ordering and filtering of hardware resource components displayed. For example in the third view in the tree hierarchy extends from the first Microsoft SQL Server instance to the second Microsoft SQL Server database to the first Microsoft SQL Server filegroup to the first Microsoft SQL Server file . As an example a user may alter the third view to display Microsoft SQL Server instances to Windows drives e.g. first Microsoft SQL Server instance to first storage component and second storage component for drives that are using more than 90 of the available space.

Referring to a particular illustrative embodiment of a fourth view displays information including hardware capacity utilization information related to hardware resource components supporting one or more Microsoft SQL Server instances or computer network interfaces.

In a particular embodiment the fourth view includes a fourth graphical user interface that includes a first field that shows one or more computers. For example the fourth view shows a first computer a second computer and a third computer . The first computer is named SQLGECKO03 the second computer is named SQLGECKO04 and the third computer is named SQLGECKO05 . The fourth view also includes a second field that shows one or more network components. For example the fourth view shows a first network component a second network component and a third network component related to the first computer . Further the fourth view shows a fourth network component a fifth network component and a sixth network component that are related to the second computer . Further the fourth view shows a seventh network component an eighth network component and a ninth network component that are related to the third computer .

As show in the fourth view of for example the first network component and the second network component are computer network interface adapters associated with first computer . As a further example the third network component is a TCP loopback interface associated with first computer . The fourth network component and the fifth network component are virtual machine network services drives associated with the second computer . The sixth network component is a transmission control protocol TCP loopback interface associated with the second computer . The seventh network component and eighth network component are virtual machine network services drivers associated with the third computer . The ninth network component is a TCP loopback interface associated with the third computer .

The fourth view also includes a third field that shows one or more network bandwidth utilization metrics of the one or more computers and the one or more network components. In the embodiment shown in the third field shows a first total network bandwidth utilization metric .

In a particular embodiment the first view the second view the third view and the fourth view are customizable to fit a particular domain of analysis by changing one or more of types ordering and filtering of hardware resource components displayed. For example referring to a user may click on a first icon to change the types or ordering of hardware resource components displayed. As shown by the first icon a current ordering shown in includes a default ordering. As another example a user may click on a second icon to filter the hardware resource components displayed.

Those of skill would further appreciate that the various illustrative logical blocks configurations modules circuits and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks configurations modules circuits or steps have been described generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present disclosure.

The steps of a method described in connection with the embodiments disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in computer readable media such as random access memory RAM flash memory read only memory ROM registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor or the processor and the storage medium may reside as discrete components in a computing device or computer system.

Although specific embodiments have been illustrated and described herein it should be appreciated that any subsequent arrangement designed to achieve the same or similar purpose may be substituted for the specific embodiments shown. This disclosure is intended to cover any and all subsequent adaptations or variations of various embodiments.

The Abstract of the Disclosure is provided with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description various features may be grouped together or described in a single embodiment for the purpose of streamlining the disclosure. This disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter may be directed to less than all of the features of any of the disclosed embodiments.

The previous description of the disclosed embodiments is provided to enable any person skilled in the art to make or use the disclosed embodiments. Various modifications to these embodiments will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other embodiments without departing from the scope of the disclosure. Thus the present disclosure is not intended to be limited to the embodiments shown herein but is to be accorded the widest scope possible consistent with the principles and novel features as defined by the following claims.

