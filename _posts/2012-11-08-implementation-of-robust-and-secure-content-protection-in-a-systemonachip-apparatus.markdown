---

title: Implementation of robust and secure content protection in a system-on-a-chip apparatus
abstract: A content processing integrated circuit includes a system-on-a-chip (SoC) that further includes a processor to receive an authentication request from an external device for authenticating if the SoC is permitted to receive encrypted content from the external device, and to receive the encrypted content once the SoC is authenticated. An authentication processor is provided and coupled to the processor to authenticate the SoC to the external device when the processor receives the authentication request, and to generate a decryption key for decrypting the encrypted content. A decryption processor is provided and coupled to the processor and the authentication processor to receive the decryption key from the authentication processor and to decrypt the encrypted content with the decryption key. A wireless display system with such SoC is also described. A method of implementing a secure and robust content protection in a SoC is also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08856515&OS=08856515&RS=08856515
owner: Intel Corporation
number: 08856515
owner_city: Santa Clara
owner_country: US
publication_date: 20121108
---
Embodiments of the present disclosure relate to secure content delivery and display. More specifically embodiments of the present disclosure relate to an improved implementation of robust and secure content protection in a system on a chip apparatus.

As is known media content access by content users is changing from opportunistic access to on demand access. On demand media content as well as some standard media content is often delivered by streaming the content to a multimedia receiving platform such as a set top box a smart phone a computer tablet a laptop computer or the like for content display. If the multimedia content is premium content the multimedia content is often protected in some manner during transmission to the multimedia receiving platform. For example various Digital Rights Management DRM and Conditional Access CA technologies may be used to provide protection for the media content from the media source to the multimedia receiving platform. Such technologies generally involve encryption of the content media.

A system on a chip SoC device is an integrated circuit that incorporates various components of electronic systems on a single die or substrate. For example a SoC integrated circuit may include a processor core memory video components audio components and or communication components on a single chip. Due to their relatively small size SoCs are used in many multimedia receiving platforms.

In the following description for purposes of explanation specific nomenclature is set forth to provide a thorough understanding of embodiments of the present disclosure. It will be apparent to one skilled in the art that specific details in the description may not be required to practice the embodiments. In other instances well known circuits devices and programs are shown in block diagram form to avoid obscuring embodiments of the present disclosure unnecessarily.

Prior to the wireless display system various Digital Rights Management DRM and Conditional Access CA technologies have been used to provide protection for the media content from the media source to the media receiving devices. High bandwidth Digital Content Protection HDCP is one such technology offered by Digital Content Protection LLC. The technology is developed to prevent copying of digital audio and video content as the content travels across connections. These connections include Digital Visual Interface DVI and High Definition Multimedia Interface HDMI .

One of the functions of the HDCP protocol is to authenticate receiving devices and generate or exchange decryption keys for the receiving devices during authentication. If the receiving device is authenticated as authorized to receive HDCP encrypted content the corresponding transmitter encrypts the content data to prevent eavesdropping as the content data travel to the receiving device. The receiving device then decrypts the encrypted content data using the decryption key generated or exchanged.

One prior way of implementing the HDCP authentication and key exchange functions is in software form running on a processor of the receiving device. One problem associated with this prior approach is that the keys are not secure and easy to be discovered or hacked by malware or spyware. This is due to the fact that the keys are stored at software level and need to be accessible to various software codes and the underlying operating system running on the processor which makes it possible for unauthorized access to these keys via malware or spyware.

In addition the decryption key once generated in the authentication processor is not sent to the processor of the media engine . Instead the decryption key is stored in a processor register i.e. register of the authentication processor and is shared with the decryption processor via backdoor key loading. According to an embodiment of the disclosure the backdoor key loading technique refers to a procedure where two components or processors securely sharing secret information via hardware level registers that are shared between the two components or processors. In the present embodiment the authentication processor and the decryption processor share processor register e.g. register of the authentication processor which provides a secure channel for sharing the secret decryption key between the two processors. In other words the description processor has access to the processor register e.g. the register of the authentication processor that stores the secret and decrypted decryption key.

One advantage of the above described implementation is that by employing the authentication processor instead of the processor none of the software code running on the processor can have access to the authentication process thus making the authentication and decryption key exchange process robust and secure.

Another advantage of the above described implementation is that the decryption key is not exposed to any software code running on the processor as the key is not received in the processor thus avoiding the possibility of being hacked or accessed via malware or spyware running in the media engine . This provides secure and robust content protection for the SoC receiver integrated circuit as well as the wireless display system of . The wireless display system and the SoC receiver integrated circuit will be described in more detail below also in conjunction with .

The term content media content or multimedia content refers to a combination of text audio still image animation video and or interactive content.

The term wireless wirelessly or wireless communication refers to the electronic transfer of information between two or more points that are not physically connected.

The term display refers to content rendering and is not limited to visual displaying or rendering. It can refer to displaying of or visual rendering of video or audio content. It can also refer to rendering audio content via a speaker or an earphone.

The term SoC system on a chip refers to an integrated circuit that incorporates various components of electronic systems on a single die or substrate. For example a SoC may include one or more processors memories microprocessors microcontrollers video components audio components and or communication components on a single chip.

The term processor refers to a data processing circuit that can be a microprocessor a co processor a microcontroller a microcomputer a central processing unit a field programmable gate array FPGA a programmable logic circuit and or any circuit that manipulates signals analog or digital based on operational instructions that are stored in a memory.

The term memory refers to a storage circuit or multiple storage circuits such as read only memory random access memory volatile memory non volatile memory static memory dynamic memory flash memory cache memory and or any circuit that stores digital information.

In general schematic elements used to represent instruction blocks may be implemented using any suitable form of machine readable instruction such as software or firmware applications programs functions modules routines processes procedures plug ins applets widgets code fragments and or others and that each such instruction may be implemented using any suitable programming language library application programming interface API and or other software development tools. For example some embodiments may be implemented using Java C and or other programming languages. Similarly schematic elements used to represent data or information may be implemented using any suitable electronic arrangement or structure such as a register data store table record array index hash map tree list graph file of any file type folder directory database and or others.

Further in the drawings where connecting elements such as solid or dashed lines or arrows are used to illustrate a connection relationship or association between or among two or more other schematic elements the absence of any such connecting elements is not meant to imply that no connection relationship or association can exist. In other words some connections relationships or associations between elements may not be shown in the drawings so as not to obscure the disclosure. In addition for ease of illustration a single connecting element may be used to represent multiple connections relationships or associations between elements. For example where a connecting element represents a communication of signals data or instructions it should be understood by those skilled in the art that such element may represent one or multiple signal paths e.g. a bus as may be needed to effect the communication.

Referring to the wireless display system is employed to transmit content from the content source device to a content rendering system of the wireless display system for content rendering. The content can be a combination of text audio still image animation video and or interactive content. The content rendering system is connected to the wireless receiver via wire connection. The content rendering system includes a display and an audio rendering device . The display can be a television TV display a high definition TV HDTV display a computer monitor or display or a projection display. The audio rendering device can be one or more speakers and or earphones including headsets .

The content source device can be a smartphone a tablet computer a laptop computer a desktop computer a mobile Internet device a set top box or other devices capable of generating or delivering media content. The content source device may include a content generator such as a DVD player or may obtain the media content from a remote source on demand via Internet.

The content source device includes a wireless transmitter . The wireless transmitter is used to transmit media content from the content source device to the rendering system via the wireless receiver . The wireless transmitter communicates with the wireless receiver using the same wireless communication protocol. The wireless communication technology or protocol employed can be Bluetooth also known as IEEE 802.15.1 standard Wi Fi also known as IEEE 802.11 standard HomeRF Home Radio Frequency standard Infrared ZigBee also known as IEEE 802.15.4 standard . The content source device including the transmitter can be implemented using known means. Thus their structure and operation will not be described in more detail below.

The wireless receiver may be embodied in a set top box a smartphone a smart display a tablet computer a laptop computer a desktop computer a mobile Internet device or other device capable of delivering media content. The wireless receiver may be configured to deliver any type of media content including for example movies pictures images songs audio and or video recordings and or any other type of audio video and or audio and video content.

The wireless network is a wireless personal area network WPAN according to one embodiment of the present disclosure. In another embodiment the wireless network is a wireless local area network. In a further embodiment the wireless network can be a combination of wired and wireless networks.

Moreover the wireless display system may include one or more repeaters not shown in . A repeater includes a transmitter circuit like the transmitter and a receiver circuit like the receiver combined together. It functions as a communication relay station between the transmitter and the receiver .

In the wireless display system is shown to have its content source device communicate wirelessly with its wireless receiver through the wireless network . This implements one embodiment of the present disclosure. However the display system is not limited to this wireless implementation. For example the communication between the content source device and the receiver can be a wired network or a combination of wired and wireless networks.

In accordance with one embodiment of the present disclosure the media content transmitted between the transmitter and the receiver is protected or encrypted. One protocol or standard for such content protection or encryption is the High bandwidth Digital Content Protection HDCP standard. The HDCP standard has many versions including HDCP 1.0 version and HDCP 2.0 version. As described above HDCP is a content protection protocol that is used to protect media content.

In one embodiment the HDCP content protection protocol utilizes cryptographic techniques in accordance with the Advanced Encryption Standard AES which describes a symmetric encryption technique also known as Rijndael algorithm that can encrypt encipher and decrypt decipher information. A detailed description of the AES can be found in the Federal Information Processing Standards Publication 197 FIPS PUB 197 dated Nov. 26 2001. In another embodiment the HDCP content protection protocol utilizes asymmetric cryptographic techniques.

Many modes of operations may be employed for the AES encryption and decryption operation. Modes of operation include Electronic Code Book ECB Cipher Block Chaining CBC Output Feedback OFB Counter and Cipher Feedback CFB that provide confidentiality for messages of arbitrary length. Other modes of operation such as Counter with Cipher Block Chaining Message Authentication Code CCM Galois Counter Mode GCM and Offset Codebook Mode OCB ensure both confidentiality and message integrity.

According to one embodiment of the present disclosure the SoC circuit implementation of the receiver provides a secure and robust authentication and content decryption for the content transmitted in the wireless display system . The structure and operation of the receiver will be described in more detail below also in conjunction with .

In and as described above the wireless SoC receiver integrated circuit may implement the wireless receiver of according to an exemplary embodiment of the present disclosure. As shown in the wireless SoC receiver integrated circuit includes the media engine the authentication processor and the decryption processor according to an exemplary embodiment of the present disclosure. The media engine includes the processor and the memory . The processor functions as the main processor of the wireless SoC receiver integrated circuit while the memory stores software program codes that are executed on the processor . The memory may have a storage area that can be accessed by the authentication processor and or the decryption processor . Other processors of the wireless SoC receiver integrated circuit may function as co processors mini processors or microcontrollers of the processor . In one embodiment components of the wireless SoC receiver integrated circuit reside on the same substrate or within the same chip.

In one embodiment the processor is a central processing unit CPU like microprocessor. In another embodiment the processor is a simple data processing unit. The communication between the processor and other processors like processors and is done using an inter processor call communication protocol. The structure and function of the processor may be implemented using known technology.

The wireless SoC receiver integrated circuit includes a communication module that implements communication protocols to effect the wireless communication of the wireless SoC receiver integrated circuit with external devices. The communication protocols implemented may include TCP IP Transmission Control Protocol Internet Protocol UDP IP User Datagram ProtocoVInternet Protocol RTSP Real Time Streaming Protocol RTP Real time Transport Protocol and MPEG TS Motion Picture Experts Group Transport Stream . The wireless communication technology employed can be Bluetooth Wi Fi HomeRF Infrared and ZigBee. The structure and functions of the communication module may be implemented using known technologies.

The wireless SoC receiver integrated circuit also includes an audio module and a video module . The audio module is employed to process audio content data and send the processed data to an external rendering device. The video module is employed to process video content data and send it to an external rendering device. The structure and functions of these two modules are known and will not be described in more detail below.

All modules components or functional blocks within the wireless SoC receiver integrated circuit are connected together via a communication link . The communication link can be simply referred to as a link . In one embodiment the link is a simple common bus that is provided to pass data information and or instructions among all the modules or components of the wireless SoC receiver integrated circuit . In another embodiment the link collectively represents various dedicated communication links or buses between any two components of the wireless SoC receiver integrated circuit . In this case any pair of components within the wireless SoC receiver integrated circuit has a dedicated communication link or connection and the link represents them all collectively. The link can be implemented using any known bus technology or can simply be electrical connection wires.

According to one embodiment of the present disclosure the media engine i.e. the processor does not perform the device authentication and decryption key generation or exchange functions. It also does not perform the content decryption operation for the content received in the wireless SoC receiver integrated circuit . Instead these device authentication and decryption key generation or exchange functions are delegated to the authentication processor and the content decryption function is delegated to the decryption processor .

In addition the decryption key once generated in the authentication processor is not sent to or accessible by the processor of the media engine . Instead the decryption key is stored in a processor register i.e. register and is shared only by the decryption processor via backdoor key loading. As described above the backdoor key loading technique refers to a procedure where two components or processors securely sharing secret information via hardware level registers that are shared between the components or processors. In the embodiment of the SoC the authentication processor and the decryption processor share processor register e.g. register of the authentication processor which provides a secure channel for sharing the secret decryption key between the two processors. In other words the description processor has access to the processor register e.g. the register of the authentication processor that stores the secret and decrypted decryption key. This prevents the decryption key from being exposed to any software code running on the processor as the key is not received by the processor . This reduces the possibility of being hacked or accessed via malware or spyware running in the media engine . This provides secure and robust content protection for the SoC receiver integrated circuit and thus the wireless display system of .

The security engine processor may be embodied as a security co processor or processing circuitry separate from the main processor of the SoC e.g. the SoC of . In one embodiment the security engine processor is a co processor a microcontroller a microcomputer and or any circuit that manipulates signals analog or digital based on operational instructions that are stored in a memory. The security engine processor includes a random number generator not shown and a processor register i.e. the register in that can be employed to store decrypted keys. The structure of the security engine processor is known and thus will not be described in more detail below 

The processor hardware circuit can be implemented by any known processor or microcontroller or co processor and thus will not be described in more detail. The decryption software code is HDCP based decryption code and the decryption operation is known and will not be described in more detail below.

Code is an authentication control code that controls interaction and interfacing of the media engine i.e. the processor hardware with other components e.g. the authentication processor of of the SoC circuit i.e. the SoC circuit of during authentication and key exchange. Code implements the HDCP protocol. It may include a HDCP library and a HDCP library API Application Programming Interface . It may also include security engine processor API and security engine processor driver as well as HDCP inter processor call communication protocol code.

Code is a decryption control code that controls interaction and interfacing of the media engine i.e. the processor hardware with other components e.g. the decryption processor of of the SoC circuit i.e. the SoC circuit of during decryption. shows the procedure and operation of the codes and which will be described in more detail below.

The procedure starts at at which the processor receives an AKE init Authentication and Key Exchange Initiation message. The AKE init message includes a 64 bit random number rgenerated by the transmitter e.g. the transmitter and a message ID. The transmitter can also be referred to as the requester. The random number rserves both as device ID of the transmitter and the authentication request.

At the processor receives an encrypted master key K. The master key Kis generated and encrypted with a receiver public key Kpubat the transmitter requester. As described above this encryption operation is performed with RSA 1024 with RSA OAEP padding.

At the processor sends rand the encrypted master key Kto an authentication processor e.g. the authentication processor of . The master key Kis then decrypted by the authentication processor e.g. the processor of with private key values that are in the Chinese Remainder Theorem Format. The decryption is carried out in the authentication processor using Chinese Remainder Theorem calculations. In addition the authentication processor also calculates H value i.e. HMAC SHA256 rXOR REPEATER K after successfully decrypting the master key K. The H value is sent to the transmitter for verifying if the authentication is successful. The processor is not involved in the decryption and H s value calculation operation.

In addition and at the processor also sends back to the transmitter the random number r. The random number rserves as device ID of the receiver and the confirmation that the encrypted master key has been received in the receiver.

At the processor receives confirmation from the transmitter whether the authentication is successful or not. If successful the processor receives the locality check command rfrom the transmitter.

At the processor causes the authentication processor to perform the locality check operation by sending rto the authentication processor. The authentication processor e.g. the authentication processor of then computes L values i.e. HMAC SHA256 r kXOR r . The L values are then sent to the processor via a shared memory between the two processors. The L values then sent back to the transmitter for verification with the L values calculated in the transmitter. For the successful completion of authentication and locality check the computed L values have to be transmitted to the transmitter within a predetermined time period. When the transmitter initiates the message for the locality check it sets up a watchdog timer. The message from the receiver should reach the transmitter within the time specified.

At the processor receives an encrypted session key from the transmitter or requester. The session key is used by the decryption processor e.g. the decryption processor of to decrypt encrypted content sent by the transmitter. Thus the session key is the decryption key.

The session key Kis generated in the transmitter with a 64 bit pseudo random number r. The transmitter then performs key derivation to generate dkey2. The transmitter then encrypts the 128 session key to be E K KXOR dkeyXORr . The transmitter then sends the encrypted session key Kwith the 64 bit pseudo random number rto the receiver and received by the processor.

The processor passes the encrypted session key Kwith rto the authentication processor to decrypt the session key. The processor is not involved in the session key decryption and does not have access to the decrypted session key. This prevents software code running on the processor from accessing the decrypted session key. This provides secure and robust content protection for the wireless display system such as the system of .

At the processor receives encrypted content from the transmitter sends it to the decryption processor e.g. the decryption processor for decryption with the decrypted session key directly loaded to the authentication processor to the decryption processor via the backdoor key loading technique.

At the processor receives the decrypted content and performs other content processing functions. The processor then sends the content to the external rendering device e.g. the content rendering system of for rendering.

The procedure starts at at which the authentication processor receives an authentication request rfrom the processor e.g. the processor of . This is done by the software code e.g. authentication control code of stored in memory e.g. the memory of . The software code writes the authentication request r into a memory commonly shared by the processors e.g. and of and the authentication processor copies rinto its internal memory through an AKE init IPC call i.e. an authentication and key exchange initialization inter processor call .

At the authentication processor receives an encrypted master key K. As described above the master key Kis encrypted with a public key Kpubin the transmitter e.g. the transmitter of .

At the authentication processor generates a random number rusing its random number generator. The random number ris passed to the processor via an inter processor call command.

At the authentication processor decrypts the master key Kwith a private key Kpriv. The private key values used to decrypt the Kare in the Chinese Remainder Theorem Format. The decryption is carried out in the authentication processor using Chinese Remainder Theorem calculations. In addition the authentication processor calculates H value i.e. HMAC SHA256 rXOR REPEATER K . The H value is used by the transmitter to verify whether the authentication is successful or not. The H value is then sent back to the processor by writing it in an output payload region of the shared memory between the processor and the authentication processor. The processor then sends the H value to the transmitter for verification with H value calculated in the transmitter.

At the authentication processor receives the locality check command rfrom the processor. This is done by the authentication control code running on the processor that writes the command in an input payload region of a memory shared by the two processors and then the authentication processor copies that command into its internal memory.

At the authentication processor performs locality check by computing L values i.e. HMAC SHA256 r kXOR r . The L values are then sent to the processor via a shared memory between the two processors. The processor then sends the L values to the transmitter for verification with L values calculated in the transmitter. For the successful completion of authentication and locality check the computed L values have to be transmitted to the transmitter within a predetermined time period for the locality check to be successful.

At the authentication processor receives an encrypted session key Kand a 64 bit pseudo random number r.

At the authentication processor decrypts the session key. This is done by first performing key derivation to generate dkey. Then the authentication processor decrypts the 128 bit session key Kto be E K XOR dkeyXORr. The authentication processor also calculates Ks XOR 1c128. The decrypted key is then stored in a processor register waiting to be loaded to the decryption processor e.g. the decryption processor of via a backdoor key loading. Before the decrypted session key is loaded to the decryption processor the decrypted session key is not accessible by software codes running on the processor e.g. the processor of .

In TX represents the transmitter side and RX represents the receiver side. Arrows indicate the data flow directions. The symbols above the arrow lines indicate data transmitted during authentication and key exchange. As can be seen from the transmitter first sends an AKE init Authentication and Key Exchange Initiation message to the receiver to initiate the authentication operation. The AKE init message includes a 64 bit random number rgenerated by the transmitter and a message ID. The random number rserves both as device ID of the transmitter and the authentication request.

Upon receiving the AKE init message the receiver sends back a certificate Cert. As described above in connection with this is done by the processor e.g. the processor of of the SoC receiver e.g. the receiver . The certificate Certis stored in a flash memory of the receiver. The transmitter then verifies the Cert using public key Kpub. At this time the processor of the receiver also passes the random number rto the authentication processor e.g. the authentication processor of to start the authentication and key exchange operation.

After the transmitter has verified the Cert the master key Kis generated and encrypted with a receiver public key Kpub. As described above this encryption operation is performed with RSA 1024 with RSA OAEP padding.

The master key Kis then sent to the receiver. The receiver has its authentication processor decrypt the encrypted master key Kwith a private key Kpriv. The private key values used to decrypt the Kare in the Chinese Remainder Theorem Format. The decryption is carried out in the authentication processor e.g. the processor of using Chinese Remainder Theorem calculations.

The receiver upon receiving the master key K also generates a receiver random number rand sends it to the transmitter. The generation of the random number ris performed by a random number generator within the authentication processor of the receiver. The random number rserves as device ID of the receiver and the confirmation that the encrypted master key has been received in the receiver.

The authentication processor of the receiver e.g. the authentication processor of then calculates H value i.e. HMAC SHA256 rXOR REPEATER K . The processor of the receiver then sends the H value to the transmitter. The transmitter computes H value and verifies whether H H . If so the authentication is successful and the transmitter stores the master key Kand E K K . E K K is the pairing information which includes the master key Kand hash of private key Kof the receiver. If H is not equal to H the authentication of the receiver fails.

Referring to the transmitter has created the master key Kand the sequences and data flows differ from that of in that there is no master key generation. Instead there is a master key retrieval function to retrieve the stored pairing information E K K with receiver ID.

Referring to the transmitter e.g. the transmitter of initiates the locality check by generating and transmitting rto the receiver e.g. the receiver of or the receiver of . The authentication processor e.g. the authentication processor of then computes L values i.e. HMAC SHA256 r kXOR r . The L values are then sent to the processor of the receiver e.g. the processor of via a shared memory between the two processors. The L values are then sent back to the transmitter for verification with the L values calculated in the transmitter. For the successful completion of authentication and locality check the computed L values have to be transmitted to the transmitter within a predetermined time period e.g. as shown in . When the transmitter initiates the message for the locality check it sets up a watchdog timer. The message from the receiver should reach the transmitter within the time specified.

In after successful completion of authentication and locality check the transmitter e.g. the transmitter of starts the procedure of session key exchange. The session key is used by the decryption processor e.g. the decryption processor of to decrypt encrypted content sent by the transmitter. Thus the session key is the decryption key.

As can be seen from the transmitter initiates the procedure by generating the session key Kand a 64 bit pseudo random number r. The transmitter then performs key derivation to generate dkey2. The transmitter then encrypts the 128 session key to be E K KXOR dkeyXORr . The transmitter then sends the encrypted session key Kwith the 64 bit pseudo random number rto the receiver.

The authentication processor e.g. the authentication processor of then receives the encrypted session key Kwith r decrypts the session key. This is done by first performing key derivation to generate dkey. Then the authentication processor decrypts the 128 bit session key Kto be E K XOR dkeyXORr . The authentication processor also calculates Ks XOR 1c128 and sends the decrypted session key to the decryption processor e.g. the decryption processor of via the backdoor key loading. Before the decrypted session key is loaded to the decryption processor the decrypted session key is stored in a processor register of the authentication processor and is not accessible by software codes running on the main processor e.g. the processor of . This provides secure and robust content protection for the wireless display system such as the system of .

Embodiments of the present disclosure may be provided as a computer program product or software that may include an article of manufacture on a machine accessible or machine readable medium having instructions. The instructions on the machine accessible or machine readable medium may be used to program a computer system or other electronic device. The machine readable medium may include but is not limited to floppy diskettes optical disks CD ROMs and magneto optical disks or other type of media machine readable medium suitable for storing or transmitting electronic instructions. The techniques described herein are not limited to any particular software configuration. They may find applicability in any computing or processing environment. The terms machine accessible medium or machine readable medium used herein shall include any medium that is capable of storing or encoding a sequence of instructions for execution by the machine and that cause the machine to perform any one of the methods described herein. Furthermore it is common in the art to speak of software in one form or another e.g. code program procedure process application module unit logic block and so on as taking an action or causing a result. Such expressions are merely a shorthand way of stating that the execution of the software by a processing system causes the processor to perform an action to produce a result.

The following examples pertain to further embodiments. In one embodiment a content processing integrated circuit includes a system on a chip SoC that further includes a processor to receive an authentication request from an external device for authenticating if the SoC is permitted to receive encrypted content from the external device and to receive the encrypted content once the SoC is authenticated. An authentication processor is provided and coupled to the processor to authenticate the SoC to the external device when the processor receives the authentication request and to generate a decryption key for decrypting the encrypted content. A decryption processor is provided and coupled to the processor and the authentication processor to receive the decryption key from the authentication processor and to decrypt the encrypted content with the decryption key.

In another embodiment the authentication processor is a security engine processor separate from the processor and is coupled to the processor via a communication link.

In yet another embodiment the security engine processor further comprises a memory within the security engine processor that stores software instructions that when executed by the security processor implement a predetermined content protection protocol which is also implemented by the external device.

In a further embodiment wherein the predetermined content protection protocol is High bandwidth Digital Content Protection HDCP protocol.

In a further embodiment the authentication processor includes a processor register that stores the generated decryption key before the decryption key is sent directly to the decryption processor. The decryption key is not sent to the processor and is not exposed to any software running on the processor.

In a further embodiment the decryption processor is separate from the processor and is coupled to the processor via a communication link. The decryption processor further performs a transport stream de multiplexing function to separate video content from audio content in the encrypted content before the encrypted content is decrypted.

In a further embodiment the decryption key is a session based key that expires after a session is completed.

In a further embodiment the above referenced content processing integrated circuit further comprises a wireless communication module coupled to the processor to receive the authentication request and the encrypted content from the external device wirelessly and to pass the authentication request and the encrypted content to the processor. The wireless communication module is also coupled to the authentication processor to communicate authentication information between the external device and the authentication processor.

In a further embodiment a wireless display system includes a content source device to generated and transmit encrypted content wirelessly a system on a chip SoC wireless receiver to receive an authentication request from the content source device for authenticating if the receiver is permitted to receive the encrypted content and to receive the encrypted content once the receiver is authenticated and a content rendering device coupled to the receiver to receive and display the decrypted content. The SoC wireless receiver further includes a processor coupled to receive the authentication request and the encrypted content an authentication processor coupled to the processor to 1 authenticate the receiver to the content source device upon the processor receiving the authentication request and 2 generate a decryption key for decrypting the encrypted content and a decryption processor coupled to receive the decryption key from the authentication processor and to decrypt the encrypted content with the decryption key.

In a further embodiment the authentication processor is a security engine processor separate from the processor and is coupled to the processor via a communication link. The security engine processor further comprises a memory within the security engine processor that stores software instructions that when executed by the security processor implement a predetermined content protection protocol which is also implemented by the content source device to encrypt the encrypted content.

In a further embodiment the predetermined content protection protocol is High bandwidth Digital Content Protection HDCP protocol.

In a further embodiment the authentication processor includes a processor register that stores the generated decryption key before the decryption key is sent directly to the decryption processor wherein the decryption key is not sent to the processor and is not exposed to any software running on the processor.

In a further embodiment the decryption processor is separate from the processor and is coupled to the processor via a communication link. The decryption processor further performs a transport stream de multiplexing function to separate video content from audio content in the encrypted content before the encrypted content is decrypted.

In a further embodiment the decryption key is a session based key that expires after a session is completed.

In a further embodiment the wireless display system further includes a wireless communication module coupled to the processor to receive the authentication request and the encrypted content from the content source device wirelessly and to pass the authentication request and the encrypted content to the processor. The wireless communication module is also coupled to the authentication processor to communicate authentication information between the content source device and the authentication processor.

In a further embodiment a method of providing secure and robust content protection in a system on a chip SoC media processing apparatus includes receiving in a processor of the SoC media processing apparatus an authentication request from an external device for authenticating if the SoC media processing apparatus is permitted to receive encrypted content from the external device and to receive the encrypted content once the SoC media processing apparatus is authenticated causing the authentication processor to 1 authenticate the SoC media processing apparatus to the external device in accordance with a pre determined content protection protocol and 2 generate a decryption key for the encrypted content encrypted according to the pre determined content protection protocol and receiving by the processor the encrypted content from the external device and sending the encrypted content to a decryption processor of the SoC media processing apparatus to cause the decryption processor to decrypt the encrypted content with the decryption key received directly from the authentication processor once the SoC media processing apparatus is authenticated and the decryption key is generated.

In a further embodiment the above referenced method further includes sending by the processor a certificate of the SoC media processing apparatus to the external device upon receiving the authentication request.

In a further embodiment the above referenced method further includes receiving an encrypted master key in the processor from the external device after sending the certificate sending the encrypted master key to the authentication processor for decryption receiving confirmation of decryption of the master key in the form of a random generated number from the authentication processor and sending the random generated number to the external device to confirm decryption and verification of the master key.

In a further embodiment the above referenced method further includes causing the authentication processor to respond to a locality check request from the external device.

In a further embodiment wherein causing the authentication processor to generate a decryption key for the encrypted content further includes receiving an encrypted session key from the external device and sending the encrypted session key to the authentication processor for decryption to become the decryption key.

In a further embodiment the above referenced method further includes causing the decryption processor to receive the decryption key directly from the authentication processor via backdoor key loading once the SoC media processing apparatus is authenticated and the decryption key is generated and stored in the authentication processor.

In a further embodiment a computer readable medium having sequences of instructions the sequences of instructions including instructions which when executed cause a processor to perform device authentication and content decryption which include receiving an authentication request from an external device for authenticating if the processor is permitted to receive encrypted content from the external device and to receive the encrypted content once the processor is authenticated causing an external authentication processor separate from the processor to 1 authenticate the processor to the external device in accordance with a pre determined digital content protection protocol and 2 generate a decryption key for the encrypted content encrypted according to the pre determined digital content protection protocol receiving the encrypted content from the external device and causing a decryption processor separate from the processor to receive the decryption key directly from the authentication processor once the processor is authenticated and the decryption key is generated and sending the encrypted content to the decryption processor for decryption with the decryption key.

In a further embodiment the decryption key is a decrypted session key encrypted at the external device and sent to the processor.

In a further embodiment the above referenced computer readable medium further includes causing the decryption processor to receive the decrypted session key directly from the authentication processor via backdoor key loading.

In a further embodiment the above referenced computer readable medium further includes sending by the processor a certificate of the processor to the external device upon receiving the authentication request receiving an encrypted master key in the processor from the external device after sending the certificate sending by the processor the encrypted master key to the authentication processor for decryption receiving confirmation of decryption of the master key in the form of a random generated number from the authentication processor and sending the random generated number to the external device to confirm decryption and verification of the master key.

In a further embodiment the above referenced computer readable medium further includes causing the authentication processor to respond to a locality check request from the external device.

In a further embodiment wherein causing the authentication processor to generate a decryption key for the encrypted content further includes receiving an encrypted session key from the external device and sending the encrypted session key to the authentication processor for decryption to become the decryption key.

While the disclosure has been illustrated and described in detail in the drawings and foregoing description such an illustration and description are to be regarded as exemplary and not restrictive. It should be understood that only illustrative embodiments of the disclosure have been shown and described and that all changes and modifications consistent with the disclosure and recited claims are intended to be protected.

