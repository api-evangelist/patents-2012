---

title: Systems and methods for migrating mailbox data from systems with limited or restricted remote access
abstract: Examples described include software hosting systems able to provide software as a service to client systems through a firewall and/or to client systems which do not have web service capability. Examples include mailbox migration systems for migrating mailboxes from a source messaging system (e.g. a Lotus Notes system) to a destination messaging system. Software hosting systems described herein may maintain an action buffer including a next action to be performed by the source messaging system, and wait for data (e.g. messaging system content) to be returned and stored in a data buffer. Communication between the software hosting system and the source messaging system may occur over a communication channel which may be operated through a firewall using HTTP.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09654436&OS=09654436&RS=09654436
owner: BITTITAN INC.
number: 09654436
owner_city: Kirkland
owner_country: US
publication_date: 20121127
---
Examples described herein relate to computing systems including computing systems providing software as a service. Examples of mailbox migration between messaging systems is described which may include computing systems programmed to open a communication channel with a mailbox migration service to facilitate migration.

Software as a service has increased in popularity. Generally in software as a service systems software and associated data may be hosted on one or more computing systems e.g. in the cloud and may be accessed by client computing systems over a network connection using for example a web browser.

Software hosting systems e.g. in the cloud may connect to client systems by calling application programming interfaces APIs supported by those client systems. Utilizing APIs the software hosting system may obtain access to data or functionality of the client system that may be necessary or desirable in performing the software service.

Mailbox migration services may be provided as software as a service. Mailbox migration generally refers to copying messaging system content from a source messaging system to a destination messaging system. Examples of mailbox migrations include uni directional migrations where messaging system content is moved from the source messaging system to the destination messaging system and bi directional synchronization where messaging system content may be maintained on both the source and destination messaging systems.

Certain details are set forth below to provide a sufficient understanding of embodiments of the invention. However it will be clear to one skilled in the art that embodiments of the invention may be practiced without various of these particular details. In some instances well known computer system components networking components circuits and software operations have not been shown in detail in order to avoid unnecessarily obscuring the described embodiments of the invention.

As described above software hosting systems that may provide software as a service e.g. mailbox migration services may connect to client systems e.g. source messaging systems over a network by calling APIs support by those client systems. However some client systems may be behind a network firewall and or may not support web APIs. The firewall may block certain network activities. For example some firewall systems may block connections over the network to APIs exposed by the client system. Accordingly software as a service systems including for example mailbox migration services may not be able to connect to client systems behind the firewall without having a system administrator create a hole in the firewall for use by the software hosting system.

In other examples some client systems may not support web services and or offer APIs for remote access to data or functionality. For example Lotus Domino a collaborative software suite developed by IBM which may provide a Lotus Notes messaging system does not provide any API to remotely access its data from the internet without establishing a Virtual Private Network VPN . Accordingly software hosting systems that provide software as a service e.g. mailbox migration services may not be able to access client systems which do not have APIs for remote data access if the software hosting system relies on APIs for required data and functionality access. Further if such a system is behind a firewall it may not be possible to access the system directly for data or functionality.

Generally embodiments of source messaging systems described herein may not be accessible to software hosting systems such as mailbox migration systems on their own. Embodiments of the present invention accordingly provide a data transmission mechanism between client systems and software hosting systems. Examples of the data transmission mechanism may operate through firewalls that allow common HTTP access. Examples of the data transmission mechanism may operate using a peering technique. In this manner software as a service may be provided to client systems behind firewalls client systems without web APIs for remote access of data or both. Examples include providing a software component referred to herein as an extractor to the client system for use in establishing communication between the software hosting system and the client system.

As described above mailbox migration services may be provided as software as a service. Mailbox migration generally refers to copying messaging system content from a source messaging system to a destination messaging system. Examples of mailbox migrations include uni directional migrations where messaging system content is moved from the source messaging system to the destination messaging system and bi directional synchronization where messaging system content may be maintained on both the source and destination messaging systems.

Generally any number of mailboxes may be migrated in accordance with embodiments of the present invention. A mailbox generally refers to messaging system content associated with an account e.g. a user on the messaging system. The mailbox may include any amount or type of messaging system content and may have folders and other organization that should be replicated during a migration. Mailbox migration is not a task that may be completed by hand because the amount of data involved in migrating a mailbox let alone a large number of mailboxes such as all mailboxes associated with an enterprise may be too great or cumbersome for an individual to transfer by hand in a lifetime. Beyond simply the amount of data the formats of stored mailbox data including but not limited to emails calendars contacts tasks etc. between source and destination systems may require conversion e.g. translation between the format of the host and destination systems. The large amount of conversion e.g. translation further prohibits manual mailbox transfer. Efficiently completing mailbox migrations may be desirable for enterprises with large numbers of mailboxes that desire to upgrade or change to a different messaging system.

Messaging system content may include but is not limited to emails calendars contacts notes journals tasks and combinations thereof. In some examples mailbox migration may occur between different types of messaging systems. Examples of messaging systems types include but are not limited to Microsoft Exchange Microsoft Office 365 Microsoft Live edu Google Apps Novell Groupwise Zimbra Lotus Notes IMAP and POP.

Examples of mailbox migration services are described in co pending U.S. Published Patent Application 2011 0264748 entitled On demand mailbox synchronization and migration system published on Oct. 27 2011 from application Ser. No. 12 961 268 filed on Dec. 6 2010 and claiming priority to provisional application No. 61 328 003. The entire contents of U.S. Published Application 2011 0264748 U.S. Ser. No. 12 961 268 and provisional application Ser. No. 61 328 003 are hereby incorporated by reference in their entirety for any purpose.

The source messaging system may not include APIs for access by the software hosting system and or may be behind a firewall from a network accessible to the software hosting system . For example the source messaging system may include a mail server which may include a mail database which may store messaging system content. The mail server may for example be implemented as a Lotus Domino server or any other messaging system server. The mail database may be implemented as a Lotus NSF database or any other mail database. The source messaging system may include a mail client . The mail client is exemplary and any number of mail clients may be included in the source messaging system . The mail client may include a mail library . In one example the mail client may be implemented by a Lotus Notes client and the mail library may be implemented as a Lotus COM library. The mail server and mail client may be in communication with one another directly or through a mail system network The mail system network may be wired or wireless and may be implemented using any networking technologies. The mail system network may be behind a firewall from the network in some examples. The mail server may in some examples not expose APIs to the software hosting system through the network suitable for use in obtaining data from the mail server for use in providing software as a service from the software hosting system .

Accordingly in embodiments of the present invention the source messaging system may further include an extractor . The extractor may be implemented as computer executable instructions programmed on a computing system in communication with the mail system network . In some example the extractor may be run on the same computing system as the mail server mail client or both. The extractor may facilitate communication between the mail server and or mail client and the software hosting system . The extractor may be implemented as an executable file which may be installed on the source messaging system for example by an administrator. The extractor may initiate a peering connection with the software hosting system using HTTP e.g. port 80 443 or other custom ports through a firewall for the mail system network something most firewalls may allow or be configured to allow. In this manner the extractor may request actions to perform from the software hosting system perform the actions in the source messaging system and send responses to the software hosting system through the firewall. Accordingly in some examples no extra port is required to be opened in a firewall between the mail system network and network .

Any number of extractors including the extractor may be provided on the source messaging system . In some examples one computer or computing system may be provided in the source messaging system per extractor. This may for example ensure sufficient processing resources to implement each extractor. In mailbox migration examples each extractor such as the extractor may handle up to a maximum number of mailbox migrations concurrently a maximum of 30 mailbox migrations in one example. Accordingly if a greater number of concurrent mailbox migrations is desired additional extractors may be provided. The extractor may include a heartbeat . The heartbeat may check periodically such as every 10 seconds in one example to confirm the mail server remains responsive and may maintain a timestamp of times during which the mail server was responsive. The extractor may further include a guardian . The guardian may check periodically such as every few seconds in one example that the heartbeat has indicated a responsive mail server . In the event the heartbeat indicates the mail server is unresponsive or has been unresponsive for longer than a threshold time the guardian may stop other components of the extractor and attempt to restart the extractor e.g. by relaunching other portions of the extractor . The extractor may include a coordinator . The coordinator may generate e.g. launch or start migrators . Accordingly the extractor may further include migrators . Any number of migrators may be provided in the extractor and generally in some examples each migrator may serve to migrate one mailbox. Accordingly if the extractor may migrate up to a maximum number of mailboxes it may be provided with up to that same maximum number of migrators in some examples.

Mailbox users may communicate with the mail server and or the mail client directly or over the mail system network . The mailbox users may be individuals or may be other computer processes that utilize mailboxes. One or more administrators may communicate with the mail server and or mail client directly or over the mail system network . The administrators may be individuals or may be other computer processes used to administer the mail server and or mail client . The administrators may utilize another computing system not shown to access the mail server and or mail client or the administrators may directly utilize the mail server and or mail client computing systems to administer the systems. The administrators may further communicate with the software hosting system for example to initiate a request for a software service and or provide configuration information for the software service.

The software hosting system may provide software services to client systems such as the source messaging system . In the example of the software hosting system is programmed to provide mailbox migration services but other software services may be provided by software hosting systems utilizing the communication techniques for connection to client systems described herein. The software hosting system includes a migration website a migration web API a migration scheduler a migration service and a communication service . These may all be implemented as software components that are programmed on the software hosting system to provide the functionalities and interactions described herein.

The migration website may provide a web interface for receipt of a request for software services provided by the software hosting system . For example the migration website may receive a request to start a mailbox migration from the source system to the destination messaging system . The migration website may start the requested migration including communicating with the migration scheduler to begin a migration. The migration web API may check periodically e.g. every 30 seconds in one embodiment to determine if a software service e.g. a mailbox migration has been requested. The migration scheduler may identify computing resources for the software hosting system to utilize in providing the requested software service. For example the migration scheduler may associate particular servers to a requested migration. In other examples the migration scheduler may dynamically obtain computing resources for example from a cloud provider to perform the requested service. Embodiments of dynamically obtaining and assigning resources for mailbox migrations are described in co pending U.S. Published Patent Application 2011 0264748 entitled On demand mailbox synchronization and migration system published on Oct. 27 2011 from application Ser. No. 12 961 268 filed on Dec. 6 2010 and claiming priority to provisional application No. 61 328 001 The entire contents of LS. Published Application 2011 0264748 U.S. Ser. No. 12 961 268 and provisional application Ser. No. 61 328 003 are hereby incorporated by reference in their entirety for any purpose.

The communication service may open a communication channel to the source messaging system e.g. for communication with the extractor . In some examples one communication channel may be opened for each migrator provided in the source messaging system . The communication service may be implemented using communication frameworks such as but not limited to Microsoft s Windows Communication Framework WCF . Accordingly the communication service may facilitate the receipt of data from the source messaging system and the providing of actions to the source messaging system for the source messaging system to perform.

The migration service may generally perform the mailbox migration. For example the migration service may receive data obtained from the source messaging system e.g. through the extractor and may send the data to the destination messaging system . The migration service may perform a conversion e.g. translation of the data obtained from the source messaging system from a format used by the source messaging system to a format used by the destination messaging system e.g. Lotus Notes to Gmail etc. . The migration service may maintain a list of actions for performing a mailbox migration and may provide next actions for sending to the source messaging system .

The software hosting system may include an action buffer and a data buffer . Any number of action buffers and data buffers may be included in the software hosting system with generally one action buffer and data buffer provided per mailbox migration. The action buffer and data buffer may be implemented in memory the two buffers may be implemented in the same or different memories accessible to the software hosting system . The action buffer may store one or more actions to be provided to the source messaging system e.g. to the extractor for the source messaging system to act on a migration. For example actions may include test wait stop done get items and may include one or more parameters related to the action.

The data buffer may store data e.g. messaging system content received from the source messaging system . The migration service may access data in the data buffer and provide the data to the destination messaging system .

The administrator or in other examples a different person or electronic process may start an extractor on the source messaging system such as the extractor of . The extractor may be started for example by launching an executable containing the computer executable instructions for performing the extractor functionalities. Accordingly an executable file for the extractor may be provided to the administrator or otherwise loaded onto the client messaging system . The extractor may be started in box . The coordinator may in box request mailbox migrations to be performed. For example the source messaging system may not be aware that a mailbox migration has been requested or is desired for the source messaging system . The coordinator may periodically communicate with the software hosting system to determine if a mailbox migration has been started. When the coordinator determines that a mailbox migration has been started in box the coordinator may start a migrator such as the migrator . A migrator may be started for each mailbox migration requested.

A migrator may accordingly be created in block . In block the migrator may connect to the communication service e.g. the communication service of . In some examples the migrator may periodically attempt to connect to the communication service. For example in some embodiments the migrator may be started in block prior to the communication channel being opened in block . Accordingly the migrator may need to make several attempts to connect to the communication service in block .

Referring now to the migration service may set a next action in a migration action buffer in block . The migration service may maintain a list of actions that may be required in a migration and an order in which the actions are to be performed. A next action may be placed in the action buffer in the block . The migration service may then wait for a migration data buffer to contain data in block . The extractor once connected to the communication service in block may request a next action to perform. To request a next action the extractor may call the communication service in block . The extractor may call a method supported by the communication service e.g. Action Request. Communication between the extractor and the communication service may occur using HTTP through a firewall in some examples a standard configuration for http traffic.

The communication service may receive a next action from the action buffer in block . For example responsive to the Action Request call received from the extractor in block the communication service may get a next action stored in the action buffer e.g. an action set in the action buffer in the block . In block the communication service may provide the next action to the migrator . The migrator may accordingly perform the action in block . The migrator may for example communicate with the mail server to perform the action in block such as getting messaging system content. Communication between the extractor including the migrator and the mail server may be behind a firewall on a mail system network as shown in .

Referring again to results of the action may be sent by the migrator to the communication service in block . For example the migrator may call a method supported by the communication service e.g. a Data Transfer method in block . After sending the result in block the migrator may request a next action to perform in block . Accordingly the migrator may repeatedly request an action from the communication service perform the action and send results. When the action received is indicative of stopping the migration e.g. a done action the migrator may close such that computing resources dedicated to the migrator may become available to other programs on the computing system on which the migrator resided. For example the computing resources may be used to start other migrators for other requested migrations.

After the Data Transfer method is called in block the communication service may receive data from the migrator responsive to the action performed and may set the received data in the data buffer in block . The communication service may in block set a next action in the action buffer to wait . In this manner should the migrator request a next action prior to the software hosting system processing the received data the migrator would receive a wait action responsive to requesting the next action in block . Accordingly the migrator may wait to perform another action involving the mail server until the data set in the data buffer has been cleared from the data buffer e.g. has been migrated by the migration service or moved out of the data buffer to another location in memory accessible to the software hosting system in preparation for migration by the migration service .

Following data set in the data buffer in block the migration service may identify the data buffer contains data in block and in block the migration service may get and clear data from the data buffer. For example data may be moved out of the data buffer in block and read into or moved to another memory or memory area accessible to the migration service . The memory to which the data is moved may be located on the same physical memory e.g. hard drive as the data buffer in some examples but not logically part of the data buffer. In block the data from the data buffer either stored in the data buffer or in another location having been moved from the data buffer may be migrated to a destination messaging system. Once the data is moved out of the data buffer the migration service may then set a next action into the action buffer in block .

In this manner examples of the present invention may control mailbox migrations utilizing an action buffer storing a net action and a data buffer storing data received from a source messaging system. Communication between the source messaging system and the software hosting system may be performed through a firewall using HTTP in some examples and the software hosting system may not directly access a mail server . Instead the source message system may obtain next actions from the software hosting system connect with the mail server to perform actions and provide data back to the software hosting system which may migrate the data to the destination messaging system.

In block the extractor e.g. the extractor of may validate a migration authentication. Block may be performed by the coordinator of . The coordinator may authenticate itself to the software hosting system for example. In block the extractor may check that it is operating with a latest version of the extractor software. For example the coordinator of may request a version check from the software hosting system and if not operating at the latest version may obtain a latest version of the extractor from the software hosting system . The coordinator of may perform block in some examples.

In block mailbox connectors may be requested. Each mailbox connector may specify a migration from one source messaging system to another source messaging system e.g. Lotus to GMail. The mailbox connectors may be specified by an administrator using the migration website of in some examples. The administrator may further associate mailboxes to the connector e.g. specify all of the mailboxes that should be migrated from the source to the destination messaging system . Accordingly in block the coordinator of may request from the software hosting system all the mailbox connectors which pertain to the source messaging system with which the coordinator is associated e.g. the source messaging system . For each connector involving the source messaging system in block the coordinator may retrieve the associated mailbox migrations. For example each individual mailbox to be migrated may be considered a separate mailbox migration. For each mailbox migration a migrator may be started in block . The coordinator of may perform the blocks and and may start the migrators in block . As has been described above each extractor may have any number of migrators and may in some examples have up to a maximum amount of migrators to ensure the migrators do not exceed available computational resources. In examples where the number of mailbox migrations retrieved in block exceeds the maximum number of migrators for a single extractor additional extractors may be provided. In some examples one extractor may only be able to run a maximum number of migrators. Multiple extractors may be installed on a machine e.g. in several different folders but this may result in a decrease in performance as the multiple extractors may compete for the same processing resources. Accordingly in some examples one extractor may be installed per machine and multiple machines may be provided to provide a desired number of migrators where the number of extractors desired may equal the number of mailboxes to be migrated simultaneously divided by the maximum number of migrators supported by an extractor. In other examples a fewer number of extractors may be used and the mailbox migration may take a longer time to run while the fewer number of migrators each provide a number of migrators equal or less than the maximum number they may support. The blocks in may be repeated until a user administrator or other individual or process closes the extractor.

In block the migrator may initialize a mail server session for example a Lotus Notes session. Referring back to the migrator may initialize a mail session with the mail server . Accordingly the mail session allowing access to the mail database may be initiated over the mail system network or through a direct connection between the migrator and the mail server . The mail session may not be initialized using the network in some examples. Accordingly the mail server itself may not need to communicate over the network in some examples. Referring again to in block the mail database is opened. The mail database may be opened by the migrator or by the mail server. In some examples the entire database may not be opened or accessible but rather the portion of the database corresponding with the mailbox to be migrated by the migrator initializing the mail server connection. Accordingly the mail database such as the database of and or relevant portions of the database may now be accessible to the migrator including the messaging system content stored on the mail database.

In block the migrator may optionally test the connection to the communication service. The test may be conducted for example by sending a test message and receiving a known reply from the software hosting service in response. In block the migrator may optionally check with the software hosting service to ensure it is running the latest version of the migrator and or extractor software. If a more recent version or update is available the update may be installed before the mailbox migration is begun.

In block the migrator may request a next action to perform. The next action to perform may for example be requested by the migrator of from the communication service of . The communication service may obtain the next action to perform from the action buffer of and provide the action to the migrator .

Referring again to in block the migrator may perform the action received responsive to the request in block . For example the migrator may wait or may request data from the mail server. In some example the action received may specify how much data should be retrieved corresponding to the one action. It may be desirable not to retrieve large amounts of data responsive to a single action because the retrieving of larger amounts of data may be more prone to failure. Accordingly in some examples an action is associated with a maximum amount of data to retrieve or a number of content items to retrieve 1000 content items is one example.

In block the result if any from performing the action may be sent back to the software hosting system. For example the migrator of may send the result of an action e.g. messaging system content retrieval to the communication service . The communication service may store the received data in the data buffer . Referring again to the blocks may be repeated until an action indicating the mailbox migration is complete or is to be stopped is received e.g. an action done or stop .

In block a mailbox migration may be requested by an administrator. The mailbox migration may be requested for example using the migration website of . In requesting a mailbox migration an administrator may specify a source messaging system a destination messaging system mailboxes to be migrated authentication credentials for the mailboxes or combinations thereof.

In block the software hosting system may set a next action into an action buffer. For example the migration service of may set the next action into an action buffer. The action buffer into which the migration service may set the next action may be an action buffer accessible to a migrator running on a source messaging system through the communication service of .

Unlike a classic call to a web service the software hosting system in examples of the present invention may not be informed of the outcome of the next action. For example in the case of a web service call the calling system may be informed of the outcome of a requested action and if the action was successful the calling system may receive the requested data and continue processing. Because the source messaging system in examples of the present invention may not be accessible using a web service call however in embodiments of the present invention a different approach may be taken to inform the software hosting system of a completed action.

In block the software hosting system e.g. the migration service of may wait for a data buffer e.g. the data buffer of to contain data. Recall as described above with reference to data provided from the source messaging system responsive to an action may be stored in the data buffer. Accordingly the migration service which may not know when or if the action in the action buffer was received by the source messaging system or if the action was successful may wait for data to be present in the data buffer. In some examples the migration service may check the data buffer periodically in block e.g. every 100 ms in the example of other frequencies may be used in other examples . If no data is present after a maximum amount of time in some examples e.g. three minutes in the example of other maximum times may be used in other examples the migration service may time out.

If data is found by the migration service in the data buffer the migration service in block may retrieve and clear the data from the data buffer. For example the migration service may read the data in the data buffer and or copy the data from the data buffer to another location accessible to the migration service. The migration service may delete the data from the data buffer. Clearing e.g. deleting data from the data buffer may serve as an acknowledgement of receipt of the data by the migration service. In this manner the communication service may be able to provide an indication to the source messaging system that the data has been received. In block the migration service may process the data and may migrate the data to the destination messaging system.

If there are still actions to perform in the migration the migration service may continue again at block by placing a next action in the action buffer.

In block the communication service may verify that the mailbox migration associated with the migrator making the call is still in progress. For example the communication service may check that there is an action in the action buffer associated with the migrator making the call. If no action is contained in the action buffer the communication service may return a stop action in order to inform the migrator that the mailbox migration is complete or has been stopped.

In block the communication service may check that previously received data has been cleared from the data buffer. If the data buffer contains data the communication service may return the action wait to the migrator indicating to the migrator that the migrator should request an action later. This may allow sufficient time for the migration service to process e.g. copy and or begin migrating the data in the data buffer. The communication service needs not wait in some examples until the data has been fully migrated e.g. transferred to the destination messaging system instead the communication service may wait for the data to be copied out of the data buffer to another storage location accessible to the migration service from which the migration service may complete the migration. In examples of systems and methods described herein data may be downloaded from the source messaging system generally at a faster rate than the data is migrated and uploaded at the destination messaging system which may result in accumulation of data in the software hosting system during a migration. For example if a wait were not returned while data were still present in the data buffer data may back up in the data buffer and or software hosting system. Accordingly the wait may improve performance by ensuring that a data backlog may not be created while the migration service is processing data.

In block the communication service may get the next action from the action buffer. For example the communication service may read the next action in the action buffer. In some examples the communication service may then delete the action from the action buffer. In block the communication service may send the next action to the migrator. Communication may occur for example through a firewall using HTTP.

In block the communication service may check if all previously received data has been processed. For example the communication service may check if the data buffer associated with the migration still contains data. If the data buffer contains data the incoming data may be rejected to allow time for the existing stored data to be processed. If the data buffer does not contain data the process of may continue.

In block the communication service may store e.g. set the received data into the data buffer for example the communication service of may store received data in the data buffer of . In block the communication service may store e.g. set a next action in the action buffer to wait . By storing a next action as wait in the action buffer if a migrator calls the action request method of the communication service before the migration service has determined a next action the migrator may receive a wait action.

Computing system includes processing unit additional processing units may be included in other embodiments video display adapter and a memory all in communication with each other via bus . The memory generally includes RAM ROM and one or more permanent mass storage devices such as hard disk drive tape drive optical drive and or floppy disk drive. The memory may store operating system for controlling the operation of the computing system . Any general purpose operating system may be employed. Basic input output system BIOS may also be provided for controlling the low level operation of computing system . As illustrated in computing system also can communicate with the Internet or some other communications network via network interface unit which may be constructed for use with various communication protocols including the TCP IP protocol and or through the use of Network Protocol Layer or the like. Network interface unit is sometimes known as a transceiver transceiving device or network interface card NIC .

The memory as described above illustrates a type of computer readable media namely computer readable storage media. Computer readable storage media e.g. devices may include volatile nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions computer executable instructions data structures program modules or other data. Examples of computer readable storage media include RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other physical transitory or non transitory medium which can be used to store the desired information and which can be accessed by a computing device.

As shown data stores may include a database text spreadsheet folder file or the like that may be configured to maintain and or store various content. Data stores may further include program code data algorithms and the like for use by a processor such as central processing unit CPU to execute and perform actions. In one embodiment at least some of data and or instructions stored in data stores might also be stored on another device of the computing system or accessible to the computing system including but not limited to cd rom dvd rom hard disk drive or other computer readable storage device resident on the computing system or accessible by the computing system over for example network interface unit .

The memory may also store program code and data. One or more applications may be loaded into memory e.g. programmed and run on operating system . Examples of application programs may include transcoders schedulers calendars database programs word processing programs Hypertext Transfer Protocol HTTP programs customizable user interface programs IPSec applications encryption programs security programs SMS message servers IM message servers email servers account managers and so forth. Web services messaging services and Network Protocol Layer may also be included as application programs within applications . However the invention is not limited to these non limiting examples and other applications may also be included. As has been described above in some examples of the source messaging system of e.g. Lotus Notes systems the system may not include web services capabilities or messaging services sufficient to call a web service.

Messaging services may include virtually any computing component or components configured and arranged to forward messages from message user agents and or other message servers or to deliver messages to a local message store such as data store or the like. Thus messaging services may include a message transfer manager to communicate a message employing any of a variety of email protocols including but not limited to Simple Mail Transfer Protocol SMTP Post Office Protocol POP Internet Message Access Protocol IMAP NNTP or the like. Messaging services may be configured to manage SMS messages IM MMS IRC RSS feeds mIRC or any of a variety of other message types. In one embodiment messaging services may enable users to initiate and or otherwise conduct chat sessions VoIP sessions or the like. However in some examples as described above examples of source messaging systems described herein may not include messaging services for calling web services.

Network Protocol Layer may represent those applications usable to provide communications rules and descriptions that enable communications in or between various computing devices. Such protocols include but are not limited to signaling authentication error detection and correction capabilities. In one embodiment at least some of the applications for which Network Protocol Layer represents may be included within operating system and or within network interface unit .

Accordingly when used to implement the software hosting system of the memory e.g. RAM may be encoded with computer executable instructions e.g. programmed for performing the functions described for the migration website migration web API communication service migration scheduler and the migration service. The functions described with reference to those components may be performed in the network protocol layer . The memory e.g. data stores may store the action buffers and data buffers described above e.g. the action buffer and data buffer of .

When used to implement the source messaging system of the memory e.g. RAM may be encoded with computer executable instructions e.g. programmed for performing the functions described for the extractor of including the heartbeat guardian coordinator and migrator . As described above the extractor executable instructions may be programmed on the source messaging system by an administrator launching an executable file on the source messaging system which executable file is configured to program the source messaging system with the described functionalities.

From the foregoing it will be appreciated that although specific embodiments of the invention have been described herein for purposes of illustration various modifications may be made without deviating from the spirit and scope of the invention.

