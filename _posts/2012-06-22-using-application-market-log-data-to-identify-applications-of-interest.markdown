---

title: Using application market log data to identify applications of interest
abstract: Methods, systems and apparatus, including computer programs encoded on a computer storage medium, for receiving a query log, the query log including data relating to information input to an application marketplace and one or more applications available through the application marketplace, generating a map based on the data of the query log, for at least one of the one or more applications, identifying one or more applications of interest based on the map, generating an index, the index associating the at least one of the one or more applications to the one or more applications of interest, storing the index in computer-readable memory, receiving a user selection of a particular application of the one or more applications, retrieving the one or more applications of interest based on the particular application using the generated index, and providing the one or more applications of interest for display.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08566173&OS=08566173&RS=08566173
owner: Google Inc.
number: 08566173
owner_city: Mountain View
owner_country: US
publication_date: 20120622
---
This application is a continuation of and claims priority to under 35 U.S.C. 120 International Application No. PCT US2012 037109 filed May 9 2012 which in turns claims the benefit of U.S. Prov. Pat. App. No. 61 484 119 filed May 9 2011 the disclosures of which are expressly incorporated herein by reference in their entirety.

The present disclosure relates to identifying one or more applications as being potentially of interest to a user in view of a selected application within an application marketplace.

Mobile computing devices or simply mobile devices may run a variety of software applications that extend existing device capabilities and that add new capabilities. Many types of applications are generally available such as applications for information retrieval communications and entertainment. Applications may be created by mobile device manufacturers and or third parties e.g. application developers and may be pre installed by the manufacturer or may be downloaded and installed by device users.

Users may discover new applications through an interface associated with an on line application marketplace by browsing a catalog of available applications. Additionally information about new applications is generally available through advertising industry reviews top 10 and best lists and through word of mouth referrals. Upon learning of a new application users may obtain install and use full versions of the applications or users may access demonstration versions of the application that allow the users to try the application out with or without purchasing. Over time users may keep applications upgrade applications e.g. from a demonstration version to a full version and may delete applications that are no longer wanted.

Innovative aspects of the subject matter described in this specification may be embodied in methods that include the actions of receiving a query log the query log including data relating to information input to an application marketplace and one or more applications available through the application marketplace generating a map based on the data of the query log for at least one of the one or more applications identifying one or more applications of interest based on the map generating an index the index associating the at least one of the one or more applications to the one or more applications of interest and storing the index in computer readable memory receiving a user selection of a particular application of the one or more applications retrieving the one or more applications of interest based on the particular application using the generated index and providing the one or more applications of interest for display.

Other embodiments of these aspects include corresponding systems apparatus and computer programs configured to perform the actions of the methods encoded on computer storage devices.

These and other embodiments may each optionally include one or more of the following features. For instance the mapping of the query log includes for each of the one or more applications one or more of a number of clicks a number of installs and a position within a list of search results for a particular query the map includes an association of each query of one or more queries to at least one of the one or more applications for the at least one of the one or more applications identifying one or more applications of interest based on the map includes calculating a normalized weight corresponding to a first application of the one or more applications and a second application of the one or more applications determining that the normalized weight is greater than a threshold normalized weight and in response to determining that the normalized weight is greater than the threshold normalized weight identifying the second application as an application of interest relative to the first application the normalized weight is calculated based on a total weight of the first application and a total weight of the second application the total weight of the first application is calculated based on a number of clicks and a number of installs associated with the first application and the total weight of the second application is calculated based on a number of clicks and a number of installs associated with the second application the number of clicks is weighted relative to the number of installs the normalized weight is calculated based on a co weight of the first application and the second application the co weight is calculated based on a weight of the first application and a weight of the second application for the at least one of the one or more applications identifying one or more applications of interest based on the map includes calculating a first normalized weight corresponding to a first application of the one or more applications and a second application of the one or more applications calculating a second normalized weight corresponding to the first application of and a third application of the one or more applications determining that the first and second normalized weights are each greater than a threshold normalized weight and in response to determining that the first and second normalized weights are greater than the threshold normalized weight identifying the second application and the third application as being applications of interest relative to the first application the actions further include determining that the first normalized weight is greater than the second normalized weight in response to determining that the first normalized weight is greater than the second normalized weight defining a rank order that ranks the second application higher than the third application receiving user input corresponding to the first application in response to receiving the user input transmitting information associated with the second application and the third application for display to the user and transmitting instructions that when executed cause the information associated with the second application to be displayed based on the rank order generating the map further includes cleaning each query to provide a plurality of cleaned queries generating the map further includes providing a plurality of hash functions each hash function corresponding to a query of a plurality of queries each query corresponding to one or more of the one or more applications the actions further include receiving a search query generating search results based on the search query the search results corresponding to the one or more application and transmitting the search results for display to a user the actions further include receiving user input the user input indicating a selection of a search result from the search results the search result corresponding to an application of the one or more applications in response to receiving the user input accessing the index to identify at least one application of interest that is deemed to be potentially of interest to users in view of the application and transmitting information corresponding to the application and the at least one application of interest for display to the user.

The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other potential features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

This specification describes systems and methods for identifying one or more applications as being potentially of interest to users in view of a selected application within an application marketplace. In some implementations the users of computing devices e.g. mobile computing devices can search for executable applications in an application marketplace and can download and install these applications on the computing device. However the users may often find it cumbersome to search through the application marketplace to discover other applications that can be suggested in view of a selected application.

A degree of correspondence between a selected application and a target application is based on query log data. If the degree of correspondence between the selected application and the target application is sufficient the target application is suggested e.g. potentially of interest to a user in view of the selected application. For example applications that can be used for the same or similar purpose can be suggested in view of the other even though there may be no other direct correlation e.g. same developer between the applications.

In some implementations a user can search for applications that are available through the application marketplace by entering search terms into a query field provided in a user interface of the application marketplace. A resultant query can be transmitted to the application marketplace which searches available applications to identify one or more applications that correspond to the query. The application marketplace can return a listing of the one or more applications to the computing device. The user can then select an application from the listing displayed on the computing device. In response to the user selection detailed information regarding the selected application can be presented to the user via the computing device. Further a list of one or more suggested applications in view of the selected application can also be displayed to the user in response to the user selection as discussed in further detail below. The user can initiate installation of the selected application on the computing device.

Information relating to the search queries the selection of the applications for display of detailed information application installations application content application ratings and the like can be stored in a database. The information can account for the search queries requests for detailed information and installations of multiple users across multiple devices. As discussed in further detail below application information can be processed to identify applications as suggested applications in view of a selected application. Suggested applications can be displayed in the application marketplace as being suggested applications in view of a selected application.

In the example system the computing devices A D are illustrated as mobile computing devices the computing device E is illustrated as a desktop type computing device and the computing device F is illustrated as a laptop type computing device. It is appreciated however that the computing devices A F can each include any type of computing device such as a desktop computer a laptop computer a handheld computer a personal digital assistant PDA a cellular telephone a network appliance a camera a smart phone an enhanced general packet radio service EGPRS mobile phone a computing tablet device a media player a navigation device an email device a game console or a combination of any two or more of these data processing devices or other data processing devices.

The computing devices A F enable the respective users A F to interact with an application marketplace. An example application marketplace includes Google Play formerly known as the Android Market provided by Google Inc. In some implementations the application marketplace can include a website that is hosted on one or more servers e.g. the server system and that is accessed using a computing device e.g. computing devices A F . In some implementations the application marketplace can be provided as an application that is executed on a computing device e.g. computing devices A F and that retrieves application information from one or more servers e.g. the server system .

The application marketplace can advertise applications that are available for download to and installation on one or more of the computing devices A F. For example the user A of the computing device A can interact with the application marketplace to view and or find applications of interest. For example the user A can input a search query to the application marketplace. The search query can be processed e.g. by one or more server systems hosting or otherwise providing data to the application marketplace to identify one or more applications corresponding to the search query. Information corresponding to the one or more applications can be transmitted to the computing device A for display to the user A. As another example the application marketplace can display categories of applications e.g. most recent applications most downloaded applications top free applications top paid applications featured applications entertainment productivity business education and the like . In response to selecting a particular category information corresponding to one or more applications within the particular category can be transmitted to the computing device A for display to the user A.

Continuing with the example above the user A can select a particular application from the one or more displayed applications to view further detail about the application and or to download and install the application to the computing device A. For example in response to user input further detail regarding a selected application can be displayed. Examples of further detail can include a description of the application user ratings of the application user reviews application screenshots as well as other applications that have been determined to be related to the selected application. As discussed in further detail herein implementations of the present disclosure are directed to determining whether two applications are related.

The user of the mobile device navigates the GUI via the display the trackball and navigations buttons and or other input means e.g. acoustic and or tactile . In some implementations the display is a touch screen display. The trackball controls a cursor that can be part of the GUI for selecting items displayed on the GUI . The navigations buttons have various implementations dependent upon the specific operating system stored on the mobile device . In some implementations the navigation button provides a previous function that returns the current state of the GUI to a previous state of the GUI the navigation button provides a menu function the navigation button provides a home function that brings the GUI to a home screen and the navigation button provides a searching function.

The mobile device stores an application marketplace application. The application marketplace application can be provided as a client side application that enables communication with an application marketplace that is provided as a back end application e.g. executed on one or more server systems . The application marketplace application provides a listing of applications to the user that are available for download to and installation on the mobile device . Specifically the user selects the application marketplace application by navigating the GUI . The user can select the application marketplace application e.g. launch the application marketplace application for execution by any means provided by the operating system stored on the mobile device . Upon the user selecting the application marketplace application the application marketplace application can display a query field in the GUI . The user can enter search terms into the query field to generate a query. The search terms can be related to a specific application the user wishes to obtain more information about including possible installation of the application on the mobile device . In some implementations the search terms relate to a specific application such as search terms Google Earth relating to the Google Earth application. In some implementations the search terms can be related to a category of applications that the user is interested in such as the search terms including Shopping in which multiple applications can relate to the search terms. The multiple applications can include among others Google Shopper and Amazon Mobile for example.

After the user enters the search terms into the query field the application marketplace application returns an updated interface to the GUI . Specifically in response to the query the GUI can include a listing of applications as search results that are identified as corresponding to the search terms. The user can select an application from the search results. In response to the selection of a specific application the application marketplace application provides an updated interface to the GUI relating to the selected application . Specifically the GUI can include an application interface including information specific to the selected application .

In some implementations a listing of applications can be displayed by the GUI in response to other user input and or a default listing of applications can be presented. For example upon selection of the application marketplace application on the mobile device a welcome screen can be displayed which includes a default listing of applications. The default listing of applications can include for example the top most searched applications or the top most installed applications. Further listings of applications can be displayed based on category. For example the user can select a particular category e.g. news books entertainment and a listing of applications corresponding to the selected category can be displayed. An application can be selected from any listing of applications or otherwise however presented on the GUI .

The application interface includes an application heading portion a tabbed portion and a content portion . The heading portion includes summary information specific to the selected application . The application specific information can include for example an application name an application developer an application icon an install status and a rating . The install status includes information relating to whether the selected application is currently installed on the mobile device . In some implementations the rating is a rating provided by the user of the mobile device when the selected application is currently installed or was previously installed on the mobile device . In some implementations the rating is a rating average provided by multiple users across multiple mobile devices.

The tabbed portion includes for example an about tab a comments tab and a similar or suggested tab . When a tab of the tabbed portion is selected by the user of the mobile device contents related to the selected tab are displayed in the content portion . When selected the about tab displays content in the content portion relating to a description about the selected application . The description is provided by a developer of the selected application . When selected the comments tab displays content in the content portion relating to comments provided by other users who have previous experience with the selected application on a respective mobile device. The comments can include text audio video and the like. Further the comments can include a rating of the selected application . When selected the similar or suggested tab displays content in the content portion related to a listing of suggested applications in view of the selected application . Specifically the similar tab displays the listing of suggested applications that have been identified as being suggested in view of the selected application as detailed further below. The listing can be provided as a scrollable list. The user of the mobile device can scroll the listing vertically such that the listing reveals additional related applications while hiding a portion of the currently displayed related applications . The listing of suggested applications can include application specific information for each suggested application such as an application name an application developer an application icon a pricing and a rating .

The query log database provides information to the co weight engine in the form of a query log. The co weight engine processes the query log to generate an index of co weights of applications e.g. a degree of correspondence between applications . The index of co weights of applications includes for each application a list of co weights of applications that are suggested in view of the application. For example a first application in the index of co weights of applications includes a corresponding first list of co weights of applications that are suggested in view of the first application and a second application in the index of co weights of applications includes a corresponding second list of applications that are suggested in view of the second application. The query log database includes information relating to queries input to the application marketplace application. The information can include for example events. Example events can include clicks or installs discussed in further detail herein. In some implementations and for a given event the query log can further include a note indicating that the event originated from a position within a list of search results for a particular query. The query log is processed to generate a first mapping of queries to a set of applications with the number of clicks and installs.

The application database stores information corresponding to the applications available for download to and installation on computing devices e.g. the mobile device of . The application database provides an initial listing of applications stored in the application database and information relating to the applications to the metadata engine . The metadata engine processes this information to provide relevant metadata corresponding to each application. The metadata can include for example application name developer name rating the price category whether an application is of a particular content e.g. adult content and the like. The metadata engine provides the metadata of the applications to the suggested applications engine .

The suggested applications engine receives the initial listing of applications stored in the application database and associated metadata from the metadata engine and the index of co weights of applications from the co weight engine . In some implementations the application database provides the initial listing of applications to the suggested applications engine . The suggested applications engine removes application pairs from the initial listing of applications that are not identified as suggested based on the metadata to generate a filtered listing of application pairs. The suggested applications engine processes the filtered listing of application pairs in view of the index of co weights of applications to generate an index of suggested applications as discussed in further detail below. The suggested applications engine provides the index of suggested applications to the suggested applications database . The suggested applications database stores the index of suggested applications. The suggested applications database makes the index of suggested applications available to the application marketplace.

To generate the index of co weights of applications the co weight engine determines the co weights between application pairs based on information provided from the query log database . As discussed above information e.g. events in the query log database can be processed to provide the first mapping relating each query Q to the applications App that were identified as being a search result of the query. The first mapping further includes for each application of each corresponding query a number of clicks C and a number of installs I of the application. For example the query Qof the first mapping generated search results that included App1 and App2 i.e. when users entered the query Q App1 and App2 were presented as search results corresponding to the query Q . App1 includes a corresponding number of clicks C and a corresponding number of installs I that resulted from App1 being a search result of the query Q. Likewise App2 includes a corresponding number of clicks C and a corresponding number of installs I that resulted from App2 being a search result of the query Q. As used herein a click indicates that a searching user at least clicked on the application from the search results to garner more information regarding the application. As used herein an install indicates that a searching user actually downloaded and installed the application.

The co weight engine generates a hash for each of the queries Q of the first mapping to generate a second mapping from the query hashes to the applications. For each application of each query the co weight engine determines a weighting for each application based on the number of clicks and the number of installs to generate a third mapping from the query hashes to the applications. The co weight engine determines the total weight for each application across each of the query hashes determines co weights for each application pair and normalizes the co weights for each application pair. If the normalized weight of a particular application pair is above a threshold the co weight engine includes the normalized weight for the particular application pair in the index of co weights of applications. If the normalized weight of the particular application pair is less than the threshold the co weight engine does not include the normalized weight of the particular application pair in the index of co weights of applications.

An example of generating a first mapping is provided below. The co weight engine generates the first mapping e.g. the first mapping from the queries Q to the applications App that are provided as search results in response to the respective query based on information provided from the query log database . For simplicity of description the present example includes four queries Q Q however the example applies to any number of queries. Specifically for each unique query Q a mapping is generated to applications Appm provided as search results of the corresponding query. In example the queries are mapped to the applications as follows 

For each application m provided in response to query n Cindicates the total of times the application m was clicked on and Iindicates the total number of times the application m was installed on devices e.g. mobile computing devices . A click of an application or otherwise selection of the application by the user includes displaying detailed information regarding the clicked on application to the user.

The co weight engine cleans the queries and generates a hash for each of the queries of the first mapping to provide a second mapping from the query hashes to the applications. In some implementations cleaning of the queries can include removing punctuation from queries reordering search terms of the queries removing duplicate terms in the search queries and the like. Continuing with the example above the second mapping can be provided as follows 

For each application of each hash the co weight engine determines a weighting based on the number of clicks and the number of installs to provide a third mapping. Specifically the co weight engine determines the weight w for each application Appm . In some implementations the weight can be determined in accordance with the following relationship 

The variable alters the weighting applied to the number of installs for the application. In some implementations the value of can be greater than 1 such that the number of installs of the application is weighted more heavily than the number of clicks for the application. The third mapping can be provided as follows 

The co weight engine determines the total weight for each application across each of the query hashes. The co weight engine sums the squares of each weight for the applications across all of the query hashes. Specifically the total weight for each application can be determined based on the following relationships App1 App2 App3 

The co weight engine determines co weights for each application pair. The co weight awcan be determined based on the following relationship sum where x 1 . . . m y 1 . . . m and i 1 . . . n. By way of non limiting example the co weight awbetween App1 and App2 can be determined as 

However in the current non limiting example the weights wand ware zero i.e. weights wand ware not present in the current non limiting example . Thus the co weight awbetween App1 and App2 is 

Continuing with the present example the co weight engine determines the co weights for each application to be as follows 

The co weight engine normalizes the co weights for each application pair. The normalized co weights are as follows 

In some implementations the normalized weight is a factor identifying a degree to which applications in an application pair are related. The normalized weight for each application pair can be considered a score and can be compared to a threshold normalized weight. If the normalized weight for a particular application pair is above the threshold normalized weight the co weight engine outputs the co weight of the particular application pair in the index of co weights of applications. If the normalized weight for the particular application pair is less than the threshold normalized weight the co weight engine does not output the co weight of the particular application pair in the index of co weights of applications. In an example if nwis greater than a threshold nw the co weight engine includes the co weight nwin the index of co weights of applications. If however nwis less than the threshold nw the co weight engine does not include the co weight nwin the index of co weights of applications.

The co weight engine generates the index of co weights of applications based on the normalized co weights that have a normalized weight above the threshold normalized weight. As discussed above the index of co weights of applications includes for each application a list of co weights of applications that are above the threshold normalized weight. Continuing with the example above App1 would include a corresponding list of co weights of suggested applications which list includes the normalized co weights of App2 and App3. App2 would include a corresponding list of co weights of suggested applications which list includes the normalized co weights of App1 and App3 would include a corresponding list of co weights of suggested applications which list includes the normalized co weight of App1.

The suggested applications engine receives the initial listing of applications stored in the application database and associated metadata and the index of co weights of applications. The metadata can include filter metadata and or scoring metadata. The filter metadata includes metadata used to filter e.g. remove application pairs from the initial listing of applications as described in detail below. The scoring metadata includes metadata used to determine in conjunction with the normalized co weight an overall score of the application pair for identifying either application of the applications of an application pair as suggested in view of selection of the other application as described in detail below. More specifically the scoring metadata can be used to generate a metadata score as discussed in further detail below. Certain metadata can be provided as both filter metadata and scoring metadata i.e. can be used for both filtering and score calculation .

In some implementations the suggested applications engine compares the filter metadata of applications in the initial listing of applications to generate a filtered listing of application pairs. If the filter metadata of the applications of a particular application pair correspond the related applications engine includes the particular application pair in the filtered listing of application pairs. If the filter metadata of the applications of the particular application pair do not correspond the related applications engine does not include the particular application pair in the filtered listing of application pairs. Further in some implementations if the filter metadata of any application of the particular application pair is not above a threshold described in detail below the application pair is removed from the filtered listing of application pairs.

Filter metadata can include for example category metadata content metadata title metadata description metadata install metadata rating metadata locale metadata and developer score metadata. In some implementations the category metadata of applications of a particular application pair in the initial listing of applications can be compared. If it is determined that the applications correspond to the same category e.g. games entertainment educational the particular application pair is included in the filtered listing of application pairs. If however it is determined that the applications do not correspond to the same category the particular application pair is not included in the filtered listing of application pairs.

The content metadata can indicate particular content of an application. In some implementations the application content can include adult content for example. The content metadata of applications of a particular application pair in the initial listing of applications stored in the application database can be compared. If it is determined that the applications correspond to the same content e.g. adult content the particular application pair is included in the filtered listing of application pairs. If however it is determined that the applications do not correspond to the same content the particular application pair is not included in the filtered listing of application pairs. For example the content metadata of a first application in a particular application pair can indicate that the first application includes adult content and the content metadata of a second application in the application pair can indicate that the related application does not include adult content. As a note although an application marketplace can exclude applications including pornographic content applications including content that may be deemed to be racy e.g. applications including content related to lingerie and or content related to erotic novels or other adult themes can still be available from the application marketplace. Continuing with the above example a comparison of the content metadata of the applications reveals that the content of the applications is different i.e. the first application includes adult content and the second application does not include adult content . Consequently the application pair is not included in the filtered listing of application pairs.

The title metadata of applications can be processed. The title metadata includes the title of the application that can be displayed to the user for example as application name or both shown in . If it is determined that at least one of the applications of a particular application pair includes an empty title e.g. the title is blank the particular application pair is not included in the filtered listing of application pairs.

The description metadata of applications can be processed. The description metadata includes information relating to a description of the application that can be displayed to the user. The description metadata can be provided by the developer of the application. If it is determined that at least one of the applications of a particular application pair includes an empty description e.g. the description is blank the particular application pair is not included in the filtered listing of application pairs.

The install metadata of applications can be processed. In some implementations the install metadata includes the total number of installations of the application across multiple computing devices e.g. computing devices . If it is determined that the number of installs of at least one of the applications of a particular application pair is below a minimum number of installs the application is not included in the filtered listing of applications. In some implementations the install metadata includes an uninstall ratio of the application. The uninstall ratio is the number of uninstalls of the application per the number of installs of the application e.g. after install of the application the user uninstalls the application . If it is determined that the uninstall ratio of at least one of the applications of a particular application pair is above a maximum uninstall ratio the application pair is not included in the filtered listing of applications.

The rating metadata of applications can be processed. In some implementations the rating metadata includes a number of ratings of the application. For example the number of ratings is the total number of individual ratings associated with the application provided by users e.g. the users of the application. If it is determined that the total number of ratings of at least one of the applications of a particular application pair is below a minimum number of ratings the particular application pair is not included in the filtered listing of application pairs. In some implementations the rating metadata includes the average rating of the application. The average rating of the application can be across any subset or all of users of the application. If it is determined that the average rating of at least one of the applications in a particular application pair is below a minimum average rating the application pair is not included in the filtered listing of application pairs.

The locale metadata of applications can be compared. The locale metadata indicates data relating to geographic regions where the application is supported. In some implementations the locale can indicate a country where the application is supported for example China or the United States. In some implementations the locale can indicate languages into which the application has been translated. For example a given application can be provided in English and German. If the locale information of applications of a particular application pair indicates an overlap the application pair is included in the filtered listing of application pairs. For example if it is determined that the applications include a language overlap e.g. both applications are provided in English and or a country overlap e.g. both applications are available in the United States the applications are deemed to correspond to the same locale and the corresponding application pair is included in the filtered listing of application pairs. If however it is determined that the applications do not correspond to the same locale the corresponding application pair is not included in the filtered listing of application pairs.

The developer score metadata of applications can be compared. The developer score can relate to a rating associated with the developer of the application. For example the developer rating can be based on historical ratings of applications provided by the developer or an average rating of applications provided by the developer. If it is determined that the developer score of at least one of the applications of a particular application pair is below a minimum score the application pair is not included in the filtered listing of application pairs.

In some implementations the suggested applications engine processes the scoring metadata of application in applications pairs to generate a metadata score ms . Specifically the suggested applications engine compares the scoring metadata of the applications in the application pairs to generate the metadata score. The suggested applications engine combines the normalized weight and the metadata score of the applications in the application pairs to provide an overall score as discussed in further detail below. The scoring metadata can include for example title metadata description metadata and permission metadata.

The title metadata of applications in a particular application pair can be processed and a corresponding similarity score can be generated. Specifically a similarity of the text of the title metadata of the applications is compared to generate a title similarity score.

The description metadata of applications in a particular application pair can be processed and a similarity score discussed in further detail below can be generated. Specifically a similarity of the text of the description metadata of the applications is compared to generate a description similarity score. The title metadata and the description metadata of the applications in a particular applications pair can be processed and similarity scores can be generated. For example title metadata of one application and description metadata of another application can be processed to generate a title description similarity score. The permissions metadata of the applications in a particular application pair can be processed and a corresponding similarity score can be generated. The permissions metadata can include data related to permissions by the applications to accesses APIs Application Programming Interface of computing devices e.g. the mobile device such as the global positioning system GPS API or the API of a camera flash.

By way of non limiting example the metadata score ms for each application pair Appu Appv can be provided using the following relationship ConceptSimiliarity TitleSimilarity TitleDescriptionSimilarity TitleDescriptionSimilarity DescriptionSimilarity PermissionSimilarity TitleSimilarity It is contemplated however that other relationships can be used to determine the metadata score.

The ConceptSimilarityis the concept similarity score based on text associated with each of the applications. For example important words in a document e.g. the description of an application can be extracted and expanded to determine the most similar words based on search patterns. For small documents the expansion can be done directly. The concept similarity score for the documents is defined as a weighted sum of these concepts where each concept is represented by a list of words.

The TitleSimilarityis the title similarity score based on the similarity of the text of the title metadata between the applications u and v. The TitleDescriptionSimilarity is the title description similarity score based on the similarity of the text of the title metadata of application u and the text of the description metadata of application v. The TitleDescriptionSimilarity is the title description similarity score based on the similarity of the text of the title metadata of application v and the text of the description metadata of application u. The DescriptionSimilarityis the description similarity score based on the similarity of the text of the description metadata between the applications u and v. The PermissionSimilarityis the permission similarity sore based on the similarity of the permissions metadata between the applications u and v. The variables k kalter the weighting applied to the respective metadata scores that the variable is associated with.

In an example the final related applications engine multiplies the metadata score ms with the square of the normalized weight nw to generate an overall score os for a pair of applications. The overall score can be provided as follows where u 1 . . . m and v 1 . . . m. It is contemplated however that other relationships can be used to determine the overall score. The metadata score ms can be a calculation of any combination of the metadata scores e.g. title description permissions .

The suggested applications engine can then compare the overall score for each application pair of the filtered listing of application pairs to an overall score threshold. The suggested applications engine can then determine whether the applications in the application pair are sufficiently similar based on the overall score such that an application of the application pair can be identified as suggested in view of selection of the other application of the application pair in the index of suggested applications. If the overall score is above the overall score threshold the suggested applications engine determines that an application of the application pair can be identified as suggested in view of selection of the other application of the application pair. If the overall score is less than the overall score threshold the suggested applications engine determines that an application of the application pair cannot be identified as suggested in view of selection of the other application of the application pair. In some implementations the suggested applications engine generates the index of suggested applications based on the applications pairs that have an overall score above the overall score threshold.

In some implementations the overall score can be used to rank suggested applications for display. By way of non limiting example the suggested applications engine determines that App2 and App3 are identified as suggested application in view of App1 based on the osand os respectively. In response to a user request to display applications that are suggested in view of App1 App2 and App3 can be displayed in a ranked order based on the overall scores for each application pair. For example if the overall score osis greater than the overall score os App2 will be displayed higher in the ranked order than App3.

The suggested applications engine provides the index of suggested applications to the suggested applications database . The suggested applications database stores the index of suggested applications shown as mapping . The suggested applications database makes the index of suggested applications available to the application marketplace.

A query log is received . The total weight twis determined for each application m across all of the hashes . For example the total weight twcan be determined as the sum of the squares of each weight for the application m across all of the hashes. The co weight awis determined for each application pair . The normalized weight nwof the co weight awis determined for each application pair . The index of co weights of applications is generated based on the co weight awfor each application pair. For example the index of co weights of applications is based on the applications pairs that have a normalized weight above the threshold normalized weight.

A listing of applications is received . For example the initial listing of applications stored in the application database can be received. Application metadata is received . The application metadata can include filter metadata and content metadata. Filter metadata can include for example category metadata title metadata description metadata install metadata rating metadata locale metadata and developer score metadata. Application pairs in the initial listing of applications are filtered based on the filter metadata generating a filtered listing of application pairs . For each applications pair of the filtered listing of application pairs a metadata score ms is calculated based on the scoring metadata . For each applications pair of the filtered listing of application pairs an overall score os is calculated based on the normalized weight nw and the metadata score ms .

The index of suggested applications is generated . For example for each applications pair of the filtered listing of application pairs the overall score is compared to a threshold overall score. If the overall score of the applications pair is greater than the threshold overall score the applications in the applications pair are included in the index of suggested applications. If the overall score of the applications pair is not greater than the threshold overall score the applications in the applications pair are not included in the index of suggested applications.

A search query is received . The search query can include search terms related to a specific application or a category of applications. Search results are generated . The search results can include a listing of applications that are identified as corresponding to the search terms. The search results are transmitted for display . The search results can be displayed on a mobile computing device e.g. the mobile computing device . User input is received indicating a selection of an application from the search results . Application data is retrieved . For example the application data is retrieved in response to the user selection of the application. Suggested application s data is retrieved . The suggested application s data correspond to applications that are identified as suggested in view of the selected application. The application data and suggested application s data is transmitted for display . This data can be displayed on a mobile computing device e.g. the mobile computing device .

Implementations of the present disclosure and all of the functional operations provided herein can be realized in digital electronic circuitry or in computer software firmware or hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Implementations of the present disclosure can be realized as one or more computer program products i.e. one or more modules of computer program instructions encoded on a computer readable medium for execution by or to control the operation of data processing apparatus. The computer readable medium can be a machine readable storage device a machine readable storage substrate a memory device a composition of matter effecting a machine readable propagated signal or a combination of one or more of them. The term data processing apparatus encompasses all apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them.

A computer program also known as a program software software application script or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this disclose can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. Elements of a computer can include a processor for performing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio player a Global Positioning System GPS receiver to name just a few. Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user implementations of the present disclosure can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

While this disclosure includes some specifics these should not be construed as limitations on the scope of the disclosure or of what may be claimed but rather as descriptions of features of example implementations of the disclosure. Certain features that are described in this disclosure in the context of separate implementations can also be provided in combination in a single implementation. Conversely various features that are described in the context of a single implementation can also be provided in multiple implementations separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Thus particular implementations of the present disclosure have been described. Other implementations are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results. A number of implementations have been described. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure. For example various forms of the flows shown above may be used with steps re ordered added or removed. Accordingly other implementations are within the scope of the following claims.

