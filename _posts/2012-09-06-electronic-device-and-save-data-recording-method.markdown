---

title: Electronic device and save data recording method
abstract: A virtual capacity acquisition unit acquires a size of virtual capacity of a save data area from an application. A storage capacity acquisition unit acquires a size of save data of the application. A writing control unit prohibits the application from writing the save data exceeding the virtual capacity in a recording device. A free space acquisition unit acquires a size of free space of the recoding device, and the writing control unit prohibits the writing of save data whose size is larger than that of the free space.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09003147&OS=09003147&RS=09003147
owner: Sony Computer Entertainment Inc.
number: 09003147
owner_city: Tokyo
owner_country: JP
publication_date: 20120906
---
By storing saving the progress status of game play in a recording device a user can later play a game starting from where the user left off last time using game data stored in the recording device. Conventionally game devices have been suggested for the purpose of preventing easy duplication of save data that add status information indicating the status of an execution environment of a game program to game data at the time of saving the game data and that determine whether the current status information matches the status information added to the save data at the time of loading the save data.

Game programs are distributed and sold in the form of a recording medium. Conventionally since a game program is recorded in a ROM medium save data cannot be written in a recording medium. However a writable recording area when provided in a recording medium in which a game program is recorded allows save data to be written. With the development of the Internet in recent years an environment has been arranged where game programs are distributed to user terminal via the Internet from game servers. Game makers can then sell game programs that were sold in the form of a recording medium in the beginning by distributing the game programs form the game servers.

A game program downloaded onto a user terminal is installed in a large capacity recording device. Thus capacity that can be used for a game to record save data necessarily increases. However if save data is attempted to be recorded substantially without any limitation in a large capacity recording device for a game installed originally in a recording medium it is not sure whether the game will operate in a normal way. Therefore it is necessary for the game maker to remaster download type game programs in this case. This remastering imposes a burden on the game maker. Therefore regardless of whether the game programs are of recording medium type or download type it is desirable to be able to sell the same game programs without performing remastering.

In this background a purpose of the present invention is to provide a technology for managing a recording area used by an application.

An electronic device according to one embodiment of the present invention comprises an execution unit configured to execute an application a first acquisition unit configured to acquire a size of virtual capacity of a save data area from the application a second acquisition unit configured to acquire a size of save data of the application recorded in a recording device and a writing control unit configured to prohibit the application from writing the save data exceeding the virtual capacity in the recording device.

Another embodiment of the present invention relates to a save data recording method. This method comprises acquiring a size of virtual capacity of a save data area from an application acquiring a size of save data of the application recorded in a recording device and prohibiting the application from writing the save data exceeding the virtual capacity in the recording device.

Optional combinations of the aforementioned constituting elements and implementations of the invention in the form of methods apparatuses systems recording mediums and computer programs may also be practiced as additional modes of the present invention.

The invention will now be described by reference to the preferred embodiments. This does not intend to limit the scope of the present invention but to exemplify the invention.

An explanation is given regarding the exterior configuration and circuit configuration of an electronic device according to the present exemplary embodiment. The electronic device shown in the following is a portable game device. However the electronic device may be a portable terminal device of other types. An electronic device may be a console type terminal device as well as a portable terminal device.

A triangle button a circle button a cross button and a square button each located at a vertex of a rhomboid hereinafter generically referred to as operation buttons are provided on the right side of the touch panel . An up key a left key a down key and a right key hereinafter generically referred to as directional keys are provided on the left side of the touch panel . The user can input eight directions up down left and right directions and oblique directions by operating the directional keys . A left stick is provided below the directional keys and a right stick is provided below the operation buttons . The user tilts the left stick or the right stick hereinafter generically referred to as analog sticks so as to input a direction and the amount of a tilt. An L button and an R button are provided at the left and right top of the housing respectively. The operation buttons the directional keys the analog sticks the L button and the R button form operation means operated by the user.

A front camera is provided near the operation buttons . A left speaker and a right speaker that output sounds hereinafter generically referred to as speakers are provided on the left side of the left stick and on the right side of the right stick respectively. A HOME button is provided below the left stick and a START button and a SELECT button are provided below the right stick

A game card slot is a slot for inserting a game card. In the figure the game card slot covered by a slot cover is shown. An LED lamp that flashes when the game card is being accessed may be provided near the game card slot . An accessory terminal is for connecting peripheral devices accessories . In the figure the accessory terminal is shown being covered by a terminal cover. A negative button and a positive button for adjusting the volume are provided between the accessory terminal and the R button

A CPU Central Processing Unit executes a program or the like loaded in a main memory . A GPU Graphics Processing Unit performs calculation necessary for image processing. The main memory is configured with RAM Random Access Memory or the like and stores a program or data used by the CPU . A storage is configured with a NAND type flash memory or the like and used as a built in auxiliary storage device.

A motion sensor detects the behavior of the electronic device and a terrestrial magnetism sensor detects terrestrial magnetism in a triaxial direction. A GPS control unit receives a signal from a GPS satellite and calculates a current position. The front camera and the rear camera each capture an image and input image data. The front camera and the rear camera are configured with a CMOS image sensor Complementary Metal Oxide Semiconductor Image Sensor .

The display device is an organic EL display device and has a light emitting device that emits light by applying voltage to the cathode and anode thereof. During a power saving mode a voltage that is smaller than usual is applied between the electrodes such that the display device is in a dimmed light state. Thus power consumption can be cut. The display device may be a liquid crystal panel display device provided with a backlight. During the power saving mode the amount of light of the backlight is reduced such that the liquid crystal panel display device is in a dimmed light state. Thus power consumption can be cut.

In an interface an operation unit includes various operation means provided in the electronic device . More specifically the operation unit includes the operation buttons the directional keys the analog sticks the L button the R button the HOME button the START button the SELECT button the power button the negative button and the positive button . The front touch pad and the rear touch pad are multi touch pads and the front touch pad is arranged being overlaid on the surface of the display device . The speakers output a sound created by the functions of the electronic device and the microphone inputs a sound from around the electronic device . The sound input and output terminal inputs a stereo sound from the external microphone and outputs the stereo sound to an external headphone or the like.

A game card in which a game file is recorded is inserted into the game card slot . The game card has a data writable recording area. When the game card is placed in the game card slot data is written or read by a media drive. A memory card is inserted into the memory card slot . The memory card when placed in the memory card slot is used as an external auxiliary storage device. The multi use terminal can be used as a USB terminal and exchanges data with another USB device when the USB cable is connected to the multi use terminal . To the accessory terminal a peripheral device is connected.

The electronic device according to the present exemplary embodiment executes an application and records save data generated by the application in a recording device. An explanation is given regarding a case where the electronic device is a game device for executing a game in the following. The electronic device may execute applications other than a game. In the present exemplary embodiment the save data is data stored by an application and includes data that indicates the progress of game play high score information character data edited by the user and the like if the electronic device is a game device.

The electronic device according to the present exemplary embodiment is capable of executing game programs recorded in two types of recording devices. A first game program is recorded in the game card . When the game card is placed in the game card slot the electronic device reads the game program into the main memory and executes the game program. A second game program is recorded in the memory card . This game program is downloaded onto the memory card by the wireless communication module or the mobile phone module from a game server connected on the Internet and then installed. The electronic device reads the game program from the memory card into the main memory and executes the game program. In the present exemplary embodiment the first game program and the second game program may be a common program. The respective recording devices in which the first game program and the second game program are installed are different.

The first game program is distributed and sold in the form of a game card . The game card may be of a cartridge type. In most cases a single game program is installed therein. The first game program generates save data during the execution thereof and stores the save data in a writable recording area provided in the game card . There are various types of game cards such as those with a recording area having a capacity of 100 MB megabytes 200 MB 400 MB or the like. For example if the user is allowed to generate save data of up to 150 MB in total for a game a game card of 200 MB or larger is used. The game maker creates a virtual environment that is the same as the game card to conduct a confirmation test to see whether the game program operates properly. After the game program is confirmed to operate properly the game program is installed in a game card and sold.

A game title is sometimes sold as a second game program through a game server by the game maker or publisher after the same game title is sold in the form of a game card . As previously described the second game program is downloaded onto the memory card from the game server. The memory card has a storage capacity of e.g. tens of GB gigabytes . Other game programs files such as pictures and moving images taken by the user and the like are sometimes recorded therein. In general the memory card often has large free space available memory . Therefore the size of free space of the memory card is normally larger than that of the free space in the recording area prepared for the game card in respect of a game program.

If the second game program is allowed to store save data according to the size of the free space of the memory card the second game program operates in a state different from the state in which operation check is performed for the first game program. For example if the second game program is allowed to store save data substantially without any limitation as long as there is enough free space in the memory card when the first game program is allowed to store only up to 100 save data items in the game card the operation check needs to be performed again since no such operation check has been performed at the time of selling the first game program.

In other words if a game program that has been installed in the game card is directly installed in the memory card through the game server and if the game program attempts to save huge amount of save data in the memory card the operation of the game program cannot be guaranteed. Therefore the game maker needs to perform remastering. This work is a burden. Thus a mechanism is preferably provided that allows the same game program to properly operate without being affected by the volume of free space of a destination for storing save data regardless of whether the game program is installed in the game card or installed in the memory card .

Meanwhile since the recording area of the memory card is used by various applications there might be a situation where the volume of the free space of the memory card becomes extremely small. Thus if the volume of the free space of the destination for storing the save data is insufficient it is also necessary to provide a mechanism for prohibiting or adjusting the recording of the save data performed by the game program. An explanation is given in the following regarding a technique for managing save data in the present exemplary embodiment.

The execution processing unit is provided with an OS execution unit and an application execution unit . The OS execution unit provides a function and an environment for efficiently using the electronic device and executes an operating system hereinafter simply referred to as OS Operating System that controls the entire device in an integrated manner. The OS provides an API processing module that realizes a function of an API Application Programming Interface to be provided to a game program.

In the exemplary embodiment the API processing module is configured by preparing a program for writing save data in a recording device as a library hereinafter referred to as save data utility and by calling a save data utility function by the game program. When the game program calls an API processing module for saving the API processing module stores the save data in the recording device . The recording device is the game card or the memory card . Information indicating whether to store the save data in the game card or in the memory card is written in an accompanying configuration file of the game program and the API processing module determines a destination for writing the save data in reference to the information. Normally save data is written in the game card if a game program installed in the game card is executed and save data is written in the memory card if a game program installed in the memory card is executed.

An explanation is given in the following regarding the outline of a plurality of types of save processing and load processing in the electronic device . The API processing module is configured in the OS by preparing a save data utility function for each save processing and load processing shown in the following and by calling a save data utility function required by a game program.

In list selection type processing a list of a plurality of save data items specified by an application is displayed and an item of save data selected by the user is saved loaded deleted after requesting the user an acknowledgement if necessary.

In fixed type processing save data specified by the application is saved loaded deleted after requesting the user an acknowledgement if necessary.

In auto type processing save data specified by the application is saved loaded deleted without any notification or acknowledgement to the user.

The application execution unit reads a game program from the game card or the memory card into the main memory and starts a game. Shown below is processing performed when the application execution unit executes a game program installed in the memory card . The same processing is also performed when the application execution unit executes a game program installed in the game card .

The OS execution unit has a virtual capacity acquisition unit a storage capacity acquisition unit a free space acquisition unit a writing control unit and a display processing unit and manages writing of save data by an application. These features alone or in combination provide a plurality of API processing modules for an application. When the application calls a save data utility function for the OS execution unit the OS execution unit starts a called API processing module. The API processing module may be started when the application is started. Alternatively the API processing module may be started when the application makes a request for writing save data.

An application according to the present exemplary embodiment has a function of declaring for an API processing module an upper limit value of a save data area to be used hereinafter also referred to as virtual capacity . The virtual capacity of a save data area indicates the maximum data amount of save data stored by the application and save data exceeding the declared virtual capacity cannot be recorded by the application. The API processing module has a function of prohibiting the recording of save data if the save data exceeding the virtual capacity declared by the application is attempted to be recorded. The API processing module has a function of prohibiting or adjusting the recording if the storage capacity of the recording device serving as a destination for saving is smaller than the data amount of save data to be recorded.

In the OS execution unit the virtual capacity acquisition unit acquires the size of the virtual capacity of the save data area from the application. The size of virtual capacity is written in an application s configuration file or the like and is set for each application. Although the application declares the virtual capacity of the save data area the application does not reserve a physical recording area in the recording device . Therefore for example even if a free space of the recording device is 100 MB when the application declares a virtual capacity to be 200 MB the application does not reserve a recording area of 200 MB. Thus the application can be executed without problems.

The storage capacity acquisition unit acquires the volume of save data stored in the past in the memory card by the application. This allows the writing control unit to obtain by calculation the data amount of save data that can be stored by the application. For example when the declared virtual capacity is 200 MB while the amount of the save data recorded in the past is 150 MB the writing control unit recognizes that the application can record additional save data of 50 MB in the memory card . In this case if the amount of data to be saved is 50 MB or less when the writing control unit receives a request for writing the save data from the application the writing control unit writes the save data in a predetermined area of the memory card .

On the other hand if the total record volume data size of the save data exceeds the size of the virtual capacity due to the writing of the save data when the writing control unit receives the request for writing the save data from the application writing control unit prohibits the writing of the save data. For example upon the receipt of a request for writing save data of more than 1 MB when the declared virtual capacity is 200 MB while the amount of the save data already recorded in the memory card is 199 MB the writing control unit prohibits the writing of the save data into the memory card and returns an error code to the application indicating that the save data cannot be saved due to an insufficiency of virtual capacity. This allows the writing control unit to keep the record volume of the save data of the application to be within the range of the virtual capacity.

Furthermore in the OS execution unit according to the present exemplary embodiment the free space acquisition unit acquires the size of free space of the memory card . The writing control unit prohibits the writing of save data whose data size is larger than the size of the free space of the memory card . For example upon the receipt of a request for writing save data of more than 1 MB when the free space of the memory card is only 1 MB the writing control unit prohibits the writing of the save data into the memory card and returns an error code to the application indicating that the save data cannot be saved due to an insufficiency of free space.

The display processing unit may display on the display device a message indicating that the volume of the free space of the memory card becomes insufficient if the writing control unit receives a request for writing save data whose data size is larger than that of the free space of the memory card . The application execution unit temporarily stops the game at this time and the user deletes data that is unnecessary in the recording device . Then when the application execution unit resumes the game the writing control unit can write the save data in the memory card since an insufficiency of free space in the memory card has been resolved. As described the display processing unit displays an error message and the deletion of data by the user etc. are carried out in the system. Therefore the application does not need to have a function related to an insufficiency of free space in the memory card .

The display processing unit of the system may display an error message. Alternatively the application may display an error message. In the case where there is an insufficiency of free space the writing control unit returns to the application both an error code indicating the insufficiency of free space and the amount of a shortage of space in the memory card . The application has a fixed phrase for notifying the user of an insufficiency of free space. The application puts the actual amount of the shortage of space into the fixed phrase and displays an error message. This fixed phrase includes an announcement containing a procedure for the user to delete data of the memory card . In accordance with the announcement the user may suspend the application go back to a home screen image of a system and delete other content files other applications etc. so as to reserve the size of the free space of the memory card .

The application may guide the deletion of save data if the size of free space has become insufficient. As described later save data is managed in units of slots and the user deletes the save data by deleting slots so that the size of the free space of the memory card can be reserved.

If it is not preferred to temporarily stop the game the writing control unit may overwrite save the save data in the memory card . In reference to the generation date and time of the save data the writing control unit overwrites save data having the oldest generation date and time at this time. In particular it is not preferred to temporarily stop the game if the writing control unit auto saves the save data without user s instruction. Therefore if there is an insufficiency of free space in the memory card new save data can be recorded in the memory card by overwriting old save data.

Described above is an explanation of a case when the application execution unit executes an application installed in the memory card and records the save data thereof in the memory card . In the case when the application execution unit executes an application installed in the game card and records the save data thereof in the game card the OS execution unit also operates in the same way.

The writing control unit monitors a request for writing the save data from the application N in S . If there is the request for writing the save data Y in S the free space acquisition unit acquires a size of the free space of the recording device S . The writing control unit determines whether the total data size of the save data in the recording device exceeds the size of the virtual capacity by recording the save data S . If the total data size exceeds the size of the virtual capacity Y in S the writing control unit determines that a writing error has occurred S . The writing control unit returns to the application an error code indicating that saving cannot be carried out due to an insufficiency of virtual capacity. Since this is not an error occurred in the system the application does not display an error message. The application may be configured such that the application displays a message indicating that the insufficient virtual capacity will be resolved by deleting the save data of the application when the application receives the error code. Alternatively the application may display an announcement for deleting the save data. At this time the application may display the amount of data and the number of save data items that are necessary for resolving the insufficient virtual capacity. This allows the user to know how many items of save data need to be deleted.

On the other hand if the total data size of the save data does not exceed the size of the virtual capacity N in S the writing control unit determines whether the size of the free space of the recording device is sufficient S . If the size of the free space is smaller than the size of the save data requested to be written N in S the writing control unit determines that a writing error has occurred S . The writing control unit returns to the application an error code indicating that saving cannot be carried out due to an insufficiency of free space in the memory card . The application then displays an error message. The error message may be displayed by the display processing unit in the system.

On the other hand if the size of the free space is equal to or larger than the size of the save data requested to be written Y in S the writing control unit writes the save data in the recording device S . As described above record management processing of the save data is performed.

In the electronic device according to the present exemplary embodiment a mechanism can be provided where an application declares virtual capacity and where an API processing module manages the size of save data using the virtual capacity as upper limit so that the behavior of the application is not affected by the size of the free space of the recording device . The application only declares the virtual capacity and does not actually reserve a physical recording area. Thus the application does not have an influence on the use of the recording device by other applications.

In the example shown above an explanation has been given regarding a case where a game program that has been installed in the game card is later distributed through a game server. There is also a possibility that a game program distributed through a game server is later installed in the game card and sold. Even in such a case setting an upper limit value virtual capacity for a recording area that can be used by a game program ensures the operation of the game program on the game card .

In the present exemplary embodiment save data is treated in units of slots. A slot ID is assigned to each slot. An API processing module formed by the display processing unit displays information regarding save data on the display device in units of slots. The amount of data for generating slots is also added to the size of the save data. Therefore the value of the virtual capacity of the save data is actually a value obtained by subtracting the amount of data for generating slots from the declared virtual capacity.

The application can view slot information by calling the display processing unit . For example a title and an update date and time of save data and the like are displayed as the slot information and save data is mapped to each slot. When the user deletes a slot corresponding save data is also deleted.

In the present exemplary embodiment an application program is configured having at least functions shows as follows 

a function of notifying the API processing module of a size of virtual capacity recorded in a configuration file 

a function of receiving a first error code when the application attempts to write the save data whose size exceeds that of the virtual capacity in the recording device 

a function of receiving a second error code when the application attempts to write the save data in the recording device having insufficient free space 

Described above is an explanation of the present invention based on the embodiments. These embodiments are intended to be illustrative only and it will be obvious to those skilled in the art that various modifications to constituting elements and processes could be developed and that such modifications are also within the scope of the present invention.

