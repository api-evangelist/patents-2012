---

title: Apparatus and method for managing user inputs in video games
abstract: A system that incorporates teachings of the present disclosure may include, for example, a computing device having a controller to obtain a user input that was inputted into a first accessory operably coupled with the computing device where the first accessory provides a user interface for user interaction with a video game, determine a language of an intended recipient of the user input based on an identity of the intended recipient, access a multi-lingual library comprising a plurality of words associated with the video game, match the user input to one or more words of the plurality of words of the multi-lingual library to generate a translated message in the determined language of the intended recipient, and provide the translated message to a second accessory for presentation to the intended recipient in real-time. Additional embodiments are disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08939837&OS=08939837&RS=08939837
owner: Steelseries ApS
number: 08939837
owner_city: Valby
owner_country: DK
publication_date: 20121121
---
This application is a continuation of and claims priority to U.S. patent application Ser. No. 12 947 874 filed Nov. 17 2010 which is incorporated herein by reference in its entirety.

The present disclosure relates generally to management applications and more specifically to an apparatus and method for managing user inputs in video games.

It is common today for video games to allow multiple gamers to play simultaneously such as online or offline. This is especially true of gamers who play Massively Multiplayer On line MMO games in a team or individual configuration.

These gamers can be located in different areas including different countries and may or may not know each other.

The embodiments described herein illustrate devices and or methodologies that allow gamers to communicate with each other even when the gamers speak different languages. One or more of the embodiments can translate user inputs into other languages that are identified with the intended recipient s . The user inputs can be speech and or non speech e.g. actuations of accessory buttons such as depressing a combination of keys that represent particular words . The translation can be performed by a number of different devices including the source device the recipient device and or a remote server e.g. a service provider server that is in communication with the source and recipient devices such as via the Internet . One or more of the embodiments allow for configuration of a processor with the identity of gamers and their respective languages. The processor can also be configured to detect certain words or phrases which can be translated to the language of each other gamer. One or more of the embodiments can provide for transmission of codes to other processors which then locally invokes translation. Other embodiments are also contemplated.

One embodiment of the present disclosure entails a non transitory computer readable storage medium that includes computer instructions to receive a signal generated in response to a user input at a first accessory operably coupled with a first computing device where the first computing device is programmed to present a video game. The computer instructions can also determine a language for an intended recipient of the user input and can provide an audio signal to a second accessory for presentation to the intended recipient. The audio signal can be generated based on the received signal and the determined language using a multi lingual library. The audio signal can be associated with the video game.

One embodiment of the present disclosure entails a method including obtaining a user input that was inputted into a first accessory operably coupled with a first computing device where the first computing device is programmed to present a video game. The method can also include determining a language of an intended recipient of the user input based on an identity of the intended recipient and translating the user input into a translated message using the determined language and a multi lingual library. The method further can include providing the translated message to a second accessory for presentation to the intended recipient in real time where the translated message is associated with the video game.

One embodiment of the present disclosure entails a computing device having a controller to obtain a user input that was inputted into a first accessory operably coupled with the computing device where the first accessory provides a user interface for user interaction with a video game. The controller can also be programmed to determine a language of an intended recipient of the user input based on an identity of the intended recipient and access a multi lingual library comprising a plurality of words associated with the video game. The controller can further be programmed to match the user input to one or more words of the plurality of words of the multi lingual library to generate a translated message in the determined language of the intended recipient and provide the translated message to a second accessory for presentation to the intended recipient in real time.

System can include a first gaming device having one or more accessories e.g. first accessory and second accessory operably coupled thereto. The first gaming device can be of various types of computing devices including a gaming console a desktop computer a laptop computer a server a mainframe computer a cellular phone a personal digital assistant and or a media player. The accessories and can be provided with components for the delivery of messages between gamers. For instance first and second accessories and can each include a headset with a microphone and speaker s which allow for input of a voice message and playing of voice messages. The headsets can be wired and or wireless devices. It should be understood that the headsets are one example of components that can be used for delivery of audio messages but the present disclosure contemplates that other components can also be utilized such as a microphone and speaker integrated into the first accessory and or the gaming console.

System can also include one or more second gaming devices in communication with the first gaming device . Each of the second gaming devices can include the second accessories with headsets or other components to facilitate receipt and delivery of messages between gamers. The physical location of the gaming devices and can vary. For instance the gaming devices and can be remote from each other and or can be located within the same area or building.

The gaming devices and can be in communication with each other via network . The type of network can vary. For example network can include the Internet and or a service provider network. In another embodiment network can include a home or Local Area Network. In another embodiment the network can be a hardwire connection between gaming devices located in proximity to each other. Network can comprise various devices such as routers gateways servers and so forth . Network can operate according to various protocols such as Ethernet IP TCP UDP ICMP HTTP FTP IMAP and so forth in order to allow delivery of messages between the gaming devices and and or establishing gaming sessions between the devices such that users of the first and second gaming devices can interact in the video game.

In one embodiment first gaming device can include or otherwise be in communication with a translator for translating messages from a user of the first accessory . The messages can be voice communications that are received by the first gaming device such as through headset . The messages can also be generated without recording or otherwise receiving a voice communication from the user of first accessory . For instance a user input at first accessory can be non speech such as depressing particular a button s of the first accessory that generates a message. In one embodiment macros can be configured which represent messages to be delivered to other gamers. The macros can then be implemented by the user of first accessory by a particular manipulation of the first accessory such as depressing a particular combination of buttons.

Translator can be integrated with the first gaming device such as a controller of the gaming device being programmed to function as the translator and or can be a separate device. In one embodiment the translator can be a separate device that is removably connectable with the first gaming device such as a removable adaptor that can be plugged into a port of the gaming device such as a USB port. In another embodiment the translator can be in wireless communication with the first gaming device . In yet another embodiment the translator can be directly in communication with the first accessory or can be in direct communication with the user of the first accessory for receiving the messages.

Translator can translate the message into one or more languages for presentation to the other gamers. For example where the user input is a voice message then the translator can apply voice recognition to determine the words of the message. As another example where the message is a macro of an accessory or is a text message such as entered using a keyboard or other text interface then the translator need not apply voice recognition.

Translator can identify corresponding words in another language for delivery to the intended recipients of the voice message. In one embodiment the translator can utilize a multi lingual library which includes a plurality of words in various languages. The multi lingual library can be utilized as a look up table for translating the message between languages. The library can be stored at various locations. For example the library can be stored with the translator and or with a memory of the first gaming device . In another embodiment the library can be stored remotely from the translator and accessed when a translation is being performed. For example a centralized library can be maintained using a remote server that is accessible by the translator such as via the network . In another embodiment the library can be a distributed database that is maintained by a number of different servers and accessible by translator .

Translator can also apply other translation techniques in translating the message between languages. For example in one embodiment the translator can apply grammatical rules to the message translation to achieve proper word order and so forth. In another embodiment the translator can correct messages for improper grammar or terminology such as improper grammar in the original message or misspelled words in a text message.

In one embodiment translator of the first gaming device can be utilized to translate messages being transmitted between gamers using the same first gaming device . In this example the translation and delivery of the messages may be performed without utilizing the network such as the first gaming device directly receiving the original message from the first accessory and or the headset and directly delivering the translated message to the headset of the second accessory . However the present disclosure contemplates utilizing the network for translation between gamers of the same gaming device such as to access the multi lingual library or to access a remote server which performs the translation.

In another embodiment the translator of first gaming device can receive the user input of the message and can translate the message using the multi lingual library for delivery to the second gaming devices . The delivery of the translated messages can be by way of the network . In one embodiment codes representative of a translated audio message can be transmitted to the second gaming devices rather than transmitting the translated audio message. The codes can then be utilized by the second gaming devices to present the translated message such as in a synthesized voice or text.

In yet another embodiment the second gaming devices can receive the user input and can perform the translation of the message utilizing a translator of the second gaming devices. For instance where the user input is a voice message recorded by headset of first accessory the second gaming devices can receive audio signals of the voice message via the network . The translator of each of the second gaming devices can then apply voice recognition to the audio signals to generate a translated message for presentation to the gamers of the second gaming devices. As another example where the user input is a text message or a message generated by a macro of the first accessory the second gaming devices can receive data signals representative of the message. Translator can then translate the user input into the translated message without using voice recognition.

In another embodiment system can utilize a translator of a remote server for performing translation of messages between the gamers of the gaming device s and . Similar to the message formats describes above translator of the remote server can apply voice recognition to audio messages received from the first gaming device or can perform translation without using voice recognition where a text message or accessory macro is received from the first gaming device. In one embodiment the remote server can transmit an audio and or text message to the second gaming devices . In another embodiment the remote server can transmit code signals that represent the translated message where the second gaming devices generate the translated message based on the code signals.

The present disclosure contemplates the use of various devices and combinations of devices to implement translator and deliver translated messages between gamers. In one embodiment network or device performance and or other factors can be utilized to determine which translators are to perform the translation. As an example a gaming session can include a first gamer using the first gaming device a second gamer using the second gaming device and a third gamer using another second gaming device . The first gamer can transmit a message to the second gamer which is translated into the second gamer s language. The translation into the second gamer s language can be performed by a translator of the first gaming device . However to conserve computing resources of the first gaming device the message can be translated into a different language of the third gamer by the other second gaming device of the third gamer. In this example the first gaming device does not expend computing resources translating a message into the third gamer s language since the third gamer was not the intended recipient of the message. However the third gamer can still participate in the communication but does so through utilizing his or her own computing resources.

In step a language for the one or more intended recipients of the message can be determined. For example languages can be designated in gamer profiles that are accessible by each of the gaming devices. Other techniques can be utilized to determine the language of the gamer including transmitting requests between gaming devices. In another embodiment voice communications transmitted from a particular gamer can be utilized to determine the language of the particular gamer.

In step the translator can access a multi lingual library to perform the translation of the user input. As described above the particular device implementing the translator can vary and can include the source device the recipient device and or a remote server. Where the user input is a voice message then the translator can apply voice recognition to determine words of the untranslated message. If the user input is not speech then the translator can directly utilize the message along with the multi lingual library.

In one embodiment in step the translator can utilize a context of the video game to assist in translation. For instance a context of the video game can be determined based on the graphics being shown at the time the message was input by the user. As an example a user may be moving along a beach as part of a number of different environments in a particular video game. If the user transmits a voice message stating swim the translator can determine the context e.g. beach with water and can apply voice recognition in combination with the context to distinguish between swim and other words such as win. The context of the video game can also be applied to facilitate the translation other than when using voice recognition. For example a user input may be a text message that is a misspelling such as wim. Based on the context of the video game at the time of the message being a beach with water the translator can again distinguish between swim and win. 

If in step the translator identifies a match for the message in the multi lingual library then method proceeds to step where the translation of the message is presented to the intended recipient. The presentation of the translated message can be performed in a number of different ways. For example the translated message can be a human voice synthesized speech and or text e.g. presented on the display device with the video game . In one embodiment the format of the presentation can be selected by one of the source and the recipient of the message. In another embodiment the translator can apply grammar rules to matching words of the multi lingual library to facilitate the translation.

If on the other hand in step the translator cannot identify a match for the message in the multi lingual library then method can proceed to step where the untranslated message is presented to the intended recipient. In another embodiment if a match is not determined then the translator can request a search of other multi lingual libraries. For example if the first gaming device cannot find a match for a voice message generated by a first gamer then the first gaming device can access or otherwise request a search of the multi lingual library of the second gaming device and or the remote server via the network .

Method can present multiple translations of the same message to multiple gamers. The multiple translations can be performed by the same translator or by different translators such as using a distributed translation technique.

In one embodiment the multi lingual library can be populated based on words or phrases that are commonly used with particular video games. The library can be updated as new words or phrases are being used during gaming sessions. For example where software updates including new actions or new graphics are provided to a video game new words or phrases may more commonly be used with the updated video game. The library can be updated with translations for these new words or phrases.

In another embodiment the multi lingual library can be populated based on words or phrases suggested by the user. For example a user can request particular words or phrases be translated into particular languages. The translation of the words or phrases can be determined and the library can be provisioned with these translations. In another embodiment an absence of matches for a particular word or phrase meeting a threshold can trigger populating the library with a translation of the word or phrase.

In the present context an accessory can represent any type of device which can be communicatively coupled to the computing device and which can control aspects of the OS and or a software application operating in the computing device. An accessory can represent for example a keyboard a gaming pad a mouse a gaming console controller a joystick a microphone or a headset with a microphone just to mention a few. The keyboard and gaming pad represent accessories of a similar category since their operational parameters are alike.

A mouse on the other hand represents an accessory having disparate operational parameters from the keyboard or gaming pad. For instance the operational parameters of a keyboard generally consist of alphanumeric keys control keys e.g. Shift Alt Ctrl and function keys while the operational parameters of a mouse consist of navigation data generated by a tracking device such as a laser sensor buttons to invoke GUI selections and settings thereof e.g. counts or dots per inch acceleration scroll speed jitter control line straightening control and so on . Such distinctions can be used to identify disparate categories of accessories. The joysticks game controllers or any other input devices represent additional categories of accessories supported by the AMS.

In step the AMS application presents a GUI such as depicted in with operationally distinct accessories such as the keyboard and mouse . The GUI presents the accessories in a scrollable section . Although the present disclosure contemplates the use of other GUI configurations. One or more accessories can be selected by a user with a common mouse pointer. In this illustration the keyboard and mouse were selected with a mouse pointer for customization. Upon selecting the keyboard and mouse in section the AMS application presents the keyboard and mouse in split windows respectively to help the user during the customization process.

In step the AMS application can be programmed to detect a user selection of a particular software application such as a game. This step can be the result of the user entering in a Quick Search field the name of a gaming application e.g. World of Warcraft . Upon identifying a gaming application the AMS application can retrieve in step from a remote or local database gaming application actions which can be presented in a scrollable section of the GUI represented as Actions . The actions can be tactical actions communication actions menu actions and movement actions or any other types of actions which can be used to invoke and manage features of the gaming application.

The actions presented descriptively in section of the GUI can represent a sequence of accessory input functions which a user can stimulate by button depressions navigation or speech. For example depressing the left button on the mouse can represent the tactical action Reload while the simultaneous keyboard depressions Ctrl A can represent the tactical action Melee Attack . For ease of use the Actions section of the GUI is presented descriptively rather than by a description of the input function s of a particular accessory.

Any one of the Actions can be associated with one or more input functions of the accessories by way of a simple drag and drop action. For instance a user can select a Melee Attack by placing a mouse pointer over an iconic symbol associated with this action. Upon doing so the symbol can be highlighted to indicate to the user that the icon is selectable. At this point the user can select the icon by holding the left mouse button and drag the symbol to any of the input functions e.g. buttons of the keyboard or mouse to make an association with an input function of one of these accessories.

For example the user can drag the Melee Attack symbol to the right mouse button thereby causing an association between the selection of the right mouse button and the gaming action of a Melee Attack. When the right button of the mouse is selected during normal operation the AMS application can detect the selection as a trigger to generate the key sequence Ctrl A which is understood by the gaming application as request for a Melee Attack. The gaming application receives from the AMS application by way of an operating system the Ctrl A sequence as if it had been generated by a Qwerty keyboard.

With this in mind attention is directed to step where the AMS application can respond to a user selection of a profile. A profile can be a device profile or master profile invoked by selecting GUI button or each of which can identify the association of actions with input functions of one or more accessories. If a profile selection is detected in step the AMS application can retrieve macro s and or prior associations of actions with the accessories as defined by the profile. The actions and or macros defined in the profile can also be presented in step by the AMS application in the actions column of the GUI to modify or create new associations.

In step the AMS application can also respond to a user selection to create a macro. A macro in the present context can represent a subset of actions that can be presented in the Actions column . Any command which can be recorded by the AMS application can be used to define a macro. A command can represent a sequence of input functions of an accessory identification of a software application to be initiated by an operating system OS or any other recordable stimulus to initiate control or manipulate software applications. For instance a macro can represent a user entering the identity of a software application e.g. instant messaging tool to be initiated by an OS.

A macro can also represent a message to be delivered to another gamer. GUI can be used to configure delivery of the message. For instance the message can be recordable speech delivered by a microphone to one or more other gamers. As another example the message can be synthesized speech delivered to one or more other gamers. In yet another example the message can be text delivered. GUI allows particular actuations of the accessory to represent the particular message. For instance the message duck can be programmed as a macro using the GUI . The message can then be delivered to the other gamers when the source accessory is actuated in such a way to request delivery of the message e.g. depressing the corresponding button s associated with the user generated macro . Other preferences associated with the message can also be selected using GUI . For instance a type of voice e.g. female or male voice can be selected for messages that are delivered as audio signals which are not in the voice of the user. As another example of preference selection a font can be selected by a user for messages that are delivered as text.

In another embodiment the macro and corresponding message can be generated and stored by the gaming console without user provisioning such as based on messages that have been already associated with a particular video game. For instance a video game can be associated with a set of typical user messages such as duck run stay here and so forth. These messages can further be associated with particular accessory actuations by the user and or pre configured. In one example GUI can present a list of typical messages for a video game and a user can select the accessory actuation to deliver the message. In another example the accessory actuation can be pre configured by the system with the messages. In one embodiment GUI can be used to change the pre configuration of the message macros including changing the corresponding accessory actuations or removing one or more messages from the group of messages that can be delivered.

As described above with respect to system the message can be translated to facilitate communication with other gamers speaking one or more different languages. The translation can be performed by the source device the recipient device and or a remote server in communication with the source and recipient devices. In one embodiment GUI can be used to configure translations of the messages. For instance a user may desire only certain translations of the user s messages be performed including based on a selection of words that are to be translated or a selection of languages that are to be utilized for the translation. In one embodiment GUI can also be used to designate particular words that are not to be translated.

As another example GUI can be used so that a preferred language is designated by a user. In one embodiment source devices that intend to send a message to the other gamers can then utilize the preferred language information which can be delivered to the other gamer devices such as when the gaming session is established that includes the various parties to perform the translation. In another embodiment the GUI can provide the preferred language information to a remote server which performs translations of messages associated with a gaming session.

In yet another embodiment a macro can represent recordable navigation of an accessory such as a mouse or joystick recordable selections of buttons on a keyboard a mouse or a mouse pad and so on. Macros can also be combinations of the above illustrations. Macros can be created from the GUI by selecting a Record Macro button . The macro can be given a name and category in user defined fields and .

Upon selecting the Record Macro button a macro can be generated by selection of input functions on an accessory e.g. Ctrl A speech etc. and or by manual entry in field e.g. typing the name and location of a software application to be initiated by an OS . Once the macro is created it can be tested by selecting button which can repeat the sequence specified in field . The clone button can be selected to replicate the macro sequence if desired. Fields can also present timing characteristics of the stimulation sequence in the macro with the ability to customize such timing. Once the macro has been fully defined selection of button records the macro in step . The recording step can be combined with a step for adding the macro to the associable items Actions column thereby providing the user the means to associate the macro with input functions of the accessories.

In step the AMS application can respond to drag and drop associations between actions and input functions of the keyboard and the mouse . If an association is detected the AMS application can proceed to step where it can determine if a profile has been identified in step to record the association s detected. If a profile has been identified the associations are recorded in said profile in step . If a profile was not been identified in step the AMS application can create a profile in step for recording the detected associations. In the same step the user can name the newly created profile as desired. The newly created profile can also be associated with one or more software applications in step for future reference.

The GUI presented by the AMS application can have other functions. For example the GUI can provide options for layout of the accessory selected button how the keyboard is illuminated when associations between input functions and actions are made button and configuration options for the accessory button . Configuration options can include operational settings of the mouse such as Dots Per Inch or Counts Per Inch and so on. The AMS application can adapt the GUI to present more than one functional perspective. For instance by selecting button the AMS application can adapt the GUI to present a means to create macros and associate actions to accessory input functions as depicted in . Selecting button can cause the AMS application to adapt the GUI to present statistics in relation to the usage of accessories as depicted in . Selecting button can cause the AMS application to adapt the GUI to present promotional offers and software updates.

It should be noted that the steps of method in whole or in part can be repeated until a desirable pattern of associations of actions to input functions of the selected accessories has been accomplished. It would be apparent to an artisan with ordinary skill in the art that there can be numerous other approaches to accomplish similar results. These undisclosed approaches are contemplated by the present disclosure.

In step the AMS application can receive instructions describing all or a portion of the input functions of the unknown accessory. These instructions can come from a user who defines each input function individually or responds to inquiries provided by the AMS application. The AMS application can for example make an assumption as to the keyboard layout and highlight each key with a proposed function which the user can verify or modify. Once the AMS application has been provided instructions in step the AMS application can create an accessory identity in step which can be defined by the user. In steps and the AMS application can associate and record the accessory instructions with the identity for future recognition of the accessory. In step the AMS application can present a depiction of the new accessory with its identity along with the other selectable accessories in section .

Method can provide a means for universal detection and identification of any accessory which can be used to control or manage software applications operating in a computing device.

Once one or more stimulations have been detected in step the AMS application can proceed to step to determine if action s have been associated with the detected stimulation s . If for example the stimulations detected correspond to keyboard and mouse button depressions the AMS application can determine if actions have been associated and recorded for such stimulations. If these stimulations trigger one or more actions the AMS application can proceed to step where it retrieves the stimulation definition of these actions for each accessory reporting a stimulation. In step the AMS application can substitute the detected stimulations with the stimulations defined by the action.

To illustrate this substitution suppose for example that the detected stimulation was Ctrl A simultaneously depressed on a keyboard. Suppose further that an action associated with this stimulus consists of a macro that combines mouse clicks with a navigation of the mouse e.g. moving the mouse quickly in a forward motion for a given distance and a request to invoke an instant messaging IM session with a particular individual using Skype or some other common IM tool. In step the AMS application would substitute Ctrl A for stimulations consisting of the mouse clicks navigation and a request for an IM application. The substitute stimulations would then be reported in step to an operating system OS .

In step the OS can determine whether to pass the substitute stimulations to an active software application in operation e.g. a gaming application and or to invoke another software application. The active software application can be operating from the same computer system from which the OS and the AMS application operate or can be operating at a remote system such as an on line server or family of servers e.g. World of Warcraft awaiting stimulation data from the computer system. In this illustration the macro comprises both stimulation feedback for the active software application and a request to initiate an IM session. Accordingly the OS conveys in step the mouse stimulation signals to the active software application e.g. gaming application and in a near simultaneous fashion invokes the IM session in step with a specific individual or organization .

Referring back to step the illustrations above cover a scenario in which the AMS application has detected an association of actions to accessory stimuli. If however the AMS application does not detect such an association then the detected stimulus or stimuli supplied by one or more accessories is transmitted to the OS in step . For example it may be that a stimulation based on the depressions of Ctrl A has no particular association to an action. In this case the AMS application passes this stimulation to the OS with no substitutes. In step the OS can determine if this stimulation invokes a new software application in step or is conveyed to the previously initiated software application.

Contemporaneous to the embodiments described above the AMS application can also record in step statistics relating to the detected accessory stimulations. A portion of the AMS application can operate as a background process which performs statistical analysis on the stimulations detected. By selecting button in the AMS application can provide an updated GUI which illustrates the usage of input functions of one or more accessories for which stimulations were detected in step . For ease of illustration only a keyboard accessory is shown. In this illustration certain keys references on the keyboard are color coded to illustrate the frequency of usage of these keys.

A color scale defines the frequency of usage of the input functions of the keyboard. The first end of the scale navy blue represents a single detected depression while an opposite end of the scale bright red represents detected depressions. Based on this scale the AMS application maps by color in step stimulations of the keyboard. For example the key grouping depict a color coding with the highest detectable usage while the F7 key reference indicates the fewest depressions. Keys having zero depressions are not color coded to readily identify the color mapping of keys which were used at least once.

The AMS application provides additional functions in a playback panel of the GUI which can help a user understand how the color coded keys were used during an active software application such as a video game. In this section of the GUI the AMS application can present the user with a playback control function which the user can select to replay pause forward or rewind the usage of these keys. When usage playback is selected the user can for instance see the color coded keys highlighted in real time with a temporary white border to visualize how the keys were selected. A time clock provides the user the elapsed time of the playback sequence. Button allows the user to retrieve statistics from other sessions while button provides the user a means to save statistics from a given session.

The GUI of could have been shown as a split screen with all accessories which generated one or more detected stimulations e.g. keyboard mouse and microphone each providing statistical symbolic results as described above for the keyboard. Although not shown split screen embodiments are contemplated by the present disclosure for the GUI of .

In addition to a symbolic representation as shown in the AMS application can provide the user a means to visualize raw statistics in a table format such as shown in by selecting button . The table format shows raw data in section and possible suggestions in section for improving user performance which can be generated by the AMS application in step . Section can be presented in a table format with a column identifying the key being analyzed its usage and number of key presses. The user can ascertain from this table the most and least frequently used keys as well as other identifiable patterns.

The AMS application can utilize an understanding of the layout of the accessory in this case the keyboard to determine from the statistics ways that the user can improve response time or ergonomic use. For example the AMS application can determine from a layout analysis that the key combination can be reassigned to a macro based on the trigger which could provide the user a faster response time and free up the user s right hand for other tasks. The AMS application can also provide alternative suggestions. For example the AMS application can also suggest creating single button macros for each of the key combinations and which can be assigned to keys on the keyboard or left and right buttons of a mouse. The latter suggestion of assigning macros to the mouse can help the user free up his her left hand.

The AMS application can utilize present and next generation algorithms to determine how to improve response times and ergonomic usage of accessory devices. The AMS application can for example have at its disposal an understanding of the layout of each accessory the type of software being controlled by the accessory e.g. World of Warcraft type of operations commonly used to control the software e.g. known actions as shown in the actions column of an understanding of the associations made by other users e.g. gamers to improve their performance when controlling the software and so on. The AMS application can also be adapted to communicate with the active software application by way of an Application Programming Interface API to receive additional usage statistics from the software which it can in turn use to improve the user s performance. The AMS application can also utilize common statistical and behavior modeling techniques to predict the behavior of the user and responses from the software application to identify possible ways to improve the user s performance.

From these illustrations it would be apparent to an artisan of ordinary skill in the art that innumerable algorithms can be developed to analyze accessory usage and thereby suggest improvements. These undisclosed embodiments are contemplated by the present disclosure.

From the foregoing descriptions it would be evident to an artisan with ordinary skill in the art that the aforementioned embodiments can be modified reduced or enhanced without departing from the scope and spirit of the claims described below. For example method can be adapted to define more than one programmable layer for an accessory. Such a feature can extend the functionality of an accessory into multi layer paradigms of input functions. The GUI of can be adapted so that a user can specify more than one programmable layer for a specific accessory.

The user can also specify which layer to present in while associating actions. If for instance layer is shown the GUI of can present the actions associated in this layer by presenting descriptors superimposed on the input functions e.g. buttons or keys . When the user switches to layer e.g. by selecting from a drop down menu the layer of interest the accessory can be shown in the GUI with a different set of associated actions. The user can define a macro or identify a key sequence to switch between layers when the accessory is in use.

The trigger for switching between layers can be a toggle function e.g. selecting the tab key on a Qwerty keyboard to switch between layers in a round robin fashion layer layer layer to layer and so on . Alternatively the user can define a hold and release trigger to switch between layers. In this embodiment the user moves to another layer while pressing a button e.g. a Shift key and returns to the preceding layer upon its release. In yet another embodiment the trigger to switch layers can be defined differently per layer. The user can for example select the letter A in layer to proceed to layer and select the letter B in layer to return to layer or proceed to yet another layer . There can be numerous combinations of layers and triggers which can be defined to substantially expand the capability of single accessory. Additionally triggers can be of any kind tactile speech etc.

In another embodiment method can be adapted so that a user can define super macros and or super profiles. A super macro can represent nested macros combinations of macros . Method can be adapted so that the user can customize the timing for executing nested macros. Similarly a super profile can represent nested profiles combinations of profiles . A super profile can for example comprise sub profiles each sub profile defining associations of actions to input functions of a particular accessory.

In yet another embodiment method can be adapted to establish audio profiles for headset accessories. When a user selects a headset accessory such as GUI can be adapted to provide the user options to establish a sound output equalizer setting to optimize performance for a particular gaming application. For instance GUI can present an equalizer so that the user can raise the volume of high frequencies to an enemy s footsteps from a longer distance in a gaming application.

The foregoing embodiments are a subset of possible embodiments contemplated by the present disclosure. Other suitable modifications can be applied to the present disclosure. Accordingly the reader is directed to the claims for a fuller understanding of the breadth and scope of the present disclosure.

The machine may comprise a server computer a client user computer a personal computer PC a tablet PC a laptop computer a desktop computer a control system a network router switch or bridge or any machine capable of executing a set of instructions sequential or otherwise that specify actions to be taken by that machine. It will be understood that a device of the present disclosure includes broadly any electronic device that provides voice video or data communication. Further while a single machine is illustrated the term machine shall also be taken to include any collection of machines that individually or jointly execute a set or multiple sets of instructions to perform any one or more of the methodologies discussed herein.

The computer system may include a processor e.g. a central processing unit CPU a graphics processing unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a liquid crystal display LCD a flat panel a solid state display or a cathode ray tube CRT . The computer system may include an input device e.g. a keyboard a cursor control device e.g. a mouse a disk drive unit a signal generation device e.g. a speaker or remote control and a network interface device .

The disk drive unit may include a machine readable medium on which is stored one or more sets of instructions e.g. software embodying any one or more of the methodologies or functions described herein including those methods illustrated above. The instructions may also reside completely or at least partially within the main memory the static memory and or within the processor during execution thereof by the computer system . The main memory and the processor also may constitute machine readable media.

Dedicated hardware implementations including but not limited to application specific integrated circuits programmable logic arrays and other hardware devices can likewise be constructed to implement the methods described herein. Applications that may include the apparatus and systems of various embodiments broadly include a variety of electronic and computer systems. Some embodiments implement functions in two or more specific interconnected hardware modules or devices with related control and data signals communicated between and through the modules or as portions of an application specific integrated circuit. Thus the example system is applicable to software firmware and hardware implementations.

In accordance with various embodiments of the present disclosure the methods described herein are intended for operation as software programs running on a computer processor. Furthermore software implementations can include but not limited to distributed processing or component object distributed processing parallel processing or virtual machine processing can also be constructed to implement the methods described herein.

The present disclosure contemplates a machine readable medium containing instructions or that which receives and executes instructions from a propagated signal so that a device connected to a network environment can send or receive voice video or data and to communicate over the network using the instructions . The instructions may further be transmitted or received over a network via the network interface device .

While the machine readable medium is shown in an example embodiment to be a single medium the term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present disclosure.

The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories such as a memory card or other package that houses one or more read only non volatile memories random access memories or other re writable volatile memories magneto optical or optical medium such as a disk or tape and any equivalents. Accordingly the disclosure is considered to include any one or more of a machine readable medium or a distribution medium as listed herein and including art recognized equivalents and successor media in which the software implementations herein are stored.

Although the present specification describes components and functions implemented in the embodiments with reference to particular standards and protocols the disclosure is not limited to such standards and protocols. Each of the standards for Internet and other packet switched network transmission e.g. TCP IP UDP IP HTML HTTP represent examples of the state of the art. Such standards are periodically superseded by faster or more efficient equivalents having essentially the same functions. Accordingly replacement standards and protocols having the same functions are considered equivalents.

The illustrations of embodiments described herein are intended to provide a general understanding of the structure of various embodiments and they are not intended to serve as a complete description of all the elements and features of apparatus and systems that might make use of the structures described herein. Many other embodiments will be apparent to those of skill in the art upon reviewing the above description. Other embodiments may be utilized and derived therefrom such that structural and logical substitutions and changes may be made without departing from the scope of this disclosure. Figures are also merely representational and may not be drawn to scale. Certain proportions thereof may be exaggerated while others may be minimized. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

Such embodiments of the inventive subject matter may be referred to herein individually and or collectively by the term invention merely for convenience and without intending to voluntarily limit the scope of this application to any single invention or inventive concept if more than one is in fact disclosed. Thus although specific embodiments have been illustrated and described herein it should be appreciated that any arrangement calculated to achieve the same purpose may be substituted for the specific embodiments shown. This disclosure is intended to cover any and all adaptations or variations of various embodiments. Combinations of the above embodiments and other embodiments not specifically described herein will be apparent to those of skill in the art upon reviewing the above description.

The Abstract of the Disclosure is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separately claimed subject matter.

