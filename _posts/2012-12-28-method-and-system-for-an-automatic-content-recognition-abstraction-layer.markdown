---

title: Method and system for an automatic content recognition abstraction layer
abstract: A method and system for an automatic content recognition (ACR) abstraction layer are described in which real-time event manager in an ACR system may be utilized to receive interactive event identifiers and to assign those identifiers to sets of video fingerprints generated by multiple real-time fingerprint servers (RTFSs). The video fingerprints may be generated from a network television feed by utilizing video fingerprint technologies that are different for each RTFS. The interactive event identifiers may be determined from different sources. When determined from content ingested by the ACR system, for example, the interactive event identifiers may be based on a video fingerprinting process separate from those utilized by the RTFSs. The RTFSs may communicate the sets of video fingerprints and interactive event identifiers to corresponding fingerprint match systems, which in turn may communicate with devices that utilize the same video fingerprint technology as the corresponding RTFS.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09172994&OS=09172994&RS=09172994
owner: Turner Broadcasting System, Inc.
number: 09172994
owner_city: Atlanta
owner_country: US
publication_date: 20121228
---
This application makes reference to claims priority to and claims the benefit of U.S. provisional application 61 596 012 filed on Feb. 7 2012.

Each of the above referenced applications is hereby incorporated herein by reference in its entirety.

Certain embodiments of the invention relate to digital audio video content recognition. More specifically certain embodiments of the invention relate to a method and system for an automatic content recognition abstraction layer.

Smart or connected televisions TVs may receive data from data networks that allow a viewer to not only access broadcast digital content but to also receive multimedia content.

Further limitations and disadvantages of conventional and traditional approaches will become apparent to one of skill in the art through comparison of such systems with some aspects of the present invention as set forth in the remainder of the present application with reference to the drawings.

A system and or method is provided for an automatic content recognition abstraction layer substantially as shown in and or described in connection with at least one of the figures as set forth more completely in the claims.

These and other advantages aspects and novel features of the present invention as well as details of an illustrated embodiment thereof will be more fully understood from the following description and drawings.

Certain embodiments of the invention may be found in a method and system for an automatic content recognition ACR abstraction layer. Various embodiments of the invention provide for a system architecture that implements the ACR abstraction layer based on utilizing a real time event manager RTEM to communicate with multiple fingerprint servers. The RTEM can operate as a triggering mechanism that provides events i.e. event identifier and corresponding data to the multiple fingerprint servers RTFS s each of which associates the event s to the corresponding fingerprints of the broadcast network. Each RTFS may employ a different fingerprinting technology. At least portions of the system architecture can be synchronized using a network broadcast time server which is also referred to as a network protocol time NTP server. That is the RTEM and the fingerprinting servers can operate based on a common reference clock provided by the NTP server. Each of the fingerprint servers may generate a set of video fingerprints in real time from a network television feed by utilizing a video fingerprint technology that is different from the technology utilized by any of the other fingerprint servers. The different fingerprinting technologies may be from different fingerprinting vendors for example. The fingerprint servers may also be referred to as real time fingerprint servers RTFSs . A monitor application in the ACR system may be operable to assign one or more interactive event identifiers to the RTEM by associating an NTP broadcast time to a fingerprint that is then propagated to other fingerprint systems e.g. fingerprint servers via an application programming interface API . The fingerprint servers may communicate the sets of video fingerprints and interactive event identifiers to corresponding fingerprint match systems which in turn may communicate with devices that utilize the same video fingerprint technology as the corresponding fingerprint server.

The assignment of the event identifiers is based on a broadcast NTP time corresponding to each identified event. The event identifiers may provide information about different interactive events that may take place in a connected or smart TV. A connected TV may refer to for example a television that has internet access and or is capable of running applications. The event identifiers may also be referred to as interactive event identifiers IDs for example. The event identifiers may be determined in real time from a director s input for live programming apriori from a predetermined network schedule or from previously ingested content with interactivity defined e.g. offline content . When determined from previously ingested content the interactive event identifiers may be determined using a video fingerprinting process that is separate from those utilized by the fingerprint servers. This process may rely on any of the video fingerprinting technologies utilized by the fingerprint servers or on a different technology altogether

The abstraction layer may refer to for example the ability of an ACR system to assign the same event identifiers to different sets of video fingerprints that are generated by different video fingerprint technologies. That is by appropriately timing the assignment of event identifiers to multiple sequences of video fingerprints that are generated from the same video content but with different video fingerprinting technologies a single ACR system is able to support video fingerprinting technologies from multiple vendors. This approach allows the ACR system to be both flexible and scalable with respect to fingerprint technology vendors.

Fingerprinting and more particularly ACR fingerprinting may refer to a process by which features of a video frame or a set thereof and or of an audio frame or a set thereof may be analyzed to create representations i.e. fingerprints for each piece of content for example. The fingerprints may be unique to each piece or sequence of content and may be highly robust against broadcast distortions such as re encoding aspect ratio frame rate up down conversion and pitch correction to name a few. The fingerprints may be stored in a reference database in the ACR system such that unidentified content e.g. content from a live network television feed or broadcast may be identified by comparing fingerprints taken of the unidentified content with the stored fingerprints.

Once the event identifiers have been assigned by the monitor application and communicated to the real time fingerprint servers via the real time event manager the real time fingerprint servers may communicate the video fingerprints and the assigned event identifiers to corresponding fingerprint match systems. In some instances the fingerprint match systems may be operated by a third party e.g. television manufacturers vendors etc. as hosted services over the Internet e.g. cloud computing etc. . Each of the fingerprint match systems may communicate with devices e.g. connected TVs tablets smartphones etc. that utilize the same video fingerprint technology utilized by the fingerprint server that corresponds to that fingerprint match system. These devices may be referred to as viewer or end user devices for example.

The fingerprint match systems receive video fingerprints from the viewer devices and compare them to the ones received from the real time fingerprint servers. When a match occurs the fingerprint match systems may notify the viewer devices that an interactive event is to take place if there is an event identifier that corresponds to the matched video fingerprints.

As described above automatic content recognition may be utilized across several platforms including connected TVs from various manufacturers as well as smartphones and tablets. Since television viewing may be rapidly evolving from a single screen experience to a multiple screen experience television networks may need to automatically identify the context of what a viewer is watching and the time in the program both during a live television broadcast and in subsequent viewings such as when a program is being reproduced by a digital video recorder DVR . In multi screen viewing experiences for example companion applications on second screen devices may also be utilized to interact with the television programming by using fingerprint technology that is available in the second screen device or by pairing the second screen device with the connected TV.

Having the ability to identify context and program timing may enable a network to increase audience engagement extend viewing times and provide program sponsors additional ways to engage with the audience such as offering viewers personalized advertising offers or creating a second screen experience during an advertisement break. These features may be implemented by having a central video fingerprint repository and management platform that facilitates triggering interactive events across various platforms regardless of the ACR vendor solution e.g. fingerprinting technology . For example an ACR system may utilize a single broadcast ACR solution to support connected TVs from multiple vendors as well as second screen devices running companion applications.

There may be instances in which the vendors of connected TVs and supporting services are not able to associate an event with a fingerprint. Instead those vendors may support the association of the content being viewed with a timeline. Accordingly an ACR system may need to support timeline association in addition to event to fingerprint association. For timeline association for example the ACR system may be operable to create and provide a timeline that spans the duration of a program or show. The timeline can be distributed to the corresponding connected TVs supported by the vendors through vendor servers. With the timeline available the connected TV can launch an event when the appropriate point in the timeline is reached.

Below are described various examples of aspects related to an ACR system that utilizes an architecture based on the abstraction layer. These exemplary aspects may comprise the system architecture processes APIs and or web based services.

The ACR system may also comprise an NTP server that is operable to provide synchronization to various parts of the ACR system via a common reference clock. For example the NTP server may be operable to synchronize the operation of the RTEM with the operation of the RTFSs . . . . The operations of the NTP server may be based on for example the Internet Engineering Task Force IETF RFC 5905 Network Time Protocol Version 4 Protocol and Algorithms Specification. 

The offline fingerprint module may comprise suitable logic circuitry code and or interfaces that may be operable to handle the offline fingerprinting portion of the operations performed by the ACR system . The offline fingerprint module may be operable to receive pre recorded or offline content such as commercials programs and promotions for example. In this regard the offline fingerprint module may be able to ingest and process content with defined interactivity. The monitor application module may comprise suitable logic circuitry code and or interfaces that may be operable to process a network television feed and the content handled by the offline fingerprint module to create a real time timeline and or real time event triggers. During the process the monitor application module and or the timeline event creation module may interact with backend analytics databases that comprise user engagement data for example. Some of the operations that may be performed by the offline fingerprint module may comprise for example ingest operations storage operations monitoring operations and or content version comparison operations.

The RTEM may comprise suitable logic circuitry code and or interfaces that may be operable to manage real time events based on inputs provided by one or more sources. For example the RTEM may be operable to manage real time events based on events stored in an interactive timeline archive a network schedule and or those provided by an interactive director that may assign interactive event IDs to live programming as the network television feed is being fingerprinted in real time. Moreover the RTEM may be operable to trigger interactive events in legacy systems and or in web based systems. The RTEM may be referred to as a real time event trigger infrastructure for example. The RTEM may comprise a real time event inserter RTEI not shown which is operable to insert the events into the RTFSs . . . .

In accordance with an embodiment of the invention the RTEM may be operable to instruct the monitor application module and or the timeline event creation module to record the fingerprints associated with a live program as well as to store the corresponding set of events created during the live program in the interactive timelime archive. This enables playback of the program with interactivity even after expiration of the corresponding fingerprints in the vendor s third party database. This may occur in instances when there is a re broadcast of the live event at a subsequent date. In the case of timeline based devices the events may be stored and timeline retrieval may be enabled even during the active window of the corresponding fingerprints since there will be no available event to fingerprint association.

In accordance with an embodiment of the invention the RTEM may be operable to receive one or more inputs from a user e.g. an interactive director and to generate based on those inputs interactive event identifiers that can be communicated to the fingerprint servers where they can be associated with or assigned to the video fingerprints generated by the fingerprint servers. The RTEM may be operable to communicate the interactive event identifiers to a television system e.g. legacy system and or to a web system. The interactive event identifiers may be utilized in the television system and or in the web system to trigger interactive events. Moreover the communication of the interactive event identifiers may be based on one or more of an EBIF an HTTP live streaming HLS a satellite network protocol or some other protocol.

The RTFSs . . . may comprise suitable logic circuitry code and or interfaces that may be operable to handle fingerprinting and fingerprint communications to the fingerprint match systems . Since each vendor or television manufacturer is likely to utilize its own fingerprint technology each of the RTFSs . . . may be a dedicated server for each of the fingerprint technologies supported by the ACR system . In some embodiments of the invention a portion of the RTFSs . . . may be operable to perform video fingerprinting while the remaining portion of the RTFSs . . . may be operable to perform audio fingerprinting or some combination thereof. Fingerprint technologies from multiple vendors may utilize different computations to perform fingerprinting of video and or audio frames. For example each fingerprint technology may utilize a specific set of algorithms parameters operations and or data processing methods for example.

The fingerprint match systems may comprise suitable logic circuitry code and or interfaces that may be operable to enable hosted services in the Internet for matching fingerprints produced by the RTFSs . . . with fingerprints produced by the ACR based devices . Each of the fingerprint match systems corresponds to a particular ACR or fingerprint technology. In this regard each of the fingerprint match systems may be supported by a third party such as a TV manufacturer for example.

The fingerprint match systems may be operable to compare fingerprints produced by the ACR based devices with fingerprints provided by the RTFSs . . . . When matches occur the fingerprint match systems may indicate that interactive events are to take place in the ACR based devices . These interactive events may allow a viewer to be presented with information on the screen or display of an ACR based device and to interact with the device based on the information presented.

The ACR based devices may comprise a plurality of devices such as connected TVs connected TV with paired devices e.g. tablets and second screen devices such as smartphones and tablets for example. The ACR based devices may be referred to as viewer devices for example. Since each of the fingerprint match systems supports a different ACR or fingerprint technology those ACR based devices that support a particular fingerprint technology are operable to communicate with the corresponding fingerprint match systems that support the same fingerprint technology. Moreover when a secondary or paired device that supports a particular fingerprint technology is used that device may also be able to communicate with the corresponding fingerprint match system that supports the compatible fingerprint technology.

The applications and analytics module may comprise suitable logic circuitry code and or interfaces that may be operable to provide data to the ACR based devices determine what platforms are to be served and when these platforms are to be served handle communications with third party partners and advertisers handle communication with backend analytics databases and determine unique responses for a given device request e.g. fix targeting .

The timeline event creation module may comprise suitable logic circuitry code and or interfaces that may be operable to produce a timeline of the content in a program or show based on information provided by the monitor application module . The timeline event creation module may then provide the timeline created to the applications and analytics module to have the timeline disseminated to the appropriate ACR based devices that may not support event to fingerprint association. Once the ACR based devices have the timeline for a particular program or show they may monitor the program or show relative to the timeline and launch appropriate event requests when a specified point in the timeline indicates that a particular event is to take place.

Communication between the RTFSs . . . and the fingerprint match systems may occur through one or more wireless and or wireline communication links. Similarly communications between the fingerprint match systems and the ACR based devices and or the applications and analytics module may occur through one or more wireless and or wireline communication links. The communication links described above may support one or more communication protocols. For example communication protocols based on Internet Protocol IP may be typically used. Accordingly the RTFSs . . . the fingerprint match systems and the applications and analytics module may comprise suitable logic circuitry code and or interfaces to enable the use of the communication protocols.

In operation the monitor application module and or the RTEM may generate and or handle event identifiers or event triggers that correspond to specific times in a program. These event identifiers may be generated from live programming from a network schedule or from information provided by the offline fingerprint module . The event identifiers may be assigned to the appropriate fingerprints generated by the RTFSs . . . . Since each RTFS relies on a different fingerprint technology system synchronization is needed to appropriately assign the event identifiers to the right spot on a video and or audio sequence. Such synchronization may be achieved by the use of a common reference clock provided by the NTP server .

Each of the RTFSs . . . may communicate the event identifiers and the fingerprints to its corresponding one of the fingerprint match systems . The fingerprint match systems in turn receive fingerprints from their corresponding ACR based devices and try to match those fingerprints to the ones received from their corresponding RTFSs . . . . When a match occurs the event identifier and or other information may be passed to the appropriate ACR based device. With this information the ACR based device may obtain for example interactive information e.g. graphics from the applications and analytics module . For example a connected TV may receive code or data specific for that device from a content management system CMS via a cloud based content delivery network CDN . There may be other actions performed by the user in connection with the interactive event and or other information presented or produced in connection with the interactive event.

The content ingest module may comprise suitable logic circuitry code and or interfaces that may be operable to receive a media master also referred to as an air master which may comprise one or more programs commercials and or promotions for example. The content ingest module may be operable to generate or create a set of proxy videos by encoding the media master utilizing different resolutions. The highest quality proxy video may be provided as an input to the offline fingerprint ingest server while the lowest quality proxy video may be provide to the interactive timeline creation module . The content ingest module may also provide a content ID CID and other associated metadata e.g. program data frame number that corresponds to the content in the media master .

The offline fingerprint ingest server may comprise suitable logic circuitry code and or interfaces that may be operable to use a fingerprint computation or algorithm to fingerprint content and subsequently push the fingerprints for archival in the fingerprint database . In the offline fingerprint ingest server the highest quality proxy video created by the content ingest module may be fingerprinted and may be associated with the content ID and corresponding related metadata. In this regard the offline fingerprint ingest server may utilize an API to automatically ingest the media files and associated metadata from the content ingest module . A graphical user interface GUI may also be supported to manually ingest media files and to enter associated metadata.

The offline fingerprint ingest server may be operable to provide a management interface for the fingerprint database and or the content version comparison module . For example an API may be utilized to remove content from the fingerprint database . A GUI may also be supported to manually remove content from the fingerprint database . The offline fingerprint ingest server may be operable to set priorities regarding the content to be ingested and processed. Moreover the offline fingerprint ingest server may be operable to support among other features the use of administration tools and the creation of reports the ability to generate progress reports on processing content and errors and or recoverability after a shut down or crash.

The offline fingerprint ingest server may be implemented utilizing multiple modules not shown . These modules may be operable to perform one or more functions. Examples of those functions may comprise without limitation receiving the content to be fingerprinted in an input or watch folder receiving and assigning CIDs and processing priority utilizing content ingest management tools supporting an ACR process for writing fingerprints to the fingerprint database and supporting administration tools utilized for monitoring and reporting.

The fingerprint database which may also be referred to as a central fingerprint database for example may comprise suitable logic circuitry code and or interfaces that may be operable to store fingerprints captured by the offline fingerprint ingest server and maintain the association between the captured fingerprints and a particular CID and media time.

In an embodiment of the invention the fingerprint database may support queries from multiple monitor applications . For example and without limitation as many as 50 monitor applications may query the fingerprint database . In response to a query the fingerprint database may return a CID and a media time associated with the fingerprint in a very short period of time typically in less than one second. For example and without limitation the return time by the fingerprint database may be less than 10 milliseconds.

The fingerprint database may also be operable to respond to requests from the content version comparison module to identify differences between the master versions in the fingerprint database and derivative works also ingested into the fingerprint database . For example a movie may have different cuts or versions depending on the time of day and or the network in which it is to be shown. The corresponding master and the derivative works may be ingested fingerprinted and stored in the fingerprint database . The interactive timeline creation module may have access to the various versions of a certain work but it can identify the master version from any of the other cuts or versions. Typically a request is initiated by the content version comparison module to identify the differences e.g. deltas between the master and selected derivative works. A delta file is returned to the interactive timeline creation module which incorporates the changes from the master source and automatically generates a derivative event timeline. Multiple derivative works may be compared to the master in the content version comparison module to reduce the processing necessary to handle the other versions.

The fingerprint database may be implemented as a distributed fault tolerant database that is operable to support persistent storage of fingerprints. The fingerprint database may be operable to store large amounts of content fingerprints. For example and without limitation the fingerprint database may store up to 25 000 hours of content fingerprints. The number of hours of content fingerprints that can be stored may vary based on the availability of storage capacity in the fingerprint database .

The fingerprint database may also be operable to concurrently support the reception of content from multiple offline fingerprint ingest servers respond to queries from multiple monitor applications and or respond to queries from multiple content version comparison modules . For example and without limitation the fingerprint database may receive content from up to 10 offline fingerprint ingest servers . In another example and without limitation the fingerprint database may respond to queries from up to 50 monitor applications . In yet another example and without limitation the fingerprint database may respond to queries from up to five content version comparison modules . The number of requests and or of content version comparison modules that can be supported by the fingerprint database may vary based on the capacity of the fingerprint database .

The fingerprint database may be operable to support among other features administrative tools and report generation management tools to report errors and or recoverability after a shut down or crash.

The fingerprint database may be implemented utilizing multiple modules not shown . These modules may comprise a fingerprint storage module as well as other modules that are operable to support the process of ingesting content from the offline fingerprint ingest server the process of responding with a CID and media time to the monitor application module and or the process of responding to the content version comparison module . One or more modules may also be implemented to support administrative tools monitoring and or reporting for example.

The content version comparison module may comprise suitable logic circuitry code and or interface that may be operable as a tool that enables comparison of a master version of some content to a derivative version of that same content based on fingerprints stored in the fingerprint database . A derivative work or piece may refer to a version of a program promotion or commercial for example that is different from a master version of that same program promotion or commercial. The content version comparison module may return a file listing the differences between the master version and the derivative work based on a time code. The file may be provided to the interactive timeline creation module for example.

The content version comparison module may be operable to identify sequences that have been edited to shorten the time of handling the derivative work the insertion of new advertisement break locations and or the insertion of new content. An example of the insertion of new advertisement break locations may comprise the addition of black frames of between 5 and 15 seconds. An example of the insertion of new content may occur in instances when the derivative work is the director s cut rather than the original theatrical master. The content version comparison module may pass or communicate a difference file to the interactive timeline creation module to be utilized for automating the creation of a new interactive timeline for a unique edit of a program based on the network the day and or the time of day on which the program is to be shown.

The content version comparison module may also be operable to query the fingerprint database for information e.g. fingerprints to perform version comparison to identify advertisement break locations based on black frames of between 5 and 15 seconds and or to generate an extensible markup language XML or similar output file that indicates the differences between a derivative piece and a master version. Moreover the content version comparison module may support among other features the use of administration tools and the creation of reports the ability to generate progress reports on processing content and errors and or recoverability after a shut down or crash.

The content version comparison module may be implemented utilizing multiple modules not shown . These modules may be operable to perform one or more functions such as for example querying the fingerprint database and performing file comparison. One or more modules may also be implemented to support administrative tools for monitoring and or reporting for example. The monitor application module may comprise suitable logic circuitry code and or interfaces that may be operable to ingest a live broadcast television linear video feed and fingerprint the content in the feed in real time. The live broadcast television linear video feed may also be referred to as a network television feed for example. The live broadcast television linear video feed can be based on a Serial Digital Interface SDI video interface and or on a High Definition SDI HD SDI video interface. These fingerprints may be compared by the monitor application module against fingerprints stored in the fingerprint database . When the comparison results in a fingerprint match the fingerprint database may return to the monitor application module the CID and the media time of that match. The CID and the media time may then be provided to the timeline event creation module . An API may be utilized to handle the communication between the monitor application module and the timeline event creation module .

As noted above the monitor application module may be operable to support for example a SDI and or a HD SDI for input that are provided from the broadcast chain prior to encoding and uplink. In this regard the broadcast chain may provide the network television feed to the monitor application module . Other interfaces and or formats may also be supported.

The monitor application module may function so that it operates ahead of any ACR based device or viewer device that is in the field such as in a user s home for example. Although the amount of time that the monitor application module may be ahead from ACR based devices in the field may vary in a typical case the monitor application module may be approximately at least 3 seconds ahead for example.

The monitor application module may be operable to query the fingerprint database to determine the CID and the media time or media timeline. The monitor application module may be operable to support an API that enables the monitor application module to report the CID and the media time to a real time event trigger infrastructure that is represented by the label A in . Moreover the monitor application module may support among other features the use of administration tools and the creation of reports the use of management tools for reporting errors and or the handling of failover recovery operations.

The monitor application module may be implemented utilizing multiple modules not shown . These modules may comprise a module for video capture from an SDI HD SDI capture card a module that provides real time fingerprinting and querying of the fingerprint database and a module that supports an API to communicate the CID media time and other data e.g. duplicate CIDs mediatime confidence number of seconds . One or more modules may also be implemented to support administrative tools monitoring and or reporting for example.

The timeline event creation module which may be implemented as part of the monitor application may comprise suitable logic circuitry code and or interfaces that may be operable to query the interactive timeline archive for events associated with the CID. The timeline event creation module may be operable to utilize the CID and the media time received by the monitor application module from the fingerprint database to look up event IDs in the interactive timeline archive . The event IDs are used to create a real time timeline i.e. schedule in XML or other standard data format and real time event triggers.

The interactive timeline creation module may comprise suitable logic circuitry code and or interfaces that may be operable to utilize the proxy video generated by the content ingest module and link an interactive timeline against the fingerprinted media. The interactive timeline may comprise one or more event IDs associated with a particular time in a program commercial or promotion. The interactive event IDs may be referred to as interactive event IDs for example. The interactive timeline archive may comprise suitable logic circuitry code and or interfaces that may be operable to store multiple interactive timelines.

In operation the air master is received and ingested by the content ingest module and a proxy video is created. The highest quality proxy video generated by the content ingest module may be provided to the offline fingerprint ingest server while a lower quality proxy video generated by the content ingest module may be provided to the interactive timeline creation module . The offline fingerprint ingest server may fingerprint the high quality proxy video and may send the fingerprints to the fingerprint database for archiving. In addition to the fingerprints CIDs and media times may be stored in the fingerprint database .

The interactive timeline creation module may receive the proxy video and may link event IDs that represent certain desired interactive events with the program s timeline to generate an interactive timeline. The interactive timeline may be stored in the interactive timeline archive .

When a derivative piece or different version from a master version is ingested the content version comparison module may compare fingerprints of the master version with fingerprints from the derivative piece to generate a difference file that is provided to the interactive timeline creation module . The interactive timeline creation module may utilize the difference file to create an interactive timeline for the derivative piece from an interactive timeline previously generated for the master version.

The monitor application module receives a network television feed and fingerprints the video content in the feed. The fingerprints generated are compared to those stored in the fingerprint database to obtain CIDs media times and potentially to act when a match is detected. The interactive timeline archive may be queried to obtain event IDs associated with the CIDs. When event IDs are obtained the timeline event creation module may generate a real time timeline XML or similar data format feeds and may also generate real time event triggers that may be communicated to a real time event trigger infrastructure.

Referring to there is shown a portion of the ACR system that may comprise the RTEM video RTFSs and an audio RTFS video fingerprint vendors and and an audio fingerprint vendor . The number of video RTFSs and corresponding video fingerprint vendors as well as the number of audio RTFSs and corresponding audio fingerprint vendors shown in are provided by way of illustration and not of limitation. More or fewer video RTFSs and corresponding video fingerprint vendors may be utilized in the ACR system . Similarly the ACR system may utilize more or fewer audio RTFSs and corresponding audio fingerprint vendors than those shown in . The NTP server of is shown providing reference timing to the RTEM and the RTFSs and .

Also shown in are various viewer devices such as connected TVs with paired devices and connected TVs without paired devices and mobile devices such as smartphones e.g. iPhone Android etc. and tablets e.g. iPad Samsung Galaxy etc. . A paired device associated with the connected TVs may be a tablet smartphone or other like devices for example.

The viewer devices may be operable to utilize the same video fingerprinting technology e.g. video ACR utilized by the video RTFS and supported by the video fingerprint vendor . The video fingerprint vendor may be a vendor manufacturer or other third party service provider that may comprise suitable logic circuitry code and or interfaces operable to provide hosted services over the Internet e.g. cloud computing etc. for the viewer devices . These services may comprise video fingerprint matching as well as the delivery of any interactive event IDs associated with a match. In addition the video fingerprint vendor may provide a network television station identifier and or network timing information e.g. heartbeat message or NTP based network timestamp that may be utilized by the viewer devices for ACR related applications and or to maintain synchronization with the network television feed. The viewer devices may comprise suitable logic circuitry code and or interfaces that may be operable to take and send video fingerprints to the video fingerprint vendor for matching.

The viewer devices may be operable to utilize the same video fingerprinting technology utilized by the video RTFS and supported by the video fingerprint vendor . The video fingerprinting technology utilized by the viewer devices may be different from that utilized by the viewer devices . The video fingerprint vendor may be a vendor manufacturer or other third party service provider that may comprise suitable logic circuitry code and or interfaces operable to provide hosted services over the internet for the viewer devices . These services may comprise video fingerprint matching as well as the delivery of any interactive event IDs associated with a match. In addition the video fingerprint vendor may provide a network television station identifier and or network timing information that may be utilized by the viewer devices for ACR related applications and or to maintain synchronization with the network television feed. The viewer devices may comprise suitable logic circuitry code and or interfaces that may be operable to take and send video fingerprints to the video fingerprint vendor for matching.

The viewer devices and may be operable with a second device e.g. smartphones tablets that may be paired to the parent device. In this regard the second device may comprise suitable logic circuitry code and or interfaces that may be operable to take and send video and or audio fingerprints to a corresponding video fingerprint vendor for matching or enable suitable pairing with the parent device to provide analogous functionality.

The viewer devices may utilize the same video fingerprinting technology utilized by the video RTFS and supported by the video fingerprint vendor . The video fingerprint vendor may be a vendor manufacturer or other third party service provider that may comprise suitable logic circuitry code and or interfaces operable to provide hosted services over the Internet for the viewer devices . These services may comprise video fingerprint matching as well as the delivery of any interactive event IDs associated with a match. In addition the video fingerprint vendor may provide a network television station identifier and or network timing information that may be utilized by the viewer devices for ACR related applications and or to maintain synchronization with the network television feed. The viewer devices may comprise suitable logic circuitry code and or interfaces that may be operable to take and send video fingerprints to the video fingerprint vendor for matching.

The viewer devices may utilize the same audio fingerprinting technology e.g. audio ACR utilized by the audio RTFS and supported by the audio fingerprint vendor . The viewer devices may be referred to as second screen devices for example. The audio fingerprint vendor may be a vendor manufacturer or other third party service provider that may comprise suitable logic circuitry code and or interfaces operable to provide hosted services over the Internet for the viewer devices . These services may comprise audio fingerprint matching as well as the delivery of any interactive event IDs associated with a match. In addition the audio fingerprint vendor may provide a network television station identifier and or network timing information that may be utilized by the viewer devices for ACR related applications and or to maintain synchronization with the network television feed. The viewer devices may comprise suitable logic circuitry code and or interfaces that may be operable to take and send audio fingerprints to the audio fingerprint vendor for matching.

The RTFSs . . . may comprise suitable logic circuitry code and or interfaces that may be operable to perform fingerprinting of content received from the network television feeds. Each video RTFS may utilize a different video fingerprinting technology or computation from that utilized by the other video RTFSs. Similarly when more than one audio RTFS is utilized its audio fingerprint technology or computation may be different from that utilized by the other audio RTFSs. That is since each vendor supports a different technology for handling fingerprinting dedicated RTFSs may be needed for each vendor and for that vendor s corresponding viewer devices. The RTFSs . . . may be operable to send fingerprints interactive event IDs television network station identifiers and or network timing information to their corresponding fingerprint vendors through one or more networks e.g. wireline networks wireless networks and or by utilizing one or more communication protocols.

The RTEM may comprise suitable logic circuitry code and or interfaces that may be operable to perform real time event triggering. In this regard the RTEM may be operable to manage real time events based on inputs from different sources. For example the RTEM may comprise a pre recorded event trigger module to provide real time triggering from the monitor application module a time scheduled event trigger module to schedule the occurrence of a trigger based on a broadcast schedule and a live event trigger module each of which is operable to handle a different type of input.

The pre recorded event trigger module may be operable to receive real time event triggers from the timeline event creation module described above with respect to . These interactive event IDs may be stored in the interactive timeline archive and may be utilized by the pre recorded event trigger module to assign interactive events via defined APIs to fingerprints generated as the network television feeds are fingerprinted by the RTFSs . . . .

The time scheduled event trigger module may be operable to receive a network or broadcast schedule and to assign based on the network schedule interactive events to fingerprints generated as the network television feed is fingerprinted by the RTFSs . . . . The network or broadcast schedule can be in XML format or in some other structured data format for example.

The live event trigger module may be operable to received interactive event IDs assigned by an interactive director to live programming. The interactive director may be an operator that is responsible for inserting events into the live broadcast. For pre produced content for example the interactive director may watch an episode and may determine when an interactive element is to take place when to push a trivia question when to push a fun fact when to drive social engagement and or when to share a clip or post a comment. For live content for example the interactive director may determine when to trigger a poll question and may manage the prompting of interactive games and determine when to trigger particular questions to engage viewers in a friendly competition. For advertisement for example the interactive director may determine when to bring up an offer when to prompt to prepare for interaction or interaction event and or determine how long to leave interactive content on screen based on frequency rules and or time of day. When advertisement is pre fingerprinted for example interactive advertisement activities may occur automatically.

The RTEM may also be operable to trigger interactive events in legacy television systems and or in web based systems. The infrastructure provided by the RTEM may support the triggering of interactive events against applications and set top boxes STBs via enhanced television binary interchange format EBIF hypertext transfer protocol HTTP live streaming HLS via ID3 tags and satellite delivery systems e.g. DISH DirectTV via the appropriate mechanism on the corresponding STB software platform. For HLS an ID3 tag may be utilized for sending interactive event IDs for example.

The RTEM may be operable to assign interactive event IDs to particular fingerprints in a sequence of audio or video fingerprints generated by the RTFSs . . . . The RTEM may also be operable to provide television network station identifiers and or network timing information associated with any sequence of fingerprints.

In the example shown in the RTFSs . . . may correspond to the RTFSs . . . the fingerprint vendors . . . may correspond to the fingerprint match systems and the viewer devices . . . may correspond to the ACR based devices which are illustrated in .

In operation the RTEM may generate and or handle one or more interactive event IDs that correspond to a particular set of fingerprints generated by the RTFSs . . . . The RTEM may have determined the interactive event IDs based on live event inputs time scheduled event inputs and or pre recorded event inputs. The RTEM may assign or associate the interactive event IDs to their appropriate fingerprints based on the synchronization of its operation to the operation of the RTFSs . . . via broadcast NTP. The RTEM may also provide television network station identifiers and or network timing information to the RTFSs . . . . The RTFSs . . . may communicate the fingerprints interactive event IDs the television network station identifiers and or the network timing information to their corresponding fingerprint vendors.

The client or viewer devices may take and send fingerprints to their corresponding fingerprint vendors which in turn determine whether there is a match with the fingerprints received from the RTFSs. Upon detection or determination of a match the fingerprint vendors may return to the viewer device various pieces of information including but not limited to network timing information and any interactive event ID that is triggered as a result of the match.

The portion in may illustrate the implementation of an abstraction layer that enables the ACR system to assign the same interactive event identifiers to different sets of video and or audio fingerprints that are generated from different fingerprint technologies. That is by appropriately timing the assignment of interactive event identifiers to multiple sequences of fingerprints that are generated from the same video content but with different fingerprinting technologies the ACR system may be able to support fingerprinting technologies from multiple vendors. Such implementation may provide flexibility by enabling a vendor to update its fingerprinting technology without affecting other fingerprinting technologies. Moreover the architecture of the ACR system may provide scalability by enabling new or additional fingerprint technologies from other vendors or from the same vendors to be added and supported.

Referring to there is shown a portion of the ACR system that may comprise the viewer devices . . . and the fingerprint vendors . . . shown in . Also shown are application data servers an analytics module a rules engine a cloud based content delivery network CDN and a content management system CMS . In addition shows a user response module and third party partners advertisers .

The application data servers may comprise suitable logic circuitry code and or interfaces that may be operable to receive from a viewer device information related to an interactive event ID a network television station fingerprinted broadcast time CID and additional data and or a device type. The information may be provided by the viewer device in response to a match between a fingerprint taken by the device and a fingerprint taken by the corresponding RTFS. Once a match occurs and the viewer device obtains the appropriate information from its corresponding fingerprint vendor the viewer device may communicate the information to the application data servers which in turn returns the appropriate content that corresponds to the interactive event ID and related data in a callback. Content may be pushed to a second screen or device paired with a connected TV that is logged in to an appropriate application or Web page.

The application data servers may be operable to send information to the analytics module as to what kind of interactions e.g. clicks selections options viewing behavior on a given broadcaster s network are taking place in a viewer device. The application data servers may be operable to handle the flow of user response data with third party partners and or advertisers . The user response data may comprise but need not be limited to TV IDs coupon IDs and event IDs for example. Communication of the user response data between the application data servers and the third party partners advertisers may be handled by the user response module for example. The application data servers may be operable to call the CMS for text banners graphics overlays and or video for example.

The application data servers may also be operable to deliver event schedules to viewer devices to deliver correct content uniform resource locator URL based on the type of viewer device to integrate with a variety of back end systems to integrate with polling servers not shown to integrate with gaming services such as leader boards and or to integrate with customer databases such as those used in connection with store user preferences and social circle members for example. With respect to integrating with back end systems the application data servers may for example integrate with social networks for storage of tweets for later playback and or to filter comments and push back to applications.

The rules engine may comprise suitable logic circuitry code and or interfaces that may be operable to determine which platforms e.g. viewer devices are to be served and when are those platforms to be served by the application data servers . The rules engine may be preconfigured and or dynamically configured.

The CMS may comprise suitable logic circuitry code and or interfaces that may be operable to store the content that is delivered to the viewer devices. For example content that may be delivered may comprise text banners graphics overlays and video. Other examples of content may comprise polls and fun facts clips to share games and trivia and advertising content. These examples are provided by way of illustration and not of limitation. Accordingly other examples of contents that may be utilized for user interactive events with the viewer devices may also be stored in the CMS .

The CMS may comprise suitable logic circuitry code and or interfaces that may be operable to enable communication between the application data servers and the CDN . The CMS is operable to post assets to the CDN . ACR based devices are operable to download the assets graphics banners overlays video etc from the CDN .

The analytics module may comprise suitable logic circuitry code and or interfaces that may be operable to receive user interaction information from the application data servers or directly from the viewing devices. The analytics module may comprise one or more back end databases to store mange and or process user information.

In operation content may be provided by the application data servers to one of the viewer devices . . . in response to receiving an interactive event ID a network television station device type and other data from that viewer device. Rules regarding which viewer device is to be served and when the device may be served may be determined by the rules engine . The content to be served by the application data servers to the viewer device may be stored in the CMS .

The analytics module may determine which viewers are interacting with content and what those viewers are watching based on information received from the application data servers or directly from the viewing devices. Viewer responses that result from interactive events may be handled by the user response module which in turn communicates with third party partners advertisers .

The third party partners advertisers may comprise and or be connected to advertisement servers and or one or more fulfillment systems. The advertisement servers may be utilized to deliver advertisement overlays to ACR based applications running on viewer devices. The advertisement servers may also be operable to support the tracking of user impressions and click throughs and or to perform other advertising related functions.

The fulfillment systems may utilize one or more technologies to fulfill viewer requests that occur in connection with ACR based applications and user interaction. Examples of such technologies may comprise but need not be limited to coupon delivery technologies technologies for movie ticket purchases and delivery and or short message service multimedia messaging service SMS MMS gateways.

At step the proxy video may be utilized by a series of interactive event content timeline association tools to produce and archive interactive timelines. The tools may be for example the interactive timeline creation module and or the content version comparison module . The archiving may be performed by for example the interactive timeline archive .

At step back end databases may be utilized to perform the operations corresponding to steps and . These back end databases may include content management systems for content timelines and shows schedule timeline information for network monitoring.

At step a broadcast feed may be generated which may comprise at least some of the content ingested during the content acquisition operations in step . The broadcast feed may be a network television feed for example. At step the broadcast feed may be monitored by for example the monitor application module . The output from the network monitoring may be provided to step where real time program event timeline creation e.g. XML file creation may be performed by for example the timeline event creation module . The output from the network monitoring may also be provided to step where event triggers may be generated by for example the timeline event creation module .

At step the set of RTFSs . . . for example may receive the event triggers and may assign interactive event IDs to fingerprints generated by multiple fingerprint servers. The interactive event IDs and other information may be communicated by the fingerprint servers to corresponding fingerprint match systems such as the fingerprint vendors . . . for example.

At step social and other like networks may be integrated with application data services such as those provided by the application data servers . At step the television network media operations may provide push events which in turn may be provided to or integrated with the application data servers at step . Moreover at step rules from for example the rules engine may be provided to the application data servers .

At step the real time program event timeline from step and or the output from step may be received by the application data servers to perform application services such as those described above with respect to . The application services at step may be integrated with response collection operations at step . At step collected responses and user information may be analyzed by for example the analytics module . Moreover the collected responses may be processed by third parties such as the third party partners advertisers for example. In this regard the functions and or services provided by the third party partners advertisers may be integrated with the application services in step .

At step the program s fingerprints may be loaded or stored into a fingerprint database such as the fingerprint database for example. At step an interactive timeline and corresponding fingerprint content may be built. In this instance the interactive timeline creation module the interactive timeline archive and or the timeline event creation module may be utilized to generate an XML file for example which may comprise the interactive timeline information. At step the interactive timeline built in step may be loaded or stored into application servers such as the application data servers for example.

At step on screen graphics for different target viewer devices e.g. ACR based devices viewer devices . . . may be built. For example some of the viewer devices may support Shock Wave Flash or Small Wave Format SWF files. This type of files may be utilized in multimedia and vector graphics and may comprise animations or applets with different levels of interactivity and function. In another example some of the viewer devices may support Hyper Text Markup Language 5 HTML5 which is a language that allows the structuring and presentation of content in the World Wide Web. At step on screen graphics and content for use with a fingerprinted asset may be pushed to a content delivery network utilized by the network television station for distribution.

Referring to there is shown another portion of the flow chart after step . At step the viewer devices may receive the content from the content delivery network and may take fingerprints of the content. At step the viewer devices may send the fingerprints to a third party database for matching. The third party database may be part of the fingerprint match systems shown in or part of the fingerprint vendors . . . shown in for example.

At step when a match occurs the third party database may return to the viewer devices a combination of a content identifier CID that may be representative of the program or network being watch an interactive event ID that may be representative of an interactive event that is being triggered a media time that may be representative of a time in the program corresponding to the interactive event and a network time that may be representative of a benchmark or reference network time such as a network time utilized by an NTP server e.g. NTP server to synchronize network operations. The benchmark or reference network time may be referred to as a network timestamp for example. Moreover the event trigger information described above may be provided by one or more components used to enable the abstraction layer such as the monitor application module for example.

At step the viewer device may utilize the information received from the third party database to call application servers such as the application data servers . Depending on the type of viewer device e.g. different manufacturers models the call made by the viewer device may comprise different information. For example for a first device type the call to the application servers may comprise CID and device type information. In another example for a second device type the call to the application servers may comprise the interactive event ID and the device type.

At step the viewer device may receive a reply from the application servers. The reply may comprise a content URL that is appropriate for the type of viewer device. For example for a first type of viewer device the application servers may return the URL of the SWF while for a second type of viewer device the application servers may return the URL of an HTML5 page. The application servers may also return event timeline information to the various types of viewer devices.

Referring to there is shown yet another portion of the flow chart after step . At step the application servers may call an advertisement server or ad server to target and track advertisement overlays. At step a viewer device may call the content delivery network to receive the content URL. The content delivery network may return the URL for the content which may be a SWF or HTML page based on the type of viewer device.

At step the requests made by a user of the viewer device may result in additional step or operations. For example a user may request a coupon or other type of reward in response to content displayed on the user s viewer device as a result of an interactive event. In this instance the viewer device may call the application servers as part of the request. At step the application servers may send an acknowledgement or ACK to the viewer device in response to the request. At step the application servers may call an MMS gateway or some other type of fulfillment mechanism to deliver the coupon or reward to the user. The delivery may be made to the viewer device to another device to an electronic account e.g. email etc. or to another device account that the user identifies as a preferred place for receiving the coupon or reward.

The processor module may comprise suitable logic circuitry code and or interfaces that may be operable to perform the operations functions processes computations and the like described herein with respect to the RTEM . In this regard the processor module may be operable to enable an abstraction layer utilized for supporting fingerprint technologies from different vendors.

The processor module may be operable to handle events such as live events time scheduled events and pre recorded events. The processor module may be operable to assign interactive event IDs or similar information to video and or audio fingerprints generated by one or more RTFSs. Moreover the processor module may be operable to handle network timing information for synchronizing the operation of the RTFSs.

The processor module may comprise at least one processing device . The processing device may be a central processing unit CPU a digital signal processor DSP and or other type of integrated circuit that may be utilized to perform data processing operations.

The memory module may comprise suitable logic circuitry code and or interfaces that may be operable to store information utilized to enable the abstraction layer. The network module may comprise suitable logic circuitry code and or interfaces that may be operable to allow the RTEM to communicate with one or more RTFSs and or with an offline infrastructure such as the offline fingerprint module described above with respect to . The network module may be operable to support one or more communication protocols such as wireline protocols and or wireless protocols. The network module may be operable to receive information related to time scheduled events and or pre recorded events.

The I O interface module may comprise suitable logic circuitry code and or interfaces that may be operable to interact with one of more sources of interactive events information such as an interactive director for example.

The processor module may comprise suitable logic circuitry code and or interfaces that may be operable to perform the operations functions processes computations and the like described herein with respect to the RTFSs . . . and the RTFSs . . . . In this regard the processor module may be operable to perform fingerprinting operations for a vendor specific technology that may be provided for broadcasting to the network module for example. Because the processor module or other similar module in one of the RTFSs may perform vendor specific fingerprinting operations that are different from those in other RTFSs the use of an abstraction layer at a real time event trigger infrastructure can enable a simplified implementation of an ACR system capable that supports multiple RTFSs with different vendor specific technologies.

The processor module may be operable to perform ACR or fingerprinting computations on a network television feed for audio and or video fingerprinting. In this regard the processor module may be operable to handle frame by frame fingerprinting operations for example. Moreover the processor module may be operable to handle network timing information for synchronizing the operation of the RTFS with that of a network time protocol server such as the network time protocol server .

The processor module may comprise at least one processing device . The processing device may be a CPU a DSP and or other type of integrated circuit or ASIC that may be utilized to perform data processing operations.

The memory module may comprise suitable logic circuitry code and or interfaces that may be operable to store information utilized to enable the abstraction layer. The memory module may be operable to store information generated in connection with fingerprinting computations.

The network module may comprise suitable logic circuitry code and or interfaces that may be operable to allow the RTFS to communicate with a corresponding one of the fingerprint match systems or with a corresponding one of the fingerprint vendors . . . described above. The network module may also be operable to support communication between the RTFS and a network time protocol server such as the network time protocol server . The network module may support one or more communication protocols such as wireline protocols and or wireless protocols.

The system may comprise multiple fingerprint servers communicatively coupled to the network time server. At step each of the fingerprint servers may be operable to generate video fingerprints in real time from a network television feed. Moreover each of the fingerprint servers may utilize a video fingerprint computation that may be different from a video fingerprint computation utilized by any of the other fingerprint servers. The fingerprint servers may correspond to those RTFSs from the RTFSs . . . that support video fingerprinting or the RTFSs . . . .

At step the RTFSs may assign one or more of the interactive event identifiers to the video fingerprints generated by each of the fingerprint servers. The assignment may be based on a time corresponding to each identified interactive event.

At step the fingerprint servers may communicate the video fingerprints and the assigned interactive event identifiers to a corresponding one of several fingerprint match systems. Each of the fingerprint match systems may be operable to communicate with a plurality of devices e.g. viewer devices . . . that utilize the same video fingerprint computation utilized by the fingerprint server that corresponds to that fingerprint match system. Examples of the fingerprint match systems may be those of the fingerprint match systems that are operable to support video fingerprints or the fingerprint vendors and .

In another embodiment of the invention the ACR system may comprise in addition to the fingerprint servers an audio server. The audio server may be operable to generate audio fingerprints in real time from the network television feed. The audio fingerprints may be generated utilizing an audio fingerprint computation. The monitor application module and or the RTEM for example may be operable to trigger one or more interactive event identifiers and corresponding data against the RTFS for real time association with audio fingerprints from the specified broadcast network. The assignment may be based on a time corresponding to each identified interactive event. The RTEM may be operable to receive one or more inputs from a user e.g. an interactive director and to generate based on those inputs a real time timeline that comprises the interactive event identifiers assigned to the video fingerprints generated by the fingerprint servers. The RTEM may be operable to communicate the interactive event identifiers to a television system e.g. legacy system and or to a web system. The interactive event identifiers may be utilized in the television system and or in the web system to trigger interactive events. Moreover the communication of the interactive event identifiers may be based on one or more of an EBIF an HLS a satellite network protocol or some other protocol.

The audio server may communicate the audio fingerprints and the assigned one or more interactive event identifiers to an additional fingerprint match system that is operable to communicate with a plurality of devices that utilize the same audio fingerprint computation utilized by the audio server. An example of the audio server may be the audio RTFS or one of the RTFSs . . . that is operable to provide audio fingerprinting. An example of the additional fingerprint match system may be the audio fingerprint vendor or one of the fingerprint match systems that is operable to support audio fingerprints.

In another aspect of the embodiment of the invention the monitor application module for example may generate video fingerprints in real time from the network television feed. The offline fingerprint module may be operable to compare the generated video fingerprints to video fingerprints generated from pre recorded content and to determine the one or more interactive event identifiers based on the comparison. The network television feed may comprise network time reference information utilized to synchronize the interactive event identifiers with the video fingerprints generated by the fingerprint servers.

The offline fingerprint module may be operable to generate a timeline from the pre recorded content. The timeline may comprise interactive event identifiers each of which corresponds to a particular time in the timeline. The offline fingerprint module may be operable to determine from the interactive event identifiers in the timeline and based on the comparison described above the interactive event identifiers assigned to the video fingerprints generated by the fingerprint servers.

The offline fingerprint module may be operable to determine a version of the pre recorded content. The offline fingerprint module may be operable to generate the timeline of the pre recorded content based on the version of the pre recoded content video fingerprints generated from a master e.g. air master of the pre recorded content and a timeline generated from the master of the pre recorded content.

In another aspect of the embodiment of the invention the fingerprint servers may be operable to generate message e.g. heartbeat messages comprising network time reference information. The messages may be communicated to the fingerprint match systems which in turn may communicate the information in the messages to their corresponding viewer devices. The network time reference information may be referred to as a network timestamp for example.

In another embodiment of the invention the RTEM and or the video RTFSs may be operable to receive one or more interactive event identifiers from one or more sources and assign to different sets of video fingerprints the one or more interactive event identifiers. A different set of video fingerprints may be generated from a network television feed by each respective video RTFS each of which supports a different video fingerprint technology. The RTEM and or the audio RTFS may also assign to the one or more interactive event identifiers a set of audio fingerprints generated by the audio RTFS. The assignment of the interactive event identifiers to the different sets of video and or audio fingerprints may be based on a time corresponding to each identified interactive event. The network television feed may comprise network time reference information e.g. timestamps utilized to synchronize the one or more interactive event identifiers to the different sets of video fingerprints. In this regard the synchronization can occur by having time association based on using NTP server to fingerprint association.

In another aspect of the invention the monitor application module may generate a set of video fingerprints in real time from the network television feed. The monitor application module the fingerprint database the timeline event creation module and or the interactive timeline archive may be utilized to compare the generated set of video fingerprints to a set of video fingerprints generated from pre recorded content and to determine at least a portion of the interactive event identifiers based on the comparison. Moreover a timeline may be generated from the pre recorded content where the timeline may comprise a plurality of interactive event identifiers each of which corresponds to a particular time in the timeline. At least a portion of the interactive event identifiers assigned to the different sets of video fingerprints may be determined from the interactive event identifiers in the timeline and based on the comparison.

In another aspect of the invention the content version comparison module may be utilized to determine a version of the pre recorded content. The timeline of the pre recorded content may be generated based on one or more of the version of the pre recoded content a set of video fingerprints generated from a master of the pre recorded content and a timeline generated from the master of the pre recorded content.

In another aspect of the invention the live event trigger module in the RTEM may be operable to receive one or more inputs from a user and to generate based on the one or more inputs a portion of the one or more interactive event identifiers assigned to the different sets of video fingerprints by the respective RTFS s . The time scheduled event trigger module in the RTEM may also be operable to receive a network television schedule and to generate based on the network television schedule at least a portion of the one or more interactive event identifiers assigned to the different sets of video fingerprints by the respective RTFS s .

The video RTFSs and as well as to the audio RTFS can all be synchronized using an NTP server. The RTEM may also be operable to communicate to one or both of a television system e.g. legacy system and web based systems the interactive event identifiers to trigger interactive events in those systems. The communication may be performed via EBIF event triggers on legacy cable systems ID3 tags on web and connected devices supporting the HLS Http Live Streaming protocol and satellite network iTV protocols used by NDS and Echostar for example.

Another embodiment of the invention may provide a non transitory machine and or computer readable storage and or media having stored thereon a machine code and or a computer program having at least one code section executable by a machine and or a computer thereby causing the machine and or computer to perform the steps as described herein for an automatic content recognition abstraction layer.

Accordingly the present invention may be realized in hardware software or a combination of hardware and software. The present invention may be realized in a centralized fashion in at least one computer system or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system or other apparatus adapted for carrying out the methods described herein is suited. A typical combination of hardware and software may be a general purpose computer system with a computer program that when being loaded and executed controls the computer system such that it carries out the methods described herein.

The present invention may also be embedded in a computer program product which comprises all the features enabling the implementation of the methods described herein and which when loaded in a computer system is able to carry out these methods. Computer program in the present context means any expression in any language code or notation of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation b reproduction in a different material form.

While the present invention has been described with reference to certain embodiments it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted without departing from the scope of the present invention. In addition many modifications may be made to adapt a particular situation or material to the teachings of the present invention without departing from its scope. Therefore it is intended that the present invention not be limited to the particular embodiment disclosed but that the present invention will include all embodiments falling within the scope of the appended claims.

