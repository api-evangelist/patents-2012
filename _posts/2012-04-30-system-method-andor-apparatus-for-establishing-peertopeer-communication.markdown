---

title: System, method, and/or apparatus for establishing peer-to-peer communication
abstract: Embodiments of methods, apparatuses, devices and systems associated with peer-to-peer communications are disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08443057&OS=08443057&RS=08443057
owner: Adobe Systems Incorporated
number: 08443057
owner_city: San Jose
owner_country: US
publication_date: 20120430
---
This application is a continuation application of and claims priority to U.S. application Ser. No. 12 034 649 that was filed on Feb. 20 2008 and issued as U.S. Pat. No. 8 171 147 on May 1 2012 the entire contents of which are incorporated herein by reference.

Embodiments of the invention relate to the field of peer to peer communication and more specifically to establishing communication between peers.

To form a session to a server capable of providing a service and or resource a client may first establish a session with a server. Some communications protocols such as Transmission Control Protocol TCP have no identifying information at the transport level beyond the socket address. Other protocols such as Secure Media Flow Protocol MFP contain cryptographic credentials which allow the client to determine if a responder has the desired identity and continue with session startup and communication. In addition a computing device such as a client may under some circumstances want to communicate with one or more other computing devices on a peer to peer basis in addition to communicating with the server over the established session. To communicate on a peer to peer basis a client may establish and manage a separate session with a peer device. As such an application hosted on such a client typically manages communication with a server and peer device through multiple logical connections according to an application programming interface API . Accordingly solutions for establishing and managing computing device peer to peer communications in addition to client server communications may be advantageous.

In the following detailed description numerous specific details are set forth to provide a thorough understanding of the claimed subject matter. However it will be understood by those skilled in the art that the claimed subject matter may be practiced without these specific details. In other instances methods procedures and or components that would be known by one of ordinary skill have not been described in detail so as not to obscure the claimed subject matter.

Reference throughout this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of claimed subject matter. Thus the appearances of the phrase in one embodiment and or an embodiment in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures and or characteristics may be combined in one or more embodiments.

 Instructions as referred to herein relate to expressions which represent one or more logical operations. For example instructions may be machine readable by being interpretable by a machine for executing one or more operations on one or more data objects. However this is merely an example of instructions and claimed subject matter is not limited in this respect. In another example instructions as referred to herein may relate to encoded commands which are executable by a processing circuit having a command set which includes the encoded commands. Such an instruction may be encoded in the form of a machine language understood by the processing circuit.

 Storage medium as referred to herein relates to media capable of maintaining expressions which are perceivable by one or more machines. For example a storage medium may comprise one or more storage devices for storing machine readable instructions and or information. Such storage devices may comprise any one of several media types including for example magnetic optical or semiconductor storage media.

Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout this specification discussions utilizing terms such as processing computing calculating selecting forming enabling inhibiting identifying initiating obtaining hosting maintaining representing modifying receiving transmitting establishing determining and or the like refer to the actions and or processes that may be performed by a computing platform such as a computer or a similar electronic computing device that manipulates and or transforms data represented as physical electronic and or magnetic quantities and or other physical quantities within the computing platform s processors memories registers and or other information storage transmission reception and or display devices. Such actions and or processes may be executed by a computing platform under the control of machine readable instructions stored in a storage medium. Further unless specifically stated otherwise processes described herein with reference to flow diagrams or otherwise may also be executed and or controlled in whole or in part by such a computing platform.

In one embodiment a computing platform may comprise one or more communication adapters to enable communication between processes executing on the computing platform and a network. Such a communication adapter may comprise a device capable of transmitting information to and or receiving information from a communication channel and or data link. In one particular embodiment for example a communication adapter may be capable of transmitting information to and or receiving information from a data transmission medium according to a predefined communication protocol.

A client as referred to herein relates to a process that is capable of communicating with other processes through a network to perform one or more functions or tasks. For example a client may comprise one or more application programs hosted on a computing platform capable of transmitting information to and or receiving information from a network through a communication adapter.

A server as referred to herein relates to a process that is capable of providing a service and or resource to other processes such as clients in communication with the server over a network. In one particular example a server may comprise one or more application programs hosted on a computing platform capable of transmitting information to and or receiving information from a network through a communication adapter.

A peer device as used herein relates to a process that is capable of communicating with other processes through a network to perform one or more functions or tasks. A peer device may perform functions similar to a server at times while also performing functions similar to a client at times. For example a peer device may comprise one or more application programs hosted on a computing platform capable of transmitting information to and or receiving information from a network through a communication adapter.

A session as referred to herein relates to a period during which processes communicate over a network to perform one or more tasks operations and or functions. In one particular embodiment a session may be established between a client and a server for the purpose of providing one or more resources and or services to the client. For example such a session between a client and server may be established for any one of several communication protocols e.g. TCP IP for the transmission of datagrams and or packets. In a particular embodiment such a session may be established according to a particular communication protocol enabled by a network employing network data link and physical layer protocols for transmission of information between processes according to associated addresses.

A connection as referred to herein relates to a logical representation of one or more sessions. For example such a connection may provide a logical representation of sessions to multiple devices. As illustrated below in particular examples such a connection may be enabled by an application programming interface API allowing an application program hosted on one device to communicate with two or more other devices through a single connection.

According to an embodiment client device and or peer device may comprise one or more processes hosted on one or more computing platforms that may be communicatively coupled to the network by a communication adapter not shown . Such processes may comprise for example one or more application programs which are enabled and or supported by procedures and or functions of an API. Here such procedures and or functions of an API may enable such an application program to communicate through a communication adapter with processes hosted on other devices.

Similarly server may comprise processes hosted on one or more computing platforms connected to the network by an associated communication adapter. In particular embodiments each server may be hosted on its own associated computing platform which is distinct from computing platforms hosting other servers . Alternatively two or more servers may be hosted on a single computing platform.

According to an embodiment client device and or peer device may establish a connection which may initiate a session with server to provide a service by for example establishing a second session through which client device and or peer device may communicate with server over the network. Client device and or peer device may comprise any one of several application programs hosted on a computing platform such as for example email applications web browsers document processing programs media players one or more peer to peer publishing standards and or the like.

In one particular example in a peer to peer session one peer device may function as a publisher or publishing device while a second peer device may function as a renderer or rendering device. Here it should be understood that client device and or peer device may be hosted and or executed on any one of several devices capable of communicating with a network such as for example personal computers mobile telephones personal digital assistants just to name a few examples. In particular embodiments although claimed subject matter is not limited in this respect a server may comprise a print server adapted to process print jobs web server email server content server adapted to distribute audio or video content e.g. through streaming . In a particular embodiment server may be addressable through a single socket address. A socket address may comprise for example information combining an IP address and a UDP port number.

In accordance with an embodiment one possible API implementation of establishing client server communication and peer to peer communication without a particular application program directly creating a separate session for each is as follows 

In a particular implementation the API as illustrated above may enable an application program to communicate through multiple sessions. Such multiple sessions may be created for communication with an application program through a single connection using any one of several protocols and or techniques such as for example establishing multiple sessions using TCP IP and or SIP just to name a few examples.

In one particular implementation again not limiting claimed subject matter multiple sessions for communication between an application program and two or more devices may be facilitated with the use of endpoint discriminators associated with the two or more other devices. Here such an endpoint discriminator may relate to information that identifies a particular endpoint among one or more endpoints associated with a transport layer connection and or transport layer session. Such an endpoint discriminator may comprise for example a Uniform Resource Identifier URI such as a Uniform Resource Locator URL Uniform Resource Name URN domain name and or the like comprising information identifying a particular resource and or entity. Such information may comprise a string of characters for example. Additionally although not necessarily such an endpoint discriminator may be independent of any particular network address for example. In other alternative embodiments an endpoint discriminator may be derived as a function of information identifying a particular resource and or entity.

At block client device may establish a connection which may in turn initiate a session with a server such as server by including a destination socket address and an endpoint discriminator identifying a particular server such as by using a data packet as shown in . Here one or more servers associated with the destination socket address may initiate the session with the client. In one embodiment a server associated with the endpoint discriminator may receive the session request and send a response message to the client. In another embodiment a server at the destination socket address in the session request may not be the desired server identified by the endpoint discriminator but may be in communication with the desired server.

At block process may convert employ and or utilize a portion of the connection established by the client device to establish a session between the client device and a peer device. For example to a particular application program interacting with the API it may appear that there is only one connection and that one or more portions such as one or more data streams of that connection have been converted for use in peer to peer communications. However the API allows the application program to actually establish and manage a separate session for the peer communication as though the separate session were a portion of the already established connection. For example the server may construct an endpoint discriminator based at least in part on the identity of such a peer device for allowing subsequent communication between the client device and the peer device such as with a packet as shown with regard to so that the endpoint discriminator and or socket address now identifies the peer device as opposed to a server destination. In one embodiment in response to a client device identifying a peer device to the API managing the connection corresponding to the established session for direct peer communication a portion of the connection may appear to be converted for such communication. The API may under some circumstances allow the application program to actually establish a second session for the peer communication while allowing the application to treat that session as though it were a portion of the already established connection. Under some circumstances the converted portion of the connection between the server and client device may bypass the server for subsequent communication between the client device one or more peer devices. As just one example a portion of a connection corresponding to an established session between a client device and a server may appear to be converted for communication between the client device and a peer device. However the API has allowed the application program to establish a second session for the peer communication which to the application program on the client appears to be a converted portion of the connection. In one embodiment the converted portion of the established connection may bypass the server such as by establishing a different session to the peer device which may appear to an application program hosted on the client device to be a portion of the established connection between the server and the client device. Accordingly such an application program hosted on the client device may directly communicate with the peer device through the established connection while bypassing the server. For example the client device may communicate with the peer device to communicate transmit and or receive one or more files messages and or other data such as streaming audio and or video content. In this context the term bypass as used herein may relate to direct communication between peer computing devices without further interaction and or intervention with a server. In the particular example above a converted portion of a connection established between the client and server may no longer need to be directed through the server in order to allow communication between the client device and a peer device.

With regard to box a client may receive information from the server wherein the information may be associated with one or more other devices e.g. peer devices . For example the server may have earlier transmitted the client information relating to one or more other devices available for peer to peer communication. The information may comprise for example one or more communication parameters associated with such other devices. For example communication parameters may include physical locations of the other devices network addresses of the other devices names of the other devices and or other information that would allow the client and or the server to identify and or communicate with the other devices. For example a name of the other device may comprise an identifier of some sort associated with a peer device such as a domain name associated with the peer device a URL associated with the peer device a user name associated with a software program running on the peer device or a computing platform name associated with a peer device and or any other unique identifier associated with a peer device. In this example a client may then use an API such as API to convert a portion of the connection into a session with an available peer device. For example with regard to box the client may then use the converted portion of the connection to communicate with the available peer device. With regard to box the client and peer device may use the converted portion of the connection to publish and or render one or more portions of data one or more files and or stream data between the peer device and an application program hosted on the client. In an alternate embodiment the client may not yet know information relating to available peers and may instead send a request to the server via the API and or the established connection wherein the request indicates that client would like to communicate directly with a peer device.

In this example the server may then redirect the client to one or more available peer devices. The server may in this example communicate with the one or more available peers to let them know that the client may be contacting them to establish a session associated with the client s connection. The server may then transmit a forwarding message that may include for example information relating to the initial client to the peer device. The server may also send a response message containing the socket address network address and or port number of the identified peer device to the client. An application hosted on the client may then use a portion of the established connection to communicate with the peer device at the identified socket address. Under some circumstances the server may also be able to terminate the communication between the client and the peer device such as by communicating an instruction to terminate the peer communication to the client via the established connection.

With regard to box a client may employ a portion of a connection corresponding to a session established between the server and the client for peer to peer communication between the client and one or more peer devices such as peer device for example. In this embodiment an API at the client such as API may convert a portion of the connection for use in the peer to peer communication. For example based at least in part on receiving a request for peer communication such as the packet shown in the API may convert a portion of the connection for use in peer to peer communication that bypasses further communication with the server. In this embodiment the request may include an endpoint discriminator and or socket address associated with a second client such as a peer device as shown in box . For example in response to receiving a bypass request the server may reply to the client with any information necessary for direct communication with the second client using the connection corresponding to the established session. For further example in response to a bypass request the server may re direct the client to the second client while also contacting the second client to inform it of the redirect as shown in box . With regard to box process may allow further direct communication between the client device and the peer device without requiring further actions upon the part of the server such as by allowing direct communication between the peer devices while bypassing further communication with the server along the converted portion of the connection.

In the preceding description various aspects of claimed subject matter have been described. Furthermore although one or more embodiments are described in terms of various examples it should be noted that the above described embodiments are merely illustrative examples and that claimed subject matter is not limited to those examples. For purposes of explanation specific numbers systems and or configurations were set forth to provide a thorough understanding of claimed subject matter. However it should be apparent to one skilled in the art having the benefit of this disclosure that claimed subject matter may be practiced without the specific details. In other instances features that would be understood by one or ordinary skill were omitted and or simplified so as not to obscure claimed subject matter. While certain features have been illustrated and or described herein many modifications substitutions changes and or equivalents will now occur to those skilled in the art. It is therefore to be understood that the appended claims are intended to cover all such modifications and or changes as fall within the true spirit of claimed subject matter.

