---

title: Mobile device navigation state application programming interface
abstract: A method includes providing a service to expose navigation events data generated by a maps navigation application on a Linux-based mobile computing device platform to a third party application. The method further includes making provisions for verification on the mobile computing device platform that the third party application is authorized to access the navigation events data, and for establishing an interprocess service connection to the third party application upon verification of authorization.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08886460&OS=08886460&RS=08886460
owner: Google Inc.
number: 08886460
owner_city: Mountain View
owner_country: US
publication_date: 20121129
---
Mobile and connected devices e.g. smart phones tablets etc. which provide Internet connectivity to device users on the move are transforming patterns of social and business behavior. Consumers are increasingly integrating mobile behaviors into their lifestyles. There is a growing use of mobile applications not merely mobile search browsers for diverse purposes including automatically receiving varied information and communications.

Popular applications for mobile computing devices include maps applications that make varied geographic information available to users. The geographic information that these maps applications can provide includes for example geographic or cartographic maps orthoimagery aerial photographs elevation geographic names hydrography boundaries transportation structures and land cover etc.

Further mobile computing devices commonly incorporate location determining technology e.g. GPS which can determine the instantaneous latitude and longitude co ordinates GPS location of the mobile computing devices. Other location determining technologies e.g. cell tower or wireless access point triangulation are also available and in widespread use for determining the instantaneous geographic locations of mobile computing devices.

The geographic information provided by the maps applications can be based on the instantaneous locations of the mobile computing devices. The maps applications can for example include navigation functions that use device location to provide the same navigation information e.g. street maps turn by turn voice guidance and automatic rerouting etc. that is provided by stand alone satellite navigation systems. However Internet connected maps applications can further use device location information in powerful web searches to provide a slew of local navigation state information in addition to the geographic maps including for example current snapped to road location intended destination route to destination traffic status distance remaining estimated arrival time full place restaurant reviews and summaries from Zagat editors detailed maps with 3D buildings indoor mapping public transportation information zoom able street views live traffic information terrain transit lines route planners for traveling by foot car or bike ride finders urban business locator maps etc. An example maps navigation application even plots out Wikipedia entries related to the device location.

Third party applications may have use for the navigation state information generated by a maps application for example to provide targeted location based services or features to a mobile computing device user. However considerations of user autonomy and privacy preclude unrestricted exposure of the navigation state information by the maps application to the third party applications.

Consideration is now being given to ways of implementing user approval or authorization procedures for exposure of the navigation state information generated by a maps application to third party applications.

A mobile computing device e.g. a smartphone tablet netbook has a computing platform to launch applications. The computing platform hereinafter mobile computing device platform includes a Linux based operating system e.g. an Android operating system which governs hardware components e.g. processor memory keypad display etc. and other components and processes of the mobile computing device.

According to one general aspect a computer implemented method includes providing a service to publish navigation events data generated by a maps navigation application launched on a mobile computing device platform to a third party application. The method further includes making provisions for verification that the third party application is authorized to access the navigation events data and making provisions for establishing upon authorization an interprocess service connection to the third party application on the mobile computing device platform.

In another aspect the method includes providing an application programming interface for the third party application to access the service on the mobile computing device platform. The method further includes making provisions for implementing a permission model in which user consent or authorization for access to the navigation events data is obtained e.g. by prompting a user for consent when the third party application is first installed on the mobile computing device and permissions for access to the navigation events data are declared in control files of both the maps navigation application and the third party application.

In another aspect the method includes making provisions for receiving a registration call from the third party application seeking access to the navigation events data and initiating processes to establish an interprocess service connection to the third party application with a service binder. A service binder object may define an interface for interprocess communication via the mobile device computing platform. The method may further include making provisions for alerting the third party application when the interprocess service is connected. In a further aspect the method includes making provisions for attachment of a navigation events listener by the third party application.

In a general aspect the foregoing method is used to configure a mobile computing device to allow exposure of navigation events data generated by a maps navigation application to third party applications. A tangible computer readable storage medium has instructions stored thereon which instructions when executed by one or more microprocessors can cause a computer system to configure the mobile computing device according to the foregoing method to allow exposure of navigation events data generated by a maps navigation application to third party applications.

In a general aspect a computing device has a computing platform to launch applications. The computing platform is supported by the one or more hardware components and other components of the computing device governed by an operating system. The operating system can be a Linux based operation system. A maps navigation application in conjunction with the computing platform includes a service to selectively expose navigation events data generated by a maps navigation application. The computing platform in conjunction maps navigation application has provisions for verification that a third party application is authorized to access the navigation events data and for establishing an interprocess service connection between the third party application and the navigation events data generated by the maps navigation application.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings and from the claims.

A mobile computing device is configured to obtain user approval or authorization for exposure of navigation state information generated by a maps application to third party applications on the mobile computing device s computing platform in accordance with the principles of the disclosure herein.

Mobile computing devices e.g. smartphones may have vendor specific operating systems. Common mobile operating systems OS used by modern smartphones include for example Android iOS Symbian BlackBerry OS Bada Windows Phone webOS and embedded Linux distributions such as Maemo and MeeGo.

Android is a Linux based operating system which can scale from basic phones to fully featured smartphones and to tablets and netbooks. Android which is free and open source has grown to become a favorite among mobile application developers. A burgeoning number of third party applications are being developed for the Android operating system by independent third party application developers. The Android operating system is used in the disclosure herein as an example or model operating system for a mobile computing device. However it will be understood that the principles of the disclosure herein are not limited to the Android operating system but are also applicable to other operating systems that may have the same or similar features as the Android.

It will be noted that Android is a privilege separated operating system in which each Android application is assigned a unique user ID UID and run under that UID in a separate process. An Android permission model enforces restrictions on the specific operations that a particular process can perform. Because Android sandboxes applications from each other applications must explicitly share resources and data. A basic Android application has no permissions associated with it. To make use of protected or restricted features of the mobile computing device the Android application s control file e.g. AndroidManifest.xml may include explicit declaration of the permissions requested by the application. One or more tags may be used to declare the permissions requested by the application. For example an application that needs to monitor incoming SMS messages may specify a permission in its control or manifest file as follows 

Similarly an application that needs to control or restrict access to its activities or data may enforce its permissions by declaring them in its AndroidManifest.xml file using one or more tags.

High level permissions may restrict access to entire components of the system or application. These may be implemented by including an android permission attribute on the desired component naming the permission that will be used to control access to it. An activity permission that can be applied to a tag may restrict who can start the associated activity. A service permission that can be applied to a tag may restrict who can start or bind to the associated service. A BroadcastReceiver permission that can be applied to a tag may restrict who can send broadcasts to the associated receiver. A ContentProvider permission that can be applied a tag may restrict who can access the data in a ContentProvider.

Under the Android permission model permissions requested by an application may be granted at application install time based on checks against a certification or signature accompanying the application and or interaction with the user.

Mobile computing device which may take the form of any of a number of different device types including for example a personal computer laptop computer tablet computer netbook computer a television or a smartphone or web enabled phone. Mobile computing device may include a CPU a memory I O and O S . CPU may be any general processor and memory may be one or more storage devices configured to store data used by CPU to perform certain functions. I O may be one or more devices that are used to communicate with computing devices such as a keyboard keypad pointer mouse liquid crystal display LCD monitor touch screen display web camera printer interface modem network card etc. O S may be a Linux based operating system. Mobile computing device may include a browser that may be used to access various types of content. Such content may include web sites photos video audio and executable scripts and applications including for example a maps navigation application.

Mobile computing device may have an example Android computing platform governed by operating system O S . Android computing platform may include a Linux kernel a libraries layer and an application framework services layer to support applications e.g. applications A D that may be launched on mobile computing device .

In Android computing platform Linux kernel which is open source may include services offered by the Linux kernel and associated GNU utility packages. These services may for example include one or more device drivers for hardware components of the computing device e.g. keypad driver A display driver B etc. and an interprocess communications binder driver e.g. binder driver C . Libraries layer may include open source libraries that are made available to all users of Android computing platform . Libraries layer may for example include Android runtime components e.g. core libraries A and Dalvik virtual machine B and other select libraries e.g. collectively Android Libraries C . Applications framework services layer may include further components e.g. telephony manager A geo locator B view manager C etc. that provide applications running on Android computing platform with access to services or processes that are invisible to the user of the mobile computing device. Applications e.g. applications A D may communicate with these services via a message bus. For example a contact application A might instigate a phone call at the behest of a user request by calling on the services of telephony manager A over the message bus. All code found in applications framework services layer e.g. telephony manager A geo locator B view manager C etc. may be closed source code that is written for example in Java specifically for Dalvik virtual machine B.

Further mobile computing device may include location awareness features e.g. GPS navigation unit and or geo locator B that can determine the latitude and longitude coordinates of mobile computing device . Geo locator B may for example be a solution that performs geolocation by associating a geographic location with the Internet Protocol IP address MAC address RFID Wi Fi connection location or device GPS coordinates or other self disclosed user information.

Maps Navigation B which may be a closed source code application launched on computing platform may utilize device GPS coordinates and or the geographical location determined by geo locator B to generate navigational maps and other navigation state based information e.g. navigation events data for the mobile computing device user. Maps Navigation B may also include an event tracker agent configured to track navigational events and dynamically update the navigation state based information with events.

Standard versions or configurations of Android computing platforms may not provide any suitable API to third party applications e.g. Location based services application D for access to device location information or navigation events and data generated by Maps Navigation B. Instead Location based services application D may have to obtain the mobile computing device s GPS coordinates as determined by GPS navigation unit by attaching a GPS listener. shows for example Location based services application D having a GPS listener deployed to obtain GPS location information. GPS listener may be implemented by a permission declaration ACCESS FINE LOCATION in the control file of Location based services application D for example as follows 

In accordance with the principles of the disclosure herein a maps navigation application in conjunction with Android computing platform includes a specific application programming interface API Navigation Events Publisher Service NEPS that is configured to expose navigations events and data generated by the maps navigation application to third party applications. shows such a service API e.g. NEPS API in a maps navigation application e.g. Maps Navigation B launched on Android computing platform . NEPS API may be implemented using standard features of Android computing platforms.

NEPS API may be configured to expose navigations events and data hereinafter navigation state or NEPS data that are generated by Maps Navigation B to a third party application e.g. Navigation state based services application C . The NEPS data generated by Maps Navigation B may include data items such as current snapped to road location intended destination route to destination traffic status distance remaining and estimated arrival time etc. The data may be dynamic and may include events or changes to the data items.

A standard Android Static Install time Permission Model may govern security and authorization for use of NEPS API by the third party application. Under this model user consent or authorization for access to NEPS data may be requested when the third party application e.g. Navigation state based services application C is first installed on Android computing platform .

In an implementation of the permission model permissions to share NEPS data may be required from both Maps Navigation B and the third party application e.g. Navigation state based services application C . The permissions required on the side of Navigation state based services application C may include a permission defined by Maps navigation B in its manifest file in addition to a standard Android FINE LOCATION permission.

An example permission declaration in the manifest file of the third party application e.g. Navigation state based services application C may be as follows 

In operation Navigation state based services application C when first installed may register for NEPS data updates by calling NEPS API via Android computing platform . NEPS API Android computing platform may register Navigation state based services application C for example upon confirming a user certification or signature for Navigation state based services application C and verification of the permissions declared in its manifest file.

NEPS API may respond to a request for access to NEPS data by having Linux kernel e.g. binder driver C generate an Android binder e.g. bindService for establishing an interprocess service connection between Maps Navigation B and Navigation state based services application C. NEPS API may return a service binder object via the mobile device computing platform to the third party application. The service binder object may define an interface for interprocess communication for example via Binder IPC Driver C in Linux kernel . Further NEPS API Android computing platform may alert Navigation state based services application C that the interprocess service is connected. Once connected Navigation state based services application C may access the NEPS data. Navigation state based services application C may for example attach a listener e.g. NEPS listener for navigation events which may be triggered by location changes traffic status changes event tracker agent ETA changes etc.

Method includes providing a service to publish navigation events data generated by a maps navigation application launched on the mobile computing device platform and making provisions for verification that a third party application is authorized to access the navigation events data and making provisions for establishing an interprocess service connection to the third party application upon authorization .

Method may be practiced in instances where the mobile computing device platform includes a Linux based operating system e.g. an Android operating system . The navigation events data generated by a maps navigation application may for example include one or more data items such as current snapped to road location intended destination route to destination traffic status distance remaining and estimated arrival time etc. and events or changes to such data items.

In method providing a service to publish navigation events data generated by a maps navigation application may include providing an application programming interface for the third party application to access the service . Making provisions for verification that a third party application is authorized to access the navigation events data may include implementing a permission model in which user consent or authorization for access to the navigation events data is obtained when the third party application is first installed on the mobile device computing platform for example by prompting a user for consent when the third party application is first installed . Further making provisions for verification that a third party application is authorized to access the navigation events data may include implementing a permission model in which permissions for access to the navigation events data are declared in control files of both the maps navigation application and the third party application .

Further in method establishing an interprocess service connection to the third party application upon authorization may include making provisions to receive a registration call from the third party application seeking access to the navigation events data and initiate processes to establish an interprocess service connection to the third party application . The processes to establish an interprocess service connection to the third party application may include responding to third party application request for access to NEPS data with a service binder object defining an interface for interprocess communication via the mobile device computing platform .

In method establishing an interprocess service connection to the third party application may include alerting the third party application e.g. via the mobile computing platform that the interprocess service is connected . Method may also include making provisions for attachment of a navigation events listener by the third party application .

A computer system may be deployed to practice method in conjunction with a tangible computer readable storage medium having instructions stored thereon. The instructions when executed by one or more microprocessors may cause the computer system to configure a mobile computing device according to method .

A computing device may include a computing platform supported by the one or more hardware components e.g. at least one processor and at least one memory that are governed by an operating system e.g. a Linux based operating system . A maps navigation application in conjunction with the computing platform may include a service to publish navigation events data generated by the maps navigation application provisions for verification that a third party application is authorized to access the navigation events data and provisions for establishing an interprocess service connection to the third party application.

Computing device includes a processor memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . Each of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . In one implementation the storage device may be or contain a computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device or memory on processor .

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of functions is exemplary only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as device . Each of such devices may contain one or more of computing device and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory and an input output device such as a display a communication interface and a transceiver among other components. The device may also be provided with a storage device such as a microdrive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide for example for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display may be for example a TFT LCD Thin Film Transistor Liquid Crystal Display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provided in communication with processor so as to enable near area communication of device with other devices. External interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the computing device . The memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory may also be provided and connected to device through expansion interface which may include for example a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provided as a security module for device and may be programmed with instructions that permit secure use of device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory or memory on processor that may be received for example over transceiver or external interface .

Device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication may occur for example through radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth Wi Fi or other such transceiver not shown . In addition GPS Global Positioning System receiver module may provide additional navigation and location related wireless data to device which may be used as appropriate by applications running on device .

Device may also communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. Audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smart phone personal digital assistant or other similar mobile device.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A number of embodiments have been described. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure herein.

In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other embodiments are within the scope of the following claims.

