---

title: Extended OAuth architecture
abstract: Method, device, and storage medium to receive a request to authorize a release of protected resource data, wherein the request includes one or more indicators that indicate one or more instances of the protected resource data being requested; identify a sensitivity level for each indicator of the protected resource data; determine whether the one or more indicators of the protected resource data require consent from a resource owner of the protected resource data; transmit a request, to a user device associated with the resource owner, for consent from the resource owner in response to a determination that at least one of the one or more indicators require consent from the resource owner; generate an authorization code in response to receiving consent from the resource owner; and transmit, to the sending device of the request, the authorization code.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09342667&OS=09342667&RS=09342667
owner: Verizon Patent and Licensing Inc.
number: 09342667
owner_city: Basking Ridge
owner_country: US
publication_date: 20121121
---
The OAuth 2.0 specification defines a framework that enables a third party application to obtain limited access to a Hypertext Transfer Protocol HTTP service either on behalf of a resource owner by coordinating an approval interaction between the resource owner and the HTTP service or by allowing the third party application to obtain access on its own behalf.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.

The current draft v2 31 of the OAuth 2.0 specification dated Jul. 31 2012 which is a work in progress and incorporated herein by reference supports various authorization grant mechanisms. The OAuth 2.0 specification defines four roles resource owner resource server client and authorization server. The resource owner is an entity capable of granting access to a protected resource. The resource server is the server hosting the protected resources and capable of accepting and responding to protected resource requests using access tokens. The client is an application making protected resource requests on behalf of the resource owner and with the resource owner s authorization. The authorization server is the server issuing access tokens to the client after successfully authenticating the resource owner and obtaining authorization.

A client that wants to obtain access to the resources e.g. data having data attributes defined by a specific scope can send a request to an authorization server to obtain an authorization grant. According to the OAuth 2.0 specification one of the supported authorization grants is based on an authorization code. An authorization server issues the authorization grant to a requesting client after authenticating the resource owner and obtaining authorization. Since the resource owner only authenticates with the authorization server the resource owner s credentials are not shared with the client. Resources in the above context may be subscriber profile attributes also called scopes in the OAuth 2.0 specification. Given the expansive nature of the current version of the OAuth 2.0 standard this description does not intend to set forth an exhaustive treatment or review of the current version.

The current version of the OAuth 2.0 specification however does not specify among other things how to handle a scope that includes data attributes of differing levels of sensitivity e.g. access levels . Rather the OAuth 2.0 specification assumes that all scopes are of similar sensitivity. Additionally the OAuth 2.0 specification requires explicit end user consent for all requested scopes.

According to an exemplary embodiment an extended OAuth architecture supports multiple scopes of different sensitivities in a single request. According to an exemplary implementation data attributes of a scope may be assigned a sensitivity level such as public private or a combination thereof. According to other implementations other types of categories or sensitivity levels may be applied to scopes. As an example of a scope with multiple sensitivities a scope may include the following data attributes mobile device type billing address prepaid or postpaid and country of residence. Mobile device type and country of residence may be assigned a sensitivity level of public. However billing address and prepaid or postpaid may be assigned a sensitivity level of private.

According to an exemplary embodiment release of a resource that is assigned a sensitivity level of public does not require consent from the resource owner. Conversely according to an exemplary embodiment release of a resource that is assigned a sensitivity level of private requires consent from the resource owner. According to an exemplary embodiment an authorization device generates an authorization code as an authorization grant to allow a client to obtain an access token and in turn obtain the resource data from a resource device.

According to an exemplary embodiment when a scope includes a mixture of both private and public scopes the authorization device seeks consent from the resource owner only for the private scopes. According to an exemplary embodiment the authorization device identifies the sensitivity level s of a data attribute s present in a request.

While exemplary embodiments provided in this description may be implemented based on the use of a particular network architecture or platform messaging scheme etc. such implementations are not intended to be restrictive or provide an exhaustive treatment as such. In other words the embodiments described herein may be implemented using other suitable network architectures messaging scheme etc. which may not be specifically described.

The number of devices and the configuration in environment are exemplary and provided for simplicity. According to other embodiments environment may include additional devices fewer devices different devices and or differently arranged devices than those illustrated in . According to other embodiments a single device in may be implemented as multiple devices. Additionally or alternatively according to other embodiments multiple devices may be implemented as a single device. For example resource device and authorization device may be implemented as a single device. Additionally or alternatively environment may include additional networks and or differently arranged networks than those illustrated in .

A device may be implemented according to a centralized computing architecture a distributed computing architecture or a cloud computing architecture. Additionally a device may be implemented according to one or multiple network architectures e.g. a client device a server device a peer device proxy device or a combination thereof . Also according to other embodiments one or more functions and or processes described as being performed by a particular device may be performed by a different device or some combination of devices which may or may not include the particular device.

Environment may be implemented to include wired and or wireless connections among the devices and the network illustrated. A connection may be direct or indirect and involve intermediary device s and or network s not illustrated in .

Network includes one or multiple networks that provide s an extended OAuth service as described herein. Network may be implemented as a terrestrial based network. For example network may be implemented as an Internet Protocol IP network a private network a public network or other suitable network.

Resource device includes a device that stores and or hosts resources. For example resource device may be implemented as a resource server. The resources may include data of varying sensitivity levels. For example resource data may be categorized as public resource data or private resource data. According to other implementations resources may include data having a different nomenclature or categorization for designating a sensitivity level e.g. access level .

Authorization device includes a device that authorizes access to resources according to the extended OAuth service as described herein. For example authorization device may be implemented as an authorization server. In contrast to an authorization server of the current OAuth 2.0 specification according to an exemplary embodiment authorization device provides an extended OAuth service that supports multiple scopes of varied sensitivities as described herein. According to an exemplary implementation scopes may be designated as public private or other designations that indicate whether authorization is to be sought from the resource owner. According to another implementation scopes may be designated in a ternary system or a higher system in which varying levels of consent from the resource owner may be imposed. By way of example for resource data having a low level sensitivity no consent is required for resource data having a medium level of sensitivity any method of consent is acceptable and for resource data having a high sensitivity level only particular methods of consent are accepted. According to still other implementations sensitivity schemes that include finer granularity levels may be used.

According to an exemplary embodiment authorization device may or may not obtain authorization from the resource owner depending on the sensitivity level of the resource data. This is in contrast to the authorization server of the current OAuth 2.0 specification. According to an exemplary implementation authorization device obtains authorization from the resource owner when the sensitivity level of the resource data is designated as private or other designation that requires consent from the resource owner. Conversely according to an exemplary implementation authorization device may not obtain authorization from the resource owner when the sensitivity level of the resource data is designated as public or has another designation that does not require consent from the resource owner.

According to an exemplary embodiment authorization device generates an authorization code as an authorization grant without seeking consent from the resource owner when the sensitivity level of the resource data is below a threshold. For example authorization device generates a default authorization code when the sensitivity level of the resource data is public. Conversely according to an exemplary embodiment authorization device generates an authorization code as an authorization grant after obtaining consent from the resource owner when the sensitivity level of the resource data is above a threshold. For example authorization device generates an authorization code when the sensitivity level is private and resource owner consent is obtained.

Authentication device includes a device that authenticates resource requesting device . For example authentication device validates a client e.g. resource requesting device .

Resource requesting device includes a device that requests access or use of resources stored and or hosted by resource device . For example resource requesting device may be implemented as a client.

User device includes a device capable of communicating with network . For example user device may be implemented as a mobile device e.g. a smartphone a tablet device a personal digital assistant PDA a personal communication system PCS etc. a computer e.g. a desktop computer a laptop computer a palmtop computer a netbook a smart television a television and a set top box a vehicular communication system or other types of user devices capable of communicating with network .

According to this scenario assume that Company X is partnered with a wireless service provider of the user. According to this partnership resource requesting device includes a carrier proprietary application programming interface API that allows resource requesting device to determine the wireless carrier associated with the telephone number or mobile directory number MDN pertaining to the user. Resource requesting device obtains the user s mobile number or MDN from the user. Resource requesting device identifies the wireless carrier associated with the user based on the mobile number or MDN. According to other implementations resource requesting device may select an extended OAuth service provider based on other methods and or information. By way of example the user may provide an extended OAuth identifier or a landline telephone number. Alternatively a single sign on service may include extended OAuth services which allows resource requesting device to select the extended OAuth service provider associated with the user.

Additionally according to this partnership resource requesting device also includes a subscriber profile API that allows the resource requesting device to obtain subscriber profile information based on the extended OAuth service.

In steps and based on the identification of the user s wireless provider resource requesting device redirects e.g. an HTTP 302 redirect user device to authorization device . According to an exemplary implementation the redirect uses a Uniform Resource Identifier URI that includes one or multiple name value pairs also known as key value pair or attribute value pair or other type of string that indicate s the requested resource data e.g. a string that includes a delimiter etc. . Resource requesting device e.g. subscriber profile API selects the resource data to be obtained via authorization device . For example resource requesting device identifies that the user s name and address is needed to complete a registration process. The URI associated with the redirect includes a string that indicates the requested resource data e.g. the scope pertaining to the user. Additionally the URI also includes a client identifier that identifies resource requesting device . According to other implementations resource requesting device may provide the request for the resource data the client identifier or both in a separate message.

In step authorization device validates resource requesting device with authentication device . For example authorization device extracts the client identifier from the URI or the separate message and passes the client identifier to authentication device . Authentication device verifies that the client identifier is valid. According to this scenario assume that the validation of resource requesting device is successful. According to other scenarios if resource requesting device is not successfully validated then the authorization process may be halted error messages and or security measures may be taken.

In step authorization device identifies the scopes requested. For example authorization device extracts the attribute value pairs or other type of formatted string from the URI. According to an exemplary implementation authorization device maps the scope included in the URI to a sensitivity level. For example authorization device stores or has access to a database or a data structure that allows authorization device to correlate the scope to a sensitivity level such as public or private.

According to this scenario assume that authorization device determines that the scopes e.g. name and address of the user are public. In step authorization device generates an authorization code based on the determination that the requested scopes are public. Authorization device does not seek consent from the resource owner e.g. user of user device .

Referring to in step authorization device redirects user device to resource requesting device with the authorization code. For example the URI includes a string that includes the authorization code. Alternatively authorization device provides the authorization code to resource requesting device using a separate message. In step user device redirects to resource requesting device and resource requesting device obtains the authorization code. For example resource requesting device extracts the authorization code from the URI. In steps and resource requesting device requests an access token based on the authorization code from authorization device via user device . According to this scenario assume that the authorization code is valid and in steps and authorization device issues an access token to resource requesting device via user device .

In step resource requesting device requests the scopes e.g. resource data from resource device based on the received access token. In step resource device validates the access token with authorization device . According to this scenario assume that the access token is successfully validated. In step resource requesting device obtains the requested scopes from resource device . In step resource requesting device uses the requested scopes. For example according to this scenario resource requesting device pre populates a Web page with the requested resource data. In this way the registration process and or the payment process is are facilitated on behalf of the user.

Referring to step according to this scenario assume that authorization device determines that the scopes e.g. name and address of the user are public and the user s credit card information and billing address are private based on using the database or the data structure. In step authorization device provides a log in page to the user to sign into the extended OAuth service. The user provides log in information via the log in page and in step authorization device validates the log in information with authentication device . According to this scenario assume that the user is successfully logged into the extended OAuth service.

Referring to step after a successful login by the user authorization device provides a consent page that indicates the private scopes that require consent from the user. For example authorization device provides a consent page that prompts the user to authorize the release of the user s credit card information and billing address. According to an exemplary implementation authorization device does not seek authorization from the user for the release of the public scopes e.g. the user s name and address . According to this scenario the user authorizes the release of the private scopes via the consent page.

In step authorization device generates an authorization code based on the determination that the requested scopes include private resource data. In step authorization device redirects user device to resource requesting device with the authorization code. In step user device redirects to resource requesting device and resource requesting device obtains the authorization code. In steps and resource requesting device requests an access token based on the authorization code from authorization device via user device . According to this scenario assume that the authorization code is valid and in steps and authorization device issues an access token to resource requesting device via user device .

In step resource requesting device requests the scopes e.g. private resource data from resource device based on the received access token. In step resource device validates the access token with authorization device . According to this scenario assume that the access token is successfully validated. Referring to in step resource requesting device obtains the requested scopes from resource device . In step resource requesting device uses the requested scopes. For example according to this scenario resource requesting device pre populates a Web page with the requested private resource data. In this way the payment process is facilitated on behalf of the user.

Processor may include one or multiple processors microprocessors data processors co processors application specific integrated circuits ASICs controllers programmable logic devices chipsets field programmable gate arrays FPGAs application specific instruction set processors ASIPs system on chips SoCs central processing units e.g. one or multiple cores microcontrollers and or some other type of component that interprets and or executes instructions and or data. Processor may be implemented as hardware e.g. a microprocessor etc. a combination of hardware and software e.g. a SoC an ASIC etc. may include one or multiple memories e.g. memory storage etc.

Processor may control the overall operation or a portion of operation s performed by device . Processor may perform one or multiple operations based on an operating system and or various applications or programs e.g. software . Processor may access instructions from memory storage from other components of device and or from a source external to device e.g. a network another device etc. .

Memory storage may include one or multiple memories and or one or multiple other types of storage mediums. For example memory storage may include one or multiple types of memories such as random access memory RAM dynamic random access memory DRAM cache read only memory ROM a programmable read only memory PROM a static random access memory SRAM a single in line memory module SIMM a phase change memory PCM a dual in line memory module DIMM a flash memory and or some other type of memory. Memory storage may include a hard disk e.g. a magnetic disk an optical disk a magneto optic disk a solid state disk etc. a Micro Electromechanical System MEMS based storage medium and or a nanotechnology based storage medium. Memory storage may include drives for reading from and writing to the storage medium.

Memory storage may be external to and or removable from device such as for example a Universal Serial Bus USB memory stick a dongle a hard disk mass storage off line storage or some other type of storing medium e.g. a compact disk CD a digital versatile disk DVD a Blu Ray disk BD etc. . Memory storage may store data software and or instructions related to the operation of device .

Software may include an application or a program that provides a function and or a process. Software may include firmware. For example authorization device may be implemented with one or more program s and or application s . Additionally for example with reference to user device one or more program s and or application s may be used to display user interfaces communicate with authorization device etc. Additionally for example other devices may be implemented with software to provide a function and or a process described herein.

Communication interface may permit device to communicate with other devices networks systems etc. Communication interface may include one or multiple wireless interfaces and or wired interfaces. Communication interface may include one or multiple transmitters receivers and or transceivers. Communication interface may operate according to one or multiple protocols standards and or the like.

Input may permit an input into device . For example input may include a keyboard a mouse a display a touchscreen a touchless screen a button a switch an input port speech recognition logic and or some other type of visual auditory tactile etc. input component. Output may permit an output from device . For example output may include a speaker a display a touchscreen a touchless screen a light an output port and or some other type of visual auditory tactile etc. output component.

Device may perform processes and or functions as described herein in response to processor executing software stored by memory storage . By way of example instructions may be read into memory storage from another memory storage or read into memory storage from another device via communication interface . The instructions stored by memory storage may cause processor to perform one or more processes described herein. Alternatively for example according to other implementations device may perform one or more processes described herein based on the execution of hardware processor etc. or the execution of software e.g. processor executing software .

Referring to block process begins with receiving a request for a scope. For example authorization device receives a redirect e.g. an HTTP 302 redirect from resource requesting device via user device . For example the redirect uses a URI that includes one or multiple name value pairs or other type of string that indicates the requested resource data of the scope. Additionally for example the URI includes a client identifier that identifies resource requesting device .

In block it is determined whether the client is valid. For example authorization device extracts the client identifier from the URI. Authorization device provides the client identifier to authentication device . Authentication device authenticates resource requesting device based on the client identifier.

If it is determined that the client is not valid block NO then process ends block . For example authorization device generates and provides an error message indicating that the authentication failed. Authorization device may initiate other security measures.

If it is determined that the client is valid block YES then a sensitivity level of the scope is identified block . For example authorization device extracts the one or multiple name value pairs. Alternatively another type of string that indicates the requested resource data of the scope may be used. Authorization device identifies the sensitivity level for each name value pair. By way of example authorization device stores a database or a data structure that maps or correlates a data attribute e.g. name address etc. to a sensitivity level e.g. public private high low etc. .

In block it is determined whether the scope requires resource owner authorization. For example authorization device determines whether consent from the resource owner is required before an authorization grant is provided to the client based on the identified sensitivity level s . By way of example if resource data of the scope is assigned a sensitivity level of public then consent from the resource owner is not needed for that resource data. Conversely if resource data of the scope is assigned a sensitivity level of private then consent from the resource owner is needed for that resource data.

If it is determined that the scope does not require authorization from the resource owner block NO then an authorization code is generated block . For example authorization device generates an authorization code that serves as an authorization grant.

In block the authorization code is provided to the client. For example authorization device uses a redirect to provide the authorization code to resource requesting device via user device . For example the URI of the redirect includes the authorization code.

If it is determined that the scope does require authorization from the resource owner block YES then a request for authorization is provided block . For example authorization device requests from the resource owner consent for the release of resource data of the scope that is assigned a sensitivity level of private. As an example authorization device provides a user interface to request consent from the resource owner. The user interface includes the resource data the attributes of the resource data e.g. billing address etc. or both. Alternatively authorization device may use other well known methods to request consent from the resource owner.

Referring to in block it is determined whether authorization is obtained. For example authorization device determines based on a response from the resource owner whether consent from the resource owner is obtained. If authorization is not obtained block NO then process ends block . For example if the resource owner does not provide consent for the release of the private resource data then authorization device refuses this portion of the request.

If authorization is obtained block YES then an authorization code is generated block . For example if the resource owner provides consent for the release of the private resource data authorization device generates an authorization code that serves as an authorization grant.

In block the authorization code is provided to the client. For example authorization device uses a redirect to provide the authorization code to resource requesting device via user device . For example the URI of the redirect includes the authorization code.

Although illustrate an exemplary process for authorizing a scope request process may include additional operations fewer operations and or different operations than those illustrated in and described herein. For example when a scope request pertains to both private resource data and public resource data there are multiple possible outcomes. For example the resource owner may refuse to consent to the release of all of the private resource data or a portion thereof. According to one implementation if the resource owner fails to consent to the release of all of the private resource data the extended OAuth service fails. For example authorization device provides a message to resource requesting device that consent cannot be obtained. Alternatively according to another implementation the resource owner may consent to the release of only a portion of the private resource data. According to such an implementation authorization device generates an authorization code. As the process continues and resource requesting device obtains the scope e.g. private resource data from resource device resource requesting device may pre populate a page or perform some other usage with the private resource data. Resource requesting device may determine whether to request the private data from the user e.g. directly end the session continue with the session without the private data or perform some other response given the circumstances.

The foregoing description of embodiments provides illustration but is not intended to be exhaustive or to limit the embodiments to the precise form disclosed. Accordingly modifications to the embodiments described herein may be possible.

Although examples of resource data as described herein have pertained to personal information associated with a resource owner e.g. name address etc. the embodiments described are not limited to this type of resource data. For example a resource may be various forms of multimedia e.g. pictures videos etc. or any other form of data.

Although examples of the extended OAuth service included user device being redirected to authorization device according to other embodiments resource requesting device may communicate with authorization device to cause authorization device to communicate with user device . For example according to an exemplary scenario assume that user device and resource requesting device are communicating over the telephone. During the communication resource requesting device desires the release of a resource. Resource requesting device sends a message e.g. a scope request to authorization device . The request may include a telephone number a user identifier and or a user device identifier. In response to receiving the request authorization device places a telephone call or causes a telephone call to be placed to user device . The resource owner of user device has a call waiting service. Alternatively authorization device may place a telephone call or cause a telephone call to be placed to another telephone associated with the resource owner. For example the resource owner may be communicating with resource requesting device via a mobile telephone and authorization device places a telephone call or causes a telephone call to be placed to the resource owner s landline telephone so as to obtain consent.

According to another exemplary scenario user device and resource requesting device may be communicating via a television service. For example user device may include a smart television or a television and a set top box. During the communication e.g. via a graphical user interface a widget an overlay etc. resource requesting device desires the release of a resource and sends a scope request to authorization device . Authorization device may communicate with the user via the television service or some other mode of communication.

The terms a an and the are intended to be interpreted to include one or more items. Further the phrase based on is intended to be interpreted as based at least in part on unless explicitly stated otherwise. The term and or is intended to be interpreted to include any and all combinations of one or more of the associated items.

In addition while series of blocks have been described with regard to the process illustrated in the order of the blocks may be modified according to other embodiments. Further non dependent blocks may be performed in parallel. Additionally other processes described in this description may be modified and or non dependent operations may be performed in parallel.

The embodiments described herein may be implemented in many different forms of software firmware and or hardware. For example a process or a function may be implemented as logic or as a component. This logic or this component may include hardware e.g. processor etc. or a combination of hardware and software e.g. software . The embodiments have been described without reference to the specific software code since software can be designed to implement the embodiments based on the description herein.

Additionally embodiments described herein may be implemented as a non transitory storage medium that stores data and or information such as instructions program code data structures program modules an application etc. For example a non transitory storage medium includes one or more of the storage mediums described in relation to memory storage .

In the preceding specification various embodiments have been described with reference to the accompanying drawings. It will however be evident that various modifications and changes may be made thereto and additional embodiments may be implemented without departing from the broader scope of the invention as set forth in the claims that follow. The specification and drawings are accordingly to be regarded as illustrative rather than restrictive.

In the specification and illustrated by the drawings reference is made to an exemplary embodiment an embodiment embodiments etc. which may include a particular feature structure or characteristic in connection with an embodiment s . However the use of the phrase or term an embodiment embodiments etc. in various places in the specification does not necessarily refer to all embodiments described nor does it necessarily refer to the same embodiment nor are separate or alternative embodiments necessarily mutually exclusive of other embodiment s . The same applies to the term implementation implementations etc.

No element act or instruction described in the present application should be construed as critical or essential to the embodiments described herein unless explicitly described as such.

