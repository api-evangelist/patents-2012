---

title: Computer data communications in a high speed, low latency data communications environment
abstract: A method includes issuing a request, from an application of a contributing client device to a stream administration server, to contribute messages from the application to a feed adapter within a data communication environment via a message stream which bypasses the stream administration server. The feed adapter is coupled to a feed source via a feed adapter input stream and to at least one subscribing device via a feed adapter output stream. The feed source is separate from the contributing client device. The feed adapter input stream is separate from the message stream. The method includes receiving, in response to the request and an authentication of the contributing client device. A set of constraints on messages is to be transmitted from the contributing client device to the feed adapter.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09003428&OS=09003428&RS=09003428
owner: International Business Machines Corporation
number: 09003428
owner_city: Armonk
owner_country: US
publication_date: 20120924
---
This application claims the priority benefit of the U.S. application Ser. No. 11 426 789 filed Jun. 27 2006.

The field of the invention is data processing or more specifically methods apparatus and products for computer data communications in a high speed low latency data communications environment.

Messaging environments are generally available to provide data communication between message sending devices and message receiving devices using messages. A message is a quantity of data that includes one or more data fields and is passed from a message producer installed on a message sending device to a message consumer installed on a message receiving device. A message may represent for example numeric or textual information images encrypted information and computer program instructions.

A messaging environment may support point to point messaging publish and subscribe messaging or both. In a point to point messaging environment a message producer may address a message to a single message consumer. In a publish and subscribe messaging environment a message producer may publish a message to a particular channel or topic and any message consumer that subscribes to that channel or topic receives the message. Because message producers and message consumers communicate indirectly with each other via a channel or topic in a publish and subscribe environment message transmission is decoupled from message reception. As a consequence neither producers nor consumers need to maintain state about each other and dependencies between the interacting participants are reduced or eliminated. A publish and subscribe environment may therefore allow message publishers and message subscribers to operate asynchronously.

For further explanation of a messaging environment sets forth a block diagram illustrating a typical messaging environment for data communications that includes a message sending device a message receiving device and a message administration server . The message sending device is a computer device having installed upon it a message producer a set of computer program instructions configured for transmitting messages to the message administration server for delivery to a message receiving device. In the example of the message producer transmits messages to the message administration server on a message stream . The message sending device may produce the transmitted messages by generating the messages from data of the message sending device itself or data received from some other source. The message receiving device is a computer device having installed upon it a message consumer a set of computer program instructions configured for receiving messages from the message administration server . In the example of the message consumer receives the messages from the message administration server on a message stream . In the example of the message stream and the message stream are data communication channels implemented using for example the User Datagram Protocol UDP and the Internet Protocol IP .

In either a point to point messaging environment or a publish and subscribe messaging environment the messages transmitted from message sending devices to message receiving devices typically pass through the message administration server . The message administration server is computer device having installed upon it a message administration module computer program instructions configured for administering the messages transmitted from the message producer to the message consumer . Examples of message administration modules may include the IBM WebSphere MQ the Open Message Queue from Sun Microsystems and the OpenJMS from The OpenJMS Group. In a point to point messaging environment the message administration module provides message queuing for the message consumer as the message administration module receives messages addressed to the consumer from various message providers. In a publish and subscribe messaging environment the message administration module administers the various channels or topics to which message producers publish and message consumers subscribe. In either message environment the message administration module may also provide security services to ensure that the only messages arriving at the messaging consumer from the message producer are those messages that the message consumer is authorized to receive and that the message producer is authorized to send.

Current solutions to reduce messaging latency are to remove the message administration server from the messaging environment. In such current solutions the message sending devices send messages directly to message receiving devices. The drawback to such current solutions is that removing the message administration server removes the administration functionality provided by the message administration server from the messaging environment. Current solutions therefore effectively offer no solution in messaging environments where the administrative functions of a message administration server are required. Consider again the financial market data environment example from above. In such an exemplary financial market data environment consider that a message sending device is only authorized to provide financial quotes on certain financial securities or only authorized to provide financial quotes that are at least fifteen minutes old. Removing the message administration server from such a financial market data environment removes the ability to administer the messages provided by the message sending device to the message receiving device in the financial market data environment.

In some embodiments a method includes issuing a request from an application of a contributing client device to a stream administration server to contribute messages from the application to a feed adapter within a data communication environment via a message stream which bypasses the stream administration server. The feed adapter is coupled to a feed source via a feed adapter input stream and to at least one subscribing device via a feed adapter output stream. The feed source is separate from the contributing client device. The feed adapter input stream is separate from the message stream. The method includes receiving in response to the request and an authentication of the contributing client device. A set of constraints on messages is to be transmitted from the contributing client device to the feed adapter wherein the set of constraints specifies one or more topics of messages that the contributing client device is authorized to contribute to the feed adapter. The method includes establishing the set of constraints in messaging middleware of the contributing client device. The method includes receiving in the messaging middleware of the contributing client device from the application of the contributing client device a message for transmission to the feed adapter on the message stream. The method includes determining by the messaging middleware of the contributing client device whether contents of the message satisfy the set of constraints. The determining includes comparing a topic associated with the message with the one or more topics of messages that the contributing client device is authorized to contribute to the feed adapter. The determining includes administering the message by the messaging middleware of the contributing client device in dependence upon whether the message satisfies the set of constraints.

Exemplary methods apparatus and products for computer data communications in a high speed low latency data communications environment according to embodiments of the present invention are described with reference to the accompanying drawings beginning with . sets forth a network and block diagram illustrating an exemplary computer data processing system for computer data communications in a high speed low latency data communications environment according to embodiments of the present invention. The system of operates generally for computer data communications in a high speed low latency data communications environment according to embodiments of the present invention by brokering by a stream administration server establishment of a message stream from a contributing client device to a feed adapter including authenticating the contributing client device authorizing the contributing client device to send messages to the feed adapter on the message stream and establishing in messaging middleware of the contributing client device a set of constraints on messages to be transmitted from the contributing client device to the feed adapter receiving in the messaging middleware of the contributing client device from an application of the contributing client device a message for transmission to the feed adapter on the message stream determining by the messaging middleware of the contributing client device whether contents of the message satisfy the constraints and administering the message by the messaging middleware of the contributing client device in dependence upon whether the message satisfies the constraints.

The high speed low latency data communications environment illustrated in includes a high speed low latency data communications network . The network includes a feed adapter a stream administration server several subscribing client devices a contributing client device and the infrastructure for connecting such devices together for data communications. The network of is termed high speed low latency because the messages sent between devices connected to the network on message streams administered by the stream administration server bypass the stream administration server . For example the messages on message stream from the contributing client device to the feed adapter bypass the stream administration server . Similarly the messages on the feed adapter out stream from the feed adapter to the subscribing client device bypass the stream administration server . Although such messages are not delayed for processing in the stream administration server the stream administration server retains administration of the streams between devices connected to the high speed low latency data communications network .

Further contributing to the high speed low latency nature of network readers will note that the network does not include a router that is a computer networking device whose primary function is to forward data packets across a network toward their destinations. Rather each device provides its own routing functionality for data communication through a direct connection with the other devices connected to the network . Because the network does not include a computer networking device dedicated to routing data packets the network of may be referred to as a minimally routed network. Although the exemplary network illustrated in does not include a router such a minimally routed network is for explanation only. In fact some high speed low latency networks useful in computer data communications in a high speed low latency data communications environment according to embodiments of the present invention may include a router.

As mentioned above the high speed low latency data communications environment depicted in includes two message streams . A message stream is a data communication channel between a communications endpoint of a sending device and a communications endpoint of at least one receiving device. A communications endpoint is composed of a network address and a port for a sending device or a receiving device. A message stream may be implemented as a multicast data communication channel. In a multicast data communication channel a one to many relationship exists between a destination address for a message and the communication endpoints of receiving devices. That is each destination address identifies a set of communication endpoints for receiving devices to which each message of the stream is replicated. A multicast data communication channel may be implemented using for example the User Datagram Protocol UDP and the Internet Protocol IP . In addition to a multicast data communication channel the message stream may be implemented as a unicast data communication channel. In a unicast data communication channel a one to one relationship exists between a destination address for a message and a communication endpoint of a receiving device. That is each destination address uniquely identifies a single communication endpoint of single receiving device. A unicast data communication channel may be implemented using for example the Transmission Control Protocol TCP and IP.

The exemplary system of includes a stream administration server connected to the high speed low latency data communications network through a wireline connection . The stream administration server of is a computer device having installed upon it a stream administration module an authentication module an authorization module and an authorization policy . A stream administration module is a set of computer program instructions configured for computer data communications in a high speed low latency data communications environment according to embodiments of the present invention. The stream administration module operates generally to administer a message stream according to embodiments of the present invention by brokering establishment of a message stream from a contributing client device to a feed adapter including authenticating the contributing client device authorizing the contributing client device to send messages to the feed adapter on the message stream and establishing in messaging middleware of the contributing client device a set of constraints on messages to be transmitted from the contributing client device to the feed adapter .

The authentication module of is a set of computer program instructions capable of providing authentication security services to the stream administration module through an exposed authentication application programming interface API . Authentication is a process verifying the identity of an entity. In the exemplary system of the authentication module verifies the identity of the contributing client . The authentication module may provide authentication security services using a variety of security infrastructures such as for example shared secret key infrastructure or a public key infrastructure.

The authorization module of is a set of computer program instructions capable of providing authorization security services to the stream administration module through an exposed authorization API . Authorization is a process of only allowing resources to be used by resource consumers that have been granted authority to use the resources. In the example of the authorization module identifies the messages that the contributing client device is authorized to transmit on the message stream . The authorization module of provides authorization security services using an authorization policy . The authorization policy is a set of rules governing the privileges of authenticated entities to send or receive messages on a message stream. In a financial market data environment for example an authenticated entity may be authorized to send messages that include financial quotes for some financial securities but not other securities. The authorization policy may grant privileges on the basis of an individual entity or an entity s membership in a group.

In the exemplary system of feed adapter is connected to the high speed low latency data communications network through a wireline connection . The feed adapter is a computer device having the capabilities of converting messages on a feed adapter input stream having a first format to messages on a feed adapter output stream having a second format and multicasting messages on the feed adapter output stream to subscribing client devices . The feed adapter input stream is a message stream from a feed source to the feed adapter . The feed adapter output stream is a message stream administered by the stream administration server from a feed adapter to the subscribing client device .

In the example of the feed adapter receives messages on the feed adapter input stream from a feed source . The feed source is a computer device capable of aggregating data into messages and transmitting messages to the feed adapter . In a financial market data environment for example a feed source may be implemented as a feed source controlled by the Options Price Reporting Authority OPRA . OPRA is the securities information processor for financial market information generated by the trading of securities options in the United States. The core information that OPRA disseminates is last sale reports and quotations. Other examples of feed sources in financial market data environment may include feed sources controlled by the Consolidated Tape Association CTA or The Nasdaq Stock Market Inc. The CTA oversees the dissemination of real time trade and quote information in New York Stock Exchange and American Stock Exchange listed securities. The Nasdaq Stock Market Inc. operates the NASDAQ Market Centers.sub.SM which is an electronic screen based equity securities market in the United States. In a financial market data environment the feed adapter input stream is referred to as a financial market data feed. 

The feed adapter of has installed upon it a conversion module a converter table and converter functions . The conversion module is a set of computer program instructions for converting messages received on the feed adapter input stream having a first format into messages having a second format for transmission to subscribing devices on the feed adapter output stream . The conversion module converts messages from the first format to the second format according to the converter table .

The converter table of is a table that specifies the converter functions capable of converting the message from one format to another format. Utilizing multiple converter tables the conversion module may convert messages from a variety of input formats to a variety of output formats. In the example of the converter table specifies the converter functions capable of converting the message received from the input stream having the first format to messages having the second format for transmission to subscribing devices on the output stream . The converter table of may be implemented using a structured document such as for example an eXtensible Markup Language XML document.

The converter functions of are functions capable of converting data fields in a message from one format to another format or converting values of data fields from one value to another value. Converter functions may for example convert a 16 bit integer to a 32 bit integer convert a number stored in a string field to a 64 bit double floating point value increase the value of one data field by one or any other conversion as will occur to those of skill in the art. The conversion module accesses the converter functions through a set of converter function APIs exposed by the converter functions .

As mentioned above several subscribing client devices are connected to the high speed low latency data communications network of . The subscribing device connects to the network through a wireline connection . The subscribing device connects to the network through a wireless connection . The subscribing device connects to the network through a wireline connection . Each subscribing client device is a computer device capable of requesting from the stream administration server a message stream address for receiving messages on a message stream and receiving the messages on the message stream at the message stream address that the subscribing client device is authorized to receive.

The exemplary system of includes a contributing client device connected to the high speed low latency data communications network through a wireline connection . The contributing client device of is a computer device capable of contributing data to the messages transmitted on the output stream of the feed adapter . In a financial market data environment for example a contributing client device may contribute information to a tick such as for example the best bid and ask prices for a particular security that is not typically included in the ticks provided by the feed source . In fact a contributing client device may be the sole data contributor to a feed adapter thereby operating as a feed source for the feed adapter. A message stream that provides contributed data from a contributing client device to a feed adapter in a financial market data environment is referred to as a contribution stream for a financial market data feed.

In the example of the contributing client device has installed upon it an application a message library messaging middleware a stream administration library and a transport engine . The application is a software component that aggregates contribution data into messages for transmission to the feed adapter . The application may aggregate the contribution data by generating the contributed data itself or receiving the data from another source.

In the example of the messages have a format specified in a message model . The message model is metadata that defines the structure and the format of the messages for transmission on the message stream . The message model may be attached to and transmitted along with the messages to the feed adapter . More often however both the contributing client device and the feed adapter may receive the message model from the stream administration server when the stream administration server brokers the message stream . A message model may be implemented using a structured document such as for example an XML document a Java object C object or any other implementation as will occur to those of skill in the art.

The application aggregates the contributed data into messages using the message library . The message library is a set of functions that are computer program instructions for creating and accessing messages according to a message model . The message library is accessible to the application through a message API exposed by the message library .

The communications between the contributing client device and the stream administration server may be implemented using a stream administration library . The stream administration library is a set of functions contained in dynamically linked libraries or statically linked libraries available to the application through a stream administration library API . Through the stream administration library the application of the contributing client device may request to contribute messages to a feed adapter modify an existing contribution or cancel a contribution. Functions of the stream administration library used by the application may communicate with the stream administration server through network by calling member methods of a CORBA object calling member methods of remote objects using the Java Remote Method Invocation RMI API using web services or any other communication implementation as will occur to those of skill in the art.

 CORBA refers to the Common Object Request Broker Architecture a computer industry specifications for interoperable enterprise applications produced by the Object Management Group OMG . CORBA is a standard for remote procedure invocation first published by the OMG in 1991. CORBA can be considered a kind of object oriented way of making remote procedure calls although CORBA supports features that do not exist in conventional RPC. CORBA uses a declarative language the Interface Definition Language IDL to describe an object s interface. Interface descriptions in IDL are compiled to generate stubs for the client side and skeletons on the server side. Using this generated code remote method invocations effected in object oriented programming languages such as C or Java look like invocations of local member methods in local objects.

The Java Remote Method Invocation API is a Java application programming interface for performing remote procedural calls published by Sun Microsystems . The Java . RMI API is an object oriented way of making remote procedure calls between Java objects existing in separate Java Virtual Machines that typically run on separate computers. The Java . RMI API uses a remote procedure object interface to describe remote objects that reside on the server. Remote procedure object interfaces are published in an RMI registry where Java clients can obtain a reference to the remote interface of a remote Java object. Using compiled stubs for the client side and skeletons on the server side to provide the network connection operations Java RMI allows a Java client to access a remote Java object just like any other local Java object.

When the contributed data is aggregated into messages the application provides the messages to the messaging middleware for further data processing the messaging middleware in turn providing the messages to the transport engine for transmission to the feed adapter . The messaging middleware is a software component that provides high availability services between the application the feed adapter and any backup feed adapters for the feed adapter . In addition the messaging middleware provides message administration services for the stream administration server . Such message administration services may include restricting the ability of the application to send and receive messages on a message stream to messages that satisfy certain constraints. The application and the stream administration library interact with the messaging middleware through a messaging middleware API .

In addition to providing high availability and message administration services the messaging middleware of also includes a set of computer program instructions capable of computer data communications in a high speed low latency data communications environment according to embodiments of the present invention. The messaging middleware operates generally for computer data communications in a high speed low latency data communications environment according to embodiments of the present invention by receiving from the application a message for transmission to the feed adapter on the message stream determining whether contents of the message satisfy constraints established by the stream administration server and administering the message in dependence upon whether the message satisfies the constraints. The application interacts with the messaging middleware through a messaging middleware API exposed by the messaging middleware .

The transport engine of is a software component operating in the transport and network layers of the OSI protocol stack promulgated by the International Organization for Standardization. The transport engine provides data communications services between network connected devices. The transport engine may be implemented according to the UDP IP protocols TCP IP protocols or any other data communications protocols as will occur to those of skill in the art. The transport engine includes a set of computer program instructions for encapsulating the messages provided by the messaging middleware into packets transmitting the packets through the message stream to the feed adapter receiving packets through the message stream from the feed adapter unencapsulating the messages from the received packets and providing the messages to the messaging middleware . The messaging middleware operates the transport engine through a transport API exposed by the transport engine .

The servers and other devices illustrated in the exemplary system of are for explanation not for limitation. Devices useful in computer data communications in a high speed low latency data communications environment may be implemented using general purpose computers such as for example computer servers or workstations hand held computer devices such as for example PDAs or mobile phones or any other automated computing machinery configured for data processing according to embodiments of the present invention as will occur to those of skill in the art.

The arrangement of servers and other devices making up the exemplary system illustrated in are for explanation not for limitation. Data processing systems useful according to various embodiments of the present invention may include additional servers routers other devices and peer to peer architectures not shown in as will occur to those of skill in the art. Networks in such data processing systems may support many data communications protocols including for example Transmission Control Protocol TCP Internet Protocol IP HyperText Transfer Protocol HTTP Wireless Access Protocol WAP Handheld Device Transport Protocol HDTP and others as will occur to those of skill in the art. Various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in .

Providing computer data communications in a high speed low latency data communications environment in accordance with the present invention in some embodiments may be implemented with one or more contributing client devices stream administration servers and feed adapters that is automated computing machinery. For further explanation therefore sets forth a block diagram of automated computing machinery comprising an example of a contributing client device useful in providing computer data communications in a high speed low latency data communications environment according to embodiments of the present invention. The contributing client device of includes at least one computer processor or CPU as well as random access memory RAM which is connected through a high speed memory bus and bus adapter to processor and to other components of the contributing client device.

Stored in RAM is an application messages message model a message library a messaging middleware a stream administration library and a transport engine . Each message is a quantity of data that includes one or more data fields and is transmitted from one device to another on a message stream. As mentioned above a message may represent numeric or textual information images encrypted information computer program instructions and so on. In a financial market data environment for example a message is commonly referred to as a tick and represents financial market data such as for example financial quotes or financial news. Each message may be implemented using a structured document such as for example an XML document a Java object C object or any other implementation as will occur to those of skill in the art. The message model is metadata that defines the structure and format of the messages . The message model may also be implemented using a structured document such as for example an XML document a Java object C object or any other implementation as will occur to those of skill in the art. The application the message library the messaging middleware the stream administration library and the transport engine illustrated in are software components that is computer program instructions that operate as described above with reference to .

Also stored in RAM is an operating system . Operating systems useful in contributing client devices according to embodiments of the present invention include UNIX Linux Microsoft NT IBM s AIX IBM s i5 OS and others as will occur to those of skill in the art. The operating system the application the messages the message model the message library the messaging middleware and the transport engine in the example of are shown in RAM but many components of such software typically are stored in non volatile memory also for example on a disk drive .

The exemplary contributing client device of includes bus adapter a computer hardware component that contains drive electronics for high speed buses the front side bus the video bus and the memory bus as well as drive electronics for the slower expansion bus . Examples of bus adapters useful in contributing client devices useful according to embodiments of the present invention include the Intel Northbridge the Intel Memory Controller Hub the Intel Southbridge and the Intel I O Controller Hub. Examples of expansion buses useful in contributing client devices useful according to embodiments of the present invention may include Peripheral Component Interconnect PCI buses and PCI Express PCIe buses.

The exemplary contributing client device of also includes disk drive adapter coupled through expansion bus and bus adapter to processor and other components of the exemplary contributing client device . Disk drive adapter connects non volatile data storage to the exemplary contributing client device in the form of disk drive . Disk drive adapters useful in contributing client devices include Integrated Drive Electronics IDE adapters Small Computer System Interface SCSI adapters and others as will occur to those of skill in the art. In addition non volatile computer memory may be implemented for a contributing client device as an optical disk drive electrically erasable programmable read only memory so called EEPROM or Flash memory RAM drives and so on as will occur to those of skill in the art.

The exemplary contributing client device of includes one or more input output I O adapters . I O adapters in contributing client devices implement user oriented input output through for example software drivers and computer hardware for controlling output to display devices such as computer display screens as well as user input from user input devices such as keyboards and mice. The exemplary contributing client device of includes a video adapter which is an example of an I O adapter specially designed for graphic output to a display device such as a display screen or computer monitor. Video adapter is connected to processor through a high speed video bus bus adapter and the front side bus which is also a high speed bus.

The exemplary contributing client device of includes a communications adapter for data communications with other computers and for data communications with a high speed low latency data communications network . Such data communications may be carried out serially through RS 232 connections through external buses such as a Universal Serial Bus USB through data communications networks such as IP data communications networks and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer directly or through a data communications network. Examples of communications adapters useful for providing computer data communications in a high speed low latency data communications environment according to embodiments of the present invention include modems for wired dial up communications IEEE 802.3 Ethernet adapters for wired data communications network communications and IEEE 802.11b adapters for wireless data communications network communications.

Although is discussed with reference to exemplary contributing client devices readers will note that automated computing machinery comprising exemplary stream administration servers and exemplary feed adapters useful in providing computer data communications in a high speed low latency data communications environment according to embodiments of the present invention are similar to the exemplary contributing client device of . That is such exemplary stream administration servers and feed adapters include one or more processors bus adapters buses RAM video adapters communications adapters I O adapters disk drive adapters and other components similar to the exemplary contributing client device of as will occur to those of skill in the art.

For further explanation sets forth a flowchart illustrating an exemplary method for computer data communications in a high speed low latency data communications environment according to embodiments of the present invention. The method of includes brokering by a stream administration server establishment of a message stream from a contributing client device to a feed adapter. The message stream represents a data communication channel between a communications endpoint of a contributing client device and a communications endpoint of a feed adapter. A message stream may be implemented as a multicast data communication channel using the UDP IP protocols or a unicast data communication channel using TCP IP protocols as discussed above with reference to .

Brokering by a stream administration server establishment of a message stream from a contributing client device to a feed adapter according to the method of may be carried out by receiving a contribution request from a contributing client device to contribute messages to a feed adapter. The contribution request is a request by an application of a contributing client device to contribute data to a feed adapter. The contribution request of may be implemented as an XML document a call to a member method of a RMI object on the contributing client device or any other implementation as will occur to those of skill in the art.

The contribution request of includes the topics of the messages that the contributing client device requests to contribute to the feed adapter. A topic represents the characteristics of the messages that the contributing client device requests to contribute. Using a topic a contributing client device may specify the group of messages that the contributing client device requests to contribute to a feed adapter. In a financial market data environment for example a contributing client device may use a topic to request to contribute ticks from an OPRA feed source that contains quotes of an IBM option traded on the Chicago Board Options Exchange CBOE that includes the best bid and best ask for the IBM option on the CBOE.

Brokering by a stream administration server establishment of a message stream from a contributing client device to a feed adapter according to the method of may also be carried out by providing the contributing client device a destination address for the feed adapter. The destination address for the feed adapter is a multicast address or a unicast address used by the feed adapter to listen for messages. Using the destination address provided by the stream administration server the contributing client device may establish the message stream from the contributing client device to the feed adapter.

Before the stream administration server provides the destination address for the feed adapter the stream administration server in the example of performs several security services to ensure that the contributing client device only contributes messages to the feed adapter for which the contributing client is authorized to contribute. In the method of brokering by a stream administration server establishment of a message stream from a contributing client device to a feed adapter includes authenticating the contributing client device. Authenticating the contributing client device may be carried out by verifying client security credentials provided by the contributing client device with the contribution request . The client security credentials may be implemented as a digital signature in a public key infrastructure a security token or any other security data as will occur to those of skill in the art for authenticating the identity of the originator of the contribution request . Examples of security token may include those security tokens described in the web services specification entitled Web Services Security WS Security developed by IBM Microsoft and VeriSign or the web services specification entitled Web Services Trust Language WS Trust developed by IBM Microsoft VeriSign OpenNetworks Layer 7 Computer Associates BEA Oblix Reactivity RSA Security Ping Identity and Actional.

In the method of brokering by a stream administration server establishment of a message stream from a contributing client device to a feed adapter also includes authorizing the contributing client device to send messages to the feed adapter on the message stream . Authorizing the contributing client device to send messages to the feed adapter on the message stream according to the method of may be carried out by identifying the privileges associated with the authenticated contributing client device in dependence upon an authorization policy . The authorization policy is a set of rules governing the privileges of authenticated contributing client devices requesting to contribute data to a feed adapter. In the example of the authorization policy associates privileges with authenticated contributing client device identifier . The authenticated contributing client device identifier represents a contributing client device authenticated by a stream administration server. The privileges represent the set of messages permissible for an authenticated contributing client device identified by the associated authenticated contributing client device identifier to contribute to a feed adapter. Different authenticated contributing client devices may have difference privileges. Although the authorization policy depicted in associates individual authenticated users with certain privileges such a depiction is for explanation and not for limitation. The authorization policy may in fact grant privileges on the basis of a contributing client device s membership in a group or on any other basis as will occur to those of skill in the art.

Brokering by a stream administration server establishment of a message stream from a contributing client device to a feed adapter according to the method of also includes establishing in messaging middleware of the contributing client device a set of constraints on messages to be transmitted from the contributing client device to the feed adapter. Constraints specify the topics of the messages which a contributing client device is authorized to contribute to a feed adapter. In a financial market data environment for example constraints may specify that a particular authenticated contributing client device is authorized to send ticks from an OPRA feed source that contains quotes of an IBM option traded on the Chicago Board Options Exchange CBOE that includes the best bid and best ask for the IBM option on the CBOE. Establishing in messaging middleware of the contributing client device a set of constraints on messages to be transmitted from the contributing client device to the feed adapter may be carried out by returning the constraints to the messaging middleware of a contributing client device in response to a function call by messaging middleware that provided a contribution request .

The method of also includes receiving in the messaging middleware of the contributing client device from an application of the contributing client device a message for transmission to the feed adapter on the message stream . The message represents a quantity of data that includes one or more data fields such as for example numeric or textual information images encrypted information computer program instructions and so on. The message is capable of being passed from a contributing client device to a feed adapter. As mentioned above in a financial market data environment a message is commonly referred to as a tick and represents financial market data such as for example financial quotes or financial news. Receiving in the messaging middleware of the contributing client device from an application of the contributing client device a message for transmission to the feed adapter on the message stream according to the method of Figure may be carried out by receiving a pointer in computer memory to the message in response to the application of the contributing client device invoking a function exposed by a messaging middleware API.

The method of also includes determining by the messaging middleware of the contributing client device whether contents of the message satisfy the constraints . Determining by the messaging middleware of the contributing client device whether contents of the message satisfy the constraints may be carried out by applying a constraint operator to a constraint value and to a value from a data field in the message identified by a message field identifier as discussed below with reference to .

The method of also includes administering the message by the messaging middleware of the contributing client device in dependence upon whether the message satisfies the constraints . Administering the message by the messaging middleware of the contributing client device in dependence upon whether the message satisfies the constraints may be carried out by authorizing transmission of the message on the stream in dependence upon whether the message satisfies the constraints and logging the message in dependence upon whether the message satisfies the constraints as discussed below with reference to .

For further explanation sets forth a flowchart illustrating a further exemplary method for computer data communications in a high speed low latency data communications environment according to embodiments of the present invention in which administering the message by the messaging middleware of the contributing client device in dependence upon whether the message satisfies the constraints includes authorizing transmission of the message on the stream in dependence upon whether the message satisfies the constraints .

The method of is similar to the method of in that the method of includes brokering by a stream administration server establishment of a message stream from a contributing client device to a feed adapter authenticating the contributing client device authorizing the contributing client device to send messages to the feed adapter on the message stream establishing in messaging middleware of the contributing client device a set of constraints on messages to be transmitted from the contributing client device to the feed adapter receiving in the messaging middleware of the contributing client device from an application of the contributing client device a message for transmission to the feed adapter on the message stream determining by the messaging middleware of the contributing client device whether contents of the message satisfy the constraints and administering the message by the messaging middleware of the contributing client device in dependence upon whether the message satisfies the constraints. The example of is also similar to the example of in that the example of includes contribution request topics client security credentials authentication policy authentication client identifier privileges constraints message and message stream .

In the method of authorizing transmission of the message on the stream in dependence upon whether the message satisfies the constraints may be carried out by providing by the messaging middleware of the contributing client device to a transport engine of the contributing client device the message for transmission to the feed adapter if the message satisfies the constraints . Authorizing transmission of the message on the stream in dependence upon whether the message satisfies the constraints according to the method of may also be carried out by discarding by messaging middleware of the contributing client device the message if the message does not satisfies the constraints . Readers will note however that discarding the message if the message does not satisfies the constraints is for explanation and not for limitation. In fact the authorizing transmission of the message on the stream in dependence upon whether the message satisfies the constraints may also be carried out by providing by the messaging middleware of the contributing client device to a transport engine of the contributing client device the message for transmission to some entity other than the feed adapter if the message does not satisfies the constraints .

As mentioned above administering a message by the messaging middleware of the contributing client device in dependence upon whether the message satisfies the constraints may be carried out by logging the message in dependence upon whether the message satisfies the constraints. For further explanation therefore sets forth a flowchart illustrating a further exemplary method for computer data communications in a high speed low latency data communications environment according to embodiments of the present invention that includes logging the message in dependence upon whether the message satisfies the constraints .

The method of is similar to the method of in that the method of includes brokering by a stream administration server establishment of a message stream from a contributing client device to a feed adapter authenticating the contributing client device authorizing the contributing client device to send messages to the feed adapter on the message stream establishing in messaging middleware of the contributing client device a set of constraints on messages to be transmitted from the contributing client device to the feed adapter receiving in the messaging middleware of the contributing client device from an application of the contributing client device a message for transmission to the feed adapter on the message stream determining by the messaging middleware of the contributing client device whether contents of the message satisfy the constraints and administering the message by the messaging middleware of the contributing client device in dependence upon whether the message satisfies the constraints. The example of is also similar to the example of in that the example of includes contribution request topics client security credentials authentication policy authentication client identifier privileges constraints message and message stream .

The method of differs from the method of in that administering the message by the messaging middleware of the contributing client device in dependence upon whether the message satisfies the constraints according to the method of includes logging the message in dependence upon whether the message satisfies the constraints . Logging the message in dependence upon whether the message satisfies the constraints according to the method of may be carried out by storing in data storage data describing the message such as for example a message identifier a timestamp associated with the message the topic of the message and so on. Logging the message in dependence upon whether the message satisfies the constraints according to the method of may be carried out by storing the message itself in data storage . Data storage is non volatile computer storage of the contributing client device or some other device connected to the contributing client device such as for example a database server. Logging the message in dependence upon whether the message satisfies the constraints advantageously provides the capability of later analysis of the messages or data describing messages stored in data storage .

As mentioned above determining by the messaging middleware of the contributing client device whether contents of the message satisfy the constraints may be carried out by applying a constraint operator to a constraint value and to a value from a data field in the message identified by a message field identifier. For further explanation therefore sets forth a flowchart illustrating a further exemplary method for computer data communications in a high speed low latency data communications environment according to embodiments of the present invention that includes applying the constraint operator to the constraint value and to a value from a data field in the message identified by the message field identifier .

The method of is similar to the method of in that the method of includes brokering by a stream administration server establishment of a message stream from a contributing client device to a feed adapter authenticating the contributing client device authorizing the contributing client device to send messages to the feed adapter on the message stream establishing in messaging middleware of the contributing client device a set of constraints on messages to be transmitted from the contributing client device to the feed adapter receiving in the messaging middleware of the contributing client device from an application of the contributing client device a message for transmission to the feed adapter on the message stream determining by the messaging middleware of the contributing client device whether contents of the message satisfy the constraints and administering the message by the messaging middleware of the contributing client device in dependence upon whether the message satisfies the constraints. The example of is also similar to the example of in that the example of includes contribution request topics client security credentials authentication policy authentication client identifier privileges constraints message and message stream .

The method of differs from the method of in that determining by the messaging middleware of the contributing client device whether contents of the message satisfy the constraints according to the method of includes applying the constraint operator to the constraint value and to a value from a data field in the message identified by the message field identifier . In the example of the constraints include one or more constraint data fields. The constraints of are represented as a table where each record in the table represents a constraint and where each constraint is identified by a constraint identifier . Each constraint is characterized by a message field identifier a constraint value and a constraint operator . The message field identifier identifies a data field in the message . The constraint value specifies a value to compare with a value in the message for determining whether the message satisfies a particular constraint data field. Consider for example the following exemplary table of constraints in a financial market data environment 

Readers will note that the exemplary table of constraints above is for explanation and not for limitation. The message field identifier may specify the data field in the message using text as shown above or using numeric values that correspond to particular fields in the message . The constraint operator may specify simple operators such as for example or 

In the method of applying the constraint operator to the constraint value and to a value from a data field in the message identified by the message field identifier may be carried out by retrieving by the messaging middleware the value from a data field in the message identified by the message field identifier . Messaging middleware may retrieve the value from a data field in the message identified by the message field identifier by reading the value directly from the message using a message model that describes the location of the message field identified by the message field identifier . Rather than reading the value directly from the message messaging middleware may also retrieve the value from a data field in the message identified by the message field identifier by passing the message and the message field name to a function of the messaging library of the contributing client device and receiving in return the value from the data field in the message identified by the message field identifier .

Applying the constraint operator to the constraint value and to a value from a data field in the message identified by the message field identifier according to the method of may further be carried out by comparing for each constraint identifier the value from the data field in the message identified by the message field identifier to the constraint value in dependence upon the constraint operator . If for each constraint identifier the value from the data field in the message identified by the message field identifier and the constraint value satisfy the constraint operator then the message satisfies the constraints . If for each constraint identifier the value from the data field in the message identified by the message field identifier and the constraint value do not satisfy the constraint operator then the message does not satisfy the constraints .

Continuing with the above exemplary table of constraints in a financial market data environment consider an exemplary tick that contains a value of OPRA for the tick data field identified by Tick Feed a value of TOP for the tick data field identified by Tick Context and a value of IBM GP E CBOE for the tick data field identified by Tick Product. Comparing for each constraint identifier in the exemplary table above the value from the data field in the message identified by the message field identifier to the constraint value in dependence upon the constraint operator indicates that the exemplary tick satisfies the constraints in the exemplary table of constraints above.

As mentioned above the messaging middleware of a contributing client device uses constraints to administer the messages received from an application of the contributing client device. A stream administration server may set values of the constraints that prevent the message from being sent on the message stream. For further explanation therefore sets forth a flowchart illustrating a further exemplary method for computer data communications in a high speed low latency data communications environment according to embodiments of the present invention that includes setting by the stream administration server values of constraints in the messaging middleware of the contributing client device that prevent the message from being sent on the message stream .

The method of is similar to the method of in that the method of includes brokering by a stream administration server establishment of a message stream from a contributing client device to a feed adapter authenticating the contributing client device authorizing the contributing client device to send messages to the feed adapter on the message stream establishing in messaging middleware of the contributing client device a set of constraints on messages to be transmitted from the contributing client device to the feed adapter receiving in the messaging middleware of the contributing client device from an application of the contributing client device a message for transmission to the feed adapter on the message stream determining by the messaging middleware of the contributing client device whether contents of the message satisfy the constraints and administering the message by the messaging middleware of the contributing client device in dependence upon whether the message satisfies the constraints. The example of is also similar to the example of in that the example of includes contribution request topics client security credentials authentication policy authentication client identifier privileges constraints message and message stream .

The method of differs from the method of in that the method of also includes setting by the stream administration server values of constraints in the messaging middleware of the contributing client device that prevent the message from being sent on the message stream . Setting by the stream administration server values of constraints in the messaging middleware of the contributing client device that prevent the message from being sent on the message stream according to the method of may be carried out by setting values for constraints that no message received in the messaging middleware of the contributing client device from an application of the contributing client device will satisfy. Consider for example the exemplary table of constraints in a financial market data environment discussed above with reference to . Setting values for constraints that no message will satisfy may be carried out by setting the constraint value associated with the message field identifier having a value of Tick Product to a value of NULL. Because the value of the Tick Product message field will never contain a value of NULL no tick satisfies the exemplary constraint effectively preventing the message from being sent on the message stream . Setting by the stream administration server values of constraints in the messaging middleware of the contributing client device that prevent the message from being sent on the message stream therefore advantageously provides a mechanism for the stream administration server to prevent messages from being sent on the stream while the application of the contributing client device continues to provides messages to the messaging middleware of the contributing client device for transmission to the feed adapter.

Exemplary embodiments of the present invention are described largely in the context of a fully functional computer system for computer data communications in a high speed low latency data communications environment. Readers of skill in the art will recognize however that the present invention also may be embodied in a computer program product disposed on signal bearing media for use with any suitable data processing system. Such signal bearing media may be transmission media or recordable media for machine readable information including magnetic media optical media or other suitable media. Examples of recordable media include magnetic disks in hard drives or diskettes compact disks for optical drives magnetic tape and others as will occur to those of skill in the art. Examples of transmission media include telephone networks for voice communications and digital data communications networks such as for example Ethernets and networks that communicate with the Internet Protocol and the World Wide Web as well as wireless transmission media such as for example networks implemented according to the IEEE 802.11 family of specifications. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that although some of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware nevertheless alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.

It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims.

