---

title: Method and system for realizing rest interface of cloud cache in Nginx
abstract: The present invention provides a method for realizing a REST (Representational State Transfer) interface of a cloud cache in an Nginx. The method includes: receiving a Hyper Text Transport Protocol (HTTP) message transmitted from a client, and parsing out key information and an operation type corresponding to the HTTP message according to a preset configuration file; converting the key information and the operation type into a parameter required by a cloud cache operation and a cloud cache operation type, and transmitting the parameter to a cloud cache apparatus, so that the cloud cache apparatus performs the cloud cache operation according to the parameter and the cloud cache operation type; receiving a cloud cache operation result returned by the cloud cache apparatus, processing the cloud cache operation result, and returning the processed result to the client. The present invention also provides a corresponding system. The present invention enables a larger cache capacity and better saves CPU resources, thereby enabling a more powerful cache function of the Nginx.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09332085&OS=09332085&RS=09332085
owner: ZTE Corporation
number: 09332085
owner_city: Shenzhen, Guangdong
owner_country: CN
publication_date: 20120423
---
This application is the U.S. National Phase under 35. U.S.C. 371 of International Application PCT CN2012 074561 filed Apr. 23 2012 which claims priority to Chinese Patent Application No. 201110288598.5 filed Sep. 26 2011. The disclosures of the above described applications are hereby incorporated by reference in their entirety. The International Application was published under PCT Article 21 2 in a language other than English.

The present invention relates to the technical field of communications and in particular to a method and system for realizing a REST Representational State Transfer interface of a cloud cache in an Engine x Nginx .

Nginx is a high performance Hyper Text Transport Protocol HTTP reverse Proxy Server and meanwhile an IMAP POP3 SMTP proxy server. It has advantages of simple installation concise configuration file easy startup high stability and low consumption of system resources and moreover the Nginx does not require a restart even after several months of running.

At present the Nginx has been widely used and existing Nginx generally adopts a high speed cache also short as cache to realize the cache function of the Nginx. However the existing Nginx adopting the high speed cache usually has drawbacks of low performance low reliability and poor extensibility.

The present invention provides a method for realizing a REST interface of a cloud cache in an Nginx which combines the Nginx and cloud cache enables a larger cache capacity and better saves CPU resources thereby enabling a more powerful cache function of the Nginx.

The embodiment of the present invention provides a method for realizing a REST interface of a cloud cache in an Nginx which includes 

receiving a Hyper Text Transport Protocol HTTP message transmitted from a client and parsing out key information and an operation type corresponding to the HTTP message according to a preset configuration file 

converting the key information and the operation type into a parameter required by a cloud cache operation and a cloud cache operation type and transmitting the parameter to a cloud cache apparatus so that the cloud cache apparatus performs the cloud cache operation according to the parameter and the cloud cache operation type 

receiving a cloud cache operation result returned by the cloud cache apparatus processing the cloud cache operation result and returning the processed result to the client.

Preferably converting the key information and the operation type into the parameter required by the cloud cache operation and the cloud cache operation type and transmitting the parameter to the cloud cache apparatus includes 

packaging the key information corresponding to the HTTP message as a Key Value packet required by the cloud cache operation and transmitting the Key Value packet to the cloud cache apparatus for processing and

converting the operation type into the cloud cache operation type so that the cloud cache apparatus operates according to the cloud cache operation type.

Preferably after converting the operation type into the cloud cache operation type the method further includes 

regularly detecting whether there are data returned from the cloud cache apparatus existing in the named pipe if there are data returned from the cloud cache apparatus existing in the named pipe reading out the data in the pipe file.

Preferably before converting the key information and the operation type into the parameter required by the cloud cache operation and the cloud cache operation type the method further includes 

The embodiment of the present invention also provides a system for realizing a Representational State Transfer REST interface of a cloud cache in an Engine x Nginx the system including a cache plugin and a cloud cache apparatus wherein the cloud cache apparatus is configured to perform a cloud cache operation and the cache plugin includes 

a parsing module which is configured to receive a Hyper Text Transport Protocol HTTP message transmitted from a client and parse out key information and an operation type corresponding to the HTTP message according to a preset configuration file 

a conversion module which is configured to convert the key information and the operation type into a parameter required by a cloud cache operation and a cloud cache operation type and transmit the parameter to the cloud cache apparatus so that the cloud cache apparatus performs the cloud cache operation according to the parameter and the cloud cache operation type and

a return module which is configured to receive a cloud cache operation result returned by the cloud cache apparatus process the cloud cache operation result and return the processed result to the client.

a packaging unit which is configured to package the key information corresponding to the HTTP message as a Key Value packet required by the cloud cache operation and transmit the Key Value packet to the cloud cache apparatus for processing and

a conversion unit which is configured to convert the operation type into the cloud cache operation type so that the cloud cache apparatus operates according to the cloud cache operation type.

an establishment module which is configured to establish one named pipe according to the cloud cache operation type 

a reading module which is configured to regularly detect whether there are data returned from the cloud cache apparatus existing in the named pipe and read out the data in the pipe file if there are data returned from the cloud cache apparatus existing in the named pipe.

a judgment module which is configured to judge whether the key information is correct or whether the operation type is enabled and end the process if the key information is not correct or the operation type is not enabled.

In the embodiment of the present invention an Nginx cache is replaced with a cloud cache apparatus the Nginx and the cloud cache apparatus are combined by implementing a cache plugin in a Nginx server so as to establish data transfer between the Nginx and the cloud cache apparatus thereby realizing the cache function of the Nginx using the cloud cache apparatus and realizing a REST interface of a cloud cache. The method realizes the cache function of the Nginx using a cloud cache technology rather than a cache of the Nginx which can better save CPU resources and enable a larger cache capacity and a more powerful cache function of the Nginx owing to the high performance of the Nginx and the high performance high reliability and good extensibility of cloud cache.

It should be understood that specific embodiments described hereinafter are used to illustrate the present invention but to limit the present invention.

Referring to which shows one embodiment of a method for realizing a REST interface of a cloud cache in an Nginx according to the present invention the method includes the following steps.

Step S an HTTP message transmitted from a client is received and key information and an operation type corresponding to the HTTP message are parsed out according to a preset configuration file.

In this embodiment an existing cache for the Nginx is replaced by a cloud cache apparatus that is to say the cache mechanism of the Nginx is separated and is submitted to a cloud cache thread for maintenance and management. Meanwhile one cache plugin is set in the Nginx server to combine the Nginx and the cloud cache apparatus so as to establish data transfer between the Nginx and the cloud cache apparatus.

After the Nginx is started the Nginx would acquire automatically a configuration file preset in the system. This configuration file includes the configuration information added in Nginx.conf according to the configuration content required by the system. Meanwhile the cloud cache apparatus starts to load a dynamic file library thereof so as to start a cloud cache thread. Then a snooping port of the Nginx waits a request of a HTTP message after receiving an HTTP message this message is submitted to the cache plugin for processing. The cache plugin parses out the key information corresponding to the HTTP message and the operation type of the HTTP message according to the configuration information included in the configuration file. The configuration of the Nginx system is very flexible which not only supports the configuration of expected quantity value but also supports the configuration of variable so that parameters can be changed with each HTTP request. In this embodiment variables can be configured in the configuration file when the HTTP Header of the HTTP message received by the Nginx system has a variable the cache plugin would determine the cloud cache operation type corresponding to the HTTP message according to this variable preferably.

Step S the key information and the operation type are converted into a parameter required by a cloud cache operation and a cloud cache operation type and the parameter is transmitted to a cloud cache apparatus so that the cloud cache apparatus can perform the cloud cache operation according to the parameter and the cloud cache operation type.

In this embodiment since the buffering function of the Nginx is realized by the cloud cache apparatus which is a distributed cache system based on Key Value storage mode after the key information corresponding to the HTTP message is parsed out according to the configuration information in the configuration file it is needed to convert the key information into a parameter required by the cloud cache operation meanwhile since the operation type of the HTTP message is REST interface including POST GET DELETE and PUT and the cloud cache operation supports six operation types including SET operation GET operation DELETE operation GETDEL operation INCR operation and STEP operation it is needed to convert the operation type of the received HTTP message into the cloud cache operation type supported by the cloud cache operation. Then the converted parameter required by the cloud cache operation is transmitted to the cloud cache apparatus so that the cloud cache apparatus can perform the cloud cache operation according to the received parameter and the cloud cache operation type.

Step S a cloud cache operation result returned by the cloud cache apparatus is received the cloud cache operation result is processed and then returned to the client.

After the cloud cache apparatus performs the cloud cache operation according to the received parameter and the cloud cache operation type the cloud cache apparatus would return the operation result to the cache plugin. After receiving the operation result returned by the cloud cache apparatus the cache plugin further processes the operation result and return the processed result to the client. In this embodiment processing the operation result refers to recombining the operation result into the content needed by the HTTP request message requested by the client and returning the content to the HTTP client through an existing channel of the Nginx. In this way the cache function of the Nginx can be realized through cloud cache in the Nginx and the purpose of realizing a REST interface of a cloud cache is achieved.

The method provided by the embodiment of the present invention for realizing a REST interface of a cloud cache in an Nginx combines the Nginx and the cloud cache apparatus by replacing an Nginx cache with the cloud cache apparatus and implementing a cache plugin in the Nginx server so as to establish data transfer between the Nginx and the cloud cache apparatus thereby realizing the cache function of the Nginx using the cloud cache apparatus in the Nginx and realizing a REST interface of a cloud cache. The method adopted to realize the cache function of the Nginx using a cloud cache technology rather than a cache of the Nginx can better save CPU resources and enable a larger cache capacity and a more powerful cache function of the Nginx owing to the high performance of the Nginx and the high performance high reliability and good extensibility of cloud cache.

Referring to in one embodiment of the method for realizing a REST interface of a cloud cache in an Nginx according to the present invention Step S includes the following steps.

Step S the key information corresponding to the HTTP message is packaged as a Key Value packet required by the cloud cache operation and the Key Value packet is transmitted to the cloud cache apparatus for processing.

In this embodiment since the cloud cache apparatus is a distributed cache system based on Key Value storage mode after the key information corresponding to the HTTP message is parsed out the key information is converted into a parameter required by the cloud cache operation thus it is needed to package the key information of the HTTP message as the Key Value storage mode based data used for a cloud cache that is package the key information to form a Key Value packet of the cloud cache and then the Key Value packet is transmitted to the cloud cache apparatus so that the cloud cache apparatus performs the cloud cache operation according to the data contained in the Key Value packet after receiving the Key Value packet.

Step S the operation type is converted into a cloud cache operation type so that the cloud cache apparatus can operate according to the cloud cache operation type.

After the operation type corresponding to the received HTTP message is obtained according to the configuration information included in the preset configuration file since the cloud cache apparatus does not support the REST interface it is needed to convert the operation type of the HTTP into a cloud cache operation type supported by the cloud cache operation so that the operation can be performed in the cloud cache apparatus according to the cloud cache operation type. In this embodiment in the operation type conversion POST operation and PUT operate can be converted into a cloud cache SET operation GET operation can be converted into a cloud cache GET operation DELETE operation can be converted into a cloud cache DELETE operation then the cloud cache apparatus can perform corresponding cloud cache operation according to the cloud cache operation type. In this way REST interface can be realized on cloud cache. If a variable is configured in the configuration file of the Nginx 

then while parsing the operation type of the HTTP message it can be determined that the operation type of the HTTP message is INCR operation according to this variable.

The key information corresponding to the HTTP message is packaged as a Key Value packet of the cloud cache so that the cloud cache apparatus performs the cloud cache operation according to the data in the Key Value packet. Meanwhile the operation type of the HTTP message is converted into a cloud cache operation type supported by the cloud cache operation so that the cloud cache apparatus performs the corresponding cloud cache operation according to the cloud cache operation type. In this way the REST interface of the cloud cache apparatus is realized thus the cache function of the Nginx can be realized through cloud cache the large cache capacity is further guaranteed and the cache function of the Nginx is more powerful.

Referring to in one embodiment of the method for realizing a REST interface of a cloud cache in an Nginx according to the present invention after Step S and before Step S the method further includes the following steps.

Since the Nginx has no available support function to support the communication mechanism between non related programs at present a named pipe mode is adopted to establish the data communication between the cloud cache thread and the Nginx in this embodiment. In this way after the operation type of the HTTP message is converted into a cloud cache operation type one named pipe can be established according to the cloud cache operation type wherein this named pipe is used to implement the data communication between the cache plugin and the cloud cache apparatus. The Nginx runs multiple threads thus one named pipe is established since this named pipe is unique the uniqueness of the data communication between the cache plugin and the cloud cache apparatus can be ensured. In this way the cloud cache apparatus calls an interface function of itself to perform the corresponding cloud cache operation according to the cloud cache operation type converted from the operation type of the HTTP message and writes data subjected to the cloud cache operation into the named pipe and returns.

Step S it is regularly detected whether there are data returned from the cloud cache apparatus existing in the named pipe if there are data returned from the cloud cache apparatus existing in the named pipe the data in the pipe file are read out.

While the cloud cache apparatus performs the corresponding cloud cache operation according to the cloud cache operation type converted from the operation type of the HTTP message a timer used for periodically detecting the named pipe is started so as to regularly detect whether there are data subjected to the cloud cache operation according to the cloud cache operation type returned from the cloud cache apparatus existing in the named pipe if it is detected that there are data existing in the named pipe this data can be read out. In this way the data communication between the cloud cache thread and the Nginx is completed.

One named pipe is established according to the cloud cache operation type corresponding to the HTTP message to ensure the uniqueness of the data communication between the cache plugin and the cloud cache apparatus. In this way after the cloud cache apparatus performs the cloud cache operation and after it is determined through the timer that there are data returned from the cloud cache apparatus existing in the named pipe it is only needed to read out the data in the named pipe. This named pipe mode which is adopted to realize the data communication between the cloud cache apparatus and the Nginx not only ensures the accuracy and uniqueness of the data but also accomplishes the cloud cache operation conveniently and quickly thereby further guaranteeing the powerful performance of the Nginx cache and saving the wait time of a user.

Referring to in one embodiment of the method for realizing a REST interface of a cloud cache in an Nginx according to the present invention Step S includes the following steps.

After the cloud cache apparatus calls an interface function of itself and performs the corresponding cloud cache operation according to the cloud cache operation type corresponding to the received HTTP message the cloud cache apparatus would write the data obtained after the operation into the named pipe established by the cache plugin for storage and return this named pipe. Therefore after the cloud cache operation is completed the cloud cache apparatus would first detect whether the named pipe established by the cache plugin exists so as to write the data into the pipe and return the pipe.

If the cloud cache apparatus detects that the named pipe established by the cache plugin exists the cloud cache apparatus would write the data subjected to the cloud cache operation according to the received cloud cache operation type into this pipe and then return the named pipe stored with data to the cache plugin.

After the cloud cache apparatus performs the corresponding operation according to the received cloud cache operation type and needs to store and return the data obtained after the operation the cloud cache apparatus first detects whether the named pipe established by the cache plugin exists after detecting the named pipe the cloud cache apparatus can write the data into the pipe and then return the pipe file to the cache plugin so that the cache plugin can read out the data in the pipe file.

Referring to in another embodiment of the method for realizing a REST interface of a cloud cache in an Nginx according to the present invention after Step S and before Step S the method further includes the following steps.

After the key information and the operation type corresponding to the HTTP message received from the client are parsed out according to the preset configuration file it is first needed to judge whether the key information is correct or whether the operation type of the HTTP message is enabled so as to judge according to the determination result whether to convert the key information and the operation type of the HTTP message into a parameter required by the cloud cache operation and a cloud cache operation type.

Step S if the key information is not correct or the operation type is not enabled the process is ended.

After the key information and the operation type of the HTTP message are judged if it is judged that the key information is correct or the operation type of the HTTP message is enabled the key information and the operation are converted into the parameter required by the cloud cache operation and the cloud cache operation type and the parameter is transmitted to the cloud cache apparatus so that the cloud cache apparatus can perform corresponding cloud cache operation according to the converted cloud cache operation type otherwise if it is judged that the key information is not correct or the operation type of the HTTP message is not enabled it is not necessary to convert the key information and the operation type of the HTTP message but to end the process directly.

Before converting the key information and the operation type of the HTTP message into the parameter required by the cloud cache operation and the cloud cache operation type it is first judged whether the key information of the HTTP message is correct and whether the operation type is enabled if the key information is correct or the operation type is enabled the key information and the operation type of the HTTP message are converted into the parameter required by the cloud cache operation and the cloud cache operation type so as to facilitate the cloud cache operation of the cloud cache apparatus if the key information of the HTTP message is incorrect or the operation type is not enabled it is not necessary to convert the key information and the operation type of the HTTP message but to end the process directly. In this way the speed of the cloud cache operation is further increased and meanwhile some unnecessary operations are avoided.

Referring to and which provide one embodiment of a system for realizing a REST interface of a cloud cache in an Nginx according to the present invention the system includes a cache plugin and a cloud cache apparatus wherein the cloud cache apparatus is configured to perform a cloud cache operation and the cache plugin includes 

a parsing module which is configured to receive an HTTP message transmitted from a client and parse out key information and an operation type corresponding to the HTTP message according to a preset configuration file 

a conversion module which is configured to convert the key information and the operation type into a parameter required by the cloud cache operation and a cloud cache operation type and transmit the parameter to the cloud cache apparatus so that the cloud cache apparatus performs the cloud cache operation according to the parameter and the cloud cache operation type and

a return module which is configured to receive a cloud cache operation result returned by the cloud cache apparatus process the cloud cache operation result and return the processed result to the client.

In this embodiment an existing cache for the Nginx is replaced by the cloud cache apparatus that is to say the cache mechanism of the Nginx is separated and is submitted to a cloud cache thread for maintenance and management. Meanwhile a cache plugin is set in the Nginx server to combine the Nginx and the cloud cache apparatus so as to establish data transfer between the Nginx and the cloud cache apparatus.

After the Nginx is started the Nginx would acquire automatically a configuration file preset in the system. This configuration file includes the configuration information added in Nginx.conf according to the configuration content required by the system. Meanwhile the cloud cache apparatus starts to load a dynamic file library thereof so as to start a cloud cache thread. Then a snooping port of the Nginx waits a request of a HTTP message after receiving an HTTP message this message is submitted to the cache plugin for processing. The cache plugin parses out the key information corresponding to the HTTP message and the operation type of the HTTP message according to the configuration information included in the configuration file. The configuration of the Nginx system is very flexible which not only supports the configuration of expected quantity value but also supports the configuration of variable so that parameters can be changed with each HTTP request. In this embodiment variables can be configured in the configuration file when the HTTP Header of the HTTP message received by the Nginx system has a variable the cache plugin would determine the cloud cache operation type corresponding to the HTTP message according to this variable preferably.

In this embodiment since the buffering function of the Nginx is realized by the cloud cache apparatus which is a distributed cache system based on Key Value storage mode after the key information corresponding to the HTTP message is parsed out according to the configuration information in the configuration file the conversion module needs to convert the key information into a parameter required by the cloud cache operation meanwhile since the operation type of the HTTP message is REST interface including POST GET DELETE and PUT and the cloud cache operation supports six operation types including SET operation GET operation DELETE operation GETDEL operation INCR operation and STEP operation it is needed to convert the operation type of the received HTTP message into the cloud cache operation type supported by the cloud cache operation. Then the converted parameter required by the cloud cache operation is transmitted to the cloud cache apparatus so that the cloud cache apparatus can perform the cloud cache operation according to the received parameter and the cloud cache operation type.

After the cloud cache apparatus performs the cloud cache operation according to the received parameter and the cloud cache operation type the cloud cache apparatus would return the operation result to the cache plugin. After receiving the operation result returned by the cloud cache apparatus the return module also needs to further process the operation result and return the processed result to the client. In this embodiment processing the operation result refers to recombining the operation result into the content needed by the HTTP request message requested by the client and returning the content to the HTTP client through an existing channel of the Nginx. In this way the cache function of the Nginx can be realized through cloud cache in the Nginx and the purpose of realizing a REST interface of a cloud cache is achieved.

The system provided by the embodiment of the present invention for realizing a REST interface of a cloud cache in an Nginx combines the Nginx and the cloud cache apparatus by replacing an Nginx cache with the cloud cache apparatus and implementing a cache plugin in the Nginx server so as to establish data transfer between the Nginx and the cloud cache apparatus thereby realizing the cache function of the Nginx using the cloud cache apparatus in the Nginx and realizing a REST interface of a cloud cache. The method adopted to realize the cache function of the Nginx using a cloud cache technology rather than a cache of the Nginx can better save CPU resources and enable a larger cache capacity and a more powerful cache function of the Nginx owing to the high performance of the Nginx and the high performance high reliability and good extensibility of cloud cache.

Referring to in one embodiment of the system for realizing a REST interface of a cloud cache in an Nginx according to the present invention the conversion module includes 

a packaging unit which is configured to package the key information corresponding to the HTTP message as a Key Value packet required by the cloud cache operation and transmit the Key Value packet to the cloud cache apparatus for processing and

a conversion unit which is configured to convert the operation type into a cloud cache operation type so that the cloud cache apparatus performs operation according to the cloud cache operation type.

In this embodiment since the cloud cache apparatus is a distributed cache system based on Key Value storage mode after the key information corresponding to the HTTP message is parsed out the key information is converted into a parameter required by the cloud cache operation thus it is needed to package the key information of the HTTP message as the Key Value storage mode based data used for a cloud cache that is the packaging unit packages the key information to form a Key Value packet of the cloud cache and then transmits the Key Value packet to the cloud cache apparatus so that the cloud cache apparatus performs the cloud cache operation according to the data contained in the Key Value packet after receiving the Key Value packet.

After the operation type corresponding to the received HTTP message is obtained according to the configuration information included in the preset configuration file since the cloud cache apparatus does not support the REST interface the conversion unit needs to convert the operation type of the HTTP into a cloud cache operation type supported by the cloud cache operation so that the operation can be performed in the cloud cache apparatus according to the cloud cache operation type. In this embodiment in the operation type conversion POST operation and PUT operate can be converted into a cloud cache SET operation GET operation can be converted into a cloud cache GET operation DELETE operation can be converted into a cloud cache DELETE operation then the cloud cache apparatus can perform corresponding cloud cache operation according to the cloud cache operation type. In this way REST interface can be realized on cloud cache. If a variable is configured in the configuration file of the Nginx 

then while parsing the operation type of the HTTP message it can be determined that the operation type of the HTTP message is INCR operation according to this variable.

The key information corresponding to the HTTP message is packaged as a Key Value packet of the cloud cache so that the cloud cache apparatus performs the cloud cache operation according to the data in the Key Value packet. Meanwhile the operation type of the HTTP message is converted into a cloud cache operation type supported by the cloud cache operation so that the cloud cache apparatus performs the corresponding cloud cache operation according to the cloud cache operation type. In this way the REST interface of the cloud cache apparatus is realized thus the cache function of the Nginx can be realized through cloud cache the large cache capacity is further guaranteed and the cache function of the Nginx is more powerful.

Referring to in one embodiment of the system for realizing a REST interface of a cloud cache in an Nginx according to the present invention the cache plugin further includes 

an establishment module which is configured to establish one named pipe according to the cloud cache operation type 

a reading module which is configured to regularly detect whether there are data returned from the cloud cache apparatus existing in the named pipe and read out the data in the pipe file if there are data returned from the cloud cache apparatus existing in the named pipe.

Since the Nginx has no available support function to support the communication mechanism between non related programs at present a named pipe mode is adopted to establish the data communication between the cloud cache thread and the Nginx in this embodiment. In this way after the operation type of the HTTP message is converted into a cloud cache operation type the establishment module can establish one named pipe according to the cloud cache operation type wherein this named pipe is used to implement the data communication between the cache plugin and the cloud cache apparatus. The Nginx runs multiple threads thus one named pipe is established since this named pipe is unique the uniqueness of the data communication between the cache plugin and the cloud cache apparatus can be ensured. In this way the cloud cache apparatus calls an interface function of itself to perform the corresponding cloud cache operation according to the cloud cache operation type converted from the operation type of the HTTP message and writes the data subjected to the cloud cache operation into the named pipe and returns the data.

While the cloud cache apparatus performs the corresponding cloud cache operation according to the cloud cache operation type converted from the operation type of the HTTP message a timer used for periodically detecting the named pipe is started so as to regularly detect whether there are data subjected to the cloud cache operation according to the cloud cache operation type returned from the cloud cache apparatus existing in the named pipe if it is detected that there are data existing in the named pipe the reading module reads out the data. In this way the data communication between the cloud cache thread and the Nginx is completed.

One named pipe is established according to the cloud cache operation type corresponding to the HTTP message to ensure the uniqueness of the data communication between the cache plugin and the cloud cache apparatus. In this way after the cloud cache apparatus performs the cloud cache operation and after it is determined through the timer that there are data returned from the cloud cache apparatus existing in the named pipe it is only needed to read out the data in the named pipe. This named pipe mode which is adopted to realize the data communication between the cloud cache apparatus and the Nginx not only ensures the accuracy and uniqueness of the data but also accomplishes the cloud cache operation conveniently and quickly thereby further guaranteeing the powerful performance of the Nginx cache and saving the wait time of a user.

Referring to in one embodiment of the system for realizing a REST interface of a cloud cache in an Nginx according to the present invention the cache plugin further includes 

After the cloud cache apparatus calls an interface function of itself and performs the corresponding cloud cache operation according to the cloud cache operation type corresponding to the received HTTP message the cloud cache apparatus would write the data obtained after the operation into the named pipe established by the cache plugin for storage and return this named pipe. Therefore after the cloud cache operation is completed the detection module would first detect whether the named pipe established by the cache plugin exists so as to write the data into the pipe and return the pipe.

If the cloud cache apparatus detects that the named pipe established by the cache plugin exists the writing module would write the data subjected to the cloud cache operation according to the received cloud cache operation type into this pipe and then return the named pipe stored with data to the cache plugin.

After the cloud cache apparatus performs the corresponding operation according to the received cloud cache operation type and needs to store and return the data obtained after the operation the cloud cache apparatus first detects whether the named pipe established by the cache plugin exists after detecting the named pipe the cloud cache apparatus can write the data into the pipe and then return the pipe file to the cache plugin so that the cache plugin can read out the data in the pipe file.

Referring to in another embodiment of the system for realizing a REST interface of a cloud cache in an Nginx according to the present invention the cache plugin further includes 

a judgment module which is configured to judge whether the key information is correct or whether the operation type is enabled and to end the process if the key information is not correct or the operation type is not enabled

After the key information and the operation type corresponding to the HTTP message received from the client are parsed out according to the preset configuration file the judgment module first needs to judge whether the key information is correct or whether the operation type of the HTTP message is enabled so as to judge according to the determination result whether to convert the key information and the operation type of the HTTP message into a parameter required by the cloud cache operation and a cloud cache operation type. After the key information and the operation type of the HTTP message are judged if it is judged that the key information is correct or the operation type of the HTTP message is enabled the key information and the operation are converted into the parameter required by the cloud cache operation and the cloud cache operation type and the parameter is transmitted to the cloud cache apparatus so that the cloud cache apparatus can perform corresponding cloud cache operation according to the converted cloud cache operation type otherwise if it is judged that the key information is not correct or the operation type of the HTTP message is not enabled it is not necessary to convert the key information and the operation type of the HTTP message but to end the process directly.

Before converting the key information and the operation type of the HTTP message into the parameter required by the cloud cache operation and the cloud cache operation type it is first judged whether the key information of the HTTP message is correct and whether the operation type is enabled if the key information is correct or the operation type is enabled the key information and the operation type of the HTTP message are converted into the parameter required by the cloud cache operation and the cloud cache operation type so as to facilitate the cloud cache operation of the cloud cache apparatus if the key information of the HTTP message is incorrect or the operation type is not enabled it is not necessary to convert the key information and the operation type of the HTTP message but to end the process directly. In this way the speed of the cloud cache operation is further increased and meanwhile some unnecessary operations are avoided.

The above are only the preferred embodiments of the present invention and are not intended to limit the patent scope of the present invention. Any equivalent structures or equivalent flow modifications made according to the description and the accompanying drawings of the present invention or any equivalent structures or equivalent flow modifications applied in other relevant technical fields directly or indirectly are deemed to be included in the patent protection scope of the present invention.

