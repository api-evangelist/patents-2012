---

title: Electronic receipt manager apparatuses, methods and systems
abstract: The ELECTRONIC RECEIPT MANAGER APPARATUSES, METHODS AND SYSTEMS (“ERM”) transforms transaction initiation requests and receipt requests via ERM components into receipt formatting, organization, storage and linkage with transactions. The ERM may be configured to receive a receipt through an interface of a portable device and determine a set of fields for formatting data from the receipt. The ERM may format the data from the receipt to include the set of fields and store the formatted data in a memory element of the portable device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09646291&OS=09646291&RS=09646291
owner: Visa International Service Association
number: 09646291
owner_city: San Francisco
owner_country: US
publication_date: 20120511
---
This application is a non provisional of and claims priority under 35 USC 119 e to U.S. provisional patent application Ser. No. 61 485 029 filed May 11 2011 entitled Electronic Receipt Management . The entire contents of the aforementioned application is expressly incorporated by reference herein.

This application for letters patent discloses and describes various novel innovations and inventive aspects of ELECTRONIC RECEIPT MANAGER technology hereinafter disclosure and contains material that is subject to copyright mask work and or other intellectual property protection. The respective owners of such intellectual property have no objection to the facsimile reproduction of the disclosure by anyone as it appears in published Patent Office file records but otherwise reserve all rights.

The present innovations address apparatuses methods and systems for managing organizing and viewing receipts and more particularly include ELECTRONIC RECEIPT MANAGER APPARATUSES METHODS AND SYSTEMS ERM .

When a transaction occurs at a merchant location paper receipts are provided to the consumer as a proof of purchase. Similarly when a transaction occurs online an electronic receipt is displayed or e mailed to the consumer. Some of these receipts may be kept by the consumer for example for returning merchandise while other receipts may be discarded or lost.

The leading number of each reference number within the drawings indicates the figure in which that reference number is introduced and or detailed. As such a detailed discussion of reference number would be found and or introduced in . Reference number is introduced in etc.

Various embodiments of the ERM facilitate storage management organization classification and retrieval of electronic receipts. Such receipts may be obtained as paper receipts or electronic receipts from purchases by consumers at point of sale PoS terminals or online. Consumers may utilize the facilities of the ERM for various purposes. For example some consumers may maintain these receipts in order to return items for the price at which the item was originally purchased. Consumers may also maintain a copy of the receipts for tax purposes and personal accounting. In the case of employees businesses may require all receipts to be collected for expense reports and or record keeping.

Printing these transaction receipts not only is cumbersome and generates waste which is harmful to the environment but also adds additional cost to the merchant to purchase both the paper and machines to print them. In addition further burden is placed on consumers to retain them. When receipts are lost consumers can lose money on returns as well as on disputes regarding a refund for a returned purchase. Additionally if a consumer is viewing an account statement from a bank for example the consumer must retain a paper receipt in order to identify and verify transaction amounts. Various embodiments of the ERM facilitate management storage search and retrieval of receipts from transactions whether such transactions are performed in person or online and using electronic wallet or other forms of payment.

In one embodiment the portable device may communicate with a cloud storage system that is configured to store electronic receipts for transactions on behalf of the user. The user may configure an account with the cloud storage system such as upon prior to or after installing the receipt manager RM application. In one implementation the cloud storage system may be operated by the TPS. In another implementation the cloud storage system may be independent of the TPS. The user may use the portable device to sync receipts with his or her account at the cloud storage system . Users may sync electronic receipts that are stored locally in their portable device or from email or other storage applications or servers using an ERM application e.g. RM application installed in their portable device . Users may also capture an image of a paper receipt and sync the captured receipt with the cloud storage system .

In one embodiment the cloud storage system may provide receipt details e.g. receipt receipt identifier transaction identifying information and or the like to the TPS e.g. an issuer bank . The TPS may identify a transaction corresponding to each receipt and may link the receipt to the transaction thereby allowing users access to the receipts directly from their online accounts with the TPS .

In some implementations the ERM may also facilitate receipt management for person to person transactions using portable devices. A person to person transaction may include for example a payment made to a seller in a farmer s market sites like Craigslist and or the like. After the transfer of funds from the user s payment account to the beneficiary the issuer of the account the TPS and or the like may generate a receipt for the funds transfer transaction which may be transmitted to the cloud storage system for storage management and retrieval. In one implementation the receipt may include information on the sender the beneficiary verification identifiers e.g. from sender bank receiver bank TPS and or the like amount date time location user provided transaction details e.g. Frank from the pottery shop in a market and or the like.

The portable device may also include a computer readable medium coupled to the processor which stores application programs and other computer code instructions for operating the portable device such as an operating system OS . In one embodiment of the ERM the computer readable medium may include a receipt manager RM application . In some implementations the RM application may automatically run each time that an electronic receipt is received such as during communication with an access device illustrated in . In some embodiments the RM application may run continuously e.g. in the background or when launched by a trigger e.g. transaction occurrence user input application launch and or the like . In addition the application may include a customizable user interface UI which may be configured by the user s preferences through application level programming. The application may be used to display and manage the electronic receipts for transactions.

Referring again to the computer readable medium may also include a receipt identifier generation engine . The receipt identifier generation engine may assign an identifier to each receipt received on the portable device . the identifier may be alphanumeric such as a 3 string number or include additional identifying information such as the merchant category code a partial name of the merchant a URL or any other combination of numbers letters and or other symbols. In one implementation the identifier may be in the form of a barcode a quick response code and or the like. Both the generated identifier and an original or copy of the electronic receipt as provided by the merchant may be communicated to and stored by the memory of the portable device . The electronic receipt may include information such as transactions details e.g. total cost tax SKU numbers item description and individual item costs and or the like . The receipt may also include information such as a merchant name merchant category code merchant location store number time date stamp and or the like. In some implementations the receipt may also include coupons offer codes and or the like. Such coupons offers code and or the like may be dynamic in nature in some implementations. Some of the aforementioned information may only be desired for further processing of the transaction and or for the merchant s reference and the user of the device may prefer not to view all of the information associated with the electronic receipt. Accordingly the computer readable medium on the portable device may also include a receipt formatting engine which extracts and or maintains only information preferred by the user and formats that information into a list of receipts. The list of receipts is displayed by the RM application to the user. In one implementation the RM application may include the facilities of the receipt identifier generation engine and the receipt formatting engine . In one implementation the computer readable medium may include a transaction application which may be executed to transfer account details to the access device receive an authorization response and receive the electronic receipt for the transaction.

At the user may provide payment information to a merchant e.g. merchant access device or merchant server for a transaction. When the transaction is conducted online using an electronic wallet account or payment cards the user may input wallet authentication details e.g. wallet account username and password or payment card information e.g. payment card number name expiration date security code billing address and or the like to his or her client which in turn creates and sends a purchase request to the merchant server . When the transaction is conducted in person the user may provide payment information directly to the merchant via an access device similar to one described in . In one implementation the purchase request sent via the client to the merchant may be an HTTP S POST message including XML formatted data. An example listing of the purchase request substantially in the form of a HTTP S POST message including XML formatted data is provided below 

After receiving the purchase request from the client the merchant may parse the request and extract payment information necessary to create a transaction authorization request message. The transaction authorization request message may be sent to the TPS server . In one implementation the authorization request message from the merchant to the TPS server may be an HTTP S POST message including XML formatted data. An example listing of the authorization request message substantially in the form of a HTTP S POST message including XML formatted data is provided below 

The TPS server may obtain authorization for the transaction at . In one implementation the authorization request message may be received by an acquiring bank or processing bank . The acquiring bank may send the authorization request message to respective credit card associations CCA e.g. Visa MasterCard American Express Discover and or the like . The CCA may forward the authorization request message to the card issuer which in turn may approve or decline the transaction. The response from the card issuer may then be sent back to the merchant via the CCA and acquiring bank as the transaction authorization response message . In one implementation the authorization response message from the TPS server to the merchant may include information such as client transaction ID TPS transaction ID authorization code transaction status message and or the like. If the transaction is approved the merchant may provide a receipt to the user or the client . In some implementations the receipt may be an electronic receipt document or image file provided via email a data package e.g. XML sent from the merchant e.g. access device to the user s client a web page confirmation and or the like. At the client may optionally display the receipt to the user upon receiving the receipt from the merchant . In one implementation the RM application may obtain the data package and extract information in the data package to create and display the receipt corresponding to the transaction. In another implementation a barcode e.g. Quick Response code including receipt data may be displayed at the merchant terminal. The user may capture the image of the barcode which may be read by the RM application to generate and display the corresponding receipt.

At the user may add a receipt to the RM application on his or her client . The client may generate a sync receipt request message and send the message to the cloud server . In one implementation the receipt sync request may be sent to the cloud server as an HTTP S POST message including XML formatted data. An example listing of the receipt sync request message substantially in the form of a HTTP S POST message including XML formatted data is provided below 

After receiving the receipt sync request message from the client the cloud server may generate a receipt identifier at . In one implementation the cloud server may parse the request message to obtain receipt data and use all or a portion of the receipt data to generate the receipt identifier. The cloud server may further store the receipt received from the client in association with the receipt identifier in a receipt database . For example the cloud server may issue PHP SQL commands to store the receipt data to a database table such as receipt table . An example add receipt and receipt identifier command substantially in the form of PHP SQL commands is provided below 

In one implementation the cloud server may send a receipt sync confirmation message to the client upon storing the receipt in the receipt database . The confirmation message may also be displayed on the client at . In one implementation the confirmation message may include receipt identifier s for each receipt that was sent to the cloud server for syncing. The cloud server may also send the receipt identifier and transaction details to the TPS server . In one implementation the message may be sent to the TPS server as an HTTP S POST message including XML formatted data. An example listing of the message substantially in the form of a HTTP S POST message including XML formatted data is provided below 

The transaction details may be parsed by the TPS server and compared with transaction records to identify a transaction corresponding to the receipt identifier. The TPS server may link the receipt identifier to one or more identified transactions at thereby facilitating efficient and fast access to receipts for transactions.

After receiving the authentication request message the TPS server may parse the message and extract login details such as username password and or the like. The TPS server may compare the extracted login details to information in a database to authenticate the user at . When the user provided login credentials match with the ones in the database e.g. the TPS server may generate and send a user authentication response message accepting the request. In one implementation the authentication response message may include information such as authentication status e.g. fail or success login name message e.g. reasons for authentication failure account name and or the like. Once the user is authenticated the client may display the landing page for the online account e.g. account summary page at .

The user may navigate through the online account site or application to a transaction summary page e.g. . At the user may select a link or an icon for receipt e.g. next to a desired transaction to view the receipt corresponding to the transaction. The client may receive the user s selection and may generate and send to the TPS server a receipt request message . In one implementation the receipt request message may be sent to the TPS server as an HTTP S POST message including XML formatted data. An example listing of the receipt request message substantially in the form of a HTTP S POST message including XML formatted data is provided below 

The TPS server in turn may forward the request to the cloud server as a receipt request message . The cloud server may receive the receipt request message and may parse the request at . Using parameters e.g. receipt identifier from the parsing the cloud server may create and execute a receipt query on a receipt database . In one implementation for example the cloud server may issue PHP SQL commands to query the receipt database table e.g. for receipt data. An example receipt query substantially in the form of PHP SQL commands is provided below 

The receipt query may return a receipt that matches the parameters in the query. The cloud server may then send the matching receipt to the TPS server which in turn may send the received receipt as the receipt message to the client . After receiving the receipt message the client may display the receipt to the user at . In one implementation the receipt request may be made using an application programming interface API call to the cloud server the receipt being returned in response to the API call. For example the TPS server may call a getReceipt API method to obtain a receipt file and or receipt data. An exemplary GET request method for making the call is provided below. The API key and token for making such calls may be provided to the TPS server before making the call.

In another implementation a receipt request message may be generated and sent to the cloud server instead of the receipt request message . The receipt request message may have a data structure similar to the receipt request message . The cloud server may parse the request at generate and execute a query on the receipt database at and provide results of the query to the client in a receipt response message . In one implementation call backs via APIs inline widgets and or the like may be used to pull receipt information from the cloud server and display the pulled information inline at the account interface.

At the access device may transfer information from the merchant to the portable device as well as transfer account information from the portable device to the merchant while conducting a contact or contactless transaction. At an electronic receipt may be received on the portable device. The receipt may be transferred in an alphanumeric format as an image and or other file type e.g. a text file a PDF file an Excel file and or the like and may depend on the vendor access device portable device type user preferences and or the like. For instance a cellular portable device may be capable of receiving an image of the receipt for viewing while other portable devices may only be capable of receiving alphanumeric data. In one implementation the portable device may include facilities for optical character recognition OCR and as such may OCR receipts upon receiving them.

During the transaction a transaction application located in the computer readable medium of the portable device e.g. may be executed to transfer account details to the access device receive an authorization response and receive the electronic receipt for the transaction. At after the transaction application is executed the RM application may be executed to handle the incoming electronic receipt. The RM application may be executed in response to the transaction processing application executing e.g. execution of the RM application may be initiated by an instruction included in the transaction processing application.

At the receipt identifier generation engine may be executed such as simultaneously with the RM application in response to the transaction application and or the RM application. Once the receipt generation engine is executed a unique identifier is generated for the electronic receipt. The identifier as previously noted may include an alphanumeric string which may be randomly generated by the receipt generation engine and or generated based on information in the receipt information associated with an issuer credit card association CCA and or the like.

At the identifier generated for the receipt may be stored in the memory of the portable device in order for the user to be able to quickly call on the receipt for later viewing. In some embodiments a copy of the original receipt is also stored in a memory of the portable device. At the receipt formatting engine may communicate with the RM application to determine which information is desired from the receipt based on the user s preferences. The receipt formatting engine may retrieve the preferred information and format the information into a table associated with the RM application. The table may include the selectable fields chosen by the user. In some embodiments the RM application may include default fields which are utilized to format the receipt information. In other embodiments the user may be prompted to select preferred fields when the application is downloaded and installed on the portable device.

At the aforementioned selectable fields may be displayed to the user in the receipt application in a personalized format such as in the receipt listing illustrated in . In one implementation the formatted receipt used in the RM application may also be stored in the memory of the portable device so that processing the receipt and reformatting the receipt only occurs when the receipt is originally received. However if the user changes his or her preference for one or more fields for the receipts list view the portable device may perform an update and call each receipt to reformat the information into the receipts listing.

The selection of the user preferred fields may be limited dependent on the display size and memory capabilities of the portable device. In other embodiments the table may include fields defined by rows in a table and display columns of a specified number of receipts per page dependent on the RM application set up. In some embodiments the user may be able to predefine the display set up of the RM application.

In an additional embodiment at the user s portable device may automatically forward a copy of the original receipt to an issuer of the user s account the CCA associated with the user s account or both. The original receipt may be in the format provided by the merchant so that retrieval and use of the receipt to dispute transactions with the merchant and or account holder may be effectively processed.

However if the transaction is authorized at the merchant may generate and provide a receipt for the transaction to the client at . In one implementation the merchant may transmit a copy of the receipt receipt data to the TPS server and or the cloud server . In a further implementation the merchant may need to be enrolled with the cloud server and or TPS server before forwarding receipts on behalf of the user to the cloud server and or TPS server. At the client may receive the receipt provided by the merchant . In some implementations the receipt may be sent by the merchant to the client in an alphanumeric format image format other file formats e.g. a text file a PDF file an Excel file and or the like and or other formats accepted by vendors merchant access devices and or the user s client . In one implementation when a receipt is sent in alphanumeric format the user may add the receipt data to the RM application installed in his or her client at . The RM application in the client may reformat the added receipt data according to user preference settings. In other implementations a paper receipt or a confirmation page may be provided to the user s client . The user may utilize his or her client to capture an image of the paper receipt and add the image to the RM application at . Receipts sent by the merchant via communication channels such as email may be added to the RM application directly from the email application. In some embodiments the receipts sent by the merchant following a transaction may automatically be added to the RM application without explicit user instructions. The user may turn on such automatic addition of receipts to the RM application by modifying the RM application settings.

At the client may send the receipt to the cloud server for syncing. In one implementation syncing may automatically start after a receipt is added to the RM application. The automatic or manual sync preference may be specified by the user via the RM application settings. The cloud server may receive the receipt for syncing at . Upon receiving the receipt the cloud server may generate a receipt identifier and store the receipt in association with the receipt identifier at . As previously described the receipt identifier may be a unique identifier and may include an alphanumeric string such as may be randomly generated by the receipt generation engine. In some implementations the receipt identifier may be generated based on a hash of the information in the receipt user issuer and or CCA associated information.

At after storing the receipt along with a receipt identifier the cloud server may provide a confirmation message to the client . The client may receive the confirmation message at . In one implementation the confirmation message may be used by the RM application to manage receipts on the client . For example the RM application may mark a receipt entry on the application with a sync or location status indicator e.g. cloud or local to indicate the location of the receipt determine whether a re sync is needed e.g. when the sync is not successful create a receipt delete queue e.g. receipts in the cloud may be deleted first and or the like. The process may then conclude at .

In one embodiment of the URS component the cloud server may communicate directly with the TPS server to link the receipts with corresponding transactions. Referring to at the cloud server may parse the receipt received from the client and send the receipt identifier along with the receipt data to the TPS server . The TPS server may receive the receipt identifier and the receipt data at . The TPS server may examine the transaction records associated with the user to identify a transaction having information that matches the receipt data. At the TPS server may link the receipt identifier to the identified transaction. As the linking associates the receipt identifier with the corresponding transaction the TPS server may provide users direct access to stored receipts from their user accounts with the TPS server . In some implementations the receipt data may be incomplete or inadequate to identify a transaction. In such a situation multiple receipts may be associated with a transaction or a receipt may be associated with multiple transactions. The TPS server may then provide the user an opportunity to definitively identify and associate receipts or receipt identifiers with a particular transaction. Such definitive user assisted link between a receipt and a transaction may then be stored in the TPS server and reflected in the transaction summary in the user s account with the TPS server .

At the merchant may receive the payment information from the user via the access device. At the merchant may use the payment information and details of the transaction to create an authorization request message. At the merchant may forward the authorization request message to the TPS server . The TPS server may receive the authorization request message at . At the TPS server may obtain authorization and send an authorization response message to the merchant. In one implementation authorization for the transaction may be obtained by sending an authorization request message to an acquiring bank which in turn may forward the message to the CCA or payment processing network. The CCA may then forward the authorization request message to an issuing bank of an account associated with the payment information provided by the user. The issuing bank may receive the authorization request message and send an authorization response message back to the CCA to indicate whether or not the transaction is authorized. The CCA may then forward the authorization response message back to the acquiring bank which in turn may send the response message back to the merchant.

At the merchant may receive the authorization response message. If the authorization response message at indicates that the transaction is not authorized the process may end at . In one implementation the merchant may forward the transaction decline message to the user and or the user s client . If the transaction is authorized the merchant may provide a receipt for the transaction to the user or the user s client at . In one implementation the authorization response message may also be sent directly from the issuing bank to the user s client . The client may receive the receipt for the transaction at concluding the process at .

In one embodiment after sending the authorization response message to the merchant at the TPS server may determine if the transaction is authorized at . If the transaction is not authorized the TPS server may end the process at . However if the transaction is authorized at the TPS server may further determine if the user is enrolled in receipt management and if the user has authorized automatic storage of receipts at . In one implementation user enrollment data may be provided by the cloud server to the TPS server when a user account at the cloud server is provisioned. If the determination at is negative the process may conclude at . On the other hand if the determination at is positive the TPS server may send the transaction details to the cloud server at . In one implementation the transaction details may be obtained from the authorization request response messages. In a further implementation the authorization request message may be a modified authorization request message including standard fields of information such as transaction amount card verification value service code expiration date merchant category code an account number merchant transaction ID and or the like as well as additional information relating to product identifiers e.g. SKU data product cost tax discount and any other information desired to generate a receipt for the transaction. Similarly the authorization response message may include among other fields of information a TPS transaction ID. In some implementations fields available as part of a normal authorization request response message may be utilized to include the receipt data. For example open characters available in the field or flags available in the request response message may be utilized or existing fields may be repurposed.

At the cloud server may receive the transaction details. At the cloud server may generate a receipt for the transaction using the transaction details and an identifier for the receipt. In one implementation each receipt may include a transaction ID e.g. merchant transaction ID TPS transaction ID and or the like . The same transaction ID may also be provided to the merchant e.g. in the authorization response message by the TPS server . The transaction ID may be used to resolve any returns by the user such as using the cloud server generated receipts. At the cloud server may store the receipt and the receipt identifier in a receipt database. At the cloud server may send a confirmation of receipt storage to the user s client . The confirmation message may be received by the user s client at concluding the receipt storage process at .

Referring to in one embodiment the TPS server may assume the responsibility for receipt storage and management from the cloud server . At the TPS server may generate a receipt using the transaction details and an identifier for the receipt. At the TPS server may store the receipt and the associated receipt identifier in one or more databases and or tables. At the TPS server may send a receipt storage confirmation message including a receipt identifier to the user s client .

In an alternate embodiment the selected receipt link or icon and associated receipt identifier may be sent to the cloud server instead of the TPS server . The cloud server may look up the receipt corresponding to the receipt identifier and provide the receipt to the user s client for display as for example an iframe within the online account webpage or application.

In one implementation the user may request a detailed report at . If the user has provided custom report parameters at the cloud server may obtain the custom report parameters at . The custom report parameters may be included in the receipt request message and or may be stored in a report database e.g. . Using the custom report parameters at the cloud server may extract custom report parameter values from the receipts obtained as query results.

At the cloud server may send report data including custom report parameter values along with receipt identifiers to the user s client . At the client may receive the report data. At the user s client may generate a report in the format specified by the user s preference settings. In one implementation the formatting may be facilitated by the receipt formatting engine described with reference to . At the user s client may display the formatted report to the user. In one implementation the formatted report may be displayed within the RM application interface. In another implementation the user may be provided an option to open the formatted report in other applications such as iBooks Pages and or the like depending on the report format. The process may then conclude at .

In one implementation if the user has not provided custom report parameters the cloud server may select default report parameters at . In one implementation the selection of default report parameters may be based on target and or requesting client capabilities. At the cloud server may obtain the default report parameters. As in the case when custom parameters are available at the cloud server may extract default report parameter values from the receipts in the query result. Similarly at the cloud server may send report data including the matching receipt identifiers and extracted default parameter values to the user s client . The user s client may then process the receipt data as described with respect to and .

Referring to the RM application UI is illustrated. As shown the UI may include several tab bar icons and for various purposes. The UI as shown illustrates the display panel and options available when the add receipt tab bar icon is selected by the user. The user may add a receipt to the RM application by selecting any of the options provided. For example the user may select the option to take a photo of a receipt using his or her portable device and add the photo to the RM application. The user may also select option to choose a file from a saved location and add the chosen file to the RM application. For example receipts in text PDF or other formats may be saved in the portable device file system or applications such as iBooks. The user may use the option to navigate to the location or application and select the desired receipt to import it to the RM application. In addition to the features described with respect to the user may also select choose from email option to go to the application and select the desired attachment.

Referring to example UI and associated with the receipt finder tab icon are illustrated. As shown in UI the receipt finder tab provides several selection criteria that the user may utilize to find a desired receipt. For example the user may specify a transaction date or a range using option one or more merchant names using option purchase category e.g. grocery tax healthcare miscellaneous and or the like payment card or account custom search criteria e.g. merchants within a zip code purchases exceeding a threshold amount and or the like and or the like. In one implementation the user may also enter a receipt identifier a list of receipt identifiers e.g. separated by space comma or semicolon a range of receipt identifiers at as a search criteria. The user may then select the search button to find receipts and or receipt identifiers matching the provided search criteria. In some implementations receipts may include coupons codes offers and or the like. The value of these coupons codes offers and or the like may be dynamic and may vary depending on the purchase amount date and or time of redemption purchase item purchase location and or the like. In one implementation the RM application may extract details relating to such information and mark and or categorize receipts including such information under a separate category e.g. offers . In a further implementation when the offer is no longer valid the receipts may be de categorized such that the offers category includes receipts with valid offers. The categorization of receipts with offers may assist the user in looking up any offers relating to for example a merchant prior to making a purchase with the merchant.

The UI illustrates an example display panel showing the search results. In one implementation the search results may be provided as a listing arranged by for example transaction date corresponding to the search parameters . The listing may include a receipt identifier date of transaction merchant information transaction amount return eligibility status indicator receipt location indicator and or the like. In one implementation the return eligibility status indicator may indicate whether the items purchased are eligible for return. For example for the receipt with identifier the return eligibility status indicator as shown may indicate that a return is no longer possible e.g. purchase occurred more than 90 days before while the receipt with return eligibility status indicators for receipts with identifiers and may indicate that the purchases are eligible for return. In one implementation the return eligibility determination may be based on the examination of the merchant s rules and conditions for returns. In one implementation the receipt location indicator may indicate whether a copy of the receipt is available locally e.g. L indicator or in the cloud e.g. C indicator .

In one implementation in addition to the search results displayed in UI the RM application may also display receipts that are related to the receipts in the search results. For example a user may return one or more items associated with a receipt for refund. The RM application may associate the original purchase receipt with the receipt for refund such that the user has a complete overview of the purchase and refund. The association between receipts may also assist the RM application in providing an actual spend amount taking into account the refund amount. In one implementation the relatedness may be established based on receipt data and or user input.

When one of the search results e.g. receipt is selected from the UI the UI of may be displayed. The UI may show the copy of the original or cloud or TPS generated receipt for the transaction. The UI may also include an option to view the return policy for the merchant via the navigation bar icon . In one implementation the UI may include tab bar icons and for processing the receipt. For example when the tab bar icon is selected the UI may be displayed. As shown UI may include a menu including several options may be displayed. For example the menu may include an option to email the receipt being viewed an option to print the receipt option to sync the receipt an option to cancel and return to UI . In one implementation the sync receipt option may be displayed only when the receipt location indicator see UI indicates that the receipt is stored locally. If the receipt is stored in the cloud the option may be modified to an option to download receipt such that the receipt is accessible to the user even when the portable device is offline. Referring to UI the user may use the left and right arrow tab bar icons to view other receipts in the listing of search results see UI and the tab bar icon to delete the receipt currently displayed in the display panel. In one implementation icons for viewing the back of the receipt rotating the receipt zooming in or out and or the like may be available in the RM application.

Referring to UI and associated with the settings tab icon illustrate various options for setting up the preferences for receipt management in the RM application. Referring to UI in one implementation the user may use option to select payment card accounts or issuers with which the user wishes to link receipts. For example when the payment cards VISA 6789 and Visa Signature are selected as shown the RM application establishes a link between the issuers of the selected payment cards and receipts associated with the selected payment cards. In one implementation establishing the link may include contacting the issuer on behalf of the user providing user authorized information to the user providing API keys and tokens and or the like. In one implementation the user may be provided an option for automatic sync which when turned on may cause the RM application to automatically sync receipts received by the portable device to the cloud. In another implementation an option may be provided which when turned on may cause the RM application to automatically categorize any receipts added to the RM application in one or more user defined or default categories e.g. healthcare grocery tax school and or the like . In a further implementation the user may select one or more categories listed under option in which the receipts may be categorized. In one implementation the RM application may prompt the user to enter a category for a receipt whenever a receipt for a transaction is received by the cloud server. In one implementation such prompting may be in the form of an alert to the user. The alert may indicate an occurrence of a transaction. The alert may immediately inform the user of the transaction and if the transaction is unauthorized the user may take steps to address the fraud. In one implementation a copy of the receipt may be provided with the alert. The user may save his or her setting preferences by selecting the save icon in the navigation bar.

Referring to UI the RM application may also include an option for customizing receipt display. For example the user may select one or more fields for display in any receipt listing such as the listing shown in UI . In one implementation the user may have the option to select a receipt ID field date amount merchant returns purchase category receipt location optimized for portable device and or the like. In a further implementation the optimized for portable device option may include a list of pre configured fields suitable for display in the portable device e.g. an iPhone with a certain display area an iPad with a certain display area display orientation and or the like . These customizations may be saved by selecting the save icon on the navigation bar. In one implementation selection of the sync tab bar icon may cause the RM application to identify all receipts stored locally that have not been synced and sync them with the cloud server. In a further implementation a listing of local receipts may be displayed for the user to review select or deselect and confirm sync.

Referring to UI and associated with the report tab icon illustrate various options for report generation in the RM application. In one implementation UI may provide an option to choose report criteria. These options may include for example groceries tax miscellaneous healthcare merchant and or the like as well as an option to add a new category . The UI may also provide an option to choose a report format. Examples of report format may include a listing a summary format a spreadsheet format and or the like. In a further implementation default report templates may be provided for selection by the user. The user may modify a default report template and save the modified template as a new template. In one implementation the user may also add custom templates e.g. custom expense report template to the report format. In a further implementation copies of the templates may be maintained at the cloud server such that the user does not need to save them in the memory of his or her portable device. In one implementation the listing may be a listing of receipts by receipt identifier with a link or an icon that directs the user to the receipt. The summary format may be a summary listing such as the one shown in UI and item . The spreadsheet format may be a table format such as UI . The UI may also include a get report button that causes the RM application to obtain or generate a report in the user specified format including receipt data matching the user specified reporting criteria. The report settings thus configured may be saved by selecting the save button on the navigation bar.

When the get report button is selected from UI the RM application may display UI . UI as shown may include a tab for each reporting criteria selected. For example as groceries criterion is selected in UI a groceries tab may be displayed. The user may also add additional reporting criteria directly from UI by selecting the tab . As shown a tax tab has been added from UI . Each tab may include a table including fields customized by the user e.g. using UI . The table may include options to add a column or row by selecting an add column icon or an add row icon . In one implementation the user may select a data field for the new column or row and select refresh button to obtain data pertaining to the just added data field. The table may also include options to select a cell or a group of cells as shown by a selection box . In one implementation when a selection box is drawn a menu option may be displayed. The menu option may include options to copy cut paste delete merge fill format create chart and or the like. When the create chart option is selected a chart option menu not shown may be displayed. The user may select a suitable chart type e.g. bar column pie and or the like and a chart such as chart may be displayed. The underlying data for the chart may be derived from the data in the selection area . In one implementation the user may select a save button to save the table and chart an export button to export the table and or chart to another application or as a file e.g. PDF Excel text and or the like a print button to print the table and or chart an email button to email the report to one or more recipients and or the like.

As discussed previously users may use the reporting facilities of the RM application to request various reports generated in a selected format or using a template. Such reports may be useful for various purposes including management tracking and record keeping of personal finances business expenses budgeting and or the like. For example in one implementation a user may desire to obtain a report for all education related transactions conducted in the previous year. In situations where education related expenses may have tax benefits or be tax deductible the report may be used to ascertain applicable tax credits and the receipts for such transactions may be available for any tax audits. In another implementation the reporting facilities of the ERM may assist in the preparation of expense reports for reimbursement insurance claim reports and or the like. For example in one implementation a user may retrieve receipts that are categorized under work expenses and generate an expense report e.g. using a default template or custom template accepted and or approved by an employer . In some implementations the user may retrieve receipts for all transactions conducted during a business trip e.g. using search parameters such as date range geographic location and or the like . They user may then deselect any receipts that the user may not wish to be reimbursed for generate a report in a desired format and or template add notes or comments and send the report to desired recipients. In one implementation the RM application may be integrated with applications such as tax preparation software human resources software and or the like to allow effective importing exporting of receipt and or transaction data and reports.

In addition to receipt information the RM application may include additional functionality such as actions which may be performed on the receipt. For example the user may print the listing of receipts and or an individual receipt through selection of a printer icon . The user may interface the portable device with a computer not shown in communication with a printer or wirelessly such as through a WLAN to a printer. In one embodiment when the user selects the printer icon to print the listing of receipts the user may be prompted to re select the formatting of the receipts. For example it may be that due to the size of the display on the portable device the user may only include four fields of information for the receipts displayed thereon. However when printing the user may wish to include additional fields of receipt information.

As shown in the user may also select to transmit such as by text message or email the receipt and or listing of receipts to a recipient or delete the receipt s . In one embodiment the user may select e.g. highlight individual receipts or multiple receipts to perform any of the functions and . In another embodiment with no selection of receipts by the user the application may print email or delete the displayed listing e.g. all or at least more than one of the receipts. The RM application UI may also include an exit function which allows a user to exit the application. In another embodiment as discussed with reference to the RM may include a search function not shown which allows a user to enter a portion of information found in a selectable field to locate a receipt. For example the search function may automatically provide the user with a text field to enter the receipt identifier number a merchant name date and or the like The RM may return a listing of receipts meeting that criteria.

When a user is viewing the listing of receipts in the RM application UI the user may select a particular receipt for viewing. As shown in only preferred fields may be shown. However a user may also wish to view the original receipt in order to review particular item costs and or the like Accordingly the user may select a listed receipt and the identifier i.e. the identifier associated with the receipt is utilized to retrieve the original receipt from the portable device memory or from the cloud server and display the original receipt to the user.

In another embodiment if the user is viewing the account statement on the portable device the identifier hyperlink may be used to call the original receipt from the memory of the portable device for viewing or to run the receipt application and display a listing of receipts highlighting the selected receipt. In an alternative embodiment the identifier on the account statement may be generated by the CCA or issuer of the account and may differ from the identifier created on the user s portable device. In some embodiments an icon may be provided in place of an identifier.

As previously described the receipt identifier generated on the receipt identifier generation engine by the user s portable device may be appended to the original receipt and utilized in the user s account statement for cross referencing with the receipts in the RM application illustrated in . The identifier may be used in the statement to call a local copy of the receipt for viewing such as in the case where the user accesses his or her account statement e.g. VISA via his or her portable device. In another embodiment the identifier may be used to view the receipt in another browser window such as when the copy is stored by the issuer and or CCA or in a cloud.

In one embodiment the account issuer or CCA may also include a receipt identifier generation engine which may assign a new receipt identifier to the receipt for accessing the receipt from the user s statement. In some embodiments the user s RM application may automatically insert the identifier generated on the portable device into the copy of the original receipt forwarded to the issuer and or CCA or synced with the cloud server. This may aid the user in finding the receipt more easily on his or her portable device through the RM application.

Referring to in one implementation a UI may be displayed when the user accesses his or her account. As shown a number of receipt icons may be displayed next to a transaction. Such a situation may occur when there is incomplete data to definitively associate a receipt to a transaction. These icons may include receipts that are most likely related to the transaction. When any one of the icons is selected UI may be displayed to the user. As shown the UI may include an overlay that may display all three receipts and that are most likely associated with the transaction. In one implementation the user may review the receipts and select a receipt to link it to the transaction. As shown when the user selects receipt a link option may pop up. The user may select the link option to link the receipt to the transaction. In one implementation the user may be requested to confirm the linking at which time the user may either confirm or cancel the linking.

In light of the aforementioned detailed description it should be noted that various aspects of the ERM may allow a user to view maintain organize and manage receipts. Additionally facilities of the ERM allow users to effectively manage their financing of accounts used in a transaction through effective and quick viewing of receipts associated with those transactions. As discussed various aspects of the ERM include a centralized cloud storage server where receipts are stored and receipt identifiers that are shared among users issuers other TPS server entities and or the like. Such facilities of the ERM may reduce redundancy of data stored at such entities. Additionally as receipts are synced to the cloud server and may be efficiently retrieved using receipt identifiers or queries receipts need not be stored locally in the portable device and memory in the portable device may be made available for other purposes.

Furthermore in some embodiments ERM may act as a receipt aggregator aggregating receipts from all transactions e.g. at PoS terminal online device to device and or the like regardless of the payment form e.g. credit debit prepaid cash check and or the like and providing users access to aggregate transaction data. Such aggregate transaction data may be used to generate various reports and perform analyses on spending. For example users may configure the RM application to track spending on one or more desired criteria e.g. clothing merchandize healthcare month and or the like and alert the user upon or prior to reaching a user specified threshold e.g. 500 dollars per month 5000 deductible . Such aggregation facilities reduce the number of actions required to generate reports and perform analyses on aggregate transaction data.

Users e.g. which may be people and or other systems may engage information technology systems e.g. computers to facilitate information processing. In turn computers employ processors to process information such processors may be referred to as central processing units CPU . One form of processor is referred to as a microprocessor. CPUs use communicative circuits to pass binary encoded signals acting as instructions to enable various operations. These instructions may be operational and or data instructions containing and or referencing other instructions and data in various processor accessible and operable areas of memory e.g. registers cache memory random access memory etc. . Such communicative instructions may be stored and or transmitted in batches e.g. batches of instructions as programs and or data components to facilitate desired operations. These stored instruction codes e.g. programs may engage the CPU circuit components and other motherboard and or system components to perform desired operations. One type of program is a computer operating system which may be executed by CPU on a computer the operating system enables and facilitates users to access and operate computer information technology and resources. Some resources that may be employed in information technology systems include input and output mechanisms through which data may pass into and out of a computer memory storage into which data may be saved and processors by which information may be processed. These information technology systems may be used to collect data for later retrieval analysis and manipulation which may be facilitated through a database program. These information technology systems provide interfaces that allow users to access and operate various system components.

In one embodiment the ERM controller may be connected to and or communicate with entities such as but not limited to one or more users from user input devices peripheral devices an optional cryptographic processor device and or a communications network . For example the ERM controller may be connected to and or communicate with users e.g. operating client device s e.g. including but not limited to personal computer s server s and or various mobile device s including but not limited to cellular telephone s smartphone s e.g. iPhone Blackberry Android OS based phones etc. tablet computer s e.g. Apple iPad HP Slate Motorola Xoom etc. eBook reader s e.g. Amazon Kindle Barnes and Noble s Nook eReader etc. laptop computer s notebook s netbook s gaming console s e.g. XBOX Live Nintendo DS Sony PlayStation Portable etc. portable scanner s and or the like.

Networks are commonly thought to comprise the interconnection and interoperation of clients servers and intermediary nodes in a graph topology. It should be noted that the term server as used throughout this application refers generally to a computer other device program or combination thereof that processes and responds to the requests of remote users across a communications network. Servers serve their information to requesting clients. The term client as used herein refers generally to a computer program other device user and or combination thereof that is capable of processing and making requests and obtaining and processing any responses from servers across a communications network. A computer other device program or combination thereof that facilitates processes information and requests and or furthers the passage of information from a source user to a destination user is commonly referred to as a node. Networks are generally thought to facilitate the transfer of information from source points to destinations. A node specifically tasked with furthering the passage of information from a source to a destination is commonly called a router. There are many forms of networks such as Local Area Networks LANs Pico networks Wide Area Networks WANs Wireless Networks WLANs etc. For example the Internet is generally accepted as being an interconnection of a multitude of networks whereby remote clients and servers may access and interoperate with one another.

The ERM controller may be based on computer systems that may comprise but are not limited to components such as a computer systemization connected to memory .

A computer systemization may comprise a clock central processing unit CPU s and or processor s these terms are used interchangeably throughout the disclosure unless noted to the contrary a memory e.g. a read only memory ROM a random access memory RAM etc. and or an interface bus and most frequently although not necessarily are all interconnected and or communicating through a system bus on one or more mother board s having conductive and or otherwise transportive circuit pathways through which instructions e.g. binary encoded signals may travel to effectuate communications operations storage etc. The computer systemization may be connected to a power source e.g. optionally the power source may be internal. Optionally a cryptographic processor and or transceivers e.g. ICs may be connected to the system bus. In another embodiment the cryptographic processor and or transceivers may be connected as either internal and or external peripheral devices via the interface bus I O. In turn the transceivers may be connected to antenna s thereby effectuating wireless transmission and reception of various communication and or sensor protocols for example the antenna s may connect to a Texas Instruments WiLink WL1283 transceiver chip e.g. providing 802.11n Bluetooth 3.0 FM global positioning system GPS thereby allowing ERM controller to determine its location Broadcom BCM4329FKUBG transceiver chip e.g. providing 802.11n Bluetooth 2.1 EDR FM etc. BCM28150 HSPA and BCM2076 Bluetooth 4.0 GPS etc. a Broadcom BCM47501UB8 receiver chip e.g. GPS an Infineon Technologies X Gold 618 PMB9800 e.g. providing 2G 3G HSDPA HSUPA communications Intel s XMM 7160 LTE DC HSPA Qualcom s CDMA 2000 Mobile Data Station Modem Snapdragon and or the like. The system clock may have a crystal oscillator and generates a base signal through the computer systemization s circuit pathways. The clock may be coupled to the system bus and various clock multipliers that will increase or decrease the base operating frequency for other components interconnected in the computer systemization. The clock and various components in a computer systemization drive signals embodying information throughout the system. Such transmission and reception of instructions embodying information throughout a computer systemization may be referred to as communications. These communicative instructions may further be transmitted received and the cause of return and or reply communications beyond the instant computer systemization to communications networks input devices other computer systemizations peripheral devices and or the like. It should be understood that in alternative embodiments any of the above components may be connected directly to one another connected to the CPU and or organized in numerous variations employed as exemplified by various computer systems.

The CPU comprises at least one high speed data processor adequate to execute program components for executing user and or system generated requests. Often the processors themselves will incorporate various specialized processing units such as but not limited to floating point units integer processing units integrated system bus controllers logic operating units memory management control units etc. and even specialized processing sub units like graphics processing units digital signal processing units and or the like. Additionally processors may include internal fast access addressable memory and be capable of mapping and addressing memory beyond the processor itself internal memory may include but is not limited to fast registers various levels of cache memory e.g. level 1 2 3 etc. RAM etc. The processor may access this memory through the use of a memory address space that is accessible via instruction address which the processor can construct and decode allowing it to access a circuit path to a specific memory address space having a memory state value. The CPU may be a microprocessor such as AMD s Athlon Duron and or Opteron ARM s classic e.g. ARM7 9 11 embedded Coretx M R application Cortex A embedded and secure processors IBM and or Motorola s DragonBall and PowerPC IBM s and Sony s Cell processor Intel s Atom Celeron Mobile Core 2 2 Duo i3 i5 i7 Itanium Pentium Xeon and or XScale and or the like processor s . The CPU interacts with memory through instruction passing through conductive and or transportive conduits e.g. printed electronic and or optic circuits to execute stored instructions i.e. program code . Such instruction passing facilitates communication within the ERM controller and beyond through various interfaces. Should processing requirements dictate a greater amount speed and or capacity distributed processors e.g. Distributed ERM mainframe multi core parallel and or super computer architectures may similarly be employed. Alternatively should deployment requirements dictate greater portability smaller mobile devices e.g. smartphones Personal Digital Assistants PDAs etc. may be employed.

Depending on the particular implementation features of the ERM may be achieved by implementing a microcontroller such as CAST s R8051XC2 microcontroller Intel s MCS i.e. 8051 microcontroller and or the like. Also to implement certain features of the ERM some feature implementations may rely on embedded components such as Application Specific Integrated Circuit ASIC Digital Signal Processing DSP Field Programmable Gate Array FPGA and or the like embedded technology. For example any of the ERM component collection distributed or otherwise and or features may be implemented via the microprocessor and or via embedded components e.g. via ASIC coprocessor DSP FPGA and or the like. Alternately some implementations of the ERM may be implemented with embedded components that are configured and used to achieve a variety of features or signal processing.

Depending on the particular implementation the embedded components may include software solutions hardware solutions and or some combination of both hardware software solutions. For example ERM features discussed herein may be achieved through implementing FPGAs which are a semiconductor devices containing programmable logic components called logic blocks and programmable interconnects such as the high performance FPGA Virtex series and or the low cost Spartan series manufactured by Xilinx. Logic blocks and interconnects can be programmed by the customer or designer after the FPGA is manufactured to implement any of the ERM features. A hierarchy of programmable interconnects allow logic blocks to be interconnected as needed by the ERM system designer administrator somewhat like a one chip programmable breadboard. An FPGA s logic blocks can be programmed to perform the operation of basic logic gates such as AND and XOR or more complex combinational operators such as decoders or simple mathematical operations. In most FPGAs the logic blocks also include memory elements which may be circuit flip flops or more complete blocks of memory. In some circumstances the ERM may be developed on regular FPGAs and then migrated into a fixed version that more resembles ASIC implementations. Alternate or coordinating implementations may migrate ERM controller features to a final ASIC instead of or in addition to FPGAs. Depending on the implementation all of the aforementioned embedded components and microprocessors may be considered the CPU and or processor for the ERM.

The power source may be of any standard form for powering small electronic circuit board devices such as the following power cells alkaline lithium hydride lithium ion lithium polymer nickel cadmium solar cells and or the like. Other types of AC or DC power sources may be used as well. In the case of solar cells in one embodiment the case provides an aperture through which the solar cell may capture photonic energy. The power cell is connected to at least one of the interconnected subsequent components of the ERM thereby providing an electric current to all the interconnected components. In one example the power source is connected to the system bus component . In an alternative embodiment an outside power source is provided through a connection across the I O interface. For example a USB and or IEEE 1394 connection carries both data and power across the connection and is therefore a suitable source of power.

Interface bus ses may accept connect and or communicate to a number of interface adapters frequently although not necessarily in the form of adapter cards such as but not limited to input output interfaces I O storage interfaces network interfaces and or the like. Optionally cryptographic processor interfaces similarly may be connected to the interface bus. The interface bus provides for the communications of interface adapters with one another as well as with other components of the computer systemization. Interface adapters are adapted for a compatible interface bus. Interface adapters may connect to the interface bus via expansion and or slot architecture. Various expansion and or slot architectures may be employed such as but not limited to Accelerated Graphics Port AGP Card Bus ExpressCard Extended Industry Standard Architecture E ISA Micro Channel Architecture MCA NuBus Peripheral Component Interconnect Extended PCI X PCI Express Personal Computer Memory Card International Association PCMCIA Thunderbolt and or the like.

Storage interfaces may accept communicate and or connect to a number of storage devices such as but not limited to storage devices removable disc devices and or the like. Storage interfaces may employ connection protocols such as but not limited to Ultra Serial Advanced Technology Attachment Packet Interface Ultra Serial ATA PI Enhanced Integrated Drive Electronics E IDE Institute of Electrical and Electronics Engineers IEEE 1394 Ethernet fiber channel Small Computer Systems Interface SCSI Thunderbolt Universal Serial Bus USB and or the like.

Network interfaces may accept communicate and or connect to a communications network . Through a communications network the ERM controller is accessible through remote clients e.g. computers with web browsers by users . Network interfaces may employ connection protocols such as but not limited to direct connect Ethernet thick thin twisted pair 10 100 1000 Base T and or the like Token Ring wireless connection such as IEEE 802.11a x and or the like. Should processing requirements dictate a greater amount speed and or capacity distributed network controllers e.g. Distributed ERM architectures may similarly be employed to pool load balance and or otherwise increase the communicative bandwidth required by the ERM controller. A communications network may be any one and or the combination of the following a direct interconnection the Internet a Local Area Network LAN a Metropolitan Area Network MAN an Operating Missions as Nodes on the Internet OMNI a secured custom connection a Wide Area Network WAN a wireless network e.g. employing protocols such as but not limited to a Wireless Application Protocol WAP I mode and or the like and or the like. A network interface may be regarded as a specialized form of an input output interface. Further multiple network interfaces may be used to engage with various communications network types . For example multiple network interfaces may be employed to allow for the communication over broadcast multicast and or unicast networks.

Input Output interfaces I O may accept communicate and or connect to user input devices peripheral devices cryptographic processor devices and or the like. I O may employ connection protocols such as but not limited to audio analog digital monaural RCA stereo and or the like data Apple Desktop Bus ADB Bluetooth IEEE 1394a b serial universal serial bus USB infrared joystick keyboard midi optical PC AT PS 2 parallel radio video interface Apple Desktop Connector ADC BNC coaxial component composite digital DisplayPort Digital Visual Interface DVI high definition multimedia interface HDMI RCA RF antennae S Video VGA and or the like wireless transceivers 802.11a b g n x Bluetooth cellular e.g. code division multiple access CDMA high speed packet access HSPA high speed downlink packet access HSDPA global system for mobile communications GSM long term evolution LTE WiMax etc. and or the like. One output device may be a video display which may take the form of a Cathode Ray Tube CRT Liquid Crystal Display LCD Light Emitting Diode LED Organic Light Emitting Diode OLED Plasma and or the like based monitor with an interface e.g. VGA DVI circuitry and cable that accepts signals from a video interface. The video interface composites information generated by a computer systemization and generates video signals based on the composited information in a video memory frame. Another output device is a television set which accepts signals from a video interface. Often the video interface provides the composited video information through a video connection interface that accepts a video display interface e.g. an RCA composite video connector accepting an RCA composite video cable a DVI connector accepting a DVI display cable HDMI etc. .

User input devices often are a type of peripheral device see below and may include card readers dongles finger print readers gloves graphics tablets joysticks keyboards microphones mouse mice remote controls retina readers touch screens e.g. capacitive resistive etc. trackballs trackpads sensors e.g. accelerometers ambient light GPS gyroscopes proximity etc. styluses and or the like.

Peripheral devices may be connected and or communicate to I O and or other facilities of the like such as network interfaces storage interfaces directly to the interface bus system bus the CPU and or the like. Peripheral devices may be external internal and or part of the ERM controller. Peripheral devices may include antenna audio devices e.g. line in line out microphone input speakers etc. cameras e.g. still video webcam etc. dongles e.g. for copy protection ensuring secure transactions with a digital signature and or the like external processors for added capabilities e.g. crypto devices force feedback devices e.g. vibrating motors near field communication NFC devices network interfaces printers radio frequency identifiers RFIDs scanners storage devices transceivers e.g. cellular GPS etc. video devices e.g. goggles monitors etc. video sources visors and or the like. Peripheral devices often include types of input devices e.g. microphones cameras etc. .

It should be noted that although user input devices and peripheral devices may be employed the ERM controller may be embodied as an embedded dedicated and or monitor less i.e. headless device wherein access would be provided over a network interface connection.

Cryptographic units such as but not limited to microcontrollers processors interfaces and or devices may be attached and or communicate with the ERM controller. A MC68HC16 microcontroller manufactured by Motorola Inc. may be used for and or within cryptographic units. The MC68HC16 microcontroller utilizes a 16 bit multiply and accumulate instruction in the 16 MHz configuration and requires less than one second to perform a 512 bit RSA private key operation. Cryptographic units support the authentication of communications from interacting agents as well as allowing for anonymous transactions. Cryptographic units may also be configured as part of the CPU. Equivalent microcontrollers and or processors may also be used. Other commercially available specialized cryptographic processors include the Broadcom s CryptoNetX and other Security Processors nCipher s nShield e.g. Solo Connect etc. SafeNet s Luna PCI e.g. 7100 series Semaphore Communications 40 MHz Roadrunner 184 sMIP s e.g. 208956 Sun s Cryptographic Accelerators e.g. Accelerator 6000 PCIe Board Accelerator 500 Daughtercard Via Nano Processor e.g. L2100 L2200 U2400 line which is capable of performing 500 MB s of cryptographic instructions VLSI Technology s 33 MHz 6868 and or the like.

Generally any mechanization and or embodiment allowing a processor to affect the storage and or retrieval of information is regarded as memory . However memory is a fungible technology and resource thus any number of memory embodiments may be employed in lieu of or in concert with one another. It is to be understood that the ERM controller and or a computer systemization may employ various forms of memory . For example a computer systemization may be configured wherein the operation of on chip CPU memory e.g. registers RAM ROM and any other storage devices are provided by a paper punch tape or paper punch card mechanism however such an embodiment would result in an extremely slow rate of operation. In one configuration memory may include ROM RAM and a storage device . A storage device may employ any number of computer storage devices systems. Storage devices may include a drum a fixed and or removable magnetic disk drive a magneto optical drive an optical drive i.e. Blueray CD ROM RAM Recordable R ReWritable RW DVD R RW HD DVD R RW etc. an array of devices e.g. Redundant Array of Independent Disks RAID solid state memory devices USB memory solid state drives SSD etc. other processor readable storage mediums and or other devices of the like. Thus a computer systemization generally requires and makes use of memory.

The memory may contain a collection of program and or database components and or data such as but not limited to operating system component s operating system information server component s information server user interface component s user interface Web browser component s Web browser database s mail server component s mail client component s cryptographic server component s cryptographic server the ERM component s and or the like i.e. collectively a component collection . These components may be stored and accessed from the storage devices and or from storage devices accessible through an interface bus. Although non conventional program components such as those in the component collection may be stored in a local storage device they may also be loaded and or stored in memory such as peripheral devices RAM remote storage facilities through a communications network ROM various forms of memory and or the like.

The operating system component is an executable program component facilitating the operation of the ERM controller. The operating system may facilitate access of I O network interfaces peripheral devices storage devices and or the like. The operating system may be a highly fault tolerant scalable and secure system such as Apple Macintosh OS X Server AT T Nan 9 Be OS Unix and Unix like system distributions such as AT T s UNIX Berkley Software Distribution BSD variations such as FreeBSD NetBSD OpenBSD and or the like Linux distributions such as Red Hat Ubuntu and or the like and or the like operating systems. However more limited and or less secure operating systems also may be employed such as Apple Macintosh OS IBM OS 2 Microsoft DOS Microsoft Windows 2000 2003 3.1 95 98 CE Millenium NT Vista XP Server Palm OS and or the like. In addition emobile operating systems such as Apple s iOS Google s Android Hewlett Packard s WebOS Microsofts Windows Mobile and or the like may be employed. Any of these operating systems may be embedded within the hardware of the NICK controller and or stored loaded into memory storage. An operating system may communicate to and or with other components in a component collection including itself and or the like. Most frequently the operating system communicates with other program components user interfaces and or the like. For example the operating system may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. The operating system once executed by the CPU may enable the interaction with communications networks data I O peripheral devices program components memory user input devices and or the like. The operating system may provide communications protocols that allow the ERM controller to communicate with other entities through a communications network . Various communication protocols may be used by the ERM controller as a subcarrier transport mechanism for interaction such as but not limited to multicast TCP IP UDP unicast and or the like.

An information server component is a stored program component that is executed by a CPU. The information server may be an Internet information server such as but not limited to Apache Software Foundation s Apache Microsoft s Internet Information Server and or the like. The information server may allow for the execution of program components through facilities such as Active Server Page ASP ActiveX ANSI Objective C C and or .NET Common Gateway Interface CGI scripts dynamic D hypertext markup language HTML FLASH Java JavaScript Practical Extraction Report Language PERL Hypertext Pre Processor PHP pipes Python wireless application protocol WAP WebObjects and or the like. The information server may support secure communications protocols such as but not limited to File Transfer Protocol FTP HyperText Transfer Protocol HTTP Secure Hypertext Transfer Protocol HTTPS Secure Socket Layer SSL messaging protocols e.g. America Online AOL Instant Messenger AIM Apple s iMessage Application Exchange APEX ICQ Internet Relay Chat IRC Microsoft Network MSN Messenger Service Presence and Instant Messaging Protocol PRIM Internet Engineering Task Force s IETF s Session Initiation Protocol SIP SIP for Instant Messaging and Presence Leveraging Extensions SIMPLE open XML based Extensible Messaging and Presence Protocol XMPP i.e. Jabber or Open Mobile Alliance s OMA s Instant Messaging and Presence Service IMPS Yahoo Instant Messenger Service and or the like. The information server provides results in the form of Web pages to Web browsers and allows for the manipulated generation of the Web pages through interaction with other program components. After a Domain Name System DNS resolution portion of an HTTP request is resolved to a particular information server the information server resolves requests for information at specified locations on the ERM controller based on the remainder of the HTTP request. For example a request such as http 123.124.125.126 myInformation.html might have the IP portion of the request 123.124.125.126 resolved by a DNS server to an information server at that IP address that information server might in turn further parse the http request for the myInformation.html portion of the request and resolve it to a location in memory containing the information myInformation.html. Additionally other information serving protocols may be employed across various ports e.g. FTP communications across port and or the like. An information server may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the information server communicates with the ERM database operating systems other program components user interfaces Web browsers and or the like.

Access to the ERM database may be achieved through a number of database bridge mechanisms such as through scripting languages as enumerated below e.g. CGI and through inter application communication channels as enumerated below e.g. CORBA WebObjects etc. . Any data requests through a Web browser are parsed through the bridge mechanism into appropriate grammars as required by the ERM. In one embodiment the information server would provide a Web form accessible by a Web browser. Entries made into supplied fields in the Web form are tagged as having been entered into the particular fields and parsed as such. The entered terms are then passed along with the field tags which act to instruct the parser to generate queries directed to appropriate tables and or fields. In one embodiment the parser may generate queries in standard SQL by instantiating a search string with the proper join select commands based on the tagged text entries wherein the resulting command is provided over the bridge mechanism to the ERM as a query. Upon generating query results from the query the results are passed over the bridge mechanism and may be parsed for formatting and generation of a new results Web page by the bridge mechanism. Such a new results Web page is then provided to the information server which may supply it to the requesting Web browser.

Also an information server may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

Computer interfaces in some respects are similar to automobile operation interfaces. Automobile operation interface elements such as steering wheels gearshifts and speedometers facilitate the access operation and display of automobile resources and status. Computer interaction interface elements such as check boxes cursors menus scrollers and windows collectively and commonly referred to as widgets similarly facilitate the access capabilities operation and display of data and computer hardware and operating system resources and status. Operation interfaces are commonly called user interfaces. Graphical user interfaces GUIs such as the Apple Macintosh Operating System s Aqua and iOS s Cocoa Touch IBM s OS 2 Google s Android Mobile UI Microsoft s Windows 2000 2003 3.1 95 98 CE Millenium 15 Mobile NT XP Vista 7 8 i.e. Aero Metro Unix s X Windows e.g. which may include additional Unix graphic interface libraries and layers such as K Desktop Environment KDE mythTV and GNU Network Object Model Environment GNOME web interface libraries e.g. ActiveX AJAX D HTML FLASH Java JavaScript etc. interface libraries such as but not limited to Dojo jQuery UI MooTools Prototype script.aculo.us SWFObject Yahoo User Interface any of which may be used and provide a baseline and means of accessing and displaying information graphically to users.

A user interface component is a stored program component that is executed by a CPU. The user interface may be a graphic user interface as provided by with and or atop operating systems and or operating environments such as already discussed. The user interface may allow for the display execution interaction manipulation and or operation of program components and or system facilities through textual and or graphical facilities. The user interface provides a facility through which users may affect interact and or operate a computer system. A user interface may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the user interface communicates with operating systems other program components and or the like. The user interface may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

A Web browser component is a stored program component that is executed by a CPU. The Web browser may be a hypertext viewing application such as Goofle s Mobile Chrome Microsoft Internet Explorer Netscape Navigator Apple s Mobile Safari embedded web browser objects such as through Apple s Cocoa Touch object class and or the like. Secure Web browsing may be supplied with 128 bit or greater encryption by way of HTTPS SSL and or the like. Web browsers allowing for the execution of program components through facilities such as ActiveX AJAX D HTML FLASH Java JavaScript web browser plug in APIs e.g. Chrome FireFox Internet Explorer Safari Plug in and or the like APIs and or the like. Web browsers and like information access tools may be integrated into PDAs cellular telephones smartphones and or other mobile devices. A Web browser may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the Web browser communicates with information servers operating systems integrated program components e.g. plug ins and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. Also in place of a Web browser and information server a combined application may be developed to perform similar operations of both. The combined application would similarly effect the obtaining and the provision of information to users user agents and or the like from the ERM equipped nodes. The combined application may be nugatory on systems employing standard Web browsers.

A mail server component is a stored program component that is executed by a CPU . The mail server may be an Internet mail server such as but not limited to Apple s Mail Server 3 dovect sendmail Microsoft Exchange and or the like. The mail server may allow for the execution of program components through facilities such as ASP ActiveX ANSI Objective C C and or .NET CGI scripts Java JavaScript PERL PHP pipes Python WebObjects and or the like. The mail server may support communications protocols such as but not limited to Internet message access protocol IMAP Messaging Application Programming Interface MAPI Microsoft Exchange post office protocol POP3 simple mail transfer protocol SMTP and or the like. The mail server can route forward and process incoming and outgoing mail messages that have been sent relayed and or otherwise traversing through and or to the ERM.

Access to the ERM mail may be achieved through a number of APIs offered by the individual Web server components and or the operating system.

Also a mail server may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses.

A mail client component is a stored program component that is executed by a CPU . The mail client may be a mail viewing application such as Apple Mobile Mail Microsoft Entourage Microsoft Outlook Microsoft Outlook Express Mozilla Thunderbird and or the like. Mail clients may support a number of transfer protocols such as IMAP Microsoft Exchange POP3 SMTP and or the like. A mail client may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the mail client communicates with mail servers operating systems other mail clients and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses. Generally the mail client provides a facility to compose and transmit electronic mail messages.

A cryptographic server component is a stored program component that is executed by a CPU cryptographic processor cryptographic processor interface cryptographic processor device and or the like. Cryptographic processor interfaces will allow for expedition of encryption and or decryption requests by the cryptographic component however the cryptographic component alternatively may run on a CPU. The cryptographic component allows for the encryption and or decryption of provided data. The cryptographic component allows for both symmetric and asymmetric e.g. Pretty Good Protection PGP encryption and or decryption. The cryptographic component may employ cryptographic techniques such as but not limited to digital certificates e.g. X.509 authentication framework digital signatures dual signatures enveloping password access protection public key management and or the like. The cryptographic component will facilitate numerous encryption and or decryption security protocols such as but not limited to checksum Data Encryption Standard DES Elliptical Curve Encryption ECC International Data Encryption Algorithm IDEA Message Digest 5 MD5 which is a one way hash operation passwords Rivest Cipher RC5 Rijndael RSA which is an Internet encryption and authentication system that uses an algorithm developed in 1977 by Ron Rivest Adi Shamir and Leonard Adleman Secure Hash Algorithm SHA Secure Socket Layer SSL Secure Hypertext Transfer Protocol HTTPS and or the like. Employing such encryption security protocols the ERM may encrypt all incoming and or outgoing communications and may serve as node within a virtual private network VPN with a wider communications network. The cryptographic component facilitates the process of security authorization whereby access to a resource is inhibited by a security protocol wherein the cryptographic component effects authorized access to the secured resource. In addition the cryptographic component may provide unique identifiers of content e.g. employing and MD5 hash to obtain a unique signature for an digital audio file. A cryptographic component may communicate to and or with other components in a component collection including itself and or facilities of the like. The cryptographic component supports encryption schemes allowing for the secure transmission of information across a communications network to enable the ERM component to engage in secure transactions if so desired. The cryptographic component facilitates the secure accessing of resources on the ERM and facilitates the access of secured resources on remote systems i.e. it may act as a client and or server of secured resources. Most frequently the cryptographic component communicates with information servers operating systems other program components and or the like. The cryptographic component may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The ERM database component may be embodied in a database and its stored data. The database is a stored program component which is executed by the CPU the stored program component portion configuring the CPU to process the stored data. The database may be any of a number of fault tolerant relational scalable secure databases such as DB2 MySQL Oracle Sybase and or the like. Relational databases are an extension of a flat file. Relational databases consist of a series of related tables. The tables are interconnected via a key field. Use of the key field allows the combination of the tables by indexing against the key field i.e. the key fields act as dimensional pivot points for combining information from various tables. Relationships generally identify links maintained between tables by matching primary keys. Primary keys represent fields that uniquely identify the rows of a table in a relational database. More precisely they uniquely identify rows of a table on the one side of a one to many relationship.

Alternatively the ERM database may be implemented using various standard data structures such as an array hash linked list struct structured text file e.g. XML table and or the like. Such data structures may be stored in memory and or in structured files. In another alternative an object oriented database may be used such as Frontier ObjectStore Poet Zope and or the like. Object databases can include a number of object collections that are grouped and or linked together by common attributes they may be related to other object collections by some common attributes. Object oriented databases perform similarly to relational databases with the exception that objects are not just pieces of data but may have other types of capabilities encapsulated within a given object. If the ERM database is implemented as a data structure the use of the ERM database may be integrated into another component such as the ERM component . Also the database may be implemented as a mix of data structures objects and relational structures. Databases may be consolidated and or distributed in countless variations through standard data processing techniques. Portions of databases e.g. tables may be exported and or imported and thus decentralized and or integrated.

In one embodiment the database component includes several tables . A Users table may include fields such as but not limited to user id ssn dob first name last name age state address firstline address secondline zipcode devices list contact info contact type alt contact info alt contact type email address password enrollment status report ID report preference preference and or the like. The Users table may support and or track multiple entity accounts on a ERM. A Clients table may include fields such as but not limited to client ID user ID client name client IP client GPS client MAC client serial client ECID client UDID client browser client type client model client version client OS client apps list client securekey and or the like. A Receipt table may include fields such as but not limited to receipt ID user receipt ID receipt path merchant transaction ID processor transaction ID transaction date merchant ID purchase category payment card receipt amount return eligibility expiry date return eligibility status date and or the like. A Transaction table may include fields such as but not limited to merchant transaction ID TPS transaction ID transaction date transaction amount product ID receipt ID and or the like. An Issuer table may include fields such as but not limited to issuer ID issuer name issuer address user ID username password and or the like. A Merchant table may include fields such as but not limited to merchant ID merchant name merchant address merchant category code merchant receipt delivery method and or the like. A Report table may include fields such as but not limited to report ID report format report type report criteria and or the like. A Product table may include fields such as but not limited to product ID product SKU product name product mode price and or the like. In one embodiment the ERM database may interact with other database systems. For example employing a distributed database system queries and data access by search ERM component may treat the combination of the ERM database an integrated data security layer database as a single database entity.

In one embodiment user programs may contain various user interface primitives which may serve to update the ERM. Also various accounts may require custom database tables depending upon the environments and the types of clients the ERM may need to serve. It should be noted that any unique fields may be designated as a key field throughout. In an alternative embodiment these tables have been decentralized into their own databases and their respective database controllers i.e. individual database controllers for each of the above tables . Employing standard data processing techniques one may further distribute the databases over several computer systemizations and or storage devices. Similarly configurations of the decentralized database controllers may be varied by consolidating and or distributing the various database components . The ERM may be configured to keep track of various settings inputs and parameters via database controllers.

The ERM database may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the ERM database communicates with the ERM component other program components and or the like. The database may contain retain and provide information regarding other nodes and data.

The ERM component is a stored program component that is executed by a CPU. In one embodiment the ERM component incorporates any and or all combinations of the aspects of the ERM discussed in the previous figures. As such the ERM affects accessing obtaining and the provision of information services transactions and or the like across various communications networks. The features and embodiments of the ERM discussed herein increase network efficiency by reducing data transfer requirements the use of more efficient data structures and mechanisms for their transfer and storage. As a consequence more data may be transferred in less time and latencies with regard to transactions are also reduced. In many cases such reduction in storage transfer time bandwidth requirements latencies etc. will reduce the capacity and structural infrastructure requirements to support the ERM s features and facilities and in many cases reduce the costs energy consumption requirements and extend the life of ERM s underlying infrastructure this has the added benefit of making the ERM more reliable. Similarly many of the features and mechanisms are designed to be easier for users to use and access thereby broadening the audience that may enjoy employ and exploit the feature sets of the ERM such ease of use also helps to increase the reliability of the ERM. In addition the feature sets include heightened security as noted via the Cryptographic components and throughout making access to the features and data more reliable and secure.

The ERM component may transform transaction initiation requests and receipt requests via ERM components into receipt formatting organization storage and linkage with transactions and or like use of the ERM. In one embodiment the ERM component takes inputs e.g. payment input add receipt to RM application input account login detail input select view receipt input and or the like etc. and transforms the inputs via various components e.g. RM component URS component ARS component RC component RQ component and or the like into outputs e.g. purchase request transaction authorization request message transaction authorization response message receipt receipt sync request receipt sync confirmation message receipt identifier and transaction details message user authentication request message user authentication response message receipt request message receipt response message receipt query receipt receipt data and or the like .

The ERM component enabling access of information between nodes may be developed by employing standard development tools and languages such as but not limited to Apache components Assembly ActiveX binary executables ANSI Objective C C and or .NET database adapters CGI scripts Java JavaScript mapping tools procedural and object oriented development tools PERL PHP Python shell scripts SQL commands web application server extensions web development environments and libraries e.g. Microsoft s ActiveX Adobe AIR FLEX FLASH AJAX D HTML Dojo Java JavaScript jQuery UI MooTools Prototype script.aculo.us Simple Object Access Protocol SOAP SWFObject Yahoo User Interface and or the like WebObjects and or the like. In one embodiment the ERM server employs a cryptographic server to encrypt and decrypt communications. The ERM component may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the ERM component communicates with the ERM database operating systems other program components and or the like. The ERM may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The structure and or operation of any of the ERM node controller components may be combined consolidated and or distributed in any number of ways to facilitate development and or deployment. Similarly the component collection may be combined in any number of ways to facilitate deployment and or development. To accomplish this one may integrate the components into a common code base or in a facility that can dynamically load the components on demand in an integrated fashion.

The component collection may be consolidated and or distributed in countless variations through standard data processing and or development techniques. Multiple instances of any one of the program components in the program component collection may be instantiated on a single node and or across numerous nodes to improve performance through load balancing and or data processing techniques. Furthermore single instances may also be distributed across multiple controllers and or storage devices e.g. databases. All program component instances and controllers working in concert may do so through standard data processing communication techniques.

The configuration of the ERM controller will depend on the context of system deployment. Factors such as but not limited to the budget capacity location and or use of the underlying hardware resources may affect deployment requirements and configuration. Regardless of if the configuration results in more consolidated and or integrated program components results in a more distributed series of program components and or results in some combination between a consolidated and distributed configuration data may be communicated obtained and or provided. Instances of components consolidated into a common code base from the program component collection may communicate obtain and or provide data. This may be accomplished through intra application data processing communication techniques such as but not limited to data referencing e.g. pointers internal messaging object instance variable communication shared memory space variable passing and or the like.

If component collection components are discrete separate and or external to one another then communicating obtaining and or providing data with and or to other components may be accomplished through inter application data processing communication techniques such as but not limited to Application Program Interfaces API information passage distributed Component Object Model D COM Distributed Object Linking and Embedding D OLE and or the like Common Object Request Broker Architecture CORBA Jini local and remote application program interfaces JavaScript Object Notation JSON Remote Method Invocation RMI SOAP process pipes shared files and or the like. Messages sent between discrete component components for inter application communication or within memory spaces of a singular component for intra application communication may be facilitated through the creation and parsing of a grammar. A grammar may be developed by using development tools such as lex yacc XML and or the like which allow for grammar generation and parsing capabilities which in turn may form the basis of communication messages within and between components.

where Value1 is discerned as being a parameter because http is part of the grammar syntax and what follows is considered part of the post value. Similarly with such a grammar a variable Value1 may be inserted into an http post command and then sent. The grammar syntax itself may be presented as structured data that is interpreted and or otherwise used to generate the parsing mechanism e.g. a syntax description text file as processed by lex yacc etc. . Also once the parsing mechanism is generated and or instantiated it itself may process and or parse structured data such as but not limited to character e.g. tab delineated text HTML structured text streams XML and or the like structured data. In another embodiment inter application data processing protocols themselves may have integrated and or readily available parsers e.g. JSON SOAP and or like parsers that may be employed to parse e.g. communications data. Further the parsing grammar may be used beyond message parsing but may also be used to parse databases data collections data stores structured data and or the like. Again the desired configuration will depend upon the context environment and requirements of system deployment.

For example in some implementations the ERM controller may be executing a PHP script implementing a Secure Sockets Layer SSL socket server via the information server which listens to incoming communications on a server port to which a client may send data e.g. data encoded in JSON format. Upon identifying an incoming communication the PHP script may read the incoming message from the client device parse the received JSON encoded text data to extract information from the JSON encoded text data into PHP script variables and store the data e.g. client identifying information etc. and or extracted information in a relational database accessible using the Structured Query Language SQL . An exemplary listing written substantially in the form of PHP SQL commands to accept JSON encoded input data from a client device via a SSL connection parse the data to extract variables and store the data to a database is provided below 

Also the following resources may be used to provide example embodiments regarding SOAP parser implementation 

In order to address various issues and advance the art the entirety of this application for ELECTRONIC RECEIPT MANAGER APPARATUSES METHODS AND SYSTEMS including the Cover Page Title Headings Field Background Summary Brief Description of the Drawings Detailed Description Claims Abstract Figures Appendices and or otherwise shows by way of illustration various example embodiments in which the claimed innovations may be practiced. The advantages and features of the application are of a representative sample of embodiments only and are not exhaustive and or exclusive. They are presented only to assist in understanding and teach the claimed principles. It should be understood that they are not representative of all claimed innovations. As such certain aspects of the disclosure have not been discussed herein. That alternate embodiments may not have been presented for a specific portion of the innovations or that further undescribed alternate embodiments may be available for a portion is not to be considered a disclaimer of those alternate embodiments. It will be appreciated that many of those undescribed embodiments incorporate the same principles of the innovations and others are equivalent. Thus it is to be understood that other embodiments may be utilized and functional logical operational organizational structural and or topological modifications may be made without departing from the scope and or spirit of the disclosure. As such all examples and or embodiments are deemed to be non limiting throughout this disclosure. Also no inference should be drawn regarding those embodiments discussed herein relative to those not discussed herein other than it is as such for purposes of reducing space and repetition. For instance it is to be understood that the logical and or topological structure of any combination of any data flow sequence s program components a component collection other components and or any present feature sets as described in the figures and or throughout are not limited to a fixed operating order and or arrangement but rather any disclosed order is exemplary and all equivalents regardless of order are contemplated by the disclosure. Furthermore it is to be understood that such features are not limited to serial execution but rather any number of threads processes processors services servers and or the like that may execute asynchronously concurrently in parallel simultaneously synchronously and or the like are also contemplated by the disclosure. As such some of these features may be mutually contradictory in that they cannot be simultaneously present in a single embodiment. Similarly some features are applicable to one aspect of the innovations and inapplicable to others. In addition the disclosure includes other innovations not presently claimed. Applicant reserves all rights in those presently unclaimed innovations including the right to claim such innovations file additional applications continuations continuations in part divisions and or the like thereof. As such it should be understood that advantages embodiments examples functional features logical operational organizational structural topological and or other aspects of the disclosure are not to be considered limitations on the disclosure as defined by the claims or limitations on equivalents to the claims. It is to be understood that depending on the particular needs and or characteristics of a ERM individual and or enterprise user database configuration and or relational model data type data transmission and or network framework syntax structure and or the like various embodiments of the ERM may be implemented that allow a great deal of flexibility and customization. For example aspects of the ERM may be adapted for finance management. While various embodiments and discussions of the ERM have been directed to managing organizing and viewing receipts however it is to be understood that the embodiments described herein may be readily configured and or customized for a wide variety of other applications and or implementations.

