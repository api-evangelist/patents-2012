---

title: Contextual help article provider
abstract: Techniques are described for displaying help articles, for a web page, that are related to the context of the web page. A help article provider has access to a database of help articles, each of which are associated with target-context data that may include content identifiers for the help article and/or user profile attributes for users that the help article targets. The help article provider identifies content identifiers for a viewed web page based on one or more of: metadata and a URL for the web page. The help article provider searches the help article database using the identified content identifiers. The help article provider may filter the help articles based on an authenticated user's attributes. An ordered list of the identified help articles is displayed, with the most relevant or important help articles displayed at or near the top of the list.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08990190&OS=08990190&RS=08990190
owner: Apollo Education Group, Inc.
number: 08990190
owner_city: Phonenix
owner_country: US
publication_date: 20121116
---
The present invention relates to making help articles available to users of web pages and more specifically to identifying and displaying help articles that are related to the context of the currently viewed web page.

Many times a provider of web page content will also provide additional resources to help a user to understand aspects of the web content. For example a help icon may be visually located near an aspect of the web content and a user may click on or roll over the help icon to access help text that gives details about the web content. Such embedded help text may be displayed in a display element that is part of the web page and or may overlay the web page content. However help text that is embedded in such a manner is generally hard coded into the web page such that the content provider must edit the web page in order to change the help text. Updating embedded help text can be time consuming and expensive.

At times a content provider includes a help link or help icon on a web page activation of which causes a help resource user interface to be displayed in a new window e.g. in a new browser window showing a web page that includes information for help resources . The new window is distinct from the window that is currently displaying the web page for which the user is seeking help. Generally such a help resource user interface organizes the help resources by topic and the user can browse the help resource topics to identify a help resource that addresses the user s question. Further such a help resource user interface may include a search mechanism by which the user causes a search for a particular term to be run over the help resources to identify help resources related to the term. However this kind of presentation of help resources takes the user out of the context of the currently viewed web page and it may be cumbersome for the user to effectively find useful help articles.

It would be beneficial to provide a more effective system for allowing users to access help resources where the system does not take the user out of the context of the currently viewed web page and that automatically identifies help resources that are associated with the context of the currently viewed web page.

The approaches described in this section are approaches that could be pursued but not necessarily approaches that have been previously conceived or pursued. Therefore unless otherwise indicated it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.

In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however that the present invention may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.

Techniques are described hereafter for displaying help articles for a currently viewed web page that are related to the context of the web page. The context of a web page may include for example information related to the content of the web page details about the user that is viewing the web page etc.

According to one embodiment a help article provider service has access to a database of help articles each of which is associated with target context data indicating an appropriate context for the help article. Target context data for a help article may include for example one or more web page content identifiers that tie the help article to web pages that are associated with the same content identifiers. Thus the help article provider service may identify appropriate help articles for the context of a particular web page by comparing the web page s associated content identifiers with the target context data of the help articles.

Further target context data for a help article may include user profile attributes for users that the help article targets e.g. a spoken language used in the help article that maps to a preferred language in a user s profile a type of the help article that maps to a preferred medium for help articles in a user s profile a user role toward which the help article is directed that maps to a user role in a user s profile etc. .

According to one embodiment a help client is executed on a user s computer. The help client identifies help metadata values if any for a web page being displayed to the user and submits the metadata values along with the URL for the web page to the help article provider service. The help article provider service identifies content identifiers for the currently viewed web page based on the metadata values and the URL. Specifically the metadata values may contain content identifiers or the help article provider service may identify content identifiers in mapping data that maps the metadata values and or at least a portion of the URL of the web page to the content identifiers.

The help article provider service performs a search on the help article database by comparing the content identifiers for the currently viewed web page to the target context data of the help articles. The results of the search are a set of help articles that are associated with the content of the currently viewed web page.

According to one embodiment the help article provider service further filters the help articles for the currently viewed web page based on attributes of the user for whom the help articles are being searched the target user . Those attributes may be obtained for example from a user profile.

Such filtering excludes from the set of help articles that will be displayed at the currently viewed web page help articles that are not for users with the user profile attributes of the target user. For example if the target user s profile indicates that the user s preferred language is English then help articles that are labeled as in Spanish are excluded from the set of help articles associated with the content of the currently viewed web page that will be displayed to the target user. In one embodiment the help client displays an ordered list of the identified help articles with the most relevant or important help articles displayed at or near the top of the list.

The help client can be associated with any number of user interfaces within the embodiments of the invention since the presentation layer is not tied to the implementation of the help article service provider. Thus the user interface for the help client may display identified help articles at a centralized location on the currently viewed web page. Alternatively there may be multiple locations on the currently viewed web page at which one or more of the help articles are displayed. Also because of the decoupling of the presentation layer and the help article service provider the help article service provider may be retrofitted to a web site that is already complex and well established with little or no modification to at least most of the web pages in the website.

Techniques are described hereafter for displaying help articles for a currently viewed web page that are related to the context of the web page. As explained above a help client that is installed on the client device may assist in the display of help articles for a currently viewed web page that are related to the context of the web page. The help article service provider which identifies the help articles for the currently viewed web page may reside on a server device that is communicatively connected to the client device over a network such as the Internet.

Within embodiments a help article can be a video text an image an audio file a web page such as an HTML or XML file or a link to a web page a link to a pop out that allows the user to browse search all help articles in a help article database etc. To illustrate a help article may be an HTML page within the website for the currently viewed web page or may be a link to a web page outside of the website e.g. to a FAQ page associated with a website other than the website for the currently viewed web page for a mail server that is used by the currently viewed web page.

Client device may be implemented by any type of computing device that is communicatively connected to network . Example implementations of client device include without limitation workstations personal computers laptop computers personal digital assistants PDAs tablet computers cellular telephony devices such as smart phones and any other type of computing device.

In network arrangement client device is configured with a help client and a browser that displays web page . Help client may be implemented in any number of ways including as a plug in to browser as an application running on web page etc. Browser is configured to interpret and display web pages received over network such as Hyper Text Markup Language HTML pages and eXtensible Markup Language XML pages etc. Client device may be configured with other mechanisms processes and functionalities depending upon a particular implementation. Further client device is communicatively coupled to a display device not shown in for displaying graphical user interfaces e.g. web page . Such a display device may be implemented by any type of device capable of displaying a graphical user interface. Example implementations of a display device include a monitor a screen a touch screen a projector a light display a display of a tablet computer a display of a telephony device a television etc.

Network may be implemented with any type of medium and or mechanism that facilitates the exchange of information between client device and server device . Furthermore network may use any type of communications protocol and may be secured or unsecured depending upon the requirements of a particular embodiment.

Server device may be implemented by any type of computing device that is capable of communicating with client device over network . In network arrangement server device is configured with a content service a user profile service and a help article provider service HAPS which includes a query service and a mapping service . One or more of services may be part of a cloud computing service. Any of services may receive and respond to Application Programming Interface API calls Simple Object Access Protocol SOAP messages requests via HyperText Transfer Protocol HTTP HyperText Transfer Protocol Secure HTTPS Simple Mail Transfer Protocol SMTP or any other kind of communication e.g. from help client or from one of the other services . Further any of services may send one or more of the following over network to help client or to one of the other services information via HTTP HTTPS SMTP etc. XML data SOAP messages API calls and other communications according to embodiments. Services may be implemented by one or more logical modules and are described in further detail below. Server device may be configured with other mechanisms processes and functionalities depending upon a particular implementation.

Server device is communicatively coupled to help article database . Help article database may reside in any type of storage including volatile and non volatile storage including random access memory RAM one or more hard or floppy disks or main memory. The storage on which help article database resides may be external or internal to server device . In one embodiment help article database stores information for help articles used by HAPS .

According to embodiments a graphical user interface GUI for help client displayed in web page gives a user access to information for help articles identified by HAPS for web page as described in further detail below. For example depicts a GUI that includes help icon . GUI may be displayed on web page or concurrently with web page in a web page framework for the website associated with web page .

Many times a particular web page is part of a set of related web pages known as a website. The web pages of a website may be similarly styled or may include similar visual elements in order to visually communicate that the pages are related. At times a website will present web pages of the website within a common GUI framework. A help icon such as help icon or other GUIs for help client may be placed on the web pages of a website or on the common framework for the web pages of the website. Thus users may access help articles that are related to the context of each of the web pages of the website.

When help icon is activated help client transitions GUI to GUI of within web page . According to an embodiment GUI does not obscure other content in web page . GUI of displays a number of help articles in a list that are identified by HAPS as related to the context of web page . In an embodiment a maximum number of help articles that may be displayed in GUI is set by an administrator or is set by a user in the user s profile.

In the depiction of GUI also includes other information that may be helpful to the user. For example activation of a more help topics link may cause help client to display a different set of help topics in the list . The different set of help topics may be help topics not originally displayed in list that were returned by HAPS as related to the context of web page . Also activation of more help topics link may cause HAPS to search for additional help articles in help article database e.g. using slightly different terms in the query. Furthermore as described below activation of more help topics link may cause help client to display more information for the help articles that have been identified by HAPS as related to the context of web page including all help articles that were identified by HAPS and not just a certain number of the identified help articles.

An example of web page is depicted in in which GUI displays a list of help articles that are related to the context of web page including web content of web page . The web content of a particular web page may be composed of multiple types of content data. For example web content of includes HTML data and a search application which is not interpreted in the same way as HTML data . Search application may run in a virtual machine such as the Java Virtual Machine or may run via an interpreter such as a JavaScript interpreter etc. In the example of content displayed at search application may change without changing the URL for web page .

The user interfaces described above for embodiments are illustrative and do not limit the user interfaces that may be used in conjunction with the techniques described herein.

HAPS performs a search for help articles in help article database that are related to the context of web page . According to an embodiment browser receives a Uniform Resource Locator URL for web page and requests the data for displaying web page from content service . Once web page is rendered in browser from the data retrieved from content service help client requests that HAPS return information for help articles that are related to the context of web page .

Any one of a variety of events may trigger help client to send the request for help articles. For example the request may be sent automatically in response to the request or loading of web page . Alternatively the request may be sent in response to user input such as selecting a help control that is presented to the user. The techniques described herein are not limited to any particular triggering event for the request of help articles.

In response to the help article request HAPS causes query service to formulate a query over help article database based on one or more of a the URL for web page b metadata for web page and c attributes of an authenticated user s profile. Query service may construct the query using any combination of URL metadata and user profile attributes within embodiments.

HAPS runs the formulated query over help article database . As mentioned above running the query may involve comparing context attributes to target context data associated with the help articles. HAPS then returns to help client information for the help articles in the query results. Help client causes the returned information for the help articles to be made available to the user that is viewing web page e.g. in GUI or GUI displayed in web page as in .

For example mapping service maintains mapping data that defines mappings between portions of URLs and keywords. The mapping data may be a configuration file that mapping service maintains at server device or at a device accessible to server device via network . Also the mapping data may be stored in a database such as a SQL based relational database. To illustrate mapping data depicts example mapping data that includes mappings . Mappings map content identifiers in column to URLs in column . The content identifiers may be used as the keywords referred to in step .

The content or subject matter of web pages is identified using the content identifiers in column . For example mapping maps https portal.qaols.phoenix.edu to the content identifier LN1 . The content identifier LN1 may in turn be included as part of the target context data of particular help articles in help article database . Thus any help article whose target context data includes LN1 is considered to be related to the subject matter of web pages that match the URL of mapping as described in further detail below.

Referring again to at step occurrence of an event is detected while at least a portion of the particular web page is being displayed wherein the event indicates that information about help articles should be displayed. For example help client detects that a user activates help icon in web page as depicted in to transition GUI displayed in web page to GUI . This event requires that information about help articles that are related to the context of web page be displayed at help articles list .

As a further example help client detects that web page has been reloaded or that one of the objects of web page has changed. Help client may detect such an event by subscribing to events thrown by the objects of web page . According to embodiments other events not described herein may indicate that information for help articles should be displayed at web page .

When the event of step is detected control passes to step . At step it is determined based on the particular mapping that at least a portion of the locator string for the particular web page is mapped to the keyword. For example help client sends to HAPS at least the URL for web page . HAPS causes mapping service to identify keywords or content identifiers that are mapped to at least a portion of the received URL in mapping data e.g. mapping data .

According to one embodiment mapping service uses the following rules to identify keywords that match at least a portion of a URL 

Mapping service returns all content identifiers column in mapping data that match at least a portion of the submitted URL according to one or more of the rules listed above. For purposes of explanation mapping service is described herein as applying all of the rules listed above. However embodiments may apply any subset of the above rules or may employ entirely different rules.

To illustrate the functioning of mapping service depicts mapping examples which show URLs in column that mapping service has mapped to content identifiers in column based on mapping data of . Mapping examples of are described in further detail below.

In mapping example mapping service receives the following URL for web page https portal.qaols.phoenix.edu . Within mapping data only the URL for mapping matches the received URL for web page as an exact match . Thus mapping service returns LN1 as a keyword for the submitted URL.

In mapping example mapping service receives the following URL for web page https portal.qaols.phoenix.edu name Bob . Within mapping data the URL for mapping matches the base URL of the received URL for web page . Thus mapping service returns LN1 as a keyword for the submitted URL. If the captured URL contains extra parameters which have not been specified in a URL of mapping data then the extra parameters will be ignored and mapping service will still consider it to be a match. The URL for mapping does not match the received URL because the received URL does not contain the query components that the URL for mapping contains.

In mapping example mapping service receives the following URL for web page https portal.qaols.phoenix.edu home.html . Within mapping data the URL for mappings and match the received URL for web page . The URL for mapping is an exact match and the URL for mapping is a match of the base URL. Mapping service does not consider the URL of mapping to be a match since the captured URL did not contain the required parameters. Thus mapping service returns LN2 and LN1 as keywords for the submitted URL.

In mapping example mapping service receives the following URL for web page https portal.qaols.phoenix.edu home2.html . Within mapping data the URL for mapping matches the base URL of the received URL for web page . Thus mapping service returns LN1 as a keyword for the submitted URL.

In mapping example mapping service receives the following URL for web page https portal.qaols.phoenix.edu home.html name Bob place Wonderland . Within mapping data the URL for mappings and match the received URL for web page since the URLs for mappings and each match a base URL of the received URL. Mapping service does not consider the URL of mapping to be a match since the captured URL did not contain the required parameters. Although both the required parameters keys are present in the URL for web page i.e. name and place but the value of the name parameter i.e. Bob does not match the required value i.e. Alice in mapping . Thus mapping service returns LN2 and LN1 as keywords for the submitted URL.

In mapping example mapping service receives the following URL for web page https portal.qaols.phoenix.edu home.html name Alice place Wonderland . Within mapping data the URL for mapping matches the base URL of the received URL for web page and the URLs for mappings and exactly match. Thus mapping service returns LN5 LN2 and LN1 as the keywords for the submitted URL.

In mapping example mapping service receives the following URL for web page https portal.qaols.phoenix.edu home.html name Alice place Wonderland type Book . Within mapping data the URL for mapping matches the base URL of the received URL for web page and the URLs for mappings and exactly match. The addition of type Book to the query terms does not inhibit a match with mapping . Thus mapping service returns LN5 LN2 and LN1 as the keywords for the submitted URL.

In mapping example mapping service receives the following URL for web page https portal.qaols.phoenix.edu 357 xbjgsdfashbvjf program . Within mapping data the URL for mapping matches the base URL of the received URL for web page and the URL for mapping based on the wildcards principle. Thus mapping service returns LN3 and LN1 as the keywords for the submitted URL.

In mapping example mapping service receives the following URL for web page https portal.qaols.phoenix.edu 357 program . Within mapping data the URL for mapping matches the base URL of the received URL for web page but does not match the URL for mapping . Thus mapping service returns LN1 as the keyword for the submitted URL.

In mapping example mapping service receives the following URL for web page https somedomain.qaols.phoenix.edu home.html . Within mapping data none of the URLs match the received URL. Thus mapping service returns an empty set of keywords for the received URL.

In an embodiment the set of content identifiers identified by mapping service are ordered based on the specificity of the mapping that produced the content identifiers. For example results may be ordered by how exact a match between a submitted URL and a mapped URL from most exact to least exact.

Wildcards in the URLs of mapping data can allow administrators to map unique content identifiers to very specific web pages. In turn the administrators can assign particular help articles to the content identifiers that are targeted for the specific web pages. For example in the context of a university website school administrators can use wildcards in mapping data to target a help article to a particular course web page or to a particular section of a particular course. URLs for such course web pages may have dynamic components which are not the same for every user e.g. user identifiers information based on the current date or time etc. Including all possible iterations of URLs that have dynamic components in mapping data may be tedious and expensive. An administrator may create a mapping between a content identifier and all iterations of a particular URL that has a dynamic component by replacing the dynamic component with a wildcard symbol. Thus the administrator need not include every possible value of the dynamic component of the URL in the mapping data.

At step a query that is based at least in part on the keyword is constructed. For example query service constructs a query based on the content identifiers returned from mapping service . To illustrate if mapping service returns the content identifier LN1 based on the URL for web page then query service constructs a query to select help articles from help article database that are associated with the content identifier LN1 . Target context data for a particular help article that is stored at help article database may include many types of information. For example in one embodiment the target context data for help articles includes one or more of 

As another example of query construction if mapping service returns the content identifiers LN1 and LN2 based on the URL for web page then query service constructs a query to select help articles from help article database that are associated with either the content identifier LN1 or the content identifier LN2 .

At step the query is executed against a database of help articles. For example HAPS executes the query constructed by query service against help article database .

At step the results of the query are received. For example HAPS receives the results of the query that was executed against help article database . The query results include information for one or more help articles that satisfy the terms of the constructed query.

According to an embodiment if no help articles are returned from executing the query HAPS identifies a set of default help articles to display on web page . In this embodiment HAPS may maintain a list of default help articles or HAPS may run a query against help article database that is configured to identify help articles in the database that are labeled with a default content identifier etc. According to another embodiment HAPS runs a query against help article database that is configured to identify help articles in the database that are the most viewed help articles or that are the highest rated help articles based on statistics and user rating information that is maintained for the help articles in help article database . The help articles identified by such a query are used as the default help articles.

At step information for one or more help articles indicated in the query results is displayed to a user. For example information for the help articles identified by HAPS e.g. titles of the help articles are displayed in GUI or GUI on web page . As previously indicated the users may select a particular help article to view the help article s content e.g. in view area of GUI .

Help client may cause only a certain number of the list of help articles that HAPS has identified for web page to be displayed at web page e.g. if the current GUI for displaying the list is GUI which has limited space for help article list . Help client may cause the entire list of help articles that HAPS has identified for web page to be displayed at web page e.g. if the current GUI for displaying the list is GUI which may be configured with a scroll bar to accommodate information for a large number of help articles.

HAPS may cause query service to construct a query based at least in part on metadata for web page . Specifically web page may include metadata tags help metadata tags that store information for HAPS by which HAPS may identify help articles that are related to the context of web page . Help metadata tags may be associated with web page in general or may be associated with particular portions of web page such as an application running on web page . Help client may identify help metadata tags based on the name of the metadata tag e.g. metatag or logical name or help article info etc.

To illustrate metadata tags that are associated with just a portion of a web page search application that is depicted in web page in may have help metadata tags associated therewith which help metadata tags are separate from any help metadata tags that are associated generally with web page . The help metadata tags associated with search application contain information about the context for search application . Thus by using information stored at the help metadata tags for search application HAPS can provide help articles that are related to the content context of search application the content for which may change independently from the URL of the web page.

In other words the displayed content of search application may change without the URL of web page changing. Thus content identifiers obtained based exclusively on the URL are unlikely to reflect the context of search application at the time help articles are requested. Thus instead of or in addition to obtaining content identifiers based on the URL the metadata tags associated with the search application may be used to identify help articles.

To illustrate an example of the content of search application changing without the URL of web page changing a user types a search query term into a field of search application of and causes search application to run a search query over a database of documents. Search application presents a search results GUI that is different from the GUI for search application that is depicted in which change does not also change the URL for web page .

This search results GUI for search application has different features than the GUI for search application that is depicted in . Thus help articles that are relevant to the GUI depicted in for search application may not be relevant to a search results GUI for search application . As such prior to displaying the search results GUI search application may be associated with a first help metadata tag value that is related to the content of search application when displaying the GUI depicted in . Also subsequent to displaying the search results GUI search application may be associated with a second help metadata tag value that is related to the content of the search results GUI of search application .

According to one embodiment help metadata tags store content identifiers that can be directly used in queries constructed by query service . The content identifiers stored in help metadata tags for web page and or in help metadata tags for applications displayed in web page are analogous to and can be used in combination with the content identifiers that mapping service identifies for URLs submitted to mapping service .

According to another embodiment help metadata tags for web page and or help metadata tags for applications displayed in web page store values that are mapped to content identifiers in mapping data accessible by mapping service . In this embodiment values that are extracted from help metadata tags are submitted to mapping service to determine whether the help metadata tag values are mapped to any content identifiers in the mapping data. Query service uses the content identifiers returned by mapping service to construct queries over help article database .

Additionally HAPS may use attribute information from a user profile for a user that has authenticated with the website for web page at client device the authenticated user to determine what help articles to display at web page .

A user may log into the website associated with web page using authentication information that identifies a user profile for the user. The user s profile includes user attribute information which may include one or more of a role a gender spoken and or written language preferences a preferred medium for help articles e.g. text help articles only etc. a course of study one or more classes in which the user is enrolled a group of users that the user is associated with a version of software that the user employs e.g. a Teacher s Assistant section of a particular course that the user belongs to etc.

HAPS obtains user profile data for an authenticated user from user profile service which has access to all user profiles registered with the website for web page . Thus when HAPS constructs an updated list of help articles for web page HAPS requests user profile information for the authenticated user from user profile service . User profile service returns to HAPS the user profile information for the user that is currently authenticated at client device .

HAPS returns results to help client that are filtered based on one or more attributes of the authenticated user indicated in the user profile information. When results are filtered based on attributes of a user those help articles among the results that do not contradict the attributes of the user are identified and displayed to the user. According to an embodiment a help article contradicts an attribute of a user when the help article is associated with an attribute value e.g. in metadata of the help article that is not included in the user s profile. According to another embodiment a help article contradicts an attribute of a user when the help article is associated with an attribute value that is different from an attribute value that is included in the user s profile. For example if a user s profile indicates that the user is enrolled in Classes A B and C and a help article in the results is associated with Class D the help article contradicts the attributes of the user and is removed from the results.

In one embodiment HAPS filters the results by causing query service to construct a query based at least in part on user profile attribute information. For example query service constructs a query to exclude from query results help articles in help article database that are associated with user profile attributes that are not included in the authenticated user s profile. In another embodiment HAPS filters the results by removing from the results of an executed query those help articles that are associated with user profile attributes that the authenticated user s profile does not include before returning the results to help client . If a particular help article does not have a user profile attribute associated therewith in help article database the article is applicable to all users.

User profile attribute data is useful to determine what help articles to display at web page when help article database contains information for at least one help article that indicates that the help article is directed toward a user with at least a certain user profile attribute. A help article may be directed toward users with any particular attribute value of any attribute in the users profiles. For example some help articles in help article database may be created for English speakers and some other help articles in the database may be created for Spanish speakers. Help article database may include information for the English help article and for the Spanish help article that specifies that the help articles are directed toward users with user profile attribute information that indicates that the user prefers English and Spanish respectively. As another example a particular help article explains a feature of web page that is only available to a user that acts in a faculty role. Help article database includes information for the particular help article that indicates that the help article is directed toward users with user profile attribute information that indicates that the user acts in the faculty role.

A list of help articles displayed for web page e.g. list in GUI of is ordered by the respective priorities of the help articles in the list. In an embodiment within the target context data of a help article a priority value is assigned to one or more of the content identifiers. The ranking of the help articles that match a query is based at least in part on the priority values in the target context data of the help articles that are associated with the content identifiers that matched the query.

For example if a help article is associated with two content identifiers in help article database the help article will have a priority value for each of the two content identifiers. In embodiments the priority of a help article for a particular content identifier indicates the help article s usefulness for a web page that is associated with the particular content identifier. By ordering the help article list displayed at web page by the applicable priority value i.e. by priority values that each help article has for content identifiers associated with web page the most useful help articles will be at the top of the list.

Because help articles have different priorities for different content identifiers the help articles may be ordered differently for different web pages. For example a particular help article describes a widget that is found on many web pages of a website. The widget is more heavily used on a first web page than on a second web page. The priority for the widget s help article can be greater which in an embodiment is indicated by a smaller number for the content identifier associated with the first web page than for the content identifier associated with the second web page. Thus the widget s help article will be ordered higher in the list of help articles displayed on the first web page than in the list of help articles displayed on the second web page.

More specifically a first help article is associated with content identifier LN1 with a priority value of 1 and with content identifier LN2 with a priority value of 75. A second help article is associated with content identifier LN1 with a priority value of 50 and with content identifier LN2 with a priority value of 50. HAPS determines an ordering for the list of help articles for web page based on the priority values for the returned help articles. If both the first and second help articles are included in the list of help articles for web page because the web content for web page is associated with content identifier LN1 then the first help article would appear higher in the list of help articles than the second help article based on the priority values for content identifier LN1 . However if the first and second help articles are included in the list of help articles for web page because the web content for web page is associated with content identifier LN2 then the first help article would appear lower in the list of help articles than the second help article based on the priority values for content identifier LN2 .

In an embodiment a priority value in help article database for a help article is associated with a user profile attribute. The priority value for a help article that is associated with a user profile attribute that corresponds with an attribute of the authenticated user in the user s profile is used to order the help article in the list displayed at web page . For example a particular help article has a first priority value in help article database and is associated with a user profile attribute that represents a student role. The particular help article also has a second priority value in the database that is associated with a user profile attribute that represents a faculty role. The help article is ordered in the ordered list for web page based on the first priority value if the authenticated user s role according to the user s profile data is student . Alternatively the help article is ordered in the ordered list for web page based on the second priority value if the authenticated user s role according to the user s profile data is faculty .

According to a further embodiment a priority value for a particular help article may be associated with both a content identifier and a user profile attribute value.

According to another embodiment the priority of a particular help article for a particular content identifier and or profile attribute is automatically calculated by HAPS . In this embodiment HAPS calculates a priority value for a particular help article based on one or more of user ratings of the help article mapping data used to identify the help article and a priority value included in help article database for the help article as described above .

To obtain a user rating for a particular help article help client may provide a user with a mechanism by which the user can rate the particular help article indicating how helpful the help article was to the user. Help client captures both the user rating data and information about the context in which the help article was rated. Context information for a help article user rating may include one or more of information from the user s profile e.g. a role of the user a preferred language for the user a preferred medium for help articles etc. a content identifier for the web page that was displayed to the user when the user selected the help article for consumption the viewed web page a URL for the viewed web page metadata from the viewed web page etc. The context information for a user rating is communicated to HAPS with the user rating data to allow HAPS to calculate a context specific priority value for the help article based on the user rating.

HAPS may receive two or more user ratings for a particular help article where at least one of the received user ratings is associated with different context information than another of the received user ratings. Context information associated with user ratings may be different based on attribute values in the user profiles for the users such as a role of a user a preferred language for a user a preferred medium for help articles etc. metadata for a viewed web page a URL of a viewed web page a content identifier for a viewed web page etc.

For example HAPS may receive a first user rating for a particular help article with context information indicating a first content identifier for the associated viewed web page and a second user rating for the same help article with context information indicating a second content identifier for the associated viewed web page. HAPS calculates a first priority value for the help article for the first content identifier based at least in part on the first user rating and calculates a second priority value for the help article for the second content identifier based at least in part on the second user rating. The first priority value would be used to determine where in an ordered list of help articles the particular help article should be displayed when the currently viewed web page is associated with the first content identifier. The second priority value would be used to determine where in an ordered list of help articles the particular help article should be displayed when the currently viewed web page is associated with the second content identifier.

As a further example HAPS receives a first user rating for a particular help article with first context information indicating a first role for an authenticated user and a second user rating for the same help article with second context information indicating a second role for an authenticated user. HAPS calculates a first priority value for the help article that is distinguished by the first user role based at least in part on the first user rating and calculates a second priority value for the help article that is distinguished by the second user role based at least in part on the second user rating. The first priority value would be used to determine where in an ordered list of help articles the particular help article should be displayed when the authenticated user is associated with the first role in the user s profile. The second priority value would be used to determine where in an ordered list of help articles the particular help article should be displayed when the authenticated user is associated with the second role in the user s profile.

Furthermore HAPS may calculate priority values for a help article based on how well the URL of the web page matched the URL that maps to the content identifier that matched the help article. For example assume that the currently viewed web page has a first URL that matches a second URL of a particular mapping and that the particular mapping maps the second URL to a content identifier that matches a particular help article. In this example the match between the first URL and the second URL may have been an exact match or an inexact match. In the case of an exact match HAPS may assign the particular help article a priority value that is higher than would otherwise be assigned to the help article if the match had been inexact. The higher priority indicates that the exact match help article is more relevant to the currently viewed web page than a help article that is selected for display because of an inexact URL to URL match.

According to an embodiment HAPS recognizes a match all flag on a help article that causes the help article to be included in all lists of articles displayed on all web pages. For example a help article may be associated with a particular content identifier e.g. match all that acts as a match all flag. Such a content identifier is treated as though it matched the search criteria of all help article queries. Consequently any help article with the flag is listed in every help article listing.

As a further example a help article may be included in a list of articles accessible by HAPS where inclusion is this list acts as a virtual match all flag. As a further example a help article may include a match all flag separate from the content identifiers of the help article in the data for the help article in help article database . Help articles with a match all flag are referred to herein as match all help articles.

According to one embodiment HAPS places match all help articles at or near the top of every ordered list of help articles without regard to whether help articles appearing below the match all help article in the list are more relevant to the context of currently viewed web page as indicated in the priority values for the help articles in the list . Thus any help article that includes a match all flag will be quickly identified by users of web page . This mechanism allows administrators to propagate the most up to date help information to users without requiring users to proactively seek help information from limited resources such as by calling into potentially swamped help lines.

According to an embodiment HAPS also supports match many flags and or content identifiers. Unlike help articles associated with the match all flag help articles associated with a match many flag do not show up in all help article lists. Instead a match many help article is applicable to only a subset of web pages. Each particular match many help article may be scoped to only those pages with particular content identifiers or to only those pages whose URLs contain a certain base URL.

According to another embodiment a particular match many help article is displayed to only those authenticated users that have a particular attribute in the user s profile. For example a particular match many help article may be scoped to users that are enrolled in a particular course or that are a member of a particular user group. Such a user attribute specific match many help article may be helpful to allow a leader of a particular course to disseminate help information for an assignment for the course e.g. how to fix an error on an assignment page or for the leader of a group to disseminate help information to people that belong to the group.

A match many help article may match a particular URL or portion of a URL for web page when a URL in metadata for the match many help article matches the particular URL or portion thereof of web page . Similarly a match many help article may match an attribute of a user s profile if the attribute value of the user s attribute is found in metadata of the match many help article.

For example a particular user may create a help article that is scoped to a particular course or to a particular group of people. This help article may be added to help article database with associated user profile attributes e.g. indicating that the help article is applicable to users enrolled in the particular class is applicable to users that belong to the particular group etc. If the help article also includes a match many flag the help article will be displayed at or near the top of any list of help articles displayed to a user with a user profile attribute value that matches the user profile attribute data for the help article.

According to one embodiment HAPS is configured to detect events that require HAPS to refresh the help article list displayed for web page . Such an event may be initiated by the user e.g. the user refreshes web page the user activates help icon of GUI in etc. or may not be initiated by the user e.g. an application displayed in web page changes or updates an application displayed in web page fails in some way etc. . If a GUI that displays a list of help articles for web page such as GUI or GUI is displayed in web page at the time that help client detects such an event then the displayed help GUI GUI or GUI is automatically updated by help client to depict the newest list of help articles for web page .

At step the event is detected. For example help client detects an error thrown by an application running on web page e.g. search application . The event that caused the thrown error changes content for search application but does not cause the URL for web page to change. When search application changes search application publishes an event to browser . Help client subscribes to events that are published to browser . Thus when search application publishes a change event to browser browser notifies help client of the event.

Help client determines whether the detected event qualifies as an event that would cause help client to refresh the list of help articles that are currently displayed at web page . For example help client maintains data indicating the types and sources of events that would cause help client to refresh the list of help articles displayed at a currently viewed web page.

After detecting the event of step control passes to step . At step metadata is retrieved from at least a portion of the particular web page that contains content that changed in response to the event. For example help client identifies help metadata tags that are associated with search application . As described above a help metadata tag may have a value that is a content identifier or may have a value that is mapped to one or more content identifiers in mapping data managed by mapping service . Help client retrieves the values of the help metadata tags for search application .

At step a second set of one or more help articles is retrieved based at least in part on the retrieved metadata wherein the first set of one or more help articles is different from the second set of one or more help articles. For example help client communicates the metadata values from the help metadata tags for search application to HAPS . HAPS causes query service to construct a query based at least in part on the metadata values as described above.

The results of the query include at least help articles from help article database that are related to the content of search application on web page . Thus the user has access to the latest help articles for an updated web page even when a change on web page does not affect the URL for the web page. Furthermore HAPS may cause query service to construct a query based on all help metadata tags associated with web page the URL of web page and any applicable user profile attribute data for the authenticated user in order to identify all applicable help articles for the second set of one or more help articles.

HAPS executes the query over help article database which returns a second set of help articles that is different than the set of help articles displayed in list at web page prior to detecting the event. The second set of help articles may be different than the first set of help articles because after the first set of help articles was identified an administrator added a help article to help article database that addresses the cause of the error thrown by search application which is now included in the second set of help articles. Furthermore the second set of help articles may be different than the first set of help articles because web page includes different help metadata tag values on which the query for the second set of help articles is based than the help metadata tag values on which the query for the first set of help articles was based.

At step information for the second set of one or more help articles is displayed in connection with the particular web page. For example the list of help articles that help client caused web page to display prior to detecting the event is replaced with an ordered list of the second set of help articles at list that was identified using at least the values of the help metadata tags associated with search application .

According to one embodiment the techniques described herein are implemented by one or more special purpose computing devices. The special purpose computing devices may be hard wired to perform the techniques or may include digital electronic devices such as one or more application specific integrated circuits ASICs or field programmable gate arrays FPGAs that are persistently programmed to perform the techniques or may include one or more general purpose hardware processors programmed to perform the techniques pursuant to program instructions in firmware memory other storage or a combination. Such special purpose computing devices may also combine custom hard wired logic ASICs or FPGAs with custom programming to accomplish the techniques. The special purpose computing devices may be desktop computer systems portable computer systems handheld devices networking devices or any other device that incorporates hard wired and or program logic to implement the techniques.

For example is a block diagram that illustrates a computer system upon which the techniques described herein may be implemented. Computer system includes a bus or other communication mechanism for communicating information and a hardware processor coupled with bus for processing information. Hardware processor may be for example a general purpose microprocessor.

Computer system also includes a main memory such as a random access memory RAM or other dynamic storage device coupled to bus for storing information and instructions to be executed by processor . Main memory also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor . Such instructions when stored in non transitory storage media accessible to processor render computer system into a special purpose machine that is customized to perform the operations specified in the instructions.

Computer system further includes a read only memory ROM or other static storage device coupled to bus for storing static information and instructions for processor . A storage device such as a magnetic disk optical disk or solid state drive is provided and coupled to bus for storing information and instructions.

Computer system may be coupled via bus to a display such as a cathode ray tube CRT for displaying information to a computer user. An input device including alphanumeric and other keys is coupled to bus for communicating information and command selections to processor . Another type of user input device is cursor control such as a mouse a trackball or cursor direction keys for communicating direction information and command selections to processor and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes a first axis e.g. x and a second axis e.g. y that allows the device to specify positions in a plane.

Computer system may implement the techniques described herein using customized hard wired logic one or more ASICs or FPGAs firmware and or program logic which in combination with the computer system causes or programs computer system to be a special purpose machine. According to one embodiment the techniques herein are performed by computer system in response to processor executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory from another storage medium such as storage device . Execution of the sequences of instructions contained in main memory causes processor to perform the process steps described herein. In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions.

The term storage media as used herein refers to any non transitory media that store data and or instructions that cause a machine to operate in a specific fashion. Such storage media may comprise non volatile media and or volatile media. Non volatile media includes for example optical disks magnetic disks or solid state drives such as storage device . Volatile media includes dynamic memory such as main memory . Common forms of storage media include for example a floppy disk a flexible disk hard disk solid state drive magnetic tape or any other magnetic data storage medium a CD ROM any other optical data storage medium any physical medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM NVRAM any other memory chip or cartridge.

Storage media is distinct from but may be used in conjunction with transmission media. Transmission media participates in transferring information between storage media. For example transmission media includes coaxial cables copper wire and fiber optics including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio wave and infra red data communications.

Various forms of media may be involved in carrying one or more sequences of one or more instructions to processor for execution. For example the instructions may initially be carried on a magnetic disk or solid state drive of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system can receive the data on the telephone line and use an infra red transmitter to convert the data to an infra red signal. An infra red detector can receive the data carried in the infra red signal and appropriate circuitry can place the data on bus . Bus carries the data to main memory from which processor retrieves and executes the instructions. The instructions received by main memory may optionally be stored on storage device either before or after execution by processor .

Computer system also includes a communication interface coupled to bus . Communication interface provides a two way data communication coupling to a network link that is connected to a local network . For example communication interface may be an integrated services digital network ISDN card cable modem satellite modem or a modem to provide a data communication connection to a corresponding type of telephone line. As another example communication interface may be a local area network LAN card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information.

Network link typically provides data communication through one or more networks to other data devices. For example network link may provide a connection through local network to a host computer or to data equipment operated by an Internet Service Provider ISP . ISP in turn provides data communication services through the world wide packet data communication network now commonly referred to as the Internet . Local network and Internet both use electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system are example forms of transmission media.

Computer system can send messages and receive data including program code through the network s network link and communication interface . In the Internet example a server might transmit a requested code for an application program through Internet ISP local network and communication interface .

The received code may be executed by processor as it is received and or stored in storage device or other non volatile storage for later execution.

In the foregoing specification embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the invention and what is intended by the applicants to be the scope of the invention is the literal and equivalent scope of the set of claims that issue from this application in the specific form in which such claims issue including any subsequent correction.

