---

title: Method and system for component parameter management
abstract: Electronic Design Automation software displays parameters of a component in a graphical user interface. According to an embodiment, parameters of a component may be filtered through the use of a query. A Component Parameter Manager may search through parameter fields in a CDF file for components that match the query and emphasize the matching parameters in a graphical user interface. The parameter fields in a CDF file may also be augmented by a separate file to add search instructions or additional parameter fields. The augmentation helps facilitate a search by the Component Parameter Manager. The augmentations to a CDF file may be provided in a editable file separate from the CDF file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09355130&OS=09355130&RS=09355130
owner: CADENCE DESIGN SYSTEMS, INC.
number: 09355130
owner_city: San Jose
owner_country: US
publication_date: 20120726
---
When creating an Integrated Circuit IC design using EDA software designers may use predetermined manufacturer supplied components in a Process Design Kit PDK to create a design. A subset of the PDK is a Component Description Format CDF information set. A CDF describes attributes of individual components and libraries of components in the PDK as one aspect of EDA software. A CDF may be attached to either a cell or a library of components. A CDF attached to a cell may describe the parameters and attributes for that one particular component. A CDF attached to a library may describe the parameters and attributes for all the components in the library. CDF information is often stored in one or more files which are referenced by included within a PDK. Different EDA software companies may support their own version of a CDF though by a different name and perhaps with different characteristics. For example Cadence has its own proprietary CDF Open PDK has its own version of a CDF and iPDK has its own version of the CDF called iCDF. These CDFs are only provided as examples and are not meant to be an exhaustive list of all the different CDFs. Additionally other CDFs may be developed in the future. One of ordinary skill in the art will be able to determine whether a certain information set is a CDF. For convenience in this description CDF will refer to any information set that is used to describe components cells library of components or library of cells.

Currently EDA software manages component parameters by providing a Graphical User Interface GUI which lists all the parameters of a selected component in a scrollable window. As semiconductor manufacturing processes have moved to ever smaller geometries the number of parameters relating to a particular semiconductor component has increased. For example a component based on a 28 nm manufacturing process may have 300 parameters. The number of parameters will only increase as manufacturing processes move to ever smaller geometries. It is cumbersome for someone to identify set and or inspect parameters for a particular component when there are hundreds of parameters to sift through.

For example because there are so many parameters all the parameters cannot be listed in an easily ascertainable fashion. Currently as explained above applications provide users with a scroll bar to help navigate the list. However it has become cumbersome and time consuming for a user to scroll through all the parameters now that there are hundreds of parameters for a component.

Additionally different PDK s PDKs from different manufacturers and or PDKs representing different process generations may use widely different terminology nomenclature and or case sensitivity for a given property or group of properties. This further increases the cognitive burden on an IC designer user when dealing with multiple PDKs or switching from one manufacturing process or generation to another. The designer must struggle to remember the different nomenclatures when manually scrolling through large numbers of parameter to find a specific parameter or group of parameters.

As a result it would be desirable to provide a method and system to simplify these actions as well as provide a better parameter management system.

This description provides a system method and computer program product for managing parameters of a semiconductor component in electronic design automation EDA software. While operating the EDA software embodiments may augment a received query with at least a first search instruction stored in a first file. Embodiments may augment a Component Description Format CDF file by the first file so that the augmented CDF file contains at least one additional field. The CDF file may be stored on a non transitory computer readable medium describe the component parameters and contain parameter fields that have programming code that interacts with the EDA software to control execution of the query. Embodiments may perform the augmented query in at least one field in the augmented CDF file. Embodiments may determine whether there is at least one matching parameter within the component parameters based on the query and if there are any matching parameters may emphasize the matching parameters on a display.

Each parameter of a component may describe an aspect of that particular component. Looking at an exemplary component such as a resistor a resistor may have a parameter such as ideal which when invoked will make the resistor behave in a theoretical perfect fashion. Another parameter such as thin film when selected may impose a particular design on the resistor. Other parameters may include width length and resistivity type. In one aspect selecting the thin film parameter may provide a thin film resistor with user provided width length and resistivity type.

Parameters may have one or more attributes that impose features and limitations on the parameters. An example of an attribute may be the requirement that the values of the parameter be in Boolean format 1 or 0 .

The CDF information set may describe each parameter by providing among other things a name default values a list of choices such as whether it is thin film or ideal and a type such as whether a parameter is to be in Boolean floating point string integer etc. for the parameter. Each parameter description within the CDF file may be held in its own field parameter field . In one aspect of an embodiment the parameter fields may be a comma separated value list and the description type may be determined by the order in which the description is provided in that list. A comma separated value list for a resistor may be as follows Name Thin Film or Ideal Default value. Instead of a comma separated format other serialization format may be used including but not limited to Extensible Markup Language XML JavaScript Object Notation JSON SKILL Tool Command Language Tcl Python and other programming languages. Independent of the format used the descriptions in the fields and the number of fields used may vary from one CDF type to another. Some of the parameter fields may also have programming code that interacts with EDA software. Because most EDA software interacts with the OpenAccess database it is currently best to use programming languages that have bindings or application programming interfaces APIs to OpenAccess. Currently OpenAccess bindings have been created for or are soon to be created for SKILL Tcl Python Perl Ruby C and C . As bindings to OpenAccess are developed for other programming languages those programming languages may also be used in the parameter fields to interact with EDA software. If databases other than OpenAccess are used with EDA software those programming languages which have bindings to the other databases may be used.

With recent process nodes components with hundreds of parameters have become common. As noted as geometries get smaller the number of parameters will increase. A person of ordinary skill in the art would recognize that there are many more types of components parameters and attributes than the ones referred to above.

According to an embodiment a parameter filtering system integrated within EDA software may be used to aid designers in identifying and manipulating parameters of components. In one aspect rather than having to scroll through hundreds of parameters the parameter filtering system searches through the parameter fields to identify matching parameters.

A user may access the parameter filtering system through a standalone client system client server environment or a network environment. is a block diagram illustrating components of an exemplary parameter filtering system according to an embodiment. System may comprise a computer system a storage system and a connection .

Computer system may execute instructions stored on a computer readable medium that provides a user interface which allows a user to access storage system . According to an aspect of an embodiment the instructions may be part of a software program or executable file that operates EDA software. Computer system may be any computing system such as a personal computer workstation or other device employing one or more processors that can execute programming instructions stored on one or more computer readable media. In one embodiment computer system has a processor that is able to execute programming instructions stored on one or more computer readable media and or storage system . Computer readable media and storage system may include one or more compact disks optical disks hard drives flash memory magnetic strips RAM ROM and other computer readable media. User interface may be a GUI run in a user controlled application window on a display. A user may interact with user interface through one or more I O devices such as a keyboard a mouse or a touch screen etc.

Storage system may take any number of forms including but not limited to a server with one or more storage devices attached to it a storage area network or one or a plurality of non transitory computer readable media. In an aspect of one embodiment PDK directories which may include CDF files and separate User s Files may be stored in storage system such that they may be persistent retrieved or edited by the user. In another embodiment such files may be held in one or more of the computer readable media or a combination of both computer readable media and storage system .

According to an aspect of an embodiment only one computer system is connected to storage system through connection which may be a simple direct wired or wireless connection a system bus a network connection or the like to provide computer system with access to storage system . In one aspect connection may enable multiple clients to connect to storage system . The network connection may be a local area network a wide area network or any other type of network providing one or more clients with access to storage system . The clients degree of access may depend on system administrator settings user settings etc.

In one embodiment the EDA software may use the description parameter field to present a descriptive tooltip. In one embodiment the tooltip is shown when a user hovers a mouse pointer over a parameter of interest. In another embodiment a What s this may be shown much like what is shown when the QWhatsThis class in the Qt framework is used . One skilled in the art would recognize that other searchable EDA tool specific fields with different functionalities which are not listed here may be used as replacements for or in addition to the fields listed.

Referring back to the filter list that is provided when clicking on filter list button may include pre defined filters which are part of the EDA software or may include user created custom filters. In an embodiment pre defined filters provided by the EDA tool vendors may be hardcoded to employ commonly used jargon or terms i.e. terms which are commonly used by those experienced in the art of IC design such as layout dependent effects process migration etc. . In another embodiment pre defined filters may also be automatically and dynamically generated during EDA tool software initialization. In one embodiment the pre defined filters may be generated via the list of keywords found in the PDK. The EDA tool may count the keywords such that the commonly occurring keywords may be used in generating the pre defined filters. In yet another embodiment filters may be pre defined by the EDA tool via the list of commonly occurring phrases multiple words rather than one occurring in the searchable fields across multiple components. Additional schemes or algorithms may be employed for synthesizing dynamic automatic pre defined filters without departing from the spirit of the art. In addition to the pre defined filter fields user specific filters may additionally be added to extend the system per an embodiment.

Filter display field may display the name of the filter that the user has selected. These filters may be one of the pre defined filters or may be a user created filter. Create filter button when activated may provide a user the ability to create or modify custom filters to be used as search queries for the parameter filtering system. Create filter button may also provide the user the ability to delete custom filters. When creating a custom filter the user may provide an identifier for the custom filter and search terms for use as the query. In one embodiment the user may have the option to search in only selected parameter fields. If the user does not specify a search field a default search setting such as search all may be used.

In addition to filtering the list of available parameters via the filter field the filtered results may be further reduced via the dynamic search field . Search field may accept user generated text strings search string to be inputted as a query for the parameter filtering system. Limit search button may provide the user the ability to select which parameter fields will be searched with the query. The user may also have the option to change the search methods used with the search string. Examples of these options may be searching for parameters that have a match for all search words any of the words exact phrases or none of the words. Other options might determine whether matching words may or must be a substring prefix suffix or exact matches. Additional options may be whether a search will be case sensitive. The user might also be able to do a combination of the optional search methods. shows an exemplary GUI popup window which provides check boxes to identify which search instructions will be applied to a search.

Referring back to parameter display displays a list of all the parameters with respect to a component. When a user inputs a query by inputting either a provided filter custom filter search string or both filter and search string parameter display will display only or otherwise emphasize the parameters that match the search terms in the query.

The user may select and edit one or more parameters in parameter display . The display may also provide an option to sort the parameters in a variety of manners. For example the parameters could be sorted alphabetically by name. When a user performs an action on parameter display e.g. right clicking after selecting one or more parameters the GUI may provide options to edit the values of the selected parameters. In one embodiment a separate GUI window parameter editing window pops up to display the options.

In another aspect of an embodiment user information may be provided to further augment or override some of the CDF information provided by the PDK supplier. According to an aspect of an embodiment a separately stored user authored Keywords Search Augmentation structure will augment the query with additional instructions for a search when searching for matching terms in a parameter field. The Keywords Search Augmentation structure may be one or more files provided by a manufacturer. It may also be user created created by a third party or any combination thereof. In one embodiment the Keywords Search Augmentation structure may be editable by a user. The separately stored Keywords Search Augmentation structure may be stored in a serialization format. The following entry in JSON format is an example of a portion of a possible Keywords Search Augmentation structure which provides instructions that augment a search when searching through hypothetical parameter param  of hypothetical component nch component . Though this example is written in JSON any other programming language may be used.

In this example searching for the terms LDE Layout or Dependent in component nch component  would discover parameter param . Additionally if a filter were searching for lde a lowercase version of LDE the filter would not discover param  even if lde were originally in one of the parameter fields of param  as provided by the PDK supplier. Furthermore a filter searching for the term masklayout or layers would discover param  if any of the parameter fields of param  as provided by the PDK supplier had the term masklayout mask layoutmask layers or layerSet . Finally a search for Mask would discover param  if any of the parameter fields of param  as provided by the PDK supplier matches the regular expression M m ask or the regular expression m sk .

In an embodiment the information provided by the Keywords Search Augmentation structure may be stored separately from the PDKs. This allows a user to associate a Keywords Search Augmentation structure with one or more PDKs which may represent different manufacturing processes from different vendors or from different process nodes . graphically describes one embodiment of this association. When multiple PDKs are associated with a user specified Keywords Search Augmentation structure the augmented search can be applied to CDF parameter descriptions from multiple components e.g. CDF CDF from multiple PDKs e.g. PDK PDK . . . etc by EDA tool . This advantageously allows a user to create a single unifying search scheme that can be used with similar results intents across PDK s from multiple sources regardless of the different nomenclature or search terms provided by the original PDK authors. This unifying search implementation allows a user to create a search in the user s own terms working across multiple PDKs and therefore reducing the user s cognitive burden.

The Keywords Search Augmentation structure may also augment a CDF s parameter field by adding additional parameter fields such as a description field to explain the parameter function in a natural language such as English. The field may initially be populated by a third party to explain the parameter. The explanation may be in plain text multi line text html rich text format etc. Additionally a user may add replace or delete the explanations. This provides a user with the ability to intuitively search for a parameter by knowing the parameter s function.

If the input is a pre defined filter the parameter filtering system may do a search on all of the parameter fields of all the parameters of a component including any additional matching parameter fields in CDF Augmentation for text that matches the search terms in the provided filter. If however the parameters have a matching Keywords Search Augmentation structure search will additionally apply the search instructions and mappings in the Keywords Search Augmentation structure for each parameter when searching their parameter fields. All parameters with searchable parameter fields containing text that match the search terms in accordance with the instructions in the Keywords Search Augmentation structure if applicable may then be considered for output to display . In another embodiment the user may be provided the option not to use the Keywords Search Augmentation structure. Thus all other parameters of the component may be hidden. The parameter filtering system may then wait for another user input.

If the input is a custom filter the search will search the parameter fields in the same way as if the input were pre defined filter . However rather than searching all parameter fields the search may be limited to certain parameter fields. For example custom filter may select only parameter field explanation to be searched. In such a case only the explanation parameter field will be searched for the search terms in the custom filter. In an aspect of an embodiment if the custom filter does not select the use of any Keywords Search Augmentation structure then the instructions in the Keywords Search Augmentation structure may not apply. Once the search is completed all parameters identified in the search may then be considered for output to display . Thus all other parameters of the component may be hidden. The parameter filtering system may then wait for another user input. In another embodiment instead of hiding parameters that did not match a search the matching parameters would be emphasized in the list or de emphasize non matching parameters . Matching parameters may be emphasized by highlighting bolding etc. One skilled in the art would understand that there are many ways to emphasize the matching parameters. Also in another embodiment additional searches and filters may be applied to narrow a list of parameters that has already been narrowed by a previous search or filter.

If the input is a search string the search is done in the same way as for a custom filter or pre defined filter using the search terms in search string . In another embodiment searches by search string will also apply additional user specified search instructions such as all of the words any of the words exact phrase none of the words substring prefix exactly suffix insensitive match sensitive match. Once finished the parameter filtering system may wait for another user input.

If the input is a Parameter Field Edit the parameter filtering system may display any augmentations from a corresponding Keywords Search Augmentation and CDF Augmentation for the user to directly edit. Once finished the parameter filtering system may wait for another input from the user.

While embodiments of the present invention have been described please note that various different modifications are possible and are contemplated within the true spirit and scope of the appended claims. There is no intention therefore of any limitations to the exact abstract or disclosure presented herein.

