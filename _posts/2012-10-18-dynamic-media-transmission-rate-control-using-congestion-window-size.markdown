---

title: Dynamic media transmission rate control using congestion window size
abstract: This disclosure relates to video segment identification and organization based on dynamic characterizations. A media component streams media content to a user device at a rate based at least in part on a congestion window size, and a trickle component determines the congestion window size based at least in part on a set of limiting criteria. The set of limiting criteria can include but is not limited to a queuing delay, a target transmission rate, and/or a packet loss compensation factor.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09014264&OS=09014264&RS=09014264
owner: Google Inc.
number: 09014264
owner_city: Mountain View
owner_country: US
publication_date: 20121018
---
This application claims the benefit of U.S. Provisional Application No. 61 558 116 filed Nov. 10 2011 and entitled BOUNDING CONGESTION WINDOW TO RATE LIMIT LARGE CONTENT TRANSFER the entirety of which is incorporated herein by reference.

This disclosure generally relates to systems and methods that facilitate dynamic control of transmission rates for internet media using congestion window size.

The internet and media enabled portable computing devices have dramatically altered the processes for generating and consuming media content. Presently users can consume media content virtually anywhere at any time as long as they have access to a media capable device with an internet connection. The convenience of being able to view media content via the internet essentially on demand has resulted in explosive growth of internet media consumption.

Streaming is a common method of media delivery across the internet. Streaming media is continuously received and presented to an end user while being delivered by a streaming provider. Streaming enables media that includes large amounts of data to be displayed on a client device prior to the entire media file being transmitted. Internet media traffic is currently approaching a majority of consumer internet traffic e.g. traffic delivered via a transmission control protocol TCP and the rate of demand is projected to continue increasing. In particular streaming media is expected to account for a large portion of the projected increase in demand.

Streaming media content is a computationally expensive process that involves substantial bandwidth and quantities of resources from the streaming provider and client. Typically streaming providers send media content to clients at a best effort rate or as quickly as possible. Providing media content as quickly as possible can result in burstiness and trigger unnecessary packet loss.

The following presents a simplified summary of the specification in order to provide a basic understanding of some aspects of the specification. This summary is not an extensive overview of the specification. It is intended to neither identify key or critical elements of the specification nor delineate any scope of particular embodiments of the specification or any scope of the claims. Its sole purpose is to present some concepts of the specification in a simplified form as a prelude to the more detailed description that is presented later.

According to an aspect of the subject innovation systems and methods for dynamic media transmission rate control using congestion window size are disclosed. A media component streams media content to a user device at a rate based at least in part on a congestion window size and a trickle component determines the congestion window size based at least in part on a set of limiting criteria. The set of limiting criteria can include but is not limited to a queuing delay or round trip time a target transmission rate and or a packet loss compensation factor.

In an embodiment a monitoring component monitors a queuing delay for transmissions of packets from a media server to a user device a target rate component determines a target transmission rate for the transmissions of the packets based at least in part on a set of targeting criteria and a limiting component determines a transmission control protocol maximum congestion window size based at least in part on the queuing delay and the target transmission rate.

The following description and the annexed drawings set forth certain illustrative aspects of the specification. These aspects are indicative however of but a few of the various ways in which the principles of the specification may be employed. Other advantages and novel features of the specification will become apparent from the following detailed description of the specification when considered in conjunction with the drawings.

The innovation is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of this innovation. It may be evident however that the innovation can be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to facilitate describing the innovation.

It is to be appreciated that in accordance with one or more implementations described in this disclosure users can opt in or opt out of providing personal information demographic information location information proprietary information sensitive information or the like in connection with data gathering aspects. Moreover one or more implementations described herein can provide for anonymizing collected received or transmitted data.

One non limiting implementation of this disclosure provides for accurate and efficient dynamic media transmission rate control using congestion window size. More particularly in accordance with an embodiment a media component streams content to a user device based at least in part on a congestion window size and a trickle component determines the congestion window size based at least in part on a set of limiting criteria.

Non Limiting Examples of Systems for Dynamic Media Transmission Rate Control Using Congestion Window Size

Turning now to illustrated is an example system for dynamic media transmission rate control using congestion window size in accordance with various aspects described in this disclosure. Generally system can include a memory that stores computer executable components and a processor that executes computer executable components stored in the memory examples of which can be found with reference to . System includes a media component . The media component sends provides or otherwise streams media content content to a user . For example in one implementation in response to a request received from the user the media component provides content included in a set of content to a user device associated with the user via a network connection. The content can include but is not limited to videos music applications and or video games. The user device e.g. client client device etc. can include but is not limited to a smart phone a cell phone a personal digital assistant PDA a tablet a laptop a desktop a portable music player a video game system an electronic reader e reader a global positioning system GPS a set top box a digital video recorder DVR a digital media receiver and or a television e.g. an internet enabled television . The media component includes an input component a selection component a transport control protocol TCP trickle component trickle component and a transport component .

The input component acquires obtains or otherwise receives input from the user related to initiating and or controlling content streaming. For example in one embodiment the input component generates manages or otherwise controls a user interface and or application programming interface API to facilitate receiving input from the user . For instance the input component can receive a request e.g. input from the user via the user device to stream content included in the set of content . The input can include explicit user inputs e.g. configuration selections question answer etc. such as from mouse selections keyboard selections and or speech. Additionally or alternatively the input can include data uploads wherein a data upload is a transfer of data from the user or a third party source e.g. computer or a computer readable medium to the input component . For instance an application e.g. a media player etc. executing on the user device can provide input to the input component related to initiating streaming of content.

The selection component identifies locates or otherwise determines a set of data associated with requested content content data to stream to the user device based on a set of user criteria. The user criteria can include but is not limited to a set of privileges associated with the user a type of the user device and or a set of restrictions associated with the content e.g. copy protection digital rights management etc. . For instance the user can request streaming of a first video e.g. using the input component included in the set of content . The selection component can determine that the user device is a smart phone and select a version of the first video adapted for display on a smart phone included in the set of content . As an additional or alternative example the selection component can provide a version of the first video corresponding to a digital rights management DRM solution employed on the user device .

The trickle component limits regulates or otherwise controls a rate of streaming for the content in part by determining bounding or otherwise setting a transmission control protocol TCP congestion window size. For example in one implementation the trickle component determines or sets a value of a maximum congestion window size e.g. cwnd clamp based on a set of limiting criteria. The limiting criteria can include but are not limited to queuing delay or round trip time RTT a target transmission rate R and or a packet loss compensation factor compensation factor discussed in greater detail with reference to . Typically a TCP congestion control stack continually increases a quantity W of packets in transmit for a congestion window until losses occur or the value of W is about or equal to the maximum congestion window size e.g. cwnd clamp . The trickle component sets the value of W based on the limiting criteria to control manage or otherwise limit a burst size that a TCP flow sends at respective RTTs discussed in greater detail with reference to .

The transport component transmits sends or otherwise streams content data e.g. selected by the selection component at a rate less than or equal to the value of W. For instance if W is set to 10 packets per second e.g. using the trickle component then the transport component streams content data at a rate less than or equal to 10 packets per second. It is to be appreciated that although the trickle component and transport component are illustrated as being separate components and are illustrated as being included in the media component such implementation is not so limited. For example the trickle component can and transport component can be integrated. As an additional or alternative example the trickle component and or transport component can be stand alone components. Furthermore it is to be appreciated that although the set of content is illustrated as being maintained in a data store such implementation is not so limited. For example the set of content can be maintained in a different location and the media component can access the set of content for example using a network connection.

The monitoring component samples observes or otherwise monitors a queuing delay RTT for transmissions of data packets packets from a media server e.g. media component to a user device e.g. user device . For example in one embodiment the monitoring component continuously monitors the RTT for transmissions from the media component to the user device . As an additional or alternative example in one embodiment the monitoring component determines the RTT at predetermined intervals and or predetermined times. For instance at a first time the monitoring component can determine that the RTT is 200 milliseconds ms and a second time occurring a predetermined amount of time after the first time the monitoring component can determine that the RTT is 205 ms.

The target rate component sets generates or otherwise determines a target transmission rate R based on a set of targeting criteria. The set of targeting criteria can include but is not limited to an encoding rate of the user device and or a maximum transmission rate set point max rate set point . For example in one embodiment the target rate component determines an encoding rate for the user device as X packets per second where X is a real number greater than zero. The target rate component determines the value of R based at least in part on X discussed in greater detail with reference to . As an additional or alternative example in one embodiment a system administrator e.g. supervisor etc. determines or sets a value of a max rate set point Y where Y is a real number greater than zero. The target rate component sets or determines the value of R based at least in part on Y discussed in greater detail with reference to .

The limiting component controls bounds or otherwise sets a transmission control protocol TCP congestion window size based at least in part on the values of RTT e.g. determined using the monitoring component and R e.g. determined using the target rate component . For example in one implementation the limiting component sets a value of the maximum congestion window size W e.g. cwnd clamp based on the product of the RTT and R e.g. W RTT R . For instance where the target transmission rate R is 50 packets per second and the RTT is 200 ms the limiting component determines or sets W to 10 packets per second e.g. 10 50 0.2 .

Referring to illustrated is a non limiting implementation of a system with an example trickle component in accordance with various aspects described in this disclosure. As discussed the trickle component limits regulates or otherwise controls a rate of content streaming in part by determining bounding or otherwise setting a transmission control protocol TCP congestion window size. For example in one implementation the trickle component determines or sets a value of a maximum congestion window size e.g. cwnd clamp based on a set of limiting criteria. The trickle component in includes a monitoring component a target rate component a compensation component and a limiting component .

As discussed the monitoring component samples observes or otherwise monitors a queuing delay RTT for transmissions of data or packets from the media component to a user device . The monitoring component in includes a trigger component and an acknowledgement component ACK component . The trigger component initiates starts or otherwise triggers a timer when a data packet is sent e.g. using the transport component to a user device . The ACK component ends stops or otherwise terminates the timer when an acknowledgement message ACK corresponding to the data packet is received from the user device . The monitoring component determines the RTT as a function of time elapsed between the sending of the data packet and receipt of the ACK corresponding to the data packet.

As discussed the target rate component sets generates or otherwise determines a target transmission rate R based on a set of targeting criteria. The set of targeting criteria can include but is not limited to an encoding rate of the user device and or a maximum rate set point. The target rate component in includes an inspection component and a set point component . The inspection component determines a multimedia bit encoding rate encoding rate of the user device . For example in one embodiment the inspection component analyzes examines or otherwise inspects the user device and or applications executing on the user device and based on the inspection determines the encoding rate. As an additional or alternative example in one embodiment the inspection component acquires obtains or otherwise receives an encoding rate indicator from the user device and or applications executing on the user device . For instance the inspection component can receive a message from the user device that includes an encoding rate for the user device . The target rate component determines a value of R based at least in part on the encoding rate of the user device . For example in one embodiment the target rate component determines the value of R as Z percent of the encoding rate of the user device where Z is real number between 0 and 100. For instance the target rate component can determines the value of R is equal to 90 or the encoding rate e.g. R 0.9 encoding rate . However it is to be appreciated that the value of R can be larger than the encoding rate. For example R can be equal to 1.3 encoding rate e.g. Z is equal to 130 . As such Z can be a real number greater than 100.

The set point component acquires obtains or otherwise receives a value of a maximum transmission rate set point max rate set point from an authorized user . The authorized user can include but is not limited to a system administrator a system engineer and or an authorized operator. For example in one embodiment the authorized user provides input including detailing or otherwise indicating the max rate set point to the set point component . The input can include explicit user inputs e.g. configuration selections question answer etc. such as from mouse selections keyboard selections and or speech. Additionally or alternatively the input can include data uploads wherein a data upload is a transfer of data from the user or a third party source e.g. computer or a computer readable medium to the set point component . The target rate component determines a value of R based at least in part on the max rate set point. For example in one embodiment the target rate component determines the value of R as Z percent of the max rate set point where Z is real number between 0 and 100. For instance the target rate component can determines the value of R is equal to 85 or the max rate set point e.g. R 0.85 max rate set point . However it is to be appreciated that the value of R can be larger than the max rate set point. For example R can be equal to 1.5 max rate set point e.g. Z is equal to 150 . As such Z can be a real number greater than 100.

The compensation component offsets corrects or otherwise compensates for packet loss during content streaming. For example in one embodiment the compensation component identifies detects or otherwise determines packet loss experienced during content streaming. The compensation component compares an amount of the packet loss e.g. bits percentage etc. to a predetermined loss threshold and based on the comparison generates or determines a packet loss compensation factor compensation factor for determining a congestion window size. For instance if the amount of packet loss satisfies e.g. meets or exceeds the predetermined loss threshold then the compensation component can generate a compensation factor of C e.g. 25 where C is a real number between 0 and 100. However it is to be appreciated that C can be a real number larger than 100 e.g. C can be equal to 125 .

The limiting component controls limits or otherwise bounds a transmission control protocol TCP congestion window size based at least in part on the values of RTT e.g. determined using the monitoring component R e.g. determined using the target rate component and the compensation factor e.g. determined using the compensation component . For example in one implementation the limiting component sets a value of the maximum congestion window size W e.g. cwnd clamp based on the product of the compensation factor RTT and R e.g. W Compensation Factor RTT R . The maximum congestion window size W can be expressed as an integer value e.g. a ceiling function or a floor function can be implemented to calculate W . In one example where the target transmission rate R is 50 packets per second the queuing delay RTT is 200 ms and packet loss above the predetermined loss threshold is detected e.g. a Compensation Factor equal to 0.75 is generated the limiting component can set W to 8 packets per second e.g. 8 ceil 0.75 0.2 50 .

Non Limiting Examples of Methods for Dynamic Media Transmission Rate Control Using Congestion Window Size

Referring now to illustrated is an example methodology for dynamic media transmission rate control using congestion window size in accordance with various aspects described in this disclosure. At reference numeral a request to stream media content is received e.g. using the input component . The request can include explicit user inputs e.g. configuration selections question answer etc. such as from mouse selections keyboard selections and or speech. Additionally or alternatively the request can include data uploads wherein a data upload is a transfer of data from the user or a third party source e.g. computer or a computer readable medium . For instance an application e.g. a media player etc. executing on a user device can provide the request.

At reference numeral data related to the requested media content is selected for streaming based at least in part on a set of user criteria e.g. using the selection component . The user criteria can include but is not limited to a set of privileges associated with a user a type of user device and or a set of restrictions associated with the content e.g. copy protection digital rights management etc. . For instance the user can request streaming of a first video e.g. using the input component via a smart phone and a version of the first video adapted for display on a smart phone can be selected.

At reference numeral a transmission control protocol TCP congestion window size is bounded to control a rate of streaming e.g. using the trickle component . For example in one implementation a value of a maximum congestion window size e.g. cwnd clamp is determined based in part on a set of limiting criteria. The limiting criteria can include but are not limited to queuing delay or round trip time RTT a target transmission rate R and or a packet loss compensation factor discussed in greater detail with reference to . Typically a TCP congestion control stack continually increases a quantity W of packets in transmit for a congestion window until losses occur or the value of W is about or equal to the maximum congestion window size e.g. cwnd clamp . Bounding the value of W based on the limiting criteria limits a burst size that a TCP flow sends at respective RTTs. At reference numeral the content data is streamed at a rate less than or equal to the determined value of W e.g. using the transport component . For instance if W is set to 10 packets per second e.g. using the trickle component then the content data is streamed at a rate less than or equal to 10 packets per second.

At reference numeral a target transmission rate R is determined based on a set of targeting criteria e.g. using the target rate component . The set of targeting criteria can include but is not limited to an encoding rate of a user device and or a max rate set point. For example in one embodiment an encoding rate of a user device is determined as X packets per second where X is a real number greater than zero. The value of R is determined based at least in part on X. As an additional or alternative example in one embodiment an authorized user determines or sets a value of a max rate set point Y where Y is a real number greater than zero and the value of R is determined based at least in part on Y.

At reference numeral a transmission control protocol TCP congestion window size is set based at least in part on the values of RTT and R e.g. using the limiting component . For example in one implementation the value of the maximum congestion window size W e.g. cwnd clamp is based on the product of the RTT and R e.g. W RTT R . For instance where the target transmission rate R is 50 packets per second and RTT is 200 ms then W equals 10 packets per second e.g. 10 50 0.2 .

At reference numeral a determination is made whether a maximum transmission rate set point max rate set point has been provided by an authorized user e.g. using the set point component . At reference numeral if it is determined that a max rate set point has been provided by an authorized user Y at then a target transmission rate R is determined based in part on the max rate set point e.g. using the target rate component . For example in one embodiment the value of R is determined as Z percent of the max rate set point where Z is real number between 0 and 100. For instance the value of R can be determined to be 85 of the max rate set point e.g. R 0.85 max rate set point .

Returning to reference numeral if it is determined that a max rate set point has not been provided N at then at reference numeral a multimedia bit encoding rate encoding rate of the user device is determined e.g. using the inspection component . For example in one embodiment the user device and or applications executing on the user device are inspected and based on the inspection the encoding rate is determined e.g. using the inspection component . As an additional or alternative example in one embodiment an encoding rate indicator is received from the user device and or applications executing on the user device e.g. using the inspection component .

At reference numeral a value of R is determined based at least in part on the encoding rate of the user device e.g. using the target rate component . For example in one embodiment the value of R is determined as a percentage Z of the encoding rate where Z is a real number between 0 and 100. For instance the target rate component can determine the value of R is equal to 90 of the encoding rate e.g. R 0.90 encoding rate . However it is to be appreciated that Z can be a real number larger than 100 e.g. media can be transferred faster than an encoding rate of the media 

At reference numeral a transmission control protocol TCP congestion window size is set based at least in part on the values of RTT R and the compensation factor e.g. using the limiting component . For example in one implementation a value of the maximum congestion window size W e.g. cwnd clamp is set based on the product of the compensation factor RTT and R e.g. W Compensation Factor RTT R . The maximum congestion window size W can be expressed as an integer value e.g. a ceiling function or a floor function can be implemented to calculate W . In one example where the target transmission rate R is 50 packets per second the queuing delay RTT is 200 ms and packet loss above the predetermined loss threshold is detected e.g. a Compensation Factor equal to 1.25 is generated the limiting component can set W to 13 packets per second e.g. 13 ceil 1.25 0.2 50 .

Non Limiting Examples of Experimental Results for Dynamic Media Transmission Rate Control Using Congestion Window Size

One of ordinary skill in the art can appreciate that the various embodiments described herein can be implemented in connection with any computer or other client or server device which can be deployed as part of a computer network or in a distributed computing environment and can be connected to any kind of data store where media may be found. In this regard the various embodiments described herein can be implemented in any computer system or environment having any number of memory or storage units and any number of applications and processes occurring across any number of storage units. This includes but is not limited to an environment with server computers and client computers deployed in a network environment or a distributed computing environment having remote or local storage.

Distributed computing provides sharing of computer resources and services by communicative exchange among computing devices and systems. These resources and services include the exchange of information cache storage and disk storage for objects such as files. These resources and services also include the sharing of processing power across multiple processing units for load balancing expansion of resources specialization of processing and the like. Distributed computing takes advantage of network connectivity allowing clients to leverage their collective power to benefit the entire enterprise. In this regard a variety of devices may have applications objects or resources that may participate in the various embodiments of this disclosure.

Each computing object etc. and computing objects or devices etc. can communicate with one or more other computing objects etc. and computing objects or devices etc. by way of the communications network either directly or indirectly. Even though illustrated as a single element in network may comprise other computing objects and computing devices that provide services to the system of and or may represent multiple interconnected networks which are not shown. Each computing object etc. or computing objects or devices etc. can also contain an application such as applications that might make use of an API or other object software firmware and or hardware suitable for communication with or implementation of the various embodiments of this disclosure.

There are a variety of systems components and network configurations that support distributed computing environments. For example computing systems can be connected together by wired or wireless systems by local networks or widely distributed networks. Currently many networks are coupled to the Internet which provides an infrastructure for widely distributed computing and encompasses many different networks though any network infrastructure can be used for exemplary communications made incident to the systems as described in various embodiments.

Thus a host of network topologies and network infrastructures such as client server peer to peer or hybrid architectures can be employed. The client is a member of a class or group that uses the services of another class or group to which it is not related. A client can be a process e.g. roughly a set of instructions or tasks that requests a service provided by another program or process. The client may be or use a process that utilizes the requested service without having to know any working details about the other program or the service itself.

In a client server architecture particularly a networked system a client is usually a computer that accesses shared network resources provided by another computer e.g. a server. In the illustration of as a non limiting example computing objects or devices etc. can be thought of as clients and computing objects etc. can be thought of as servers where computing objects etc. provide data services such as receiving data from client computing objects or devices etc. storing of data processing of data transmitting data to client computing objects or devices etc. although any computer can be considered a client a server or both depending on the circumstances.

A server is typically a remote computer system accessible over a remote or local network such as the Internet or wireless network infrastructures. The client process may be active in a first computer system and the server process may be active in a second computer system communicating with one another over a communications medium thus providing distributed functionality and allowing multiple clients to take advantage of the information gathering capabilities of the server.

In a network environment in which the communications network bus is the Internet for example the computing objects etc. can be Web servers with which the client computing objects or devices etc. communicate via any of a number of known protocols such as the hypertext transfer protocol HTTP . Objects etc. may also serve as client computing objects or devices etc. as may be characteristic of a distributed computing environment.

As mentioned advantageously the techniques described herein can be applied to any device suitable for implementing various embodiments described herein. Handheld portable and other computing devices and computing objects of all kinds are contemplated for use in connection with the various embodiments e.g. anywhere that a device may wish to read or write transactions from or to a data store. Accordingly the below general purpose remote computer described below in is but one example of a computing device.

Although not required embodiments can partly be implemented via an operating system for use by a developer of services for a device or object and or included within application software that operates to perform one or more functional aspects of the various embodiments described herein. Software may be described in the general context of computer executable instructions such as program modules being executed by one or more computers such as client workstations servers or other devices. Those skilled in the art will appreciate that computer systems have a variety of configurations and protocols that can be used to communicate data and thus no particular configuration or protocol is to be considered limiting.

With reference to an exemplary remote device for implementing one or more embodiments includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit .

Computer includes a variety of computer readable media and can be any available media that can be accessed by computer . The system memory may include computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and or random access memory RAM . By way of example and not limitation memory may also include an operating system application programs other program modules and program data.

A user can enter commands and information into the computer through input devices . A monitor or other type of display device is also connected to the system bus via an interface such as output interface . In addition to a monitor computers can also include other peripheral output devices such as speakers and a printer which may be connected through output interface .

The computer may operate in a networked or distributed environment using logical connections to one or more other remote computers such as remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node or any other remote media consumption or transmission device and may include any or all of the elements described above relative to the computer . The logical connections depicted in include a network such local area network LAN or a wide area network WAN but may also include other networks buses. Such networking environments are commonplace in homes offices enterprise wide computer networks intranets and the Internet.

As mentioned above while exemplary embodiments have been described in connection with various computing devices and network architectures the underlying concepts may be applied to any network system and any computing device or system in which it is desirable to publish or consume media in a flexible way.

The word exemplary is used herein to mean serving as an example instance or illustration. For the avoidance of doubt this matter disclosed herein is not limited by such examples. In addition any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs nor is it meant to preclude equivalent exemplary structures and techniques known to those of ordinary skill in the art. Furthermore to the extent that the terms includes has contains and other similar words are used in either the detailed description or the claims for the avoidance of doubt such terms are intended to be inclusive in a manner similar to the term comprising as an open transition word without precluding any additional or other elements. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims should generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Computing devices typically include a variety of media which can include computer readable storage media. Computer readable storage media can be any available storage media that can be accessed by the computer is typically of a non transitory nature and can include both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable storage media can be implemented in connection with any method or technology for storage of information such as computer readable instructions program modules structured data or unstructured data. Computer readable storage media can include but are not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or other tangible and or non transitory media which can be used to store desired information. Computer readable storage media can be accessed by one or more local or remote computing devices e.g. via access requests queries or other data retrieval protocols for a variety of operations with respect to the information stored by the medium.

As mentioned the various techniques described herein may be implemented in connection with hardware or software or where appropriate with a combination of both. As used herein the terms component system and the like are likewise intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on computer and the computer can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers. Further a component can come in the form of specially designed hardware generalized hardware made specialized by the execution of software thereon that enables the hardware to perform specific function e.g. coding and or decoding software stored on a computer readable medium or a combination thereof.

The aforementioned systems have been described with respect to interaction between several components. It can be appreciated that such systems and components can include those components or specified sub components some of the specified components or sub components and or additional components and according to various permutations and combinations of the foregoing. Sub components can also be implemented as components communicatively coupled to other components rather than included within parent components hierarchical . Additionally it is to be noted that one or more components may be combined into a single component providing aggregate functionality or divided into several separate sub components and that any one or more middle layers such as a management layer may be provided to communicatively couple to such sub components in order to provide integrated functionality. Any components described herein may also interact with one or more other components not specifically described herein but generally known by those of skill in the art.

In view of the exemplary systems described above methodologies that may be implemented in accordance with the described subject matter will be better appreciated with reference to the flowcharts of the various figures. While for purposes of simplicity of explanation the methodologies are shown and described as a series of blocks the claimed subject matter is not limited by the order of the blocks as some blocks may occur in different orders and or concurrently with other blocks from what is depicted and described herein. Where non sequential or branched flow is illustrated via flowchart it can be appreciated that various other branches flow paths and orders of the blocks may be implemented which achieve the same or a similar result. Moreover not all illustrated blocks may be required to implement the methodologies described hereinafter.

In addition to the various embodiments described herein it is to be understood that other similar embodiments can be used or modifications and additions can be made to the described embodiment s for performing the same or equivalent function of the corresponding embodiment s without deviating there from. Still further multiple processing chips or multiple devices can share the performance of one or more functions described herein and similarly storage can be effected across a plurality of devices. Accordingly the invention is not to be limited to any single embodiment but rather can be construed in breadth spirit and scope in accordance with the appended claims.

