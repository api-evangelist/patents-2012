---

title: Storage manager for virtual machines with virtual storage
abstract: A storage manager connects containers of virtual machine (VM) images and virtual storage device data within hosts. The storage management provides a set of northbound application programming interfaces (APIs) that allow configuration of images associated with VM images and virtual storage devices provided to the operating systems and applications within virtual machine images. The northbound APIs, include methods for creating a virtual storage container that contains storage for the VM instance and also at least one virtual storage device to be provided to an operating system executed by the VM, a method for causing an attach of the virtual storage container to the host and a method for causing a deployment of the virtual storage device within the host. A set of southbound APIs are provided by the host, including at least a method that creates virtual storage devices and a method that attaches virtual storage devices to the host.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08904387&OS=08904387&RS=08904387
owner: International Business Machines Corporation
number: 08904387
owner_city: Armonk
owner_country: US
publication_date: 20120329
---
The present U.S. patent application is a Continuation of U.S. patent application Ser. No. 12 829 714 filed on Jul. 2 2010 and claims priority thereto under 35 U.S.C. 120.

The present invention is related to storage systems management software and more particularly to a storage manager for providing virtual disks to virtual machine images.

Virtualized computing systems also known as cloud computing systems provide large scale computing functionality in applications such as management of large databases and scientific computing and large quantity server functionality in applications such as web page servers and other Internet traffic handling. A virtualized computer system typically provides a platform for executing instances of different operating systems and hosting multiple applications within each operating systems instance. The computer hardware employed is also virtualized in the sense that multiple distributed processors and local memories form a large scale multiprocessing system with a distributed system memory.

Storage within present day virtualized computing systems is typically manually configured for each particular virtual machine by a system operator using management tools that configure the storage that will be provided to the particular virtual machine. The storage is typically tied to a particular physical disk although the same locations within the physical disk may be shared when the particular virtual machine is off line by storing a virtual machine image including the virtual machine s disk based storage at another off line location. Beyond the virtual storage devices within the virtual machine image storage within a virtualized computing system also stores and retrieves the image itself when the virtual machines are taken off line and then brought on line. In a typical storage assignment for a virtual machine image two disk images are used one for the virtual machine image i.e. the disk used by the operating system and another disk for providing the storage used by applications running within the virtual machine. Finally not only are virtual machine images managed to and from storage and virtual storage devices allocated at virtual image startup but at run time resources are dynamically managed in order to provide resources needed by various applications as well as the operating system virtual machine image.

However management of virtual machine images virtual disks provided to virtual machines and run time management of storage resources are performed separately according to different configurations specified by the system administrator s . Further some applications such as database servers are written to access raw storage devices and therefore use storage resource that are typically understood to correspond to the virtual machine image and not virtual disks provided by the virtual machine to applications.

Therefore it would be desirable to provide a method and program within a computer system that provide virtual disk storage to virtual computer system instances without requiring excessive system administrator intervention and that unify startup shutdown and run time storage management in a virtualized computer system.

The invention is embodied in a computer performed method that provides virtual disk storage to virtual computer system images.

The method implements a storage management program object that serves as an intermediary between storage subsystems and a host such as a virtual machine manager e.g. a hypervisor. The storage management program object can be configured through a single user interface and provides unified handling of virtual machine image storage retrieval as well as management of virtual disk volumes provided to the operating systems and applications within virtual machine images. The virtual machine images include the state of the corresponding virtual machines and the virtual storage supplied to the virtual machines so that the entire state of a virtual machine and its storage can be captured in a snapshot and copied stored when taking a virtual machine off line and loaded when restoring the virtual machine on the system. The storage management program object thus provides uniform connectivity between the various storage consumers within a virtualized computer system as well as centralized storage configuration management.

The foregoing and other objectives features and advantages of the invention will be apparent from the following more particular description of the preferred embodiment of the invention as illustrated in the accompanying drawings.

The present invention relates to storage within virtualized computing systems and in particular a storage management technique implemented by a storage manager program object that unifies the storage of virtual machine images with the contents of virtual storage devices used by the corresponding virtual machine operating system and applications. The resulting operation allows for facile and automatic control of deployment instantiation un deployment take down snapshot taking and storage of complete virtual machine environments in a single container per virtual machine.

Referring now to a networked computer system in which an embodiment of the present invention is practiced is depicted in a block diagram. A number of server groups A C are illustrated as connected via a wide area network WAN which may be an Internet connected network or other network. A plurality of workstation terminals are also shown as coupled to WAN and provided user communication with the networked computer system. In particular a user interface for configuring a storage manager in accordance with an embodiment of the present invention is accessible via workstation terminals . Exemplary server group A includes a plurality of processing nodes A D that each include processor cores A B external cache levels and system memory which may be accessed by other processing nodes A coupled to local bus and also by other server nodes coupled through WAN via network interface controller NIC . Program instructions forming storage manager objects services or programs in accordance with embodiments of the present invention as described below are generally present in system memory and executed by one or more of processor codes A B to provide control of virtual storage within the networked computer system. Physical storage within the networked computer system is provided by local storage A B associated with server groups A C and also networked storage subsystems C that are not associated with a particular server group.

The networked computer system of is only an example of a physical computer system in which virtualized operation of multiple operating system images is practical and is supported by the hardware configuration. However it is understood that techniques in accordance with embodiments of the present invention as described in further detail below can be implemented in a variety of computer systems both larger and smaller scaled.

Referring now to organization of a virtualized computer system that may be executed within the computer system of is shown in accordance with an embodiment of the present invention. A number of virtual machines VMs A C are illustrated each having an operating system OS and application APP image A. In the illustrative example one OS image is used per application i.e. an OS instance is generated for each application for which execution is requested by the system as is the case with many Web based computing models presently in use. However it is understood that there may be multiple applications executed within one virtual machine without substantially changing the manner in which the techniques of the present invention are performed. Each VM A C is also illustrated as having a virtual storage disk device A C one for each of VMs A C. Virtual storage devices A C represent the disk device assigned for use by the virtual machine which in the illustrative example is a single disk accessed by the applications and by the operating systems for external storage. The data stored in virtual storage devices A C may be filed based or block based and is allocated by a file based storage virtualizer or a block storage virtualizer according to the type of storage. Other virtual disk device storage associated with VMs A C is the storage used for paging the operating machine images themselves which is typically managed by the hypervisor from hypervisor file system storage . However in previous systems the block storage virtualizer and the file based storage virtualizer are typically managed separately from the hypervisor management of storage resources. In order to provide virtual disk storage to an application within a virtual machine the virtual machine environment is pre configured to allocate resources from the block storage virtualizer and the file based storage virtualizer .

In the present invention a storage manager object manages all virtual disk storage resources used by the VMs A C as well as the disk storage managed by hypervisor for storing the images of operating systems and applications within VMs A C. Storage manager object is aware of and manages connections from hypervisor file system storage which provides the storage for operating system application images as well as allocation of underlying virtual block storage devices B D and virtual file based storage devices A C. While storage manager in the example of uses an existing file based storage virtualizer and an existing block storage virtualizer to provide the virtual storage resources if a file based storage virtualizer were not available storage manger object could employ a file system to implement file based storage via block storage virtualizer and similarly if block storage virtualizer were not available virtual block storage could be implemented in a file provided via file based storage virtualizer . Both types of storage must generally be supported since application such as databases may include direct accesses to underlying block storage for speed while file based storage is the norm for datafiles.

Since storage manager manages all disk storage resources associated with VM A C images representing the complete state of each of VMs A C and their associated virtual storage devices A D can be contained as illustrated in and are referred to herein as virtual multi disks VMDs . VMDs A C are containers that hold the contents of corresponding VMs A B and are managed by storage manger to load deploy and unload un deploy the images of both the operating systems and applications A C as well as the virtual disk storage devices A D as a single unit. The connections for virtual storage devices A D shown mapped through hypervisor can be implemented in accordance with a particular embodiment of the present invention by generating virtual SCSI devices that are presented to hypervisor for use by corresponding VMs A C. Therefore storage manager which is effectively a middleware object that may be implemented as a platform service has control of VMDs A C and can then manage where VMDs A C are stored within physical storage as accessed by a physical storage system layer and can provide complete images of virtual machines and their associated data and other OS or application storage such as OS page files to hypervisor on demand. Or as illustrated in the storage managed by storage manager may be further managed through subsystems such as block storage virtualizer and file based storage virtualizer .

Referring now to a life cycle of a VMD as managed by storage manager is illustrated in a flow diagram. A base image exemplified by an open virtualization format OVF package is loaded from off line storage to generate a master image illustrated in the figure as an image of multiple volumes for generality but that may be a single master image volume. Master VMD image is cloned into one or more copied VMD clones before being deployed by hypervisor to become a corresponding one of VMs A C. Since the cloning process can be used to produce multiple copies it is possible to instantiate multiple identical VMs from a single master image . Master image represents the platform specific master copy of the configuration for the subject virtual machine and includes the virtual storage configuration and contents for use within the virtual machine as well as the virtual machine image itself. Clones start out as identical to master image but as VMs A C execute if a snapshot is taken a corresponding one of clones associated with the snapshot will be updated and will represent the current state of the corresponding one of VMs A C. The updated version of clones can then be stored as a new master image or as a separate instance of the corresponding one of VMs A C to be re deployed at next startup.

Referring now to a method of operation of storage manager is shown in a flow chart in accordance with an embodiment of the present invention. When a hypervisor prepares to start a VM decision if the VM is a new deployment decision the virtual machine image volume and virtual disks to be used by the operating system application are requested from the storage manager step and the storage manger establishes a VMD to contain the storage resources step . If the VM is not a new deployment decision then the master VMD image is retrieved from the previous snapshot or undeployment step . The VMD image is then cloned step and the storage manager establishes the links to the cloned VMD image through the hypervisor and optionally other virtualizers that interact with the VMs if needed step . The VM is then instantiated with its associated virtual storage devices step . During execution if a VM is to be un deployed or a snapshot taken decision VM execution is frozen and the snapshot of the VMD is updated in the associated clone and optionally in the master image repository if restart is not to be immediately performed from the clone decision .

Referring now to a block diagram of a storage management arrangement within a computer system according to an embodiment of the present invention is shown. A system director that provides administrative user interfaces configuration storage and retrieval and other tools for managing the computer system is coupled to storage manager object by a set of northbound application programming interfaces APIs that provide for retrieving views of containers managed by storage manager object and controlling the above described management of VMDs for VMs. Storage manager object is also coupled to the particular platform that supports VM execution via the hypervisors and in some cases storage virtualizers that are particular to the platform. Therefore to support storage manager object on a particular platform an interface implementing at least a minimum set of required southbound APIs is provided by a service or object within platform which can be hypervisors .

The following is an exemplary set of Northbound APIs supported by a storage management object in accordance with an embodiment of the present invention 

The following is an exemplary set of Southbound APIs that may be required by a storage management object in accordance with an embodiment of the present invention. The host platform generally the hypervisor and storage subsystems support these APIs.

The set of APIs above is not exhaustive and is only exemplary of a basic set of APIs that can be used by system director as provided by platform .

Referring now to one possible arrangement of physical storage of a VMD image is shown. A single physical storage device contains in a file or block based image all of the contents of VMD image . The storage configuration of is illustrative of both master and clone VMD image storage and the active storage with the VM itself as linked by file or block based pointers to the contents of physical storage device for all of the portions of the active VM image that are not presently within system memory. Further the copying of the master image and cloning may be performed as full copies or may represent cached differences according to pointers to the underlying file or block based image within physical storage device. Referring now to another arrangement of physical storage of VMD image is shown. VMD image is physically separated into a first VMD portion A stored in a first physical storage device A. For example VMD image portion A may contain contents such as the virtual storage devices used by the VM. Second VMD portion B is stored on a second physical storage device B and in the example may store the VM OS image itself and the backing store for OS paging. Referring now to another storage configuration is shown. The storage configuration shown in uses the scheme of in the master repository of VMD images but when the VMD master image is cloned the copy is made to a single VMD image within a single physical storage device C e.g. a physical storage device local to processing node s that will be executing the corresponding VM. The converse operation is also possible with a single bundled master image being cloned into a VMD having different portions stored on different physical storage devices as illustrated by which is a configuration useful for ensuring that master images are grouped together but that application data and OS file storage are maintained on separate physical devices during VM execution.

While the invention has been particularly shown and described with reference to the preferred embodiments thereof it will be understood by those skilled in the art that the foregoing and other changes in form and details may be made therein without departing from the spirit and scope of the invention.

