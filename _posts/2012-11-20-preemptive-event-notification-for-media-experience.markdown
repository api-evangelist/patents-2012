---

title: Preemptive event notification for media experience
abstract: A notification manager receives a request for an application to execute an action. The notification manager determines whether an event is scheduled to occur during a time that the application is executing the action. If so, the notification manager presents a notification of the event prior to the application executing the action, so as not to interrupt the execution of the action when it comes time for the event to occur.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09448685&OS=09448685&RS=09448685
owner: Amazon Technologies, Inc.
number: 09448685
owner_city: Reno
owner_country: US
publication_date: 20121120
---
A large and growing population of users enjoys entertainment through the consumption of media items including electronic media such as electronic books also referred to herein as ebooks electronic newspapers electronic magazines other electronic publications audio books and digital video. Users employ various electronic devices to consume such media items. Among these electronic devices are electronic book readers cellular telephones personal digital assistants PDAs portable media players tablet computers electronic pads netbooks desktop computers notebook computers and the like.

One feature common to many electronic devices is the ability to provide notifications to a user for scheduled or unscheduled events. For example if a calendar application running on the electronic device has an event scheduled for a certain time the device may provide a notification such as a visual indication or an audio indication of the event at the start time of the event or prior to the start time of the event e.g. a reminder . In certain cases where the user is using the electronic device for playback of a media item e.g. playing a movie reading an electronic book the notification may interrupt the user experience. For example it may be undesirable to receive notifications while the user is using the electronic device to perform certain actions. Conventionally the user has no way to manage when or how notifications are received when the electronic device is being used for other purposes.

The following description sets forth numerous specific details such as examples of specific systems components methods and so forth in order to provide a good understanding of several embodiments of the present invention. It will be apparent to one skilled in the art however that at least some embodiments of the present invention may be practiced without these specific details. In other instances well known components or methods are not described in detail or are presented in simple block diagram format in order to avoid unnecessarily obscuring the present invention. Thus the specific details set forth are merely exemplary. Particular implementations may vary from these exemplary details and still be contemplated to be within the scope of the present invention.

Embodiments of a method and apparatus are described for preemptive event notification to improve the media experience. In one embodiment a notification manager controls notifications provided by a user device while the user device is executing an action such as for example playing a media item. In one embodiment in response to a request to execute the action the notification manager provides a number of notification management options to the user. The user may select one of the notification management options in order to control how notifications are delivered during the running time of the action. In response to the selection the notification manager may control the delivery of the notifications. The notification management options may include for example disabling notifications for an event scheduled to occur during the running time of the action receiving notifications as scheduled receiving notifications of events after the action is completed and or delaying the execution of the action until after a scheduled event has occurred.

In one embodiment the notification manager can preemptively provide notifications prior to executing the action. For example in response to a request to begin playback of a media item at a start time the notification manager can determine an end time of the media item. The end time may be equal to the start time plus a running time of the media item. The notification manager may then determine whether a calendar application or other scheduling program includes an event scheduled for an event time that falls between the start time and end time of the media item. If so the notification manager can provide a notification of the event prior to beginning playback of the media item. In one embodiment the notification manager can provide the same or similar user selectable notification management options along with the preemptive event notification.

Using the techniques and methodologies described herein the notification manager can improve the user experience with respect to receiving notifications. Preemptively providing the notifications prevents an action such as the playback of a media item from being interrupted. The notification manager also provides the user with control over how the notifications are delivered so that the user may receive the notifications according to their own personal preferences. For example during playback of a movie the user may desire to receive notifications from certain applications e.g. calendar but disable notifications from other applications e.g. email . The notification manager is customizable to serve an individual user s needs which can improve the overall user experience.

In one embodiment the notification interface includes a list of scheduled events and a list of notification management options . The list of scheduled events may include events included in a calendar application or other scheduling program that have an associated event time that falls between a start time and an end time of the media item being played in media player . The notification manager may query the calendar application to determine if any events are scheduled during the running time of the media item and display those events in the list of scheduled events .

The list of notification management options may include one or more options for how to deliver notifications corresponding to the events in the list of scheduled events . For example the options may include dismissing the notification receiving the notification again at the regularly scheduled time thereby interrupting playback of the media item receiving the notification once playback of the media item has completed or delaying playback of the media item until after the scheduled event. The user can select one of these options and then proceed with playback of the media item if appropriate. In one embodiment if there are multiple events in the list of scheduled events a user may be able to separately select options from the list of notification management options for each event. In another embodiment the options in the list of notification management options may vary depending on the type of event or on the application that that will be executing the action. Additional details regarding the management of notifications will be provided below.

In one embodiment notification manager controls the delivery of notifications through device GUI . For example notification manager can receive user input through device GUI regarding how to handle the delivery of notifications. In addition notification manager can preemptively provide notifications prior to performing an action e.g. playing a media item based on information received from action execution module and event scheduling module . In one embodiment notification manager may receive a request for action execution module to execute an action e.g. start playback of a media item . In another embodiment the request may be received directly by action execution module which may provide an indication to notification manager that action execution module is going to execute the action. For example the request may be for a media player to begin playback of a media item e.g. a movie or video at a start time e.g. immediately in five minutes at 11 00 pm . In other embodiments action execution module may be some other application capable of performing the requested action. In response notification manager may determine an end time of the media item . In one embodiment notification manager reads metadata associated with the media item to determine a running time of the media item . In one embodiment both the media item and the metadata are stored in a data store associated with action execution module . Notification manager may determine the end time by adding the running time to the start time of the media item .

In one embodiment notification manager determines whether there are any events scheduled between the start time and end time of the media item that would have an associated notification. For example notification manager may query event scheduling module e.g. a calendar application which may scan event entries in an associated data store . Either event scheduling module or notification manager may compare the event times associated with event entries to the start and end times of media item . If one of the event times falls between the start and end times of media item notification manager may preemptively provide a notification through device GUI prior to performing the requested action e.g. playing media item in media player . For example as described above with respect to notification manager may provide a notification to the user indicating that there is an event scheduled to occur during the playback of the media item .

In one embodiment notification manager may additionally provide notification management options to the user through device GUI . For example notification manager may provide options including dismissing the notification receiving the notification again at the regularly scheduled time thereby interrupting playback of the media item receiving the notification once playback of the media item is completed or delaying playback of the media item until after the scheduled event. Notification manager may receive a selection of one of the options from the user. In one embodiment notification manager may store this user selection in a data store associated with notification manager . Data stores and may be part of a common storage device or separate storage devices. In addition notification manager may also store user preferences in data store . User preferences may include past user selections for certain specific or types of actions notifications. In one embodiment notification manager may learn a user s preferences based on their past selections and in some cases automatically handle notifications according to user preferences .

In response to receiving the user selections with regard to notification management options notification manager may control delivery of notifications based on the selections . For example if the user selects to dismiss the notification notification manager will not provide another notification for the associated event. Alternatively if the user selects to receive the notification at the regular time notification manager may provide the notification at or before the event time thereby interrupting the playback of media item .

In one embodiment application interface module handles communication between notification manager and other applications such as action execution module . For example action execution module may provide a message indicating that a request was received to perform an action e.g. play media item on media player . Application interface module may receive this message and send a request back to action execution module for information about the start time and running time of the action e.g. from metadata . Action execution module can then provide the requested information such as the start time and running time to application interface module . In one embodiment application interface module may store this received information as action data in data store .

In one embodiment scheduling interface module handles communication between notification manager and event scheduling module such as a calendar application. For example in response to receiving information about an action to be executed scheduling interface module may request information about upcoming events from event scheduling module . For example the request may be for any events scheduled during some default period of time e.g. the next 24 hours . In one embodiment event scheduling module may return a list of events corresponding to event entries in data store . Each event may have a corresponding event time representing either the time that the event is supposed to begin or a time at which a notification for the event is supposed to be provided to the user. In one embodiment scheduling interface module may store this information as event data in data store .

In one embodiment time comparison module compares the running times of an action received by application interface module with the event times received by scheduling interface module . For example if the start time of the action received by application interface module is 2 30 pm and the running time is 90 minutes time comparison module can determine that the end time of the action is 4 00 pm. Time comparison module can then compare the event times of events received by scheduling interface module to the start and end times of the action. Time comparison module can identify events with event times that fall between 2 30 pm and 4 00 pm. Time comparison module can mark these events as events for which a preemptive notification may be sent. In one embodiment time comparison module identifies these events in notification data stored in data store . In one embodiment once time comparison module determines the running time of the action then scheduling interface module can request information on events during that running time. In this manner scheduling interface module does not request information on any events that may not be relevant to the current action.

In one embodiment notification generator module generates notifications to be sent to the user e.g. through device GUI . For example notification generator module may read the events in notification data identified by time comparison module as having preemptive notifications. Notification generator module may generate a notification of these events and provide the notifications to the user. In one embodiment the notifications may be provided along with a number of notification management options. These options may be specific to the particular event or to the type of event and may also be stored for example in notification data . In one embodiment notification generator module may also receive a user selection of one or more of the provided notification management options. Notification generator module may store these received selections as user data in data store . Notification generator module may determine if additional notifications are needed and control the delivery of future notifications as specified by the stored selections. In another embodiment event scheduling module may generate and provide notifications for scheduled events at the direction of notification generator module . For example if time comparison module determines that there is an event scheduled during the running time of the action notification generator module may provide an indication to event scheduling module of if and or when to send out a notification. Event scheduling module may then generate and send out the notification through its own user interface.

Referring to at block method receives a request to begin playback of a media item. In one embodiment notification manager receives the request from a user e.g. through device GUI and forwards the request to media player . In another embodiment the media player receives the request directly and forwards an indication of the request to notification manager which is received by application interface module . In one embodiment the request is to begin playback of a media item such as a movie video song or audio clip. In other embodiments however the request may be to perform some other action.

At block method determines an end time of the media item. In one embodiment the end time of the media item may be included with the received request. In another embodiment application interface module may request information from media player from which the end time may be determined. For example application interface module may request the running time of the media item which may be added to the start time of the media item to determine the end time. In yet another embodiment application interface module may directly request the end time of the media item from media player .

At block method determines that an event is scheduled during the run time of the media item. In one embodiment scheduling interface module issues a request to event scheduling module for any events scheduled between the start time and end time of the media item. In another embodiment scheduling interface module issues a request to event scheduling module for upcoming events and their associated event times. Time comparison module may compare the event times to the start and end time of the media item to determine if any of the associated events are scheduled to occur during the run time of the media item. Time comparison module may save the results of this determination as notification data in data store .

At block method presents a notification of the event prior to playback of the media item. In one embodiment notification generation module generates a preemptive notification for events that are determined to occur during playback of the media item. Notification generation module may present the notification to the user through device GUI which is displayed on a display device of computing system . In one embodiment the notification may include an indication of the event the event time and one or more notification management options as described above. In one embodiment the notification may include notification interface as illustrated in .

Referring to at block method receives a request to begin playback of a media item. In one embodiment notification manager receives the request from a user e.g. through device GUI and forwards the request to media player . In another embodiment the media player receives the request directly and forwards an indication of the request to notification manager which is received by application interface module . In one embodiment the request is to begin playback of a media item such as a movie video song or audio clip. In other embodiments however the request may be to perform some other action.

At block method reads the running time of the media item from metadata associated with the media item. In one embodiment application interface module of notification manager sends a request to media player for the running time of the media item. Media player may look up the media item in data store and read the metadata associated with the media item . In one embodiment a value indicating the running time is stored in the metadata . In other embodiments the running time may be stored with the media item itself or in some other location. Media player returns an indication of the running time to application interface module .

At block method adds the running time to the start time of the media item in order to determine an end time of the media item. In one embodiment application interface module computes the end time of the media item based on the start time received in the request and the running time received from media player . In another embodiment media player computes the end time of the media item or already stores the end time e.g. in data store and returns the end time directly to notification manager .

At block method requests event data from calendar and or any other applications that may have scheduled events for events scheduled between the start time and end time of the media item as determined at block . In one embodiment scheduling interface module issues a request to calendar for any events scheduled between the start time and end time of the media item. In another embodiment scheduling interface module issues a request to calendar for upcoming events and their associated event times. At block method reads an entry from a calendar application to determine an event time of a scheduled event associated with the entry. Calendar may have an associated data store that includes one or more event entries . Each of event entries may correspond to a scheduled event and have an associated event time. The event time can represent the time the event is scheduled to start a time that a notification or reminder for the event is supposed to be sent a specific time that is selected or input by the user or some other time. Calendar can provide the event times to notification manager in response to the request from scheduling interface module . In another embodiment calendar application presents an application programming interface API that notification manager can call in order to identify any scheduled events and the associated event times.

At block method determines if the event time falls between the start time and the end time of the media item. In one embodiment time comparison module may compare the event times received at block to the start and end time of the media item determined at blocks and to determine if any of the associated events are scheduled to occur during the run time of the media item. In another embodiment time comparison module compares the event time to only one of the start time and the end time for example to determine if the event time falls after the start time or before the end time respectively. Time comparison module may save the results of this determination as notification data in data store . In another embodiment an actual comparison is not performed but rather scheduling interface module requests event times that fall between the start time and the end time of the media item. If scheduling interface module receives an indication of an event in response to that request scheduling interface module may proceed as if the event time falls between the start time and the end time of the media item.

If at block method determines that an event time falls between the start time and the end time of the media item at block method presents a notification and optionally one or more notification management options to a user. In one embodiment notification generation module generates a preemptive notification for events that are determined to occur during playback of the media item. Notification generation module may provide the notification to the user through device GUI . In one embodiment the notification may include an indication of the event the event time and one or more notification management options as described above. In one embodiment the notification may include notification interface as illustrated in . In addition method receives a user selection of one of the provided notification management options. For example the user may select to dismiss the notification receive the notification again at the regularly scheduled time thereby interrupting playback of the media item or delay playback of the media item until after the scheduled event.

At block method controls delivery of notifications based on the received user selection. For example if the user selects to dismiss the notification notification generator module will not send another notification for the event. Also if the user selects to receive the notification as regularly scheduled e.g. at the event time or at a predetermined time prior to the event time or at some other user specified time notification generator module will generate another notification and provide it to the user as scheduled.

At block method begins playback of the media item. If at block method determines that the event time does not fall between the start time and the end time of the media item method may proceed directly to block bypassing blocks and .

Referring to at block method receives a request to execute an action. In one embodiment notification manager receives the request from a user e.g. through device GUI and forwards the request to action execution module . In another embodiment the action execution module receives the request directly and forwards an indication of the request to notification manager which is received by application interface module . In one embodiment the request is to begin playback of a media item such as a movie video song or audio clip. In other embodiments however the request may be to perform some other action such as reading an electronic book e book magazine or article playing a game attending a web based meeting or presentation or other action.

At block method provides a number of notification management options to a user of the user device. In one embodiment notification generator module generates the notification management options or reads them from notification data . The notification management options may be tailored to the specific action or event or to the type of action or event. For example if the action is not time bounded e.g. reading a book as opposed to watching a video that has a fixed know length the notification management options may include the option to silence all notifications for some period of time e.g. 1 hour . In other embodiments the options may be to silence notifications for selected events for that period of time. Other options may include silencing notifications while the action is being performed e.g. while the user is reading the book or allowing notifications to be received as normally scheduled. If the action is time bounded the notification management options may include for example silencing notifications for all or just certain events for the running time of the action or allowing notifications to be received as scheduled.

In one embodiment rather than providing options to the user notification manager automatically selects how to control delivery of notifications on behalf of the user. For example notification manager may learn a user s preferences based on their previous selections. In one embodiment after some threshold number of selections for a certain type of event has been reached notification manager may automatically make that selection to control delivery of notifications until instructed otherwise by the user.

At block method receives a user selection of one of the provided notification management options. In one embodiment notification manager may receive a user selection input by the user of user device e.g. through device GUI . Referring to the notification interface of the notification management options may be displayed and selected by the user. For example the user may select one or more of the options using radio buttons check boxes HTML links input fields etc.

At block method controls delivery of notifications during execution of the action based on the user selected notification management option. In one embodiment notification generator module controls notifications based on the type of action. Certain actions may have a fixed length such as a movie video meeting etc. Other actions may not be time bounded such as reading an e book playing a game etc. Of those actions that have a fixed length notification manager may handle notifications for events that are previously scheduled e.g. calendar entries tasks as well as those which are not scheduled e.g. email message text messages phone calls . Thus depending on the categorization of the action being performed and the event associated with a notification method can control delivery of notifications differently as described below.

Referring to at block method receives a request to execute an action. At block method determines a running time of the action. In one embodiment application interface module determines the running time of the action. The running time may be representative of how long the action will take and or for how long the notification management options that are selected by the user will be enforced by notification manager . There are a number of different ways to determine the running time and different ways may be used depending on the type of action. In one embodiment at block method measures the actual time for execution of the action. For example application interface module can receive information from action execution module indicating how long action execution module is actually executing the action. Thus if the action is reading an e book action execution module can report how long the e book reading application is actually active. For example application interface module may receive a message from the application indicating that the action is complete at which point notification manager can optionally end the notification management option selected by the user. In this embodiment notifications may not be received between the start and the end of the action. In another embodiment at block method determines a scheduled running time from metadata associated with the action. Application interface module may query action execution module to read metadata which may include the running time of a fixed length action. For example if the action is playing a movie or other media file the metadata associated with the movie may include a value representing the running time of the move. Action execution module may return this value to notification manager in response to the request and notification manager may enforce the selected notification management options for that period of time. In yet another embodiment at block method determines an estimated running time based on past behavior of the user or other users. For example application interface module may maintain information about past user behavior as user data in data store . Each time an action is performed on behalf of a user application interface module may record how long it takes to perform the action. For example if the action is reading an e book application interface module may record how long the user reads the e book. Application interface module may also accumulate data from multiple users to determine how long users typically read any e book for or read this particular e book for. In one embodiment application interface module may use an average of these values as the running time. In other embodiments some other value may be used such as the median value the highest value etc. In yet another embodiment application interface module may use a typical or average reading speed for the user and calculate how long at that speed it may take the user to finish all or a portion e.g. chapter section of the e book. Application interface module may use that calculated value as the running time. Regardless of how the running time is determined application interface module may store the running time as action data in data store .

At block method identifies a selected notification management option. The selection may be received from the user through device GUI . In one embodiment at block method receives the selection of disabling notifications while the action is executing. This could for example be based on the running time of the action. Thus notification generator module may disable notifications for a certain period of time depending on how the running time was calculated at blocks . At block method receives the selection of receiving notifications as regularly scheduled. Thus notification generator module may generate and provide notifications as scheduled even while the action is executing. In another embodiment the selection may indicate some other time at which the user wishes to receive the notification. At block method receives the selection of delaying execution of the action until after the scheduled event. At block method receives the selection of delaying notifications until after then action has completed executing. In this embodiment the notifications for any events having an event time scheduled to occur during the running time of the action may be delayed. Thus the notifications will not be received while the action is being executed but will all be received once the action is complete.

At block method controls delivery of notifications during execution of the action based on the user selected notification management option. At block method executes the requested action.

The user devices may be portable computing devices such as electronic book readers or tablet computers e.g. that include a book reader application . Other examples of portable computing devices include cellular telephones personal digital assistants PDAs portable media players netbooks and the like. The user devices may also be non portable computing devices such as a desktop computer a set top box associated with a television a gaming console and so on. The user devices are variously configured with different features to enable consumption of one or more types of digital content and electronic publications. The digital content and electronic publications may include electronic books ebooks such as electronic textbooks and or other electronic publications electronic versions of publications such as electronic magazines digital newspapers digital audio books electronic journals real simple syndication RSS feeds etc. The publications may also include digital video e.g. movies television short clips etc. images e.g. art photographs etc. and multi media content.

The digital content providing system may correspond to any feature or combination of features for providing electronic publications or other digital content to the user devices . The digital content providing system may include a network accessible server based functionality digital content providing server various data stores not shown and or other data processing equipment. The digital content providing system may be implemented by a single machine or a cluster of machines. The digital content providing system may include one or more machines e.g. one or more server computer systems routers gateways etc. that have processing and storage capabilities to provide the server based functionality.

In one embodiment the digital content providing server corresponds to an entity which provides electronic publications e.g. electronic books to users upon the users purchase or download of the items. In this role the digital content providing server may essentially act as a bookseller or the like. In other cases the digital content providing server corresponds to an entity which provides electronic publications to users on a non fee basis or on the basis of some other type of alternative compensation arrangement. Thus the term a provider of items should be construed broadly to encompass educational institutions governmental organizations libraries non profit organizations retailers auction services and so on or some cooperative combination of any two or more entities.

The digital content providing server may deliver and the user devices receive electronic publications or other media items search results upgrades and or other information via the network . For example the user devices may download or receive ebooks from the digital content providing server . The digital content providing server may also receive various requests e.g. search queries instructions and other data from the user devices via the network .

Communication between the user devices and the item providing system may be enabled via any communication infrastructure. One example of such an infrastructure includes a combination of a wide area network WAN and wireless infrastructure which allows a user to use the user devices to purchase digital content e.g. electronic publications and consume the digital content without being tethered to the digital content providing system via hardwired links. The wireless infrastructure may be provided by one or multiple wireless communications systems such as wireless communication system . In one embodiment wireless communication system may be a wireless fidelity WiFi hotspot connected with the network . Wireless communication system may also be a wireless carrier system that can be implemented using various data processing equipment communication towers etc. Alternatively or in addition the wireless carrier system may rely on satellite technology to exchange information with the user devices .

The communication infrastructure may also include a communication enabling system that serves as an intermediary in passing information between the digital content providing system and the wireless communication system . The communication enabling system may communicate with the wireless communication system e.g. a wireless carrier via a dedicated channel and may communicate with the digital content providing system via a non dedicated communication mechanism e.g. a public Wide Area Network WAN such as the Internet .

In addition to wirelessly connecting to wireless communication system user devices may also wirelessly connect to other user devices . For example user device may form a wireless ad hoc peer to peer network with user device using WiFi Bluetooth or other wireless communication protocols.

In one embodiment each of user devices include notification manager . As described above notification manager may be configured to manage notifications on user device including to provide preemptive notifications prior to beginning playback of a media item or performing some other action. Notification manager may provide a user with a list of notification management options and control notifications based on a user selection of one of the options. Additional details of notification manager are provided above.

The exemplary computer system includes a processing device processor a main memory e.g. read only memory ROM flash memory dynamic random access memory DRAM such as synchronous DRAM SDRAM a static memory e.g. flash memory static random access memory SRAM and a data storage device which communicate with each other via a bus .

Processing device represents one or more general purpose processing devices such as a microprocessor central processing unit or the like. More particularly the processing device may be a complex instruction set computing CISC microprocessor reduced instruction set computing RISC microprocessor very long instruction word VLIW microprocessor or a processor implementing other instruction sets or processors implementing a combination of instruction sets. The processing device may also be one or more special purpose processing devices such as an application specific integrated circuit ASIC a field programmable gate array FPGA a digital signal processor DSP network processor or the like. The processing device is configured to execute the notification manager for performing the operations and steps discussed herein.

The computer system may further include a network interface device . The computer system also may include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse and a signal generation device e.g. a speaker .

The data storage device may include a computer readable medium on which is stored one or more sets of instructions e.g. instructions of notification manager embodying any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory and or within processing logic of the processing device during execution thereof by the computer system the main memory and the processing device also constituting computer readable media. The instructions may further be transmitted or received over a network via the network interface device .

While the computer readable storage medium is shown in an exemplary embodiment to be a single medium the term computer readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term computer readable storage medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present invention. The term computer readable storage medium shall accordingly be taken to include but not be limited to solid state memories optical media and magnetic media.

The user device includes one or more processors such as one or more CPUs microcontrollers field programmable gate arrays or other types of processors. The user device also includes system memory which may correspond to any combination of volatile and or non volatile storage mechanisms. The system memory stores information which provides an operating system component various program modules and or other components. The user device performs functions by using the processor s to execute instructions provided by the system memory .

The user device also includes a data storage device that may be composed of one or more types of removable storage and or one or more types of non removable storage. The data storage device includes a computer readable storage medium on which is stored one or more sets of instructions embodying any one or more of the methodologies or functions described herein. As shown the instructions may reside completely or at least partially within the computer readable storage medium system memory and or within the processor s during execution thereof by the user device the system memory and the processor s also constituting computer readable media. The user device may also include one or more input devices keyboard mouse device specialized selection keys etc. and one or more output devices displays printers audio output mechanisms etc. .

The user device further includes a wireless modem to allow the user device to communicate via a wireless network e.g. such as provided by the wireless communication system and or with other computing devices such as remote computers the item providing system online book stores electronic catalogs for libraries and so forth. The wireless modem may allow the user device to handle both voice and non voice communications such as communications for text messages multimedia messages media downloads web browsing etc. with the wireless communication system . The wireless modem may provide network connectivity using any type of mobile network technology including for example cellular digital packet data CDPD general packet radio service GPRS enhanced data rates for GSM evolution EDGE universal mobile telecommunications system UMTS 1 times radio transmission technology 1 RTT evaluation data optimized EVDO high speed downlink packet access HSDPA WiFi etc. The wireless modem may generate signals and send these signals to power amplifier amp for amplification after which they are wirelessly transmitted via antenna . In addition to sending data antenna also receives data which is sent to wireless modem and transferred to processor s .

In one embodiment user device includes an optical sensor . The optical sensor may be a low resolution camera e.g. having 0.2 or 0.3 Megapixels that takes images e.g. of a user s eyes on a periodic basis. Alternatively the optical sensor may have a higher resolution such as 1 Megapixel up to 10 or more Megapixels. The optical sensor may be positioned such that images are taken of a user s face while the user holds the user device in front of his face in a standard reading position. Therefore the optical sensor may be used to track user eye movement during reading.

In one embodiment user device includes one or more additional sensors such as a physical contact sensor close proximity sensors or motion sensors. The sensors can detect the presence of human body parts and convey information regarding the detected presence to processor s . In one embodiment the sensors may be capacitive sensors that are configured to measure capacitance generated by the presence of the human body part using any one of various techniques known in the art for example relaxation oscillation a current verses voltage phase shift comparison resistor capacitor charge timing capacitive bridge division charge transfer sigma delta modulation or charge accumulation. In an alternative embodiment the sensors may also be optical e.g. infrared sensors that use an emitter and receiver pair to detect the presence of opaque objects. Alternatively the sensors may be inductive sensors which include an inductive loop. When the presence of a human body part or metal object is brought close to the inductive sensor an induction of the inductive loop changes causing the human body part to be detected. Alternatively the sensors may be ultrasonic sensors that emit an ultrasonic signal and measure a time duration between when a signal is transmitted and the reflection of that signal received a.k.a. flight response . The sensors may also include other types of sensors such as those that operate using the detection principles of resistive e.g. analog resistive digital resistive or residual resistive surface acoustic wave electromagnetic near field imaging or other technologies. In one embodiment multiple different types of sensors are used. Though the detected object is described herein as a human body part other types of objects may also be detected depending on the sensing technologies used.

In one embodiment the additional sensors include a motion sensor such as an accelerometer or one or more gyroscopes. The user device may use motion data from motion sensors to determine whether a user is holding the user device . For example if the user device experiences constant minor accelerations it may be determined that the user device is being held in a user s hand. Additionally if the user device is at a particular angle detectable based on acceleration readings from an accelerometer it may be determined that the user device is being rested on a user s leg during reading.

The processor s may include sensor circuitry e.g. sensor device drivers that enables the processor s to interpret signals received from the optical sensor s and or additional sensors . In one embodiment the optical sensors and or additional sensors output raw sensor data. In another embodiment the optical sensors and or additional sensors output fully processed signals to the processor s . For example the additional sensors may output a user contact no user contact signal using a single line interface or a multi line interface. In another embodiment the additional sensors output for example positional data and or object presence data e.g. of a human body part to the processors without first processing the data. In either instance the processors may use the sensor circuitry to process and or interpret the received data. If data is received from multiple sensors processing the data may include averaging the data identifying a maximum from the data or otherwise combining the data from the multiple sensors.

In the above description numerous details are set forth. It will be apparent however to one of ordinary skill in the art having the benefit of this disclosure that embodiments of the invention may be practiced without these specific details. In some instances well known structures and devices are shown in block diagram form rather than in detail in order to avoid obscuring the description.

Some portions of the detailed description are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the above discussion it is appreciated that throughout the description discussions utilizing terms such as determining identifying adding selecting or the like refer to the actions and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical e.g. electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

Embodiments of the invention also relate to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards or any type of media suitable for storing electronic instructions.

The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct a more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.

It is to be understood that the above description is intended to be illustrative and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reading and understanding the above description. The scope of the invention should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled.

