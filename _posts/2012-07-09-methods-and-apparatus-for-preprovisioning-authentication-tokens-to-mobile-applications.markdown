---

title: Methods and apparatus for preprovisioning authentication tokens to mobile applications
abstract: In some embodiments, a non-transitory processor-readable medium includes code to cause a processor (e.g., on an enterprise server) to receive, from a communication device, a request for a client application, and in response to the request provision the installation file data associated with the client application to include an application token associated with the client application. The code is to cause the processor to send the installation file that includes the application token to the communication device such that the communication device uses the installation file to install the client application that authenticates to an application module using the application token extracted from the installation file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08473749&OS=08473749&RS=08473749
owner: Ping Identity Corporation
number: 08473749
owner_city: Denver
owner_country: US
publication_date: 20120709
---
This application is related to co pending U.S. patent application Ser. No. 13 544 565 filed Jul. 9 2012 and entitled Methods And Apparatus For Delegated Authentication Token Retrieval which is incorporated herein by reference in its entirety.

Some embodiments described herein relate generally to using an application distribution module to provision an application token in an installation file associated with a client application. This allows the client application to be downloaded and installed on a communication device without the need of further authorization requests to other devices. Some of the embodiments described herein also relate to the methods and apparatus used for requesting the application tokens and provisioning the application tokens in the installation file associated with each client application.

Open Authorization OAuth is an open standard protocol for authorization and allows a user such as an enterprise employee to grant a third party application access to information associated with that user stored at a given location e.g. on given website without sharing that user s account credentials e.g. password or the full extent of that user s data. Some known systems use OAuth tokens to authenticate applications for users of a variety of devices e.g. a laptop computer a personal digital assistant PDA a standard mobile telephone a tablet personal computer PC etc. . In such known systems however each application requests tokens individually from an appropriate OAuth authorization server. This typically involves significant use of available bandwidth and processor time and generally leads to a usability burden for the user. Additionally the enterprise for which the employee works is not directly involved in the issuance of application tokens to the applications and hence is removed from a desired level of policy control over the users access to applications.

Accordingly a need exists for methods and apparatus for authenticating multiple applications installed on a communication device without each application having to request tokens individually from an appropriate OAuth authorization server. Additionally or alternatively a need exists for methods and apparatus to increase the involvement of the enterprise in having control of over the user s access to applications.

In some embodiments a non transitory processor readable medium includes code to cause a processor e.g. on an enterprise server to receive from a communication device a request for a client application and in response to the request provision the installation file data associated with the client application to include an application token associated with the client application. The code is to cause the processor to send the installation file that includes the application token to the communication device such that the communication device uses the installation file to install the client application that authenticates to an application module using the application token extracted from the installation file.

In some embodiments a non transitory processor readable medium includes code to cause a processor e.g. on an enterprise server to receive from a communication device a request for a client application and in response to the request provision the installation file data associated with the client application to include an application token associated with the client application. The code is to cause the processor to send the installation file that includes the application token to the communication device such that the communication device uses the installation file to install the client application that authenticates to an application module using the application token extracted from the installation file.

In such embodiments the communication device can be for example a personal computing device such as a desktop computer a laptop computer a personal digital assistant PDA a standard mobile telephone a tablet personal computer PC and or the like. The communication device can include a memory and a processor. The client applications installed on the communication device can be for example accounting applications sales force applications payroll applications and or the like. In other embodiments the client applications can be any other enterprise or third party applications configured to execute at the communication device. In some embodiments the application distribution module can be a hardware and or software module stored in the memory and executed in the processor of the enterprise server.

In some embodiments the enterprise server can be for example a web server an application server a proxy server a telnet server a file transfer protocol FTP server a mail server a list server a collaboration server and or the like. The enterprise server can include a memory and a processor. The memory of the enterprise server can contain data associated with an application distribution module a token module and an application module.

The application distribution module at the enterprise server can be configured to receive from an installation client at a communication device requests for one or many client applications via a network. The network can be any type of network such as a local area network LAN a wide area network WAN a virtual network a telecommunications network implemented as a wired network and or wireless network. In response to the request the application distribution module can be configured to send to a token module a request for an application token associated with the client application. In some embodiments the token module can be a hardware and or software module stored in the memory and executed in the processor of the enterprise server. In response to the request for an application token the application distribution module can be configured to receive an application token from the token module. In some embodiments the application distribution module can also be configured to provision the installation file data associated with the client application to include the application token installation file . In such embodiments the application distribution module can be configured to send the installation file that includes the application token to the communication device such that the communication device can install the client application using the installation file. In some embodiments the client application can authenticate to an application module remote from the communication device using the application token extracted from the installation file.

In such embodiments the installation client can be a hardware and or software module stored in the memory and or executed in the processor of the communication device. The installation client can be configured to send one or multiple request s for one or multiple client application s to the application distribution module on an enterprise server via a network. In response to each client application request the installation client can be configured to receive from the application distribution module an installation file provisioned with the associated application token for the authorized client application for the user of the communication device. The installation client can be configured to install at the communication device the client application using the installation file. The installation client can also be configured to extract the application token from the installation file such that the client application can be configured to be authenticated at an application module remote from the communication device using the application token.

As used in this specification the singular forms a an and the include plural referents unless the context clearly dictates otherwise. Thus for example the term a module is intended to mean a single module or a combination of modules.

The communication device can be a personal computing device such as a desktop computer a laptop computer a personal digital assistant PDA a standard mobile telephone a tablet personal computer PC and or so forth. The communication device includes a memory and a processor . In some embodiments the communication device is configured to request and receive client applications from the enterprise server and can access application modules and or at the enterprise server and or application server via the network as described in further detail herein.

The memory can be for example a random access memory RAM a memory buffer a hard drive a database an erasable programmable read only memory EPROM an electrically erasable read only memory EEPROM a read only memory ROM and or so forth. In some embodiments the memory stores instructions to cause the processor to execute modules processes and or functions associated with such an application token provisioning based application authorization system .

The processor can be a general purpose processor a Field Programmable Gate Array FPGA an Application Specific Integrated Circuit ASIC a Digital Signal Processor DSP and or the like. The processor can be configured to run and or execute user and or application authorization processes and or other modules processes and or functions associated with an application token provisioning based application authorization system . The processor includes an installation client a client application and a client application .

The installation client can be a native application installed on the communication device . The installation client can be hardware module s and or software module s stored in memory and or executed in a processor that sends user authentication information requests a list of approved client applications for the user and requests individual client applications and from the application distribution module . In some embodiments the installation client can include a web browser configured to present a set of applications e.g. an app store such as an Android app store an Apple app store etc. that the user can install on the communication device . In such embodiments the user can select applications e.g. via a link from the set of applications. Based on the selection the installation client can receive an installation file e.g. an Android application package file APK used to install the application as described in further detail herein.

In some embodiments the installation client can be configured to receive user authentication information a list of approved client applications for the user and or individual installation files associated with client applications and as described in further detail herein. In some embodiments the installation file data associated with the client applications and can be stored in a portion of the memory associated with the application distribution module on the enterprise server and can be provisioned with an application token and downloaded onto the installation client . In other embodiments the installation file data associated with the client applications or can be stored on a device separate from the enterprise server and operatively coupled to the enterprise server via the network . In such embodiments upon receiving a request for a client application or from the installation client the application distribution module can authorize the installation file data associated with the client application or to be transferred to the application distribution module from the location of storage via the network before being provisioned with an application token and downloaded onto the installation client .

The client applications and can be hardware modules and or software modules stored in memory and or executed in a processor configured to receive an application token from the installation file associated with the client application or . The client applications and can be configured to be authenticated at an application module or remote from the communication device using the application token. The client applications and can be configured to cause the processor to execute specific operations. For example client applications and can be associated with particular functions in an enterprise. For example the applications and can be accounting applications sales force applications payroll applications and or the like. In other embodiments client applications and can be any other enterprise or third party applications configured to be run and or executed at the communication device .

The enterprise server can be for example a web server an application server a proxy server a telnet server a file transfer protocol FTP server a mail server a list server a collaboration server and or the like. In some embodiments the enterprise server is configured to receive user authentication and or client application requests from the communication device and generate user authentication data application tokens and installation files associated with client applications in response to such requests. In some embodiments the enterprise server can also execute modules processes and or functions associated with such an application token provisioning based application authorization system .

The enterprise server includes a memory and a processor . The memory can be for example a random access memory RAM a memory buffer a hard drive a database an erasable programmable read only memory EPROM an electrically erasable read only memory EEPROM a read only memory ROM and or so forth. In some embodiments the memory stores instructions to cause the processor to execute modules processes and or functions associated with such an application token provisioning based application authorization system .

The processor can be a general purpose processor a Field Programmable Gate Array FPGA an Application Specific Integrated Circuit ASIC a Digital Signal Processor DSP and or the like. In some embodiments processor can be configured to run and or execute application modules processes and or functions associated with such an application token provisioning based application authorization system . For example processor can be configured to run and or execute modules processes and or functions associated with or in response to user authentication and client application requests. The processor includes an application distribution module a token module and an application module .

The application distribution module can be a hardware module and or software module stored in memory and or executed in a processor that i receives user authentication information and or ii requests for client applications and or for a list of approved client applications for individual users from the communication device via the network . In some embodiments the application distribution module can be configured to generate and or define installation files for client applications and on the communication device . The application distribution module can also be configured to generate and or define user authentication data for users associated with the communication device . In some embodiments the application distribution module can also send user authentication signals e.g. an authentication acknowledgement and or confirmation signal an encrypted or unencrypted form of a user identity number that has been assigned to an approved user an identifier of a user security access level etc. and or installation files provisioned with the application token to the installation client as described in further detail herein.

The token module can be a hardware and or software module stored in memory and or executed in a processor that receives requests for application tokens from the application distribution module . In response to such requests the token module can be configured to generate and or define a unique application token for a unique user of each client application and send the application token to the application distribution module via the processor bus. For example the token module can be configured to generate a different application token for each user of the same client application. Similarly the token module can be configured to generate a different application token for each client application used by a single user.

The application module can be a hardware module and or a software module stored in memory and or executed in a processor configured to provide application data to client applications and or via the network . For example in instances where client application is a payroll application the application data provided by the application module can include data on employee salary hours worked taxes and other withholdings method of payment and or the like. In some embodiments such application data can enable client applications and or to execute modules processes and or functions associated with the application token provisioning based application authorization system . In some embodiments and as described in further detail herein the application module can receive and validate an application token from the communication device prior to providing application data to the client applications and or .

The application server can be a third party server distinct from the entity e.g. company with which the enterprise server is associated. The application server can be a Software as a Service SaaS host that can be for example a web server a proxy server a telnet server a file transfer protocol FTP server a mail server a list server a collaboration server and or the like.

The application server includes a memory and a processor . The memory can be for example a random access memory RAM a memory buffer a hard drive a database an erasable programmable read only memory EPROM an electrically erasable read only memory EEPROM a read only memory ROM and or so forth. In some embodiments the memory stores instructions to cause the processor to execute modules processes and or functions associated with application server within the application token provisioning based application authorization system .

The application module can be a hardware module and or a software module stored in memory and or executed in a processor configured to provide application data to client applications and via the network . For example the application data can include results of external market analysis for a product of the enterprise and or the like. This application data can be used by the client applications and or for example to set the retail price of the product and or to calculate the expected profit levels for the product and or to determine locations for the best retail vendors available for the product and or the like. In some embodiments the application module can receive and validate an application token from the communication device prior to sending the application data to the client applications and or . Such application data can enable client applications and to execute modules processes and or functions associated with the application token provisioning based application authorization system .

The application distribution module receives the user authentication information from the installation client or a mobile browser window via the network and authenticates the user at . In some embodiments the application distribution module can authenticate the user by matching the user authentication information to a specific entry in a user authentication database or a look up table stored in the memory of the enterprise server . The user authentication database can include for example a list of employees and their corresponding employment positions and security access level social security numbers employee personal identification numbers PIN and or the like. In other embodiments the user authentication database can be stored in the memory of another device e.g. server not shown operatively coupled to the network . In various embodiments the application distribution module can authenticate the user using any suitable authentication protocol such as for example Secure Sockets Layer SSL Secure Shell SSH Kerberos a federated protocol such as Security Assertion Markup Language SAML and or the like.

In some embodiments upon successful authentication of the user the application distribution module can generate and or define an authentication acknowledgement signal and send the authentication acknowledgement signal via the network to the installation client at . In such embodiments for example the authentication acknowledgement signal can include for example an encrypted form of a user identity number that has been assigned to the approved user. In other embodiments the authentication acknowledgement signal can include additional encrypted or unencrypted user credentials such as for example a user security access level user employment position a communication device identifier and or the like. In yet other embodiments the authentication acknowledgement signal can include a digital signature that can demonstrate the authenticity of the signal.

In response to receiving the authentication acknowledgement signal from the application distribution module the installation client can send a request for a list of client applications the list can include an identifier associated with one or more client applications approved by the enterprise for the user to the application distribution module via the network at . In some embodiments the request for the list of client applications can include an address of the application distribution module an address of the enterprise server a reference to a time frame for which the request will be valid an encrypted or unencrypted form of a user identity number user security access level user employment position a communication device identifier and or the like.

In response to receiving the request for the list of approved client applications from the installation client the application distribution module can determine which client applications are approved by the enterprise for the user of the communication device at . In some embodiments the application distribution module can use a user identity number contained in the request to query a client application database or a look up table stored in the memory of the enterprise server for an entry associated with the user identity number to determine which applications are authorized for the given user of the communication device . In other embodiments a user identity number may not be directly carried on the request. In such embodiments for example the user identity number and or other information can be dereferenced using and or obtained from for example an Open Authorization OAuth token included on or separate from the request. If one or multiple entries are found the application distribution module can confirm or reject the validity of such an entry and generate a list of client applications approved for the user by the enterprise. The list can include single or multiple entries depending on the user. The application distribution module can also determine which applications in the client application database are not approved for the user of the communication device . In other embodiments the application authorization database can be stored in the memory of another server not shown in operatively coupled to the network . In various embodiments the application distribution module can authenticate the list of approved client applications using any suitable authentication protocol such as for example Secure Sockets Layer SSL Secure Shell SSH Kerberos and or the like. On generating the list of approved client applications for the user of the communication device the application distribution module can send the list to the installation client in a data package e.g. a JavaScript Object Notation JSON package via the network at .

In some embodiments the installation client can extract a unique identifier associated with each approved client application from the list received from the application distribution module . The installation client can send a request for the client application to the application distribution module via the network at . The client application request can include the unique identifier associated with the requested client application an encrypted form of a user identity number that has been assigned to the authorized user additional encrypted or unencrypted user credentials such as a user security access level and or the like.

Upon receiving the request for client application from the installation client the application distribution module can send a request for an application token associated with the client application to the token module via the processor bus at . The token module can generate and or define an application token for the requested client application installed on the communication device at . The application token can be for example an OAuth access token an OAuth refresh token a SAML token a SecurID token and or the like. In some embodiments the application token can include an encrypted or unencrypted form of a user personal identity number PIN a user security access level a communication device identification number an installation client address an application identity number assigned to the requested application an associated application module or address and or the like. In other embodiments the application token can include additional encrypted or unencrypted client application credentials such as the specific features and or resources of the client application that has been approved for the user a duration for which the client application token is valid and or the like. Upon generating the application token the token module can send the application token to the application distribution module via the processor bus at .

The application distribution module can define and or generate installation file data associated with each requested client application for the user of the communication device . In some embodiments the installation file data associated with the client applications can be stored in a portion of the memory associated with the application distribution module in the enterprise server . In such embodiments the application distribution module can access the installation file data associated with each requested client application for the user of the communication device via the system bus. In other embodiments the installation file data associated with the client application can be stored on a device separate from the enterprise server in the application token provisioning based application authorization system and operatively coupled to the network . In such embodiments the application distribution module can authorize the installation file data associated with the client application to be transferred to the application distribution module from the location of storage via the network . In some embodiments the installation file data can include an encrypted or unencrypted form of a user personal identity number PIN a user security access level a communication device identification number an installation client address an application identity number assigned to the requested application and or the like. In other embodiments the installation file data can include additional encrypted or unencrypted client application credentials such as the release date of the client application the specific features and or resources of the client application that have been approved for the user and or the like. At the application distribution module can provision the installation file data associated with the client application to include the application token received from the token module . In some embodiments the application distribution module can provision the application token by directly inserting the application token into the binary form of the installation file data. In other embodiments the application distribution module can provision the application token by concatenating the application token with the installation file data. Upon provisioning the installation file data with the application token the application distribution module can send the installation file that is now provisioned with the application token to the installation client on the communication device via the network at .

Upon receiving the installation file provisioned with the application token the installation client can install the client application on the communication device at . In some embodiments the installation client can extract the application token from the installation file and can also extract the address of the associated application module from the application token. In some embodiments the application module can be located on the enterprise server and the client application can send the application token to the application module via the network at . In other embodiments the application module can be located on a third party application server and the client application can send the application token to the application module via the network at . In some embodiments the application token can be sent to the application module or as part of a request for obtaining application data. In such embodiments for example the application token can be sent to the application module or as part of a representation state transfer REST call.

At the application module or can receive via the network the application token from the client application and can assess the validity of and or verify the attributes of the application token. In some embodiments the application module or can directly validate the application token by for instance checking and or verifying a digital signature. In other embodiments the application module can perform this verification by querying a database or a look up table stored in the memory of the enterprise server for an entry that corresponds to the application token. In yet other embodiments the database or look up table can be stored in the memory of a different server operatively coupled to the network . For example the application module can acknowledge if an application token for a client application for an authorized user of the communication device has been received. In another example the application module can acknowledge if the approved functionalities of the client application has been activated for the user. In yet another example the application module can acknowledge if the time stamp on the application token is valid and or the like.

Upon successfully validating the application token the application module can at send application data via the network to the client application for use during execution of the client application on the communication device . For example if the client application is a sales application the application data can include a representation of the price of a unit of a product the number of units sold in a month the number of units required in pending orders the revenue generated from all sales in a month the profits earned in a month and or the like. In some embodiments the client application can use the application data to populate a table for display to the user. In another example if the client application is a human resource HR application the application data can include a user employee number a user social security number an employee status code an enterprise code for paid time off PTO and or the like. In some embodiments the client application can allow the user to use this data to calculate the total number of hours worked that can be charged to the enterprise in a pay cycle and or the like.

It should be noted that the embodiment of the application token provisioning based application authorization system as described in involves the application distribution module provisioning the installation file data associated with a client application to include the application token associated with a requested client application . This can allow the client applications to be downloaded and installed on the communication device and will not require any further authorization requests by the client application to other devices when it is launched by the user of the communication device . By provisioning the application token into the installation file data before the installation file is downloaded onto the communication device the challenges involving each downloaded client application having to be separately authorized by the enterprise server after download can be overcome. This provisioning of the installation file data by the application token can reduce the use of bandwidth and processor time and can improve the usability burden for the user of the communication device .

In some embodiments one or more of the steps shown in can be optional to implement the application token provisioning based application authorization system . For example in other embodiments the application distribution module can be configured to automatically generate the list of approved client applications for the user of the communication device call upon the stored installation file data associated with an approved client application and request and receive the associated application token from the token module immediately after sending the user authentication acknowledgement signal at . In this embodiment the application distribution module can provision the installation file data with the application token and can send the installation file to the installation client in a second data package or data stream immediately after sending the user authentication acknowledgement signal at . This embodiment can prevent delays associated with waiting to receive from the installation client a request for a list of client applications at and a separate request for a client application at .

In response to the request for a client application a request for an application token associated with the requested client application can be sent for example from the application distribution module to a token module at . The application token for a particular client application is uniquely associated with the requested client application from a set of approved client applications that can be installed on the communication device of an authorized user.

The requested application token can be received for example from the token module to the application distribution module in response to the request for an application token at . As discussed above in some embodiments the application token can include a user personal identity number PIN user security access level the specific features and resources of the application that have been approved for the user an address of the associated application module an indication of the duration for which the application token is valid and other information that can allow the client application to execute effectively on the communication device.

In some embodiments the installation file data associated with a client application can be defined and or generated in response to the request for a client application at for example the application distribution module. In such embodiments the installation file data can be stored in the memory of the enterprise server associated with the application distribution module. In other embodiments the installation file data associated with each approved client application can be defined and or generated at the application distribution module prior to receiving a request for a client application. In such embodiments the installation file data can be stored in the memory of the enterprise server associated with the application distribution module or on a device separate from the enterprise server and operatively coupled to the network.

At the installation file data can be provisioned to include the application token associated with the requested client application at for example the application distribution module. As discussed above in some embodiments the installation file data can include an encrypted or unencrypted form of a user personal identity number PIN a user security access level the version of the client application the specific features and or resources of the client application that have been approved for the user a communication device identification number an installation client address an application identity number assigned to the requested application and or the like. Also as discussed above in some embodiments the installation file data can be provisioned to include the application token by direct insertion of the application token in the binary form of the installation file data at for example the application distribution module. In other embodiments the installation file data can be provisioned to include the application token by concatenation of the application token to the installation file data at for example the application distribution module.

The installation file that has been provisioned with the application token can be sent to the communication device by for example the application distribution module at . The communication device can install the client application using the installation file. The installation client can extract the application token from the installation file and the address of the application module associated with the client application from the application token. Also at the client application can authenticate to the associated application module by sending the application token to the application module using the extracted address. As discussed above for example authentication can involve ascertaining if an application token for an approved client application for the user was sent from the client application to the application module. In another example authentication can involve ascertaining if the approved functionalities of the client application specific for the user have been activated. In yet another example authentication can involve ascertaining if the time stamp on the application token is valid.

In response to the request for a client application the installation client can receive from for example the application distribution module an installation file associated with the client application that includes an application token associated with the requested client application at . As discussed above in some embodiments the application token can include a user personal identity number PIN user security access level an indication of the duration for which the application token is valid an address of the associated application module and other information that can allow the application to execute effectively on the communication device.

The installation client can install for example on the communication device the client application using the installation file at . As discussed above in some embodiments the installation file can include a user personal identity number PIN a user security access level the version of the client application to be installed the specific features and or resources of the client application that have been approved for the user a communication device identification number an installation client address an application identity number assigned to the requested application and or the like.

The installation client can extract data such as for example the application token from the installation file and the address of the application module associated with the client application from the application token at . Also at the client application can be configured to authenticate for example to an associated application module remote from the communication device by sending the application token to the application module using the extracted address. As discussed above for example authentication can involve ascertaining if an application token for an approved client application for the user was sent from the client application to the application module. In another example authentication can involve ascertaining if the approved functionalities of the client application specific for the user have been activated. In yet another example authentication can involve ascertaining if the time stamp on the application token is valid.

Some embodiments described herein relate to a computer storage product with a non transitory computer readable medium also can be referred to as a non transitory processor readable medium having instructions or computer code thereon for performing various computer implemented operations. The computer readable medium or processor readable medium is non transitory in the sense that it does not include transitory propagating signals per se e.g. a propagating electromagnetic wave carrying information on a transmission medium such as space or a cable . The media and computer code also can be referred to as code may be those designed and constructed for the specific purpose or purposes. Examples of non transitory computer readable media include but are not limited to magnetic storage media such as hard disks floppy disks and magnetic tape optical storage media such as Compact Disc Digital Video Discs CD DVDs Compact Disc Read Only Memories CD ROMs and holographic devices magneto optical storage media such as optical disks carrier wave signal processing modules and hardware devices that are specially configured to store and execute program code such as Application Specific Integrated Circuits ASICs Programmable Logic Devices PLDs Read Only Memory ROM and Random Access Memory RAM devices.

Examples of computer code include but are not limited to micro code or micro instructions machine instructions such as produced by a compiler code used to produce a web service and files containing higher level instructions that are executed by a computer using an interpreter. For example embodiments may be implemented using imperative programming languages e.g. C Fortran etc. functional programming languages Haskell Erlang etc. logical programming languages e.g. Prolog object oriented programming languages e.g. Java C etc. or other suitable programming languages and or development tools. Additional examples of computer code include but are not limited to control signals encrypted code and compressed code.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. Where methods described above indicate certain events occurring in certain order the ordering of certain events may be modified. Additionally certain of the events may be performed concurrently in a parallel process when possible as well as performed sequentially as described above.

