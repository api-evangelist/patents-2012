---

title: Offloading collection of application monitoring data
abstract: Systems and methods are disclosed for offloading collection of monitored data. A data collector is associated with a plurality of monitored data sources and with a plurality of monitored data recipients. The data collector collects a cycle of monitored data from each of the sources of monitored data and persistently stores each of the cycles of monitored data in a separate monitored data package. The data collector provides the monitored data packages to the associated monitored data recipients in a manner that is asynchronous to the collection of the monitored data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08959051&OS=08959051&RS=08959051
owner: RTIP, Inc.
number: 08959051
owner_city: Alpharetta
owner_country: US
publication_date: 20120620
---
The present disclosure generally relates to enterprise content management systems and more specifically to the collection of data that is generated by monitoring components of an enterprise content management system.

Today enterprises such as businesses governments educational institutions and various other organizations use vast amounts of data to drive decision making in their organization. Enterprises use many varieties of computerized information systems and a large amount of networking infrastructure to manage and organize the structured semi structured and unstructured data used by the enterprise. As the number of systems and the amount of data continues to grow keeping these systems running at an acceptable level of availability and performance becomes more of a challenge.

Having summarized various aspects of the present disclosure reference will now be made in detail to the description of the disclosure as illustrated in the drawings. While the disclosure will be described in connection with these drawings there is no intent to limit it to the embodiment or embodiments disclosed herein. On the contrary the intent is to cover all alternatives modifications and equivalents included within the spirit and scope of the disclosure as defined by the appended claims.

ECM system provides various computing services associated with enterprise content and or documents that are related to the organizational processes of an enterprise such as capturing managing storing preserving and or delivering the content and documents to various users. Users associated with the enterprise interact with ECM system through various ECM clients . For example a user may through ECM client view or check out documents collaborate and share documents with other users. As another example a user may interact with ECM client to run a workflow application which leads a user through various forms necessary to complete a business task.

ECM system may include components that are specific to or customized for a particular enterprise. A non limiting list of technologies used to implement ECM system includes EMC Captiva InputAccel EMC Documentum IBM FileNet IBM Content Manager Kofax Capture Microsoft SharePoint VMWare vSphere or combinations thereof. The techniques disclosed herein also apply to other enterprise content management systems.

Application Performance Monitoring APM system provides computing services that monitor the behavior and health of software and hardware components of ECM system . The monitoring actions performed by APM system produce monitored data . Monitored data may include metrics that are related to component performance and that are made available by the ECM system components e.g. number of file accesses queue sizes response time for particular transactions web site accesses etc. Monitored data may also represent the presence or absence of particular resources such as files directories etc. In some scenarios monitored data is produced when APM system executes tests designed to exercise the ECM system components.

After collecting monitored data APM system may provide monitored data through various mechanisms and in various forms to enterprise personnel such as managers decision makers or system administrators. These users interact with APM system through one or more APM clients . For example APM system may generate and provide to users a dashboard display of monitored data generated by the monitored ECM system . APM system may allow users to generate reports related to monitored data and to configure alerts and alarms which are triggered when indicated by monitored data .

In the example configuration shown in ECM system includes one or more ECM components that combine to provide the overall functionality of the ECM system . The ECM components may include web servers that serve up enterprise content to various ECM clients and application servers that host various services or granular components that support the overall functionality of the ECM system . A non limiting list of services which may be hosted by an application server includes search indexing application discovery and load balancing. Some ECM components may be part of the ECM platform itself while others may be provided by a third party to extend the functionality of ECM system . The services hosted by ECM components may be implemented using a variety of middleware frameworks such as Sharepoint Service Application Framework Windows Communication Foundation WCF service oriented architecture SOAP representational state transfer REST remote procedure calls RPC and combinations thereof.

As used with APM system these ECM components are monitored by the APM system . As such each one is thus considered a monitored component . That is a monitor module in APM system performs monitoring actions on the monitored components causing the components to produce monitored data . Monitoring actions performed by monitor module may be implemented as application programming interface API calls or database queries. Monitoring actions may also be implemented using scripts for example Active Server Pages ASP scripts JavaScript etc.

Monitored data is collected by monitor module and stored in an APM database . In some embodiments the collected monitored data may be filtered and or transformed before storage in APM database . For example the collected monitored data may be expressed in XML while APM database uses a binary record format.

In addition to monitor module other components of APM system may include a reporting module an analysis module and a configuration module . Reporting module communicates monitored data to enterprise users such as managers and decision makers by generating various reports. In some embodiments reporting module determines whether monitored data indicates that a service level violation has occurred and proactively takes remedial action when a service level violation is detected. Analysis module facilitates the generation of reports by analyzing monitored data . Configuration module configures the various components APM system . In particular configuration module is used to define the monitored components from which monitored data is collected the recipients of monitored data and the timing of the collection of the data.

The operation of monitor module and its interaction with monitored components will now be discussed in further detail in connection with the block diagram of . As shown in monitor module includes at least one monitor and at least one collector . In some embodiments monitor and collector are executed as separate processes. Each monitor obtains monitored data from a monitored component . The particular monitored data produced by each monitored component is configurable. Asynchronously to the generation of monitored data collector performs a collection cycle in which monitored data generated by the monitored component is obtained.

As can be seen in a monitored component can serve as a source of monitored data for collector . Notably the association between a source of monitored data and a collector is configurable. Thus each collector examines configuration data to determine which source of monitored data s to collect monitored data from. In some embodiments collector is implemented as a service rather than an application program and starts a separate process for each source of monitored data . Collector may then individually start and stop each source of monitored data .

As explained above collector obtains monitored data in cycles. The period of the cycle associated with a particular source of monitored data or monitored component is configurable. As each cycle completes collector persistently stores the collected monitored data in a monitored data package that is specific to the source of monitored data . In some embodiments collector stores the data in a structured data format such as eXtensible Markup Language XML . In some embodiments collector maintains the connection to a source of monitored data by remaining logged in between collection cycles.

Notably a new monitored data package is generated with each collection cycle. The name of the monitored data package may indicate the source user name category of data collected etc. In some embodiments monitored data package takes the form of an eXtensible Markup Language XML file. In addition to collected monitored data a monitored data package may also include data type time of collection error message s etc.

Once created monitored data packages are made available to one or more data recipients. The set of monitored data recipient s associated with a particular collector is configurable for example through configuration module . In some scenarios the recipient of monitored data is the monitor that caused the monitored data to be generated.

Collector may use a variety of mechanisms to transfer a monitored data package to a recipient. In a scenario in which the recipient and collector execute on the same computer or are on the same network the recipient may simply access the monitored data package as a file. In a scenario in which the recipient and collector are on different networks separated by a firewall collector may use a web service to transfer the monitored data package to the recipient. In some embodiments a monitored data package may be encrypted and or compressed before transfer.

The associations between a collector and one or more monitoring data sources as well as the information describing these monitoring data sources is configurable through configuration data . In some embodiments where collector is located remotely from monitor master configuration data is stored with monitor and a local copy of configuration data is stored with collector . With each collection cycle collector may first determine if the local copy of configuration data is out of date with respect to the master configuration data . If the local copy of configuration data is determined to be out of date collector updates the local copy from the master and restarts so that the newer settings take effect. This allows collector to be centrally administered but remotely configured.

Some embodiments of APM system distinguish between various categories of monitored data . In such embodiments each category of monitored data is managed by a data adapter and each data adapter interacts with a monitored component to obtain monitored data in a particular category. A non limiting list of categories of monitored data includes Captiva specific data Documentum specific data event log data file access data folder access data log file search data performance monitor data and Windows Management Interface WMI data.

For example in an environment where a particular monitored component produces event log data and file access data an event log data adapter interacts with the monitored component to retrieve the event log data while a file access data adapter interacts with the same monitored components to retrieve the file access data. If in the same environment a monitored component produces data specific to a particular ECM e.g. data specific to Kofax Capture then an ECM specific data adapter interacts with the monitored components to retrieve the ECM specific data. Collector then retrieves some monitored data from one of the data adapters and other monitored data from another data adapter.

In embodiments which support category specific collection of monitored data a monitored data package may be specific not only to a source of monitored data but also to a monitored data category.

In this example scenario APM system includes two monitors A and B. Each monitor is shown executing three monitoring actions for a total of six monitoring actions . . . T T at six different monitored components. In some embodiments each monitor is implemented using a separate Microsoft Internet Information Server IIS .

APM system also includes one collector . Collector includes five associations A to E. Each association includes identifying information about the source of monitored data e.g. the monitored component identifying information about the recipient of the collected monitored data e.g. the monitor and the category of monitored data being collected. Thus in this example association A Alpha A PerfMon indicates that the source of the data is a monitored component identified as Alpha that the collected monitored data is to be sent to Monitor A and that the data being collected is Performance Monitor data.

As can be seen in each collector association produces a monitored data package . Thus in this example association A produces a package that includes Performance Monitor data that is generated by Monitor A from data produced by component Alpha. also shows that each category of monitored data is handled by a data adapter P E F.

At block data collector collects a cycle of monitored data from each of the sources of monitored data. Though the collection is described as occurring in a single block these collection cycles can occur at different times and have different periods. At block data collector persistently stores each of the cycles of monitored data in a separate monitored data package . Though the storage is described as occurring in a single block each monitored data package can be stored at a different time.

Finally at block the data collector provides the monitored data packages to the associated monitored data recipients. Notably the monitored data packages are provided in a manner that is asynchronous to the collection of the monitored data packages . The process of is complete.

The various components of APM system can be implemented in software i.e. instructions executing on processor . depicts a software implementation with memory used to store collector and data adapter . Any or all of these components can also be implemented in specialized hardware logic. Hardware implementations include but are not limited to a programmable logic device PLD programmable gate array PGA field programmable gate array FPGA an application specific integrated circuit ASIC a system on chip SoC and a system in package SiP . These components may be implemented using any combination of hardware and software as should be appreciated.

In some embodiments of APM system one or more of the software implemented components are stored on a computer readable medium which in the context of this disclosure refers to any structure which can contain store or embody instructions executable by a processor. The computer readable medium can be for example based on electronic magnetic optical electromagnetic infrared or semiconductor technology. Specific examples of a computer readable medium using electronic technology include but are not limited to the following a random access memory RAM a read only memory ROM and an erasable programmable read only memory EPROM or Flash memory . A specific example using magnetic technology includes but is not limited to a disk drive and a portable computer diskette. Specific examples using optical technology include but are not limited to a compact disk read only memory CD ROM or a digital video disk read only memory DVD ROM .

Any process descriptions or blocks in flowcharts would be understood as representing modules segments or portions of code which include one or more executable instructions for implementing specific functions or steps in the process. As would be understood by those of ordinary skill in the art of the software development alternate implementations are also included within the scope of the disclosure. In these alternate implementations functions may be executed out of order from that shown or discussed including substantially concurrently or in reverse order depending on the functionality involved.

The above description has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the disclosure to the precise forms disclosed. Obvious modifications or variations are possible in light of the above teachings. The implementations discussed however were chosen and described to illustrate the principles of the disclosure and its practical application to thereby enable one of ordinary skill in the art to utilize the disclosure in various implementations and with various modifications as are suited to the particular use contemplated. All such modifications and variation are within the scope of the disclosure as determined by the appended claims when interpreted in accordance with the breadth to which they are fairly and legally entitled.

