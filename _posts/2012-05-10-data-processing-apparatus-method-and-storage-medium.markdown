---

title: Data processing apparatus, method, and storage medium
abstract: A data processing apparatus makes adding, deleting, and changing of modification rules easy. The data processing apparatus includes an output destination type determining unit that determines type of output destination determined by an output destination determining unit using categorizing information, modification processing units that execute modifying processes different from each other on content of image data, a Plug-in Factory that determines the modifying process by referring to the determined type and content of modifying process set for each categorized type and generates modification processing units that execute the determined modifying processes, and a print commanding unit that requests modification processing units to execute the modifying process, generates output data from the modified image data, and sends the output data to the determined output destination. The content of the categorizing information and modifying process can be customized, and modification processing units can be added or deleted.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08760680&OS=08760680&RS=08760680
owner: Ricoh Company, Ltd.
number: 08760680
owner_city: Tokyo
owner_country: JP
publication_date: 20120510
---
This patent application is based on and claims priority pursuant to 35 U.S.C. 119 to Japanese Patent Application No. 2011 123366 filed on Jun. 1 2011 the entire disclosure of which is hereby incorporated by reference herein.

The present invention relates to a data processing apparatus that controls the destination of data output from an information processing apparatus a data processing method and a storage medium that stores a software program implementing the data processing method on a computer.

Along with the popularization of network technology a configuration now commonly employed features a plurality of personal computers PCs connected to a printer via a network in an office environment with the PCs sharing the printer A printer server is connected to the network to manage printing and process printing requests from PCs appropriately so that the printer executes printing in good order even if a plurality of PCs send printing requests simultaneously.

In such an environment a plurality of users send printing requests to a printer using their own PCs and the printer executes printing when the printer receives printing requests from users. In this case there is no problem if printing outputs are not confidential or not related to personal data etc. since it is not an issue if other users browse them. However if printing outputs are confidential documents it can be a serious matter if other users under no duty to maintain confidentiality browse those documents.

In addition multi function peripherals MFPs with functions such as printing copying faxing and scanning are often used as network connected printers. MFPs can fax documents when they receive a request to send documents by fax from a user using a PC. In such an environment there is always the risk that a user might fax an internal document by mistake and that can lead to serious damage.

Generally speaking in an office environment a plurality of printers and MFPs are connected to the network. In such an environment instead of sending printing and facsimileing requests from a PC directly to the printer or MFP designated by the PC an apparatus that controls the output destination by choosing an appropriate apparatus like a printer and executing printing on the appropriate apparatus has been proposed e.g. JP 2010 157208 A. 

The apparatus described in JP 2010 157208 A is a data processing apparatus that manages printing outputs from a plurality of client PCs via a network and implements virtual printer drivers and a plurality of remote drivers. A virtual printer driver receives printing requests via the network generates an intermediate file as a page image from print data corresponding to received printing requests chooses a remote driver corresponding to destination printer information related to a client PC or a user and loads the remote driver. The loaded remote driver generates output data including raw data from the generated intermediate file sends the output data to the corresponding remote printer and has the remote printer print the output data. Accordingly the virtual printer driver changes the output destination to an output destination related to the client PC and the user.

Also the virtual printer driver extracts a string text data included in the intermediate file and can determine whether or not a predefined keyword is included in the extracted string. If the predefined keyword is included in the extracted string the virtual printer driver determines a printing condition corresponding to the predefined keyword and sets the determined printing condition. After that the virtual printer driver sets the printing condition to the remote driver and has the remote driver execute processes such as generating the raw data described above and adding page description language PDL commands. Accordingly the virtual printer driver changes the output destination according to the string included in print data.

The conventional apparatus described above determines a destination printer using information specific to the client PC and the user who operates the client PC and executes printing on the determined printer. With a plurality of output destinations some of which are located in rooms anyone can enter a security problem arises if a confidential document is printed on one of the apparatuses located in a room anyone can enter. The conventional apparatus can modify documents and print documents with tint block printing enabled in case the string confidential is included to prevent unauthorized copying and solve the security problem. Tint block printing is a feature that prints a tint block so that graphics or characters appear in the background of a copy if the printout is copied.

However in the conventional apparatus a feature that has document modification rules is installed as a single module so it is not easily possible to add another rule delete a registered rule or change a registered rule. It is necessary to replace module itself to add rules etc and that makes maintenance difficult since the module is replaced each time rules are added changed etc. Also it is not possible to add delete or change a rule after installation since this module is built in.

The present invention provides a novel data processing apparatus method and storage medium that facilitates adding deleting and changing of modified rules easily makes maintenance easy and enables adding deleting and changing modified rules even after installation.

The present invention provides a data processing apparatus that receives job data output by an application executing unit after receiving printing instruction from an information processing apparatus and executes printing and includes a virtual printer driver unit that extracts image data and job information data that includes identifying information to identify at least one of information processing apparatus and its user from job data and outputs the image data and job information data a output destination determining unit that determines printing apparatus as output destination by referring to association table and using output identifying information or content of image data a print instructing unit that generates output data using image data and job information data and sends output data to the determined printing apparatus a output destination type determining unit one or more modification processing unit and a determining unit.

The output destination type determining unit determines which type the determined output destination corresponds to using registered categorizing information. The one or more modification processing unit executes modifying process different from each other on content of image data. The determining unit determines which modifying process to execute by referring to content of modifying process set for each categorized type. The content of the categorizing information and modifying process can be customized and the modification processing unit can be added or deleted.

An administrator of the data processing apparatus can change the way how to categorize output destination by changing setting of categorizing information in response to requests from users and can change the content of modifying process by changing setting. Also the administrators can delete the unnecessary modification processing unit by changing setting and can execute modifying process on the new modification processing unit by changing its setting in case the modification processing unit is newly added. Accordingly an administrator can add modified rule delete and change rule easily and can add modified rule delete and change rule even after the installation on the apparatus of this invention.

Each modification processing unit is generated by reading modules for modifying processes and added deleted by adding deleting modules. The modules can be built separately from programs that implement each unit described above except the modification processing unit and can be implemented as dynamic link library DLL . That makes software maintenance easy.

The data processing apparatus can include a first generating unit that generates modification processing unit by reading module that executes the modifying process by referring to modifying process determined above. Alternatively the data processing apparatus can include a second generating unit that generates modification processing unit for each module by reading all the modules and can choose necessary modification processing unit among generated modification processing units and execute desired modifying process. It should be noted that it is more preferable to adopt the first generating unit that reads necessary modules only since that can constrain amount of memory usage and improve processing speed.

One modification processing unit determines whether or not predefined string exists in document as content of image data If the modification processing unit determines that the string exists the modification processing unit executes modifying process that changes the whole document into unreadable. The modifying process can be the process to paint the whole document black. Accordingly in case the document is printed out on a printing apparatus located in a room where a person with no duty to keep secret can browse by mistake security can be ensured since the person can not read the document.

Another modification processing unit determines whether or not predefined string exists in document as content of image data. If the modification processing unit determines that the string exists the modification processing unit executes marking process on the document. The marking process can be adding string such as confidential. Accordingly users can recognize that the document is confidential easily.

Another modification processing unit determines whether or not predefined string exists in document as content of image data. If the modification processing unit determines that the string exists the modification processing unit adds user name as user identifying information extracted by the virtual driver unit. Accordingly users can recognize who printed the document out easily and that prevents other users from taking the document away.

In describing preferred embodiments illustrated in the drawings specific terminology is employed for the sake of clarity. However the disclosure of this patent specification is not intended to be limited to the specific terminology so selected and it is to be understood that each specific element includes all technical equivalents that operate in a similar manner and achieve a similar result.

An embodiment of the present invention will be described in detail below with reference to the drawings.

A plurality of the information processing apparatuses send printing requests and print data to the printer server and execute printing on one of the remote printers . In this embodiment the data processing apparatus acquires the printing requests and print data sent to the printer server.

The data processing apparatus can execute transactions using an appropriate remote connecting protocol such as Remote Desktop Protocol RDP when it acquires printing requests and print data from the information processing apparatuses .

The data processing apparatus acquires printing requests and print data from the information processing apparatuses identifies remote printers assigned to the information processing apparatus and generates raw data corresponding to the print data for the assigned remote printers . This raw data becomes output data after adding PDL command etc. and is sent to the assigned remote printer via the printer server. Accordingly the data processing apparatus executes printing on appropriate remote printers assigned to information processing apparatuses .

PCs workstations and mobile information devices such as smartphones are examples of information processing apparatuses comprising the printer network. The information processing apparatuses each have a single core multi core CPU include storage devices such as a RAM ROM and hard disk drive HDD and communications devices such as a network interface card NIC and request printing to remote printers on an appropriate operating system OS such as Windows UNIX Linux or Mac OS.

In this preferred embodiment the data processing apparatus and the printer server can be implemented as server apparatuses since they execute appropriate processes after receiving requests from the information processing apparatuses . Therefore the information processing apparatuses can be implemented as client apparatuses such as a fat client apparatus and a thin client apparatus. The fat client apparatus has installed application programs and completes various types of processes. The thin client apparatus just requests services to a network connecting module user authenticating function and session generating module etc. in the data processing apparatus receives the processed result and requests printing.

In case the information processing apparatuses are implemented as fat client apparatuses they read application programs and data from storage devices such as the HDD and store them to RAM. The CPU executes the application program to generate print data comprising document image and multimedia and sends this print data to the data processing apparatus with a printing request. Identifying the remote printer and executing modifying processes described below on the data processing apparatus follow.

In case the information processing apparatuses are implemented as thin client apparatuses they have the data processing apparatus execute an application program installed in the data processing apparatus and generate print data. After receiving notification that the process finished they request printing to the data processing apparatus . Then the data processing apparatus determines the remote printer and executes the modifying process described below.

Like the information processing apparatuses the data processing apparatus has installed a CPU ROM RAM HDD and NIC controls output destination of print data and executes a modifying process under control of appropriate OS. The printer server also has installed a CPU ROM RAM HDD and NIC manages each remote printer receives printing request from the data processing apparatus based on printing request from the information processing apparatuses sends print data to remote printer determined as output destination and has the remote printer execute a print job.

The printer server includes printer drivers corresponding to each remote printer . Receiving printing request from the data processing apparatus and sending print data to remote printer are controlled by printer driver corresponding to remote printer determined as output destination. In this embodiment the printer server is implemented as an independent apparatus. The printer server can also be implemented as a printer server application in the data processing apparatus .

Among remote printers laser printer and inkjet printer include NIC receive print data from the printer server via the network and execute a print job. MFPs can be a remote printer connected to the network via NIC. MFPs can also include function of printer server.

The network can be Ethernet such as 100Base TX and 1000Base TX optical network and wireless network such as IEEE 802.11. The network communicates bidirectionally using frame or packet transfer communication based on TCP IP. The network can be a wide area network WAN such as the internet in a secure environment operated by Virtual Private Network VPN technology other than LAN.

The remote printers can be assigned to information processing apparatuses using information specific to the information processing apparatuses . Examples of information specific to information processing apparatuses are IP addresses Media Access Control MAC addresses and computer names assigned to each information processing apparatus . Also user information such as login names that users enter when they use services can be used as information specific to the information processing apparatuses . Alternatively user names and user codes to identify users read by an IC card reader installed separately can be used as user information.

Also remote printers can be assigned specific content of a document to be printed. In case remote printers are assigned a specific string after examining which specific string is included in image data to be printed the remote printer assigned to the string is selected and the print job is executed on the remote printer.

Appropriate database that an administrator of the data processing apparatus entered can be used as an association table for the assigning process described above. For example IP addresses of information processing apparatuses can be associated with printer name of remote printer and that information can be registered to the association table.

In an information processing apparatus and a remote printer are located at location enclosed by the broken line information processing apparatuses and and remote printers and are located at location enclosed by the broken line and an information processing apparatus and a remote printer are located at location enclosed by the broken line. Therefore remote printer can be assigned to not only each information processing apparatus but also group of information processing apparatuses or user group. In this case group IDs to identify groups can be associated with printer names of remote printer and that information can be registered to the association table described above.

The data processing apparatus is connected to information processing apparatuses and remote printers as shown in so that the data processing apparatus receives processing request and executes processing receives printing request selects appropriate remote printer and has the remote printer print.

The data processing apparatus includes a data processing unit and an application executing unit . Those units are implemented as one unit as shown in . Alternatively considering the broken line as the network boundary the application executing unit can be implemented on a terminal server set up separately and the data processing unit alone can be implemented as the data processing apparatus .

The application executing unit includes an application and a printing request source notifying unit . The application executing unit receives processing requests and printing requests from the information processing apparatuses via the network execute those processes and generate execution results. After calling Application Programming Interface API such as Graphical Device Interface GDI this execution results become job data of a print job in response to print commanding event generated by the application . Accordingly this job data is sent to the data processing unit .

The application is implemented as a print commanding module. After receiving printing request from the information processing apparatuses the application notifies the data processing unit that new job has started.

The printing request source notifying unit receives information to identify printing request source printing request source identifying information from the information processing apparatuses and sends this printing request source identifying information and process ID to identify the started job to a dispatch processing unit in the data processing unit . Accordingly the dispatch processing unit can have the same level of authority as application of printing request source and display information to identify remote printer as destination of print data and printing information such as number of printing pages to the printing request source.

The data processing unit includes a virtual printer driver a job storing unit and the dispatch processing unit .

The virtual printer driver is activated after being called from the application in the application executing unit and starts processing after receiving job data from the application . The virtual printer driver generates the process ID described above sends the process ID to the printing request source notifying unit in the application executing unit and has the printing request source notifying unit notify the dispatch processing unit of the process ID and printing request source identifying information.

Job data includes printing request image data obtained from print data and job information data. Image data can include image format data such as bitmap Joint Photographic Experts Group JPEG Graphics Interchange Format GIF Enhanced MetaFile EMF that includes drawing codes Postscript Portable Document Format PDF and XML Paper Specification XPS . Job information data includes identifying information such as IP address and login name described above to identify information processing apparatuses and user who utilizes the information processing apparatus as information to identify the printing request source. Job information data also includes information such as imposing information of image data print setting information such as margin size setting number of pages and color monochrome and document name.

The virtual printer driver includes a virtual printing management unit a job information data extracting unit and a virtual drawing unit . After receiving job data from the application the virtual printer driver calls the virtual printing management unit . The virtual printing management unit calls the job information data extracting unit and has the job information data extracting unit separate job information data from the image data. Then the job information data extracting unit stores image data in the job storing unit associates the job information data with process ID and stores them in temporary storing apparatus such as RAM or register or nonvolatile storing apparatus such as HDD EPROM and EEPROM.

Also the virtual printing management unit calls the virtual drawing unit and has the virtual drawing unit keep a working space as memory space to process associating image data with job. The working space is formed by allocating appropriate amount of memory space in RAM that the data processing unit manages and can be referred as virtual spooler etc.

The job information data extracting unit extracts job information data from job data stored in the job storing unit temporarily and passes the job information data to a relating print commanding unit among private instances in a dispatch processing unit .

The virtual drawing unit moves image data stored in the job storing unit to working space empties the job storing unit notifies the application executing unit that the image processing finished. When the application receives that notification from the virtual drawing unit the application releases exclusive management on the job storing unit and following printing requests can be processed. Exclusive management can be implemented using technologies such as semaphore and synchronizing class. Alternatively simplified exclusive management can be implemented changing Graphical User Interface GUI that the application in the application executing unit presents into the way not receiving events.

In FIG the job information data extracting unit in the virtual printer driver is illustrated as one functional processing unit. Alternatively by implementing a plurality of the job information data extracting unit a plurality of job information data extracting units can run in parallel and process large job data that includes many pages and large image data effectively. In this case each job information data extracting unit stores image data in the job storing unit sequentially using exclusive management.

The job storing unit can be implemented as memory area storing printer buffer and spool file. When the virtual drawing unit moves the image data to the working space the image data is sent to the image processing unit . The image processing unit acquires image data generated for each job in the working space and the job information data extracted by the job information data extracting unit in the working space and executes processes such as layout and imposing pages.

After receiving job data from the application executing unit the virtual printer driver generates private instances in the dispatch processing unit for the job and has each private instance execute process to determine output destination. The private instances activated for each job call remote driver corresponding to remote printer determined as output destination create RAW format specific to remote printer using imposing and print setting information included in image data and job information data received from the working space and send output data in RAW format.

The image processing unit can be implemented as a drawing processing module that includes remote drivers A C and a drawing processor. The image processing unit can execute process in case image data is in image format such as EMF that includes drawing codes PDF Postscript and XPS. Also the image processing unit can convert image calling remote driver repeat processing with the working space until remote driver A C finishes creating raster image and generate output data in RAW format.

The private instances associate the job information data that the job information data extracting unit extracted with process ID and image data generate as a job managing list . That job managing list can be used to manage each private instance.

The private instances are implemented as the dispatch processing unit and include an output destination determining unit a print commanding unit an association table a document modifying unit a User Interface UI displaying unit and a login determining unit . After receiving job information data from the job information data extracting unit the dispatch processing unit asks the print commanding unit to execute the printing process.

After receiving the request from the dispatch processing unit the print commanding unit asks the output destination determining unit to determine output destination. The output destination determining unit acquires information on output destination associated with printing request source and content of document from the job information data and image data extracted from job data by the job information data extracting unit and determines output destination by referring to the association table . Alternatively the output destination determining unit acquires login name that the login determining unit received and utilized for authenticating gets output destination information associated with the login name and determines output destination by referring to the association table . The output destination determining unit sends the determined output destination information and the process ID to the print commanding unit .

The association table uses IP address that information processing apparatus inputs as one of identifying information to identify printing request source and associates the IP address with printer name as information to identify remote printer of output destination. Alternatively the association table associates printer names with MAC addresses login names and content of documents other than IP addresses.

The output destination determining unit uses information such as IP address of printing request source login name and content of document to determine output destination. In some cases output destinations associated with each of those pieces of information can be different from each other. In that case the output destination determining unit can use predefined information on priority and adopts the highest prioritized information to determine output destination. If prioritized order is IP address login name and content of document the output destination determining unit can acquire printer name corresponding to the highest prioritized IP address and determine remote printer as output destination using the printer name. The process described above is just an example and not limited to that.

The print commanding unit calls remote driver corresponding to remote printer as output destination by referring to received information on output destination and generates output data. After sending the output data to remote printer the print commanding unit sends process ID information on output destination and a command to display printing information to the UI displaying unit .

The print commanding unit changes output destination based on received information on output destination in response to information processing apparatus and user as printing request source. The output destination determining unit determines output destination based on information on print setting and job information included in job information data by referring to data table that registers information on performance of printers such as printing speed. The print commanding unit can change output destination for output data based on information on the determined output destination.

After receiving information on output destination process ID and job information data from the output destination determining unit the print commanding unit registers newly the received process ID with output destination managing table acquires printing information from job information data and sets output destination information and printing information to a record corresponding to the process ID. It should be noted that user information that identifies user who issued the print job IP address that identifies information processing apparatus that the user uses apparatus information such as MAC address and computer name print setting information such as color monochrome grayscale duplex printing simplex printing page layout job information such as document name number of pages and output content can be used as printing information.

After generating output destination managing table the print commanding unit sends it to a dispatch processing unit such as a port monitor and remote printer as output destination designated by the process ID can print accordingly.

Before executing printing on a remote printer the print commanding unit requests the document modifying unit to do modification and sends information on output destination. Subsequently the print commanding unit calls remote driver corresponding to the determined output destination as described above generates RAW data from image data modified by the document modifying unit and generates output data adding PDL commands. The output data is sent to the printer server via the dispatch processing unit described above. The printer server sends the output data to remote printer associated with the received output data and has the remote printer execute the print job.

After receiving request on modification from the print commanding unit the document modifying unit modifies image data that being processed image conversion on the working space in response to output destination in received output destination information. The configuration and content of processing of the document modifying unit will be described later.

In case of having features such as page layout and imposing the remote driver A C converts job information data designated as feature setting parameter and generates RAW data. If Windows is used as OS intended RAW data can be generated by setting job information data to print setting structure DEV MODE since most printer drivers on Windows can receive EMF and converting data is not necessary if image data is in EMF format. Alternatively in case of not having features such as page layout and imposing the remote driver A C can generate intended RAW data by splitting EMF into each page shuffling page order and designating drawing position.

The UI displaying unit notifies information processing apparatus as printing request source for each job of information on output destination and printing information. After receiving information on printing request source and process ID from the printing request source notifying unit in the application executing unit the UI displaying unit registers information on printing request source and process ID with the displaying destination managing table. Information on printing request source is associated with process ID and registered in the displaying destination managing table.

Also after receiving information on output destination and displaying request for printing information along with process ID from the print commanding unit the UI displaying unit refers to the output destination managing table acquires information on output destination and printing information associated with the process ID sends that information to the information processing apparatus as the printing request source and has that information display on the information processing apparatus. Accordingly the user can know the dispatch destination that the dispatch processing unit determined automatically and printing information.

Furthermore the UI displaying unit can display printing information dialog as UI that displays printing information on the information processing apparatus associated with the process ID and wait for direction to continue printing or cancel printing from the information processing apparatus. Also the UI displaying unit can display print canceling dialog that notifies that printing has been canceled.

Examples of printing information dialogs are a dialog to notify a user that a print job to be executed is color printing and prompt the user to change to monochrome printing a dialog to prompt a user to choose a high speed printer because of lots of pages and a dialog to prompt a user to use duplex printing or change page layout.

The application executing unit requests the information processing apparatus that a user uses to input login name and password when the user utilizes the application . The login determining unit checks whether or not the input login name and password exist in the registered user information and executes authorizing. The login determining unit stores preregistered and associated login names and passwords. If the input login name and password match the login determining unit notifies the application executing unit that the authorization succeeded and allows the application executing unit to utilize the application . If not the login determining unit notifies the application executing unit that the authorization failed and has the application executing unit notify the information processing apparatus that the login process failed.

The output destination determining unit needs user information such as login name entered at user s login time to determine output destination in compliance with user information so the login determining unit receives request for user information from the output destination determining unit and send the user information to the output destination determining unit .

Detailed configuration of the data processing apparatus and processes that each functional unit executes has been described with reference to . Next detailed configuration of the document modifying unit and processes that the document modifying unit executes will be described in detail below referring to . illustrates an example of configuration of the document modifying unit.

The document modifying unit executes modifying suited for output destination determined by the output destination determining unit on converted image data in the working space . To carry out this process the document modifying unit includes a modification managing unit an output destination type determining unit a Plug in Factory and one or more modification processing unit 

The modification managing unit receives request for modifying process and information on output destination and requests the modification processing unit to modify image data. After receiving information on output destination from the modification managing unit the output destination type determining unit determines which type the determined output destination corresponds to by referring to categorizing information of types predefined by an administrator of the data processing apparatus . Output destination can be categorized by its security level. For example output destination can be categorized into High security level and Low security level and that information can be adopted as types.

These types can be registered as text data and eXtensible Markup Language XML data written in string such as High security level and Low security level in response to requests from users. The storage apparatus such as HDD stores this data and the output destination determining unit reads that data and determines which category output destination corresponds to based on location of remote printer as output destination.

For example text data etc. includes information on locations corresponding to High security level and Low security level and the output destination type determining unit stores information on location for each of remote printer. From this information and output destination information which type the location is categorized can be determined.

The Plug in Factory determines which modifying process should be executed by referring to content of modifying process set for each categorized type and type information determined by the output destination type determining unit . The Plug in Factory also loads a module that executes the determined modifying process and generates modification processing unit . Text data etc. described above can include furthermore information to identify modules such as content of modifying process for each type and module names. Therefore the Plug in Factory can specify modifying process based on this information and load module to execute the modifying process. In this embodiment categorizing information and content of modifying process etc. are written in the same text data etc. but they can be written in separate text data etc.

For example if type is determined as High security level the Plug in Factory loads one module and generates the modification processing unit only. Alternatively if type is determined as Low security level the Plug in Factory loads three modules and generates the modification processing units and . In case of High security level after generating the modification processing unit the modifying management unit requests the modification processing unit to execute modifying process. In case of Low security level after generating the modification processing units the modifying management unit requests the modification processing units to execute modifying process sequentially.

Administrators of the data processing apparatus can change easily the way how output destination is categorized by changing setting of categorizing information in response to request from users. Also Administrators of the data processing apparatus can change easily content of modifying process by changing setting. Administrators can also delete modification processing unit no longer required due to the change of setting. If a new modification processing unit is added administrators can also have the new modification processing unit execute modifying process by changing its setting. Accordingly modifying rules can be added deleted and modified easily and even after installation modifying rules can be added deleted modified.

The modification processing units are generated by loading modules that execute various modifying processes on the CPU and modification processing units can be added deleted by adding deleting modules. Those modules can be created separately from programs implementing units other than modification processing units and implemented in plug in format such as Dynamic Link Library DLL. This makes adding deleting modifying and maintaining those modules easy.

In this case the process adding string confidential to the document is specified. Since content of modifying process is associated with the name of module that executes the modifying process only the modification processing unit is generated by loading the module. In only the modification processing unit executes modifying process on the document and adds string confidential at a slant on the document.

In this case two more processes of painting the product name black and painting the release date black are specified in addition to process of adding string confidential to the document described above. Therefore three modules that execute these processes are loaded and three modification processing units are generated for each module.

In the modification processing units execute modifying processes sequentially. First the modification processing unit adds string confidential. Second the modification processing unit paints the unannounced product name black in the document. Lastly the modification processing unit paints the release date black in the document. In case of printing a document with a plurality of pages and these three modification processing units are generated the modification processing units and determine whether or not the specific string predefined by administrators such as product name and release date is included in each page and execute modifying process if the string is included and do not execute modifying process if the string is not included.

Accordingly in case the document is printed by a remote printer located at places where outsiders can browse printouts and categorized as low security level the document is modified so that confidential information is hidden that can omit revealing confidential information surely even if the printing is executed by mistake.

Processes executed by the data processing apparatus will be described below in detail with reference to and . The application executing unit chooses the virtual printer driver and various settings are registered in S. Administrators of the data processing apparatus can do this registration using dedicated GUI. The application sends job data to the virtual printer driver in response to requests from the information processing apparatus in S.

In S after receiving job data the virtual printer driver generates process ID and private instances in the dispatch processing unit for the job and registers the process ID with field in the job management list . Process ID consists of string number and combination of string and number to identify a job that has started. In S the virtual printer driver sends the process ID to the print request source notifying unit in the application executing unit and notifies the UI displaying unit of information on printing request source.

In S the job information data extracting unit separates the job information data and the image data from job data generates job information ID and image ID and registers the job information ID and the image ID with the job managing list . In S the job information data extracting unit sends the image data to the job storing unit and sends the job information data to the dispatch processing unit of the corresponding private instance.

In S the print commanding unit in the dispatch processing unit requests the output destination determining unit to determine output destination. In S the output destination determining unit determines output destination from the job information data by referring to the association table and sends the information on output destination to print commanding unit .

In S the virtual displaying unit generates the working space allocating memory space moves the image data from the job storing unit to the working space and calls the image processing unit . In S the image processing unit executes image converting process using the job information data . It should be noted that this image converting process includes imposing images changing printing size margin converting bitmap data without drawing codes into EMF and so on that includes drawing codes. Processes in S and S and processes in S and S can be processed in parallel. Also processes in S and S can be processed firstly and then processes in S and S can be processed subsequently.

In S whether image converting process by the image processing unit has finished or not is determined If not the process proceeds to S. In S process will repeat until image conversion and format setting are finished for all images under processing in the working space 

After finishing image converting processes for all images the print commanding unit specifies remote driver corresponding to the output destination allocated to the process ID by referring to dispatch managing table. In S before calling remote driver the print commanding unit requests the document modifying unit to process modifying and sends information on output destination determined by the output destination determining unit to the document modifying unit .

In S the document modifying unit executes modifying process in compliance with output destination. After finishing this modifying process the document modifying unit sends notification to the print commanding unit . In S the print commanding unit calls remote driver corresponding to the output destination generates RAW data from modified image data generates output data adding PDL commands and so on to the RAW data and sends the output data to the remote printer as the output destination.

In S the print commanding unit notifies the UI displaying unit that the print commanding unit sent the output data to the remote printer and sends the process ID corresponding to the output data to the UI displaying unit . In S the UI displaying unit acquires information on output destination and printing related to the received process ID by referring to the dispatch managing table and also acquires information on printing request source related to the received process ID by referring to the display destination managing table. In S the UI displaying unit notifies the information processing apparatus as the printing request source of information on output destination and printing.

Modifying processes executed by the document modifying unit in will be described in detail with reference to . This modifying process starts in response to the print commanding unit requests the document modifying unit to execute modifying process and the document modifying unit received information on output destination in S in . In S the modifying management unit sends the received information on output destination to the output destination type determining unit .

In S after receiving information on output destination from the modifying management unit the output destination type determining unit determines which type in categorizing information that administrators set the output destination included in the information on output destination corresponds to and decides the type of output destination. Example of categorizing information is information such as High security level and Low security level that includes type as described above and the output destination type determining unit decides type by determining which type the output destination corresponds to. In this case the output destination type determining unit specifies environment of output destination by referring to predefined information on printer location associating environment at location of remote printer with security level decides its security level and determines corresponding type. This information on environment at printer location is also included in text data etc. as described above.

Each remote printer can hold information on security levels of the remote printer as printer information. In this case the data processing apparatus can acquire this information on security level acquiring Management Information Base MIB information that remote printer manages using Simple Network Management Protocol SNMP. 

After determining type the output destination type determining unit notifies the Plug in Factory of the type. In S the Plug in Factory determines which modifying process to execute by referring to the type. Next the Plug in Factory reads module that executes the determined modifying process and generates the modification processing units that execute the determined modifying process. The Plug in Factory specifies modifying process by referring to the received type and content of modifying process that corresponds to each type set by administrators. Module information such as module name to identify the module that executes the modifying process is included in the content of the modifying process. The Plug in Factory can read the module by referring to the module information. This module information can also be included in text data etc. as described above.

This modifying process can be implemented using application. Each module is provided in plug in format and stored in storage area such as predefined folders. Accordingly the Plug in Factory can search for module that executes specified modifying process among modules stored in storage area loads the module replaces a part of program with the module and execute the specified modifying process.

After generating the modification processing units the Plug in Factory notifies the modifying management unit of information on the generated modification processing units to. The modifying management unit calls the generated modification processing units sequentially and executes the modifying processes sequentially using the information in response to the notification in S. In S the modification processing unit executes the modifying process on image data processed image converting in working space. The modifying process modifies content of the image data as shown in and . For example the modification can be processes such as adding specified string to document to be printed adding watermark adding user name painting confidential information part black and so on.

In S after finishing modifying process the modification processing unit notifies the modification management unit that it finished the modifying process. In S the modification management unit determines whether or not it receives notification from all the modification processing units. If there is still modification processing unit to execute modifying process remaining the modification management unit goes back to S and requests next modification processing unit to execute modifying process.

If the modification management unit receives the notification from all the modification processing units in S the modification management unit proceeds to S notifies the print commanding unit that the modifying process has finished and finishes this modifying process.

After receiving modifying request from the print commanding unit the document modifying unit receives information on output destination determined by the output destination determining unit . The modification management unit in the document modifying unit reads all the modules from the storage area storing all the modules to generate the modification processing units . Since the document modifying unit reads all the modules a new modifying process can be added just by creating module that executes the new modifying process and storing the module into the storage area. In this embodiment the modification management unit generates a modification processing unit.

After reading all the modules and generating all the modification processing units or before generating all the modification processing units the modification management unit sends the received information on output destination to the output destination type determining unit . The output destination type determining unit determines which type the received information on output destination corresponds to and decides type as described above.

The output destination type determining unit notifies the modification management unit of the determined type. The modification management unit requests the modification processing units to execute modifying processes sequentially and sends information on the determined type. Each modification processing unit determines whether or not it executes the modifying process in response to the received type. Therefore in this embodiment each modification processing unit acts as a determining unit.

When the modification processing units execute the determining process described above the modification management unit tells the modification processing units to refer to content of modifying process corresponding to each type set by administrators. Thereby the modification processing units specify content of modifying process by type and compare the content with content of modifying process that the modification processing unit executes itself. If they match the modification processing unit determines to execute the modifying process and if not the modification processing unit determines not to execute the modifying process. It should be noted that the modification processing unit executes modifying process on image data processed image converting in the working space .

The modification management unit requests to each modification processing unit and receives notification from each modification processing unit on either it finishes modifying process or it does not execute modifying process. After receiving notification from all the modification processing units the modification management unit notifies the print commanding unit that the modifying process has been finished.

An example of document modifying process in this embodiment will be described below with reference to . In this example the categorized type is High security level and unannounced product name and release date are included in the document as confidential information. In this embodiment the modification management unit reads all modules that execute modifying process and generates all the modification processing units 

The modification management unit requests the modification processing units to execute modifying processes. After receiving the requests the modification processing units decide that only the modification processing unit executes modifying process and other modification processing units do not execute modifying processes by referring to the determined type. Consequently after the modification processing unit processes adding string confidential the modification processing units and process nothing. Therefore only the modification processing unit executes the modifying process on the document and adds the string confidential at a slant on the document in .

The modification management unit requests the modification processing units to execute modifying processes. After receiving the requests the modification processing units decide that all the modification processing unit execute modifying process by referring to the determined type.

In the modification processing units execute modifying processes sequentially. First the modification processing unit executes process adding string confidential. Next the modification processing unit executes process painting the unannounced product name in the document black. Lastly the modification processing unit executes process painting the release data in the document black. Thereby revealing confidential information can be surely prevented. Also same as the embodiment in in case of printing a document with a plurality of pages the modification processing units and determine whether or not the specific string predefined by administrators such as product name and release date is included in each page and execute modifying processes if the string is included and do not execute modifying process if the string is not included. Therefore the modification processing unit does not execute process painting black on pages that do not include unannounced product name.

Next modifying process that the document modifying unit in executes will be described below in detail referring to and . In response to the document modifying unit s receiving request for modifying process and information on output destination from the print commanding unit in S in the document modifying unit starts modifying process in . The modification management unit reads all the modules that execute modifying processes and generates the modification processing unit for each module in S.

The modification management unit holds address of storage area such as folder that stores all the modules and can read all the modules by accessing to that address.

Next the modification management unit sends information on output destination received from the print commanding unit to the output destination type determining unit in S. The order of S and S described above can be in reverse. Alternatively both steps can run concurrently.

After receiving information on output destination from the modification management unit the output destination type determining unit determines which type the output destination corresponds to in categorizing information set by administrators and decides type in S. Categorizing information and the way how to determine the type are the same as described above.

After determining type the output destination type determining unit notifies the modification management unit of the type. The modification management unit requests the generated modification processing units to execute modifying processes sequentially and sends information on the determined type in S. After receiving that information the modification processing unit determines whether or not it executes modifying process corresponding to the determined type.

The modification processing unit specifies modifying process by referring to content of modifying process corresponding to each type set by administrators. The modification processing unit determines whether or not it executes modifying process by comparing content of specified modifying process with content of modifying process executed by the modification processing unit itself and determining whether they match or not.

If the modification processing unit determines to execute modifying process it proceeds to S and execute modifying process on image data processed image converting in working space. After finishing the modifying process the modification processing unit notifies the modification management unit that the modifying process has been finished. Alternatively if the modification processing unit determines not to execute modifying process it proceeds to S and notifies the modification management unit that it does not execute modifying process.

The modification management unit determines whether or not it receives the notification from all the modification processing units. If not the modification management unit goes back to S and request the next modification processing unit to execute modifying process and sends information on the determined type. If so the modification management unit proceeds to S notifies the print commanding unit that the modifying process has been finished and finishes this modifying process.

As described above according to the invention in the current network printing environment that information processing apparatuses such as PCs can access to image forming apparatuses such as a plurality of printers an information processing apparatus connected via network can always print documents on the same printer using user information apparatus information and content of the document etc. Thereby a data processing apparatus that makes management for each print job more efficient and improves information security can be presented.

This data processing apparatus can secure high security by outputting a document after executing modifying process on the document corresponding to environment of output destination even if a user prints out the document by mistake. Especially this data processing apparatus can easily change add and delete a rule of modifying document content by changing categorizing information adding and deleting modules. Also it is easy to add a rule of modifying document even after installing the system.

These features in this embodiment described above can be implemented by computer readable program written in object oriented program languages such as C C C and Java. That program can be presented storing in storage medium such as HDD CD ROM MO DVD floppy disk EEPROM and EPROM and also transferred via network.

Numerous additional modifications and variations are possible in light of the above teachings. It is therefore to be understood that within the scope of the appended claims the disclosure of this patent specification may be practiced otherwise than as specifically described herein.

As can be appreciated by those skilled in the computer arts this invention may be implemented as convenient using a conventional general purpose digital computer programmed according to the teachings of the present specification. Appropriate software coding can readily be prepared by skilled programmers based on the teachings of the present disclosure as will be apparent to those skilled in the software arts. The present invention may also be implemented by the preparation of application specific integrated circuits or by interconnecting an appropriate network of conventional component circuits as will be readily apparent to those skilled in the relevant art.

