---

title: Network devices with feature peer network logic
abstract: A device receives a service graph of feature peers for a packet of an application flow. The feature peers are associated with a network and the service graph includes an ordered set of the feature peers and forwarding requirements for the ordered set of the feature peers. The device generates forwarding instructions based on the service graph. The forwarding instructions include instructions to forward the packet to the ordered set of feature peers. The device provides the forwarding instructions to network devices of the network. The network devices forward the packet of the application flow to the ordered set of feature peers based on the forwarding instructions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09160797&OS=09160797&RS=09160797
owner: VERIZON PATENT AND LICENSING INC.
number: 09160797
owner_city: Basking Ridge
owner_country: US
publication_date: 20121017
---
Initially a structure of services and or features offered over networks e.g. telecommunications networks the Internet etc. was directly between real computing and or storage hosts in what is commonly called the edge to edge principle. The services features were usually client server server server or client client oriented.

Intermediate network nodes provided in such networks operated only at the Internet layer e.g. routers or the link layer e.g. Ethernet switches using either routing or bridging protocols. Some of these networking protocols were augmented to implement various forms of virtualization such as virtual circuits and multiple access virtual private networks. These forms of network virtualization were achieved by adding header fields to packets such as Internet protocol IP tunnel headers multiprotocol label switching MPLS label stack headers and or extended Ethernet fields e.g. virtual local area network VLAN tags in conjunction with augmenting the routing and signaling protocols to distribute this information. This resulted in multiple logically separate or virtual networks often referred to as Virtual Private Networks VPNs .

Services features provided by networking and computing resources are often implemented as overlays on networks e.g. the Internet and or VPNs . Furthermore an enrichment of services has occurred with the rise of middle boxes or feature peers which operate above the Internet layer at the transport and or application layers. The feature peers may include gateways provided between VPNs and the Internet network address translation NAT devices firewalls intrusion detection devices proxies of various forms content filtering devices caches web acceleration devices multimedia transcoding and statistics collection devices etc. The feature peers as part of service structures i.e. feature networks deviate from the original edge to edge principle and require adherence to a different set of guiding principles to implement a reliable traffic engineered system that will achieve the goal of a converged service infrastructure.

Some networks provide packet and or application flow services and or features via one or more feature peers i.e. middle boxes that communicate amongst themselves and not necessarily with a client or server . Examples of such packet application flow services features include content related services e.g. voice audio and or video transcoding multi media conference bridging replication content filtering content recognition etc. security related services e.g. network based firewalls and or application layer gateways intrusion detection prevention and or mitigation denial of service detection prevention and or mitigation etc. flow rate and quality of service QoS related services e.g. metering policing shaping scheduling coordination with higher level signaling policy and configuration caching etc. statistics collection and accounting related services e.g. usage cap metering notification and or enforcement billing etc. administrative related services e.g. selective packet set capture replication redirection and or blocking packet inspection etc. proxy related services where a feature peer acts on behalf of a client and or server which is either temporarily off the network and or in a failure recovery state etc.

Such packet application flow services features may be managed via a star or flower network centered on a feature switch. In the star flower arrangement traffic to from a customer e.g. of a service or feature is directed into a set of feature peers by the feature switch. Such an arrangement may require configuration of the feature switch use configuration of tunnels and configuration of load balancing and may result in sub optimal performance. The star flower arrangement is expensive because the feature switch e.g. an access router a load balancer a tunnel gateway or a traffic steering application TSA executing on a server the routers and switches are traversed twice between each feature peer and the feature switch that connects to a customer and or a router on the edge of a data center connected to the Internet and or a virtual private network VPN . In the star flower arrangement there needs to be a tunnel for each feature peer since a tunnel identification ID determines a next feature peer or an exit to a data network. Furthermore the star flower arrangement can increase latency if the feature peers are not near the feature switch that connects to the customer and the feature switch that connects to the feature peers. The star flower arrangement requires a static configuration in the feature switch of tunnel IDs and next hops and is resilient only if a dedicated replica of the feature peers is provisioned. If a dedicated replica of the feature peers is not provisioned then reconfiguration is needed in response to failures e.g. load balancing across the feature peers requires reconfiguration and it is difficult to represent more complex feature topologies than a chain feature topology or is complex to implement dynamic feature networks also referred to as service graphs.

Packet application flow services features may also be managed via a service header based routing arrangement. In one example service header based routing arrangement a feature switch registers with a service broker and the service broker provisions a table e.g. of the feature switch to map customer packets to a service routing function e.g. associated with the feature switch . The service broker provisions service nodes with service header tunnel network and subscriber information consistent with provisioning of the service routing function for the feature switch and or edge router that connects to a destination of a customer in the network. The feature switch or edge router determines data network information and receives a packet from a customer e.g. from a device associated with the customer or from the Internet VPN. The access edge router uses the table to determine that the packet includes subscribed to services and directs the packet to the service routing function. The service routing function uses local configuration and packet information to determine a service header to be inserted encapsulates this within a tunnel header and forwards the packet to a first service node over the tunnel. The service node decapsulates the packet from the tunnel reviews the service header and configured information from the service broker to determine an outgoing tunnel and forwards the packet to the next service node. Eventually the packet returns to the access edge router that originally received the packet. The service routing function decapsulates the packet from the tunnel examines the service header and determines that the next step is forwarding. The access edge router then forwards the packet via the data network toward a destination address.

The service header based routing arrangement requires expensive changes to the software and or hardware of the access edge router in order to implement the service header insertion and processing and to make it behave as a feature switch. The service header based routing arrangement relies on a centralized service broker to determine download and monitor state and to optimize and load balance service node level routing across a set of service nodes. Centralization may limit a convergence time and responsiveness to change associated with the arrangement. Furthermore the service header based routing arrangement requires fault detection and restoration performance to be determined by the centralized service broker and may not be implemented across more than one service provider.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.

Systems and or methods described herein may enable forwarding of packets of an application flow e.g. traffic between an ordered set of feature peers e.g. the ordered set being referred to herein as a service graph and or a feature network in a more efficient manner than traditional load balancer feature switch and or traffic steering application methods. The systems and or methods may determine the service graph of feature peers based on inspection of the packets and may utilize a protocol e.g. the Openflow protocol or other similar protocols to configure network devices of a network with the service graph. The network devices may forward the packets of the application flow to the feature peers based on the service graph and without changing the application flow. The systems and or methods may dynamically change the service graph for particular application flows e.g. long lasting high bandwidth application flows to achieve even greater efficiencies for the particular application flows implement changes in the service s provided and or add remove feature peers from the service graph.

The user device may include a radiotelephone a personal communications system PCS terminal a smart phone a personal digital assistant PDA a laptop computer a tablet computer a personal computer etc. The OFC may include one or more computation and communication devices that utilize a protocol e.g. the Openflow protocol or other similar protocols to configure the network devices with service graphs. The TSA may include one or more computation and communication devices that generate service graphs for directing packets through an ordered set of feature peers. The AAA device may include one or more computation and communication devices that provide functionality to support authentication authorization and accounting functions that determine user related information e.g. device characteristics identity of the user profiles associated with the user current state of the user s services etc. .

Each of the feature peers may include one or more computation and communication devices that provide packet application flow services features such as content related services security related services flow rate and QoS related services statistics collection and accounting related services administrative related services etc. For example a first feature peer FP may provide cache related services a second feature peer FP may provide statistics collection related services a third feature peer FP may provide content filtering related services and a fourth feature peer FP may provide security related services.

The destination address device may include a computation and communication device that is a destination of packets provided by the user device. In one example the destination address device may be provided in the Internet or a VPN. The network may include a local area network LAN a wide area network WAN a metropolitan area network MAN a telephone network such as the Public Switched Telephone Network PSTN an intranet a packet switched network or a combination of networks. The network device may include one or more traffic transfer devices such as a gateway a router a switch a firewall a network interface card NIC a hub a bridge a proxy server an optical add drop multiplexer OADM or some other type of device that processes and or transfers traffic.

As further shown in a customer associated with the user device may wish to provide a packet of an application flow to the destination address device for delivery to for example a network e.g. the Internet a VPN etc. . A packet returned by the destination address device and destined for the customer may be processed in a similar manner in a reverse direction for the service graph which may differ from the forward direction. In one example the packet may need to traverse one or more of the feature peers before being provided to the destination address device. The TSA may consult with the AAA and or may inspect the packet of the application flow to determine one or more service graphs for the packet of the application flow. The TSA may provide the service graphs to the OFC and the OFC may receive and store the service graphs.

In one example a first service graph SG may cause the packet to traverse the fourth feature peer the third feature peer and the second feature peer before being provided to the destination address device. A second service graph SG may cause the packet to be provided to only the first feature peer. A third service graph SG may cause the packet to traverse the third feature peer and the first feature peer before being provided to the destination address device.

In one example implementation the OFC may configure the network devices in the network to implement the first service graph. For example the OFC may provide first forwarding instructions to the network devices where the first forwarding instructions may instruct the network devices to implement the first service graph. Based on the first forwarding instructions the network devices may forward the packet of the application flow to the fourth feature peer the third feature peer the second feature peer and finally to the destination address device. The set of feature peers and or the order in which the feature peers are traversed may be different for a packet traversing from the customer to the destination address device than a packet traversing from the destination address device to the customer.

Alternatively or additionally the OFC may configure the network devices in the network to implement the second service graph. For example the OFC may provide second forwarding instructions to the network devices where the second forwarding instructions may instruct the network devices to implement the second service graph. Based on the second forwarding instructions the network devices may forward the packet of the application flow to the first feature peer.

Alternatively or additionally the OFC may configure the network devices in the network to implement the third service graph. For example the OFC may provide third forwarding instructions to the network devices where the third forwarding instructions may instruct the network devices to implement the third service graph. Based on the third forwarding instructions the network devices may forward the packet of the application flow to the third feature peer the first feature peer and finally to the destination address device. The TSA may instruct the OFC to connect multiple service graphs together on behalf of communications between customers and destination address devices. This may include the case of inter customer communication such as peer to peer communication peer to peer streaming network based caching on behalf of peers etc. It may also include the case where more complex service graphs are composed from ordered sets of simpler service graphs.

The term application flow as used herein is to be broadly construed to include a traffic flow of one or more packets. The term packet as used herein is intended to be broadly construed to include a frame a datagram a packet or a cell a fragment of a frame a fragment of a datagram a fragment of a packet or a fragment of a cell or another type arrangement or packaging of data.

The term component as used herein is intended to be broadly construed to include hardware e.g. a processor a microprocessor an application specific integrated circuit ASIC a field programmable gate array FPGA a chip a memory device e.g. a read only memory ROM a random access memory RAM etc. etc. or a combination of hardware and software e.g. a processor microprocessor ASIC etc. executing software contained in a memory device .

User device may include a radiotelephone a PCS terminal e.g. that may combine a cellular radiotelephone with data processing and data communications capabilities a wireless telephone a cellular telephone a smart phone a PDA e.g. that can include a radiotelephone a pager Internet intranet access etc. a laptop computer a tablet computer a personal computer a landline telephone or other types of computation and communication devices. In an example implementation user device may include a device that is capable of accessing features and or services e.g. content related services security related services flow rate and QoS related services accounting related services administrative related services etc. provided by other components of environment .

OFC may include one or more server devices or other types of computation and communication devices that gather process search and or provide information in a manner described herein. In one example implementation OFC may configure network devices with service graphs or feature peer networks using a protocol such as the Openflow protocol or other similar protocols. Each service graph may include instructions for forwarding packets to an ordered set of feature peers .

TSA may include one or more server devices or other types of computation and communication devices that gather process search and or provide information in a manner described herein. In one example implementation TSA may monitor packets of an application flow and or may consult information in AAA to determine user related information and service graphs for the packets. TSA may provide the determined service graphs to OFC for provisioning network devices with the service graphs. In one example the functions of OFC and TSA described herein may be combined in a single device or distributed among several devices. Alternatively or additionally the functions of TSA described herein may be performed by OFC .

AAA may include one or more server devices or other types of computation and communication devices that gather process search and or provide information in a manner described herein. In an example implementation AAA may provide functionality to support authentication authorization and accounting functions that can be employed to control access to user related information. With regard to the authentication function AAA may verify a device s e.g. user device s specific digital identity provided via an identifier e.g. a password a digital certificate a phone number a user profile customer subscription options customer preferences etc. associated with the device or a set of devices e.g. owned by a customer or a group of customers . With regard to the authorization function AAA may grant or refuse privileges to a device for accessing specific services e.g. IP address filtering address assignment route assignment QoS etc. usage of particular service graphs and access to user related information. With regard to the accounting function AAA may track consumption of network resources by customers e.g. by user device and may use this information for management planning billing etc.

Feature peer may include one or more server devices or other types of computation and communication devices that gather process search and or provide information in a manner described herein. In an example implementation feature peer may provide packet application flow services features such as content related services security related services flow rate and QoS related services statistics collection and accounting related services administrative related services etc. as described above. For example the first feature peer may provide cache related services the second feature peer may provide statistics collection related services the third feature peer may provide content filtering related services and the fourth feature peer may provide security related services. Feature peers may also communicate with each other using additional packets.

Destination address device may include one or more server devices or other types of computation and communication devices that gather process search and or provide information in a manner described herein. In an example implementation destination address device may include a device that is a destination of packets provided by user device . In one example destination address device may include a network device e.g. a router a switch etc. an application server etc. provided in the Internet. As shown in destination address device may connect to a network such as the Internet a VPN etc.

Network may include a LAN a WAN a MAN a telephone network such as the Public Switched Telephone Network PSTN an intranet a packet switched network an optical fiber or fiber optic based network a television network or a combination of networks.

Network device may include one or more traffic transfer devices such as a gateway a router a switch a firewall a load balancer a NIC a hub a bridge a proxy server an OADM or some other type of device that processes and or transfers traffic e.g. packets of an application flow . In one example implementation network devices may be configured with a service graph by OFC and may collect statistics for use by OFC . The service graph may include instructions that cause network devices to forward packets in a particular manner through environment . For example the service graph may include instructions that cause network devices to forward packets from user device to the fourth feature peer the third feature peer the second feature peer and finally to destination address device . The instructions may affect multiple related flows or a single flow. Instructions that affect multiple related flows may make environment more scalable in parts that process a large aggregate of flows. Instructions that process individual or small sets of flows may be processed by user device destination address device and or network devices capable of supporting a larger number of individual flows.

Although shows example devices of environment in other implementations environment may include fewer devices different devices differently arranged devices or additional devices than depicted in . Alternatively or additionally one or more devices of environment may perform one or more tasks described as being performed by one or more other devices of environment .

Processing unit may include one or more processors microprocessors or other types of processing units that may interpret and execute instructions. Main memory may include a RAM or another type of dynamic storage device that may store information and instructions for execution by processing unit . ROM may include a ROM device or another type of static storage device that may store static information and or instructions for use by processing unit . Storage device may include a magnetic and or optical recording medium and its corresponding drive. In one example implementation processing unit main memory ROM and or storage device may be dedicated hardware and or may be implemented as virtual instances via a virtual machine manager VMM e.g. a hypervisor .

Input device may include a mechanism that permits an operator to input information to device such as a keyboard a mouse a pen a microphone voice recognition and or biometric mechanisms etc. Output device may include a mechanism that outputs information to the operator including a display a printer a speaker etc. Communication interface may include any transceiver like mechanism that enables device to communicate with other devices and or systems. For example communication interface may include mechanisms for communicating with another device or system via a network and or may be capable of performing switching functions e.g. under the control of OFC . Switching functions of communication interface may be dedicated hardware virtually provided by a VMM implemented in a guest operating system and or implemented in applications.

As described herein device may perform certain operations in response to processing unit executing software instructions contained in a computer readable medium such as main memory . A computer readable medium may be defined as a non transitory memory device. A memory device may include space within a single physical memory device or spread across multiple physical memory devices. The software instructions may be read into main memory from another computer readable medium or from another device via communication interface . The software instructions contained in main memory may cause processing unit to perform processes described herein. Alternatively hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein. Thus implementations described herein are not limited to any specific combination of hardware circuitry and software.

Although shows example components of device in other implementations device may include fewer components different components differently arranged components or additional components than depicted in . Alternatively or additionally one or more components of device may perform one or more other tasks described as being performed by one or more other components of device .

Input components may be a point of attachment for physical links and may be a point of entry for incoming traffic such as packets. Input components may process incoming traffic such as by performing data link layer encapsulation or decapsulation matching on specific sets of packet header fields taking certain actions implementing a table of functions etc. In an example implementation input components may send and or receive packets.

Switching routing mechanism may interconnect input components with output components . Switching routing mechanism may be implemented using many different techniques. For example switching routing mechanism may be implemented via busses via crossbars and or with shared memories. The shared memories may act as temporary buffers to store traffic from input components before the traffic is eventually scheduled for delivery to output components .

Output components may store packets and may schedule packets for service on output physical links. Output components may include scheduling algorithms that support priorities and guarantees. Output components may support data link layer encapsulation and decapsulation and or a variety of higher level protocols. In an example implementation output components may send packets receive packets match on specific sets of packet header fields take certain actions implement a table of functions etc.

Control unit may use routing protocols and one or more forwarding tables for forwarding packets. Control unit may connect with input components switching routing mechanism and output components . Control unit may compute a forwarding table implement routing protocols and or run software to configure and manage device . Control unit may determine routing for any packet whose destination address may not be found in the forwarding table.

In an example implementation control unit may include a bus that may include a path that permits communication among a processor a memory and a communication interface e.g. for communication with OFC . Processor may include one or more processors microprocessors ASICs FPGAs or other types of processing units that may interpret and execute instructions. Memory may include a RAM a ROM device a magnetic and or optical recording medium and its corresponding drive and or another type of static and or dynamic storage device that may store information and instructions for execution by processor . Memory may also temporarily store incoming traffic e.g. a header of a packet an entire packet or a set of packets from input components for processing by processor before a packet s is directed back to switching routing mechanism transported by switching routing mechanism and eventually scheduled to be sent to output components . Communication interface may include any transceiver like mechanism that enables control unit to communicate with other devices and or systems.

As described herein device may perform certain operations in response to processor executing software instructions contained in a computer readable medium such as memory . The software instructions may be read into memory from another computer readable medium such as a data storage device or from another device via communication interface . The software instructions contained in memory may cause processor to perform processes described herein. Alternatively hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein. Thus implementations described herein are not limited to any specific combination of hardware circuitry and software.

Although shows example components of device in other implementations device may include fewer components different components differently arranged components or additional components than depicted in . Alternatively or additionally one or more components of device may perform one or more other tasks described as being performed by one or more other components of device .

As further shown in a customer associated with user device may wish to provide a packet of an application flow to destination address device or to another user device e.g. in peer to peer communication . In one example packet may need to traverse one or more feature peers before being provided to destination address device or another user device . TSA may consult with AAA and or may inspect packet of the application flow to determine one or more service graphs for packet of the application flow. TSA may provide service graphs to OFC and OFC may receive and store service graphs .

In one example a first service graph SG of service graphs may cause packet to traverse the fourth feature peer the third feature peer and the second feature peer before being provided to destination address device . A second service graph SG of service graphs may cause packet to be provided to the first feature peer e.g. a cache server . A third service graph SG of service graphs may cause packet to traverse the third feature peer and the first feature peer before being provided to destination address device .

In one example implementation OFC may configure network devices in network to implement the first service graph SG as indicated by reference number . For example. OFC may generate and provide first forwarding instructions to network devices . The first forwarding instructions may include and be stored in a match action table MAT e.g. as described below in connection with FIGS. and that instructs network devices to implement the first service graph. Based on the first forwarding instructions network devices may forward packet of the application flow to the fourth feature peer the third feature peer the second feature peer and finally to destination address device .

Alternatively or additionally OFC may configure network devices to implement the second service graph SG as indicated by reference number . For example OFC may generate and provide second forwarding instructions to network devices . The second forwarding instructions may include and be stored in a MAT that instructs network devices to implement the second service graph. Based on the second forwarding instructions network devices may forward packet of the application flow to the first feature peer .

Alternatively or additionally OFC may configure network devices to implement the third service graph SG . For example OFC may generate and provide third forwarding instructions to network devices as indicated by reference number . The third forwarding instructions may include and be stored in a MAT that instructs network devices to implement the third service graph. Based on the third forwarding instructions network devices may forward packet of the application flow to the third feature peer the first feature peer and finally to destination address device .

Examples of service graphs and or forwarding instructions that may be implemented by OFC and or network devices are described and illustrated below in connection with .

Although shows example components of environment in other implementations environment may include fewer components different components differently arranged components or additional components than depicted in . Alternatively or additionally one or more components of environment may perform one or more other tasks described as being performed by one or more other components of environment .

As further shown in a customer associated with user device may wish to provide packets of an application flow to destination address device . In one example the packets may need to traverse one or more feature peers before being provided to destination address device . In a traditional service chain implementation the packets of the application may be directed through TSA as shown by a traditional service path . In traditional service path TSA may direct the packets to features services implemented on feature peers . In one example traditional service path may provide the packets from user device to TSA and TSA may forward the packets to the fourth feature peer . The fourth feature peer may process the packets e.g. with features services available at feature peer and may provide the processed packets back to TSA . TSA may forward the packets to the third feature peer . The third feature peer may process the packets e.g. with features services available at feature peer and may provide the processed packets back to TSA . TSA may forward the packets to the second feature peer . The second feature peer may process the packets e.g. with features services available at feature peer and may provide the processed packets back to TSA . TSA may then forward the packets to destination address device . Packets provided by destination address device and destined for user device may traverse traditional service path in a reverse order or via another service path that may include the same set of feature peers another set of feature peers or the same set of feature peers in a different order.

The traditional service chain implementation may be expensive because multiple server interfaces network device interfaces and paths across network must be traversed between TSA and feature peers . Furthermore configuration of TSA for traditional service path may be complex and error prone and may support only a static service graph.

Another traditional approach may include providing application stitching points in TSA between overlay paths which may allow development of arbitrary service graphs that vary over time. Although such an approach may be flexible and extensible packets may still traverse a significant number of interfaces e.g. on servers network devices etc. devices and paths which may not be required for all application flows. Furthermore in some cases TSA may need to recognize specific customers and or flows by interacting with AAA .

As further shown in TSA may communicate with OFC via an application programming interface API . OFC may communicate with and or configure network devices and or virtual switching functions in feature peers via a protocol such as the Openflow protocol . That is the network device switching and forwarding functionality of may be implemented on a dedicated or virtualized server as described in . TSA may receive packets of an application flow from user device and may inspect one or more of the packets and or may receive information from AAA . Based on the information received from AAA e.g. about the customer the packets the application flow etc. and or the inspection of the one or more packets. TSA may determine a service graph for the packets of the application flow. In one example service graph may cause the packets to traverse the fourth feature peer the third feature peer and the second feature peer before being provided to destination address device . TSA may provide service graph to OFC via API .

OFC may receive service graph and may configure network devices to implement service graph . For example OFC may provide to network devices instructions to implement service graph . The instructions may cause network devices to forward packets generated by user device and or destination address device to one or more feature peers . For example the instructions may instruct network devices to forward packets from user device to the fourth feature peer the third feature peer the second feature peer and destination address device . Network devices may implement service graph without changing the application flow. Thus as shown in network devices may forward the packets of the application flow to the fourth feature peer the third feature peer the second feature peer and finally to destination address device . Configuring network devices with service graph may reduce costs since fewer interfaces in network may be traversed by packets traveling to from user device and or destination address device .

Although shows example components of environment in other implementations environment may include fewer components different components differently arranged components or additional components than depicted in . Alternatively or additionally one or more components of environment may perform one or more other tasks described as being performed by one or more other components of environment .

As further shown in a customer associated with user device may wish to provide packets of an application flow to destination address device . In a traditional approach TSA may dynamically determine that the packets may be provided to a particular feature peer rather than to destination address device . For example TSA may determine that the packets may be provided to a closest cache server with available capacity e.g. the first feature peer . TSA may inspect the first packets and or sample packets of the application flow may consult with AAA and or may use other information to determine a traditional dynamic service path for the packets. However with traditional dynamic service path the packets of the application flow must still traverse TSA . Such an arrangement may not achieve a lowest cost for implementing the service structure and may require additional software development such as statistics collection from the cache server. Alternatively or additionally a dynamic service path may be created by inserting a transcoder in line with packets being sent to the customer so that capabilities of user device and the available bandwidth of the access network may be adjusted.

For application flows that occur frequently e.g. long lived application flows it may be desirable to avoid the cost of traversing unnecessary feature peers as well as TSA for each packet of the flow. TSA may receive the packets of the long lived application flow from user device . TSA may inspect the first packets and or sample packets of the application flow may consult AAA and or may use other information e.g. information about a closest cache server with available capacity . Based on the information received from AAA e.g. about the customer the packets the application flow etc. the other information and or the inspection of the first sample packets TSA may determine that the packets of the application flow need to be provided to the first feature peer e.g. a cache server or a transcoder . Based on this determination TSA may generate an openflow dynamic service graph for the packets of the application flow. In one example service graph may cause the packets to traverse between user device and the first feature peer . TSA may provide service graph to OFC via API .

OFC may receive service graph and may configure network devices to implement service graph . For example OFC may provide to network devices instructions to implement service graph . The instructions may cause network devices to forward packets between user device and the first feature peer . For example the instructions may instruct network devices to forward packets from user device to the first feature peer and may instruct network devices to forward packets from the first feature peer to user device . Thus as shown in network devices may forward the subsequent packets of the application flow between user device and the first feature peer . Service graph may bypass unnecessary feature peers e.g. feature peers and as well as TSA which may reduce cost. OFC may utilize time out and or polling of network devices to detect an end of the long lived application flow and or to collect statistics.

Although shows example components of environment in other implementations environment may include fewer components different components differently arranged components or additional components than depicted in . Alternatively or additionally one or more components of environment may perform one or more other tasks described as being performed by one or more other components of environment .

Interfaces of an access network e.g. wireline or wireless associated with user device and interfaces of a service network e.g. Internet associated with destination address device may depend on the type of access network and whether the features services provided by feature peers have any state information e.g. customer identification connection type flow type identification etc. related to customers. When feature peers do not have customer state information application flow entries may be configured to be proportional to a number of service graphs a topology of a service graph etc. When one or more feature peers in a service graph include customer state information needed to process application flows then a mapping of customer addresses may be made to feature peers that include the customer state information. Additional packets communicated between TSA and feature peers and or directly communicated between feature peers may be used where customer state information is needed. In one example a feature peer may act as a repository e.g. a storage device shared across multiple feature peers for providing customer state information to service graphs.

In a wireline access network the mapping of the customer addresses may be provided because blocks of customer addresses may be assigned to edge network devices of network . The blocks of customer addresses may be used as prefix entries in the service graph to direct packets to feature peers that contain the corresponding customer state. In such a scenario service graph may be used.

In a wireless access network a customer may move between different cells e.g. base stations which may cause application flows associated with the customer to move between different interfaces on packet data network PDN gateways PGWs . Furthermore a customer may leave radio coverage and then return to radio coverage and an application flow from the same customer may appear with a different IP address at the same PGW and potentially on the same interface. In such a scenario TSA may determine an identification of a customer e.g. by intercepting a RADIUS or DIAMETER accounting message and or a pilot packet and may generate a service graph that directs packets to feature peers that contain state information associated with the identified customer.

As shown in a customer associated with user device may wish to provide packets of an application flow to destination address device . TSA may receive and inspect the packets of the application flow from user device and may determine an identification of a customer e.g. by intercepting a RADIUS or DIAMETER accounting message . Based on the identification of the customer and the inspection of the packets TSA may determine that the packets should be directed to feature peers that contain state information associated with the identified customer. TSA may consult with AAA and or may inspect some packets of the application flow to determine that the packets may require a tunnel e.g. a set of stacked VLANs a GRE tunnel with an embedded identifier an MPLS label stack an Ethernet PBB tag and or other packet fields used as a tunnel feature header to cause the packets to flow to feature peers that include the customer state information. The tunnel header portion e.g. a MAC address a destination IP address of a GRE tunnel or the uppermost label s in an MPLS label stack may be used to direct packets to the next node s in the service graph while the feature header portion may be used by the feature itself e.g. an inner and or outer VLAN a GRE tunnel key field or an MPLS label deeper in the label stack . Based on this determination TSA may generate a service graph for the packets of the application flow. In one example service graph may cause the packets to traverse TSA the fourth feature peer the third feature peer and the second feature peer before being provided to destination address device . TSA may provide service graph to OFC via API .

OFC may receive service graph and may configure network devices in network to implement service graph . For example OFC may provide to network devices instructions to implement service graph . The instructions may cause network devices to forward packets generated by user device to one or more feature peers . For example the instructions may instruct network devices to forward packets from user device to TSA the fourth feature peer the third feature peer the second feature peer and destination address device .

TSA may add or push tunnel headers to the packets as indicated by reference number before providing the packets to the first network device in service graph . Network devices may implement service graph by forwarding the packets of the application flow to the fourth feature peer the third feature peer the second feature peer and finally to destination address device . The last network device of service graph may remove or pop the tunnel headers from the packets as indicated by reference number before providing the packets to destination address device .

As shown in destination address device may wish to provide packets of an application flow to user device . TSA may receive and inspect the packets of the application flow from destination address device and may determine an identification of a customer associated with user device . Based on the identification of the customer and the inspection of the packets TSA may determine that the packets should be directed to feature peers that contain state information associated with the identified customer. TSA may consult with AAA and or may inspect some packets of the application flow to determine that the packets may require a tunnel e.g. a set of stacked VLANs a GRE tunnel with an embedded identifier an MPLS label stack an Ethernet PBB tag or other packet fields used as a tunnel feature header to cause the packets to flow to feature peers that include the customer state information. Based on this determination TSA may generate a service graph for the packets of the application flow. In one example service graph may cause the packets to traverse TSA the second feature peer the third feature peer and the fourth feature peer before being provided to user device . TSA may provide service graph to OFC via API .

OFC may receive service graph and may configure network devices in network to implement service graph . For example OFC may provide to network devices instructions to implement service graph . The instructions may cause network devices to forward packets generated by destination address device to one or more feature peers . For example the instructions may instruct network devices to forward packets from destination address device to TSA the second feature peer the third feature peer the fourth feature peer and user device .

TSA may add or push tunnel headers to the packets as indicated by reference number before providing the packets to the first network device in service graph . Network devices may implement service graph by forwarding the packets of the application flow to the second feature peer the third feature peer the fourth feature peer and finally to user device . The last network device of service graph may remove or pop the tunnel feature headers from the packets as indicated by reference number before providing the packets to user device .

Directing packets in such a manner may require use of a VLAN or a tunnel as provided by TSA which may cause the packets to flow through a service graph of feature peers that contain the customer state information. Network devices may push and pop a tunnel header on packets at each feature peer in the service graph. The last network device may pop the tunnel header before sending the packets to user device and or destination address device . The packet traversal of TSA and the initial pushing of a tunnel header on the packets may occur at different points depending upon a direction of the packet flow as illustrated in .

Although not as cost effective as service graph shown in the arrangement depicted in may be less expensive than having every packet for each feature peer traverse TSA as is the case in traditional approaches. Alternatively or additionally. TSA may generate one or more service graphs that include feature peers with customer state information and feature peers without customer state information. Alternatively or additionally customers may require that a service graph be reliable and recover rapidly from failures. Current TSA based deployments often deploy a redundant set of feature peers connected by ports in a one to one redundancy configuration. In an example implementation feature peers may share restoration feature peer e.g. for shared access to customer state information where possible with a goal being to achieve a one to N redundancy configuration.

Although show example components of environment in other implementations environment may include fewer components different components differently arranged components or additional components than depicted in . Alternatively or additionally one or more components of environment may perform one or more other tasks described as being performed by one or more other components of environment .

As further shown in TSA and feature peer may be combined in a single device that includes a TSA an operating system a security application an operating system and a hypervisor . TSA may include a traffic steering application that provides the functionality of TSA as described herein. Operating system may include a guest operating system such as for example a Microsoft Windows Desktop operating system a Microsoft Windows Server operating system a Linux operating system etc. Security application may include an application that provides packet application flow services features e.g. security related services such as intrusion detection mitigation associated with feature peer . Operating system may include a guest operating system such as for example a Microsoft Windows Desktop operating system a Microsoft Windows Server operating system a Linux operating system etc. Hypervisor may provide hardware and or software virtualization techniques that allow multiple operating systems e.g. guest operating systems to execute concurrently on a host computer. Hypervisor may present to the guest operating systems a virtual operating platform that provides a compute environment described in connection with and may manage the execution of the guest operating systems.

Feature peer and feature peer may be combined in a single device that for example includes a statistics collection application an operating system a content filtering application an operating system and a hypervisor . Statistics collection application may include an application that provides packet application flow services features e.g. statistics collection services associated with feature peer . Operating system may include a guest operating system such as for example a Microsoft Windows Desktop operating system a Microsoft Windows Server operating system a Linux operating system etc. Content filtering application may include an application that provides packet application flow services features e.g. content filtering related services associated with feature peer . Operating system may include a guest operating system such as for example a Microsoft Windows Desktop operating system a Microsoft Windows Server operating system a Linux operating system etc. Hypervisor may provide hardware virtualization techniques that allow multiple operating systems e.g. guest operating systems to execute concurrently on a host computer. Hypervisor may present to the guest operating systems a virtual operating platform and may manage the execution of the guest operating systems.

As further shown in network devices and may include ports that are numbered to . Port may connect network device and destination address device and may connect network device and user device . Port may connect network device and network device . Port may connect network device and feature peers and may connect network device and TSA feature peer . Port may connect network devices and with other devices of network such as a network attached storage NAS device e.g. a cache server . Network devices and may also connect to OFC . Address and VLAN information may be associated with TSA and feature peers and . For example a media access control MAC address e.g. MAC c may be associated with feature peer and a MAC address e.g. MAC d may be associated with feature peer . A VLAN e.g. VLAN 100 and a MAC address e.g. MAC a may be associated with TSA and a VLAN e.g. VLAN 100 and a MAC address e.g. MAC b may be associated with feature peer .

Network devices and may include a match action table MAT that stores packet forwarding instructions associated with service graphs configured in network devices and . MAT may include a match field an action field and a table field. The match field may include information used to compare to information associated with a packet. For example the match field may include entries for an incoming physical or logical port InPort a generalized description of an IP destination address DA or source address SA a source or a destination MAC SMAC or DMAC address and or a VLAN identifier. The match field may also include a priority associated with the entries in order to determine which action should be applied when multiple entries of the match field are met. When a match occurs with an entry in the match field the instructions in the action field and a corresponding set of one or more entries in the table field are performed. Entries of the table field may include for example forwarding to an outgoing port OutPort and changing a destination MAC DMAC address to be placed in the packet.

Although shows example components of environment portion in other implementations environment portion may include fewer components different components differently arranged components or additional components than depicted in . Alternatively or additionally one or more components of environment portion may perform one or more other tasks described as being performed by one or more other components of environment portion . For example MAT may be implemented in operating system and or hypervisor .

As further shown in a first set of packet flows may be referred to as a traffic steering packet flow . Traffic steering packet flow may correspond to the packet flow shown and described in connection with . Traffic steering packet flow may include user device providing packets to network and network providing the packets to TSA . TSA may add tunnel feature headers to the packets and may forward the packets to network . Network may forward the packets to feature peer and feature peer may process and return the packets to network . Network may forward the packets to feature peer and feature peer may process and return the packets to network . Network may forward the packets to feature peer and feature peer may process and return the packets to network . Network may remove the tunnel feature headers from the packets and forward the packets to destination address device . In one example destination address device may determine that features requested by the packets are available in feature peer . In response to a hypertext transfer protocol HTTP GET CONTENT message destination address device may generate a HTTP REDIRECT request e.g. requesting that the packets be redirected to feature peer and may provide the request to user device via a path that is the reverse of the path traversed by the packets not shown in .

Based on the REDIRECT request a second set of packet flows referred to as a transient packet flow may be generated. Transient packet flow may include user device providing packets e.g. a HTTP GET CACHE request to network and network providing the packets to TSA . TSA may invoke the API e.g. API with OFC and may forward the packets to feature peer based on communication with OFC . Feature peer may process the packets and may return the packets to network . Network may forward the packets e.g. a 200 OK response to user device . Network and OFC may exchange packets until OFC creates a shortcut packet flow .

A third set of packet flows may be referred to as shortcut packet flow . Shortcut packet flow may correspond to the packet flow shown and described in connection with . Shortcut packet flow may include user device providing packets e.g. a HTTP GET request to network and network providing the packets directly to feature peer e.g. rather than to TSA as in transient packet flow . Feature peer may process the packets and may return the packets to network . Network may forward the packets e.g. a 200 OK response to user device . When the packet flow stops network and OFC may exchange packets. For example network may provide to OFC an indication that a flow timer has expired and that a flow entry has been removed. Based on the indication OFC may retrieve usage statistics from network and may provide the usage statistics via additional packets to feature peer .

Although shows example components of environment portion in other implementations environment portion may include fewer components different components differently arranged components or additional components than depicted in . Alternatively or additionally one or more components of environment portion may perform one or more other tasks described as being performed by one or more other components of environment portion .

As shown in environment portion may include user device OFC TSA feature peers and destination address device network devices and TSA operating system security application operating system statistics collection application operating system content filtering application operating system and MAT . User device OFC TSA feature peers and destination address device network devices and TSA operating system security application operating system statistics collection application operating system content filtering application operating system and MAT may include the features described above in connection with one or more of for example .

As further shown in MAT of network device may include forwarding instructions and MAT of network device may include forwarding instructions . A first row of forwarding instructions may include a high priority match on a wildcard IP destination address DA for packets received on incoming port InPort 1 see and an action to forward the packet. The table in the first row of forwarding instructions may include instructions to direct a packet e.g. received from user device to outgoing port OutPort 3 see change a destination MAC DMAC address to a and push a VLAN tag of 100 which may direct the packet to TSA . TSA may process the packet and may return the packet over port see to network device . The incoming port InPort 3 the VLAN tag VLAN 100 and the SMAC address SMAC a of the packet may match an entry in the second row of forwarding instructions . The second row of forwarding instructions may include an action to forward the packet. The table in the second row of forwarding instructions may include instructions to direct the packet to outgoing port OutPort 3 see change a DMAC address to b. and push a VLAN tag of 100 which may forward the packet to security application . If security application allows the packet to proceed the packet may be forwarded on port see to network device . The packet from security application may match the InPort 3 VLAN 100 SMAC b entry in the third row of forwarding instructions . Based on the match network device may forward the packet on outgoing port OutPort 2 see which connects to network device .

Network device may receive the packet and may process the packets according to forwarding instructions . The packet may match the InPort 2. VLAN 100 SMAC b entry in the first row forwarding instructions . Based on the match network device may direct the packet to outgoing port OutPort 3 change a DMAC address to d and push a VLAN tag of 100 which may forward the packet to content filtering application . If content filtering application allows the packet to proceed the packet may be sent on port to network device . The packet may match the InPort 3 SMAC d VLAN 100 entry in the second row of forwarding instructions . Based on the match network device may direct the packet to outgoing port OutPort 3 change a DMAC address to c and push a VLAN tag of 100 which may forward the packet to statistics collection application . Statistics collection application may forward the packet to port of network device . The packet may match the InPort 3 SMAC c and VLAN 100 entry in the third row of forwarding instructions . Based on the match network device may direct the packet to outgoing port OutPort 1 and may remove the VLAN tag which may forward the packet to destination address device . A similar process may be performed for the packet flow in the direction from destination address device to user device as shown and described in connection with .

Although shows example components of environment portion in other implementations environment portion may include fewer components different components differently arranged components or additional components than depicted in . Alternatively or additionally one or more components of environment portion may perform one or more other tasks described as being performed by one or more other components of environment portion .

As shown in environment portion may include user device OFC TSA feature peers and destination address device network devices and TSA operating system security application operating system statistics collection application operating system content filtering application operating system and MAT . User device OFC TSA feature peers and destination address device network devices and TSA operating system security application operating system statistics collection application operating system content filtering application operating system and MAT may include the features described above in connection with one or more of for example .

As further shown in MAT of network device may include forwarding instructions and MAT of network device may include forwarding instructions . A first row of forwarding instructions may include a high priority match on a wildcard IP destination address DA for packets received on incoming port InPort 1 see and an action to forward the packet. The table in the first row of forwarding instructions may include instructions to direct a packet e.g. received from user device to outgoing port OutPort 3 change a destination MAC DMAC address to a and push a VLAN tag of 100 which may direct the packet to TSA . TSA may direct the packet to a cache when a cache hit is detected. TSA may send a message over API between TSA and OFC requesting that OFC set up a shortcut packet flow to the cache server as shown in . A second row of forwarding instructions may include a match on InPort 3 and DA OFC and an action to forward the packet. The table in the second row of forwarding instructions may include instructions to direct the packet to outgoing port OutPort 4 which may direct the packet from TSA to OFC and or NAS device . OFC may receive the packet and may send the packet to network device .

The packet may match the InPort 4 DA Cache entry in the third row of forwarding instructions . Based on the match network device may forward the packet on outgoing port OutPort 2 and may push a VLAN tag of 200 which may direct the packet to a cache server not shown but connected to port . The cache server may return the packet with on port with VLAN 200 of network device . The packet may match the InPort 4 VLAN 200 entry in the second row of forwarding instructions . Based on the match network device may forward the packet on outgoing port OutPort 2 and may remove the VLAN tag which may direct the packet to network device . The packet may match the InPort 2 DA Customer Prefix entry in the third row of forwarding instructions . Based on the match network device may forward the packet on outgoing port OutPort 1 . This process may continue until OFC creates a shortcut flow entry which may result in the shortcut packet flow shown and described in connection with and below .

Although shows example components of environment portion in other implementations environment portion may include fewer components different components differently arranged components or additional components than depicted in . Alternatively or additionally one or more components of environment portion may perform one or more other tasks described as being performed by one or more other components of environment portion .

As shown in environment portion may include user device OFC TSA feature peers and destination address device network devices and TSA operating system security application operating system statistics collection application operating system content filtering application operating system and MAT . User device OFC TSA feature peers and destination address device network devices and TSA operating system security application operating system statistics collection application operating system content filtering application operating system and MAT may include the features described above in connection with one or more of for example .

As further shown in MAT of network device may include forwarding instructions and MAT of network device may include forwarding instructions . A first row of forwarding instructions may include entries for a shortcut packet flow . Shortcut packet flow may include a match entry InPort 1 SA Customer DA Cache an action entry e.g. forward a packet and a table entry OutPort 2 VLAN 200 . Port numbers for network devices and are shown in . The remaining entries of forwarding instructions and forwarding instructions may be the same as the entries of forwarding instructions and forwarding instructions respectively. Shortcut packet flow may enable flow specific usage counters to be collected and a flow expiration to be detected.

Based on shortcut packet flow packets from user device may be directed from user device to a cache server e.g. feature peer and back to user device and may bypass other feature peers . In this example a termination of the packet flow may be determined when a network device located at a user device facing edge of network detects that shortcut packet flow has timed out i.e. no packets have been received for the MAT entry for a predetermined time interval . At this point shortcut packet flow may be removed e.g. by network device or OFC from forwarding instructions . For packets not addressed to DA Cache the packet flow described above in connection with and may be utilized. If a packet is addressed to DA Cache the transient packet flow may be utilized until OFC creates the shortcut packet flow.

Although shows example components of environment portion in other implementations environment portion may include fewer components different components differently arranged components or additional components than depicted in . Alternatively or additionally one or more components of environment portion may perform one or more other tasks described as being performed by one or more other components of environment portion .

As shown in process may include receiving and or storing a service graph for a packet of an application flow where the service graph includes an ordered set of feature peers and forwarding requirements between the feature peers e.g. unicast replicate load balance etc. block and generating forwarding instructions based on the service graph and forwarding requirements where the forwarding instructions include instructions to forward the packet to the ordered set of feature peers block . For example in an implementation described above in connection with a customer associated with user device may wish to provide packet of an application flow to destination address device . TSA may consult with AAA and or may inspect packet to determine one or more service graphs and user state information for packet of the application flow. TSA may provide service graphs to OFC and OFC may receive and store service graphs . A first service graph SG of service graphs may cause packet to traverse the fourth feature peer the third feature peer and the second feature peer before being provided to destination address device . OFC may generate first forwarding instructions that include a MAT that instructs network devices to implement the first service graph.

As further shown in process may include providing the forwarding instructions to network devices of a network where the network devices and or switching functions in the feature peers forward the packet to the ordered set of feature peers based on the forwarding instructions block . For example in an implementation described above in connection with OFC may provide the first forwarding instructions to network devices . The first forwarding instructions may include a MAT that instructs network devices to implement the first service graph. Based on the first forwarding instructions network devices may forward packet of the application flow to the fourth feature peer the third feature peer the second feature peer and finally to destination address device . The choice of feature peers in a service graph may depend upon whether the features require customer state information. In one example feature peers may access customer state information from another feature peer in the service graph. Alternatively or additionally additional packets may be exchanged between feature peers and may include the customer state information or how the customer state information can be accessed e.g. from shared network attached storage .

As shown in process may include receiving and or storing a modified service graph for a packet of an application flow where the modified service graph includes a particular feature peer block and generating modified forwarding instructions based on the modified service graph where the modified forwarding instructions include instructions to forward the packet to the particular feature peer block . For example in an implementation described above in connection with a customer associated with user device may wish to provide packet of an application flow to destination address device . TSA may consult with AAA and or may inspect packet to determine one or more service graphs for packet of the application flow. TSA may provide service graphs to OFC and OFC may receive and store service graphs . A second service graph SG of service graphs may cause packet to be provided to the first feature peer e.g. a cache server . OFC may generate second forwarding instructions that include a MAT that instructs network devices to implement the second service graph.

As further shown in process may include providing the modified forwarding instructions to network devices of a network where the network devices forward the packet to the particular feature peer based on the modified forwarding instructions block . For example in an implementation described above in connection with . OFC may provide the second forwarding instructions to network devices . The second forwarding instructions may include a MAT that instructs network devices to implement the second service graph. Based on the second forwarding instructions network devices may forward packet of the application flow to the first feature peer .

As shown in process may include receiving and or storing forwarding instructions based on a service graph that includes an ordered set of feature peers where the forwarding instructions include instructions to forward packets to the ordered set of feature peers block and receiving a packet of an application flow block . For example in an implementation described above in connection with a customer associated with user device may wish to provide packet of an application flow to destination address device . TSA may consult with AAA and or may inspect packet to determine one or more service graphs for packet of the application flow. TSA may provide service graphs to OFC and OFC may receive and store service graphs . A first service graph SG of service graphs may cause packet to traverse the fourth feature peer the third feature peer and the second feature peer before being provided to destination address device . OFC may provide the first forwarding instructions to network devices . The first forwarding instructions may include a MAT that instructs network devices to implement the first service graph.

As further shown in process may include forwarding the packet to one feature peer of the ordered set of feature peers a user device or a destination address device based on the forwarding instructions block . For example in an implementation described above in connection with based on the first forwarding instructions network devices may forward packet of the application flow to the fourth feature peer the third feature peer the second feature peer and finally to destination address device .

As shown in process may include receiving and or storing modified forwarding instructions based on a service graph that includes a particular feature peer where the modified forwarding instructions include instructions to forward packets to the particular feature peer block and receiving a packet of an application flow block . For example in an implementation described above in connection with a customer associated with user device may wish to provide packet of an application flow to destination address device . TSA may consult with AAA and or may inspect packet to determine one or more service graphs for packet of the application flow. TSA may provide service graphs to OFC and OFC may receive and store service graphs . A second service graph SG of service graphs may cause packet to be provided to the first feature peer . OFC may provide the second forwarding instructions to network devices . The second forwarding instructions may include a MAT that instructs network devices to implement the second service graph.

As further shown in process may include forwarding the packet to the particular feature peer based on the modified forwarding instructions block . For example in an implementation described above in connection with based on the second forwarding instructions network devices may forward packet of the application flow to the first feature peer .

Systems and or methods described herein may enable forwarding of packets of an application flow between an ordered set of feature peers e.g. a service graph in a more efficient manner than a feature switch e.g. implemented by a traditional load balancer access router and or traffic steering application method. The systems and or methods may determine the service graph of feature peers based on inspection of the packets and may utilize a protocol to configure network devices of a network with the service graph. The network devices may forward the packets of the application flow to the feature peers based on the service graph and without changing the application flow. The systems and or methods may dynamically change the service graph for particular application flows to achieve even greater efficiencies for the particular application flows.

The foregoing description of implementations provides illustration and description but is not intended to be exhaustive or to limit the implementations to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the implementations.

For example while series of blocks have been described with regard to the order of the blocks may be modified in other implementations. Further non dependent blocks may be performed in parallel.

It will be apparent that example aspects as described above may be implemented in many different forms of software firmware and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement these aspects should not be construed as limiting. Thus the operation and behavior of the aspects were described without reference to the specific software code it being understood that software and control hardware could be designed to implement the aspects based on the description herein.

Even though particular combinations of features are recited in the claims and or disclosed in the specification these combinations are not intended to limit the disclosure of the possible implementations. In fact many of these features may be combined in ways not specifically recited in the claims and or disclosed in the specification. Although each dependent claim listed below may directly depend on only one other claim the disclosure of the possible implementations includes each dependent claim in combination with every other claim in the claim set.

No element act or instruction used in the present application should be construed as critical or essential to the implementations unless explicitly described as such. Also as used herein the articles a and an are intended to include one or more items and may be used interchangeably with one or more. Where only one item is intended the term one or similar language is used. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise.

