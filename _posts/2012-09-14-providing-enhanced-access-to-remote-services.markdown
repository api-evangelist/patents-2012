---

title: Providing enhanced access to remote services
abstract: Techniques are described for providing client computing nodes with enhanced access to remote network-accessible services, such as by providing local capabilities specific to the remote services. In at least some situations, access to remote services by a client computing node may be enhanced by automatically locally performing some activities of the remote services, such as to improve the efficiency of communications that are sent between the client computing node and the remote service and/or to improve the efficiency by the remote service of processing communications from the client computing node. As one example, a node manager system local to a client computing node may perform authentication of communications sent by the client computing node to a remote service and/or may perform other activities specific to the remote service, so that the remote service does not need to perform the authentication and/or other performed activities for the communications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09455969&OS=09455969&RS=09455969
owner: Amazon Technologies, Inc.
number: 09455969
owner_city: Reno
owner_country: US
publication_date: 20120914
---
This application is a continuation of co pending U.S. application Ser. No. 11 764 739 filed Jun. 18 2007 and entitled Providing Enhanced Access to Remote Services which is hereby incorporated by reference in its entirety.

The following disclosure relates generally to providing client computing nodes with enhanced access to remote network accessible services.

As the use of the Internet and the World Wide Web Web has become widespread it is increasingly common for software applications to access and use services provided by remote computing systems such as via defined APIs application program interfaces . Such remote services may provide a variety of types of functionality and in some situations may be provided by third parties such as for a fee. One example of such remote services are Web services which allow heterogeneous applications and computers to interact and which may be defined and implemented using a variety of underlying protocols and techniques. For example some Web service implementations return data in XML eXtensible Markup Language format using HTTP HyperText Transport Protocol in response to a Web service invocation request specified as a URI Uniform Resource Identifier such as a URL Uniform Resource Locator that includes a specified operation and one or more query parameters. Such URI based invocation requests may for example be based on the use of XML over HTTP e.g. as part of the REpresentational State Transfer or REST distributed interaction model that focuses on resources . In other implementations additional underlying protocols are used for various purposes such as SOAP Simple Object Access Protocol for standard message exchange WSDL Web Services Description Language for description of service invocations and UDDI Universal Description Discovery and Integration service for discovery of available services.

In addition software applications may be executed and interact with remote services in various ways. For example data centers housing significant numbers of interconnected computing systems have become commonplace such as private data centers that are operated by and on behalf of a single organization as well as public data centers that are operated by entities as businesses. Some public data center operators provide network access power and secure installation facilities for hardware owned by various customers while other public data center operators provide full service facilities that also include hardware resources made available for use by their customers. However as the scale and scope of typical data centers has increased the task of provisioning administering and managing the physical computing resources has become increasingly complicated.

The advent of virtualization technologies for commodity hardware has provided a partial solution to the problem of managing large scale computing resources for many customers with diverse needs allowing various computing resources to be efficiently and securely shared between multiple customers. For example virtualization technologies such as those provided by VMWare XEN or User Mode Linux may allow a single physical computing machine to be shared among multiple users by providing each user with one or more virtual machines hosted by the single physical computing machine with each such virtual machine being a software simulation acting as a distinct logical computing system that provides users with the illusion that they are the sole operators and administrators of a given hardware computing resource while also providing application isolation and security among the various virtual machines. When a software application executing on a virtual machine hosted by a computing system in a data center sends a communication to a remote service external to the data center the communication typically passes through management software on the computing system and then multiple other devices before leaving the data center and traveling to the computing system providing the remote service.

Although Web services and other remote services allow various applications and computers to interact the current implementations and uses of Web services have various problems. For example due to the insecure nature communications over the Web if such remote services provide confidential or otherwise restricted information and other functionality the remote services will typically authenticate each received communication from a remote client in order to verify that the client is authorized to obtain the requested functionality. These authentication activities are typically performed even for repeated communications from a client whose previous communications have been authenticated as the remote service cannot ensure that a new communication actually comes from that client without the authentication. However such authentication activities by the remote services consume significant resources and in some situations may necessitate expensive hardware setups to accommodate the communications e.g. having one or more hardware load balancers that receive communications and then direct each communication to an appropriate one of multiple Web server devices to handle the authentication and other pre processing activities for the communication .

Techniques are described for providing client computing nodes with enhanced access to remote network accessible services such as by providing and using local capabilities specific to the remote services. In at least some embodiments the computing nodes may be physical computing systems and or virtual machines that are each hosted on one or more physical computing systems. In addition in at least some embodiments the access to remote services by a client computing node may be enhanced by automatically performing some activities of the remote services in a manner local to the client computing node such as to improve the efficiency of communications that are sent between the client computing node and the remote service and or to improve the efficiency by the remote service of processing communications from clients. As one example a node manager system that manages a local client computing node may perform authentication of communications sent by the client computing node to a remote service and or may perform other activities specific to the remote service so that the remote service does not need to perform the authentication and or other performed activities for the communications allowing the remote service to use less resources to provide a given level of capabilities. In at least some embodiments the described techniques are automatically performed by an embodiment of a Node Manager system as described in greater detail below.

After the communication passes through the network it is forwarded to the remote network accessible service . In this example the service includes a hardware load balancer which receives incoming communications and directs them to an appropriate one of multiple Web server devices with communication being forwarded to Web server in this example. In this example the remote service is a Web service and the initiated communication may be an HTTP based SOAP or REST communication that invokes an API provided by the remote service. In other embodiments other types of remote services and or communications may be used. Furthermore in embodiments with types of remote services other than Web services types of servers other than Web servers may be used to process communications and or hardware load balancers may not be used.

As illustrated in detail for Web server each of the Web servers in this example may perform various activities as part of service s response to the communication and provision of corresponding functionality as appropriate. In this example Web server includes a component to perform authentication of the incoming communication and may have one or more other components to provide other capabilities specific to the service . The authentication of the incoming communication may have various forms such as to verify that the communication is from a particular client e.g. based on use of a predefined client identifier and or of secret information specific to that client such as from a prior registration by the client or other prior interactions with the client to verify that the communication contents have not been changed after it is created e.g. based on an included message digest using a cryptographic hash or other form of digital signature or based on use of a checksum etc. The other service specific capabilities from components may also have various forms. In this example the service provides clients with access to various types of stored information e.g. information previously stored by the clients . Accordingly if the communication is a request for a particular group of stored information the service specific capabilities may include interacting with a data storage manager to determine on which of multiple data storage servers that the requested information is stored and then interacting with a particular data storage server in this example server to retrieve the requested information.

The Web server that is handling the received communication then responds to the communication as appropriate which in this example includes sending the requested stored information to the client . In particular the Web server sends one or more response communications to the client that travel the same or a similar path in reverse as did communication when traveling to the remote service from the client. In this example a response communication is sent to the hardware load balancer which forwards the communication to the network . The communication is then forwarded to the optional devices if present which forward the communication to the client . In this manner the client may obtain requested functionality from a remote service. It will be appreciated that the example in is greatly simplified for the sake of understanding and that large numbers of clients may be simultaneously accessing large numbers of remote services via numerous network devices and other intermediate devices.

In this example a software program not shown executing on client node initiates a communication to obtain desired functionality from a remote network accessible service . Remote service is a service from which information may be obtained in a manner similar to or identical to that of service of in this example and the communication is to obtain information from the remote service in a manner similar to that of communication of . The client node is unaware of the presence of node manager in this example and thus communication may be identical or near identical to that of communication of e.g. if sent by the same client to the same remote service to obtain the same requested functionality . However in this example the communication is received by the node manager before leaving the computing system . Moreover unlike the example in the node manager in this example provides additional capabilities rather than merely forwarding on the communication . In particular the node manager includes a software component that is specific to remote service so that the component may be used by the node manager to perform some of the activities that would otherwise be performed by the remote service . In this example the software component includes a sub component to provide authentication related capabilities and optionally one or more other sub components to provide other types of capabilities specific to the remote service . Thus the node manager uses the sub component to authenticate the received communication in a manner similar to that of component of .

Furthermore in this example the other sub components on the node manager include functionality similar to that of component s of including the ability to interact with internal systems that are part of the remote service to obtain requested functionality. Accordingly after communication is authenticated one of the other sub components initiates a new communication to obtain requested functionality from the remote service . In particular rather than using the default interface of remote service in which new incoming communications are directed to a hardware load balancer for forwarding to one of the Web servers the communication from the node manager is directed to an internal data storage manager system of the remote service e.g. using a separate interface that is not publicly exposed and or that is available only to authorized requesters . In a manner similar to the communication optionally passes through one or more devices and if so is forwarded by them to a network . However the communication is forwarded by the network directly to the data storage manager system resulting in interactions to obtain information on which of multiple data storage servers that the requested information is stored. The information about the data storage server that stores the requested information in this example data storage server is then forwarded back to the node manager optionally passing through the device s and if so is forwarded by them to the node manager.

It will be appreciated that new communication generated by node manager in this example may be based on received communication in various ways such as to create communication by altering communication or to otherwise include information from communication in communication e.g. information specific to client node such as a client identifier corresponding to a user or other client on whose behalf the executing software initiates the communication information specific to the request such as an identifier corresponding to the desired information etc. . In addition new communication may include additional information that is not included in received communication such as information specific to node manager so that the new communication will be treated by the remote service as coming from an authorized requester.

After the node manager receives the information from the remote service indicating that data storage server stores the desired information the node manager initiates an additional communication that is directed to the particular data storage server that stores the desired information. The communication optionally passes through the device s and if so is forwarded to the network . The communication is then forwarded to data storage server resulting in interactions to obtain the stored requested information. The obtained information is then forwarded back to the node manager optionally passing through the device s and if so is forwarded by them to the node manager. After receiving the requested stored information the node manager sends communication to client node to provide the information to the client node. In at least some embodiments communication will be sent to client node by node manager as if the communication arrived from the remote service in response to the initial communication without any indication of node manager being involved. Thus as previously noted client node may be unaware of some or all of the activities of the node manager including that the node manager alters communication and or replaces communication with one or more communications from the node manager .

While not illustrated here in some embodiments additional communications from client node to remote services may be further enhanced in additional ways. For example node manager may track or have access to information about each of the virtual machine nodes and and about communications between the virtual machine nodes and remote services and may use that information in various ways. As one example information about virtual machine node may be used by the node manager when authenticating communication such as to verify information about one or more software programs that issued the communication and or about an identify of a user or other entity associated with the virtual machine node. Furthermore after a first communication to a first remote service is authenticated by the node manager system for a particular virtual machine node at least some later communications from the virtual machine node may be treated by the node manager system as being authenticated without having to perform actual authentication activities for those later communications e.g. all communications sent until the configuration of the virtual machine node changes all communications sent to the same first remote service until the configuration of the virtual machine node changes certain communications that meet specified criteria etc. . Moreover in at least some embodiments the node manager system may enhance access to remote services for only certain communications from virtual machine nodes. For example the node manager may further have a second service component not shown that is specific to a second remote service but may not have a service specific component for a third remote service not shown . If so the node manager may use that second service component to enhance at least some communications from virtual machine nodes to that second remote service but may merely forward communications between virtual machine nodes and that third remote service without providing any enhanced access. In addition only certain types of communications to remote services may be enhanced such as to enhance communications for specific types of functionality e.g. requests to store information and or to retrieve stored information for remote service but not for other types of functionality e.g. to access account information or other administrative information for a client .

Thus in this example due to the service specific capabilities the node manager is able to access the functionality of remote service that is requested by client node but in an enhanced manner that does not involve any interactions with the hardware load balancer or the multiple Web servers of the remote service. Accordingly those parts of the remote service may have additional capacity to handle other requests via the standard default interface e.g. communication s from other computing systems that are forwarded to the hardware load balancer via the network or in some situations may be reduced or eliminated e.g. to reduce the number of Web server devices . In addition in this example the enhanced access to the remote service involved additional communications by the node manager relative to the communications from computing system in since the node manager first retrieved information about which data storage server held the desired data and then interacted with that data storage server to obtain the desired data. Such additional communications may be warranted in certain situations such as if the monetary or other costs e.g. time costs of such additional communications are outweighed by the benefits from the enhanced access.

In other embodiments such additional communications by the node manager may not be used such as if desired functionality from a particular remote service may be obtained with a single communication to the remote service e.g. via a standard interface for the remote service or via a single communication to one or more internal parts of the remote service . For example with respect to example remote service the node manager system could perform communication authentication activities and then send a single message to one of the Web servers whether via the hardware load balancer or instead directly such as if the service specific capabilities include software based load balancing capabilities to obtain and provide the desired group of information. Alternatively if the data storage manager was instead able to retrieve and provide a desired group of information rather than providing information about where that information is located a single communication from the node manager could instead be sent to the data storage manager whether via the hardware load balancer and or a Web server or instead directly to obtain and provide the desired group of information. In some embodiments other communications than those illustrated may occur such as if the performance of authentication activities by node manager using authentication sub component involves one or more communications to the remote service such as to coordinate the authentication activities with one of the Web servers or for other purposes.

It will be appreciated that the example of is simplified for the sake of explanation and that the described techniques may be used in a variety of other situations. For example while the node manager provides the access enhancement capabilities in in other embodiments other systems or devices may provide similar functionality. For example one or more of the devices in may provide similar functionality for client computing system regardless of whether any virtual machine nodes are present on the computing system . Furthermore in other embodiments the node manager system and or client computing node may have other forms. For example the node manager system may provide an environment in which other software programs may execute e.g. an emulation environment an interpreter environment such as a Java Virtual Machine environment etc. and the client computing node may be a software program executing within the node manager system environment.

In addition various additional types of functionality may be provided as part of enhancing access to remote services in at least some embodiments. For example in at least some embodiments and situations a node manager system may be able to perform all activities needed to respond to a request from a managed computing node for functionality from a remote service without interacting with the remote service and if so may directly generate and provide a response to the managed computing node. As one example in some embodiments one or more node manager systems may maintain a local cache or other store of information received from one or more remote services and may respond to requests for particular groups of stored information from a remote service with locally stored information e.g. if the locally stored information is sufficiently recent and or satisfies other criteria .

A node manager system may intercept or otherwise receive copies of communications sent from managed computing nodes in various ways in various embodiments. As previously noted in some embodiments a physical architecture of interconnections will cause such communications to be directed through the node manager system such as if the node manager system is part of a hypervisor for a client virtual machine node or if the node manager system is part of a proxy system managing communications from a client computing system. In addition the node manager system may perform activities such as causing a domain name specified by a client node to be resolved to a network address e.g. an IP address in a specialized manner such as to select a network address corresponding to the node manager system and thus cause the client node to communicate with the node manager system while the client node believes that the node manager system is actually an intended remote service. Furthermore when generating one or more communications to a remote service on behalf of a managed computing node the node manager system may further in some embodiments consider various options about how the remote service may provide requested functionality and attempt to select an optimal or otherwise preferred option as one example if the remote service has multiple alternative computing systems that may provide a particular type of requested functionality the node manager system may attempt to select the remote service computing system that is most proximate e.g. in a geographical sense and or logical network sense and or that currently has the most capacity e.g. by performing software based load balancing .

As previously noted in at least some embodiments the node manager system may perform its activities to enhance access for a managed computing node to a remote service without awareness and or acquiescence of the managed computing node while in other embodiments such awareness and or acquiescence of the managed computing node may be present. Similarly while in at least some embodiments the node manager system may interact with a remote service on behalf of a managed computing node in such a manner that the remote service is aware of and or acquiesces to the activities of the node manager system e.g. with the node manager system acting as an authorized requester that has increased privileges relative to others such as the managed computing node in other embodiments the remote service may not be aware of and or acquiesce to the node manager system interactions being performed by other than the managed computing node. Regardless of the awareness or acquiescence of the managed computing node and or remote service the node manager system may in at least some embodiments further perform its activities and interactions with the managed computing node and or remote service in such a manner as to satisfy any established parameters for interactions between the managed computing node and remote service e.g. to satisfy any communication volume constraints communication timing constraints communication quality constraints etc. .

Furthermore in some embodiments the node manager system may enhance access only to certain remote services such as remote services provided by the same entity as the entity who operates the node manager system remote services that have a predefined affiliation with the node manager system remote services that provide service specific components and or interfaces to enable the node manager to provide the enhanced access to the remote service etc.

Thus the described techniques for a node manager system to enhance access by a managed computing node to a remote service may provide a variety of benefits including benefits to the managed computing nodes to the remote service and or to the node manager system. For example by enabling a node manager system to perform at least some activities specific to a remote service the remote service may in some embodiments and situations obtain benefits equivalent to having a distributed or decentralized service but without having to provide and maintain the computing systems and related software on which the node manager systems operate. In addition with respect to managed computing nodes and node manager systems the operation of the node manager systems may in some embodiments and situations enable faster communications and or less communications. For example for a remote service that provides a stateless interface in which multiple received communications from a managed computing node are repeatedly authenticated and otherwise repetitively processed a node manager system may be able to provide at least some of the beneficial effects of state based interactions for the communications such as by maintaining information about prior authentications and or other interaction information for the managed computing node and remote service so that current communications and interactions may be made more efficient e.g. by not performing additional authentications if information about a managed computing node is trusted or known to be accurate to at least a desired degree of certainty .

In addition while not illustrated in in at least some embodiments computing systems and or may be part of a group of related physical computing systems such as multiple computing systems that are part of a program execution service for executing multiple programs on behalf of multiple users of the service. Such a program execution service may use multiple computing systems on multiple physical networks e.g. multiple physical computing systems and networks within a data center in order to execute third party customers programs including multiple virtual machine nodes on at least some of the computing systems that are each able to execute one or more programs for a customer. In such embodiments customers may provide programs to be executed to the execution service and may reserve execution time and other resources on physical or virtual hardware facilities provided by the execution service. In addition customers may define virtual networks that will be used by the program execution service so as to transparently provide computing nodes of the virtual network with the appearance of operating on a dedicated physical network. Additional details related to the operation of example embodiments of a program execution service with which the described techniques may be used are available in U.S. application Ser. No. 11 394 595 filed Mar. 31 2006 and entitled Managing Communications Between Computing Nodes in U.S. application Ser. No. 11 395 463 filed Mar. 31 2006 and entitled Managing Execution of Programs by Multiple Computing Systems and in U.S. application Ser. No. 11 692 038 filed Mar. 27 2007 and entitled Configuring Intercommunications Between Computing Nodes each of which is incorporated herein by reference in its entirety.

The computing systems and are connected to one another via an internal network and various networking devices and optionally may be used to connect the computing systems to the internal network. For example networking devices and may each be a router or a bridge and optional networking device may be a switch or a hub. In the illustrated example the networking device provides a gateway between the network and host computing systems and and the optional networking device may operate to join host computing systems and onto a single physical network. A variety of other networking devices may similarly be present but are not shown for the sake of simplicity. Thus the network may be an interconnection network that joins multiple disparate physical networks within the data center and provides access in this example to external computing systems via an external network . In a typical arrangement data center may include hundreds or thousands of host computing systems such as those illustrated here organized into a large number of distinct physical networks. The external computing systems may also provide various functionality including providing various remote services not shown that are available to the computing systems of the data center.

Host computing system is shown in additional detail relative to the other computing systems for the purpose of illustration and includes a CPU various I O components storage and memory . The I O components may include for example a display network connection computer readable media drive and other I O devices e.g. a mouse keyboard etc. . The host computing system functions to host one or more virtual machines in memory such as to execute programs on behalf of various customers. A Node Manager system is also executing in the memory to manage operations of the virtual machines . In addition in the illustrated embodiment the Node Manager system operates to provide the virtual machines with enhanced access to remote network accessible services in a manner similar to that discussed in greater detail elsewhere. In this example the Node Manager system includes various service specific components for use in interacting with remote services A N not shown such as remote services provided by the other computing systems .

The other host computing systems may each be similar to that of host computing system such as by each including one or more virtual machines not shown and a Data Manager system not shown to manage operations of those virtual machines. In addition this example embodiment includes multiple computing systems that do not host virtual machines and a separate computing device that acts as Node Manager system to similarly provide those computing systems with enhanced access to remote network accessible services.

It will be appreciated that computing systems and and networking devices and are merely illustrative and are not intended to limit the scope of embodiments of the present disclosure. For example computing system may be connected to other devices that are not illustrated including through one or more other networks external to the data center such as the Internet or via the Web. More generally a computing node or other computing system may comprise any combination of hardware or software that can interact and perform the described types of functionality including without limitation desktop or other computers database servers network storage devices and other network devices PDAs cellphones wireless phones pagers electronic organizers Internet appliances television based systems e.g. using set top boxes and or personal digital video recorders and various other consumer products that include appropriate intercommunication capabilities. In addition the functionality provided by the illustrated components and systems may in some embodiments be combined in fewer components or distributed in additional components. Similarly in some embodiments the functionality of some of the illustrated components may not be provided and or other additional functionality may be available.

It will also be appreciated that while various items are illustrated as being stored in memory or on storage while being used these items or portions of them can be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software components and or systems may execute in memory on another device and communicate with the illustrated computing system via inter computer communication. Some or all of the components systems and data structures may also be stored e.g. as software instructions or structured data on a computer readable medium such as a hard disk a memory a network or a portable media article to be read by an appropriate drive or via an appropriate connection. The systems components and data structures may also be transmitted as generated data signals e.g. as part of a carrier wave or other analog or digital propagated signal on a variety of computer readable transmission mediums including wireless based and wired cable based mediums and can take a variety of forms e.g. as part of a single or multiplexed analog signal or as multiple discrete digital packets or frames . Such computer program products may also take other forms in other embodiments. Accordingly embodiments of the present disclosure may be practiced with other computer system configurations.

The illustrated embodiment of the routine begins at block where it receives an outgoing communication an incoming communication or configuration information. In this embodiment an outgoing communication is a communication sent by a computing node managed by the routine such as a virtual machine executing on a managed host computing system. An incoming communication is a communication sent by an external computing system to a managed computing node or the node manager system. Configuration information includes information that may be used by the routine to provide managed local client nodes with enhanced access to remote services such as information for a remote service to use in providing enhanced access to that remote service e.g. a software component that when executed provides at least some capabilities specific to the remote service or configuration information regarding what types of communications to which remote services from which managed nodes are to be handled by the routine. The communications and or configuration information may be received in various ways such as if the node manager routine is part of a component through which communications to and or from the managed computing nodes pass or if the node manager routine may otherwise receive and optionally modify or otherwise manipulate such communications.

In block the routine determines the type of communication or information received and continues to block if configuration information is received. In block the routine stores the received configuration information for later use.

If it is instead determined in block that an incoming message or other communication has been received either for the Node Manager or for one or more managed computing nodes the routine continues to block to determine if the communication is for the Node Manager routine. Such incoming communications for managed computing nodes or the Node Manager routine may include a variety of types of communications including communications that are unrelated to accessing remote services. If it is determined in block that the communication is for the Node Manager routine the routine continues to block to process the received communication e.g. to store the communication for later use by an operator user who maintains the Node Manager and if not the routine continues to block to determine the one or more destination managed computing nodes for the communication e.g. based on addressing information for the communication such as in a packet header that includes a source and destination address . As described in greater detail with respect to block communications that are received by the routine as part of interacting with remote services when providing enhanced access to those remote services are handled elsewhere such as with respect to block . After block the routine continues to block to forward the received communication to the determined managed computing node s . Forwarding the communication may include sending or otherwise transmitting it onto a physical network e.g. by providing the communication to a network driver or interface to be transmitted via a network interface device if a destination managed computing node is part of a computing system distinct from the computing system executing the routine or may include storing the communication in an appropriate location in memory if a destination managed computing node is a virtual machine node on the same computing system as the computing system executing the routine.

If it is instead determined in block that an outgoing communication has been received from a managed computing node the routine continues to block to determine whether the outgoing communication is to a target remote service for which the routine may provide enhanced access and whether the outgoing communication is of a type for which the routine may provide enhanced access such as to request one or more specified types of functionality from the remote service. If not the routine continues to block to forward the received communication to the indicated destination s . Otherwise the routine continues to block to determine whether and how to enhance access of the managed computing node to the remote service for the outgoing communication such as based on previously received configuration information specific to the remote service and or to the managed computing node. In block the routine then determines whether enhanced access is to be provided and if not continues to block .

Otherwise if enhanced access is to be provided the routine continues to provide that enhanced access with respect to blocks . In particular in block the routine locally performs one or more activities for the remote service e.g. authentication activities with respect to the outgoing communication such as based on previously obtained configuration information for the remote service and or based on dynamically obtained configuration information for the remote service e.g. by interacting with the remote service and or other source of the configuration information . After block the routine continues to block to determine whether there are one or more other activities to be performed by the remote service as part of the providing of the requested functionality for the outgoing communications such as if the locally performed activities for the remote service are only a subset of the activities to be performed. If not the routine continues to block to prepare a response message for the managed computing node to the received outgoing communication such as to provide data or other response e.g. status information from the locally performed activities of block .

Otherwise the routine continues to block to generate and send one or more communications to the remote service to initiate one or more additional activities to be performed by the remote service as part of providing requested functionality to the managed computing node. In at least some embodiments the one or more sent communications are such that the remote service does not perform some or all of the locally performed activities such as based on a particular type of generated communication a particular destination of the generated communication information included in the communication e.g. instructions related to the one or more additional activities to be performed by the remote service and or of the one or more activities already locally performed etc. Furthermore the sent communication s may be generated in various ways including by altering the received outgoing communication and or by using information from the received outgoing communication as part of the generated communication s . The routine then waits in block to receive one or more responses to the sent communications. After receiving the response s the routine in block determines whether there are more additional activities to be performed by the remote service and if so returns to block . Otherwise the routine continues to block to prepare a response message for the managed computing node to the received outgoing communication such as to forward one or more of the responses received in block and or to provide data from the locally performed activities of block .

After blocks or the routine continues to block to send the prepared response to the managed computing node. After blocks or the routine continues to block to optionally perform one or more additional operations such as to reflect housekeeping activities or other activities that are not related to providing enhanced access to remote services. The routine then continues to block to determine whether to continue processing received communications and configuration information. If so the routine returns to block and if not continues to block and ends.

Those skilled in the art will also appreciate that in some embodiments the functionality provided by the routines discussed above may be provided in alternative ways such as being split among more routines or consolidated into fewer routines. Similarly in some embodiments illustrated routines may provide more or less functionality than is described such as when other illustrated routines instead lack or include such functionality respectively or when the amount of functionality that is provided is altered. In addition while various operations may be illustrated as being performed in a particular manner e.g. in serial or in parallel and or in a particular order those skilled in the art will appreciate that in other embodiments the operations may be performed in other orders and in other manners. Those skilled in the art will also appreciate that the data structures discussed above may be structured in different manners such as by having a single data structure split into multiple data structures or by having multiple data structures consolidated into a single data structure. Similarly in some embodiments illustrated data structures may store more or less information than is described such as when other illustrated data structures instead lack or include such information respectively or when the amount or types of information that is stored is altered.

From the foregoing it will be appreciated that although specific embodiments have been described herein for purposes of illustration various modifications may be made without deviating from the spirit and scope of the invention. Accordingly the invention is not limited except as by the appended claims and the elements recited therein. In addition while certain aspects of the invention are presented below in certain claim forms the inventors contemplate the various aspects of the invention in any available claim form. For example while only some aspects of the invention may currently be recited as being embodied in a computer readable medium other aspects may likewise be so embodied.

