---

title: Hardware identification through cookies
abstract: Multiple cookies of a client device are used to form an identifier of the client device such that a change in one or even several browser cookies does not defeat proper device recognition. The cookies are included in the identifier such that individual cookies can be parsed for separate comparison with corresponding cookies of known devices. However, to protect privacy of all devices, individual parameters of the constituent cookies are represented with irreversible hashes of the respective parameters. Recognition involves quantification of a degree of correlation between the cookies and corresponding cookies of each of the known devices. To quantify the degree of correlation, the observed stability and uniqueness of each cookie, and each cookie attribute, is considered.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09571492&OS=09571492&RS=09571492
owner: Uniloc Luxembourg S.A.
number: 09571492
owner_city: Luxembourg
owner_country: LU
publication_date: 20120917
---
This application claims priority to U.S. Provisional Application 61 535 347 which was filed on Sep. 15 2011 and which is fully incorporated herein by reference.

The present invention relates generally to computer network security and more particularly to methods of and systems for identifying a computing device by data stored thereon.

From the perspective of a server engaged in Internet transactions it is advantageous to be able to recognize a client computing device that the server has interacted with previously. The importance of this information can be seen in common Internet transactions today. For example users can log in to a given site and through information gleaned from a quick retrieval of cookies stored on the user s device the site s server can tailor its interaction to the user s known expectations and preferences. Similarly a user s experience with a virtual shopping cart during on line shopping may be enhanced if the server hosting the shopping cart can recognize whether multiple HTTP requests from multiple link clicks originate from the same device.

Technically speaking HTTP hypertext transport protocol the protocol by which web browsers and web servers primarily interact is stateless. That means that any HTTP request and any HTTP response thereto are fully self defining and not contingent on or influenced by HTTP requests or responses previously exchanged. In other words the exchange of an HTTP request and an associated HTTP response do not change any state in the communication between the client device and the server.

To implement features that require a state such as a virtual shopping cart the client device and the server are required to cooperate to effect an ongoing or dynamic state in their interaction. The way in which this is accomplished most often is through the use of cookies which are omnipresent in online transactions today.

In the context of computer communications a cookie is a unique item of data that stores state information. Each time the browser of a client computer transacts with a web site the web site server may transmit a cookie to the browser that provides unique identifying data for storage on the client device. On a subsequent visit to the same web site the site can request that the client device report the unique identifying data recorded on the cookie and thereby recover a state of interaction between the client and server from a previous transaction. For example if a server asks a client device to store a cookie labeled ABC123 the server can then recognize the same client device whenever the client device reports that its cookie for that server is ABC123.

Cookies have been used very effectively to maintain a state during interaction between a server and a client device. There are however other situations where recognition of a particular computing device is highly desirable but for which cookies are simply inadequate. In particular cookies don t work when the user doesn t want her device to be recognized or when the device needs to be identified across multiple sites. For example if a user has been banned from a social networking site for malicious activity the user can avoid detection by way of cookies by simply deleting all of the cookies associated with the social networking site. Similarly a different social networking site would not be able to identify the user as one who has behaved maliciously if a cookie from the first site was the only indicator of such prior activity.

What is needed is a more persistent and reliable way to identify a particular computing device through exploitation of cookies.

In accordance with the present invention multiple cookies of a client device are used to form an identifier of the client device such that a change in one or even several browser cookies does not defeat proper device recognition.

The cookies are included in the identifier in such a manner that individual cookies can be parsed for separate comparison with corresponding cookies of known devices i.e. devices previously interacted with. To protect privacy of all devices however individual parameters of the constituent cookies are represented in the device identifier with irreversible hashes of the respective parameters. For example data representing the host parameter of a cookie is represented in the device identifier as an irreversible hash of the data allowing direct comparison to determine whether cookies of other devices come from the same host without enabling identification of the host itself. In other words the use of irreversible hashes allows effective yet anonymous comparison. Other parameters of the cookies that are represented by irreversible hashes include attribute names and values. Expiration is left readable to determine whether a given cookie has expired.

Recognition involves quantification of a degree of correlation between cookies represented in the device identifier of the client device and corresponding cookies of each of the known devices. Since cookies change over time it is quite likely that cookies represented in the device identifier of the client device would not be identical to cookies previously received from the same device. To quantify the degree of correlation the observed stability and uniqueness of each cookie and each cookie attribute is considered.

Once cookie correlation between the client device and each of the known devices has been quantified the highest of the correlations is compared to a predetermined threshold degree of correlation. The threshold is determined empirically during system configuration and represents an acceptable level of certainty and conversely uncertainty. For example the threshold can be selected at a level at which certainty of accurate recognition is 95 . If the highest of the correlations is at least the predetermined threshold the client device is determined to be the same device as the known device with the highest cookie correlation. Otherwise the client device is determined to be unrecognized i.e. a device that has not been previously interacted with.

In a first aspect the present invention accordingly provides a method for recognizing a given remotely located device as a known device the method including receiving from the given device data representing at least two browser cookies from at least two hosts determining an amount of correlation between the browser cookies of the given device and corresponding browser cookies of each of one or more other devices and determining that the given device is a known device upon a condition in which the amount of correlation is at least predetermined threshold.

In another form the data representing at least two browser cookies from at least two hosts includes an irreversible hash of host data of each of the browser cookies. In another form the data representing at least two browser cookies from at least two hosts includes an irreversible hash of attribute value data of each of the browser cookies. In another form the step determining an amount of correlation between the browser cookies of the given device and corresponding browser cookies of each of one or more devices includes using a degree of stability of each of the browser cookies.

In another form the step determining an amount of correlation between the browser cookies of the given device and corresponding browser cookies of each of one or more other devices includes using a degree of uniqueness of each of the browser cookies.

In accordance with the present invention an identifier of a client device is derived from browser cookies stored on the client device in such a manner that enables accurate determination by a server computer whether client device is previously known to server . Client device derives the device identifier from multiple browser cookies so that a change in one or even several browser cookies does not defeat proper device recognition.

As shown in client device and server computer communicate with one another through a wide area network which is the Internet in this illustrative example. Server computer can have any of a number of motivations to recognize client devices with which server computer has previously interacted. Examples include customization of web page content for individual users and recognition of client devices previously used for malicious activity.

Transaction flow diagram represents the manner in which client device and server computer cooperate to determine whether client device is a device that is previously known to server computer in accordance with the present invention.

In step client device requests a web page or other data from server computer e.g. from a URL activated by a human user of client device through physical manipulation of one or more user input devices of client device and conventional user interface techniques.

In step server computer sends the web page that is identified by the URL received in step . The web page includes some active content or at least some content that causes client device to generate a device identifier for itself from browser cookies . In one embodiment a web browser plug in C is installed in client device and is invoked by a web browser in processing the content of the web page to generate the device identifier from cookies . The various elements of client device and their interaction are described more completely below. In addition step is described more completely below with respect to logic flow diagram .

In step server computer determines whether the device identifier received in step represents a client device that is previously known to server computer . Step is described in greater detail below in conjunction with logic flow diagram .

If server computer determines that the device identifier represents a known device server computer sends content that is customized for client device . In some embodiments the content is customized to indicate a lack of access to services provided by server computer particularly when server computer determines that the device identifier represents a client device with a history of malicious acts.

As described above client device generates a device identifier for itself from browser cookies in step and step is shown in greater detail as logic flow diagram . In this illustrative embodiment step is performed by web browser plug in C .

In step web browser plug in C collects all cookies of all types. The various types of browser cookies are known and are not described herein except that the basic data content of a cookie is described to facilitate appreciation and understanding of the present invention. Furthermore while collection of all cookies of all types is described herein it should be appreciated that effective device recognition can be accomplished using fewer than all cookies and using cookies of fewer than all types.

Loop step and next step define a loop in which web browser plug in C processes each of cookies in accordance with steps . During each iteration of the loop of steps the particular one of cookies processed by web browser plug in C is sometimes referred to herein as the subject cookie. 

In step web browser plug in C forms an irreversible hash of each data element of the subject cookie. Typically a cookie includes data elements representing a host to which the cookie belongs or from which the cookie originated an expiration date and one or more name value pairs representing the substantive content of the cookie. It is generally preferred that the actual content of the subject cookie not be communicated to server computer . Forming an irreversible hash of each of the data elements individually allows server computer to test for matches without having direct access to original data.

In step web browser plug in C packages all the irreversible hashes of data elements of the subject cookie into a single reversible hash representing the subject cookie in its entirety. The hash is reversible such that server computer can parse the individual irreversible hashes of cookie data elements for individual element comparison in the manner described below.

In step web browser plug in C adds the hash created in step to an accumulation of single reversible cookie hashes.

Once all of cookies have been processed by web browser plug in C according to the loop of steps processing according to logic flow diagram and therefore step completes. The output of step is a device identifier in the form of an accumulation of reversible hashes that represent data elements of multiple cookies of client device .

Device identifier comprises computer readable digitized data such as a bit stream a bit array or a concatenation of data bytes of any length or memory size suitable for the purpose of recording the information contained therein. In more elaborate embodiments of the invention the device identifier may undergo further data processing prior to completion or prior to transmission from client device . For example the output of step may be further processed using known techniques such as encoding encryption compression hashing obfuscation or appending with a nonce value or a checksum value or modified according to a combination of some or all of the foregoing techniques.

As described above server computer determines whether the device identifier received in step represents a client device that is previously known to server computer in step which is shown in greater detail as logic flow diagram . The steps of logic flow diagram are performed by device recognition logic of server computer with reference to device identifier data and cookie information .

In step device recognition logic parses sets of individual reversible hashes each set representing a whole individual cookie from the device identifier and parses the irreversible hashes of individual data elements from each of the parsed reversible hashes.

In step device recognition logic compares the parsed hashes to stored hashes of cookies of client devices from which cookie based device identifiers have been previously received. In the context of logic flow diagram client devices from which cookie based device identifiers have been previously received by server computer are sometimes referred to as known devices .

In test step device recognition logic determines whether at least one cookie of the device identifier of client device matches at least one cookie of any known device. If not device recognition logic determines that client device is not recognized by server computer as one with which server computer has previously interacted and processing according to logic flow diagram and therefore step completes. In an alternative embodiment device recognition logic also determines whether all cookies of the device identifier of client device are matched by cookies of a known device. If so device recognition logic determines that client device is recognized by server computer and is therefore known to server computer and processing according to logic flow diagram and therefore step completes.

If at least one cookie of the device identifier of client device matches at least one cookie of any known device and no known device is a perfect match for the device identifier processing by device recognition logic transfers to loop step .

Loop step and next step define a loop in which device recognition logic processes each known device for which at least one cookie matched the device identifier of client device . For each such known device processing transfers from loop step to step . The particular known device processed in a given iteration of the loop of steps is sometimes referred to herein as the subject known device.

In step device recognition logic quantifies a degree of match between the subject known device and the device identifier of client device . Step is shown in greater detail as logic flow diagram .

With reference now to loop step defines a loop in which each iteration can be terminated by next step or next step . In the loop of steps device recognition logic processes each cookie parsed from the device identifier of client device and the particular cookie processed during a given iteration of the loop of steps is sometimes referred to herein as the subject cookie. Device recognition logic maintains a cumulative matching score for the subject known device and the matching score is initially set to a value that indicates a probability that the device identifier matches the subject known device. In different embodiments the initial value may vary from zero to 100 . Generally the probability changes with each iteration of the loop steps and the probability value calculated or assigned after each iteration may be determined according to empirical data. The empirical data may be represented as a function or as a look up table or equivalent and may be provided as part of device recognition logic or made accessible thereto. In one preferred embodiment the initial value is set to 50 i.e. the probability of a match is as likely as not. The disclosure that follows provides an illustrative example of such an embodiment.

In test step device recognition logic determines whether the subject cookie is present in the device identifier data record for the subject known device. Each known device is represented in device identifier data of server computer by a device identifier data record such as device identifier data record .

Device identifier data record is substantially analogous to the device identifier of client device and includes one or more cookie records each of which represents a cookie of the subject known device at the time the most recent device identifier was received from the subject known device.

Each of cookie records includes a host hash an expiration field and one or more attributes . Host hash is an irreversible hash of the host field of the original cookie of the subject known host. Accordingly device recognition logic cannot readily identify the host to which the original cookie belonged but can distinguish the original cookie from cookies of different hosts. Expiration field represents the expiration of the original cookie and is decipherable by device recognition logic such that device recognition logic can determine whether the subject cookie has expired.

Each of attributes represents a name value pair of the original cookie of the subject known device. Name hash and value hash are irreversible hashes of the name and value respectively of a name value pair of the original cookie of the subject known device. Since name hash and value hash are separate irreversible hashes device recognition logic can correlate attributes with matching names and compare the values thereof without having access to the original name and value data of the original cookie.

In one embodiment device recognition logic determines whether the subject cookie is present in device identifier data record by determining whether host hash for any of the cookie records of device identifier data record matches a host hash for the subject cookie. In an alternative embodiment device recognition logic determines whether the subject cookie is present in device identifier data record by determining whether host hash for any of the cookie records of device identifier data record matches a host hash for the subject cookie and at least one of attributes has a name hash that matches a name hash in an attribute of the subject cookie. Thus a cookie can be all name value pairs collectively for a given host as presented by cookie record or can be a specific name value pair for a given host as represented by attribute .

If the subject cookie is not present for the subject known device processing by device recognition logic transfers through next step to loop step and processes the next cookie of the device identifier of client device according to steps . In transferring through next step device recognition logic does not adjust the matching score for the subject known device.

If the subject cookie is present for the subject known device processing by device recognition logic transfers to test step in which device recognition logic determines whether the content of the subject cookie matches the content of the corresponding cookie record of the subject known device. If the content of the respective cookies match processing transfers to step in which device recognition logic adjusts the matching score of the subject known device upward or in some manner to indicate that the subject known device is more likely the same device as client device . Conversely if the content of the respective cookies do not match processing transfers to step in which device recognition logic adjusts the matching score of the subject known device downward or in some manner to indicate that the subject known device is less likely the same device as client device .

The manner in which device recognition logic determines whether the content of corresponding cookies match and adjusts the matching score of the subject known device varies from cookie to cookie. Each cookie that has been evaluated by device recognition logic is represented by a cookie information record stored in cookie information . In this description cookie information record represents the subject cookie.

Cookie information record includes a host hash to anonymously identify the host whose cookies are represented by cookie information record and includes one or more attributes corresponding to each of attributes that device recognition logic has processed for cookies associated with host hash .

For each of attributed cookie information record includes a name hash a stability field and a uniqueness field . Name hash corresponds to name hash and serves to anonymously identify the particular attribute of the subject cookie. Stability field indicates a degree of stability of the subject cookie. Uniqueness field indicates a degree of uniqueness of values of the subject cookie.

Some cookies are more stable than others. Some hosts set a cookie to a given value and the value remains unchanged for extended periods of time. Sometimes the value is maintained even when an expired cookie is renewed. Other hosts use cookies for very brief transactions and reset the cookie to a new value each time a new transaction is initiated. Device recognition logic observes cookies over time to assess the stability of a given attribute of a cookie from a specific host though identified anonymously through an irreversible hash.

Similarly some cookies are more unique than others. Some hosts reuse cookie values when the use of those values for another device has concluded. Device recognition logic observes cookies over time and across devices to assess the uniqueness of a given attribute of a cookie from a specific host.

Cookies that are more stable and more unique are more indicative of a device s identity. Thus device recognition logic weighs more stable unique attributes of cookies more heavily than less stable less unique attributes in determining whether cookies match. For example if cookies match in a highly stable highly unique attribute but do not match in a relatively unstable and relatively non unique attribute device recognition logic can determine that the cookies match despite a mis matched attribute. In addition the determination of a match despite the mismatched attribute is used by device recognition logic to assess the stability of the attribute.

The stability and uniqueness of attributes of a cookie also influence the manner in which device recognition logic adjusts the matching score of the subject known device in steps and . Adjustments to the matching score are larger for attributes that are stable and unique and are smaller for attributes that are instable or not unique. The degree of adjustment may be quantified according to the empirical data accessible by the device recognition logic.

Once all cookies of the device identifier of client device have been processed according to the loop of steps processing by device recognition logic according to logic flow diagram and therefore step completes.

In the loop of steps device recognition logic quantifies a degree of match between client device and each known device for which at least one cookie matched the device identifier of client device . Once each such known device has been processed by device recognition server in the loop of steps processing transfers to test step .

In test step device recognition logic compares the best match i.e. the quantified match that indicates the greatest likelihood of a match to client device to a predetermined threshold. The threshold can be determined empirically to represent a desired likelihood of an accurate match e.g. 95 .

If the best match is not at least the predetermined threshold device recognition logic determines that client device is not a device with which server computer has previously interacted. If the best match is at least the predetermined threshold device recognition logic determines that client device is the known device associated with the best match. In either case processing according to logic flow diagram and therefore step completes.

In this manner server computer can accurately recognize known devices and can interact with known devices in a manner influenced by previous interactions.

In addition upon determining that client device is the known device associated with the best match in test step device recognition logic updates device identification data record of the known device to incorporate any changes in cookies of client device represented in the device identifier. In addition any such changes or absence of changes are used by device recognition logic to assess the stability and uniqueness of cookie attributes. Device recognition logic reflects any changes in stability or uniqueness in cookie information .

Server computer is shown in greater detail in . Server computer includes one or more microprocessors collectively referred to as CPU that retrieve data and or instructions from memory and execute retrieved instructions in a conventional manner. Memory can include generally any computer readable medium including for example persistent memory such as magnetic and or optical disks ROM and PROM and volatile memory such as RAM.

CPU and memory are connected to one another through a conventional interconnect which is a bus in this illustrative embodiment and which connects CPU and memory to network access circuitry . Network access circuitry sends and receives data through computer networks such as wide area network .

A number of components of server computer are stored in memory . In particular web server logic and web application logic including device recognition logic are all or part of one or more computer processes executing within CPU from memory in this illustrative embodiment but can also be implemented using digital logic circuitry. Device identification data and cookie information are data stored persistently in memory . In this illustrative embodiment device identification data and cookie information are each organized as all or part of one or more databases.

Web server logic is a conventional web server. Web application logic is content that defines one or more pages of a web site and is served by web server logic to client devices such as client device . Device recognition logic is a part of web application logic that determines whether a given client device is recognized as a client device with which server computer has previously interacted in the manner described above.

Client device may be a personal computing device and is shown in greater detail in . Client device includes one or more microprocessors collectively referred to as CPU that retrieve data and or instructions from memory and execute retrieved instructions in a conventional manner. Memory can include generally any computer readable medium including for example persistent memory such as magnetic and or optical disks ROM and PROM and volatile memory such as RAM.

CPU and memory are connected to one another through a conventional interconnect which is a bus in this illustrative embodiment and which connects CPU and memory to one or more input devices output devices and network access circuitry . Input devices can include for example a keyboard a keypad a touch sensitive screen a mouse a microphone and one or more cameras. Output devices can include for example a display such as a liquid crystal display LCD and one or more loudspeakers. Network access circuitry sends and receives data through computer networks such as wide area network .

A number of components of client device are stored in memory . In particular web browser is all or part of one or more computer processes executing within CPU from memory in this illustrative embodiment but can also be implemented using digital logic circuitry. As used herein logic refers to i logic implemented as computer instructions and or data within one or more computer processes and or ii logic implemented in electronic circuitry. Web browser plug ins A C are each all or part of one or more computer processes that cooperate with web browser to augment the behavior of web browser . The manner in which behavior of a web browser is augmented by web browser plug ins is conventional and known and is not described herein.

Cookies are data stored persistently in memory and are conventional and are used by web browser in a conventional manner except as otherwise described herein.

The above description is illustrative only and is not limiting. The present invention is defined solely by the claims which follow and their full range of equivalents. It is intended that the following appended claims be interpreted as including all such alterations modifications permutations and substitute equivalents as fall within the true spirit and scope of the present invention.

The reference to any prior art in this specification is not and should not be taken as an acknowledgement of any form of suggestion that such prior art forms part of the common general knowledge.

It will be understood that the term comprise and any of its derivatives eg. comprise comprising as used in this specification is to be taken to be inclusive of features to which it refers and is not meant to exclude the presence of any additional features unless otherwise stated or implied.

