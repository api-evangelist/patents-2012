---

title: Systems, methods, and media for correlating objects according to relationships
abstract: Systems, methods, and media for correlating objects according to relationships are provided herein. According to some embodiments, methods may include the steps of for each object in a database, determining a static weight, the static weight representing a number of relational connections between each object and one or more connected entities, setting a delta weight for each object, the delta weight being equal to the static weight, determining which object in the database comprises a highest delta weight, propagating the highest delta weight of the object to each of the connected entities, adding the highest delta weight to a static weight and a delta weight for each of the connected entities, setting the delta weight for the object to zero, wherein the method terminates upon determining that a highest delta weight for at least one object is below a threshold value.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08626711&OS=08626711&RS=08626711
owner: 
number: 08626711
owner_city: 
owner_country: 
publication_date: 20120709
---
This Non Provisional U.S. Patent Application claims priority to Provisional U.S. Patent Application 61 505 112 filed on Jul. 7 2011 entitled SYSTEMS METHODS AND MEDIA FOR CORRELATING OBJECTS ACCORDING TO RELATIONSHIPS which is hereby incorporated by reference herein in its entirety.

This invention relates generally to the correlation of objects according to relationships or connections and more particularly but not by way of limitation to systems methods and media for correlating objects according to relationships and displaying the correlated content in a visual format.

Generally speaking different types of content may be interrelated together in a variety of intuitive and non intuitive ways. For example an artist may be interrelated with books music architecture or other content that served to influence the artist. While relationships between these interrelated types of content may be apparent other relationships may be less apparent. Unbeknownst to the artist they may have influenced other individuals or works of art. These interrelated relationships are often described according to degrees of separation. That is two seemingly unrelated objects may be correlated to one another based upon intervening relationships or connections therebetween.

Unfortunately current methods for correlating objects according to relationships are time consuming and subjectively biased processes. More specifically current methods for correlating objects are manual processes that are subject to human error. Moreover these methods do not display the relationships between correlated objects in visual format.

According to some embodiments the present disclosure may be directed to methods for correlating objects together in a database according to relational data. These methods may comprise for each object in a database a determining a static weight the static weight representing a number of relational connections between each object and one or more connected entities b setting a delta weight for each object the delta weight being equal to the static weight c determining which object in the database comprises a highest delta weight d propagating the highest delta weight of the object to each of the connected entities e adding the highest delta weight to a static weight and a delta weight for each of the connected entities f setting the delta weight for the object to zero and g wherein the method terminates upon determining that a highest delta weight for at least one object is below a threshold value.

According to some embodiments the present disclosure may be directed to methods for processing a query. These methods may comprise a receiving query via a web server from a client device and b generating via the web server a response for the query by i determining a header object in the query ii determining directly connected entities and indirectly connected entities in the database for the header object based upon relevancy and iii assembling the response using the directly connected entities and the indirectly connected entities.

According to additional embodiments the present disclosure may be directed to systems for correlating objects together in a database according to relational data. These systems may comprise a at least one server that is selectively coupleable to a client device the at least one server comprising a processor configured to execute instructions that comprise i an analysis module that for each object in a database 1 determines a static weight the static weight representing a number of relational connections between each object and one or more connected entities 2 sets a delta weight for each object the delta weight being equal to the static weight 3 determines which object in the database comprises a highest delta weight 4 propagates the highest delta weight of the object to each of the connected entities 5 adds the highest delta weight to a static weight and a delta weight for each of the connected entities 6 sets the delta weight for the object to zero and 7 wherein upon the analysis module determining that a highest delta weight for at least one object is below a threshold value the analysis module terminates.

Generally speaking the present technology may be directed to the correlating and displaying of objects via relational analyses. A relationship between a first object and one or more additional objects may be based upon one or more relatable characteristics relationships or connections shared therebetween. For example the relationships between a musician and their discography influences etc. could relate the musician to other musicians books movies and the like. These relationships may be displayed to the end user in a variety of formats such as a grid or matrix.

It is noteworthy to mention that objects may include musicians books video advertisements locations and so forth. The definition of object is to be understood to be expansive including both tangible and intangible types of content.

In addition the present technology may be configured to correlate similar or different types of objects together based upon one or more relatable characteristics or relationships shared therebetween. The present technology may then trace a path s between the two or more objects and explain the relationships therebetween. For example a musician may be indirectly related to an author of a book based upon any one or more of a number of factors e.g. a know relationship explicit statements and so forth . The systems provided herein may visually depict both the musician and the author utilizing image files along with any intervening objects that connect the two objects together. Information that was utilized to connect the two objects together may also be provided to enhance the presentation of information to the end user. In other embodiments the present technology may utilize a ribbon of images for each intervening object. These intervening images may be positioned between the images of the two objects to create a visual diagrammatic path therebetween.

According to some embodiments the present technology may utilize one or more relational databases and one or more mathematical algorithms e.g. statistics heuristics and so forth to correlate objects together. Advantageously end users may contribute to the connection information stored in the relational database e.g. wiki crowdsourcing and so forth . It will be understood that the present technology may be configured to interrelate data between varieties of object types music may relate to movies books architecture etc. not just a single object type music relates only to other types of music that you might like .

Generally speaking the system may include one or more web servers and one or more relational databases such as relational database . The servers may each be generally described with reference to computing system described in greater detail with reference to although it will be understood that one or more of the servers may include a particular purposes computing system configured to establish connections between objects and display those connections in a graphical format.

The system may communicatively couple with a variety of third party content repositories . These content repositories provide the system with digital content that corresponds to correlated objects. Digital content may include textual content images audio files and video files just to name a few. For example when exploring the relationships between a musician and their influences image files for both the musician and their influences may be obtained by the system from one or more content repositories.

According to some embodiments the system may communicatively couple with the third party content repositories via an application programming interface API . The API may utilize either secured or unsecured communications protocols for the transmission of information between the system and the third party content repositories .

One of ordinary skill in the art will appreciate that the architecture may include many other devices or systems e.g. routers firewalls load balancers and so forth that allow for a plurality of client devices to interact with the system or a plurality of content provider systems. A detailed discussion of these additional devices or systems has been omitted for the purpose of brevity.

In some embodiments the system may be configured a cloud computing environment. In general a cloud based computing environment is a resource that typically combines the computational power of a large grouping of processors such as within servers and or that combines the storage capacity of a large grouping of computer memories or storage devices such as relational database . For example systems that provide a cloud resource may be utilized exclusively by their owners such as Google or Yahoo or such systems may be accessible to outside users who deploy applications within the computing infrastructure to obtain the benefit of large computational or storage resources.

The cloud may be formed for example by a network of web servers such as web servers with each server or at least a plurality thereof providing processor and or storage resources. These servers may manage workloads provided by multiple users e.g. cloud resource customers or other users . Typically each user places workload demands upon the cloud that vary in real time sometimes dramatically. The nature and extent of these variations typically depends on the type of business associated with the user.

According to some embodiments the system may facilitate the use of a website or web based interface that is accessible by the client device . Utilizing the website end users may query for objects or view the relationships between two or more objects that have been arranged into a grid or matrix according to a narrative format. In other embodiments the system may be accessed via an executable application that resides on the client device or within a cloud based computing environment.

While visual arrangements of objects such as grids or matrices have been proposed other types of arrangements that would be known to one of ordinary skill in the art such as concentric radial graphs lists Venn diagrams and so forth may likewise be utilized in accordance with the present technology.

According to some embodiments the relational analysis system may generally be described as including a query module an analysis module and an assembly module . It is noteworthy that the system may include additional modules engines or components and still fall within the scope of the present technology. As used herein the term module may also refer to any of an application specific integrated circuit ASIC an electronic circuit a processor shared dedicated or group that executes one or more software or firmware programs a combinational logic circuit and or other suitable components that provide the described functionality. In other embodiments individual modules of the system may include separately configured web servers.

The query module may receive queries for correlating and displaying relationships or connections between two or more objects. In some applications the query module may receive queries from a web interface that couples the client device to the relational analysis system . Upon receipt of a query the query module may parse the query to determine objects included in the query. For example the query module may determine names dates locations and the like from a received query. The query module may also utilize machine learning algorithms to improve efficiency and accuracy of system. For example the query module may utilize machine learning to determine that a query including the words New and York should be combined into New York rather than being understood by the system to be separate and unrelated words.

Each received query may be managed as a separate event and logged for further analysis. Moreover web analytics may be gathered from the client device each time a query is received therefrom.

The query module may communicatively couple with the analysis module . That is the query module may communicate information that corresponds to objects that have been determined from a received query. For example the query module may communicate the string David Bowie to the analysis module based upon receiving a query that includes the term David Bowie. 

The analysis module may then search the relational database using the information for the object. The analysis module may determine one or more additional objects within the relational database that are relevant or correlated to a first object. Objects may be either directly connected e.g. only one connection away or indirectly connected e.g. greater than one connection away together. Exemplary direct connections may include a musician and their discography.

It will be understood that a correlation or relationship between two or more objects may be determined from knowledge or information gathered regarding objects. Therefore the greater the amount of information known about an object the greater likelihood that a correlation or multiple correlations to another object may be determined. The types of knowledge or information regarding an object may include any type of descriptive information about the object. Information may be input into the system by scraping web content e.g. web pages crawling or searching third party databases direct input from system administrators or may even include information gathered via crowdsourcing where end users may contribute information or knowledge about objects .

To establish connections between objects in response to a query the analysis module may crawl the relational database to create a graph of objects and connections out to a defined radius around a first object. Advantageously the analysis module may gather these additional objects and sort them based on the rank of each object. For example if the first object is connected to an additional object via numerous connections the additional object may be ranked higher than other objects having fewer connections therebetween.

This collection of objects is then presented to the user in a visually apprehensible format such as a graphical user interface that includes one or more graphs created from depictions of the objects.

According to some embodiments the present technology may be directed to the generation of long tail responses to queries. That is rather than returning a single response to a query that includes a single object or multiple objects that are themselves unrelated to one another the present technology may be configured to generate long tail responses for queries. Thus when generating a query response the present technology begins with a header object which is the object included in determined from the query. To complete the response additional objects are attached to the header object such that each successive object that is added to the response is related to the object which precedes it. Therefore the response creates a tail of related objects that extend from the header object. The linkages that join the objects of the tail together are the known relationship values which have been described in greater detail above.

According to some embodiments the analysis module may be configured to perform a method for correlating objects together in a database according to relational data. The analysis module may be configured to for each object in a database determine a static weight the static weight representing a number of relational connections between each object and one or more connected entities. Additionally the analysis module may be adapted to set a delta weight for each object the delta weight being equal to the static weight.

In some instances the analysis module may determine which object in the database comprises a highest delta weight and also propagate the highest delta weight of the object to each of the connected entities. In accordance with the present disclosure the analysis module may add the highest delta weight to a static weight and a delta weight for each of the connected entities and set the delta weight for the object to zero.

It is noteworthy to mention that the method executed by the analysis module may terminate upon determining that a highest delta weight for at least one object is below a threshold value.

According to some embodiments the analysis module may determine a relevancy for a direct or indirect connected entity based upon any of a static weight distance connection type or any combinations thereof.

With regard to weighting each object may be provided with at least one of a static weight and a dynamic weight. The analysis module may associate a static weight with an object that includes a defined weight for each different connection type e.g. connected entities associated with the object . According to some embodiments each object starts with an initial static weight Wi and delta weight dWi. In some instances the static weight and the delta weight are substantially equal in magnitude to one another. Initially the Wi and dWi of an object may be a non zero value. The dWi value may be based on an amount and or connection weight for each of the connected entities and other similar data.

In operation the analysis module may be configured to find a first object i that has largest dWi. The analysis module may for a first object shoot or propagate a dWi to each connected entity j e.g. additional objects that are directly connected to the object i . The analysis module determines connected entities j by searching the relational database for directly connected objects. Thus the present technology may iteratively locate an object in the database with the highest delta weight value and propagate the delta weight to each of the object s directly connected entities. Thus after propagating the delta weight for an object having the highest delta weight in the database the present technology may repeat the process by subsequently locating an additional object in the database with the highest delta weight. After dWi is applied to each connected object j the analysis module may set the dWi to zero. Again it is noteworthy to mention that this process may be repeated for every object i in the graph or database if the graph or matrix has not been created .

In some embodiments the dWi for an object may be scaled by a connection rank for a connection between the object i and object j. This value may be referred to as the dWij. The dWij may be added to both the dWj and the Wj of a connected entity j such that the sum of Wj and dWij equal the Wj. Moreover the sum of the dWj and the dWij may equal dWj.

According to some embodiments the analysis module may be configured to propagate the rank of each object i through the entire graph. For example the analysis module may iteratively propagate the rank of each object i to its direct or adjacent neighbors. It will be understood that the analysis module may propagate the ranks of objects periodically or continually to allow for full propagation throughout the relational database .

In some application the analysis module may reduce the need for this iterative process by applying heuristics to determine which objects will have the greatest impact on the graph or within the relational database . When the analysis module determines objects that have the greatest impact e.g. greatest number of connections on the graph the analysis module may utilize these objects as initial shooters. 

The analysis module may utilize many different methods e.g. algorithms statistics heuristics logic etc. to compare or relate the object to other objects within the relational database . For example in some embodiments the analysis module may utilize one or more algorithms such as progressive refinement. Generally speaking progressive refinement may be utilized to calculate radiosity in offline rendering processes. Progressive refinement allows for an early approximation and visualization of a system s radiosity before the full solution or analysis of the entire dataset is complete. The analysis module utilizes progressive refinement such that the highest ranked objects shoot or contribute their weighting first early on in the correlation process.

While the analysis module has been described as being configured to utilize a progressive refinement algorithm other algorithms statistics heuristics logic or combinations thereof that would be known one of ordinary skill in the art with the present disclosure before them are likewise contemplated for use in accordance with the present technology.

The analysis module may periodically or automatically and continuously process the relational database to accommodate new objects added to a graph or the relational database . The creation of graphical representations of connections between objects will be discussed in greater detail infra.

Advantageously the analysis module may in some embodiments utilize various types of dynamic object ranking processes. For example the analysis module may use additional weighting or signals to temporally scale the static rank of each or subsets of objects within the database . These signals may include location based data user habits content ratings trends promotion windows and or other web analytics that would be known to one of ordinary skill in the art with the present disclosure before them. A promotional window may comprise a timeframe for a specific event advertising campaign or other time defined event.

In operation when a query is received by the query module the query module parses the query to determine one or more objects included therein. Returning to the above described example the query may include a header object of David Bowie. 

Responsive to receiving the query the analysis module locates additional objects e.g. connected entities that are relatable to the header object the analysis module may then determine the relationship or connections between the objects. For example if the object is David Bowie the analysis module may locate albums released by David Bowie movies that utilized individual songs created by David Bowie notable artists that were influenced by David Bowie and so forth. The analysis module may determine objects that are correlated to David Bowie based upon propagation of rankings with the relational database as described supra.

Referring now to FIGS. and A C collectively each of which illustrates an exemplary graphical user interface constructed in accordance with the present technology. With respect to in some embodiments the assembly module may cooperate with the analysis module to generate a GUI that includes relational data for the object of the query. Broadly speaking the GUI includes an explore graph . The assembly module may create the graphical interface and arrange objects according to rankings established by the analysis module . In some embodiments the assembly module may utilize a GUI template and populate the template with items such as image files that correspond to the object associated with a particular node of the graph .

The graph shows the first object represented by an image file of David Bowie. Additional objects such as objects associated with David Bowie may be arranged according to node and edge graphical relationships. In some embodiments these node and edge relationships may be visually arranged as a grid or matrix. For example each column of the graph may represent an individual edge e.g. connection type . As such each object disposed vertically within the column represents an associated node. For example if an edge of discography may include a plurality of associated nodes that represent individual albums within the discography.

In sum the present technology may generate a graphical representation of relationships between the header object and a plurality of connected entities using a plurality of edges and associated nodes. It is noteworthy that each of the plurality of edges corresponds to a relationship type and further that each of the plurality of edges comprises associated nodes. The associated nodes may comprise connected entities that are connected to the header object by at least one relationship type.

It is noteworthy to mention that these node edge relationships have been determined via crawling sorting and or ranking of the relational database via the analysis module .

Objects towards the left hand side of the graph may be understood as being strongly correlated e.g. having relatively numerous to the first object with correlation strength decreasing the further away the object is disposed relative to the first object . In some applications each object within the graph may include object type information such as book album band and so forth along with an object name. It is noteworthy to mention that clicking on any of the objects within the graph may initiate the creation of a new graph not shown with the selected object replacing the first object .

With respect to another exemplary GUI is shown that includes a first object having a connections matrix that comprises a group of individual graphs . It is noteworthy to mention that each of the individual graphs correspond to a connection type such as has a discography has influences toured with has a filmography was a member of was influenced by has images of and so forth.

The GUI may also include a larger influences graph that includes the objects of graph along with additional objects that have been determined by the system to be influences of David Bowie.

According to some embodiments the analysis module may relate objects together in a narrative format. For example the analysis module may treat objects as a noun and relate that noun to other nouns e.g. objects via verbs. Utilizing the above described example the noun of David Bowie may be understood to have verb a discography noun that includes verb a plurality of albums nouns . These albums may be arranged within a graph according to any type of weighting data. For example albums may be arranged from highest grossing sales to lowest grossing sales moving from left to right respectively across the graph.

With respect to a GUI illustrating a relationship between two separate objects is shown. The GUI is again shown as having a first object of David Bowie. A discography graph includes a plurality of albums. Assuming that the album of Diamond Dogs has been selected from the plurality of albums the system may display a seeming unrelated object that includes a book by George Orwell entitled 1984. These objects were connected together because the Diamond Dogs album was slated to be utilized as the soundtrack to a film version of the book 1984. Because the system previously established a connection either direct or indirect between Diamond Dogs and the book 1984 the system may display this connection when either of these objects is selected for further examination.

Additionally the method may comprise a step C of determining which object in the database comprises a highest delta weight a step D of propagating the highest delta weight of the object to each of the connected entities and a step E of adding the highest delta weight to a static weight and a delta weight for each of the connected entities.

According to some embodiments the method may comprise a step F of setting the delta weight for the object to zero. It will be understood that the method terminates upon a step G of determining that a highest delta weight for at least one object is below a threshold value.

The components shown in are depicted as being connected via a single bus . The components may be connected through one or more data transport means. Processor unit and main memory may be connected via a local microprocessor bus and the mass storage device peripheral device s portable storage device s and graphics display system may be connected via one or more input output I O buses.

Mass storage device which may be implemented with a magnetic disk drive or an optical disk drive is a non volatile storage device for storing data and instructions for use by processor unit . Mass storage device can store the system software for implementing embodiments of the present technology for purposes of loading that software into main memory .

Portable storage device operates in conjunction with a portable non volatile storage media such as a floppy disk compact disk or digital video disc to input and output data and code to and from the computer system of . The system software for implementing embodiments of the present technology may be stored on such a portable media and input to the computer system via the portable storage device .

User input devices provide a portion of a user interface. User input devices may include an alphanumeric keypad such as a keyboard for inputting alphanumeric and other information or a pointing device such as a mouse a trackball stylus or cursor direction keys. Additionally the system as shown in includes output devices . Suitable output devices include speakers printers network interfaces and monitors.

Graphics display system may include a liquid crystal display LCD or other suitable display device. Graphics display system receives textual and graphical information and processes the information for output to the display device.

Peripheral devices may include any type of computer support device to add additional functionality to the computer system. Peripheral device s may include a modem or a router.

The components contained in the computer system of are those typically found in computer systems that may be suitable for use with embodiments of the present technology and are intended to represent a broad category of such computer components that are well known in the art. Thus the computer system of can be a personal computer hand held computing system telephone mobile computing system workstation server minicomputer mainframe computer or any other computing system. The computer can also include different bus configurations networked platforms multi processor platforms etc. Various operating systems can be used including UNIX Linux Windows Macintosh OS Palm OS and other suitable operating systems.

Some of the above described functions may be composed of instructions that are stored on storage media e.g. computer readable media . The instructions may be retrieved and executed by the processor. Some examples of storage media are memory devices tapes disks and the like. The instructions are operational when executed by the processor to direct the processor to operate in accord with the technology. Those skilled in the art are familiar with instructions processor s and storage media.

It is noteworthy that any hardware platform suitable for performing the processing described herein is suitable for use with the technology. The terms computer readable storage media and computer readable storage media as used herein refer to any media or media that participate in providing instructions to a CPU for execution. Such media can take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media include for example optical or magnetic disks such as a fixed disk. Volatile media include dynamic memory such as system RAM. Transmission media include coaxial cables copper wire and fiber optics among others including the wires that comprise one embodiment of a bus. Transmission media can also take the form of acoustic or light waves such as those generated during radio frequency RF and infrared IR data communications. Common forms of computer readable media include for example a floppy disk a flexible disk a hard disk magnetic tape any other magnetic media a CD ROM disk digital video disk DVD any other optical media any other physical media with patterns of marks or holes a RAM a PROM an EPROM an EEPROM a FLASHEPROM any other memory chip or data exchange adapter a carrier wave or any other media from which a computer can read.

Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to a CPU for execution. A bus carries the data to system RAM from which a CPU retrieves and executes the instructions. The instructions received by system RAM can optionally be stored on a fixed disk either before or after execution by a CPU.

The above description is illustrative and not restrictive. Many variations of the technology will become apparent to those of skill in the art upon review of this disclosure. The scope of the technology should therefore be determined not with reference to the above description.

