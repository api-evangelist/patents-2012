---

title: Memory management methods and systems for mobile devices
abstract: Memory management methods and systems for mobile devices are provided. A memory usage of a memory is monitored by a built-in memory management component of an OS of the device and a user-oriented memory management component. It is determined whether the memory usage of the memory is greater than a first threshold or a second threshold, wherein the second threshold is greater than the first threshold. When the memory usage of the memory is greater than the first threshold, a multi-level memory management is performed by the user-oriented memory management component. When the memory usage of the memory is greater than the second threshold, a primitive memory management is performed by the built-in memory management component.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09032168&OS=09032168&RS=09032168
owner: HTC Corporation
number: 09032168
owner_city: Taoyuan County
owner_country: TW
publication_date: 20120531
---
The disclosure relates generally to memory management methods and systems and more particularly to memory management methods and systems for mobile device that deal with the situation of low memory in accordance with taking good care of user experience.

Recently portable devices such as handheld devices have become more and more technically advanced and multifunctional. For example a handheld device may have telecommunications capabilities e mail message capabilities an advanced address book management system a media playback system and various other functions. Due to increased convenience and functions of the devices these devices have become necessities of life.

As more and more applications become richer and number of published applications grows significantly on a mobile device which is generally coupled with limited physical memory the situation of Out Of Memory OOM is met in higher probabilities and needs to be addressed carefully. The modern Operating System OS for mobile device monitors memory usage level and as soon as the level rises above the predefined threshold the built in memory management component takes the actions instantly ex. garbage collection to reclaim unused memory kill the applications either randomly or based on some simple strategies like application size application age or creation time.

Some inventions are uncovered to address OOM. U.S. Pat. No. 7 284 099 discloses there is provided a low memory manager allocating part of the memory for specialized applications to be held in reserve. Upon the situation of low memory comes out reserved chunks of memory are provided to applications first for data backup and remedial steps to be carried out before the affected applications shut down. Multiple memory usage thresholds are presented in U.S. Pat. No. 6 938 254 in which when the first threshold is met at least one of applications is requested to limit its use of memory. When the second threshold that indicates memory usage is more critical than the first threshold is hit at least one of applications is notified to close itself. When the third threshold which means memory usage is most critical is seen a window is prompted for user to choose at least one of applications to terminate. U.S. Pat. No. 7 827 358 prioritizes all running applications statically or dynamically and once memory usage level goes too high one or more applications are selected by memory management module based on priorities and come out their memory reduction operations respectively. Then API Application Programming Interface is invoked to each selected application to carry out memory reduction operation which could be hide to background freeze dry restart exit gracefully or else.

However to select an application to release memory or gracefully shutdown without affecting user feeling significantly is not addressed well in these disclosures. No doubt to pick up applications randomly would fail users expectation and downgrade user experience. Likewise pop up a window for users to choose can t deal with the conditions users are not expected being interacting with devices due to sleeping taking a nap or putting the device in the pocket at the memory critical time. To select applications by priorities can t reflect weight of applications to each individual user since the applications user uses frequently are diverse indeed.

In an embodiment of a memory management method for mobile devices a memory usage of a memory is monitored by a built in memory management component of an OS of the device and a user oriented memory management component. It is determined whether the memory usage of the memory is greater than a first threshold or a second threshold wherein the second threshold is greater than the first threshold. When the memory usage of the memory is greater than the first threshold a multi level memory management is performed by the user oriented memory management component. When the memory usage of the memory is greater than the second threshold a primitive memory management is performed by the built in memory management component.

In an embodiment of a memory management method for mobile devices a first level of a multi level shutdown procedure is performed to notify a process to release memory resources. It is determined whether a memory usage of a memory is greater than a threshold. If the memory usage is greater than the threshold a second level of the multi level shutdown procedure is performed to dispose of codes or read only data corresponding to the process. It is determined whether the memory usage is still greater than the threshold. If the memory usage is still greater than the threshold a third level of the multi level shutdown procedure is performed to notify the process to close itself within a limited time. It is determined whether the memory usage is still greater than the threshold. If the memory usage is still greater than the threshold a fourth level of the multi level shutdown procedure is performed to turn control to the process and exiting self.

An embodiment of a memory management system for mobile devices includes a memory and a processing unit. The processing unit executes a built in memory management component of an OS of the electronic device and a user oriented memory management component to monitor a memory usage of the memory. The processing unit determines whether the memory usage of the memory is greater than a first threshold or a second threshold wherein the second threshold is greater than the first threshold. When the memory usage of the memory is greater than the first threshold a multi level memory management is performed by the user oriented memory management component. When the memory usage of the memory is greater than the second threshold a primitive memory management is performed by the built in memory management component.

An embodiment of a memory management system for mobile devices includes a memory and a processing unit. The processing unit performs a first level of a multi level shutdown procedure for notifying a process to release memory resources and determines whether a memory usage of a memory is greater than a threshold. The processing unit performs a second level of the multi level shutdown procedure for disposing of codes or read only data corresponding to the process if the memory usage is greater than the threshold and determines whether the memory usage is still greater than the threshold. The processing unit performs a third level of the multi level shutdown procedure for notifying the process to close itself within a limited time if the memory usage is still greater than the threshold and determines whether the memory usage is still greater than the threshold. The processing unit performs a fourth level of the multi level shutdown procedure for turning control to the process and exiting self if the memory usage is still greater than the threshold.

In some embodiments the multi level memory management is performed by gathering information corresponding to processes running on the electronic device selecting one of the processes as a loser based on the gathered information and performing a multi level shutdown procedure for the loser. In some embodiments it is determined whether the memory usage of the memory is less than the first threshold after the multi level shutdown procedure is performed. If the memory usage of the memory is not less than the first threshold one of the processes is re selected as a new loser based on the gathered information.

In some embodiments the gathered information records a current foreground process which is excluded from the processes to be selected as the loser. In some embodiments during the selection of the loser a white list recording at least one specific process is further referred wherein the specific process is excluded from the processes to be selected as the loser.

Memory management methods for mobile devices may take the form of a program code embodied in a tangible media. When the program code is loaded into and executed by a machine the machine becomes an apparatus for practicing the disclosed method.

The memory management system for mobile devices comprises a memory and a processing unit . The memory can record related codes and or data corresponding to processes applications running on a system of the electronic device. It is noted that an OS may be installed on the electronic device and a kernel of the OS is always recorded in the memory. The processing unit can control related components of the memory management system for mobile devices and perform the memory management methods for mobile devices of the invention which will be discussed further in the following paragraphs. It is understood that in some embodiments the memory management system for mobile devices can further comprise a display unit not shown in . The display unit can display related figures and interfaces and related data. It is understood that in some embodiments the display unit may be a screen integrated with a touch sensitive device not shown . The touch sensitive device has a touch sensitive surface comprising sensors in at least one dimension to detect contact and movement of an input tool such as a stylus or finger on the touch sensitive surface. That is users can directly input related data via the display unit.

A high level of concept of the invention is illustrated in . As shown in a built in primitive memory management component of the system comprises an OS kernel and a built in primitive handler . In some embodiments the OS kernel can monitor a memory usage of the memory. In some embodiments the OS kernel can interpret all memory activities after which number of free physical memory pages is recorded. When the memory usage is greater than a first specific threshold second threshold in claims or the number of free memory pages drops below a predefined threshold the OS kernel signals the primitive handler by events messages or else. In turn the primitive handler carries out a primitive memory management. It is understood that the primitive memory management depends on whatever it s designed to do such as selecting process application to terminate or notifying the selected process application to release a portion of memory. It is understood that the primitive memory management is limited thereto and it entirely depends on the OS design. In addition to the built in primitive memory management component a user oriented memory management component comprises a user oriented watchdog installed on the OS kernel and a user oriented handler . It is noted that the user oriented memory management component can coexist with the primitive memory management component of the OS and would not interfere with the primitive handler at all. The user oriented watchdog can also monitor the memory usage of the memory. It is understood that in some embodiments the memory usage of the memory can be obtained from the OS kernel . The user oriented watchdog can determine whether the memory usage of the memory is greater than a first threshold. When the memory usage is greater than the first threshold a multi level memory management is performed by the user oriented handler . It is noted that the second threshold is greater than the first threshold. That is the multi level memory management can be performed prior to the primitive memory management. The details of the multi level memory management will be discussed later.

In step S a memory usage of a memory is monitored by a built in primitive memory management component of an OS of the device and or a user oriented memory management component. In step S it is determined whether the memory usage of the memory is greater than a first threshold. If the memory usage of the memory is not greater than the first threshold No in step S the procedure returns to step S. If the memory usage of the memory is greater than the first threshold Yes in step S in step S a multi level memory management is performed by the user oriented memory management component. It is understood that in some embodiments the user oriented memory management component comprises a user oriented watchdog installed on a kernel of the OS and a user oriented handler. When the memory usage of the memory is greater than the first threshold the user oriented watchdog will inform the user oriented handler and the user oriented handler will performs the multi level memory management when the user oriented handler is informed by the user oriented watchdog. The details of the multi level memory management will be discussed later. Then in step S it is determined whether the memory usage of the memory is greater than a second threshold. It is noted that the second threshold is greater than the first threshold. If the memory usage of the memory is not greater than the second threshold No in step S the procedure returns to step S. If the memory usage of the memory is greater than the second threshold Yes in step S in step S a primitive memory management is performed by the built in primitive memory management component. It is understood that the second threshold is greater than the first threshold therefore the multi level memory management can be performed prior to the primitive memory management. As described the primitive memory management depends on whatever it s designed to do such as selecting process application to terminate or notifying the selected process application to release a portion of memory. It is understood that the primitive memory management is limited thereto and it entirely depends on the OS design.

The information collection module can gather related information corresponding processes applications from the OS kernel. It is understood that in some embodiments the gathered information comprises a number of committed pages represents usage of private data a number of reserved pages tells current usage of virtual memory a least recently used LRU time represents how long ago the process application user was using used frequency Hotspot tells how often the process application user stops by in a sampled period generally given couple minutes to hours current foreground process application user is interacting with and or others. It is understood that above information is only example of the embodiment and the invention is not limited thereto. It is noted that generally two types of information can be gathered wherein one is sampled and the other is live. The sampled data such as LRU Hotspot and others can be computed periodically in a long timer interrupt interval. It is noted that simply couples of instructions can be added to record necessary information such as current running process application and the overhead for sampling is rather small. Sampled data is considered and examined to represent how much user like the process application particularly. Live data is collected right at the timeframe the low memory situation comes out. It is noted that in some embodiments processor interrupts must be masked prior to gather live data since preemptive execution always has a chance of causing unexpected exceptions due to invalid access to stale objects in memory. In some embodiments virtual memory VM usage of a process application could be simply calculated by walking through all memory pages in process space or query VM allocation marker indicating the current VM allocation baseline. With respect to physical memory usage page tables could be gone through to sum up how many pages can be translated by Memory Management Unit MMU .

The white list defines which processes applications should never be taken as losers. That is the process application recorded in the white list is excluded from the processes applications to be selected as the loser. The processes applications can be added or deleted dynamically. It is understood that in some embodiments each process application can be expressed in a simpler way such as hashed double word instead of long string formatted name. The loser selection module can weight all processes applications running on the system based on gathered information and user experience and select at least one loser among the processes applications on place. It is understood that in some embodiments to weigh each factor regarding user experience LRU and Hotspot are supposed to be taken heavier than the others. To keep the processes applications users like and use most frequently alive will seal users good feeling and attractiveness on system in terms of low memory condition. The shutdown module can perform a multi leveled shutdown procedure for a loser when the loser is selected from the processes applications running on the system. The multi leveled shutdown procedure will be discussed later.

In step S related information corresponding to processes applications running on the system is gathered. As described two types of information can be gathered wherein one is sampled and the other is live. In some embodiments the gathered information can comprise a VM usage a physical memory usage a LRU time and or a Hotspot used frequency of the respective process application. In step S one of the processes can be selected as a loser based on the gathered information. It is understood that in some embodiments to keep the processes applications users like and use most frequently alive will seal users good feeling and attractiveness on system in terms of low memory condition. It is understood that in some embodiments the processes applications defined in the white list or being on the foreground interacting with user current foreground process are bypassed out of this selection. An embodiment of loser selection will be discussed in . In step S it is determined whether a loser can be selected. If loser cannot be selected due to for example all existing processes applications are vital to users Yes in step S in step S a warning message is generated and or popped up in a display unit. It is noted that if loser cannot be selected the built in primitive memory management component of the OS can be counted on as final outpost to deal with such low memory situation in step S even it would hurt user experience a lot. If a loser is selected No in step S in step S a multi level shutdown procedure for the loser is performed. The multi level shutdown procedure will be discussed in . After the multi level shutdown procedure for the loser in step S it is determined whether the memory usage of the memory is greater than the first threshold after the multi level shutdown procedure is performed. If the memory usage of the memory is not greater than the first threshold No in step S the procedure is complete. If the memory usage of the memory is still greater than the first threshold Yes in step S the procedure returns to step S another process is re selected as a new loser based on the gathered information and a multi level shutdown procedure for the new loser is performed. The loser selection and multi level shutdown procedure for the selected loser are repeated until the memory usage is not greater than the first threshold or no loser can be selected.

Therefore the memory management methods and systems for mobile devices can deal with the situation of low memory in accordance with taking good care of user experience. Besides of the primitive memory management component of OS which sees to the out of memory condition the invention is functional independently without alteration in or interference with any of OS operations and decisions. In the invention a user oriented memory management method is proposed to pick up a loser among running processes applications and then impose multi leveled memory reduction operations and process application termination on the selected loser instead of simply closing it. The disclosed principle is to keep of most importance processes applications to users alive concerning about out of memory takes place and instruct the selected losers to give back memory as much as possible to bring the system back to good memory usage state.

Memory management methods for mobile devices or certain aspects or portions thereof may take the form of a program code i.e. executable instructions embodied in tangible media such as floppy diskettes CD ROMS hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine thereby becomes an apparatus for practicing the methods. The methods may also be embodied in the form of a program code transmitted over some transmission medium such as electrical wiring or cabling through fiber optics or via any other form of transmission wherein when the program code is received and loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the disclosed methods. When implemented on a general purpose processor the program code combines with the processor to provide a unique apparatus that operates analogously to application specific logic circuits.

While the invention has been described by way of example and in terms of preferred embodiment it is to be understood that the invention is not limited thereto. Those who are skilled in this technology can still make various alterations and modifications without departing from the scope and spirit of this invention. Therefore the scope of the present invention shall be defined and protected by the following claims and their equivalent.

