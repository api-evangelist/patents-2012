---

title: Network site hosting in a managed environment
abstract: Disclosed are various embodiments for network site hosting in a managed environment. A request for a network page is obtained, where the network page is associated with a network site hosted by a hosting provider on behalf of a customer. Aggregated data is obtained from a data aggregation service. The aggregated data is aggregated by the data aggregation service from multiple data sources. Page generation code supplied by the customer is executed in one or more machine instances to generate the network page in response to the request. The page generation code has access to the aggregated data. A resource management application facilitates configuration of the machine instances by the customer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09183189&OS=09183189&RS=09183189
owner: Amazon Technologies, Inc.
number: 09183189
owner_city: Seattle
owner_country: US
publication_date: 20120201
---
Compliance with Payment Card Industry Data Security Standards PCI DSS and or other security standards may present challenges for online merchants. For this and other reasons online merchants may elect to have their electronic commerce platform managed by a third party electronic commerce hosting provider who ensures compliance with the security standards. However merchants may lose flexibility in customizing or configuring their network sites when using such a hosted solution as compared with a self managed solution.

The present disclosure relates to generation of network pages with a hosted network page server platform. Merchants and other owners of network page sites may contract with hosting providers to generate and serve up their network sites. For example a hosting provider may offer an end to end hosted electronic commerce platform that maintains an item catalog generates detail pages for items facilitates searching for items facilitates browsing for items by way of a taxonomy or by way of suggested items allows for customer reviews of items and so on. Such a hosted electronic commerce platform may include functionality relating to shopping carts order placement order management and fulfillment and or other functionality. Such a platform offers merchants many advantages over self managed solutions.

Merchants may wish to retain stylistic and content control over their online presence even if it leverages an end to end hosted electronic platform. However the hosting provider may be reluctant to grant the merchant access to execute arbitrary page generation code due to security concerns and compliance requirements for Payment Card Industry Data Security Standards PCI DSS and or other security standards. Various embodiments of the present disclosure facilitate customer control over network page generation with a hosted network site. As used herein the term customer may also include developers acting on behalf of customers of the hosting provider.

A merchant or other customer of the hosting provider is able to configure a cloud computing resource having one or more machine instances to host resources of a network site. The customer uploads page generation code for execution server side by a network page generation application executed in the cloud computing resource. Data aggregation is performed on behalf of the page generation code so that the page generation code does not contact data sources directly. Various techniques relating to a data aggregation framework are provided in U.S. patent application Ser. No. 13 348 051 entitled GENERATING NETWORK PAGES USING CUSTOMER SUPPLIED GENERATION CODE and filed on Jan. 11 2012 and in U.S. patent application Ser. No. 13 348 059 entitled GENERATING NETWORK PAGES USING CUSTOMER GENERATED NETWORK PAGE PORTIONS and filed on Jan. 11 2012 both of which are incorporated herein by reference in their entirety. In some embodiments the customer may have control over various components of the data aggregation framework in the cloud computing resource.

In the present disclosure the customer is able to scale the cloud computing resource as desired to accommodate resource consumption by the page generation code. Automatic monitoring and scaling may be implemented. For ease of setup and use by the customer the cloud computing resource may be configured by the hosting provider according to a default configuration. In the following discussion a general description of the system and its components is provided followed by a discussion of the operation of the same.

With reference to shown is a networked environment according to a first embodiment relating to customer supplied page generation code. The networked environment includes a computing environment in data communication with one or more clients by way of a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks.

The computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively a plurality of computing devices may be employed that are arranged for example in one or more server banks or computer banks or other arrangements. For example a plurality of computing devices together may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. The computing environment may be operated by a hosting provider to host network sites for various customers.

Various applications and or other functionality may be executed in the computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the computing environment . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed by the computing environment for example include a plurality of data sources . . . N a data aggregation service a cloud computing resource a network page generation application a network page server application a network site configuration application a resource management application and other applications services processes systems engines or functionality not discussed in detail herein.

Referring next to shown is one example of a cloud computing resource according to various embodiments. The cloud computing resource includes a plurality of computing devices . . . a plurality of computing devices . . . and a data store . Such components of the cloud computing resource may be in data communication with each other and or external computing devices by way of a network . Such computing devices and may be located in a single installation or may be dispersed among many different geographical locations. The term cloud computing resource is not intended to be limiting. It is understood that the cloud computing resource as used herein may refer to any plurality of networked computing devices.

The computing devices and may correspond to differing hardware platforms in various embodiments. Accordingly the computing devices and may have differing hardware configurations of resources for example of central processing units CPUs that provide general purpose processing resources graphics processing units GPUs that provide graphics processing resources system memory data storage characteristics such as capacity storage bandwidth and storage input output operations per second IOPS network bandwidth and or other hardware characteristics. In one embodiment all computing devices . . . may have a first hardware configuration while all computing devices . . . may have a second hardware configuration.

For example the computing devices may have a certain ratio of a first type of resource to a second type of resource while the computing devices may have a different ratio of the first type of resource to the second type of resource. In a specific example the computing devices may have a relatively high amount of memory while the computing devices may have a relatively high amount of CPU resources. In another specific example the computing devices may have a relatively high amount of CPU resources while the computing devices may have a relatively high amount of GPU resources. Although only two sets of computing devices and are shown it is understood that there may be any number of sets of computing devices and having different hardware configurations.

As a non limiting example a customer who is planning to run a data store that will respond to a high volume of queries for small quantities of data may prefer to have a computing device with relatively high storage IOPS capability over storage bandwidth. By contrast a customer who is planning to run a data backup archive may prefer to have a computing device with relatively high storage bandwidth capability over storage IOPS. The data backup archive may not respond to many requests but when a request is received a large quantity of bandwidth may be preferred to transfer data from the data backup archive.

Each computing device may execute one or more machine instances MI . A machine instance may correspond to an actual machine or to a virtual machine. A virtual machine instance is a virtualized computer system or a software implementation of a physical computing system. Virtual machines may provide for multiple and or different operating system environments to run concurrently on a single system having a processor circuit and a memory. As a non limiting example multiple instances of a Linux operating system environment may execute concurrently with multiple instances of a Microsoft Windows operating system environment on a single system. Each machine instance may be controlled by different customers who may have administrative access only to their own instance s and no access to the instances of other customers. Multiple machine instances may in fact execute concurrently on a computer system including parallel processors although multiple instances may appear to execute concurrently on a multithreaded computer system with fewer processors than instances.

Different types of machine instances may be available. In the example of computing devices may support three types of machine instances MI large MI medium and MI small each of which may be associated with differing resource configurations. As a non limiting example each MI large instance may have four CPU equivalent units 15 GB of system memory and 1 000 GB of data storage. Each MI medium instance may have two CPU equivalent units 10 GB of system memory and 600 GB of data storage. Also each MI small instance may have one CPU equivalent unit 5 GB of system memory and 250 GB of data storage. In the example of computing devices may also support three types of machine instances namely MI large MI medium and MI small . MI large MI medium and MI small may have the same respective configurations as MI large MI medium and MI small or may have different configurations as desired. As a non limiting example a MI large instance may have four CPU equivalent units 20 GB of system memory and 1 000 GB of data storage.

The example of three types of machine instances for each type of computing device is not intended to be limiting. In various embodiments there may be more or fewer types of machine instances for each type of computing device . In one embodiment a machine instance may comprise an allocation of an entire computing device with no virtualization.

In the example of one MI large instance is executing on computing device two MI medium instances are executing on computing device one MI medium instance and two MI small instances are executing on computing device one MI large instance is executing on computing device three MI medium instances are executing on computing device and one MI medium instance and four MI small instances are executing on computing device . Each machine instance may be associated with a customer though any customer may be associated with any number of machine instances.

In various embodiments a customer may be capable of launching new machine instances and or terminating machine instances dynamically. Thus the cloud computing resource may provide elastic computing capability to the customer that can vary over time. As a non limiting example a customer hosting an infrequently visited network site on a machine instance may suddenly get an influx of network page hits when the network site is mentioned on television or linked on a popular network site. The increase in network site traffic may overwhelm the computing capability of the machine instance leading to poor network site performance and availability. To cope with the network site traffic the customer may launch new machine instances and or transition to a machine instance with more resources and better performance. However the operator of the cloud computing resource may need to ensure that spare computing capability is available in the cloud computing resource to accommodate such new machine instances. At the same time too much spare computing capability may be costly and resource inefficient.

Various applications and or other functionality may be executed in the machine instances and in the computing devices according to various embodiments. Also various data is stored in a data store that is accessible to the computing devices . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store includes for example machine image data customer data and potentially other data.

Machine image data may include data used to launch a machine instance. Machine image data may include one or more disk images of an operating system environment. Some of the disk images may be preconfigured for use by any customer or subset of customers while others may be customized for a particular customer or subset of customers. In one embodiment one disk image may be loaded by multiple machine instances.

The customer data may include customer specific data. In one embodiment all customer configuration data for a machine instance is stored in customer data . In this way such data may be easily shared among many machine instances. As a non limiting example the customer data may include network pages to be served up by one or more network page servers executing on machine instances associated with a customer. However it is understood that in some embodiments customer specific data may be stored within local data storage associated with a machine instance.

Referring now back to the data sources are executed to provide various data used in generating network pages for network sites of customers of the hosting provider. Where the customers are merchants the data provided by the data sources may relate to electronic commerce data such as for example item catalog data item suggestions data shopping cart data checkout data order data and so on. In one embodiment the data sources may comprise web services. In another embodiment the data sources may comprise files or other forms of data stores. In one scenario the data sources may be customer supplied.

The data aggregation service is executed to aggregate data from the data sources for use in generation of network pages . The data aggregation service may employ parallel fetching to reduce latency when data is aggregated from multiple data sources .

The cloud computing resource may be configured to execute a network page generation application and or other applications. In some embodiments the cloud computing resource may be configured to execute the network page server application the network site configuration application the resource management application and or other applications as desired. In contrast to other applications in the computing environment the applications executed in the cloud computing resource may be under increased control by the customer. For example the customer may configure the resources consumed by the cloud computing resource and may be billed under a utility computing model. The customer may or may not have increased access to the cloud computing resource . In some cases the customer may have administrative access to its machine instances within the cloud computing resource . In other cases the hosting provider may have administrative access and the customer may be able to upload only page generation code that conforms to various restrictions. In various embodiments either the hosting provider or the customer may supply control or configure the network page generation application the network page server application the data aggregation service the data sources and or other applications.

The network page generation application is executed to generate the network pages in response to page requests obtained from clients . The network pages may correspond to web pages gopher pages mobile application screens and or other forms of network content. Where the customer is a merchant the network pages may correspond to home pages catalog pages item detail pages shopping cart pages checkout pages order confirmation pages and so on. Such network pages may facilitate selecting items for purchase rental download lease or other form of consumption. In addition where the customer is a merchant the network page generation application may include or be in communication with an electronic commerce system that performs various backend functions in order to facilitate the online purchase of items.

The network page generation application may execute page generation code in order to generate the network pages . The page generation code may correspond to a default version supplied by the hosting provider or may correspond to a customized version supplied by the customer. In some cases the page generation code may be transformed or compiled from one code format to another and or may be interpreted. As a non limiting example the page generation code may correspond to JavaServer Pages JSPs which may be compiled into Java servlets which in turn may be compiled into bytecode which may be executable by the network page generation application . To this end the network page generation application may include a servlet container such as Apache Tomcat or another servlet container.

The network page generation application may be configured to obtain aggregated data from the data aggregation service and to provide the aggregated data to the page generation code for example as a set of predefined variables or by another approach. The network page generation application may act as a sandbox for the page generation code to enforce restrictions on application programming interface API calls access to the data source and or other resources in the computing environment . Alternatively such a sandbox may exist around the cloud computing resource to restrict access to the data sources and or other resources of the computing environment by the cloud computing resource

The network page server application is configured to obtain the page requests from the client over the network to generate network pages in response to the page requests using the network page generation application and to return the network pages to the client by way of the network . The network page server application may correspond to a commercially available hypertext transfer protocol HTTP server such as for example Apache HTTP Server Apache Tomcat Microsoft Internet Information Services IIS and or other servers.

The network site configuration application is executed to facilitate customer configuration of network sites. To this end the network site configuration application may enable uploading and configuration of the page generation code configuration of various parameters associated with the operation of the network site order fulfillment management item catalog management and or other functionality. The network site configuration application may implement an HTTP server a web based distributed authoring and versioning WebDAV server a file transfer protocol FTP server and or other servers.

The resource management application may be configured to facilitate customer configuration of the cloud computing resource . For example the resource management application may facilitate customer configuration of quantities and or types of machine instances employed by the cloud computing resource for the customer automatic scaling rules to increase or reduce the quantities and or types of machine instances and or other configuration parameters. The resource management application may also include monitoring functionality and or other system management functionality.

The resource management application may enable customer control of which applications are hosted in the cloud computing resource as opposed to being hosting in other resources of the computing environment with less customer access and control. As a non limiting example the resource management application may allow the customer to configure that the network page server application be executed in the cloud computing resource for the network site of the customer. This may allow the customer increased access for configuring various settings of the network page server application as compared to a situation where the network page server application is managed or controlled by the hosting provider.

The data stored in the data store includes for example network site data network site configuration data customized page generation code default page generation code a customer resource consumption log resource configuration data and potentially other data. The network site data corresponds to data used in the generation of the network pages for the hosted network sites of the merchants or other customers. Such data may include for example templates hypertext markup language HTML text extensible markup language XML cascading style sheets CSS images audio video animations and or other data.

The network site configuration data may store parameters and or other data for controlling the operation and appearance of the hosted network site. Such data may control various electronic commerce functionality such as for example item catalogs item taxonomies item searching item recommendations shopping carts checkout order fulfillment and or other functionality. The customized page generation code corresponds to page generation code which is created or customized by merchants or other customers. The default page generation code may correspond to a default set of page generation code for a merchant or other customer to use for a base functionality for a network site. The default page generation code may generate network pages having for example a default appearance and behavior for a generic electronic commerce site.

The customer resource consumption log may indicate the computing resources consumed on behalf of the customer by the cloud computing resource . The resource configuration data may include various parameters to control the cloud computing resource . To this end the resource configuration data may include customer preferences for quantities of machine instances types of machine instances rules to govern automatic scaling for increased resources or decreased resources and or other configuration settings.

The client is representative of a plurality of client devices that may be coupled to the network . The client may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. The client may include a display . The display may comprise for example one or more devices such as cathode ray tubes CRTs liquid crystal display LCD screens gas plasma based flat panel displays LCD projectors or other types of display devices etc.

The client may be configured to execute various applications such as a browser and or other applications. The browser may be executed in a client for example to access and render network pages served up by the computing environment and or other servers thereby generating a rendered network page on the display . The client may be configured to execute applications beyond the browser such as for example code development applications file transfer applications mobile applications email applications instant message applications and or other applications.

Next a general description of the operation of the various components of the networked environment is provided. To begin a merchant or other customer of a hosting provider associated with the computing environment configures a network site to be hosted through the computing environment . The network site may have a common domain that is shared by multiple customers of the hosting provider or the network site may correspond to a unique domain for each customer. The customer may specify a customized configuration or a default configuration for the cloud computing resource . The merchant or other customer may adopt default page generation code for various network pages accessible through the network site. Alternatively or additionally the merchant or other customer may create customized page generation code for generating some or all of the network pages accessible through the network site.

The merchant or other customer may interact with the network site configuration application to customize or make changes to the network site. In various cases the customer may edit the page generation code directly through the network site configuration application or the customer may upload replacement page generation code . Through this system customers are able to control generation of network pages for their network sites despite using a hosted infrastructure and potentially a hosted electronic commerce platform.

The page generation code is able to access the aggregated data generated by the data aggregation service . In some cases the page generation code may declare various data that it accesses which is then aggregated by the data aggregation service . In other cases the data aggregation service may provide a standard set of data from the data sources . The set of data may depend on the type of network page e.g. whether the network page is a checkout page catalog page order confirmation page and so on. In one example the aggregated data may be associated with the hosted electronic commerce platform provided by the hosting provider. The aggregated data may be provided to the page generation code by way of variables such as implicit variables or other variables that are available in the scope of the page generation code . The page generation code may be configured to use all of the predefined variables or a subset of the predefined variables. The page generation code and or other applications of the cloud computing resource may be restricted from accessing the data sources directly.

In operation the client sends a page request to the network page server application for some network page from a network site of a customer. Where the customer is a merchant the hosting provider may operate a hosted electronic commerce platform in conjunction with the computing environment . The page request is provided to the network page generation application which then obtains the aggregated data from the data aggregation service . The aggregation may be performed automatically in response to the page request or in advance of the page request . The data aggregation service fetches the aggregated data from one or more data sources .

The page generation code for the requested network page is executed by the network page generation application . The network page generation application facilitates access to the aggregated data by the page generation code . The page generation code generates the network page and the network page server application serves up the network page to the client in response to the page request .

In some embodiments the page generation code and or the cloud computing resource may be restricted from accessing one or more of the data sources . The customer supplied page generation code may be isolated from one or more of the data sources for purposes of complying with PCI DSS and or other security standards. Consequently the data from the data sources may be accessible only as aggregated data provided by the data aggregation service . It is noted that the data aggregation service may generate the aggregated data in response to the page request in response to other events or at other times as desired.

The page generation code may be analyzed for compliance with one or more policies according to various restrictions when initially configured or compiled and or at runtime. Such policies may include acceptable content of the network page API usage usage of scriptlets or other disallowed language features and so on. If the page generation code is determined to be non compliant the page generation code may be unexecuted terminated if already executing replaced with default page generation code or another action may be taken.

The cloud computing resource may be capable of automatic scaling e.g. expanding or contracting with respect to computing capacity in response to demand for the capacity by the page generation code . Such usage may be monitored or metered for billing and or other purposes. To this end the cloud computing resource usage may be recorded in the customer resource consumption log . This recognizes that page generation code for some customers may be more computing resource intensive than page generation code for other customers. Accordingly an elastic amount of resources may be provided such that the customer is billed for what is used in terms of machine instances memory processor time disk space and or other resources that are allocated for the customer.

Referring next to shown is a networked environment according to another embodiment relating to customer supplied page generation code . The networked environment includes a computing environment in communication with a cloud computing resource and one or more clients by way of a trusted network a firewall and an untrusted network . The trusted network and the untrusted network each include for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks. Network traffic between the untrusted network and the trusted network passes through the firewall . The firewall may perform network address translation NAT packet filtering and or other functions which may serve to logically separate the trusted network from the untrusted network in accordance with network security policies.

In contrast to the networked environment the computing environment has been separated into a computing environment and a cloud computing resource to divide functionality. Such a division may be desirable for security reasons PCI DSS compliance reasons and or other reasons. It may be the case that the computing environment is under control of the hosting provider while the customer may have at least some control over the cloud computing resource at least to the extent that the customer is able to configure the page generation code install other software or otherwise manage the cloud computing resource . In other words the customer may have a greater level of access to the cloud computing resource than to the computing environment

In the exemplary arrangement of the computing environment includes the data store the data sources the data aggregation service and potentially other data and applications. The cloud computing resource includes the network page generation application the page generation code the aggregated data the network page server application and potentially other data and applications. Such a separation may be employed to prevent direct access by the page generation code to the data sources the data store an electronic commerce system and or other data and applications.

The data aggregation service may control access to the customer data by way of network address access control whitelists pre shared symmetric keys signed certificate validation and or other authentication approaches. In addition data request methods may be restricted e.g. HTTP GET may be permissible but HTTP POST or PUT may be impermissible. It may be the case that no external endpoints for the data sources are exposed to the untrusted network while an external endpoint for the data aggregation service may be exposed to the untrusted network for the network page generation application .

Continuing on to shown is a flowchart that provides one example of the operation of a portion of the network page generation application according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the network page generation application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the cloud computing resource according to one or more embodiments.

Beginning with box the network page generation application obtains a page request from the client by way of a network page server application . The page request indicates a network page from a network site of a customer. The network site is hosted by the hosting provider who operates the computing environment . In box the network page generation application obtains or fetches page generation code corresponding to the requested network page . In box the network page generation application aggregates various data pertaining to the customer from one or more data sources by way of the data aggregation service .

In box the network page generation application executes the page generation code . In doing so the network page generation application may perform various runtime checks to ensure that the page generation code does not include any impermissible code or content. In box the network page generation application provides the aggregated data to the page generation code as predefined implicit variables.

In box the network page generation application assembles the network page using the output of the page generation code and potentially other data. In box the network page generation application sends the generated network page to the client in response to the page request . Thereafter the portion of the network page generation application ends.

Referring next to shown is a flowchart that provides one example of the operation of a portion of the network site configuration application according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the network site configuration application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the network site configuration application obtains page generation code from a customer whose network site is hosted by the hosting provider who operates the computing environment . In one scenario the page generation code may be obtained as part of a drop in web application. For example the page generation code may be packaged with other page generation code within a web application archive WAR file. The network site configuration application may be configured to authenticate a client associated with the customer. In box the network site configuration application compiles the page generation code . For example the network site configuration application may compile the page generation code from a JSP into a servlet. The resulting servlet code may also be compiled into bytecode for execution by a Java Virtual Machine JVM or directly by a processor circuit of the computing environment

In box the network site configuration application configures the network page generation application to execute the compiled page generation code for one or more network pages for the network site of the customer. In box the network site configuration application may store configuration data that configures the data aggregation service to provide a set of aggregated data to the page generation code . Thereafter the portion of the network site configuration application ends.

Turning now to shown is a flowchart that provides one example of the operation of a portion of the resource management application according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the resource management application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the resource management application obtains one or more configuration parameters from a customer at a client . The configuration parameters may include quantities of machine instances types of machine instances thresholds automatic scaling rules billing related parameters and or other parameters. A non limiting example of an automatic scaling rule may be to scale up by one large machine instance when average memory consumption is above 70 for one hour. Another non limiting example of an automatic scaling rule may be to scale down by one medium machine instance when the spot price per hour for the medium machine instance meets a threshold. In box the resource management application launches one or more machine instances for the customer in the cloud computing resource according to the configuration parameters.

In box the resource management application determines a resource consumption metric for the machine instances of the customer in the cloud computing resource . Such a metric may relate to memory consumption processor consumption network bandwidth consumption and so on. In box the resource management application determines whether the resources allocated to the customer in the cloud computing resource are to be scaled up. For example the resource consumption metric may be compared to one or more thresholds. If the resources are to be scaled up the resource management application continues to box and launches one or more additional machine instances for the customer in the cloud computing resource . The resource management application then returns to box and continues to determine the resource consumption metric.

If instead the resource management application determines that the resources allocated to the customer are not to be scaled up the resource management application moves from box to box . In box the resource management application determines whether the resources allocated to the customer in the cloud computing resource are to be scaled down. For example the resource consumption metric may be compared to one or more thresholds. If the resources allocated to the customer are to be scaled down the resource management application proceeds from box to box and terminates one or more machine instances of the customer in the cloud computing resource . The resource management application then returns to box and continues to determine the resource consumption metric.

If instead the resource management application determines that the resources allocated to the customer are not to be scaled up or down resources are maintained at the current level. The resource management application then returns to box and continues to determine the resource consumption metric. In some cases multiple customers of a hosting provider may share the cloud computing resource and instance types and or other characteristics may be optimized based at least in part on the usage of the customers.

With reference to shown is a schematic block diagram of the computing environment according to an embodiment of the present disclosure. The computing environment includes one or more computing devices . Each computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end the computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the data sources the data aggregation service the network page generation application the network page server application the network site configuration application the resource management application and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in the memory and are executable by the processor as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Delphi Flash or other programming languages.

A number of software components are stored in the memory and are executable by the processor . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory and run by the processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory and executed by the processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory to be executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memory is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor may represent multiple processors and the memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor may be of electrical or of some other available construction.

Although the data sources the data aggregation service the network page generation application the network page server application the network site configuration application the resource management application and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits having appropriate logic gates or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts of the functionality and operation of an implementation of portions of the network page generation application the network site configuration application and the resource management application . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowcharts of show a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the data sources the data aggregation service the network page generation application the network page server application the network site configuration application and the resource management application that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system.

The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

