---

title: Altering transcoding priority
abstract: In an embodiment, a content array represents media content available from a media server. The content array, sent by a media server in response to a request, lists content program objects that represent media content to be available from the media server. The media server receives a message for altering a transcoding priority of the selected content program object that represents media content not previously transcoded by the media server, and sends a return code for indicating whether the transcoding priority was successfully altered in response to the message. In a further embodiment, a media server system includes a transcoding queue with references to a plurality of content program objects that include an object method for altering a transcoding priority, and includes a transcoder configured to transcode media content associated with the content program objects according to the transcoding priority of each content program object of the transcoding queue.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08930446&OS=08930446&RS=08930446
owner: Motorola Mobility LLC
number: 08930446
owner_city: Chicago
owner_country: US
publication_date: 20120105
---
This application claims priority to U.S. Provisional Application Ser. No. 61 430 149 filed Jan. 5 2011 entitled Altering Transcoding Priority the disclosure of which is incorporated by reference herein in its entirety. This application also claims priority to U.S. Provisional Application Ser. No. 61 430 202 filed Jan. 6 2011 entitled An Object Model for Domain based Content Mobility Solution the disclosure of which is incorporated by reference herein in its entirety.

This application has related subject matter to commonly assigned U.S. patent application Ser. No. 13 344 000 filed Jan. 5 2012 entitled Secure Progressive Download for Media Content Playback the disclosure of which is incorporated by reference herein in its entirety.

The traditional notion of watching television at home has evolved into many different forms of viewing television content on many different devices. For example users can watch television content such as live television recorded television and time shifted programs and movies on various devices such as televisions display devices entertainment devices computers and even mobile devices such as tablets and mobile phones. Media content that is streamed or otherwise communicated to a client device such as media content wirelessly communicated to a mobile phone needs to be maintained as secure and encrypted.

Digital media can be transcoded and then streamed moved or otherwise communicated to a client device where the video audio playback takes place. Digital media transcoders can transform the encoding of media content from one format to another so that other devices can more readily consume or render the content for example many current mobile phones are not able to render high definition media content. Transcoding often takes tens of minutes or even hours depending upon the type and the length of the content. The latency can become increasingly lengthy and therefore unpleasant to the end user if there are multiple content items to be transcoded.

In embodiments altering transcoding priority for media content can be utilized as part of a system to deliver encrypted media content to a client device such as a mobile phone tablet device or portable computer for playback by a media player that controls playback of the media content on the client device. Secure media content can be downloaded from a remote media server or from a network based content server e.g. in the cloud to the client device. The client device implements a proxy application between the media player and a media server from which the media content is received. In embodiments a television set top box such as a digital video recorder DVR receives and records media content. The DVR content can then be re purposed to support two modes of playback operation at a mobile client device. The DVR content can be communicated to the media server that then downloads the media content to the mobile client device where it is stored on the mobile client device for local playback at any time and from anywhere. Alternatively the media server downloads the media content to the mobile client device for simultaneous playback on the mobile client device.

In an example system the media server receives encrypted media content from a television client device such as a DVR that records the media content. The media server receives and decrypts the encrypted media content via standard digital transmission content protection DTCP . The media server then formats the decrypted media content for playback by the media player on the client device by transcoding the media content e.g. by transrating or transsizing the media content or by transcoding from high definition media content to VGA formatted media content or to an MPEG 2 format. The media server then re encrypts the formatted media content for communication to the client device as encrypted formatted media content.

While features and concepts of altering transcoding priority for media content can be implemented in any number of different devices systems networks and or configurations embodiments of altering transcoding priority for media content are described in the context of the following example devices systems and methods.

The content distributor includes content servers to distribute media content to the set top box such as live television and or recorded on demand video content that is distributed via a coaxial cable system or IP based system. The set top box receives the media content from the content distributor as encrypted media content which can include any type of audio video and or image data in the form of television programming movies on demand video interactive games advertisements and the like. In a DVR implementation the set top box can record the encrypted media content with memory that maintains the recorded media content . In this example the set top box also includes a tuner that tunes to a television channel frequency over which the media content is delivered. In addition the set top box can be implemented with various components such as processor and memory devices as well as with any combination of differing components as further described with reference to the example electronic device shown in .

The example system also includes a key service such as any key encryption service and or key service provider that implements a key server to distribute a content encryption key CEK for secure delivery and communication of encrypted media content. In implementations the encrypted media content is not dependent on a particular key server and different key servers or services may be utilized for the secure delivery and communication of media content between devices services and or components in the example system . The content distributor key service and or the respective servers can be implemented with various components such as processor and memory devices as well as with any combination of differing components as further described with reference to the example electronic device shown in . For example the content distributor and the key service include storage media such as any type of memory and or suitable electronic data storage to store or otherwise maintain the media content and other data.

Any of the services devices and servers can communicate via the communication network which can be implemented to include a wired and or a wireless network. The communication network can also be implemented using any type of network topology and or communication protocol and can be represented or otherwise implemented as a combination of two or more networks to include IP based networks and or the Internet. The communication network may also include mobile operator networks that are managed by a mobile network operator and or other network operators such as a communication service provider cell phone provider and or Internet service provider.

The example system also includes a media server that is implemented to communicate media content such as recorded media content to a client device via a router implemented for wired and or wireless communication. The media server receives the encrypted media content and or the recorded media content from the set top box via an Ethernet connection . The media server is implemented to communicate and sync with the set top box and or DVR automatically and provides a proprietary interface for media content look up transport and protection. The media server decrypts the encrypted media content that is received from the set top box via DTCP and then if desired transcodes the decrypted media content. The media server can also communicate with the key service via the communication network and receives a content encryption key CEK . The media server can then utilize the content encryption key to re encrypt the formatted e.g. transcoded media content.

The media server includes a transcoder to format the decrypted media content for distribution to the client device as media content segments with an HTTP server via the router . An exemplary transcoder can perform reprocessing of compressed video from one bit rate to another e.g. transrating and or from one resolution to another e.g. transsizing from a high definition TV resolution to a standard definition TV resolution and or from one standard to another for example MPEG 2 to H.264 or MPEG 4 to MPEG 2 . In an illustrative example transcoder can transcode media content to provide the media content in an available resolution of the media rendering system in the client device . In a further exemplary embodiment the media server can reformat high definition media content received from the set top box such as MPEG 4 media content to a desired format for distribution to client device such as to VGA formatted media content or to MPEG 2 encoded data.

A transcoder queue is provided at the media server . The transcoder queue is used by the transcoder and provides an order or sequence in which the transcoder is to transcode media content such as media content not previously transcoded by the media server . In an embodiment the transcoder queue can be stored in the transcoder or in media server e.g. in a local memory or data storage device coupled to a processor of media server . In an illustrative embodiment the transcoder queue can be implemented as a data structure for example as an array of references to objects such as instances of content program class shown in and described below .

The order of elements in the transcoder queue can be altered by the media server for example an API call may be used to cause a processor of media server to move a specified instance of a content program class to the top i.e. first sequential position of the transcoder queue thereby increasing the transcoding priority of the specified instance of the content program class . In alternative embodiments an API call may be used to cause a processor of media server to move a specified instance of a content program class to the bottom i.e. last sequential position of the transcoder queue or to any other specified position in the transcoder queue or to increment or decrement the position in the transcoder queue . Accordingly the media server can respond to a request such as an API call or an object message by altering the transcoding priority of the specified instance of the content program class .

In an embodiment after transcoding is performed on media content the media server is implemented to re encrypt the formatted media content with the encryption key for communication to the client device via the router so that the media content remains secure when communicated over a wired or wireless communications network e.g. WiFi or Ethernet to the client device.

The media server can be implemented with various components such as a processor and memory devices as well as with any combination of differing components as further described with reference to the example electronic device shown in . For example the media server can include memory that is implemented to buffer the media content segments that are transcoded and maintained for delivery to the client device . Further although shown as an independent component or device the media server may be implemented as an integrated component or device of the set top box . Alternatively the media server may be implemented as a network based media server e.g. in the cloud to decrypt the encrypted media content transcode the decrypted media content and re encrypt the formatted media content for distribution to the client device as encrypted formatted media content.

In implementations the media server can serve as a portal server the media content server as well as a domain server. The client device can discover a server name of the media server that can be used to resolve an IP address for the media server. The media server supports Multicast DNS mDNS for the name discovery and IP address resolution mechanism. The mDNS protocol allows the client device to discover the media server by obtaining its fully qualified name and IP address. The client device can first multicast a query looking for the media server and then the media server s mDNS server responds by providing the fully qualified name FQN and IP address. The client device can then build its name resolution table and when the media server FQN is used in an HTTP URI the message will be sent to the media server correctly.

The client device may be implemented as any one or combination of a communication computer media playback gaming entertainment and or electronic device such as a mobile phone or tablet device that can be configured as a television client device to receive and playback media content. The client device can be implemented with various components such as processor and memory devices as well as with any combination of differing components as further described with reference to the example electronic device shown in . For example the client device includes a media rendering system to playback media content for viewing on an integrated display device.

The client device can also include various client applications such as a media player that is implemented to manage the media content playback as well as a proxy application that can be implemented as computer executable instructions such as a software application and executed by one or more processors to implement the various embodiments of altering transcoding priority for media content described herein. The client device can also include additional software and applications such as the software stack that is further described with reference to .

In embodiments the proxy application is implemented to receive the media content that is formatted and encrypted from the media server such as being received wirelessly via the router . The proxy application can initiate storing the encrypted formatted media content as the encrypted content in data storage on the client device . The proxy application is also implemented to request the content encryption key receive the encryption key from the key server and store the encryption key in the data storage on the client device. In embodiments the proxy application can receive encryption key request parameters from the media server and utilize the encryption key request parameters to request the content encryption key from the key service .

When the proxy application receives a request for the media content from the media player the proxy application can retrieve the encryption key and the encrypted media content from the data storage on the client device. The proxy application then decrypts segments of the encrypted media content with the encryption key and communicates the decrypted media content segments to the media player for playback on the client device. Accordingly the media player operates as if performing a progressive download against clear content and is totally agnostic of the media content being received and or stored as encrypted media content and then decrypted by the proxy application.

In embodiments the media content can be decrypted by the proxy application for playback by the media player as segments of the media content are received for an implementation of altering transcoding priority. Alternatively or in addition the media content can be downloaded and stored locally and later decrypted and played back when the client device is no longer communicatively linked in the local network such as when a user is traveling and wanting to display the media content e.g. watch a recorded movie or television program . The client device can list and describe media server content support progressive download of the media content protect the media content transport and storage enforce digital rights management DRM rules support content playback with the media player enforce domain control and or personalize and register user devices.

In embodiments the proxy application instantiates the media player with an obfuscated URL pointing to itself and the media player can determine the proxy application from the URL. The obfuscated URL can be generated randomly with a different value for each progressive download and or local playback session and the URL points back to the proxy application so that the media player knows where to request the media content from for playback. On the client device the proxy application executes first and when a user of the client device initiates a request for media content playback the proxy application generates the obfuscated URL and instantiates the media player . The media player can then communicate with the proxy application via an HTTP request and HTTP response. For example when the media player requests media content from the proxy application the proxy application in turn can request the media content from the media server or get the media content from locally stored content.

In addition to the domain class the object model includes a local content source class a remote content source class a download queue class a media player class e.g. such as to instantiate the media player in the client device a content program class a download queue entry class a program detail info class and a program info class . The local content source class includes functionality to control the media content that is already securely downloaded and maintained on the client device . The local content source class also controls displaying metadata that corresponds to the media content and deletion of the metadata.

The remote content source class represents the media server and includes functionality to interface with the media server. The remote content source class also provides methods to retrieve a remote content list and download remote media content such as remote media content that can be streamed to the client device. Remote media content usage control can be enforced for example by an Intellectual Property Rights Management IPRM system according to its copyrights. A remote content list includes the state of all the different remote media content and is sorted by the content state. An update to the remote content list is notified via a multicast domain name service mDNS message and can provide attributes of the media content such as the ID descriptions parental control information playback duration ratings the content file URLs the icon URLs protection type series name and the episode name.

The download queue entry class includes functionality to manage the media content that is scheduled to download to the client device and the download queue class provides methods to manage download queue entry. Before media content is fully downloaded from the media server to the client device the media content is an entry in a download queue. The download queue class can manage a deletion from the download queue a stop and restart of a download a change of the media content download order a report of media content download progress. Further downloaded media content is protected by the IPRM system can be stored persistently on the client device and the media content is playback ready e.g. the audio video data of the media content can be rendered with or without connection to the remote content source . The metadata that corresponds to the media content can also be stored persistently on the client device.

The media player class represents the media player that is instantiated by the proxy application and includes functionality to control playback of recorded media content and or streaming media content on the client device. The playback of the recorded media content and playback of the streaming media content are both different instantiations of the media player class.

The content program class in an embodiment represents one of local recorded media content e.g. the local content source class or remote streaming media content e.g. the remote content source . In an exemplary implementation of a content program class the class contains the basic information and methods of an individual program and includes public member functions. In an embodiment basic information for a program includes for example a channel number associated with the program a name associated with the program a showtime associated with the program a rating associated with the program a status which can indicate for example if the program has been downloaded or is allowed to be downloaded and a reference to the remote content source on which the program is stored.

In an embodiment content program class includes a public member function to move the selected program to the top of the transcoding queue for example a top of queue method e.g. a method referred to herein by the name topOfXQueue which can have a return value to indicate an error condition. For example in an embodiment the top of queue method will return an error if the program has already been transcoded. If the top of queue method is successful in an embodiment the remote content source will send a remote content update notification to notify that the program list has changed since the selected program will now be higher on the list.

In an embodiment content program class also includes a public member function to download the content program e.g. a method referred to herein by the name addToDownloadQueue . In an embodiment content program class also includes a public member function to download detailed information about the content program e.g. a method referred to herein by the name downloadDetailInfo for downloading metadata such as a program description and credits.

The program detail information class includes metadata corresponding to the media content and the program information class includes information about an individual program.

Example methods and are described with reference to respective in accordance with one or more embodiments of altering transcoding priority for media content. Generally any of the services functions methods procedures components and modules described herein can be implemented using software firmware hardware e.g. fixed logic circuitry manual processing or any combination thereof. A software implementation represents program code that performs specified tasks when executed by a computer processor. The example methods may be described in the general context of computer executable instructions which can include software applications routines programs objects components data structures procedures modules functions and the like. The program code can be stored in one or more computer readable storage media devices both local and or remote to a computer processor. The methods may also be practiced in a distributed computing environment by multiple computer devices. Further the features described herein are platform independent and can be implemented on a variety of computing platforms having a variety of processors.

At block the client device sends to a media server a request for a content array that represents media content to be available from the media server . For example the media content may have been previously downloaded to the media server or in a further embodiment the media content may be available to be downloaded to the media server .

At block the client device receives the content array from the media server the content array listing one or more content program objects. Each of the one or more content program objects represents media content to be available from the media server . For example in an embodiment the content array represents only media content not previously transcoded by the media server and in another embodiment at least some but not necessarily all of the one or more content program objects represent media content not previously transcoded by the media server .

At block the client device sends to the media server a message for altering a transcoding priority of a selected content program object. The selected content program object represents media content not previously transcoded by the media server . In some embodiments the media server then sends to the selected content program object a message for altering a transcoding priority of the selected content program object.

At block the client device receives from the media server a return code for indicating whether the transcoding priority of the selected content program object was successfully altered in response to the message. In some embodiments the selected content program object sends the return code to the media server and the media server delivers the return code to client device .

In further embodiments at block the client device receives media content segments comprising transcoded media content associated with the selected content program object.

At block a media server receives a request from a client device for a content array that represents media content to be available from the media server . For example the media content may have been previously downloaded to the media server or in a further embodiment the media content may be available to be downloaded to the media server

At block the media server sends the content array to the client device. The content array lists one or more content program objects. Each of the one or more content program objects represents media content to be available from the media server . For example in an embodiment the content array represents only media content not previously transcoded by the media server and in another embodiment at least some but not necessarily all of the one or more content program objects represent media content not previously transcoded by the media server .

At block the media server receives a message for altering a transcoding priority of a selected content program object. The selected content program object represents media content not previously transcoded by the media server . In an exemplary embodiment the media server provides to a selected content program object e.g. a content program object at the media server a message for altering a transcoding priority of the selected content program object.

At block the media server alters the transcoding priority of the selected content program object e.g. by moving a reference to the selected content program object in a transcoding queue of the media server . In an exemplary embodiment a method of the selected content program object causes the media server to alter the transcoding priority of the selected content program object.

At block the media server returns a return code. The return code indicates whether the transcoding priority of the selected content program object was successfully altered in response to the message. In an exemplary embodiment the selected content program object provides the return code to the media server .

In further embodiments at block the media server sends to the client device media content segments comprising transcoded media content associated with the selected content program object.

The electronic device includes communication transceivers that enable wired and or wireless communication of device data such as received data data that is being received data scheduled for broadcast data packets of the data etc. Example transceivers include wireless personal area network WPAN radios compliant with various IEEE 802.15 Bluetooth standards wireless local area network WLAN radios compliant with any of the various IEEE 802.11 e.g. WiFi standards wireless wide area network WWAN radios for cellular telephony wireless metropolitan area network WMAN radios compliant with various IEEE 802.15 WiMAX standards and wired local area network LAN Ethernet transceivers.

The electronic device may also include one or more data input ports via which any type of data media content and or inputs can be received such as user selectable inputs messages music television content recorded video content and any other type of audio video and or image data received from any content and or data source. The data input ports may include USB ports coaxial cable ports and other serial or parallel connectors including internal connectors for flash memory DVDs CDs and the like. These data input ports may be used to couple the electronic device to components peripherals or accessories such as microphones and or cameras.

The electronic device includes one or more processors e.g. any of microprocessors controllers and the like which process computer executable instructions to control operation of the device. Alternatively or in addition the electronic device can be implemented with any one or combination of software hardware firmware or fixed logic circuitry that is implemented in connection with processing and control circuits which are generally identified at . Although not shown the electronic device can include a system bus or data transfer system that couples the various components within the device. A system bus can include any one or combination of different bus structures such as a memory bus or memory controller a peripheral bus a universal serial bus and or a processor or local bus that utilizes any of a variety of bus architectures.

The electronic device also includes one or more memory devices that enable data storage examples of which include random access memory RAM non volatile memory e.g. read only memory ROM flash memory EPROM EEPROM etc. and a disk storage device. A disk storage device may be implemented as any type of magnetic or optical storage device such as a hard disk drive a recordable and or rewriteable disc any type of a digital versatile disc DVD and the like. The electronic device may also include a mass storage media device.

A memory device provides data storage mechanisms to store the device data other types of information and or data and various device applications e.g. software applications . For example an operating system can be maintained as software instructions within a memory device and executed on the processors . The device applications may also include a device manager such as any form of a control application software application signal processing and control module code that is native to a particular device a hardware abstraction layer for a particular device and so on. The electronic device may also include a proxy application and a media player such as for a client device to implement embodiments of altering transcoding priority for media content.

The electronic device also includes an audio and or video processing system that generates audio data for an audio system and or generates display data for a display system . The audio system and or the display system may include any devices that process display and or otherwise render audio video display and or image data. Display data and audio signals can be communicated to an audio component and or to a display component via an RF radio frequency link S video link HDMI high definition multimedia interface composite video link component video link DVI digital video interface analog audio connection or other similar communication link such as media data port . In implementations the audio system and or the display system are external components to the electronic device. Alternatively the audio system and or the display system are integrated components of the example electronic device.

In the example communication sequence the client device application initiates a get program with ID object message to the media server which returns a content program object . The client device application then communicates a download metadata object message download metadata id selector selector to obtain the content program . The media server references the REST API program metadata URI which can be used to download the detailed program representation of any program using the program id as described below with reference to the program metadata URI in the REST API specification. A program metadata notification Id selector program metadata is then communicated back to the client device application.

The media server communicates a directory complete notification to the NS notification center which returns a directory complete notification to the client device application . The client device application then communicates a get content array object message to the media server which returns a content array object .

In the example communication sequence the client device application initiates a get content array object message to the media server which returns the content array object to the client device application. The client device application then communicates a message. In an embodiment the message is sent to or via the media server . In an embodiment the message is delivered e.g. by the media server to the content program object . In an embodiment the message is a top of queue object message e.g. topOfXQueue as discussed above with reference to depicted in as topOfXQueue id Selector selector .

In an illustrative embodiment the content program object references the REST API download content URI for example by calling a Transcode Priority URI such as http content server content program id that includes a GET method for causing transcoding priority to be raised e.g. raised to the top of a transcoding queue of transcoder in and receiving a return value. The content program object then returns e.g. to the media server or via the media server to the client device app a return code notification for the return value to the client device application. In an illustrative example the return value indicates the priority of the requested program has been raised. The return value indicates program not found. The return value indicates the priority of the requested program cannot be raised.

In the example communication sequence the client device application initiates a request for local media content as a get local content source object message and the local content source object returns a local content source object to the client device application. The client device application then communicates a get content array object message to the local content source object which returns an NS array object to the client device application. The client device application then communicates a get program with ID object message to the local content source object which returns a content program object to the client device application. The client device application then communicates a delete local program object message to the local content source object which returns a yes or no object to the client device application.

In the example communication sequence the client device application initiates a get download queue object message to the download queue object which returns the download queue return object to the client device application. The download queue object then begins a download of media content to the client device if applicable and can communicate a content download started object to the client device application. The iOS SDK communicates a did receive data return object to the download queue object which then communicates a content download progress object to the client device application. The did receive data return object from the iOS SDK and the content download progress object from the download queue object to the client device application is repeated through the download of the media content to the client device. The download queue object can then communicate a content download finished object to the client device application.

In the example communication sequence the client device application initiates a get download queue object message to the download queue object which returns the download queue return object to the client device application. The client device application then communicates an add program to queue object message add program to queue content program to the download queue object which returns an ok object response to the client device application. The download queue object also communicates a content download queue changed return object to the client device application.

In the example communication sequence the client device application initiates a get media player object message to the media player object which returns the media player return object to the client device application. The client device application then communicates a prepare to play content program object message to the media player object . The media player can then setup playback or streaming logistics and communicate an ok return object to the client device application. The client device application then communicates a get movie player type object message to the media player object which in turn communicates an allocation object message to the MP controller . The media player object also communicates an init with content URL object message to the MP controller and the media player object responds to the client device application with a movie player return object . The client device application communicates a play object message to the MP controller as well as a release movie player object message to the media player . The media player then communicates the release object message to the MP controller .

Although embodiments of altering transcoding priority for media content have been described in language specific to features and or methods the subject of the appended claims is not necessarily limited to the specific features or methods described. Rather the specific features and methods are disclosed as example implementations of altering transcoding priority for media content. One of ordinary skill in the art appreciates that various modifications and changes can be made without departing from the scope of the present invention as set forth in the claims below. Accordingly the specification and figures are to be regarded in an illustrative rather than a restrictive sense and all such modifications are intended to be included within the scope of the present invention. The benefits advantages solutions to problems and any element s that may cause any benefit advantage or solution to occur or become more pronounced are not to be construed as critical required or essential features or elements of any or all the claims.

