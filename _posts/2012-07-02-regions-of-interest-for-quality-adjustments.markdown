---

title: Regions of interest for quality adjustments
abstract: Quality settings established by an encoder are adjusted based on information associated with regions of interest (“ROIs”). For example, quantization step sizes can be reduced (to improve quality) or increased (to reduce bit rate). ROIs can be identified and quality settings can be adjusted based on input received from a user interface. An overlap setting can be determined for a portion of a picture that corresponds to an ROI overlap area. For example, an overlap setting is chosen from step sizes corresponding to a first overlapping ROI and a second overlapping ROI, or from relative reductions in step size corresponding to the first ROI and the second ROI. ROIs can be parameterized by information (e.g., using data structures) that indicates spatial dimensions of the ROIs and quality adjustment information (e.g., dead zone information, step size information, and quantization mode information).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08576908&OS=08576908&RS=08576908
owner: Microsoft Corporation
number: 08576908
owner_city: Redmond
owner_country: US
publication_date: 20120702
---
This application is a continuation of U.S. patent application Ser. No. 11 731 851 filed Mar. 30 2007 which application is incorporated herein by reference in its entirety.

With the increased popularity of DVDs music delivery over the Internet and digital cameras digital media have become commonplace. Engineers use a variety of techniques to process digital audio video and images efficiently while still maintaining quality. To understand these techniques it helps to understand how the audio video and image information is represented and processed in a computer.

A computer processes media information as a series of numbers representing that information. For example a single number may represent the intensity of brightness or the intensity of a color component such as red green or blue for each elementary small region of a picture so that the digital representation of the picture consists of one or more arrays of such numbers. Each such number may be referred to as a sample. For a color image it is conventional to use more than one sample to represent the color of each elemental region and typically three samples are used. The set of these samples for an elemental region may be referred to as a pixel where the word pixel is a contraction referring to the concept of a picture element. For example one pixel may consist of three samples that represent the intensity of red green and blue light necessary to represent the elemental region. Such a pixel type is referred to as an RGB pixel. Several factors affect quality of media information including sample depth resolution and frame rate for video .

Sample depth is a property normally measured in bits that indicates the range of numbers that can be used to represent a sample. When more values are possible for the sample quality can be higher because the number can capture more subtle variations in intensity and or a greater range of values. Resolution generally refers to the number of samples over some duration of time for audio or space for images or individual video pictures . Images with higher resolution tend to look crisper than other images and contain more discernable useful details. Frame rate is a common term for temporal resolution for video. Video with higher frame rate tends to mimic the smooth motion of natural objects better than other video and can similarly be considered to contain more detail in the temporal dimension. For all of these factors the tradeoff for high quality is the cost of storing and transmitting the information in terms of the bit rate necessary to represent the sample depth resolution and frame rate as Table 1 shows.

Despite the high bit rate necessary for storing and sending high quality video such as HDTV companies and consumers increasingly depend on computers to create distribute and play back high quality content. For this reason engineers use compression also called source coding or source encoding to reduce the bit rate of digital media. Compression decreases the cost of storing and transmitting the information by converting the information into a lower bit rate form. Compression can be lossless in which quality of the video does not suffer but decreases in bit rate are limited by the complexity of the video. Or compression can be lossy in which quality of the video suffers but decreases in bit rate are more dramatic. Decompression also called decoding reconstructs a version of the original information from the compressed form. An encoder decoder system is sometimes referred to as a codec. 

In general video compression techniques include intra compression and inter or predictive compression. For video frames intra compression techniques compress individual frames typically called I frames or key frames. Inter compression techniques compress frames with reference to preceding and or following frames and inter compressed frames are typically called predicted frames P frames or B frames.

Microsoft Corporation s Windows Media Video Version 8 WMV8 includes a video encoder and a video decoder. The WMV8 encoder uses intra and inter compression and the WMV8 decoder uses intra and inter decompression. Windows Media Video Version 9 WMV9 uses a similar architecture for many operations.

The encoder then quantizes the DCT coefficients resulting in an 8 8 block of quantized DCT coefficients . Quantization is lossy. Since low frequency DCT coefficients tend to have higher values quantization typically results in loss of precision but not complete loss of the information for the coefficients. On the other hand since high frequency DCT coefficients tend to have values of zero or close to zero quantization of the high frequency coefficients typically results in contiguous regions of zero values. In addition in some cases high frequency DCT coefficients are quantized more coarsely than low frequency DCT coefficients resulting in greater loss of precision information for the high frequency DCT coefficients.

The encoder then prepares the 8 8 block of quantized DCT coefficients for entropy encoding which is a form of lossless compression. The exact type of entropy encoding can vary depending on whether a coefficient is a DC coefficient lowest frequency an AC coefficient other frequencies in the top row or left column or another AC coefficient.

The encoder encodes the DC coefficient as a differential from the DC coefficient of a neighboring 8 8 block which is a previously encoded neighbor e.g. top or left of the block being encoded. shows a neighbor block that is situated to the left of the block being encoded in the frame. The encoder entropy encodes the differential.

The entropy encoder can encode the left column or top row of AC coefficients as a differential from a corresponding left column or top row of the neighboring 8 8 block. This is an example of AC coefficient prediction. shows the left column of AC coefficients encoded as a differential from the left column of the neighboring in reality to the left block . The differential coding increases the chance that the differential coefficients have zero values. The remaining AC coefficients are from the block of quantized DCT coefficients.

The encoder scans the 8 8 block of quantized AC DCT coefficients into a one dimensional array and then entropy encodes the scanned AC coefficients using a variation of run length coding . The encoder selects an entropy code from one or more run level last tables and outputs the entropy code.

Inter compression in the WMV8 encoder uses block based motion compensated prediction coding followed by transform coding of the residual error. illustrate the block based inter compression for a predicted frame in the WMV8 encoder. In particular illustrates motion estimation for a predicted frame and illustrates compression of a prediction residual for a motion compensated block of a predicted frame.

For example in the WMV8 encoder computes a motion vector for a macroblock in the predicted frame . To compute the motion vector the encoder searches in a search area of a reference frame . Within the search area the encoder compares the macroblock from the predicted frame to various candidate macroblocks in order to find a candidate macroblock that is a good match. The encoder outputs information specifying the motion vector entropy coded for the matching macroblock. The motion vector is differentially coded with respect to a motion vector predictor.

The prediction is rarely perfect so the encoder usually encodes blocks of differences also called the error or residual blocks between the prediction macroblock and the macroblock itself.

The preceding section mentioned quantization a mechanism for lossy compression and lossless compression. Lossless compression reduces the bit rate of information by removing redundancy from the information without any reduction in fidelity. Lossless compression techniques reduce bit rate at no cost to quality but can only reduce bit rate up to a certain point. Decreases in bit rate are limited by the inherent amount of variability in the statistical characterization of the input data which is referred to as the source entropy.

In contrast with lossy compression the quality suffers somewhat but the achievable decrease in bit rate is more dramatic. Lossy compression techniques can be used to reduce bit rate more than lossless compression techniques but some of the reduction in bit rate is achieved by reducing quality and the lost quality cannot be completely recovered. Lossy compression is often used in conjunction with lossless compression e.g. in a system design in which lossy compression establishes an approximation of the information and lossless compression techniques are applied to represent the approximation.

According to one possible definition quantization is a term used for an approximating non reversible mapping function commonly used for lossy compression in which there is a specified set of possible output values and each member of the set of possible output values has an associated set of input values that result in the selection of that particular output value. In general an encoder varies quantization to trade off quality and bit rate. Coarser quantization results in greater quality reduction but allows for greater bit rate reduction.

A variety of quantization techniques have been developed including scalar or vector uniform or non uniform and adaptive or non adaptive quantization.

According to one possible definition a scalar quantizer is an approximating functional mapping x Q x of an input value x to a quantized value Q x sometimes called a reconstructed value. shows a staircase I O function for a scalar quantizer. The horizontal axis is a number line for a real number input variable x and the vertical axis indicates the corresponding quantized values Q x . The number line is partitioned by thresholds such as the threshold . Each value of x within a given range between a pair of adjacent thresholds is assigned the same quantized value Q x . For example each value of x within the range is assigned the same quantized value . At a threshold one of the two possible quantized values is assigned to an input x depending on the system. Overall the quantized values Q x exhibit a discontinuous staircase pattern. The distance the mapping continues along the number line depends on the system typically ending after a finite number of thresholds. The placement of the thresholds on the number line may be uniformly spaced as shown in or non uniformly spaced.

A scalar quantizer can be decomposed into two distinct stages. The first stage is the classifier stage in which a classifier function mapping x A x maps an input x to a quantization index A x which is often integer valued. In essence the classifier segments an input number line or data set. shows a generalized classifier and thresholds for a scalar quantizer. As in a number line for a real number variable x is segmented by thresholds such as the threshold . Each value of x within a given range such as the range is assigned the same quantized value Q x . shows a numerical example of a classifier and thresholds for a scalar quantizer.

In the second stage a reconstructor functional mapping k k maps each quantization index k to a reconstruction value k . In essence the reconstructor places steps having a particular height relative to the input number line segments or selects a subset of data set values for reconstruction of each region determined by the classifier. The reconstructor functional mapping may be implemented for example using a lookup table. Overall the classifier relates to the reconstructor as follows Q x A x 1 .

In common usage the term quantization is often used to describe the classifier stage which is performed during encoding. The term inverse quantization is similarly used to describe the reconstructor stage whether performed during encoding or decoding.

The distortion introduced by using such a quantizer may be computed with a difference based distortion measure d x Q x . Typically such a distortion measure has the property that d x Q x increases as x Q x deviates from zero and typically each reconstruction value lies within the range of the corresponding classification region so that the straight line that would be formed by the functional equation Q x x will pass through every step of the staircase diagram as shown in and therefore Q Q x will typically be equal to Q x . In general a quantizer is considered better in rate distortion terms if the quantizer results in a lower average value of distortion than other quantizers for a given bit rate of output. More formally a quantizer is considered better if for a source random variable X the expected i.e. the average or statistical mean value of the distortion measure Ed X Q X is lower for an equal or lower entropy H of A X . The most commonly used distortion measure is the squared error distortion measure for which d x y x y . When the squared error distortion measure is used the expected value of the distortion measure is referred to as the mean squared error.

A non uniform quantizer has threshold values that are not uniformly spaced for all classifier regions. According to one possible definition a dead zone plus uniform threshold quantizer DZ UTQ is a quantizer with uniformly spaced threshold values for all classifier regions except the one containing the zero input value which is called the dead zone DZ . In a general sense a DZ UTQ is a non uniform quantizer since the DZ size is different than the other classifier regions.

A DZ UTQ has a classifier index mapping rule x A x that can be expressed based on two parameters. shows a staircase I O function for a DZ UTQ and shows a generalized classifier and thresholds for a DZ UTQ. The parameter s which is greater than 0 indicates the step size for all steps other than the DZ. Mathematically all sare equal to s for i 0. The parameter z which is greater than or equal to 0 indicates the ratio of the DZ size to the size of the other steps. Mathematically s z s. In z is 2 so the DZ is twice as wide as the other classification zones. The index mapping rule x A x for a DZ UTQ can be expressed as 

In some system designs not shown an additional consideration may be necessary to fully characterize a DZ UTQ classification rule. For practical reasons there may be a need to limit the range of values that can result from the classification function A x to some reasonable finite range. This limitation is referred to as clipping. For example in some such systems the classification rule could more precisely be defined as 

Different reconstruction rules may be used to determine the reconstruction value for each quantization index. Standards and product specifications that focus only on achieving interoperability will often specify reconstruction values without necessarily specifying the classification rule. In other words some specifications may define the functional mapping k k without defining the functional mapping x A x . This allows a decoder built to comply with the standard specification to reconstruct information correctly. In contrast encoders are often given the freedom to change the classifier in any way that they wish while still complying with the standard specification.

Numerous systems for adjusting quantization thresholds have been developed. Many standards and products specify reconstruction values that correspond to a typical mid point reconstruction rule e.g. for a typical simple classification rule for the sake of simplicity. For classification however the thresholds can in fact be adjusted so that certain input values will be mapped to more common and hence lower bit rate indices which makes the reconstruction values closer to optimal.

In many systems the extent of quantization is measured in terms of quantization step size. Coarser quantization uses larger quantization step sizes corresponding to wider ranges of input values. Finer quantization uses smaller quantization step sizes. Often for purposes of signaling and reconstruction quantization step sizes are parameterized as multiples of a smallest quantization step size.

As mentioned above lossy compression tends to cause a decrease in quality. For example a series of ten samples of slightly different values can be approximated using quantization as ten samples with exactly the same particular approximate value. This kind of quantization can reduce the bit rate of encoding the series of ten samples but at the cost of lost detail in the original ten samples.

In some cases quantization produces visible artifacts that tend to be more artificial looking and visually distracting than simple loss of fine detail. For example smooth un textured content is susceptible to contouring artifacts artifacts that appear between regions of two different quantization output values because the human visual system is sensitive to subtle variations particularly luma differences in smooth content. Using the above example consider a case where the luma values of the series of ten samples change gradually and consistently from the first sample to the tenth sample. Quantization may approximate the first five sample values as one value and the last five sample values as another value. While this kind of quantization may not create visible artifacts in textured areas due to masking effects in smooth regions it can create a visible line or step in the reconstructed image between the two sets of five samples.

In differential quantization an encoder varies quantization step sizes also referred to herein as quantization parameters or QPs for different parts of a picture. Typically this involves varying QPs on a macroblock level or other sub picture level. The encoder makes decisions on how to vary the QPs and signals those decisions as appropriate to a decoder.

For example a VC 1 encoder optionally chooses differential quantization for compression. The encoder sends a bitstream element DQUANT at a syntax level above picture level to indicate whether or not the QP can vary among the macroblocks in individual pictures. The encoder sends a picture level bitstream element PQINDEX to indicate a picture QP. If DQUANT 0 the QP indicated by PQINDEX is used for all macroblocks in the picture. If DQUANT 1 or 2 different macroblocks in the same picture can use different QPs.

The VC 1 encoder can use more than one approach to differential quantization. In one approach only two different QPs are used for a picture. This is referred to as bi level differential quantization. For example one QP is used for macroblocks at picture edges and another QP is used for macroblocks in the rest of the picture. This can be useful for saving bits at picture edges where fine detail is less important for maintaining overall visual quality. Or a 1 bit value signaled per macroblock indicates which of two available QP values to use for the macroblock. In another approach referred to as multi level differential quantization a larger number of different QPs can be used for individual macroblocks in a picture.

The encoder sends a picture level bitstream element VOPDQUANT when DQUANT is non zero. VOPDQUANT is composed of other elements potentially including DQPROFILE which indicates which parts of the picture can use QPs other than the picture QP. When DQPROFILE indicates that arbitrary different macroblocks can use QPs other than the picture QP the bitstream element DQBILEVEL is present. If DQBILEVEL 1 each macroblock uses one of two QPs bi level quantization . If DQBILEVEL 0 each macroblock can use any QP multi level quantization .

The bitstream element MQDIFF is sent at macroblock level to signal a 1 bit selector for a macroblock for bi level quantization. For multi level quantization MQDIFF is a three bit element taking a value from 0 to 7 . If MQDIFF is not 7 i.e. if the difference between the picture QP and the macroblock QP is 6 or less MQDIFF indicates a differential between the picture QP and the macroblock QP. If MQDIFF is 7 an absolute QP is signaled by the 5 bit element ABSMQ for a macroblock.

Numerous international standards specify aspects of video decoders and formats for compressed video information. Directly or by implication these standards also specify certain encoder details but other encoder details are not specified. Some standards address still image compression decompression and other standards address audio compression decompression. Numerous companies have produced encoders and decoders for audio still images and video. Various other kinds of signals for example hyperspectral imagery graphics text financial information etc. are also commonly represented and stored or transmitted using compression techniques.

Various video standards allow the use of different quantization step sizes for different picture types and allow variation of quantization step sizes for rate and quality control. Standards typically do not fully specify the quantizer design.

Given the critical importance of video compression to digital video it is not surprising that video compression is a richly developed field. Whatever the benefits of previous video compression techniques however they do not have the advantages of the following techniques and tools.

The present application describes techniques and tools for adjusting quality settings e.g. quantization parameters for regions of interest. For example the perceptual quality of video is improved by allowing a user to identify regions of interest that specify quantization adjustments for corresponding parts of video pictures.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

In one aspect a region of interest is identified for a video picture. Typically the video picture is comprised of units such as macroblocks and the region of interest corresponds to a subset of macroblocks in the picture. Initial region of interest encoding settings established by a video encoder e.g. quantization step sizes for macroblocks corresponding to the region of interest are adjusted relative to encoder settings for other parts of the video picture by changing the region of interest settings and or the encoder settings for other parts of the picture. The adjustment is based at least in part on region of interest information associated with the region of interest. The region of interest information includes for example dead zone information and quantization step size information. Quantization step sizes and or dead zone sizes can be reduced to improve visual quality or increased to reduce bit rate . The region of interest can be identified and quality adjustment information can be provided based on input received from a user interface e.g. graphical user interface command line interface eye tracking device etc. .

In another aspect plural regions of interest include a first region of interest that overlaps at least in part with a second region of interest. An overlap quantization setting is determined for a portion of the picture that corresponds to the overlap. For example the overlap quantization setting is determined to be the smaller of a quantization step size for the first region of interest and a quantization step size for the second region of interest. Or the overlap quantization setting is chosen from a relative reduction in quantization step size for the first region of interest and a relative reduction in quantization step size for the second region of interest.

In another aspect a region of interest is parameterized by information that indicates the spatial dimensions of the region of interest and region of interest settings. For example information indicating the region of interest settings includes dead zone information quantization step size information and or quantization mode information.

The foregoing and other objects features and advantages will become more apparent from the following detailed description which proceeds with reference to the accompanying figures.

The present application relates to techniques and tools for quality adjustments e.g. quantization adjustments in video pictures using regions of interest. In various described embodiments a video encoder incorporates techniques for encoding video and corresponding signaling techniques for use with a bitstream format or syntax comprising different layers or levels. Some of the described techniques and tools can be applied to interlaced or progressive frames.

Various alternatives to the implementations described herein are possible. For example techniques described with reference to flowchart diagrams can be altered by changing the ordering of stages shown in the flowcharts by repeating or omitting certain stages etc. As another example although some implementations are described with reference to specific macroblock formats other formats also can be used.

The various techniques and tools can be used in combination or independently. Different embodiments implement one or more of the described techniques and tools. Some techniques and tools described herein can be used in a video encoder or in some other system not specifically limited to video encoding.

With reference to the computing environment includes at least one processing unit and memory . In this most basic configuration is included within a dashed line. The processing unit executes computer executable instructions and may be a real or a virtual processor. In a multi processing system multiple processing units execute computer executable instructions to increase processing power. The memory may be volatile memory e.g. registers cache RAM non volatile memory e.g. ROM EEPROM flash memory etc. or some combination of the two. The memory stores software implementing a video encoder or post encoding application with one or more of the described techniques and tools for making quality adjustments using regions of interest.

A computing environment may have additional features. For example the computing environment includes storage one or more input devices one or more output devices and one or more communication connections . An interconnection mechanism not shown such as a bus controller or network interconnects the components of the computing environment . Typically operating system software not shown provides an operating environment for other software executing in the computing environment and coordinates activities of the components of the computing environment .

The storage may be removable or non removable and includes magnetic disks magnetic tapes or cassettes CD ROMs DVDs or any other medium which can be used to store information and which can be accessed within the computing environment . The storage stores instructions for the software .

The input device s may be a touch input device such as a keyboard mouse pen or trackball a voice input device a scanning device or another device that provides input to the computing environment . For audio or video encoding the input device s may be a sound card video card TV tuner card or similar device that accepts audio or video input in analog or digital form or a DVD CD ROM or CD RW that reads audio or video samples into the computing environment . The output device s may be a display printer speaker DVD or CD writer or another device that provides output from the computing environment .

The communication connection s enable communication over a communication medium to another computing entity. The communication medium conveys information such as computer executable instructions audio or video input or output or other data in a modulated data signal. A modulated data signal is a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired or wireless techniques implemented with an electrical optical RF infrared acoustic or other carrier.

The techniques and tools can be described in the general context of computer readable media. Computer readable media are any available media that can be accessed within a computing environment. By way of example and not limitation with the computing environment computer readable media include memory storage communication media and combinations of any of the above.

The techniques and tools can be described in the general context of computer executable instructions such as those included in program modules being executed in a computing environment on a target real or virtual processor. Generally program modules include routines programs libraries objects classes components data structures etc. that perform particular tasks or implement particular abstract data types. The functionality of the program modules may be combined or split between program modules as desired in various embodiments. Computer executable instructions for program modules may be executed within a local or distributed computing environment.

For the sake of presentation the detailed description uses terms like receive and obtain to describe computer operations in a computing environment. These terms are high level abstractions for operations performed by a computer and should not be confused with acts performed by a human being. The actual computer operations corresponding to these terms vary depending on implementation.

The encoder processes video pictures. The term picture generally refers to source coded or reconstructed image data. For progressive video a picture is a progressive video frame. For interlaced video a picture may refer to an interlaced video frame the top field of the frame or the bottom field of the frame depending on the context. The encoder is block based and uses a 4 2 0 macroblock format for frames. As shown in macroblock includes four 8 8 luminance or luma blocks Y through Y and two 8 8 chrominance or chroma blocks U and V that are co located with the four luma blocks but half resolution horizontally and vertically following the conventional 4 2 0 macroblock format. For fields the same or a different macroblock organization and format may be used. The 8 8 blocks may be further sub divided at different stages e.g. at the frequency transform and entropy encoding stages. The encoder can perform operations on sets of samples of different size or configuration than 8 8 blocks and 16 16 macroblocks. Alternatively the encoder is object based or uses a different macroblock or block format.

Returning to the encoder system compresses predicted pictures and intra coded key pictures. For the sake of presentation shows a path for key pictures through the encoder system and a path for predicted pictures. Many of the components of the encoder system are used for compressing both key pictures and predicted pictures. The exact operations performed by those components can vary depending on the type of information being compressed.

A predicted picture e.g. progressive P frame or B frame interlaced P field or B field or interlaced P frame or B frame is represented in terms of prediction or difference from one or more other pictures which are typically referred to as reference pictures or anchors . A prediction residual is the difference between what was predicted and the original picture. In contrast a key picture e.g. progressive I frame interlaced I field or interlaced I frame is compressed without reference to other pictures.

If the current picture is a predicted picture a motion estimator estimates motion of macroblocks or other sets of samples of the current picture with respect to one or more reference pictures for example the reconstructed previous picture buffered in the picture store . If the current picture is a bi predictive picture a motion estimator estimates motion in the current picture with respect to up to four reconstructed reference pictures for an interlaced B field for example . Typically a motion estimator estimates motion in a B picture with respect to one or more temporally previous reference pictures and one or more temporally future reference pictures but B pictures need not be predicted from different temporal directions. The encoder system can use the separate stores for multiple reference pictures.

The motion estimator can estimate motion by full sample sample sample or other increments and can switch the precision of the motion estimation on a picture by picture basis or other basis. The motion estimator and compensator also can switch between types of reference picture sample interpolation e.g. between bicubic and bilinear on a per frame or other basis. The precision of the motion estimation can be the same or different horizontally and vertically. The motion estimator outputs as side information motion information such as differential motion vector information. The encoder encodes the motion information by for example computing one or more predictors for motion vectors computing differentials between the motion vectors and predictors and entropy coding the differentials. To reconstruct a motion vector a motion compensator combines a predictor with differential motion vector information.

The motion compensator applies the reconstructed motion vector to the reconstructed picture s to form a motion compensated current picture . The prediction is rarely perfect however and the difference between the motion compensated current picture and the original current picture is the prediction residual . During later reconstruction of the picture the prediction residual is added to the motion compensated current picture to obtain a reconstructed picture that is closer to the original current picture . In lossy compression however some information is still lost from the original current picture . Alternatively a motion estimator and motion compensator apply another type of motion estimation compensation.

A frequency transformer converts the spatial domain video information into frequency domain i.e. spectral data. For block based video pictures the frequency transformer applies a DCT variant of DCT or other block transform to blocks of the sample data or prediction residual data producing blocks of frequency transform coefficients. Alternatively the frequency transformer applies another conventional frequency transform such as a Fourier transform or uses wavelet or sub band analysis. The frequency transformer may apply an 8 8 8 4 4 8 4 4 or other size frequency transform.

A quantizer then quantizes the blocks of spectral data coefficients. The quantizer applies uniform scalar quantization to the spectral data with a step size that varies on a picture by picture basis or other basis e.g. a macroblock by macroblock basis . Alternatively the quantizer applies another type of quantization to the spectral data coefficients for example a non uniform vector or non adaptive quantization or directly quantizes spatial domain data in an encoder system that does not use frequency transformations. Techniques and tools relating to quantization in some implementations are described in detail below.

In addition to adaptive quantization the encoder can use frame dropping adaptive filtering or other techniques for rate control.

When a reconstructed current picture is needed for subsequent motion estimation compensation an inverse quantizer performs inverse quantization on the quantized spectral data coefficients. An inverse frequency transformer then performs the inverse of the operations of the frequency transformer producing a reconstructed prediction residual for a predicted picture or a reconstructed key picture. If the current picture was a key picture the reconstructed key picture is taken as the reconstructed current picture not shown . If the current picture was a predicted picture the reconstructed prediction residual is added to the motion compensated current picture to form the reconstructed current picture. One or both of the picture stores buffers the reconstructed current picture for use in motion compensated prediction. In some embodiments the encoder applies a de blocking filter to the reconstructed frame to adaptively smooth discontinuities and other artifacts in the picture.

The entropy coder compresses the output of the quantizer as well as certain side information e.g. motion information quantization step size QP . Typical entropy coding techniques include arithmetic coding differential coding Huffman coding run length coding LZ coding dictionary coding and combinations of the above. The entropy coder typically uses different coding techniques for different kinds of information e.g. DC coefficients AC coefficients different kinds of side information and can choose from among multiple code tables within a particular coding technique. The encoder may use special signaling for a skipped macroblock which is a macroblock that has no information of certain types e.g. no differential motion vectors for the macroblock and no residual information .

The entropy coder provides compressed video information to the buffer . A buffer level indicator may be fed back to a controller. Before or after the buffer the compressed video information can be channel coded for transmission over the network. The channel coding can apply error detection and correction data to the compressed video information .

A controller not shown receives inputs from various modules such as the motion estimator frequency transformer quantizer inverse quantizer entropy coder and buffer . The controller evaluates intermediate results during encoding for example estimating distortion and performing other rate distortion analysis. The controller works with modules such as the motion estimator frequency transformer quantizer and entropy coder to set and change coding parameters during encoding. When an encoder evaluates different coding parameter choices during encoding the encoder may iteratively perform certain stages e.g. quantization and inverse quantization to evaluate different parameter settings. The encoder may set parameters at one stage before proceeding to the next stage. Or the encoder may jointly evaluate different coding parameters. The tree of coding parameter decisions to be evaluated and the timing of corresponding encoding depends on implementation.

The encoder may include one or more modules for using regions of interest to adjust encoder settings. For example the encoder can allow a user to preview video after quantization or other encoding stages and draw regions of interest to indicate areas for quality adjustment. Alternatively region of interest adjustments can be made after the encoder outputs encoded video. Techniques and tools relating to quality adjustments using regions of interest are described in detail below.

The relationships shown between modules within the encoder indicate general flows of information in the encoder other relationships are not shown for the sake of simplicity. In particular usually does not show side information indicating the encoder settings modes tables etc. used for a video sequence picture macroblock block etc. Such side information once finalized is sent in the output bitstream typically after entropy encoding of the side information.

Particular embodiments of video encoders typically use a variation or supplemented version of the generalized encoder . Depending on implementation and the type of compression desired modules of the encoder can be added omitted split into multiple modules combined with other modules and or replaced with like modules. For example the controller can be split into multiple controller modules associated with different modules of the encoder. In alternative embodiments encoders with different modules and or other configurations of modules perform one or more of the described techniques.

In differential quantization an encoder varies quantization step sizes also referred to herein as quantization parameters or QPs in some implementations for different parts of a picture. Typically this involves varying QPs on a macroblock or other sub picture level. An encoder makes decisions on how to vary the QPs and can signal those decisions as appropriate to a decoder. Some encoders use bi level differential quantization varying between two QPs and multi level differential quantization varying between three or more QPs . For example in one bi level differential quantization approach one QP is used for macroblocks at picture edges and another QP is used for macroblocks in the rest of the picture. This can be useful for saving bits at picture edges where fine detail is less important for maintaining overall visual quality. In a multi level differential quantization approach a larger number of different QPs can be used for individual macroblocks in a picture. For example an encoder can choose a QP for a macroblock and signal a differential between the QP for the current picture and the QP for the macroblock.

Some encoders use texture based differential quantization to allocate bits based on various texture levels to achieve better perceptual quality. In texture based differential quantization different QPs are chosen to code video based on texture information and in some cases based on other information such as temporal analysis information. An encoder analyzes texture information and possibly other information and applies texture based differential quantization to appropriate areas such as 8 8 blocks or macroblocks in a picture. Texture based differential quantization may focus on areas having particular kinds of content such as smooth areas or areas of perceptually important detail e.g. text . Smooth areas include flat areas of constant or nearly constant color and gradient slope areas areas of color that vary at a constant or nearly constant rates . Smooth areas may be interrupted by small areas of noise film grains or other color variations.

Perceptual sensitivity to quantization artifacts is highly related to the texture level of the video in both the spatial and temporal domain. is a diagram showing an example picture with different texture levels. The example picture includes a gradient slope area a textured area a sharp edge area a flat area and a text area . High texture levels e.g. textured area have details that often result in masking effects that can hide quality degradation and quantization artifacts. However in areas with lower texture levels e.g. smooth areas such as the gradient slope area and the flat area degradation and quantization artifacts are more likely to be visible. Furthermore quantization in areas with text overlays e.g. the text area or sharp edges e.g. the sharp edge area can result in noise or blurring around edges.

A common visual artifact caused by quantization in smooth areas is contouring. Contouring artifacts are typically perceived by human eyes as structured gradient discontinuities in what are otherwise continuous very smooth areas such as sky water etc. Such discontinuities can be very distracting and may lead a human observer to conclude that a whole picture is badly distorted even if other parts of the picture are coded with little visual distortion. is a diagram showing results of quantization in the gradient slope area . The banding effect that is now visible e.g. within macroblock is a contour artifact. shows detail of the macroblock . Quantization of transform coefficients for the top half of the luma samples in macroblock results in uniform values stemming from a DC value of 68. Quantization of transform coefficients for the bottom half of the luma samples in macroblock results in uniform values stemming from the DC value of 70. Thus the quantization of the transform coefficients for the luma samples has created a visible contour artifact between the top half 8 8 blocks and the bottom half 8 8 blocks in macroblock .

Referring to an encoder obtains texture information e.g. information that indicates whether different areas are smooth edge or texture areas for a current picture. The encoder applies texture based differential quantization to the picture. For example smooth areas are coded with smaller QPs than high texture areas. If there are more pictures to encode the encoder takes the next picture and selectively applies texture based differential quantization to the next picture as appropriate. The encoder outputs encoded data for the video picture for example to storage a communication connection or a buffer.

Different texture detection techniques can be used to determine how an area should be treated. For example an encoder can use different texture metrics and or different texture thresholds and can adjust thresholds adaptively to determine how a particular part of a picture should be treated e.g. as smooth textured text or edge . For more information see U.S. patent application Ser. No. 11 400 788 entitled Quantization Adjustment Based on Texture Level filed Apr. 7 2006 the disclosure of which is incorporated herein by reference and U.S. patent application Ser. No. 11 400 739 entitled Gradient Slope Detection for Video Compression filed Apr. 7 2006 the disclosure of which is incorporated herein by reference.

Although encoding tools such as texture based differential quantization can be effective in many scenarios they may not be perfect. For example in texture based differential quantization areas of high texture with text overlays within them may be classified as high texture and quantized at a level that is appropriate for high texture. As a result perceptually important detail in the text overlay may be lost or distorted. For example referring again to detail in the text overlay in the high texture area could be distorted if high texture quantization is applied on or near the text overlay . Other processes meant to provide better video quality also may not be effective enough to remove distracting visual artifacts from the encoded video.

Accordingly described techniques and tools use regions of interest ROIs in video pictures to allow greater flexibility in adjusting encoder settings such as quantization settings and potentially improve quality and or bit rate of compressed video. For example ROIs can be used to allow a different quality of encoding e.g. reduced quantization step size reduced dead zone DZ sizes or some other adjustment in the regions of interest. In this section techniques and tools are described for defining ROIs and for adjusting encoding parameters associated with ROIs.

Techniques and tools described herein can be used by a video encoder or a separate application that modifies encoding settings for compressed video. Region of interest encoding settings can be specified prior to encoding during various stages of encoding or during re encoding of an encoded bitstream.

Techniques and tools described herein can be used by a video encoder or a separate application that modifies quantization settings for compressed video. For example ROIs are defined and quantization is adjusted based on the ROIs e.g. to improve visual quality in the ROIs while raising bit rate or to reduce bit rate while reducing visual quality in the ROIs .

Referring to one or more ROIs are defined in a video picture for which quantization has been or will be performed. The ROIs can be defined by a user e.g. through a graphical user interface that allows the user to draw drag and drop or otherwise define boundaries of the ROIs . Alternatively ROIs can be defined automatically e.g. by the encoder based on texture information or locations of quantization artifacts which can then be provided to a user for review and approval. Referring to for a current picture having a gradient slope area a textured area and a text area one ROI covers part of the gradient slope area and another ROI covers the text area . ROIs also can cover parts of different kinds of texture areas. For example a third ROI covers part of the gradient slope area and part of the textured area .

In one implementation the parts of the picture to be adjusted include blocks or macroblocks partially or completed covered by ROIs and the ROIs need not be block aligned or macroblock aligned. Alternatively ROIs are macroblock aligned or block aligned.

Referring again to the encoder adjusts quantization in the regions of interest. For the example of quantization step sizes can be adjusted up to reduce quality in the ROIs while reducing bit rate or down to improve quality in the ROIs while increasing bit rate . An encoder can adjust the quantization step size to a pre designated level e.g. QP 1 or adjust the quantization step size by a predetermined amount e.g. subtracting two steps from the QP in the ROIs . Or the encoder can adjust the quantization step size based on input from a user e.g. using a quantization step size defined by the user .

In two ROIs overlap. In one implementation a quantization step size for the overlap area is determined by taking the lowest quantization step size or the greatest relative reduction in quantization step size specified by the individual overlapping ROIs e.g. . For example if the ROI in the gradient slope area specifies a QP of 1 and the ROI specifies a QP of 2 the QP for the overlap area is set to be 1. As another example if the ROI in the gradient slope area specifies that the QP of each macroblock should be reduced by 1 and the ROI specifies that the QP of each macroblock corresponding to that ROI should be reduced by 2 the QP for the macroblocks corresponding to the overlap area will be reduced by 2. Alternatively other rules can be used for overlapping ROIs.

Quantization information for the adjusted picture can be represented using differential quantization. For example an encoder can use bi level differential quantization or multi level differential quantization. In addition to adjusting quantization step sizes an encoder can adjust dead zone sizes or some other aspect of quantization for content covered by the ROIs . If there are more pictures to analyze the encoder processes the next picture .

In some cases the encoder signals information indicating differential quantization settings or other settings for use by a decoder during reconstruction of encoded content. In other cases the encoder uses the adjusted settings during encoding only not signaling information about the adjusted settings. For example if an encoder adjusts dead zone size or adjusts how filtering is performed for a ROI relative to other parts of a video picture but does so in a way that does not affect the reconstruction rules followed by a decoder during decoding the encoder does not signal information indicating the adjusted settings. This might happen if dead zone size is incrementally widened or narrowed for content in a ROI or for content outside the ROI relative to the ROI. Or it might happen if content in a ROI is more aggressively filtered or less aggressively filtered than other parts of a picture in pre processing.

This section describes an example approach for using ROIs to adjust quantization in video pictures. Principles and data structures described herein also can be used to make other kinds of adjustments for encoded video. Although specific techniques and data structures are described in this section it should be understood that regions of interest can be defined using other techniques and or data structures.

roi rect makes use of the RECT structure which is shown in pseudocode in . RECT defines the coordinates of the upper left and lower right corners of a rectangle.

qp mode is a mode parameter that takes the values 0 or 1 where 0 represents an absolute QP not relative to a frame QP mode and 1 represents a relative QP mode. The value of qp mode indicates whether an absolute QP or a differential QP is specified by I qp P qp or B qp.

I qp represents a QP for an ROI in an I frame. In this example the legal range of I qp is 31 30 29 . . . 29 30 31 . Referring to the pseudocode when qp mode is 0 and I qp is greater than or equal to 1 the I qp value is the absolute QP used for the ROI. If qp mode is 0 and I qp is less than or equal to 0 the ROI inherits the frame s QP value. When qp mode is 1 I qp gives the differential between the ROI QP and the current frame QP. Thus the sum of frameQP and I qp frameQP I qp is the QP used for the ROI. In this example the sum of frameQP and I qp is constrained to be in the legal QP range of 1 . . . 31 

P qp represents a QP for an ROI in a P frame. In this example the legal range of P qp is 31 30 29 . . . 29 30 31 . When qp mode is 0 and P qp is greater than or equal to 1 the P qp value is the absolute QP used for the ROI. If qp mode is 0 and P qp is less than or equal to 0 the ROI inherits the frame s QP value. When qp mode is 1 P qp gives the differential between the ROI QP and the current frame QP. Thus the sum of frameQP and P qp frameQP P qp is the QP used for the ROI. In this example the sum of frameQP and P qp is constrained to be in the legal QP range of 1 . . . 31 .

B qp represents a QP for an ROI in a B frame. In this example the legal range of B qp is 31 30 29 . . . 29 30 31 . When qp mode is 0 and B qp is greater than or equal to 1 the B qp value is the absolute QP used for the ROI. If qp mode is 0 and B qp is less than or equal to 0 the ROI inherits the frame s QP value. When qp mode is 1 B qp gives the differential between the ROI QP and the current frame QP. Thus the sum of frameQP and B qp frameQP B qp is the QP used for the ROI. In this example the sum of frameQP and B qp is constrained to be in the legal QP range of 1 . . . 31 .

Other legal ranges for I qp P qp B qp and the sums of frameQP and I qp P qp B qp are possible in other implementations that allow greater or lesser variation or different granularity in quantization step sizes for ROIs or on a picture level. In one implementation for example when bi level differential quantization is used the frame QP can take half step values e.g. the legal range of frame QP is 1 1.5 2 2.5 . . . 31 while differential QPs are limited to integer values and when multi level differential quantization is used both frame QPs and differential QPs are limited to integer values.

In general if qp mode is 0 and I qp P qp B qp is non zero and positive the encoder will take the value of I qp P qp B qp to determine the QP to be applied to the ROI e.g. all macroblocks covered or partially covered by the ROI . This allows control of bit usage for different purposes. For example if a default quantization process produces poor visual quality within an ROI using a lower QP can improve perceptual quality. As another example if a default quantization process uses more bits than are necessary for some area of a current picture a higher i.e. coarser QP can be set for an ROI covering the area to save bits. The ROI can specify more aggressive quantization adjustments e.g. by raising or lowering QPs more aggressively in order to achieve even better quality or lower bit usage.

Alternatively qp mode and I qp P qp B qp values can be used to tell to an encoder to assign best quality to the ROI rather than an absolute QP or differential QP. For example particular values of qp mode and I qp P qp B qp can be reserved to signal that a lowest permissible QP for the picture is used for the ROI.

roi option takes one of four values as shown in Table 2 below. roi option indicates types of pictures to which the ROI settings e.g. QP or dead zone settings should be applied. In this example the roi option field specifies which picture types use quantization settings specified by the ROI.

The default option roi option 0 allows an ROI to inherit picture level quantization decisions such that picture level encoder parameters determine whether differential quantization is enabled for a given picture based on its type e.g. I P or B . The non zero roi option values indicate that quantization settings are to be modified by quantization information corresponding to the ROI. Option 1 indicates that ROI quantization is applied only for I pictures. Option 2 indicates that ROI quantization is applied only for I pictures and P pictures. Option 3 indicates that ROI quantization is applied for I pictures P pictures and B pictures. Alternatively ROI quantization can be applied to only P pictures only B pictures B pictures and P pictures or some other subset of pictures. As another alternative the roi option field can be used in other ROI data structures designed for adjusting different encoder decisions e.g. loop filtering overlap filtering etc. to specify which picture types should have the respective encoder decisions adjusted for the ROI. As another alternative information typically represented by roi option is implied or provided in some other way.

ROIs also can be used to adjust quantization dead zones. In one implementation ROIs inherit picture level dead zone behavior by default but dead zone information e.g. dead zone size can be adjusted for ROIs. For example a specific ROI dead zone size can be changed for an ROI.

Referring again to intra deadzone is a dead zone parameter for intra blocks in the ROI. In this example the legal range for intra deadzone is 0 . . . 30 . Other legal ranges are possible in other implementations that for example allow greater variation in dead zone parameters . In one implementation the actual dead zone value for intra blocks is one tenth of the intra deadzone value times the QP value for the intra blocks. For example if intra deadzone is 15 the actual dead zone value used in quantization by the encoder is 1.5 QP. An intra deadzone value of 0 is a special case and means that the frame level dead zone parameter is used for the ROI. Different dead zone sizes can be used for different purposes. For example in one implementation a lower dead zone value of 10 for intra blocks translating to a dead zone size of 1.0 QP can provide improved visual quality if the regular dead zone size used in quantization is 1.2 QP. A larger value of 30 translating to a dead zone size of 3.0 QP can save some bits at a cost of increased distortion if the regular dead zone size used in quantization is 2.4 QP such an adjustment may be appropriate in picture areas where distortion is less visible e.g. highly textured areas .

inter deadzone is a dead zone parameter for inter blocks in the ROI. In this example the legal range for inter deadzone is 0 . . . 70 . Other legal ranges are possible in other implementations that for example allow greater variation in dead zone parameters . In one implementation the actual dead zone value for inter blocks is one tenth of the inter deadzone value times the QP value for the intra blocks. For example if inter deadzone is 15 the actual dead zone value used by the encoder during quantization is 1.5 QP. An inter deadzone value of 0 is a special case and means that the frame level dead zone parameter is used for the ROI.

Multiple ROIs can be specified for individual pictures. In many cases using multiple regions of interest for adjustment of quantization within a picture will result in multiple QPs used in the picture if the picture does not already use more than one QP.

In one implementation that allows multiple ROIs for individual pictures ROIs are allowed to overlap and the overlap areas are treated differently than the non overlapping areas. Blocks covered by more than one overlapping ROI use the lowest QP and smallest dead zone specified by the overlapping ROIs. Alternatively overlapping ROI areas are treated in some other way such as by averaging the settings specified by the overlapping ROIs.

When an ROI is used to change a quantization setting if the quality of the region is different than bordering areas of the picture the boundary between the ROI and the rest of the picture may be visible. For example if an ROI specifies a QP of 2 and the rest of the picture is quantized with a QP of 6 a visible edge may be present at the borders of the ROI. The adverse visual effects of such edges can be reduced by using intermediate QPs at border areas to blend the lower QP ROI and the higher QP parts of the picture or to blend the higher QP ROI and the lower QP parts of the picture.

Some encoders apply differential QPs on a block by block basis. Described techniques and tools can be used to perform QP adjustments dead zone adjustments and or other adjustments for blocks that are covered by an ROI.

Other kinds of quantization adjustment can be specified by an ROI. For example quantization adjustments based on texture level and quantization adjustments to preserve non zero AC coefficients to help reduce quantization artifacts can be performed for ROIs.

In some embodiments certain types of adjusted ROI encoder settings do not have corresponding information signaled in an encoded content bit stream. For example adjustments to dead zone size wider narrower other incremental adjustments to quantization bin thresholds adjustments to pre encoder filtering more aggressive less aggressive or other changes that affect encoding but not reconstruction performed by an encoder or decoder need not have corresponding information signaled. Other types of adjusted ROI encoder settings such as adjusted quantization step sizes typically do have corresponding information signaled in an encoded content bit stream.

In general lower signaling overhead for quantization information is desirable to reduce bit rate for encoded video. In some encoders signaling of multiple QPs within a current picture is tied to the picture level QP sometimes referred to as a frame QP in a differential quantization scheme. Choosing a QP that is appropriate for a given picture can help reduce the number of bits needed for signaling QPs for macroblocks in the picture when differential quantization is used.

In an example encoder the bitstream element MQDIFF is used to signal a one bit selector at macroblock level for bi level quantization. For multi level quantization MQDIFF is a three bit element taking a value from 0 to 7 . If MQDIFF is not 7 i.e. if the macroblock QP is less than or equal to the frame QP 6 MQDIFF indicates a differential between the picture QP and the macroblock QP. If MQDIFF is 7 an absolute QP is signaled by the five bit element ABSMQ for a macroblock. Thus for QP differences greater than 6 in multi level quantization eight bits are used to signal the QP for the macroblock.

For this example encoder a frame QP can be chosen such that the amount of bits needed to signal QP information for macroblocks is minimized. The signaling overhead for a given picture having a given frame QP FQP in one implementation can be found according to the following equation 

The sums of Histo MQP are fixed given that Histo MQP is fixed. To minimize SignalBits FQP FQP can be found such that

All possible frame QPs do not need be analyzed to select a frame QP. For example rather than calculating SignalBits for all possible frame QPs a sliding window can be used to calculate the biggest moving average of the sum. For example using a sliding window of 7 the first frame QP in the sliding window having the biggest moving average can be chosen as the frame QP.

Frame QPs can be chosen for other encoders such that signaling overhead is minimized. For example the calculations can be adjusted depending on signaling overhead in other encoders for particular macroblock QPs.

Other encoder settings can be adjusted with ROIs in addition to or instead of the quantization adjustments described above. For example noise filtering loop filtering overlap filtering and other settings can be adjusted using ROIs. If a filter setting is effective for most of a picture but not for particular areas ROIs can be defined to cover the particular areas to adjust the filter settings. As another example ROIs can be used to remap sample values e.g. luma values and chroma values in particular areas of a picture. When used for correct reconstruction such adjusted ROI encoding settings are signaled.

Having described and illustrated the principles of our invention with reference to various described embodiments it will be recognized that the described embodiments can be modified in arrangement and detail without departing from such principles. It should be understood that the programs processes or methods described herein are not related or limited to any particular type of computing environment unless indicated otherwise. Various types of general purpose or specialized computing environments may be used with or perform operations in accordance with the teachings described herein. Elements of the described embodiments shown in software may be implemented in hardware and vice versa.

In view of the many possible embodiments to which the principles of our invention may be applied we claim as our invention all such embodiments as may come within the scope and spirit of the following claims and equivalents thereto.

