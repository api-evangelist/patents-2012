---

title: Processing device having session component with integrated support for message queuing protocol
abstract: Session information is received in a processing device and processed to generate a message in a message queuing protocol format. The resulting message is provided to a message queuing protocol server. The session information may comprise at least a portion of a session initiation protocol (SIP) message, and may be received in a SIP component, which may comprise a SIP endpoint. In processing the session information to generate the message in the message queuing protocol format, at least a portion of the session information may be incorporated into an advanced message queuing protocol (AMQP) message that is transmitted to an AMQP server. The SIP component may comprise a user agent coupled to an AMQP message listener and an AMQP message sender. The SIP component may also receive an AMQP message from the AMQP server, process the message to generate session information, and provide the session information to a user device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09112870&OS=09112870&RS=09112870
owner: EMC Corporation
number: 09112870
owner_city: Hopkinton
owner_country: US
publication_date: 20120328
---
Illustrative embodiments of the invention relate generally to messaging between elements of information technology infrastructure.

Information technology infrastructure elements such as computers and mobile telephones may be configured to establish communication sessions with one another in accordance with the Session Initiation Protocol SIP described in Internet Engineering Task Force IETF Request for Comments RFC 3261 SIP Session Initiation Protocol June 2002 which is incorporated by reference herein. SIP is an application layer signaling protocol used for establishing communication sessions in an Internet Protocol IP network. It can be used to create modify and terminate sessions which may include for example IP telephone calls or collaborative multimedia conferences. These sessions make possible a wide array of innovative services such as voice enriched e commerce web page click to dial instant messaging with buddy lists and IP PBX telephony services.

A session may be considered an exchange of data between a group of two or more participants also referred to as users. The users are associated with endpoints that are referred to as user agents. SIP allows user agents to discover one another and to agree on a characterization of a session they would like to share. Sessions are created using SIP invite messages that carry session descriptions that allow the users to agree on a set of compatible media types. SIP also enables the creation of an infrastructure of network hosts called proxy servers to which user agents can send invite messages and other other requests. For example SIP provides a registration function that allows users to upload their current locations for use by proxy servers. SIP works independently of underlying transport protocols and without dependency on the type of session that is being established.

One drawback of SIP and other similar messaging protocols is that internal implementations of proxy servers within infrastructure products may utilize proprietary queuing mechanisms. Thus infrastructure product vendors may provide implementations of SIP in a variety of different forms. This can create difficulties for product customers that attempt to integrate their own third party applications with one or more of the vendor specific SIP implementations.

Accordingly integration of products that include vendor specific SIP implementations is particularly challenging under conventional practice and can lead to excessive product integration costs. The situation is further complicated by the fact that an increasing number of enterprises are migrating portions of their information technology infrastructure to cloud service providers.

Illustrative embodiments of the invention provide techniques for configuring a SIP component or other type of session component of a processing device with integrated support for messaging in a designated message queuing protocol format such as an advanced message queuing protocol AMQP format. An arrangement of this type allows a wide variety of infrastructure products to be seamlessly integrated with any third party vendor applications that use AMQP as middleware.

In one embodiment session information is received in a processing device and processed to generate a message in a message queuing protocol format. The resulting message is provided to a message queuing protocol server. The session information may comprise at least a portion of a SIP message and may be received in a SIP component which may illustratively comprise a SIP endpoint.

By way of example in processing the session information to generate the message in the message queuing protocol format at least a portion of the session information may be incorporated into an AMQP message that is transmitted to an AMQP server. The SIP component may comprise a user agent coupled to an AMQP message listener and an AMQP message sender. The SIP component may also receive an AMQP message from the AMQP server process the received message to generate session information and provide the session information to a user device.

One or more of the illustrative embodiments overcome the above noted drawbacks of conventional practice. For example providing a SIP component with integrated support for a message queuing protocol such as AMQP facilitates integration of products that include vendor specific SIP implementations thereby significantly reducing product integration costs. The disclosed techniques are suitable for implementation in a wide variety of different types of information technology infrastructure including virtual infrastructure of a cloud service provider.

Illustrative embodiments of the present invention will be described herein with reference to exemplary information processing systems and associated computers servers storage devices and other processing devices. It is to be appreciated however that the invention is not restricted to use with the particular illustrative system and device configurations shown. Accordingly the term information processing system as used herein is intended to be broadly construed so as to encompass for example processing systems comprising private or public cloud computing or storage systems as well as other types of processing systems comprising physical or virtual processing resources in any combination.

The SIP component is generally configured to receive session information from one or more of the user devices to process the received session information to generate a message in a designated message queuing protocol format which is illustratively an AMQP format and to provide the message to the AMQP server . The session information comprises at least a portion of a SIP message as defined in the above cited RFC 3261. The SIP component is further configured to receive a message from the AMQP server to process the received message to generate session information and to provide the session information to one or more of the user devices .

The SIP component may illustratively comprise a SIP endpoint of the type disclosed in RFC 3261. Although shown as separate from each of the user devices in the embodiment in other embodiments the SIP component may be at least partially integrated within a given user device.

The session information in the case of SIP messages may illustratively comprise presence information instant messaging text information and other types of session information. However the term session information as used herein is intended to be broadly construed and is not limited only to SIP information.

The AMQP server operates in accordance with the AMQP Specifications Version 1.0 including one or more of Broker Behaviour Definition Addressing Specification Broker Management JMS Mapping WCF Mapping Compatibility and Distributed Transactions specifications which are incorporated by reference herein. As indicated previously other embodiments may utilize message queuing protocols other than AMQP. AMQP is a messaging protocol in which entities referred to as producers generate messages and entities referred to as consumers receive and process the messages.

The system is configured to integrate AMQP and SIP functionality in a manner that allows SIP component to publish and consume AMQP messages while also exchanging associated session information with user devices .

The SIP user agent of SIP component comprises a SIP stack adapted for processing communications with the user devices and an application programming interface API component through which the SIP user agent communicates with a client library component . The API component in the present embodiment is more particularly implemented as an API and callback registration component configured to interface with an AMQP C client library although other types of API and client library components and may be used in other embodiments. The client library component implements an AMQP message listener and an AMQP message sender both of which are coupled to the SIP user agent via its API component . The AMQP listener and sender are adapted for communication with the AMQP server .

The AMQP server illustratively comprises a plurality of exchanges coupled to respective sets of queues A and B.

Session information is exchanged between the SIP user agent and the user devices as indicated in the figure. For example the SIP component may send endpoint requests to the user devices and receive endpoint responses from those devices. Such requests and responses may illustratively comprise queries or subscription requests for presence information sent to the endpoint devices and corresponding presence updates received in response from the user devices.

The SIP component incorporates information received in one or more incoming AMQP messages from the AMQP server via message listener into requests or other outgoing session information that is sent to the user devices via the SIP user agent . Also the SIP component incorporates incoming session information from the user devices into one or more AMQP messages that are transmitted via message sender to the AMQP server . The incoming AMQP messages provided by the AMQP server to the SIP component via message listener may be messages from AMQP client and the outgoing AMQP messages sent by the AMQP server to the AMQP client may be messages that are provided to the AMQP server by the message sender of the SIP component . AMQP messages received in the AMQP server from the AMQP client or from the SIP component are stored in selected ones of the queues under one or more of the exchanges .

An exemplary AMQP message format in the system is indicated by reference numeral . In this example a given incoming AMQP message directed from the AMQP server to the SIP component includes a header and a body with the header more particularly identifying as a channel address the address of a particular SIP endpoint in this case the SIP component .

The SIP component may be implemented using at least one processing device. A given processing device utilized to implement at least a portion of SIP component may be implemented in information technology IT infrastructure of a service provider or other enterprise. As a more particular example the processing device may be implemented at least in part within virtual infrastructure of a cloud service provider. It may comprise a computer server mobile telephone or other type of processing device. Examples of IT infrastructure suitable for implementing the SIP component and other portions of the information processing system will be described below in conjunction with . Such IT infrastructure may comprise one or more processing platforms in which processing devices are configured to communicate with one another over a network.

Each such processing device generally comprises at least one processor and an associated memory and implements one or more functional modules for controlling certain features of the information processing system . Multiple system elements may be implemented by a single processing device in a given embodiment. For example one or more of the AMQP server AMQP client and user devices may also be implemented at least in part on the same processing device used to implement SIP component . Alternatively separate processing devices may be used to implement each of these system elements. The term information technology infrastructure as used herein is intended to be broadly construed so as to encompass these and numerous other arrangements of one or more processing devices. AMQP client and user devices may also be implemented at least in part on the same processing device used to implement SIP component . Alternatively separate processing devices may be used to implement each of these system elements. The term information technology infrastructure as used herein is intended to be broadly construed so as encompass these and numerous other arrangements of one or more processing devices.

It should be noted that the particular set of elements shown in for providing a SIP component with integrated support for AMQP is presented by way of example and in other embodiments additional or alternative elements may be used. Thus another embodiment may include additional instances of one or more of elements and . Also one or more of these or other system elements may be implemented at least in part in the form of software. Such software is stored and executed utilizing respective memory and processor elements of at least one processing device.

In addition numerous other arrangements of computers servers storage devices or other components are possible in the information processing system . Such components can communicate with other elements of the information processing system over any type of network such as a wide area network WAN a local area network LAN a satellite network a telephone or cable network or various portions or combinations of these and other types of networks.

Moreover the functionalities associated with separate elements in the embodiment may be combined into a lesser number of elements each of which performs multiple functions. Thus at least a subset of the elements may be collectively implemented on a common processing platform or each such element may be implemented on a separate processing platform comprising one or more servers computers or other processing devices.

The operation of the information processing system will now be described in greater detail with reference to the flow diagrams of which illustrate the processing of outgoing and incoming AMQP messages in the system .

Referring initially to the process as shown includes steps and which are assumed to be performed by the SIP component although in other embodiments one or more such steps may be implemented at least in part by other system elements.

In step incoming session information is received from at least one of the user devices in the SIP user agent of the SIP component . As noted above such session information may comprise for example presence information instant messaging text information or other types of session information conveyed to the SIP component in one or more SIP messages received from the user devices .

In step the received session information is processed in the SIP component in order to generate an outgoing AMQP message. This processing involves interaction between the SIP user agent and the client library component via the API component .

In step the outgoing AMQP message is provided to the AMQP server via the AMQP message sender implemented using the client library component of the SIP component . The AMQP server may in turn deliver the AMQP message to the AMQP client .

Referring now to the process as shown includes steps and which are also assumed to be performed by the SIP component . Again in other embodiments one or more such steps may be implemented at least in part by other system elements.

In step an incoming AMQP message is received in the SIP component from the AMQP server via the AMQP message listener . The AMQP server may have received the AMQP message from the AMQP client .

In step the received AMQP message is processed to generate outgoing session information. This processing involves interaction between the client library component and the SIP user agent via the API component .

In step the outgoing session information is provided to one or more of the user devices . For example one or more SIP messages may be generated by the SIP user agent that incorporate the outgoing session information and delivered by the SIP user agent to one or more of the user devices via the SIP stack .

The particular processing operations and other system functionality described in conjunction with the flow diagrams of are presented by way of illustrative example only and should not be construed as limiting the scope of the invention in any way. Alternative embodiments can use other types of processing operations for processing incoming session information to generate outgoing AMQP messages and for processing incoming AMQP messages to generate outgoing session information. For example the ordering of the process steps may be varied in other embodiments or certain steps may be performed concurrently with one another rather than serially. Also steps and may be performed repeatedly for each of a series of incoming SIP messages and steps and may be performed repeatedly for each of a series of incoming AMQP messages. Additional or alternative process steps may be used in other embodiments.

It is also to be appreciated that message transformation functionality such as that described in conjunction with the flow diagrams of can be implemented at least in part in the form of one or more software programs stored in memory and executed by a processor of a processing device such as a computer or server. A memory or other storage device having such program code embodied therein is an example of what is more generally referred to herein as a computer program product. 

The embodiments described in conjunction with can provide a number of significant advantages relative to conventional practice. For example such embodiments provide a SIP component in which AMQP and SIP functionality are integrated so as to allow the SIP component to process AMQP messages that incorporate session information associated with user devices. Providing a SIP component with integrated support for a message queuing protocol such as AMQP facilitates integration of products that include vendor specific SIP implementations. As a result such products can be seamlessly integrated with any third party vendor applications that use AQMP as middleware significantly reducing product integration costs.

Referring now to portions of the IT infrastructure of information processing system in this embodiment comprise cloud infrastructure . The cloud infrastructure comprises virtual machines VMs . . . M implemented using a hypervisor . The hypervisor runs on physical infrastructure . The cloud infrastructure further comprises sets of applications . . . M running on respective ones of the virtual machines . . . M under the control of the hypervisor . The cloud infrastructure may be viewed as providing an example of what is more generally referred to herein as virtual infrastructure. The cloud infrastructure may encompass the entire system or only portions of that system such as the SIP component . Thus for example a given processing device utilized to implement at least a portion of SIP component may comprise one or more of the virtual machines .

Although only a single hypervisor is shown in the embodiment of the system may of course include multiple hypervisors each providing a set of virtual machines using at least one underlying physical machine.

An example of a commercially available hypervisor platform that may be used to implement hypervisor and possibly other portions of the IT infrastructure of information processing system in one or more embodiments of the invention is the VMware vSphere which may have an associated virtual infrastructure management system such as the VMware vCenter . The underlying physical machines may comprise one or more distributed processing platforms that include storage products such as VNX and Symmetrix VMAX both commercially available from EMC Corporation of Hopkinton Mass. A variety of other storage products may be utilized to implement at least a portion of the IT infrastructure of system .

As indicated previously the system may be implemented using one or more processing platforms. One or more of the processing modules or other components of system may therefore each run on a computer server storage device or other processing platform element. A given such element may be viewed as an example of what is more generally referred to herein as a processing device. The cloud infrastructure shown in may represent at least a portion of one processing platform. Another example of such a processing platform is processing platform shown in .

The processing platform in this embodiment comprises a portion of the system and includes a plurality of processing devices denoted . . . K which communicate with one another over a network . The network may comprise any type of network such as a WAN a LAN a satellite network a telephone or cable network or various portions or combinations of these and other types of networks.

The processing device in the processing platform comprises a processor coupled to a memory . The processor may comprise a microprocessor a microcontroller an application specific integrated circuit ASIC a field programmable gate array FPGA or other type of processing circuitry as well as portions or combinations of such circuitry elements and the memory which may be viewed as an example of a computer program product having executable computer program code embodied therein may comprise random access memory RAM read only memory ROM or other types of memory in any combination.

Also included in the processing device is network interface circuitry which is used to interface the processing device with the network and other system components and may comprise conventional transceivers.

The other processing devices of the processing platform are assumed to be configured in a manner similar to that shown for processing device in the figure.

Again the particular processing platform shown in the figure is presented by way of example only and system may include additional or alternative processing platforms as well as numerous distinct processing platforms in any combination with each such platform comprising one or more computers servers storage devices or other processing devices.

Multiple elements of information processing system may be collectively implemented on a common processing platform of the type shown in or or each such element may be implemented on a separate processing platform.

In one possible use case of the information processing system of the AMQP client in an illustrative embodiment may be associated with a service window optimized system alert SWOSA engine of the type described in U.S. patent application Ser. No. 13 170 345 filed Jun. 28 2011 which is commonly assigned herewith and incorporated by reference herein.

A SWOSA engine in one implementation comprises an automating alerting framework which can provide highly accurate and efficient alerting for a wide variety of different monitored systems including storage systems and other types of systems that are implemented using virtual infrastructure. It may be implemented using a plurality of modules including for example a state monitor a system configuration and history module an alert generator and an alert router. In such an arrangement the state monitor is configured to send status data of the monitored system to the alert generator. The system configuration and history module provides information to the alert generator specifying an alert generation policy established for the monitored system. The alert generator is configured to process the status data from the state monitor in accordance with the alert generation policy specified by the system configuration and history module to generate at least one alert. The alert router is configured to determine optimal delivery characteristics for the generated alert and to deliver the alert in accordance with the optimal delivery characteristics.

The AMQP client may be implemented in or coupled to a SWOSA engine of the type described above so as to allow the SWOSA engine to communicate efficiently with user devices using SIP. Other SWOSA configurations may be used in other embodiments. Also the use of a SWOSA engine is just one example of a use case of the system and a variety of other use cases will be described below in conjunction with and .

Another possible use case is shown in in which information processing system includes a call center mining and queue intelligence services component as well as SIP component and AMQP server . In this embodiment the component performs call center data mining at least in part by monitoring communications between SIP endpoints via AMQP message exchanges. One or more of the SIP endpoints may each be associated with respective call center queues each corresponding to a call center service agent as shown. SIP calls and other communications from user devices are distributed to the call center queues for processing based on application input from the call center mining and queue intelligence services component .

Yet another use case is shown in in which information processing system includes a unified communication UC intelligence component as well as SIP component and AMQP server . The UC intelligence component performs operations such as recording hot word spotting etc. These operations are performed on SIP communications that illustratively include instant messaging communications and SIP calls.

In the use cases of and the operation of SIP component and AMQP server is generally as previously described in conjunction with . The above noted use cases are only examples and the disclosed techniques can be applied in a wide variety of other information processing applications.

It should again be emphasized that the above described embodiments of the invention are presented for purposes of illustration only. Many variations may be made in the particular arrangements shown. For example although described in the context of particular system and device configurations the techniques are applicable to a wide variety of other types of information processing systems IT infrastructure and processing device configurations message queuing protocols and messaging formats. The particular process steps and component interactions used to provide a session component with integrated support for a designated message queuing protocol may be varied in alternative embodiments. In addition any simplifying assumptions made above in the course of describing the illustrative embodiments should also be viewed as exemplary rather than as requirements or limitations of the invention. Numerous other alternative embodiments within the scope of the appended claims will be readily apparent to those skilled in the art.

