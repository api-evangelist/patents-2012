---

title: Network settings browser synchronization
abstract: Computer-implemented methods for automatically configuring a device with network settings retrieved using a web browser are provided. In one aspect, a method includes receiving a user identification associated with a user web browser profile from a web browser on a device, and retrieving network setting information associated with the user web browser profile. The method also includes providing the retrieved network setting information to the web browser of the device. The retrieved network setting information is configured to be used by the web browser to configure the device to connect to at least one network. Systems and machine-readable media are also provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08799989&OS=08799989&RS=08799989
owner: Google Inc.
number: 08799989
owner_city: Mountain View
owner_country: US
publication_date: 20120213
---
The present application claims the benefit of priority under 35 U.S.C. 119 from U.S. Provisional Patent Application Ser. No. 61 576 942 entitled Network Settings Browser Synchronization filed on Dec. 16 2011 the disclosure of which is hereby incorporated by reference in its entirety for all purposes.

The present disclosure generally relates to the transmission of data over a network and more particularly to the use of a computing device to communicate over a network.

Users that enter and save network information for various networks such as network names and passwords for wireless networks on one device must typically repeat the entry of the same network information on another device in order to have the other device connect to the same networks in the same way. This is difficult for users to do because it requires the users to remember all of the network information that they have previously added usually over the course of several months.

According to one embodiment of the present disclosure a computer implemented method for automatically configuring a device with network settings retrieved using a web browser is provided. The method includes receiving a user identification associated with a user web browser profile and retrieving network setting information associated with the user web browser profile. The method also includes providing the retrieved network setting information to a web browser of a device. The retrieved network setting information is configured to be used by the web browser to configure the device to connect to at least one network.

According to another embodiment of the present disclosure a system for automatically configuring a device with network settings retrieved using a web browser is provided. The system includes a memory that includes network setting information associated with a user web browser profile and a processor. The processor is configured to receive a user identification associated with the user web browser profile and retrieve the network setting information associated with the user web browser profile. The processor is also configured to provide the retrieved network setting information to a web browser of a device. The retrieved network setting information is configured to be used by the web browser to configure the device to connect to at least one network. The network setting information includes wireless network access point settings virtual private network settings and proxy settings.

According to a further embodiment of the present disclosure a machine readable storage medium including machine readable instructions for causing a processor to execute a method for automatically configuring a device with network settings retrieved using a web browser is provided. The method includes receiving a user identification associated with a user web browser profile and retrieving network setting information associated with the user web browser profile and designated as unsecured or secured. The method also includes providing the retrieved network setting information designated as unsecured or secured to a web browser on a device and restricting access of the web browser to network settings designated as private. The retrieved network setting information is configured to be used by the web browser to configure the device to connect to at least one network.

It is understood that other configurations of the subject technology will become readily apparent to those skilled in the art from the following detailed description wherein various configurations of the subject technology are shown and described by way of illustration. As will be realized the subject technology is capable of other and different configurations and its several details are capable of modification in various other respects all without departing from the scope of the subject technology. Accordingly the drawings and detailed description are to be regarded as illustrative in nature and not as restrictive.

In the following detailed description numerous specific details are set forth to provide a full understanding of the present disclosure. It will be apparent however to one ordinarily skilled in the art that the embodiments of the present disclosure may be practiced without some of these specific details. In other instances well known structures and techniques have not been shown in detail so as not to obscure the disclosure.

The disclosed web browser when running on a first device downloads a user s network settings e.g. for wireless networks virtual private networks or proxy connections from a server and applies those network settings to the first device. The user s network settings on the server are based on the user s network settings from an associated web browser on a second device. The web browsers on the first and second clients are associated using a web browser profile of the user. Network settings for the web browsers are stored on the server based on the web browser profile.

By way of example if a user signs in with an account e.g. a web browser profile to a web browser on the user s laptop and sets up network settings for a wireless network corporate then when the user signs in with the same account to the same type of web browser on the user s desktop the web browser on the desktop will automatically download the network settings for the wireless network corporate and connect to the wireless network corporate if it is available. A network s settings can be automatically shared between device browsers manually shared between device browsers or not shared between device browsers based on security levels associated with each network setting.

Although many examples provided herein describe a user s information e.g. network setting information and web browser profiles being stored in memory the user can at any time delete the user information from memory and or opt out of having the user information stored in memory. Additionally the user can at any time adjust appropriate privacy settings to selectively limit the types of user information stored in memory or select the memory in which the user information is stored e.g. locally on the user s device as opposed to remotely on a server . In many examples the user information does not include and or share the specific identification of the user e.g. the user s name unless otherwise specifically provided or directed by the user.

The servers are configured to host network setting information and data for web browser profiles of users. For purposes of load balancing one or multiple servers can each separately host the network setting information and the data for profiles. Similarly for purposes of load balancing one or multiple servers can share the hosting of the network setting information and the profiles.

The profiles on the server include for each profile authentication information e.g. an associated user identification such as a username and password . The network setting information includes information on configuring a client to connect to a data network. Network setting information can be for example a network address network password and network authentication protocol. Each profile is associated with corresponding network setting information if such network setting information is available for the profile. A web browser on a client that is configured to authenticate a user profile with a server is also configured to obtain network setting information associated with that authenticated user profile in order to configure the client to connect to a network.

The disclosed architecture allows a web browser of one of the clients a first client to automatically upload network setting information the first time a user provides a web browser profile associated with the user to the web browser. The network setting information can be for example for connecting to wireless networks connecting to virtual private networks VPN or configuring proxy settings. When the web browser profile is first provided to the web browser and first authenticated by a corresponding server the server creates a stores a reference for the web browser profile of the user on the server and requests a copy of the network setting information from the web browser of the first client . The web browser on the first client then provides the network setting information to the server which stores the network setting information in association with the web browser profile of the user.

If the user later provides the same web browser profile to a second similarly configured web browser on a second client then the second web browser on the second client downloads the network setting information of the user from the server and configures the second client to automatically connect to the same networks as the first client . As a result the user does not need to re enter the same network setting information on the second client as the first client but the second client will still automatically connect to the same networks as the first client. In certain aspects the second client can be restricted from automatically downloading certain network information and or connecting to certain networks based on restriction settings set by the user or by the web browser on the first client .

The servers can be any device having an appropriate processor memory and communications capability for hosting the network setting information and the profiles. The clients to which the servers are connected over the network can be for example desktop computers mobile computers tablet computers mobile devices e.g. a smartphone or PDA set top boxes e.g. for a television video game consoles or any other devices having appropriate processor memory and communications capabilities for running a web browser. The network can include for example any one or more of a personal area network PAN a local area network LAN a campus area network CAN a metropolitan area network MAN a wide area network WAN a broadband network BBN the Internet and the like. Further the network can include but is not limited to any one or more of the following network topologies including a bus network a star network a ring network a mesh network a star bus network tree or hierarchical network and the like.

The server includes a processor a communications module and a memory . The memory includes network setting information and profiles . Although the memory of the server is illustrated as including the network setting information and the profiles the network setting information and the profiles can be hosted on separate servers as discussed above. The profiles include information on user web browser profiles such as user names e.g. email addresses and passwords. The profiles also include for each user web browser profile an association between the profile and network setting information if such information exists for the profile.

The network setting information for each profile can include network settings designated as at least one of unsecured secured or private. Exemplary unsecured network settings include wireless network access point names e.g. for WiFi networks . Unsecured network settings can be stored in the network setting information on a server and downloaded to a client from the server . When downloaded to the client in response to a user providing an authenticated log in for a user web browser profile unsecured network settings can be stored in an area in memory e.g. a folder associated with the user. The unsecured network settings can be publicly accessible to other authenticated users of the client .

Exemplary secured network settings such as network settings tied to a specific network include wireless network access point names wireless network access point passwords wireless network access point security protocols wireless network access point Media Access Control MAC filtering information and proxy settings e.g. a network address and or port number . Settings for each secure network can be individually selected by a user for storage in the network setting information on a server and thereby selected for downloading to a client of the user from the server if available. In certain aspects when secure network settings are downloaded to the client in response to the user providing an authenticated log in for a user web browser profile secured network settings can be stored in an area in memory e.g. a folder associated with the user. The secured network settings can be selectively configured by the user to be publicly accessible to other authenticated users of the client . Downloaded wireless network access point passwords can be restricted from display on the client .

Exemplary private network settings include virtual private network VPN network settings tied to a specific enterprise e.g. business or government . Exemplary VPN network settings include passwords biometrics two factor authentication cryptographic information and digital certificates. In certain aspects private network settings initially configured by a user on a client are not configured for synchronization e.g. available for upload to storage in the network setting information on a server and thereby private network settings are not shared between web browsers on different clients associated with the same user web browser profile.

In certain aspects the network setting information e.g. for network settings designated as unsecured or secured on the server that is associated with a profile from the profiles is updated regularly. For example the network setting information can be updated by a communication from a web browser on a client associated with the profile when the web browser updates its own network setting information e.g. based on information received from a user . The web browser being associated with the profile can include the web browser being signed in to by a user name and password associated with the profile in order to synchronize the network setting information .

The processor of the server is configured to execute instructions such as instructions physically coded into the processor instructions received from software in memory or a combination of both. For example the processor of the server executes instructions to receive a user identification associated with a user web browser profile e.g. from the web browser on the client and retrieve network setting information associated with the user web browser profile e.g. as identified from the profiles stored in memory . The processor is configured to provide the retrieved network setting information to the web browser e.g. on client associated with the user web browser profile. Providing the retrieved network setting information to the web browser can include providing network settings designated as unsecured or secured and restricting access of the web browser to network settings designated as private as discussed above.

The retrieved network setting information is configured to be provided by the web browser of the client to a network interface of the client . The network interface on the client can be for example an application programming interface API specific to an operating system running on the client . By providing the retrieved network setting information to the network interface the web browser on the client configures the client with the retrieved network setting information. As a result the client can automatically connect to an available network based on the configuration.

An example will now be described using the exemplary process of and a client that is a laptop computer. The process begins by proceeding from step when a user loads the web browser on the laptop computer as illustrated in an exemplary screenshot of the web browser . The web browser displays a message e.g. on display device that a network connection is not detected for the web browser . In step the user provides an email address and password associated with a previously stored user web browser profile to the web browser . illustrates an exemplary screenshot of the user interface of the web browser to which the user provides the email address and password. The login is provided by the web browser to the server over the network . In step the server authenticates the email address and password for the profile from the web browser .

In step the server retrieves network setting information associated with the profile including a name corporate for a wireless network access point and an associated password for the corporate network and in step transmits the retrieved network setting information to the web browser of the laptop computer . In step the web browser configures the laptop s operating system network interface with the network setting information including configuring the laptop computer to automatically connect to the corporate network when available with the appropriate password. The corporate network is available to the laptop computer so the laptop computer automatically connects to the corporate network thereby providing a network connection for the web browser . As illustrated in an exemplary screenshot of the web browser after the laptop computer has connected to the corporate network the web browser can load web pages from the Internet. The process then ends in step .

Computer system e.g. client and server includes a bus or other communication mechanism for communicating information and a processor e.g. processor and coupled with bus for processing information. By way of example the computer system may be implemented with one or more processors . Processor may be a general purpose microprocessor a microcontroller a Digital Signal Processor DSP an Application Specific Integrated Circuit ASIC a Field Programmable Gate Array FPGA a Programmable Logic Device PLD a controller a state machine gated logic discrete hardware components or any other suitable entity that can perform calculations or other manipulations of information.

Computer system can include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them stored in an included memory e.g. memory and such as a Random Access Memory RAM a flash memory a Read Only Memory ROM a Programmable Read Only Memory PROM an Erasable PROM EPROM registers a hard disk a removable disk a CD ROM a DVD or any other suitable storage device coupled to bus for storing information and instructions to be executed by processor . The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

The instructions may be stored in the memory and implemented in one or more computer program products i.e. one or more modules of computer program instructions encoded on a computer readable medium for execution by or to control the operation of the computer system and according to any method well known to those of skill in the art including but not limited to computer languages such as data oriented languages e.g. SQL dBase system languages e.g. C Objective C C Assembly architectural languages e.g. Java .NET and application languages e.g. PHP Ruby Perl Python . Instructions may also be implemented in computer languages such as array languages aspect oriented languages assembly languages authoring languages command line interface languages compiled languages concurrent languages curly bracket languages dataflow languages data structured languages declarative languages esoteric languages extension languages fourth generation languages functional languages interactive mode languages interpreted languages iterative languages list based languages little languages logic based languages machine languages macro languages metaprogramming languages multiparadigm languages numerical analysis non English based languages object oriented class based languages object oriented prototype based languages off side rule languages procedural languages reflective languages rule based languages scripting languages stack based languages synchronous languages syntax handling languages visual languages wirth languages embeddable languages and xml based languages. Memory may also be used for storing temporary variable or other intermediate information during execution of instructions to be executed by processor .

A computer program as discussed herein does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules subprograms or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network. The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.

Computer system further includes a data storage device such as a magnetic disk or optical disk coupled to bus for storing information and instructions. Computer system may be coupled via input output module to various devices. The input output module can be any input output module. Exemplary input output modules include data ports such as USB ports. The input output module is configured to connect to a communications module . Exemplary communications modules e.g. communications module and include networking interface cards such as Ethernet cards and modems. In certain aspects the input output module is configured to connect to a plurality of devices such as an input device e.g. input device and or an output device e.g. display device . Exemplary input devices include a keyboard and a pointing device e.g. a mouse or a trackball by which a user can provide input to the computer system . Other kinds of input devices can be used to provide for interaction with a user as well such as a tactile input device visual input device audio input device or brain computer interface device. For example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech tactile or brain wave input. Exemplary output devices include display devices such as a LED light emitting diode CRT cathode ray tube or LCD liquid crystal display screen for displaying information to the user.

According to one aspect of the present disclosure the client and server can be implemented using a computer system in response to processor executing one or more sequences of one or more instructions contained in memory . Such instructions may be read into memory from another machine readable medium such as data storage device . Execution of the sequences of instructions contained in main memory causes processor to perform the process steps described herein. One or more processors in a multi processing arrangement may also be employed to execute the sequences of instructions contained in memory . In alternative aspects hard wired circuitry may be used in place of or in combination with software instructions to implement various aspects of the present disclosure. Thus aspects of the present disclosure are not limited to any specific combination of hardware circuitry and software.

Various aspects of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. The communication network e.g. network can include for example any one or more of a personal area network PAN a local area network LAN a campus area network CAN a metropolitan area network MAN a wide area network WAN a broadband network BBN the Internet and the like. Further the communication network can include but is not limited to for example any one or more of the following network topologies including a bus network a star network a ring network a mesh network a star bus network tree or hierarchical network or the like. The communications modules can be for example modems or Ethernet cards.

Computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other. Computer system can be for example and without limitation a desktop computer laptop computer or tablet computer. Computer system can also be embedded in another device for example and without limitation a mobile telephone a personal digital assistant PDA a mobile audio player a Global Positioning System GPS receiver a video game console and or a television set top box.

The term machine readable storage medium or computer readable medium as used herein refers to any medium or media that participates in providing instructions or data to processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media include for example optical disks magnetic disks or flash memory such as data storage device . Volatile media include dynamic memory such as memory . Transmission media include coaxial cables copper wire and fiber optics including the wires that comprise bus . Common forms of machine readable media include for example floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM DVD any other optical medium punch cards paper tape any other physical medium with patterns of holes a RAM a PROM an EPROM a FLASH EPROM any other memory chip or cartridge or any other medium from which a computer can read. The machine readable storage medium can be a machine readable storage device a machine readable storage substrate a memory device a composition of matter effecting a machine readable propagated signal or a combination of one or more of them.

While this specification contains many specifics these should not be construed as limitations on the scope of what may be claimed but rather as descriptions of particular implementations of the subject matter. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the aspects described above should not be understood as requiring such separation in all aspects and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

The subject matter of this specification has been described in terms of particular aspects but other aspects can be implemented and are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In certain implementations multitasking and parallel processing may be advantageous. Other variations are within the scope of the following claims.

