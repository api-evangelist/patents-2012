---

title: Apparatus, system, and method for member matching
abstract: An apparatus, system, and method for member matching. In one embodiment, the apparatus includes an input adapter, a processor, and an output adapter. The input adapter may receive a first data record from a plurality of data records stored in one or more databases. The processor may generate a first data key from one or more field values in the first data record, compare a second data key associated with a second data record with the first data key associated with the first data record, and identify a match between the first data key and the second data key. In one embodiment, the output adapter may produce an output configured to identify the first data record and the second data record in response to identification of the match.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09122723&OS=09122723&RS=09122723
owner: OPTUMINSIGHT, INC.
number: 09122723
owner_city: Eden Praire
owner_country: US
publication_date: 20121218
---
This application is a continuation of U.S. application Ser. No. 12 634 067 filed on Dec. 9 2009 which claims priority to U.S. Application No. 61 121 027 filed on Dec. 9 2008 the entire disclosures of which are specifically incorporated herein by reference in its entirety without disclaimer.

This invention relates to data management and more particularly relates to an apparatus a system and a method for member matching.

Evaluation of health care claims data at the member level is hindered by lack of access to complete information for members who move from one plan to another. This is especially problematic when the analysis is done for an individual health plan and only data from that plan is available for use. It is complicated by the fact that patients are mobile visit multiple providers and enroll in multiple plans. The challenge is to uniquely identify members across the health plans and create non duplicative eligibility records. This requires matching members or data records across health plans.

Typical record matching solutions require the use of a social security number or other unique identifiers that are common among the several datasets. Unfortunately most healthcare plans and other data providers such as financial institutions are unwilling or unable to supply social security numbers or other unique identifiers because of privacy concerns.

The referenced shortcomings are not intended to be exhaustive but rather are among many that tend to impair the effectiveness of previously known techniques for member matching however those mentioned here are sufficient to demonstrate that the methodologies appearing in the art have not been satisfactory and that a significant need exists for the techniques described and claimed in this disclosure.

From the foregoing discussion it should be apparent that a need exists for an apparatus system and method for member matching.

An apparatus for member matching is presented. In one embodiment the apparatus includes an input adapter a processor and an output adapter. The input adapter may receive a first data record from a plurality of data records stored in one or more databases. The processor may generate a first data key from one or more field values in the first data record compare a second data key associated with a second data record with the first data key associated with the first data record and identify a match between the first data key and the second data key. In one embodiment the processor may assign a common identifier to the first data record and the second data record in response to the match between the first key and the second key the common identifier associating the first data record and the second data record with a unique entity. In one embodiment the output adapter may produce an output configured to identify the first data record and the second data record in response to identification of the match.

In a further embodiment the processor may clean the first data record and the second data record before comparing the first data key and the second data key. In still a further embodiment the processor may standardize the first and second data record before comparing the first data key and the second data key. Additionally the processor may generate a plurality of first data keys and second data keys according to a plurality of predetermined combinations of field values. In a further embodiment comparing the first data key and the second data key includes comparing the plurality of first data keys with the plurality of second data keys.

A system is also presented for member matching. In one embodiment the system may include one or more data storage devices configured to store a plurality of data records. The system may also include a server configured to receive a first data record from the plurality of data records stored in one or more databases located on the one or more data storage devices generate a first data key from one or more field values in the first data record compare a second data key associated with a second data record with the first data key associated with the first data record identify a match between the first data key and the second data key and produce an output configured to identify the first data record and the second data record in response to identification of the match.

A tangible computer program product comprising a computer readable medium having computer usable program code executable to perform operations for member matching is also presented. In one embodiment the operations include receiving a first data record from a plurality of data records stored in one or more databases generating a first data key from one or more field values in the first data record comparing a second data key associated with a second data record with the first data key associated with the first data record identifying a match between the first data key and the second data key and producing an output configured to identify the first data record and the second data record in response to identification of the match.

A method is also presented for member matching. The method in the disclosed embodiments substantially includes the steps necessary to carry out the functions presented above with respect to the operation of the described apparatus and system. In one embodiment the method includes receiving a first data record from a plurality of data records stored in one or more databases generating a first data key from one or more field values in the first data record comparing a second data key associated with a second data record with the first data key associated with the first data record identifying a match between the first data key and the second data key and producing an output configured to identify the first data record and the second data record in response to identification of the match.

The term coupled is defined as connected although not necessarily directly and not necessarily mechanically.

The term substantially and its variations are defined as being largely but not necessarily wholly what is specified as understood by one of ordinary skill in the art and in one non limiting embodiment substantially refers to ranges within 10 preferably within 5 more preferably within 1 and most preferably within 0.5 of what is specified.

The terms comprise and any form of comprise such as comprises and comprising have and any form of have such as has and having include and any form of include such as includes and including and contain and any form of contain such as contains and containing are open ended linking verbs. As a result a method or device that comprises has includes or contains one or more steps or elements possesses those one or more steps or elements but is not limited to possessing only those one or more elements. Likewise a step of a method or an element of a device that comprises has includes or contains one or more features possesses those one or more features but is not limited to possessing only those one or more features. Furthermore a device or structure that is configured in a certain way is configured in at least that way but may also be configured in ways that are not listed.

Other features and associated advantages will become apparent with reference to the following detailed description of specific embodiments in connection with the accompanying drawings.

The invention and the various features and advantageous details are explained more fully with reference to the nonlimiting embodiments that are illustrated in the accompanying drawings and detailed in the following description. Descriptions of well known starting materials processing techniques components and equipment are omitted so as not to unnecessarily obscure the invention in detail. It should be understood however that the detailed description and the specific examples while indicating embodiments of the invention are given by way of illustration only and not by way of limitation. Various substitutions modifications additions and or rearrangements within the spirit and or scope of the underlying inventive concept will become apparent to those skilled in the art from this disclosure.

Many of the functional units described in this specification have been labeled as modules in order to more particularly emphasize their implementation independence. For example a module may be implemented as a hardware circuit comprising custom VLSI circuits or gate arrays off the shelf semiconductors such as logic chips transistors or other discrete components. A module may also be implemented in programmable hardware devices such as field programmable gate arrays programmable array logic programmable logic devices or the like.

Modules may also be implemented in software for execution by various types of processors. An identified module of executable code may for instance comprise one or more physical or logical blocks of computer instructions which may for instance be organized as an object a procedure or a function. Nevertheless the executables of an identified module need not be physically located together but may comprise disparate instructions stored in different locations which when joined logically together comprise the module and achieve the stated purpose for the module.

Indeed a module of executable code may be a single instruction or many instructions and may even be distributed over several different code segments among different programs and across several memory devices. Similarly operational data may be identified and illustrated herein within modules and may be embodied in any suitable form and organized within any suitable type of data structure. The operational data may be collected as a single data set or may be distributed over different locations including over different storage devices.

Reference throughout this specification to one embodiment an embodiment or similar language means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus appearances of the phrases in one embodiment in an embodiment and similar language throughout this specification may but do not necessarily all refer to the same embodiment.

Furthermore the described features structures or characteristics of the invention may be combined in any suitable manner in one or more embodiments. In the following description numerous specific details are provided such as examples of programming software modules user selections network transactions database queries database structures hardware modules hardware circuits hardware chips etc. to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize however that the invention may be practiced without one or more of the specific details or with other methods components materials and so forth. In other instances well known structures materials or operations are not shown or described in detail to avoid obscuring aspects of the invention.

In one embodiment the user interface device is referred to broadly and is intended to encompass a suitable processor based device such as a desktop computer a laptop computer a Personal Digital Assistant PDA a mobile communication device or organizer device having access to the network . In a further embodiment the user interface device may access the Internet to access a web application or web service hosted by the server and provide a user interface for enabling the service consumer user to enter or receive information. The user may also input a selection of field values to be used to generate the first data key and other user inputs and controls.

The network may facilitate communications of data between the server and the user interface device . The network may include any type of communications network including but not limited to a direct PC to PC connection a local area network LAN a wide area network WAN a modem to modem connection the Internet a combination of the above or any other communications network now known or later developed within the networking arts which permits two or more computers to communicate one with another. In a further embodiment of the system the user interface device and or the network may be omitted.

In one embodiment the server is configured to select a first data record from a plurality of data records stored in one or more databases generate a first data key from one or more field values in the first data record compare a second data key associated with a second data record with the first data key associated with the first data record identify a match between the first data key and the second data key and produce an output configured to identify the first data record and the second data record in response to identification of the match. Additionally the server may access data stored in the data storage device via a Storage Area Network SAN connection a LAN a data bus or the like.

The data storage device may include a hard disk including hard disks arranged in a Redundant Array of Independent Disks RAID array a tape storage drive comprising a magnetic tape data storage device an optical storage device or the like. In one embodiment the data storage device may store health related data such as insurance claims data consumer data or the like. The data may be arranged in a database and accessible through Structured Query Language SQL queries or other data base query languages or operations.

In one embodiment the server may perform the methods described herein on selected data storage devices to collect a consolidated set of data elements associated with an individual or group of individuals. The server may store the consolidated data set in a consolidated data storage device . In such an embodiment the server may refer back to the consolidated data storage device to obtain a set of data elements associated with a specified individual. In another alternative embodiment multiple databases may be stored on a single consolidated data storage device .

In various embodiments the server may communicate with the data storage devices over the data bus . The data bus may comprise a SAN a LAN or the like. The communication infrastructure may include Ethernet Fibre Chanel Arbitrated Loop FC AL Small Computer System Interface SCSI and or other similar data communication schemes associated with data storage and communication. For example there server may communicate indirectly with the data storage devices the server first communicating with a storage server or storage controller .

In one example of the system the first data storage device may store data associated with a first private insurer including insurance claims made by one or more individuals. The insurance claims data may include data associated with medical services procedures and prescriptions utilized by the individual. In one embodiment the second data storage device may store insurance claims data from a state or federal government health insurance program such as Medicare or Medicaid. The third data storage device may store health insurance information from a secondary insurer. For example the third data storage device may include data associated with supplemental pharmacy claims dental insurance vision insurance or the like.

The server may host a software application configured for member matching. The software application may further include modules or functions for interfacing with the data storage devices interfacing a network interfacing with a user and the like. In a further embodiment the server may host an engine application plug in or application programming interface API . In another embodiment the server may host a web service or web accessible software application.

In a specific embodiment a data record may include one or more data fields. For example the data record may include data fields associated with an individual s first middle and last names. The data record may also include a data field associated with a date of birth and or gender of the individual. The data fields may also include fields for contact information including address city state zip code telephone number and the like. The data fields may also include the individual s coverage effective and end dates. The data fields may also include a date and or description of a service provided and a designation of the health plan to which the claim was made.

The computer system also may include Random Access Memory RAM which may be SRAM DRAM SDRAM or the like. The computer system may utilize RAM to store the various data structures used by a software application configured to member matching. The computer system may also include Read Only Memory ROM which may be PROM EPROM EEPROM or the like. The ROM may store configuration information for booting the computer system . The RAM and the ROM hold user and system data.

The computer system may also include an input output I O adapter a communications adapter a user interface adapter and a display adapter . The I O adapter and or user the interface adapter may in certain embodiments enable a user to interact with the computer system in order to input information for authenticating a user identifying an individual or receiving health profile information. In a further embodiment the display adapter may display a graphical user interface associated with a software or web based application for member matching.

The I O adapter may connect to one or more storage devices such as one or more of a hard drive a Compact Disk CD drive a floppy disk drive a tape drive to the computer system . The communications adapter may be adapted to couple the computer system to the network which may be one or more of a LAN and or WAN and or the Internet. The user interface adapter couples user input devices such as a keyboard and a pointing device to the computer system . The display adapter may be driven by the CPU to control the display on the display device .

The present embodiments are not limited to the architecture of system . Rather the computer system is provided as an example of one type of computing device that may be adapted to perform the functions of server and or the user interface device . For example any suitable processor based device may be utilized including without limitation including personal data assistants PDAs computer game consoles and multi processor servers. Moreover the present embodiments may be implemented on application specific integrated circuits ASIC or very large scale integrated VLSI circuits. In fact persons of ordinary skill in the art may utilize any number of suitable structures capable of executing logical operations according to the described embodiments.

The network based system may include components or devices configured to operate in various network layers. For example the server may include modules configured to work within an application layer a presentation layer a data access layer and a metadata layer . In a further embodiment the server may access one or more data sets that comprises a data layer or data tier . For example a first data set a second data set and a third data set may comprise data tier that is stored on one or more data storage devices .

One or more web applications may operate in the application layer . For example a user may interact with the web application though one or more I O interfaces configured to interface with the web application through an I O adapter that operates on the application layer. In one particular embodiment a web application may be provided for member matching that includes software modules configured to perform the steps of selecting a first data record from a plurality of data records stored in one or more databases generating a first data key from one or more field values in the first data record comparing a second data key associated with a second data record with the first data key associated with the first data record identifying a match between the first data key and the second data key and producing an output configured to identify the first data record and the second data record in response to identification of the match.

In a further embodiment the server may include components devices hardware modules or software modules configured to operate in the presentation layer to support one or more web services . For example a web application may access a web service to perform one or more web based functions for the web application . In one embodiment a web application may operate on a first server and access one or more web services hosted on a second server not shown during operation.

For example a web application for matching diverse records associated with a common individual or other information may access a first web service for cleaning the first data record and the second data record before comparing the first data key and the second data key and a second web service for standardizing the first and second data records before comparing the first data key and the second data key. The web services may receive the first data record and the second data record from the data storage device . In response the web service may return data cleaned and or standardized data records. One of ordinary skill in the art will recognize various web based architectures employing web services for modular operation of a web application .

In one embodiment a web application or a web service may access one or more of the data sets through the data access layer . In certain embodiments the data access layer may be divided into one or more independent data access layers for accessing individual data sets in the data tier . These individual data access layers may be referred to as data sockets or adapters. The data access layers may utilize metadata from the metadata layer to provide the web application or the web service with specific access to the data tier .

For example the data access layer may include operations for performing a query of the data sets to retrieve specific information for the web application or the web service . In a more specific example the data access layer may include a query for a preselected group of records or all records stored in the data sets .

The input adapter may include an I O adapter a communications adapter a user interface adapter or the like. The processor may include the CPU as described above with relation to . Alternatively the processor may include other hardware components including a firmware or software based programmable logic chip a microprocessor or the like. The output adapter may include the I O adapter the communication adapter the display adapter or the like. For example the output adapter may store a map file to the data storage comprising a map or listing of matched data records. In one embodiment the output may include the matched data records. In an alternative embodiment the output may include metadata identifying the matched data records.

In a further embodiment the key generator may generate a plurality of first data keys and second data keys according to a plurality of predetermined combinations of field values. Similarly the comparison module may compare the first data key and the second data key includes comparing the plurality of first data keys with the plurality of second data keys. For example Table 1 includes several example embodiments of data keys that may be generated by the key generator . The v notation indicates that the field values may have been cleaned and or standardized. The list in Table 1 is not intended to be an exhaustive list of possible keys that may be generated but only indented to provide several examples for illustrative purposes only.

In a further embodiment the processor may include additional modules. For example the processor may include a data cleaner configured to clean the first data record and the second data record before comparing the first data key and the second data key. For example the data cleaner may remove special characters such as from names. The data cleaner may also remove special characters such as etc. from addresses. Additionally the data cleaner may remove spaces in names and addresses. In still another embodiment the data cleaner may convert all fields into upper case. The data cleaner may also edit SSNs to ensure their validity. For example an SSN like 111 11 1111 may be identified as an invalid SSN. A leading zero may be added to SSNs with only eight digits.

In one embodiment the processor may include a data standardizer configured to standardize the first and second data record before comparing the first data key and the second data key. In one embodiment the standardizer may perform a phonetic name matching algorithm. For example the standardizer may use the Soundex algorithm available with Statistical Analysis Software SAS . In such an embodiment names such as Bryan and Brian may have the same encrypted value of B65. The standardizer may also standardize first and last names for example the names Jonathon John and Jon may all be assigned to Jon to avoid confusion based on name variation. Street names may also be standardized. For example Avenue may be assigned reassigned as AVE. First and last names may be swapped for example to capture people with two first names foreign names or to correct for data entry errors. In a further embodiment the standardizer may generate a substring of the first 3 characters of each name to minimize errors in spelling. Table 2 illustrates several example embodiments of variations that may be generated through the data cleaning and standardization processes described above.

The schematic flow chart diagrams that follow are generally set forth as logical flow chart diagrams. As such the depicted order and labeled steps are indicative of one embodiment of the presented method. Other steps and methods may be conceived that are equivalent in function logic or effect to one or more steps or portions thereof of the illustrated method. Additionally the format and symbols employed are provided to explain the logical steps of the method and are understood not to limit the scope of the method. Although various arrow types and line types may be employed in the flow chart diagrams they are understood not to limit the scope of the corresponding method. Indeed some arrows or other connectors may be used to indicate only the logical flow of the method. For instance an arrow may indicate a waiting or monitoring period of unspecified duration between enumerated steps of the depicted method. Additionally the order in which a particular method occurs may or may not strictly adhere to the order of the corresponding steps shown.

In still a further embodiment the processor may include an ID assignment module configured to assign a common identifier to one or more matching records that have been identified by the identification module . Specifically the ID assignment module may assign a common identifier to the first data record and the second data record in response to the match between the first key and the second key the common identifier associating the first data record and the second data record with a unique entity. The common identifier may be unique to the entity. An entity may include an individual a company an organization a plan or the like. For example the ID assignment module may assign a ID number a unique user name an alpha numeric identifier a binary identifier a hexadecimal identifier or the like. The common identifier may include a social security number a member identification number associated with a member of a healthcare plan or the like. In a particular embodiment each matched records associated with a particular individual or member of a healthcare plan may be assigned the same member ID by the ID assignment module . In such an embodiment subsequent record matching searches may be simplified by matching certain records by member ID prior to the member matching process described in .

The comparison module may then compare a second data key associated with a second data record with the first data key associated with the first data record. The identification module may then identify a match between the first data key and the second data key. In response to a match identified by the identification module the output adapter may produce an output configured to identify data records associated with the match.

For example Table 3 illustrates one embodiment of a group of data records associated with a hypothetical pair of individuals Sally Jones and John Smith. In this example the individuals are divorced and have one child named Bobby Smith. To further illustrate the present embodiments this example assumes that Sally used the name Sally Smith and was covered under John s health insurance plan during the time that they were married but Sally changed her name to Sally Jones after the divorce. This example further assumes that John and Sally are currently covered under separate health insurance plans and that Bobby is covered by both plans. This example is not intended to limit the present embodiments in any way but to provide an illustrative example of how the present apparatus system and methods may match health insurance records. This example would not require the use of social security numbers or other identification numbers for matching the records.

In this example the data records may be stored in two separate databases each stored on a separate data storage device . In such an embodiment the input adapter may receive the first data record from the database stored on the first data storage device . In a further embodiment the data cleaner may remove extraneous markings and spaces from the data fields and the data standardizer may generate a list table or file of standardized variations. The key generator may then generate a first data key from one or more field values in the first data record. For example the key generator may generate the Address Zip Sex DOB v FirstNm v LastNm v key based on values of data fields from the first data record. In this example the Address Zip Sex DOB v FirstNm v LastNm v key may be 23FORESTAVENUE02127F03021957SALLYSMITH. 

The comparison module may then compare a second data key associated with the second data record with the first data key associated with the first data record. In such an embodiment the second data key may be generated in the same or similar manner as described for generating the first data key. For example the Address Zip Sex DOB v FirstNm v LastNm v data key for the second data record may also be 23FORESTAVENUE02127F03021957SALLYSMITH. In this example the identification module may identify a match between the first data key and the second data key.

The output adapter may then produce an output configured to identify data records associated with the match. For example the output may include a file containing the first data record and the second data record. Alternatively the output may include a string of pointers each pointer configured to indicate a position on the first data storage device and or the second data storage device at which the first and second data records may be located. In a further alternative embodiment the output may include a list of database index values or other data record identifiers for locating the first data record and the second data record within one or more databases.

In the example described above a Address Zip Sex DOB v FirstNm v LastNm v data key associated with the first data record and the third data record may not match. In such an embodiment the key generator may generate a plurality of data keys as described in Table 1. The comparison module may then compare multiple data keys associated with the first data record and the second data record. In this example the identification module may identify a match based on the Sex DOB FirstNm v LastNm v data key and other possible data keys. Thus the Sex DOB FirstNm v LastNm v data key may account for changes of address.

The method may further include calling a sub process sub routine web service or the like for performing a member matching routine that matches members within and across the various data sources. The routine may be excused by an iterative process flow started by X and illustrated in . The member matching routine may return one or more member matching reports and or generate an output configured to identify matching data records. In the depicted embodiment the output may be a file or data structure referred to herein as an Xwalk. The Xwalk may link data records that match a single individual. In this embodiment the member matching routine may generate a New Xwalk. In particular the method may achieve universal ID UID persistence across runs by updating Xwalk files or datasets to keep track of new members that are being added to the system as well as members that are dropped. For example the method may accept the results of the member match routine as exemplified by renaming Current Xwalk in from previous run to Old Xwalk and New Xwalk in with new results to Current Xwalk. The method may further generate updated current Xwalk by assigning UIDs to plan specific member IDs. In the decision juncture of resetting Xwalk if the answer is Yes the method may be followed by unacceptance of match routine by renaming current Xwalk to New Xwalk and Old Xwalk to current Xwalk as an optional step so as to generate updated current Xwalk. If the answer is No for the method may continue by applying Current Xwalk across the multiple data sources.

The sub process may further include obtaining previously used UIDs for healthplan specific member identification numbers from a previous version cycle of the Xwalk dataset for example from the Current Xwalk Dataset to get last used UIDs. The sub process may the continue with the Set Flow process . The data source list Data contributions DC may be separated into SSN and non SSN lists. The Set Flow process may include creating sequence patterns from member prep process and intra plan and inter plan matches after separating the DCs into separate lists. In one embodiment each of these lists may be organized into an ascending sequence based on size and then set into sequence patterns using a binary tree approach for efficient member matching. Other sequence patterns may be used including a descending sequence a temporal based sequence or the like. The Set Flow process may also create a sequence pattern for a final match between SSN match result and non SSN match result as illustrated and described in .

The data source sequence patterns may then be passed to another sub process as illustrated in for executing the various binary member prep processes and matches per the sequence patterns. The sub process may return a dataset comprising data records matched to members or individuals. A new Xwalk dataset may then be generated . In a further embodiment one or more reports may be created .

In one embodiment the Current XWalk may be applied to the data from the health plans to identify members that have already been matched at the beginning of each run. The Current Xwalk XWalk as of previous run may be updated with the newly generated UID MemberID entries from the current run s member matching processes Execute Flow process to create the New Xwalk. For the next run the New Xwalk may be converted into Current XWalk by the Accept process .

For example patterns that may be provided to the Execute Flow process by the Set Flow process may include a sequence for Member Prep for plans with SSN. In such an embodiment the Execute Flow may start the Member prep process per the sequence and provides SSN member match ready datasets . In one embodiment a sequence for Member Prep for plans without SSN may be generated. In such an embodiment Execute Flow may start the Member prep process per the sequence and provides non SSN member match ready datasets . In another embodiment a sequence for Member Match for plans with SSN may be generated. Execute Flow may start multiple parallel based on dependencies binary member matches in batch mode per the matched sequence provided by Set Flow . In a further embodiment a sequence for Member Match for plans without SSN may be generated. In such an embodiment the Execute Flow process may start multiple parallel based on dependencies binary member matches in batch mode per the matched sequence provided by Set Flow .

In one embodiment the sub process may perform a preliminary search for data records that match according to a social security number and or a member identification number. If the data records do not contain social security numbers or other identification numbers the member matching sub process Z in may be called. In one embodiment the member matching sub process may return one or more datasets comprising data records that have been matched to an individual or a member. In a further embodiment the data resulting from SSN match and non SSN match are member matched to get the final member matched dataset .

For intra plan match if SSN is the DC Data Contributor the sub process may generate member based keys SSN based keys and common keys for each data record if SSN is not in the DC member based keys and common keys may be generated . For inter plan match to compare data records from different data sources like different health plans the sub process may generate only common keys when no SSNs are available and created SSN based keys and common keys when SSNs are available. A particular advantage of the invention is that its ability to compare and match data records even when SSN or plan specific subscriber numbers or member IDs are not available.

The keys generated by one or more processes and may be combined into a key set. For example a key set may include multiple common keys and one social security number key or one member based key such as member IDs or subscriber number specific for individual plan or data contributor. For example the key set may include between thirty five and forty separate common keys. In such an embodiment the common key values may be concatenated variations of the individual s demographic data fields. A key type such as a sequential number may be assigned to each common key so that data common keys may be identified and compared with other common keys of the same type. In a further embodiment the key type may increase the confidence of member matchings. For example without key type common key values for different members could be identified as the same member.

In a further embodiment a lookup data set DC 2 may be created . The lookup dataset may include multiple records for each key type associated with each data record. The lookup dataset may be further consolidated by identifying and removing duplicate records based on key types and key values. The dataset may then be indexed or sorted according to the key type and or the key value.

The first data record may then be received . In a particular embodiment the input adapter may receive the first data record in DC 1. The sub process may additionally include dynamically creating multiple data keys for the first data record in DC 1 according to a preselected set of key types associated with the key set associated with the lookup dataset DC 2 . Each data key generated for the first data set in DC 1 may be compared with the data keys in the lookup dataset DC 2 created in . If a match is found the data records may be flagged as matching or as a HIT and an identification number may be assigned to the matching data records. The matched record would have the demographic information from DC 2. In a further embodiment the matched record may be assigned a universal ID UID if DC 1 and DC 2 already have a UID choose the smaller UID if only one of them has a UID assign the UID to the matched record if no DC has a previously UID created a new one by obtaining the greatest unused UID. If no match is found the first data record may be flagged as a unique or unmatched data record. Specifically the data record may be flagged as associated with a new individual or member of a health plan. This process may be repeated iteratively until each data key for each data record has been looked up in the lookup dataset.

Once all of the data records have been looked up demographic information may be captured for the matched records from both data sources. This may include extracting the demographic information for each matched data record and storing it as a separate matched record. The demographic information may facilitate future match searches making the sub process more accurate. The unmatched records may be assigned unique identification numbers and flagged as unmatched records. This information may be compiled into a final match result dataset and returned to the sub process .

In further embodiments the apparatus system and methods described herein may handle matching between three or more datasets associated with three or more distinct plans. In an alternative embodiment a binary tree matching method may be used to match data records from two separate plans at substantially the same time. These methods may be flexible enough to allow varying identifier fields between datasets since all datasets may not have common identifier fields. For example a mapping or association of identifier fields may be generated prior to execution of the methods. In still further embodiments a set of logical rules for match corroboration or disqualification may be implemented to validate matches. Weighting may also be provided to identify close matches or to provide a level of confidence in the matches. For example matches based on complex data keys may be assigned a high weighting value indicating a high level of confidence in the match while matches based on simple data keys may be assigned a low weighting value indicating a low level of confidence in the match. This information may be communicated to a user.

The described embodiments may have several advantages. First the described embodiments are able to match members without the use of social security numbers or plan specific Subscriber Number or Member ID. Second multiple matching keys in sequence testing multiple combinations of demographic fields may be used to captures members who move from one location to another who get married or divorced and change names who have dual coverage even if demographic information is not identical in both plans who have data records within one data source and also across data sources. This methodology can have applications in various fields where individuals need to be matched and identified across various similar data sources.

All of the methods disclosed and claimed herein can be made and executed without undue experimentation in light of the present disclosure. While the apparatus and methods of this invention have been described in terms of preferred embodiments it will be apparent to those of skill in the art that variations may be applied to the methods and in the steps or in the sequence of steps of the method described herein without departing from the concept spirit and scope of the invention. In addition modifications may be made to the disclosed apparatus and components may be eliminated or substituted for the components described herein where the same or similar results would be achieved. All such similar substitutes and modifications apparent to those skilled in the art are deemed to be within the spirit scope and concept of the invention as defined by the appended claims.

