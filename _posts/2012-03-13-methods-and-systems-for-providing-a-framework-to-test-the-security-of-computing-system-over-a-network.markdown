---

title: Methods and systems for providing a framework to test the security of computing system over a network
abstract: A security tool can utilize a vulnerability in a computing system or credentials for the computing system to gain access to the computing system. Once access is gained, the security tool can deliver an agent to the computing system. The agent can execute, detected or undetected, on the computing system in order to establish a network link between the computing system and the security tool. Once established, the security tool creates a virtual network interface on the computing system on which it is running and instructs the agent to relay network traffic between the virtual network interface of the computing system executing the security tool and the existing network interfaces of computing system executing the agent.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08875296&OS=08875296&RS=08875296
owner: Rapid7, LLC
number: 08875296
owner_city: Boston
owner_country: US
publication_date: 20120313
---
This application claims priority to U.S. Provisional Patent Application Ser. No. 61 452 532 filed on Mar. 14 2011 and U.S. Provisional Patent Application Ser. No. 61 452 744 filed on Mar. 15 2011 the disclosures of which are incorporated in their entirety by reference herein.

In today s distributed computing environments security is of the utmost importance. Due to the rise of wide area public networks users have unlimited access to content e.g. data files applications programs etc. from a variety of sources. Additionally the users connection to the public networks provides a window for malicious entities to attack the users computing systems. Malicious entities utilize this ease of accessibility and anonymity to attack the users system remotely across the public networks. For example the malicious entities can plant viruses Trojans or other malicious software in publicly available content in order to attack the users computing systems and steal sensitive information from the users.

To prevent attacks on computing systems the administrators and owners of computing systems desire to identify possible security threats before they can be attacked by malicious entities. This however can be a difficult task. Often the administrator must individually examine each computing system to identify possible weaknesses. The administrators can utilize tools to remotely examine the computing system. These tools however lack flexibility in examining the computing systems and often specialized routines and custom application programs must be developed for each specific computing system.

For simplicity and illustrative purposes the principles of the present teachings are described by referring mainly to exemplary embodiments thereof. However one of ordinary skill in the art would readily recognize that the same principles are equally applicable to and can be implemented in all types of information and systems and that any such variations do not depart from the true spirit and scope of the present teachings. Moreover in the following detailed description references are made to the accompanying figures which illustrate specific exemplary embodiments. Electrical mechanical logical and structural changes may be made to the exemplary embodiments without departing from the spirit and scope of the present teachings. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present teachings is defined by the appended claims and their equivalents.

Embodiments of the present teachings relate to systems and methods for testing and analyzing the security of a network of computing systems. In particular a security tool can utilize a vulnerability in a computing system or credentials for the computing system to gain access to the computing system. Once access is gained the security tool can deliver an agent to the computing system. The agent can execute on the computing system in order to establish a network link between the computing system and the security tool. Once established the security tool creates a virtual network interface on the computing system on which it is running and instructs the agent to relay network traffic between the virtual network interface of the computing system executing the security tool and the existing network interfaces of computing system executing the agent. This process functions as a virtual private network VPN connection between the security tool and the agent. Once established the security tool can be configured to utilize the VPN connection to test and analyze the security of the computing system or other computing systems that are connected to the computing system.

Accordingly the security tool can in real time identify and analyze security threats to a computing system and provide details of the threats to a user of the security tool. Likewise by establishing a fully functional VPN connection the security tool can test and analyze the computing system without creating unique and specialized commands and routines for each computing system.

As illustrated in the target computing system can represent the system of public or private entities such as governmental agencies individuals businesses partnerships companies corporations etc. utilized to support the entities. The target computing system can be any type of conventional computing system such as desktop laptop server etc. or mobile device such as a smart telephone tablet computer cellular telephone personal digital assistant etc. The target computing system can include hardware resources such as processors memory network hardware storage devices and the like and software resources such as operating systems OS application programs and the like. In particular the target computing system can include a physical memory such as random access memory RAM .

The environment can also include a remote computing system located remotely from the target computing system . The remote computing system can be any type of conventional computing system such as desktop laptop server etc. The remote computing system can include hardware resources such as processors memory network hardware storage devices and the like and software resources such as OS application programs and the like. The target computing system and the remote computing system can be coupled to one or more networks . The one or more networks can be any type of communications networks whether wired or wireless to allow the computing system to communicate such as wide area networks or local area networks. The security tool can be configured to utilize the network to communicate with the target computing system .

In embodiments the owners administrators and users of the target computing system and or remote computing system can desire to test and analyze the security of the target computing system utilizing the security tool . The security tool can be configured to provide an interface and tools whereby a user can test and analyze the security of the target computing system . To achieve this the security tool can be configured to deliver the agent to the target computing system . The agent can be configured to execute detected or undetected on the target computing system in order to establish a network link between the target computing system and the security tool . Once established the security tool can be configured to create a virtual network interface on the remote computing system on which it is running. The security tool can be configured to instruct the agent to relay network traffic between the virtual network interface of the remote computing system executing the security tool and the existing network interfaces of target computing system executing the agent . The virtual network interface can be any type of virtual network interface such as a TAP interface and or other types of virtual network devices.

In embodiments the virtual network interface and the agent can be configured to operate on the remote computing system and the target computing system to provide a fully functional virtual private network VPN connection between the security tool and the agent . The agent can be configured to operate as a simulated or virtual network interface such as a simulated Ethernet device operating at layer 2 or data link layer of the Open System Interconnection OSI model. In particular the agent can be configured to inject frames into the network stack of a network interface device of the target computing system in order to communicate with the security tool or other computing systems. As such the agent can establish and utilize the VPN connection without alerting the network interface device.

Additionally to provide the VPN connection the agent can be configured to also provide network layer layer 3 communications such as Internet Protocol IP packets and transport layer layer 4 communications such as transmission control protocol TCP communications and user datagram protocol UDP communications. To operate as the virtual network interface the agent can be configured to receive network communications such as packets from the security tool via the virtual network interface and deliver the network communications to the network stack of the target computing system . Likewise the agent can be configured to pass network communications of the target computing system to the security tool .

In embodiments the security tool can be configured as an application program that is capable of being stored on and executed by the computing systems of the environment such as the remote computing system . For example the security tool can be an application program such as Nexpose or Metasploit from Rapid7 LLC. The security tool can be written in a variety of programming languages such as Ruby JAVA C Python code Visual Basic hypertext markup language HTML extensible markup language XML and the like to accommodate a variety of operating systems computing system architectures etc. Likewise the agent can be configured as an application program program module and or routine that is capable of being stored in the memory of the target computing system and executed in the memory of the target computing system . The agent can be written in a variety of programming languages such as Ruby JAVA C Python code Visual Basic hypertext markup language HTML extensible markup language XML and the like to accommodate a variety of operating systems computing system architectures etc.

In embodiments the security tool can be configured to deliver the agent to the target computing system via the network . The security tool can be configured to deliver the agent in a manner to prevent the target computing system from detecting the presence of the agent . To achieve this the security tool can be configured to identify and to utilize a vulnerability in the target computing system to deliver the agent . A vulnerability can be any type of weakness bug and or glitch in the software resources and or hardware resources of the target computing system that can allow the security of the target computing system to be compromised. For example a vulnerability in the software resources can include for example software that is out of date software that has known security weakness configurations of software that have known security weaknesses known bugs of software etc. Likewise a vulnerability in the hardware resources can include for example known bugs in hardware configurations of hardware that have known security weaknesses etc.

Likewise the security tool can be configured to utilize credentials e.g. access identification and password of the target computing system to deliver the agent . The security tool can be configured to determine the credentials through any number of methods such as examining the password file of the target computing system .

For example a vulnerability can exist in the access security for the Windows operating system by Microsoft Corporation. An exploit can exist for attacking Windows access using password hashes such pass the hash technique. In this example the pass the hash technique involves stealing a password file that contains the hashes of passwords for Windows and utilizing the hashes of passwords to identify vulnerabilities in the target computing system . In embodiments the security tool can deliver an exploit to the target computing system that scans the target computing system for a password hash file and can perform the pass the hash technique in order to identify a vulnerability in the Windows operating system.

To identify a vulnerability the security tool can be configured to examine the target computing system to identify the software resources and the hardware resources of the target computing system and to scan for vulnerabilities. For example the security tool can be configured to scan the target computing systems in order to identify the details of the software resources of the computing systems type of software installed e.g. OS and application programs version of the software installed configuration of the software installed etc. and the details of the hardware resources type of hardware configuration of the hardware etc. .

Once the software and hardware resources are identified the security tool can be configured to compare the details of the software resources and the details of the hardware resources to a vulnerability database . The vulnerability database can be configured to store a record of known vulnerabilities for various types of known software resources and hardware resources. The security tool can be configured to compare the identified details of the software resources and hardware resources of the target computing system to the vulnerability database in order to identify vulnerabilities in the computing system . Likewise the security tool can be configured to specifically scan the target computing system for one or more of the vulnerabilities stored in the vulnerability database . The vulnerability database can be configured according to any type of proprietary or open source database format or scheme.

In embodiments once delivered the agent can be configured to operate on the target computing system in a manner to prevent detection by the target computing system . When operating as the simulated network interface the agent can be configured to obtain and utilize network identifiers such as media access control MAC addresses and IP address in a manner to prevent the detection of the agent by the target computing system or other computing system associated with the target computing system . Likewise the agent can be configured to establish maintain and communicate via the VPN connection in a manner to prevent detection by the target computing system or other computing system associated with the target computing system .

In embodiments the target computing system can be a component of a network of computing systems. illustrates another example of the environment in which the target computing system can be part of a network of computing system. In this example the owners administrators or operator of the network can desire to test the security of the network and identify any vulnerabilities in the network or the computing system of the network. While illustrates various systems contained in this example of the environment one skilled in the art will realize that these systems are exemplary and that the environment can include any number and type of systems.

As illustrated in the network can include the target computing system a gateway and computing systems . As mentioned above the network can represent the computing systems of public or private entities such as governmental agencies individuals businesses partnerships companies corporations etc. The computing systems of network can be located at any location whether located at single geographic location or remotely located from each other. For example the target computing system the gateway and the computing systems can represent the computing systems of a company that are located in multiple geographic locations. As such the target computing system and one or more of the computing systems can be located at one location e.g. one office of the company and one or more of the computing systems can be located at one or more different locations e.g. satellite offices of the company . In order to communicate and share data the gateway the computing systems and the target computing system can be coupled to the network .

The gateway can include one or more computing systems such as servers that are configured to communicate with the computing system of the network . The gateway can be configured as overlord or host computing system that communicates with underlying or low level computing systems of the network . The computing systems can be any type of conventional computing systems similar to the target computing system such as desktops laptops servers etc. The computing systems can include hardware resources such as processors memory network hardware storage devices and the like and software resources such as OS application programs and the like.

In embodiments as mentioned above to test the computing systems of the network the security tool can be configured to identify the target computing system as being able to support the agent and configured to deliver the agent to the target computing system . To identify the target computing system the security tool can be configured to scan any of the gateway the computing systems and the target computing system . The security tool can be configured to scan the gateway the computing system and the target computing system in order to identify which of the computing systems has a vulnerability that will allow the agent to operate. For example as illustrated in the security tool can determine that the agent can operate on the target computing system . One skilled in the art will realize that any of the gateway and computing systems can contain a vulnerability which will allow the agent to operate detected or undetected and realize that the security tool can identify and deliver the agent to that computing system. Likewise the security tool can be configured to deliver the agent to the target computing system without concern of detection by the target computing system . For example the owner or administrator of the network can desire to test the security of the computing system of the network and allow the agent to execute on the target computing system .

In embodiments once the agent is delivered and the VPN connection is established the security tool can be configured to communicate with the agent via the virtual network interface in order to test and analyze the security of the target computing system and other computing system in the network . In particular the agent can be configured to relay network traffic received by the target computing system from other computing systems in the network to the security tool . The security tool can be configured to utilize the agent to perform security testing on the target computing system . The security testing can be any type of routine procedure algorithm application program data series of commands instructions etc. which can test and analyze the security of the target computing system and provide data about the test to the security tool via the VPN connection .

In embodiments the security tool can be configured to perform and or deliver exploits to the target computing system utilizing the VPN connection . An exploit can be a theoretical or actual method for utilizing a potential vulnerability in order to compromise the target computing system . For example an exploit can be a procedure algorithm application program data series of commands etc. that can utilize the vulnerability to compromise the security of a computing system. The security tool can be configured to deliver and execute the exploit on the target computer system and configured to receive data back from the exploit. For example the data can describe the vulnerabilities existence and the exploits ability to utilize the vulnerability of the target computing system .

In embodiments the security tool can be configured to deliver application programs that can perform various actions on the target computing system and provide data to the security tool via the VPN connection . The application programs can be configured to test the security of the target computing system such as a network vulnerability scanner and provide the data about the vulnerability scan back to the security tool . Likewise the application programs can be configured to collect configuration information from the target computing system such as type and configuration of hardware installed type of software installed network settings IP address user name password user setting user name password and the like and configured to provide the collected configuration information to the security tool via the VPN connection .

In embodiments the security tool can be configured to deliver various commands for example system calls that cause the target computing system to perform various actions and provide data to the security tool via the VPN connection . The command can be an application programming interface API call that causes the target computing system to perform certain actions. For example the security tool can provide an API call to obtain an IP address and provide the IP address to the security tool . Likewise for example the security tool can provide an API call to fork a new process on the target computing system . Also for example the security tool can provide an API call that disables application programs running on the target computing system such as antivirus programs. Additionally for example the security tool can provide an API call that emulates a local portal operating system interface for Unix operating system POSIX API and that intercepts calls to the OS of the target computing system and replaces the calls with its own calls thereby operating as a virtual machine. While several examples of commands provided by the security tool are described above one skilled in the art will realize that security tool can provide any type of command that can cause the target computing system to perform actions in order to identify weakness in the security of the target computing system .

In embodiments as described above the security tool can provide exploits application programs commands etc. to the target computing system in order to test and analyze the security of the target computing system . The agent can be configured to relay network traffic between the target computing system and the other computing systems of the network . The security tool can be configured to analysis the network traffic for example with a vulnerability scanner to identify weakness and or vulnerabilities in the target computing system and or the other computing systems of the network . Likewise in embodiments the security tool can provide exploits application programs commands etc. to the target computing system that test and analyze the security of the other computing systems in the network e.g. gateway and computing system . For example the exploits application programs commands etc. can be configured to identify the vulnerabilities of the other computing systems attempt to gain access to the other computing systems attempt to establish a new VPN connection to the other systems and the like as described above.

In embodiments the vulnerability database can be configured to store exploits application programs commands etc. utilized by the security tool . For example the vulnerability database can store the known exploits associated with the vulnerabilities stored in the vulnerability database . The vulnerability database can be configured to store the identification of the exploits application programs system calls etc. and details of the exploits application programs commands etc. The details of the exploits application programs commands etc. can include for example effects of the exploits application programs commands etc. description of the exploits application programs commands etc. e.g. algorithm procedure and a copy of the exploits application programs commands etc. e.g. copy of code application program instruction etc. . To deliver and perform the exploits application programs commands etc. the security tool can be configured to search the vulnerability database and to retrieve the exploits application programs commands etc. from the vulnerability database .

In embodiments the security tool can be configured to provide an interface to the user of the security tool . The interface can be configured to allow the user to operate the security tool such as initiating the security tool selecting or identifying computing system to test and analyze receiving or selecting exploits application programs commands etc. interacting with the exploits application programs commands etc. via the VPN connection and receiving data gathered during the testing and analysis. The interface can be any type of interface that allows the user to interact with the security tool and receive data gathered by the security tool such as command line interfaces and or graphical user interfaces GUIs . Likewise the security tool can be configured to provide the data gathered in any type of format such as electronic mail email Hyper Text Markup Language HTML document text or word processing document and the like.

In embodiments as described herein the security tool can be implemented and executed on any of the computing systems of environment in order to test and analyze the security of a target computing system and other computing systems of the network . For example the security tool can be implemented and executed on a remote computing system . In this example the security tool can remotely test and analyze the target computing systems or any of the computing systems of the network via the network . When configured as an application program the security tool can be stored on any type of computer readable storage medium such as hard drives optical storage system memory and the like of the computing systems of the environment .

In embodiments the security tool can be configured to include the vulnerability database . Likewise the vulnerability database can be stored in a repository associated with any of the computing systems of the environment and accessed remotely by the security tool . The repository can be stored any type of computer readable storage medium such as hard drives optical storage system memory and the like of the computing systems of the environment . While illustrates a single vulnerability database one skilled in the art will realize that the vulnerability database can comprise multiple databases. For example the vulnerability database can include a database for vulnerabilities and a database for exploits.

In embodiments the console module can be configured to provide an interface to the security tool . The console module can be configured to generate the interface that allow a user to initiate the security tool to select or identify computing systems to test and analyze to receive or select exploits application programs commands etc. to interact with the exploits application programs commands etc. via the VPN connection and to receive data gathered during the testing and analyze. To achieve this the console module can be configured to include the necessary logic commands instructions and routines to generate and communicate with GUIs and or command line interfaces. Likewise the console module can be configured include the necessary logic commands instructions and routines to output information in other formats such as email HTML document text or word processing document and the like.

In embodiments the console module can communicate with the control module . The control module can be configured to perform the overall control and processing of the security module . For example the control module can be configured to receive and execute the commands from the user to provide and control the agent to provide and control the exploits application programs commands etc. via the VPN connection to retrieve information from and store information in the vulnerability database to receive and analyze data gathered from the target computing system . To achieve this the control module can be configured to include the necessary logic commands instructions and routines to communicate with and control the other modules of the security tool and to communicate with and control the agent . Likewise the control module can be configured to include the necessary logic commands instructions and routines to search the vulnerability database and to retrieve the information from and store information in the vulnerability database .

In embodiments the control module can be configured to communicate with the network client module and the virtual network interface . The virtual network interface can be configured to communicate with a virtual network interface created by the virtual network interfaced river of the agent in order to establish and maintain the VPN connection . To achieve this the virtual network interface can be configured to include the necessary logic commands instructions and routines to communicate with the virtual network interface driver in order to establish the VPN connection and send and receive communication over the VPN connection .

In embodiments the network client module can be configured generate and decode network communications received by the virtual network interface . For example the network client module can be configured to generate and decode transport layer layer 4 communications such as TCP and or UDP communications. To achieve this the network client module can be configured to include the necessary logic commands instructions and routines to perform network communication operations as required by the security tool .

In embodiments the virtual network interface driver of the agent can be configured to perform the operations of emulating a network interface device on the target computing system . The virtual network interface driver can be configured to obtain and utilize network identifiers such as media access control MAC addresses and IP address in a manner to prevent the detection of the agent by the target computing system or other computing system associated with the target computing system . For example the virtual network interface driver can be configured to include the necessary logic commands instructions and routines to generate and send dynamic host configuration protocol DCHP requests to the network to obtain an IP address and or to perform network scans such as address resolution protocol ARP scan on the network to identify unused IP addresses. Likewise the virtual network interface driver can be configured to establish maintain and communicate via the VPN connection in a manner to prevent detection by the target computing system or other computing system associated with the target computing system . To achieve this the virtual network interface driver can include the necessary logic command instruction and routines to generate and decode transport layer layer 4 communications such as TCP and or UDP communications for the VPN connection . Likewise the virtual network interface driver can include the necessary logic command instruction and routines to receive network communications such as packets from the security tool and deliver the network communications to the OS network stack of the computing system . Likewise the virtual network interface driver can include the necessary logic command instruction and routines to pass network communications such as packets from the OS network stack to the security tool .

In embodiments as illustrated in the components of the security module can be implemented in a single application program capable of executing on the computing systems of environment . Likewise the components of the security module can be implanted as separate application programs that are capable of executing on separate computing systems of the environment .

As mentioned above the security tool can be configured to test and analyze a computing system. is a flow diagram that illustrates an exemplary process by which security tool can test and analyze the security of the target computing system . In the process can begin.

In the security tool can identify a target computing system in the network which can operate the agent . The security tool can scan the computing system of the network to identify one or more of the computing systems that contains a vulnerability that allow the agent to operate. For example the security tool can identify the target computing system as being able to operate the agent . Likewise the owners and or administrators of the network can allow the agent to be executed on the target computing system .

In the security tool can deliver the agent to target computing system . The security tool can transfer the agent to the memory of the target computing system via the network . In one example to deliver the agent without detection the security tool can transfer the agent utilizing a vulnerability in the target computing system and or utilizing credentials of the target computing system . Likewise in another example the security tool can transfer the agent without concern for detection by the target computing system .

In the security tool can communicate with the gent on the target computing system via the virtual network interface in order to test the security of the target computing system and or other computing systems connected to the target computing system . This process functions as the VPN connection between the security tool and the agent . The security tool can be configured to test and analyze via the VPN connection the security of the target computing system or the security of other computing systems in the network . The security testing can be any type of routine procedure algorithm application program data series of commands instructions etc. which can test and analyze the security of the target computing system or the security of other computing systems in the network and provide data about the test to the security tool via the VPN connection .

In the security tool can receive data from the agent over the VPN connection . The data received from the agent can be for example information collected by the security testing network traffic between the target computing system and other computing systems in the network and the like.

As shown in the computing system can include one or more processors such as processor that provide an execution platform for embodiments of the security tool . Commands and data from the processor are communicated over a communication bus . The computing system can also include a main memory for example one or more computer readable storage media such as a Random Access Memory RAM where the security tool the agent and or other application programs such as an operating system OS can be executed during runtime and can include a secondary memory . The secondary memory can include for example one or more computer readable storage media or devices such as a hard disk drive and or a removable storage drive representing a floppy diskette drive a magnetic tape drive a compact disk drive etc. where a copy of a application program embodiment for the security tool can be stored. The removable storage drive reads from and or writes to a removable storage unit in a well known manner. The computing system can also include a network interface in order to connect with the one or more networks .

In embodiments a user can interface with the computing system and operate the security tool with a keyboard a mouse and a display . To provide information from the computing system and data from the security tool such as the report the computing system can include a display adapter . The display adapter can interface with the communication bus and the display . The display adapter can receive display data from the processor and convert the display data into display commands for the display .

Certain embodiments may be performed as a computer application or program. The computer program may exist in a variety of forms both active and inactive. For example the computer program can exist as software program s comprised of program instructions in source code object code executable code or other formats firmware program s or hardware description language HDL files. Any of the above can be embodied on a computer readable medium which include computer readable storage devices and media and signals in compressed or uncompressed form. Exemplary computer readable storage devices and media include conventional computer system RAM random access memory ROM read only memory EPROM erasable programmable ROM EEPROM electrically erasable programmable ROM and magnetic or optical disks or tapes. Exemplary computer readable signals whether modulated using a carrier or not are signals that a computer system hosting or running the present teachings can be configured to access including signals downloaded through the Internet or other networks. Concrete examples of the foregoing include distribution of executable software program s of the computer program on a CD ROM or via Internet download. In a sense the Internet itself as an abstract entity is a computer readable medium. The same is true of computer networks in general.

While the teachings have been described with reference to the exemplary embodiments thereof those skilled in the art will be able to make various modifications to the described embodiments without departing from the true spirit and scope. The terms and descriptions used herein are set forth by way of illustration only and are not meant as limitations. In particular although the method has been described by examples the steps of the method may be performed in a different order than illustrated or simultaneously. Furthermore to the extent that the terms including includes having has with or variants thereof are used in either the detailed description and the claims such terms are intended to be inclusive in a manner similar to the term comprising. As used herein the term one or more of with respect to a listing of items such as for example A and B means A alone B alone or A and B. Those skilled in the art will recognize that these and other variations are possible within the spirit and scope as defined in the following claims and their equivalents.

