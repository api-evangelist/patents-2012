---

title: Isolating data storage mirroring operations
abstract: Systems, methods, and computer-readable storage media for isolating mirroring operations when interacting with a data storage space, and more specifically to directing data to be stored in two locations, where storing the data in the second location does not slow or impede storing the data in the first location. Upon receiving a request to store data, the system can determine a first storage space and a second storage space in which to store the data. Instructions can be prepared for storing the data in the first storage space while at the same time preparing instructions for storing identical data in the second storage space. The system can communicate the instructions to both storage systems, with the first storage space immediately beginning the storage process while the second storage space places the instructions into a queue for later processing.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09063909&OS=09063909&RS=09063909
owner: Dropbox, Inc.
number: 09063909
owner_city: San Francisco
owner_country: US
publication_date: 20121220
---
The present disclosure relates to isolating mirroring operations when interacting with a data storage space and more specifically to directing data to be stored in two locations where storing the data in the second location does not slow or impede storing the data in the first location.

When storing data it is often desirable to have the data stored in multiple locations. Multiple storage locations can help ensure accessibility should one or more of the locations become unavailable and can in some cases provide for increased customization in how the data is stored and or retrieved. However storing the data at multiple locations whether those locations are physically distinct or are co located partitions of a single data storage device often leads to delays in both storage and retrieval of data. These delays often originate in the duplication of instructions and or data for each location. While for relatively small data sizes these duplication delays may be negligible to a given user as the size of the data increases any duplication delay in storing or retrieving data can result in delays that can be detected by the user.

With cloud computing and network based storage services these delays can impact customer perceptions of the service. A network based storage service allows users to store access and manipulate data on databases and servers maintained across a network thereby freeing customers from being concerned with the physical location of the storage of the data while giving them near instantaneous access to the data from virtually any network access point. However customers using network based storage services generally want access to their data to be near instantaneous and not delayed or slow. When customers begin to experience substantial delays in storing and retrieving data customer confidence and satisfaction wanes.

Features and advantages of the disclosure will be set forth in the description which follows and in part will be obvious from the description or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out hereinafter. These and other features of the disclosure will become more fully apparent from the following description and accompanying drawings or can be learned by the practice of the principles set forth herein.

Disclosed are systems methods and non transitory computer readable storage media for isolating mirroring operations when interacting with a data storage space and more specifically to directing data to be stored in two locations where storing the data in the second location does not slow or impede storing the data in the first location. As a system configured according to this disclosure receives a request to store data the system can determine a first storage space and a second storage space in which to store the data where both the first and second storage spaces store identical versions of the data. The system can prepare instructions for storing the data in the first storage space while at the same time preparing instructions for storing identical data in the second storage space.

While the instructions for the first storage space immediately begin the storage of the data upon being communicated to the first storage space the second set of instructions may or may not immediately initiate data storage in the second storage space. Instead the second set of instructions can be sent to a queue of instructions associated with the second storage space. Not until the queue for the second storage space reaches the newly added second set of instructions will the storage process begin. The queue can be executed by a background process or a completely separate computing device so that execution of the queue does not impact or slow down accesses to the first storage space. This approach can be useful when mirroring between a primary or production storage space the first storage space and a backup or migration storage space the second storage space . The system can perform file operations to populate the backup or migration storage space on an as accessed basis so that the migration is performed incrementally over time rather than taking the entire service offline during a migration period which may be undesirable or impossible for a network based storage service.

Various embodiments of the disclosure are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the art will recognize that other components and configurations may be used without departing from the spirit and scope of the disclosure.

A system method and computer readable media are disclosed which can isolate mirroring operations when interacting with multiple data storage spaces. These mirroring operations duplicate data across the data storage spaces resulting in multiple copies of identical pieces of data. As an example an organization may use a storage service or architecture such as an online storage service or network attached storage NAS initially for data storage needs. However as the organization grows or as usage patterns change the organization may determine that the data stored in the initial location should be migrated to another storage solution. For example a company may initially select to use an online storage provider and later decide to migrate away from the online storage provider to locally hosted storage rather than renting space from the online storage provider. Such a migration can be for an entire dataset stored at the online storage provider or for a portion of the dataset.

One option for migrating the data to locally hosted storage is to purchase all of the storage devices and infrastructure necessary to copy the data hosted by the online storage provider. This option may not be optimal because purchasing all of the needed infrastructure and storage devices can be expensive and depending on the amount of data the bandwidth required to copy the data can be prohibitively large preventing or slowing file operations or other interactions with the online storage provider during the transition.

Systems configured according to this disclosure can provide a second option for transferring or migrating data from an online storage provider to another location. Rather than performing a one time transfer of all the data the system can upon receiving a command to store access or modify data store the data both in the online storage provider and in another location such as locally hosted storage. To avoid delays in servicing primary or production requests for data hosted by the online storage provider the system can generate two sets of instructions one for the online storage provider and one for the new location. The system can communicate with the online storage provider in the same manner as if no mirroring or migration operation were performed and initiate storage of the data or whatever other file operation is requested.

The system can also generate instructions for the new storage location. However instead of initiating the file operation at the new storage location immediately the system can add to a queue the instructions for the file operation at the new location. The queue can hold instructions for the new storage location and particularly instructions for the timing of storage of data at the new location. The queue can enable storage at the new storage location to occur as processing bandwidth allows. Alternatively the system can execute the file operation at the new storage location so that performance of executing the file operation at the online storage provider is not negatively impacted such as performing the file operation at the new storage location in a background thread or process or assigning execution of the file operation at the new storage location to a separate computing device separate computing core or different virtual machine.

When requests for data are received the system can determine if the data has been migrated to the new storage location or is only located at the online storage provider. If the data has been duplicated or migrated then the system can retrieve the data from the new storage location or the online storage provider. For example under high load conditions such as when more than a threshold amount of file operation requests are being processed the system can route all or a certain percentage of file operations to the new storage location when available. This can alleviate load on the online storage provider and may increase responsiveness for data that is already migrated. If the data is not yet migrated the system can request the data from the online storage provider. The system can intercept requests for data from the online storage provider and use that data which is already passing through the system from the online storage provider to a client to mirror to the new storage location.

As this example suggests the system can migrate data from the online storage provider to the new storage location upon receiving requests for different types of file operations such as a copy move delete rename create or read. When the system intercepts file operations that alter the file contents such as a copy move delete rename or create the system can prioritize those types of operations in a file operation queue over non altering file operations such as using data received from a read. Therefore files or pieces of files that are modified can be migrated before those that are simply read.

While the previous example describes a system configured according to this disclosure interacting with the new storage location and with an online storage provider other configurations could be specific to an individual seeking to transfer data between two locally attached hard drives. Rather than performing a single transfer of all the data the system can slowly begin to add new information to the second new hard drive while still accessing the previous hard drive. In such an example the system could have a threshold value defined which when reached indicates that the majority of the information being actively used is now on the new hard drive and initiating copying of the remaining information from the old hard drive. The threshold can be any value set by the system or a user. Such a clean up migration effort can be performed in the background so as not to interfere with performance of serving file operations. In one variation the system can maintain a database of which files have been mirrored or migrated to the new storage location and which files have not.

An exemplary system configuration is shown in wherein electronic devices communicate via a network for purposes of exchanging content and other data. System can be configured for use on a wide area network such as that shown in . However the present principles are applicable to a wide variety of network configurations that facilitate the intercommunication of electronic devices such as a local area network wireless network etc. For example each of the components of system in can be implemented in a localized or distributed fashion in a network.

In system a user can interact with content management system through client devices . . . collectively connected to network by direct and or indirect communication. Content management system can support connections from a variety of different client devices such as desktop computers mobile computers mobile communications devices e.g. mobile phones smart phones tablets smart televisions set top boxes and or any other network enabled computing devices. Client devices can be of varying type capabilities operating systems etc. Furthermore content management system can concurrently accept connections from and interact with multiple client devices .

A user can interact with content management system via a client side application installed on client device . In some embodiments the client side application can include a content management system specific component. For example the component can be a stand alone application one or more application plug ins and or a browser extension. However the user can also interact with content management system via a third party application such as a web browser that resides on client device and is configured to communicate with content management system . In either case the client side application can present a user interface UI for the user to interact with content management system . For example the user can interact with the content management system via a client side application integrated with the file system or via a webpage displayed using a web browser application.

Content management system can make it possible for a user to store content as well as perform a variety of content management tasks such as retrieve modify browse and or share the content. Furthermore content management system can make it possible for a user to access the content from multiple client devices . For example client device can upload content to content management system via network . The content can later be retrieved from content management system using the same client device or some other client device .

To facilitate the various content management services a user can create an account with content management system . The account information can be maintained in user account database . User account database can store profile information for registered users. In some cases the only personal information in the user profile can be a username and or email address. However content management system can also be configured to accept additional user information.

User account database can also include account management information such as account type e.g. free or paid usage information e.g. file edit history maximum storage space authorized storage space used content storage locations security settings personal configuration settings content sharing data etc. Account management module can be configured to update and or obtain user account details in user account database . The account management module can be configured to interact with any number of other modules in content management system .

An account can be used to store content such as documents text files audio files video files etc. from one or more client devices authorized on the account. The content can also include folders of various types with different behaviors or other mechanisms of grouping content items together. For example an account can include a public folder that is accessible to any user. The public folder can be assigned a web accessible address. A link to the web accessible address can be used to access the contents of the public folder. In another example an account can include a photos folder that is intended for photos and that provides specific attributes and actions tailored for photos an audio folder that provides the ability to play back audio files and perform other audio related actions or other special purpose folders. An account can also include shared folders or group folders that are linked with and available to multiple user accounts. The permissions for multiple users may be different for a shared folder.

The content can be stored in content storage . Content storage can be a storage device multiple storage devices or a server. Alternatively content storage can be a cloud storage provider or network storage accessible via one or more communications networks. Content management system can hide the complexity and details from client devices so that client devices do not need to know exactly where the content items are being stored by content management system . In one variation content management system can store the content items in the same folder hierarchy as they appear on client device . However content management system can store the content items in its own order arrangement or hierarchy. Content management system can store the content items in a network accessible storage SAN device in a redundant array of independent disks RAID etc. Content storage can store content items using one or more partition types such as FAT FAT32 NTFS EXT2 EXT3 EXT4 ReiserFS BTRFS and so forth.

Content storage can also store metadata describing content items content item types and the relationship of content items to various accounts folders or groups. The metadata for a content item can be stored as part of the content item or can be stored separately. In one variation each content item stored in content storage can be assigned a system wide unique identifier.

Content storage can decrease the amount of storage space required by identifying duplicate files or duplicate segments of files. Instead of storing multiple copies content storage can store a single copy and then use a pointer or other mechanism to link the duplicates to the single copy. Similarly content storage can store files more efficiently as well as provide the ability to undo operations by using a file version control that tracks changes to files different versions of files including diverging version trees and a change history. The change history can include a set of changes that when applied to the original file version produce the changed file version.

Content management system can be configured to support automatic synchronization of content from one or more client devices . The synchronization can be platform agnostic. That is the content can be synchronized across multiple client devices of varying type capabilities operating systems etc. For example client device can include client software which synchronizes via a synchronization module at content management system content in client device s file system with the content in an associated user account. In some cases the client software can synchronize any changes to content in a designated folder and its sub folders such as new deleted modified copied or moved files or folders. The client software can be a separate software application can integrate with an existing content management application in the operating system or some combination thereof. In one example of client software that integrates with an existing content management application a user can manipulate content directly in a local folder while a background process monitors the local folder for changes and synchronizes those changes to content management system . Conversely the background process can identify content that has been updated at content management system and synchronize those changes to the local folder. The client software can provide notifications of synchronization operations and can provide indications of content statuses directly within the content management application. Sometimes client device may not have a network connection available. In this scenario the client software can monitor the linked folder for file changes and queue those changes for later synchronization to content management system when a network connection is available. Similarly a user can manually stop or pause synchronization with content management system .

A user can also view or manipulate content via a web interface generated and served by user interface module . For example the user can navigate in a web browser to a web address provided by content management system . Changes or updates to content in the content storage made through the web interface such as uploading a new version of a file can be propagated back to other client devices associated with the user s account. For example multiple client devices each with their own client software can be associated with a single account and files in the account can be synchronized between each of the multiple client devices .

Content management system can include a communications interface for interfacing with various client devices and can interact with other content and or service providers . . . collectively via an Application Programming Interface API . Certain software applications can access content storage via an API on behalf of a user. For example a software package such as an app on a smartphone or tablet computing device can programmatically make calls directly to content management system when a user provides credentials to read write create delete share or otherwise manipulate content. Similarly the API can allow users to access all or part of content storage through a web site.

Content management system can also include authenticator module which can verify user credentials security tokens API calls specific client devices and so forth to ensure only authorized clients and users can access files. Further content management system can include analytics module that can track and report on aggregate file operations user actions network usage total storage space used as well as other technology usage or business metrics. A privacy and or security policy can prevent unauthorized access to user data stored with content management system .

Content management system can include sharing module for managing sharing content publicly or privately. Sharing content publicly can include making the content item accessible from any computing device in network communication with content management system . Sharing content privately can include linking a content item in content storage with two or more user accounts so that each user account has access to the content item. The sharing can be performed in a platform agnostic manner. That is the content can be shared across multiple client devices of varying type capabilities operating systems etc. The content can also be shared across varying types of user accounts.

In some embodiments content management system can include a content management module for maintaining a content directory. The content directory can identify the location of each content item in content storage . The content directory can include a unique content entry for each content item stored in the content storage.

A content entry can include a content path that can be used to identify the location of the content item in a content management system. For example the content path can include the name of the content item and a folder hierarchy associated with the content item. For example the content path can include a folder or path of folders in which the content item is placed as well as the name of the content item. Content management system can use the content path to present the content items in the appropriate folder hierarchy.

A content entry can also include a content pointer that identifies the location of the content item in content storage . For example the content pointer can include the exact storage address of the content item in memory. In some embodiments the content pointer can point to multiple locations each of which contains a portion of the content item.

In addition to a content path and content pointer a content entry can also include a user account identifier that identifies the user account that has access to the content item. In some embodiments multiple user account identifiers can be associated with a single content entry indicating that the content item has shared access by the multiple user accounts.

To share a content item privately sharing module can be configured to add a user account identifier to the content entry associated with the content item thus granting the added user account access to the content item. Sharing module can also be configured to remove user account identifiers from a content entry to restrict a user account s access to the content item.

To share content publicly sharing module can be configured to generate a custom network address such as a uniform resource locator URL which allows any web browser to access the content in content management system without any authentication. To accomplish this sharing module can be configured to include content identification data in the generated URL which can later be used to properly identify and return the requested content item. For example sharing module can be configured to include the user account identifier and the content path in the generated URL. Upon selection of the URL the content identification data included in the URL can be transmitted to content management system which can use the received content identification data to identify the appropriate content entry and return the content item associated with the content entry.

In addition to generating the URL sharing module can also be configured to record that a URL to the content item has been created. In some embodiments the content entry associated with a content item can include a URL flag indicating whether a URL to the content item has been created. For example the URL flag can be a Boolean value initially set to 0 or false to indicate that a URL to the content item has not been created. Sharing module can be configured to change the value of the flag to 1 or true after generating a URL to the content item.

In some embodiments sharing module can also be configured to deactivate a generated URL. For example each content entry can also include a URL active flag indicating whether the content should be returned in response to a request from the generated URL. For example sharing module can be configured to only return a content item requested by a generated link if the URL active flag is set to 1 or true. Thus access to a content item for which a URL has been generated can be easily restricted by changing the value of the URL active flag. This allows a user to restrict access to the shared content item without having to move the content item or delete the generated URL. Likewise sharing module can reactivate the URL by again changing the value of the URL active flag to 1 or true. A user can thus easily restore access to the content item without the need to generate a new URL.

While content management system is presented with specific components it should be understood by one skilled in the art that the architectural configuration of system is simply one possible configuration and that other configurations with more or less components are also possible.

Having disclosed some system components the disclosure now turns to which shows example system interactions . In this example system server which can be content management system can receive file storage request . Storage request can contain a back end instruction indicating to store a file named BAM in an online storage space used in the content management system such as content storage .

System server can prepare two sets of instructions simultaneously or in short succession one set of instructions to go to the old or previous data storage space shown as Data Storage A and one set of instructions to go to the new data storage space shown as Data Storage B . System server can then send both sets of instructions with instructions to data storage A being directly received by data storage A . Upon receiving storage instructions data storage A can immediately begin the process of storing the data. This storage process can occur using the same pathway and bandwidth as storage instruction or can occur using different pathways and bandwidth .

Storage instructions for data storage B rather than being directly received by data storage B can instead be directed to queue . Queue can store storage instructions for data storage B until data storage B is ready to store additional data. Factors which could restrict data storage B s ability to store data are remaining data space bandwidth conflicting instructions formatting errors timing errors or server maintenance. Queue can also store various other types of instructions in addition to instructions to store files. For example while data storage B can have separate pathways for communicating data to and from system server these pathways may have bandwidth limitations necessitating the use of queue . In addition the instructions in queue can be processed based on a first in first out FIFO sequence predicted duration number of interactions required movements of other stored data priority type of operation urgency for keeping data current and consistent and so forth. In certain instances the instructions can wait in queue until sufficient CPU cycles become available. In order to maintain a desired level of consistency between data storage A and data storage B the system can implement a priority queue where the longer an item remains in the queue the higher its priority.

After the instructions in queue are performed data storage A and data storage B should both contain the new file BAM. Certain configurations will have thresholds to ensure balance between data storage A and data storage B . These thresholds can look to the number of stored instructions in queue the predicted time associated with these or other instructions the size of data being transferred and other interactions between system server and data storage units and .

Many configurations may not seek to immediately transfer all the data stored in data storage A to data storage B . Reasons for this can include a desire to perform a soft transfer of files thereby not impeding user interactions different storage formats between data storage devices and that data storage A is significantly larger than data storage B or that data storage A is owned by a separate entity than data storage B . This separate entity could charge by bandwidth communicated making unnecessary communications less cost effective. In such configurations the balance can be determined based on the number of files starting at a given time or date. System server can mirror or migrate all files hosted at data storage or a subset thereof. For instance system server can mirror file operations only for files residing in a particular range or type of user accounts. System server can mirror file operations for files having a specific file type within a range of file sizes or some other criteria.

An entity that originates file storage request can be aware of the relationship between data storage device and or can be oblivious to the relationship. Examples of entities originating the file request include human users user devices terminals computers and processors. Such entities can then request retrieval of data from system server . System server can determine if the data is stored only in data storage device A or if the data is stored both in data storage devices A and B . If the data is stored in both A and B system server can send a request only to data storage device B for the data. In this case no request is made to data storage device A unless an error or other problem is found to exist with data storage B .

Having disclosed some basic system components and concepts the disclosure now turns to the exemplary method embodiment shown in . For the sake of clarity the method is described in terms of content management system as shown in configured to practice the method. The steps outlined herein are exemplary and can be implemented in any combination thereof including combinations that exclude add or modify certain steps.

Content management system can first receive instructions to store data . While this data can be in any acceptable format often the data will take the form of a document picture web address or other file format. Content management system can make a determination as to whether the data needs to be mirrored or copied to two separate storage spaces. If so the content management system can determine a first storage space and a second storage space in which to store the data where the data is identically stored in both the first storage space and the second storage space . The first and second storage spaces can be partitions in a single storage device an array of storage devices individual or multiple hard drives servers databases or cloud computing configurations. In certain configurations the first storage device can have a larger capacity than the second storage device. Other variations that can exist between the two storage devices can include the communications bandwidth available the relative CPU processing power associated with each device the format in which the data is stored the format for receiving the instructions the relative cost of using each storage device power consumption and ownership of the storage devices. In addition the entity that originated the instructions to store the data can be aware that the data will be stored in both the first and second storage spaces or can be unaware of that fact.

Having determined the first storage space and the second storage space content management system can prepare first instructions for storing the data in the first storage space and preparing second instructions for storing the data in the second storage space . Content management system can then communicate the first instructions to the first storage space initiating storage of the data in the first storage space while placing the second instructions in a second storage space queue . This queue can be executed sequentially in a first in first out manner or can be executed based on the predicted time of the storage CPU cycles and data to be stored. In addition the queue can be processed to comply with thresholds that maintain a synchronization between the first and second storage spaces. Exemplary thresholds can be a certain amount of time between when the instructions were sent to the respective storage spaces a particular amount of data or a number of files not yet stored on both storage devices.

Having stored the data per the instructions in the queue content management system can receive a request to retrieve the data. When content management system receives a retrieval request content management system can determine if the data is stored in the second storage space or only in the first storage space. If the data is stored in the second storage space the data is obtained from the second storage space and then communicated to the requesting entity.

To enable user interaction with the computing device an input device can represent any number of input mechanisms such as a microphone for speech a touch sensitive screen for gesture or graphical input keyboard mouse motion input speech and so forth. An output device can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances multimodal systems can enable a user to provide multiple types of input to communicate with the computing device . The communications interface can generally govern and manage the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.

Storage device is a non volatile memory and can be a hard disk or other types of computer readable media which can store data that are accessible by a computer such as magnetic cassettes flash memory cards solid state memory devices digital versatile disks cartridges random access memories RAMs read only memory ROM and hybrids thereof.

The storage device can include software modules for controlling the processor . Other hardware or software modules are contemplated. The storage device can be connected to the system bus . In one aspect a hardware module that performs a particular function can include the software component stored in a computer readable medium in connection with the necessary hardware components such as the processor bus display and so forth to carry out the function.

Chipset can also interface with one or more communication interfaces that can have different physical interfaces. Such communication interfaces can include interfaces for wired and wireless local area networks for broadband wireless networks as well as personal area networks. Some applications of the methods for generating displaying and using the GUI disclosed herein can include receiving ordered datasets over the physical interface or be generated by the machine itself by processor analyzing data stored in storage or . Further the machine can receive inputs from a user via user interface components and execute appropriate functions such as browsing functions by interpreting these inputs using processor .

It can be appreciated that exemplary systems and can have more than one processor or be part of a group or cluster of computing devices networked together to provide greater processing capability.

For clarity of explanation in some instances the present technology may be presented as including individual functional blocks including functional blocks comprising devices device components steps or routines in a method embodied in software or combinations of hardware and software.

In some embodiments the computer readable storage devices mediums and memories can include a cable or wireless signal containing a bit stream and the like. However when mentioned non transitory computer readable storage media expressly exclude media such as energy carrier signals electromagnetic waves and signals per se.

Methods according to the above described examples can be implemented using computer executable instructions that are stored or otherwise available from computer readable media. Such instructions can comprise for example instructions and data which cause or otherwise configure a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Portions of computer resources used can be accessible over a network. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language firmware or source code. Examples of computer readable media that may be used to store instructions information used and or information created during methods according to described examples include magnetic or optical disks flash memory USB devices provided with non volatile memory networked storage devices and so on.

Devices implementing methods according to these disclosures can comprise hardware firmware and or software and can take any of a variety of form factors. Typical examples of such form factors include laptops smart phones small form factor personal computers personal digital assistants and so on. Functionality described herein also can be embodied in peripherals or add in cards. Such functionality can also be implemented on a circuit board among different chips or different processes executing in a single device by way of further example.

The instructions media for conveying such instructions computing resources for executing them and other structures for supporting such computing resources are means for providing the functions described in these disclosures.

Although a variety of examples and other information was used to explain aspects within the scope of the appended claims no limitation of the claims should be implied based on particular features or arrangements in such examples as one of ordinary skill would be able to use these examples to derive a wide variety of implementations. Further and although some subject matter may have been described in language specific to examples of structural features and or method steps it is to be understood that the subject matter defined in the appended claims is not necessarily limited to these described features or acts. For example such functionality can be distributed differently or performed in components other than those identified herein. Rather the described features and steps are disclosed as examples of components of systems and methods within the scope of the appended claims.

