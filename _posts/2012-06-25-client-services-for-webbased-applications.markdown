---

title: Client services for web-based applications
abstract: A system for acquiring access to a web-based application includes one or more computer-readable storage media and an application (e.g., a web browser) for accessing and retrieving over a network a plurality of resources. The system also includes a program interface embodied on the one or more computer-readable storage media. The program interface is configured to present a common set of application program interfaces (APIs) that can be used by the application to demonstrate that a user of the application is entitled to access a first resource. The system also includes programming logic configured to determine if the user of the application is authorized to access the first resource. If it is determined that authorization has not been established to access the first resource, the application is directed to communicate with a marketplace to obtain authorization to access the first resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09262593&OS=09262593&RS=09262593
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09262593
owner_city: Redmond
owner_country: US
publication_date: 20120625
---
Web based applications are becoming more and more common. One type of web based application is applications that reside on a server and which are accessed as a service using a web browser executed on a client device. Such web based applications are sometimes referred to as hosted web applications. Another type of web based applications is applications that are downloaded and installed into the web browser on the client device. Such web based applications are sometimes referred to as packaged applications.

The line between conventional applications and web based applications is beginning to blur significantly particularly with the deployment of HTML5. Using HTML5 and an appropriate browser a developer can deliver to a user full fidelity applications with services that previously were only available from installed applications i.e. locally stored data and application code having local access to devices . Accordingly application delivery is shifting from a download install mechanism to a web browser distributed mechanism.

Today mobile applications for mobile computing platforms are typically monetized via a marketplace where users are charged a fee before downloading and installing an application. This mechanism is usually tied to the mobile platform itself which provides the marketplace application and connects to a back end service where payment is made and the application is distributed. With web based applications however such a marketplace process is not readily available. As a consequence the individual application providers are left to provide for themselves the key marketplace services of monetization reputation building advertising and so on. Such application providers usually have to tie directly into another service to collect a fee for the use of their web based applications which then eliminates the key marketplace advantages of a unified easy billing mechanism for users as well as billing alternatives such as mobile operator billing.

In one particular implementation a set of Application Programming Interfaces APIs are made available directly from a web browser which enable web based application developers and providers to access them directly in order to provide services such as validating an application purchase billing advertising and so on. Web based applications can call into this set of APIs to determine for instance if the user has paid for the use of the application. If not the APIs direct the user to a marketplace or store which may be either a locally installed software component or module e.g. an application hosted by the computing device or a remotely located service that enables a user to make purchases using a variety of payment authorization mechanisms. In some cases the user may have a pre established account with the marketplace or store which may automatically be charged at the time of purchase thereby eliminating the need for the user to enter a credit card number or the like.

In one embodiment if the user purchases or is otherwise authorized to access the web based application a token or the like is saved on the client platform hosting the web browser. When the user subsequently attempts to access the web based application the APIs can send the token to the web based application provider to demonstrate that payment has already been made.

One advantage of this approach is that web based application developers and providers can leverage the marketplace model that is used by mobile application developers and providers. In this way web based applications can be easily made available for purchase without substantial effort on the part of the developers and or providers.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Source serves as the source of a web based application. For example source can be a website or service that is accessible to the computing devices . The source allows users of the computing devices to access web based applications. In some embodiments a component of source is an application that runs on the computing device and makes source accessible via the network . Source may include one or more servers which host the website and or services being offered.

Network provides a communication infrastructure between computing devices and source . Network may be any type of wide area metropolitan area or local area network. In addition network may comprise both wired and wireless components. In some embodiments network may be implemented on the Internet which is the well known global network of interconnected computers enabling users to share information. The components and protocols employed by network are well known to those skilled in the art.

Computing devices may be any number of different types of computing devices including desktop computers laptop computers handheld computers personal digital assistant PDA devices mobile telephone devices smartphones tablets media player devices and the like.

The web based applications available from the source in may be accessed through a front end software application such as a web browser system with which computing device is provided. Web browser system may include any suitable web browser such as Internet Explorer available from Microsoft for example. Web based applications may include hosted or cloud based applications which refer to off site or remote applications that are provided to users. Web based applications may also include applications which are downloaded in whole or in part to the computing device or other storage medium and accessed through the web browser.

As previously mentioned the present disclosure allows a web browser user to purchase access to web based applications using a marketplace model in which the user may have already established an account for purpose of obtaining software applications. This functionality can be provided by incorporating into the web browser a set of application programming interfaces APIs which can be directly accessed by the application developer. In one implementation for example a user attempts to access a web based application at a particular Universal Resource Locator URL e.g. www.mywebapp.com . The web based application determines that the user is running a web browser which provides this set of APIs. The APIs may be directly built into the web browser. The web based application or other component calls into these APIs which determines whether the user has previously paid for access to the web based application. If not the APIs direct the user to a local marketplace or store where payment can be made. Once the user pays for the application a token or other indicia of proof that payment has been made is saved on the computing device. When the user subsequently attempts to access the web based application the application provider can call the APIs to determine if the user has in fact been granted access. The APIs in turn check for the presence of the token or the like and either sends the token to the application provider or otherwise indicates to the application provider that the user is entitled to access the web based application.

In some implementations the marketplace or store to which the user is directed may be either a locally installed software component or module e.g. an application hosted by the computing device or a remotely located service that enables a user to make purchases using a variety payment authorization mechanisms. The set of APIs may examine the system configuration e.g. a registry key to determine whether a locally installed marketplace software component or a redirection to a website should be loaded for payment. In this way the computing device itself mediates payment based on how it is configured to pay web based application developers

Program interface interprets function calls from web based applications and affiliated websites and servers such that the function calls are received in a format that is suitable for execution by the programming logic and web browser . This ensures that programming logic will operate in a consistent and reliable manner across a variety of different web browser types and also makes development easier by not requiring a developer to be concerned with web browser specific implementation details.

Program interface may include a set of APIs. In one particular implementation the set of APIs includes a Component Object Model COM interface. The COM interface is a platform for software componentry used to enable interprocess communication and dynamic object creation in any programming language that supports the compatible technology. The COM interface is part of Windows API designed to access the components of Internet Explorer . Of course other types of programming interfaces may be used in place of the COM interface as program interface especially when web browser is an alternative to Internet Explorer .

Programming logic cooperates with the program interface and the web browser to facilitate payment for web based applications. In particular when the program layer receives a function call from a web based application to which a user wishes to obtain access programming logic determines if the user is already authorized to obtain such access. For example the programming logic may search a memory storage unit for a token or the like which demonstrates that the user is authorized to access the web based application. The token may contain access restrictions such as a validity period etc. If the token or the like is found the programming logic may cause the program interface to send either the token or some other proof of authorization to the website application. In some implementations the token may serve as authentication credentials as well as authorization credentials. If authentication as well as authorization is required by the website the processes of authentication and authorization can be distinct and separate from one another or they may be combined. Of course other authorization techniques may be used instead of or in addition to token based authorization.

In some implementations the web browser system described above may operate in conjunction with or even be integrated with an electronic wallet application that may reside on the computing device. Electronic wallet applications are generally capable of storing a wide variety of different types of payment accounts. The user only needs to enter the information once into the payment accounts which can then be used to make purchases from a wide variety of different vendors. Such information typically includes credit card information e.g. credit card numbers security information such as CVN codes expiration dates login and password information and possibly other personal information. Accordingly the electronic wallet will include the information needed to purchase access to the web based application. In this case the web browser system may include additional APIs to access the electronic wallet at the time of purchasing access to a web based application. These APIs may provide an integrated series of menus or interfaces allowing the user to both request and purchase access to a web based application without having a previously established account with the marketplace.

As previously mentioned the web browser system discussed herein may be used to access other services. For instance in some implementations the web browser system may be used for device mediated advertising. For example the web based application may call the set of APIs and pass it a URI or developer ID which the APIs use to retrieve advertisements that are displayed in the web based application. Among other things this approach can be used to facilitate advertisement localization. For instance the user may be presented with advertisements targeted to the country in which the user is located or even the precise location itself.

The web browser interfaces to the protocol stack via an application layer interface . The application layer interface typically implements at least aspects of the hypertext transfer protocol HTTP or other suitable protocols. Hence the application layer interface may in general implement any application layer interface. The application layer interface may likewise implement session layer and presentation layer functionality in accordance with the OSI model.

The application layer interface is operatively coupled to a markup language parser . The markup language parser parses the application layer information. In current systems the application layer data typically involves HTML XML web pages or more generally any type of markup or document structure language.

The markup language parser is coupled to a browser GUI graphical user interface . The GUI may involve a standard web browser GUI as is currently provided by Microsoft Explorer . Alternatively the browser GUI may be specialized for use with portable or hand held devices. Hence the browser GUI may use audio signals in addition to or instead of graphic signals. In general the browser GUI is a user interface that allows a user to interact with the web browser to enter network requests and to receive view or hear information obtained from the network. The browser GUI may involve a mouse pointer device a speech recognition interface a touch screen a set of physical or virtual buttons or a standard windows based display.

A markup language processor is operatively coupled to the markup language parser . The markup language processor is optionally operatively coupled to an output document . The output document may be stored in the memory to include disk. The output document is also coupled to the browser GUI . It should be noted that a given embodiment may omit certain connections and may use some connections shown as bidirectional in only one direction.

The computing environment is not intended to suggest any limitation as to scope of use or functionality of the technology as the technology may be implemented in diverse general purpose or special purpose computing environments. For example the disclosed technology may be implemented with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers and the like. The disclosed technology may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules or instructions may be located in both local and remote memory storage devices.

With reference to the computing environment includes at least one central processing unit and memory . In this most basic configuration is included within a dashed line. The central processing unit executes computer executable instructions and may be a real or a virtual processor. In a multi processing system multiple processing units execute computer executable instructions to increase processing power and as such multiple processors can be running simultaneously. The memory may be volatile memory e.g. registers cache RAM non volatile memory e.g. ROM EEPROM flash memory etc. or some combination of the two. The memory stores software that can for example implement the technologies described herein. A computing environment may have additional features. For example the computing environment includes storage one or more input devices one or more output devices one or more communication connections and one or more touch screens . An interconnection mechanism not shown such as a bus a controller or a network interconnects the components of the computing environment . Typically operating system software not shown provides an operating environment for other software executing in the computing environment and coordinates activities of the components of the computing environment .

The storage may be removable or non removable and includes magnetic disks magnetic tapes or cassettes flash memory CD ROMs CD RWs DVDs or any other non transitory storage medium which can be used to store information and that can be accessed within the computing environment . The storage stores instructions for the software which can implement technologies described herein.

The input device s may be a touch input device such as a keyboard keypad mouse pen or trackball a voice input device a scanning device proximity sensor image capture device or another device that provides input to the computing environment . For audio the input device s may be a sound card or similar device that accepts audio input in analog or digital form or a CD ROM reader that provides audio samples to the computing environment . The output device s may be a display printer speaker CD writer or another device that provides output from the computing environment . The touch screen can act as an input device e.g. by receiving touch screen input and as an output device e.g. by displaying a list of downloaded applications to notify a user .

In some implementations the various input devices may support natural user interface NUI methods. Examples of NUI methods include those relying on speech recognition touch and stylus recognition gesture recognition both on screen and adjacent to the screen air gestures head and eye tracking voice and speech vision touch gestures and machine intelligence. Specific categories of NUI technologies on which Microsoft is working include touch sensitive displays voice and speech recognition intention and goal understanding motion gesture detection using depth cameras such as stereoscopic camera systems infrared camera systems rgb camera systems and combinations of these motion gesture detection using accelerometers gyroscopes facial recognition 3D displays head eye and gaze tracking immersive augmented reality and virtual reality systems all of which provide a more natural interface as well as technologies for sensing brain activity using electric field sensing electrodes EEG and related methods .

The communication connection s enable communication over a communication medium e.g. a connecting network to another computing entity. The communication medium conveys information such as computer executable instructions compressed graphics information or other data in a modulated data signal.

Computer readable media are any available media that can be accessed within a computing environment . By way of example and not limitation with the computing environment computer readable media include memory and or storage . As should be readily understood the term computer readable storage media includes non transitory storage media for data storage such as memory and storage and not transmission media such as modulated data signals.

Having described and illustrated the principles of our innovations in the detailed description and accompanying drawings it will be recognized that the various embodiments can be modified in arrangement and detail without departing from such principles. For example any technologies described herein for capturing still photos can also be adapted for capturing video. It should be understood that the programs processes or methods described herein are not related or limited to any particular type of computing environment unless indicated otherwise. Various types of general purpose or specialized computing environments may be used with or perform operations in accordance with the teachings described herein. Elements of embodiments shown in software may be implemented in hardware and vice versa.

In view of the many possible embodiments to which the principles of the disclosed invention may be applied it should be recognized that the illustrated embodiments are only preferred examples of the invention and should not be taken as limiting the scope of the invention. Rather the scope of the invention is defined by the following claims. We therefore claim as our invention all that comes within the scope of these claims and their equivalents.

