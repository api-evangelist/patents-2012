---

title: Generic multi-layer provisioning service management layer systems and methods
abstract: Network planning/provisioning systems and methods with a Generic Multi-Layer Provisioning (GMLP) service management layer that is configured to operate on any of deployed network elements and spoofed network elements to provide abstract service modeling thereon. The GMLP layer may include a spoofing engine configured to simulate network elements and provisioning functions associated therewith. The associated abstraction of the GMLP layer enables layer 0-4 topologies and services to be modeled, planned, and provisioned.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08683028&OS=08683028&RS=08683028
owner: Ciena Corporation
number: 08683028
owner_city: Hanover
owner_country: US
publication_date: 20120309
---
Generally the field of art of the present disclosure pertains to networking systems and methods and more particularly to network planning provisioning systems and methods with a Generic Multi Layer Provisioning GMLP service management layer configured to operate on any of deployed network elements and spoofed network elements to provide abstract service modeling thereon.

Conventionally element management systems EMS provide fault configuration accounting performance and security FCAPS functionality. These systems discover and maintain a database of physical components e.g. links ports devices and logical components e.g. virtual local area networks VLANs link aggregation . Management systems may then be used to configure certain physical and logical components to configure services. Configuration is often accomplished via configuration templates command line interface CLI scripting and service activation tasks such as provisioning wizards. Disadvantageously some existing management platforms require network elements to be physically present and available. Of note with some management platforms it may take significant periods of time to recover subsequent to the unavailability of one or more network elements. Some management platforms on the other hand just consider some devices unreachable. However a common constraint is that network elements must exist in the network.

In an exemplary embodiment a planning system includes a processing device including a generic multi layer provisioning service management layer configured to operate on any of deployed network elements and spoofed network elements to provide abstract service modeling thereon wherein the generic multi layer provisioning service management layer is communicatively coupled to a user interface and a management system. The generic multi layer provisioning service management layer may include a spoofing engine configured to simulate network elements and provisioning functions associated therewith. The generic multi layer provisioning service management layer may include a Service Abstraction Layer a Transport Protocol Abstraction Layer and a Hardware Abstraction Layer. The Service Abstraction Layer may be configured to interface through the user interface to provide creation of end to end services through an abstract model of termination points. The Transport Protocol Abstraction Layer may be configured to interface between the Service Abstraction Layer and the Hardware Abstraction Layer to enable creation of services independent of underlying transport connectivity protocols and encapsulations. The Hardware Abstraction Layer may be configured to interface to the management system to gather network element information therefrom and to form an abstract model of each network element including termination points system nodes links and aggregations.

The generic multi layer provisioning service management layer may include a Service Associated Object Oriented Relational Database providing a relational repository for services tunnels and device specific attributes. The spoofing engine may be configured to intercept any request between the Service Abstraction Layer the Transport Protocol Abstraction Layer and the Hardware Abstraction Layer related to the spoofed network elements and to provide an appropriate response thereto. The generic multi layer provisioning service management layer may include a Transaction Language 1 and Simple Network Management Protocol library providing device discovery. The generic multi layer provisioning service management layer may be configured to model networking components including connectivity group components protection type components service type components and resource tracking components. The connectivity group components may utilize graph theory for building blocks of connectivity objects with the objects including one of an Order 2 object and an Order 2 object. The generic multi layer provisioning service management layer may be configured to provision a Carrier Ethernet service.

In another exemplary embodiment a network system includes a planning provisioning system a management system communicatively coupled to the planning provisioning system at least one network element communicatively coupled to the management system and at least one spoofed network element managed in the planning provisioning system wherein the planning provisioning system is configured to implement a generic multi layer provisioning service management layer configured to operate on the at least one network element and the at least one spoofed network element to provide abstract service modeling thereon. The generic multi layer provisioning service management layer may include a Service Abstraction Layer a Transport Protocol Abstraction Layer and a Hardware Abstraction Layer. The generic multi layer provisioning service management layer may include a spoofing engine configured to simulate network elements and provisioning functions associated therewith. The Service Abstraction Layer may be configured to interface through the user interface to provide creation of end to end services through an abstract model of termination points. The Transport Protocol Abstraction Layer may be configured to interface between the Service Abstraction Layer and the Hardware Abstraction Layer to enable creation of services independent of underlying transport connectivity protocols and encapsulations. The Hardware Abstraction Layer may be configured to interface to the management system to gather network element information therefrom and to form an abstract model of each network element including termination points system nodes links and aggregations. The generic multi layer provisioning service management layer may be configured to provision a Carrier Ethernet service.

In yet another exemplary embodiment a network planning method includes obtaining information from a management system related to deployed network elements spoofing at least one network element abstracting each of the deployed network elements and the at least one spoofed network element through a plurality of managed objects and performing service modeling on the deployed network elements and the at least one spoofed network through the plurality of managed objects.

Referring to in an exemplary embodiment a Carrier Ethernet network includes two network elements interconnected therebetween by a link . Further the network elements are communicatively coupled to a management system via a network . As described herein Carrier Ethernet is a general term utilized to cover extensions to Ethernet for carrier level service. For example these extensions may include Operations Administration and Maintenance OAM standardized services e.g. E Line E LAN etc. ITU R G.8032v1 and v2 Ethernet Shared Protection Rings the contents of which are herein incorporated by reference and the like. The Metro Ethernet Forum MEF metroethernetforum.org is involved in defining standards for Carrier Ethernet. Conceptually Carrier Ethernet includes both a service delivery function and a network management function. Thus the Carrier Ethernet network includes both the network elements i.e. for service delivery and the management system i.e. for network management .

Referring to in an exemplary embodiment a block diagram illustrates functionality of the management system relative to the network elements and northbound interfaces NBIs . The management system may be built upon a framework which provides Fault Configuration Accounting Performance and Security FCAPS network management functions. Some additional functions include topology device and service discovery as well as device and service inventory. Of note end users utilize the management system to provide discovery inventory and fault management functions. In addition to the framework and the functions some end users may use standard or customized templates to perform single ended device and service provisioning. End users may also utilize custom built templates and scripts to perform customer specific provisioning tasks. Capability Application Programming Interfaces APIs may reside between the northbound interfaces and the management system . These APIs may include for example resource performance monitoring configuration assurance etc. With separate organizations developing provisioning related templates some effort is being duplicated. In addition the service and network management functionality of the templates would be advantageous to any end user. Thus various functionality associated with the functions and the templates may be combined in a Generic Multi Layer Provisioning GMLP layer.

Referring to in an exemplary embodiment a block diagram illustrates functionality of a Generic Multi Layer Provisioning GMLP layer relative to the management system the network elements and the northbound interfaces . The GMLP layer enables a completely abstract service modeling function. This abstraction enables layer 0 4 topologies and services to be modeled and provisioned. Applications and user interfaces UIs may be built above the GMLP layer to provide customer specific provisioning tools. To avoid duplicative efforts the GMLP layer includes a Generic Management Component Library GMCL of commonly used APIs and functions. This way systems engineers and professional services engineers can focus efforts on truly unique customer requirements reducing cost and time to market. While the GMLP layer is positioned between the Capability APIs and one or more management systems the GMLP layer does not prohibit direct interfacing. The northbound interfaces can still interface with the management systems to access network element functions. For instance trap and alarm monitoring may be performed directly between the management system and the Capability API such as Resource Monitoring.

Referring to in an exemplary embodiment a block diagram illustrates components within the GMLP layer . In addition to the GMCL the GMLP layer includes several components such as a Service Abstraction Layer SAL a Transport Protocol Abstraction Layer TPAL a Hardware Abstraction Layer HAL a Spoofing Engine a Service Associated Object Oriented Relational Database DB a Simple Network Management Protocol SNMP Transaction Language 1 TL1 Library and the like. Network Operators use the SAL to create end to end services such as Ethernet Private Line EPL . It is a completely abstract service abstraction layer. Attributes such as bandwidth parameters are associated with the service in the form of a device independent traffic profile. This information is stored in the service associated object oriented relational database . Since the SAL uses an abstract model of termination points transport services may also be described and created. While described herein relative to Ethernet the SAL and hence the GMLP layer is not restricted to Ethernet services or topologies. As an example the SAL may be used to provision a ring using SONET SDH OTN.

With the GMLP layer services are created independent of underlying transport connectivity protocols and encapsulations. The express purpose of the TPAL is to alleviate the operator from knowing and dealing with protocols deployed in the network . For instance a service could be delineated as a single Customer Tagged service yet traverse both Provider Backbone Bridging Traffic Engineering PBB TE Ethernet Switches Paths ESPs and Multiprotocol Label Switching MPLS Label Switched Paths LSPs seamlessly. The TPAL associates the appropriate hop by hop frame transforms with the service stored in the database to enable the transport of the service end to end across the network . The HAL performs two essential functions. First it utilizes the SNMP TL1 Library and a corresponding interface to TL1 and SNMP agents on the management system to gather more complete network element information. Second the HAL forms an abstract model of each network element including termination points system nodes links and aggregations. When services are ready to be deployed the HAL maps abstract services across the appropriate management system API instructing the management system to perform element configuration. This may be performed via TL1 commands Command Line Interface CLI commands via CLI or SNMP sets.

The database provides a relational repository for services tunnels and device specific attributes. The database inherently provides an audit trail and back out capabilities. In addition the database is portable to other servers for redundancy or scalability. An important capability of the GMLP layer is the ability to simulate network elements and provisioning functions. The GMLP layer supports the ability to import a customer s deployed network information device information and link database . Provisioning events may then be simulated using the imported network information. The Service Network Builder User Interface Application can be fully proven without any need for network access or disruption. This is accomplished via the Spoofing Engine . Anytime the GMLP layer attempts to access a simulated or spoofed device the Spoofing Engine intercepts the request and provides the appropriate response. As described herein spoofing such as a spoofed device for example refers to a simulated device or network element that is not physically present in a network but emulated by the GMLP layer such as through the Spoofing Engine . The optional SNMP TL1 Library provides a facility to perform a more complete device discovery. This can fill in vital information not previously discovered by the management system .

In addition to the foregoing other unique functionality may be included through the GMLP layer including a Supersetting Normalizing Function and a Resource Abstract Object Model in the SNMP TL1 Library the database being a Service Associated Object Oriented Relational Database a Simulator Planning Tool for Pre deployment Provisioning through the Spoofing Engine and a Dynamic Graphic User Interface GUI with Multi Path Selection through the Service Network Builder User Interface Application .

Through the use of abstraction the GMLP layer is able to model any networking component such as connectivity protection service and resource components. For example exemplary connectivity group components may include 

Each service may have service level assurance SLA attributes such as connectivity check latency and jitter measurements etc. Exemplary Resource tracking components may include 

Referring to in an exemplary embodiment the GMLP layer uses graph theory as the basic building blocks of connectivity objects. An object is either Order 2 or Order 2. illustrate a graphical representation of an order 2 connectivity object with including redundancy and without redundancy. Order 2 is a connectivity group that connects an ingress and an egress point. It inherently has redundancy between the two points . Resolving what the supporting service the actual connectivity between ingress point and egress point does how it is built and provisioned is another iteration of the same function. The function is called iteratively or recursively until the service is fully resolved. This results in a very small highly maintainable topology engine. illustrates a graphical representation of an order 2 connectivity object e.g. think bicycle wheel . Order 2 is a connectivity group that connects a set of connectivity points. It inherently has redundancy between the set of points. Order 2 is an atomic function and has no supporting service . For instance deploying G.8032 over spanning tree is practically impossible. Order 2 copes with both head drop and tail drop architectures. Whether you port drop transmit or port drop receive the architecture resolves the full set of connectivity including redundancy .

In an exemplary embodiment consider an Ethernet service delineated via IEEE 802.1Q Q VLAN tags. A point to point service may be represented via the order 2 diagram in . In this example connectivity between the end points is defined or described until the topology engine is called again. The diagram in shows the results of calling the topology engine. Is this example the IEEE 802.1Q service is delivered via an IEEE 802.1Qay PBB TE P pair of tunnels. Again connectivity between the two PBB TE endpoints is not defined or described until the topology engine is called. Once called it is determine that the PBB TE tunnels are carried via an ODU O channel as shown in . Once more connectivity between the two ODU endpoints is not defined or described until the topology engine is called. Once called it is determine that the ODU channel is delivered across an order 2 optical mesh topology such as those configured and maintained by a control plane as shown in .

Advantageously the GMLP service management layers SAL TPAL HAL may operate on either actual deployed topologies network elements or artificial pre deployed topologies network elements . This is accomplished by either deriving the topology device inventory from the management system or importing artificial network elements . Artificial network elements can be imported en masse or added manually. Other aspects of the GMLP layer include the spoofing engine that provides the necessary feedback for the service management layers and a per device flag that indicates if the network elements are artificial and disables polling of attributes such as traffic statistics. Once a device is populated in the database either discovered via underlying element management system or spoofed via artificial network element importing various GMLP layers can be populated including the SAL the TPAL and the service associated object oriented relational database with entire topology tunnels services.

Network operators can now run moves adds changes deletes MACD and can rebuild network configuration using the database . Exemplary actions can include import of Media Access Control MAC addresses and software versions for large numbers of devices and planning to add a node to build new nodes with appropriate hardware modules to allow device configurations to be built offline. The GMLP layer provides an ability to populate a topology and device inventory with devices not yet actually deployed. There are two primary benefits operators can plan network and service expansion and perform pre deployment provisioning. This may be referred to as ghost provisioning which can reduce service turn up time once the network element s are physically deployed. Planning tools are used to create or import new devices. The GMLP layer allows the ability to import a customer s deployed network and link database from existing configuration files as opposed to manual entry. An exemplary embodiment of the GMLP layer then sends queries to a given device. The spoofing engine in an exemplary embodiment provides responses as if the device actually exists in the network.

A significant benefit is network operators can save time money by testing and proving provisioning tools against their actual deployed network with very limited development setup cost. Operators or professional services personnel developers and or testers can be completely isolated from actual network and still develop prove real customer configurations. Neither the customer nor equipment manufacturers would incur sophisticated lab testing expenses and time using partial network topology in a lab. In an exemplary embodiment the GMLP layer allows provisioning tools for Tunnels and Ethernet Virtual Circuits to be tested against complex network topologies without requiring large amounts of lab hardware. Through the incremental addition of new Java methods for spoofing specific device queries the GMLP layer has been extended to generate base hardware configurations for networks that would be extremely expensive in capital and very resource intensive to build in a lab.

By leveraging all the existing management system capabilities the GMLP layer avoids the problems associated with traditional offline Planning systems in that there is no porting transfer of data models between the management system and Planning system. The applications tools developed are completely unaware of whether they are running against a real network or against the simulated one. This minimizes development time maximizes reusability and improves productivity. With minor additional front end development for example using the inbuilt northbound interfaces and or the JAVA Client it would be possible to offer this as a Cloud service.

Referring to in an exemplary embodiment a conceptual network diagram illustrates a network for use with the GMLP layer . The network may be viewed with a network element layer a device mediation layer a user interface layer and a service development layer . The network element layer includes multiple interconnected network elements . The device mediation layer is between the network element layer and the user interface layer and provides a mechanism for interconnectivity between the management system and the network elements for purposes of inventory fault management performance management configuration management etc. The user interface layer provides a interface to the management system for a network operator and is between the service development layer and the device mediation layer . The service development layer conceptually includes various network deployments such as PBB TE ELine ELAN G.8032 MPLS etc.

In various exemplary embodiments the GMLP layer may be viewed as intermediate between the service development layer and the user interface layer . The GMLP layer may be referred to as an Integrated Services Management ISM layer. In particular the ISM layer is a generalization of a configuration approach taken by network operators for automating service deployment. The ISM provides a framework for creating deploying modifying and terminating connections in the network with embedded support for resource tracking CIR EIR booked and maximum robust Audit logging for all operations deployment and Backout option etc.

Relative to Carrier Ethernet the MEF Ethernet Virtual Connection EVC model is the preference for provisioning a service. The MEF EVC is defined in MEF 10.1 Ethernet Services Attributes Phase 2 2006 the contents of which are herein incorporated by reference. Of note a front office user is not interested in anything to do with network devices the network elements or complexities associated therewith. Thus from an ISM perspective the end to end architecture should not dictate the provisioning model. The objectives of the ISM GMLP layer include intelligence in the OSS Operations Support System interfaces platform independence an algorithmic approach vs. Heuristics and the like. The ISM GMLP layer provides a service model that defines the use of the network that is the device or network element is subordinate to the service. For example an Ethernet Private Line EPL service has specific characteristics that drive the way the network elements are deployed such as exclusive use of UNI N User To Network Interface Network Side ports and only two UNI ports. The network element may only recognize it has a virtual switch VS and an unknown number of UNI ports. In terms of implementation the implementation is the only network element dependent characteristics of the ISM GMLP layer . That is once the service characteristics are defined with the ISM GMLP layer other layers such as the device mediation layer provide physical implementation.

Referring to in an exemplary embodiment a block diagram illustrated a protocol stack for the GMLP layer . In particular the protocol stack maps the SAL TPAL and HAL layers from the GMLP layer to associated functionality. The objective of the GMLP layer is to build a number of abstraction layers. The HAL layer enables new hardware to be added quickly via software and to the management system . The TPAL layer acts as a normalization layer to hide platform implementation decisions constraints. The HAL layer may include an SNMP and a database functionality. A resource mediation layer may reside between the HAL and the SAL TPAL . The SAL TPAL may include path computation engine s service planning and transport planning . Additionally the protocol stack may include northbound interfaces graphical user interfaces and application programming interfaces thereon.

Referring to in an exemplary embodiment a block diagram illustrates a server which may be used in the network for the management system and or as a stand alone device to implement a planning provisioning system with the GMLP layer . The server may be a digital computer that in terms of hardware architecture generally includes a processor input output I O interfaces a network interface a data store and memory . It should be appreciated by those of ordinary skill in the art that depicts the server in an oversimplified manner and a practical embodiment may include additional components and suitably configured processing logic to support known or conventional operating features that are not described in detail herein. The components and are communicatively coupled via a local interface . The local interface may be for example but not limited to one or more buses or other wired or wireless connections as is known in the art. The local interface may have additional elements which are omitted for simplicity such as controllers buffers caches drivers repeaters and receivers among many others to enable communications. Further the local interface may include address control and or data connections to enable appropriate communications among the aforementioned components.

The processor is a hardware device for executing software instructions. The processor may be any custom made or commercially available processor a central processing unit CPU an auxiliary processor among several processors associated with the server a semiconductor based microprocessor in the form of a microchip or chip set or generally any device for executing software instructions. When the server is in operation the processor is configured to execute software stored within the memory to communicate data to and from the memory and to generally control operations of the server pursuant to the software instructions. The I O interfaces may be used to receive user input from and or for providing system output to one or more devices or components. User input may be provided via for example a keyboard touch pad and or a mouse. System output may be provided via a display device and a printer not shown . I O interfaces can include for example a serial port a parallel port a small computer system interface SCSI a serial ATA SATA a fibre channel Infiniband iSCSI a PCI Express interface PCI x an infrared IR interface a radio frequency RF interface and or a universal serial bus USB interface.

The network interface may be used to enable the server to communicate on a network. The network interface may include for example an Ethernet card or adapter e.g. 10BaseT Fast Ethernet Gigabit Ethernet 10 GbE or a wireless local area network WLAN card or adapter e.g. 802.11a b g n . The network interface may include address control and or data connections to enable appropriate communications on the network. The network interface can utilize Internet Protocol IP or other higher level application protocols e.g. middleware communication interfaces such as WebLogic . A data store may be used to store data. The data store may include any of volatile memory elements e.g. random access memory RAM such as DRAM SRAM SDRAM and the like nonvolatile memory elements e.g. ROM hard drive tape CDROM and the like and combinations thereof. Moreover the data store may incorporate electronic magnetic optical and or other types of storage media. In one example the data store may be located internal to the server such as for example an internal hard drive connected to the local interface in the server . Additionally in another embodiment the data store may be located external to the server such as for example an external hard drive connected to the I O interfaces e.g. SCSI or USB connection . In a further embodiment the data store may be connected to the server through a network such as for example a network attached file server.

The memory may include any of volatile memory elements e.g. random access memory RAM such as DRAM SRAM SDRAM etc. nonvolatile memory elements e.g. ROM hard drive tape CDROM etc. and combinations thereof. Moreover the memory may incorporate electronic magnetic optical and or other types of storage media. Note that the memory may have a distributed architecture where various components are situated remotely from one another but can be accessed by the processor . The software in memory may include one or more software programs each of which includes an ordered listing of executable instructions for implementing logical functions. The software in the memory includes a suitable operating system O S and one or more programs . The operating system essentially controls the execution of other computer programs such as the one or more programs and provides scheduling input output control file and data management memory management and communication control and related services. The one or more programs may be configured to implement the various processes algorithms methods techniques etc. described herein. For example the server may be used to implement the management system and or a planning provisioning system with the GMLP layer with the various programs configured to implement various functions associated therewith.

Referring to in an exemplary embodiment a block diagram illustrates an exemplary implementation of a network element for use with the GMLP layer . In this exemplary embodiment the network element is an Ethernet network switch for illustration purposes but those of ordinary skill in the art will recognize the Carrier Ethernet systems and methods described herein contemplate other types of network elements and other implementations. In this exemplary embodiment the network element includes a plurality of blades interconnected via an interface . The blades are also known as line cards line modules circuit packs pluggable modules etc. and refer generally to components mounted within a chassis shelf etc. of a data switching device i.e. the network element . Each of the blades may include numerous electronic devices and or optical devices mounted on a circuit board along with various interconnects including interfaces to the chassis shelf etc. Two exemplary blades are illustrated with line blades and control blades . The line blades generally include data ports such as a plurality of Ethernet ports. For example the line blade may include a plurality of physical ports disposed on an exterior of the blade for receiving ingress egress connections. Exemplary port types may include but not limited to GbE 10 GbE 40 GbE 100 GbE Ethernet over SONET SDH 2.5G 10G 40G etc. Ethernet over Optical Transport Network OTU2 OTU3 OTU4 etc. and the like. Additionally the line blades may include switching components to form a switching fabric via the interface between all of the data ports allowing data traffic to be switched between the data ports on the various line blades . The switching fabric is a combination of hardware software firmware etc. that moves data coming into the network element out by the correct port to the next network element. In general the switching fabric may include switching units or individual boxes in a node integrated circuits contained in the switching units and programming that allows switching paths to be controlled.

The control blades include a microprocessor memory software and a network interface . Specifically the microprocessor the memory and the software may collectively control configure provision monitor etc. the network element . The network interface may be utilized to communicate with a management system such as the management system the server and the like. Additionally the control blades may include a database that tracks and maintains provisioning configuration operational data and the like. The database may include a management information base MIB which may include CFM objects. Of note the Carrier Ethernet systems and methods described herein relate in exemplary embodiments to modification of the CFM objects. Further the control blades may include an Simple Network Management Protocol SNMP Agent configured to operate SNMPv2 SNMPv3 etc. or some other network management communication protocol. In this exemplary embodiment the network element includes two control blades which may operate in a redundant or protected configuration such as 1 1 1 1 etc. In general the control blades maintain dynamic system information including Layer two forwarding databases protocol state machines and the operational status of the ports within the network element . Additionally the control blades may be configured to provide CFM and the Ethernet systems and methods for dynamic configuration thereof.

Referring to in an exemplary embodiment a screen diagram illustrates a Graphical User Interface GUI associated with a planning provisioning system using the GMLP layer . The GMLP layer described herein may be incorporated into a planning provisioning system such as operating on the server the management system etc. In particular the planning provisioning system using the GMLP layer may include the GUI for user interaction whereby a user may point and click on network elements for planning provisioning thereof. Further with the GMLP layer and the spoofing engine the planning provisioning system may operate on non existent network elements i.e. spoofed network elements . Advantageously the spoofing engine enables operation in an off line manner. In an exemplary embodiment the planning provisioning system may include provisioning tools such as PBB TE Tunnel builder EPL service builder and EVPL Ethernet Virtual Private Line builder. The planning provisioning system may also include other tools to manage services such as tools to move one PBB TE tunnel group extract logfiles for auditing and debugging an Augment extractor to extract readable CLI for deployment and termination reporting tools for tunnel service and inventory reports and the like.

Referring to in an exemplary embodiment a diagram illustrate what aspects may be provisioned in an EPL service using the planning provisioning system on a single network element . From a virtual switch associated with the network element the planning provisioning system may support provisioning of a Connectivity Fault Management CFM service a PBB TE service a sub port service and a control protocol tunneling service . For the CFM service the planning provisioning system may support provisioning of Y.1731 loss Y.1731 delay and jitter CFM Maintenance End Points MEP and CFM remote MEPs RMEP . The virtual switch may also directly connect to a CPU sub interface for the CFM service . The PBB TE service and the sub port service may each be configured with a traffic service meter profile and performance management.

Referring to in an exemplary embodiment a flowchart illustrates an EPL EVPL provisioning method and associated GUI screens using the planning provisioning system. From a planning step step base options are selected for an EPL EVPL service step . For example the EPL EVPL service may include a network network interface NNI step . If an NNI is selected NNI options may be determined step . Next service options are selected step . The EPL EVPL service may include rate limiting step . If rate limiting is selected rate limiting options may be determined step . The provisioning method provides path derivation step and this may be via a PBB TE tunnel group step and or using customer defined preferences step . Finally the EPL EVPL service provisioning is complete step .

Referring to in an exemplary embodiment a flowchart illustrates a PBB TE tunnel provisioning method and associated GUI screens using the planning provisioning system. From a planning step step characteristics are selected for a PBB TE tunnel step . For example the provisioning method may auto select port step and if not the user may select a port step . The user may provide a backbone Virtual Local Area Network VLAN identifier BVID step . The provisioning method may provide path derivation step utilizing customer preferences step . Finally the PBB TE tunnel provisioning is complete step .

The planning provisioning system with the GMLP layer may provide various additional GUIs templates etc. for other services besides Carrier Ethernet. In various exemplary embodiment the planning provisioning system collects parameters from multi stage GUIs templates etc. The GUIs may be context sensitive i.e. subsequent screens menus are based on selected fields from previous screens menus. The planning provisioning system may use serialized objects to pass on detailed information across stages. The planning provisioning system and the GMLP layer may perform object manipulation inside of native Java classes. Files are sourced to minimize risk and may include a customizable preferences file with Constants static values ports to be used as NNI . . . Parameter ranges reserved VIDs BVIDs provider VIDs . . . . Security values to hide user login information Algorithms to define naming rules Java methods etc.

Referring to in exemplary embodiments relative to a Carrier Ethernet implementation object models are illustrated for the planning provisioning system with the GMLP layer . includes an object model showing objects for the GMLP layer and their relationship to management system objects. illustrates an object model hierarchy and illustrates an association model for an order 2 network configuration. Note each of the models may include Java objects managed by the planning provisioning system. In the object model includes objects for the GMLP layer objects for the framework and objects for extensions from the management system . The various objects include a System Node a PBB TE node a link and a termination point. The System Node connects to an SNMP node in the objects and the link connects to a topology link managed object TopoLinkMo in the objects .

In the models illustrate a hierarchy of object models for the objects in the GMLP layer . For example under the PBB TE node object there may be various additional objects such as PBB TE remote bridge PBB TE tunnel group PBB TE service PBB TE tunnel pair PBB TE CFM service PBB TE encapsulation tunnel PBB TE decapsulation tunnel PBB TE transit PBB TE tunnel set PBB TE tunnel path PBB TE service end point VPLS service end point etc. Under the System node there may be objects for Ethernet service which has objects for EPL service ELAN service EVPL service etc. Under the Link object there may be termination point frame transform base frame transform Quality of Service transform traffic policer etc.

It will be appreciated that some exemplary embodiments described herein may include one or more generic or specialized processors or processing devices such as microprocessors digital signal processors customized processors and field programmable gate arrays FPGAs and unique stored program instructions including both software and firmware that control the one or more processors to implement in conjunction with certain non processor circuits some most or all of the functions of the methods and or systems described herein. Alternatively some or all functions may be implemented by a state machine that has no stored program instructions or in one or more application specific integrated circuits ASICs in which each function or some combinations of certain of the functions are implemented as custom logic. Of course a combination of the two approaches may be used. Moreover some exemplary embodiments may be implemented as a computer readable storage medium having computer readable code stored thereon for programming a computer server appliance device etc. each of which may include a processor to perform methods as described and claimed herein. Examples of such computer readable storage mediums include but are not limited to a hard disk an optical storage device a magnetic storage device a ROM Read Only Memory a PROM Programmable Read Only Memory an EPROM Erasable Programmable Read Only Memory an EEPROM Electrically Erasable Programmable Read Only Memory a Flash memory and the like.

Although the present disclosure has been illustrated and described herein with reference to preferred embodiments and specific examples thereof it will be readily apparent to those of ordinary skill in the art that other embodiments and examples may perform similar functions and or achieve like results. All such equivalent embodiments and examples are within the spirit and scope of the present disclosure and are intended to be covered by the following claims.

