---

title: Internet-accessible service for dynamic authentication and continuous assertion of trust level in identities
abstract: An authentication technique involves receiving an authentication request which includes a set of authentication factors and performing, in response to the authentication request, an authentication operation based on a set of authentication factors. An authentication result of the authentication operation identifies a particular trust category among a set of trust categories. Each trust category of the set defines a unique set of user permissions. The technique further involves providing the authentication result for use by a web application. The particular trust category identified by the authentication result defines a particular set of user permissions to be imposed by the web application. For example, the trust categories may take the form of trust levels such as Low, Med, and High which control access to certain resources. Furthermore, the technique involves providing periodic and/or random authentication requests to the authentication server to detect hijacking of the user session after successful initial authentication.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08925053&OS=08925053&RS=08925053
owner: EMC Corporation
number: 08925053
owner_city: Hopkinton
owner_country: US
publication_date: 20120516
---
This application claims the benefit under 35 U.S.C. 119 e of U.S. Provisional Application Ser. No. 61 602 759 entitled INTERNET ACCESSIBLE SERVICE FOR DYNAMIC AUTHENTICATION AND CONTINUOUS ASSERTION OF TRUST LEVEL IN IDENTITIES filed on Feb. 24 2012 the contents and teachings of which are hereby incorporated by reference in their entirety.

The subject matter of the present disclosure is related to the field of user authentication and continuous assertion of trust categories or levels in network delivered services such as web applications that provide access to resources in a secure manner.

Some web servers require a user of a client device to successfully authenticate before granting access to the user. For example the user may be required to supply a one time use passcode OTP from a hardware token that the user possesses in order to demonstrate that the user is legitimate i.e. to show that the user is not an imposter due to possession of the hardware token . As another example certain adaptive authentication factors about the user may be collected and assessed against previous behavior such as geo location of the client device or of the client device s ISP network time of day of the access attempt and access frequency to determine whether the user is legitimate. As yet another example the user may be required to answer a knowledge based authentication KBA question i.e. correctly respond to a question that the real user should be able to answer .

During such authentication an authentication server typically compares the current information obtained from the user s client device to expected information. If the information appropriately matches authentication is successful. If the information does not appropriately match authentication is considered unsuccessful.

When authentication is successful the user is granted access on the web server. When authentication is unsuccessful the user may be immediately provided with another opportunity to authenticate and if authentication is still unsuccessful the user is denied access on the web server.

Unfortunately there are deficiencies to the above described conventional approaches to user authentication. For example use of static forms of authentication alone such as simple password based authentication e.g. OTPs does not take into account additional factors such as where the user is located what device the user is using user access frequency and so on.

Additionally based on an initial successful authentication the identity and attributes of the user are usually communicated to the web server but there is no finer grained indication of a trust level of the authentication or a risk rating for the user. Nevertheless such information if available could help the web server make multiple authorization decisions throughout the user s session with the web server which can enhance security in many cases.

Furthermore the above described conventional authentication approaches only provide an indication of the user and his her trustworthiness at the beginning of the user s session. That is if a user s session were hijacked or the client device were compromised in mid session most web servers would not be aware of it. Accordingly security could be enhanced if some form of authentication were repeated during the user s session.

Also as the use of cloud applications and Internet destinations grows and user access become more mobile having authentication servers within a private enterprise network may provide insufficient performance and functionality. That is there is a need for an authentication service that is easily accessible to users wherever the users are located.

In contrast to the above described conventional approaches to authentication an improved technique involves user authentication which identifies trust categories defining user permissions or trust levels e.g. Low Med and High to control access to a set of resources. Such an improved technique may employ an authentication service hosted in the Internet a so called cloud based service that is accessible to a web server using a web based authentication protocol such as the Security Assertions Markup Language SAML exchange or a web services API e.g. SOAP REST etc. . Additionally such an improved technique may employ combinations of various types of user authentication e.g. standard authentication using a token which supplies one time use passcodes adaptive authentication knowledge based authentication combinations thereof etc. . Moreover such authentication may involve the web server periodically and or randomly redirecting the user session back to the authentication service to refresh or perhaps change the risk trust categorization and thus robustly and reliably handle certain types of attacks such as attempted hijacking of the user session. Also such an authentication service may be made available globally over the Internet in which case it may be truly central and may be used to widely reduce duplication of authentication services.

One embodiment is directed to a user authentication method performed within an electronic apparatus e.g. an authentication server connected to the Internet . The user authentication method includes receiving in response to an access request which requests access to a web application from a user device an authentication request which includes a set of authentication factors. The method further includes performing in response to the authentication request an authentication operation based on the set of authentication factors e.g. standard authentication adaptive authentication knowledge based authentication combinations thereof etc. . An authentication result of the authentication operation identifies a particular trust category among a set of trust categories. Each trust category or trust level defines a unique set of user permissions. The method further includes providing the authentication result for use by the web application. The particular trust category identified by the authentication result defines a particular set of user permissions to be imposed by the web application on the user device.

In some arrangements the trust categories take the form of trust levels such as Low Med High which control access to certain resources. For example depending on the current trust level the user may be allowed to or prevented from performing certain transactions accessing certain information changing certain control settings combinations thereof and so on.

Other embodiments are directed to systems apparatus e.g. enhanced client devices augmented web servers etc. processing circuits computer program products and so on. Some embodiments are directed to various methods electronic components and circuitry which are involved in such user authentication and continuous assertion of trust levels in network delivered services.

Improved techniques involve user authentication which identifies trust categories defining user permissions or user trust levels e.g. Low Med and High to control access to a set of resources. Such improved techniques may employ authentication services hosted in the Internet i.e. so called cloud based services that are accessible to a web server using a web based authentication protocol such as the Security Assertions Markup Language SAML exchange or a web services API e.g. SOAP REST etc. . Additionally such techniques may employ combinations of various types of user authentication e.g. standard authentication using a token which supplies one time use passcodes adaptive authentication knowledge based authentication etc. . Moreover such authentication may involve periodic and or random redirection by the web server to the authentication service to refresh or perhaps modify the risk trust categorization and thus robustly and reliably handle certain types of attacks such as an attempt to hijack the user session following a successful initial authentication. Also such authentication services may be made available globally over the Internet.

Each user device is constructed and arranged to perform useful work on behalf of a user. For example users can run user level applications on the user devices to create and edit documents to exchange email or other forms of communication to run specialized applications to perform transactions etc. Such activity may involve locally running a browser application to access web resources on the web server . Examples of suitable user devices include appropriately provisioned desktop computers or workstations laptop or notebook computers tablets smart phones and so on.

The web server includes the above mentioned web resources and a front end which controls access to the resources . In particular in response to browser commands from the browser applications running on the user devices the front end establishes user sessions with the user devices and periodically and or randomly redirects the user sessions to the authentication server to initially authenticate as well as re authenticate the users of the user devices . During such a redirection event the authentication server i receives a new authentication request to authenticate a user of user device ii performs an authentication operation and iii outputs an authentication result identifying a current trust category for the user session. The web server receives the authentication result and enforces a set of user permissions based on the current trust category identified by the authentication result .

For example in the context of a file server a particular trust category may allow a user to access certain files while denying access to other files. As another example in the context of an online store a particular trust category may allow a user to shop certain online departments or make purchases under a certain dollar amount. As another example in the context of an online bank or brokerage a particular trust category may allow a user to view certain confidential data or transact business under a certain dollar amount and so on. In some arrangements the trust category takes the form of a trust level identifier which identifies a particular level of trust which falls along a point within a trust level range e.g. Low Med and High . In other arrangements such a trust level identifier precisely defines a set of user permissions .

The authentication server is constructed and arranged to perform authentication operations in response to authentication requests to authenticate users. As mentioned above each authentication operation outputs an authentication result having a current trust category which defines a set of user permissions to be imposed by the web server on a particular user. In some arrangements the authentication operation involves standard authentication e.g. a comparison of a current one time use passcode OTP from the user to an expected OTP. In some arrangements the authentication operation performs adaptive authentication based on a current risk posture of the user e.g. geo location access frequency etc. . In some arrangements the authentication operation performs knowledge based authentication KBA by challenging the user to respond to a question that the user should be able to correctly answer and so on.

The communications medium connects the various components of the electronic system together to enable these components to exchange electronic signals e.g. see the double arrow . At least a portion of the communications medium is illustrated as a cloud to indicate that the communications medium is capable of having a variety of different topologies including backbone hub and spoke loop irregular combinations thereof and so on. Along these lines the communications medium may include copper based data communications devices and cabling fiber optic devices and cabling wireless devices combinations thereof etc.

It should be understood that the electronic environment may include additional devices such as other web servers which may or may not be similarly supported by the authentication server . Furthermore the electronic environment may include a computer belonging to a possible attacker e.g. a fraudster a session hijacker etc. .

During operation a user of a user device initiates a user session with the web server . In particular the user provides the web server with a user identifying information e.g. a username or user number a PIN a password combinations thereof etc. via an initial exchange of web based messages.

In response the web server redirects the user session to the authentication server . In some arrangements the web server causes an authentication request to be sent from the user device to the authentication server . In other arrangements the web server sends an authentication request to the authentication server directly or indirectly through the user device .

When the authentication server receives the authentication request the authentication server performs an authentication operation and outputs an authentication result having a current trust category based on authentication factors of the authentication request . Such authentication factors may include the user identifying information initially provided by the user as well as additional information such as the time of day posture data collected from the user device and so on.

The web server receives the authentication result and provides the user of the user device with access which is based on the current trust category of the authentication result . In contrast to conventional authentication approaches the web server is able to specifically tailor user access permissions based on the current trust category e.g. allow only low security operations when the current trust category indicates relatively high risk allow higher security operations when the current trust category indicates relatively low risk etc. In some arrangements the authentication server sends the authentication result directly to the web server . In other arrangements the authentication server sends the authentication result to the web server directly or indirectly through the user device .

At this point the user is able to access various resources of the web server if authentication is successful. Additionally to maintain continuous trust assertion the web server periodically and or randomly redirects the user to authentication server to re authenticate. Since the trust category may change over time from authentication operation to authentication operation it should be understood that the web server in turn is able to modify its imposed level of security on the user by allowing or denying security operations based on an updated trust category . In some arrangements such redirection is transparent to the user and the amount of time between authentication attempts varies to prevent predictability of the authentication operations . In some arrangements the various components of the electronic system utilize a web based authentication protocol such as SAML or a web services API such as SOAP or REST.

For example in the context of SAML the front end of the web server may operate among other things as a SAML service provider. Additionally the user devices may operate among other things as user agents. Furthermore the authentication server may operate among other things as a SAML identity provider. Further details will now be provided with reference to .

The network interface is constructed and arranged to connect the authentication server to the communications medium . Accordingly the network interface enables the authentication server to communicate with the other components of the electronic environment .

The memory is constructed and arranged to hold a variety of software constructs to facilitate operation of the authentication server . In particular the control application directs the operation of the processing circuitry . Additionally the authentication database includes user profiles providing information used during authentication of the users.

The processing circuitry is constructed and arranged to perform the authentication operations . It should be understood that the processing circuitry can be implemented in a variety of ways including via one or more processors running specialized software application specific ICs ASICs field programmable gate arrays FPGAs and associated programs discrete components analog circuits other hardware circuitry combinations thereof and so on. In the context of one or more processors running specialized software a computer program product is capable of delivering all or portions of the software to the authentication server . The computer program product has a non transitory or non volatile computer readable medium which stores a set of instructions which controls one or more operations of the authentication server . Examples of suitable computer readable storage media include tangible articles of manufacture and apparatus which store instructions in a non volatile manner such as CD ROM flash memory disk memory tape memory and the like.

During operation the authentication server receives an authentication request . This authentication request includes a user identifier which identifies a particular user among multiple users a web server identifier which identifies a particular web server among multiple web servers a set of authentication factors i.e. one or more authentication factors and additional information e.g. source and destination network addresses an authentication request number to uniquely identify the authentication request etc. . Upon receipt of the authentication request the processing circuitry of the authentication server retrieves a particular user profile from the authentication database based on the user identifier and the web server identifier . The particular user profile includes information regarding the user such as how the processing circuitry should authenticate the user.

For example suppose that the user profile indicates that the processing circuitry should perform a combination of standard authentication and adaptive authentication AA to authenticate the user. Along these lines the current set of authentication factors of the authentication request may include a one time user passcode OTP and AA factors e.g. current time of day geo location device type posture and fingerprint data of the user device etc. . To authentication the user the processing circuitry evaluates the current set of authentication factors against the user profile to determine whether the user is legitimate e.g. compares a current OTP to an expected OTP derived from a stored seed compares current AA factors to previous AA factors etc. .

Upon completion of the authentication operation the processing circuitry outputs an authentication result which includes the user identifier identifying the particular user the web server identifier identifying the particular web server a current trust category which identifies a current set of user permissions which are based on the evaluation of the current set of authentication factors and additional information e.g. source and destination network addresses the earlier provided authentication request number to identify the authentication request an amount of time that the current trust category is valid etc. .

When the web server receives the authentication result indirectly through the user device or perhaps even directly from the authentication server the web server tailors its operation based on the current trust category of the authentication result .

It should be understood that the authentication server is capable of performing a variety of different types of authentication operations to determine whether the user is legitimate. Moreover for the same user the authentication server may perform different types of authentication operations during the course of continuously authenticating the user over multiple redirections e.g. initially a combination of standard and adaptive authentication followed by transparent AA followed by KBA etc. . Further details will now be provided with reference to .

In connection with the various trust categories operate as trust level identifiers which define points i.e. levels of trust along a trust level range . The trust categories above the dashed horizontal line indicate successful authentication while the trust categories below the dashed horizontal line indicate unsuccessful authentication. In particular the authentication server may map algorithmic results of the authentication operations to the various trust categories in .

As shown in and by way of example only the trust category indicates the highest level of trust in the trust level range and thus may direct the web server to provide full access privileges to the user e.g. the user may perform any transaction on the web server . The trust category indicates the next highest level of trust in the trust level range and thus may direct the web server to provide moderate access privileges to the user. The trust category indicates the lowest level of trust in the trust level range and thus may direct the web server to provide minimal access privileges to the user. The trust category indicates unsuccessful authentication directing the web server not to provide access to the user but to immediately re challenge the user e.g. redirect the user in an attempt to re authenticate the user . The trust category indicates unsuccessful authentication directing the web server not to provide access to the user and perhaps to begin a remedial operation e.g. attempt to collect additional information from the user device provide an alert to the web server administrator etc. . Accordingly each trust category uniquely identifies a set of privileges or user permissions which are then imposed by the web server .

As an alternative to the schema illustrated in shows a mapping of various trust categories to various access privileges or user permissions imposed by the web server . Again each trust category uniquely identifies a specific set of privileges. Such privileges may be suitable for an online store a banking or financial institution a cloud storage or similar resource provider and so on.

By way of example only the trust category permits the user to read and write data on the web server and to perform transactions of any amount but prevents the user from changing user settings. The trust category is similar to the trust category but prevents the user from writing data and limits the transactions to amounts under 100. The trust category prevents reading and writing permits transactions of any amount and prevents the user from changing the user settings and so on. Further details will now be provided with reference to .

To begin a user session the user directs the web browser application of the user device to send an initial web request to the web server . The web browser application may be in form of a standard browser which simply requests a web page or a specialized graphical user interface GUI particularly designed for an enhanced exchange of information with the web server .

Upon receipt of the initial web request the web server does not immediately provide access to the resources . Rather the front end of the web server delivers a web response back to the user device which redirects the user device to the authentication server . This operation is illustrated by arrow .

In response to redirection the user device and the authentication server communicate with each other to authenticate the user as illustrated by the arrow . In particular the authentication server receives an authentication request which includes among other things a set of authentication factors also see . The authentication server then performs an authentication operation based on the set of authentication factors and returns an authentication response having a current trust category . As illustrated in the authentication operation includes one or more types of authentication such as token based authentication adaptive authentication knowledge based authentication and so on.

Upon receipt of the authentication response the user device redirects back to web server while conveying the authentication response to the web server as illustrated by arrow . The authentication response includes the current trust category .

At this point the web server makes authorization decisions based on the authentication response . In particular as shown by the arrow the front end of the web server controls access to the resources based on the current trust category .

Furthermore as shown by the arrow the front end periodically and or randomly redirects the user device back to the authentication server to refresh the trust category i.e. to repeat the activities represented by arrows and . Accordingly the web server protects against attacks such as malware infections and hijacking of user sessions following initial successful authentication.

It should be understood that the amount of time between re authentication exchanges may vary to prevent an attacker from predicting when the authentication activities occur. Moreover detected changes in risk device posture may also trigger re authentication exchanges e.g. a change in typing speed .

It should be further understood that the periodic and or random redirection of the user session from the web server back to the authentication server can be in some instances transparent to the user. For example the authentication server can evaluate adaptive authentication factors from the user device over time i.e. over multiple authentication operations and adjust the current trust category dynamically. Such operation makes the user experience less burdensome but nevertheless enables continuous assertion of trust levels.

As mentioned earlier the various components of the electronic system may employ a web based authentication protocol such as SAML or a web services API such as SOAP or REST. Alternatively a variety of independent and or custom mechanisms are used to ensure that the authentication response has not been tampered with by the user device e.g. encryption use of digital certificates etc. . Further details will now be provided with reference to .

In step the authentication server performs in response to the authentication request an authentication operation based on the set of authentication factors. The authentication result of the authentication operation identifies a particular trust category among a set of trust categories. Each trust category of the set defines a unique set of user permissions or privileges also see .

In step the authentication server provides the authentication result for use by the web application. Along these lines the particular trust category identified by the authentication result defines a particular set of user permissions to be imposed by the web application on the user device .

The dashed line indicates that the procedure is capable of being repeated in an ongoing maner for continuous assertion of trust level identities. That is the web application redirects the user session from time to time to re authenticate the user. Accordingly the user is protected against attacks in mid session e.g. hijacking of the user session.

As described above an improved technique involves user authentication which identifies trust categories defining user permissions or trust levels e.g. Low Med and High to control access to a set of resources. Such an improved technique may employ an authentication service hosted in the Internet a so called cloud based service that is accessible to a web server using a web based authentication protocol such as SAML exchange or a web services API such as SOAP or REST. Additionally such an improved technique may employ combinations of various types of user authentication e.g. standard authentication using a token which supplies one time use passcodes adaptive authentication knowledge based authentication combinations thereof etc. . Moreover such authentication may involve the web server periodically and or randomly redirecting the user session back to the authentication service to refresh or perhaps change the risk trust categorization and thus robustly and reliably handle certain types of attacks such as attempted hijacking of the user session. Also such an authentication service may be made available globally over the Internet in which case it may be truly central and may be used to widely reduce duplication of authentication services.

While various embodiments of the present disclosure have been particularly shown and described it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the present disclosure as defined by the appended claims.

One should appreciate that the above described improved techniques enable robust and reliable user authentication in network delivered information services such as web applications that deliver information services over private or public networks. In particular web applications may need to authenticate users in order to provide services with an acceptable level of security. Unfortunately in conventional approaches to avoid unnecessary duplication of functionality at multiple web servers a centralized authentication service is sometimes used within an enterprise for multiple web applications to rely on. Although this enables the web applications to identify users with some level of confidence it nonetheless has some deficiencies 

A. The authentication is often static and does not take into account the varying levels of risk involved depending on factors such as where the user is accessing the system from what device the user is using a frequency with which the user is accessing the system etc. A good example of such static authentication is simple password based authentication.

B. Based on an initial authentication the identity and attributes of the user are usually communicated to the web application but there is no finer grained indication of a trust level of the authentication or a risk rating for the user. Such information if available could help the web application make multiple authorization decisions throughout the user s session with the web application which can enhance security in many cases.

C. Typical authentication only provides an indication of the user and their trustworthiness at the beginning of the user s session. If a user s session were hijacked or the user device were to be compromised during the session most web applications would not be aware of it. Security can be enhanced if some form of authentication were repeated during a session.

D. Lastly as the use of cloud applications and Internet destinations grows and user access become more mobile having authentication servers within a private enterprise network may provide insufficient performance and functionality. There is a need for an authentication service that is easily accessible to users wherever they are located.

In general the above shortcomings of the conventional authentication approaches are addressed by an authentication scheme employing an authentication service hosted in the Internet a so called cloud based service that is accessible to web applications using a web based authentication protocol such as a SAML exchange or a web services API such as SOAP or REST. Such an authentication scheme preferably has the following functionality and capabilities 

A. The authentication service evaluates a risk posture of any end user requesting access to a web application based on characteristics such as the end user s device fingerprint unique characteristics of the mobile device laptop etc. geographic location the user s past and present behavior and any signs of presence of malware on the user s device. Based on an evaluated level of risk the authentication service may challenge the user to perform one of many supported authentication methods e.g. passwords one time passwords certificates secret questions Kerberos Active Directory etc. . This results in a more dynamic authentication of the user.

B. As part of an initial authentication of the user the authentication service returns a message to the relying web application including not only the information identifying the user but also a risk trust categorization according to an agreed categorization scheme e.g. trust level is Low Med or High . This trust categorization can be used by the web application throughout the session to control the user s permissions granularly. For example two users may both be granted access to the web service but if their trust levels are different then the web service may prevent the less trusted user from performing certain operations that are available to the more trusted user.

C. The relying web application periodically and or randomly redirects the user session to the authentication service to refresh the risk trust categorization. This refreshing is preferably done on a random basis rather than being event driven making it more difficult for the process to be subverted or spoofed in some manner. During each refresh operation the authentication service reevaluates the risk posture based on current values of the risk related characteristics of the user or session. If the characteristics have not changed then the user session may simply be redirected back to the web application in a transparent manner leaving the user unaware of the refresh operation i.e. the redirections occur automatically at a level that does not involve user interaction . If any characteristics have changed then appropriate action can be taken in the interest of maintaining security. For example the user could be presented with an authentication challenge. This refresh function may enable a hijacked session to be detected because some characteristic such as the device fingerprint the geographic location or other factor would have changed since the initial authentication.

D. In some embodiments the authentication service may be available globally over the Internet in which case it is truly central and can be used widely reducing duplication of authentication services.

The risk trust categorization scheme may be organized in any suitable effective manner and in some embodiments it may have some level of configurability. Some existing authentication systems generate a numerical risk score which may be used to provide the risk trust categorization back to the web application. For example the risk score itself may be returned in which case the web application includes knowledge of the overall range of the score the meaning of scores of different values and threshold values possibly configured defining ranges of acceptable scores for initial and continued user access to the web service. Alternatively the authentication service may translate the risk score into a categorization scheme such as the above mentioned scheme of indicating a trust level as Low Medium or High.

As described above and with reference to the figures the authentication service is represented by components for a Smart Authentication Service Token based Authentication Adaptive Authentication and Other Authentication see . The Smart Authentication Service serves as a well known front end or access point for authentication services which are actually provided by the other components in back end roles. In the illustrated scheme the user device is involved in the redirections used for initial and refreshed authentications. In an alternative embodiment there may be a direct session between the web service and the Smart Authentication Service in which case the web service can directly initiate authentications without employing redirection. In this kind of system the web service may include an agent component specifically tailored to provide such a direct interface to the Smart Authentication Service.

6. User periodically and or randomly redirected to authentication service to refresh risk trust category

As noted above an available authentication protocol such as SAML may be employed with extensions to support the assertion of a trust level as described herein. SAML has beneficial aspects including ease of use and wide existing adoption. However the authentication scheme herein is in no way dependent on or limited to use with SAML or any other specific communications mechanism. Important aspects of the communications include support for risk based authentication the ability of the authentication service to convey a risk trust categorization to the web service and support for refreshing recently made authentications. Optional aspects may include support for configurability such as negotiation of a categorization scheme and or other operational parameters between a web service and the authentication service.

