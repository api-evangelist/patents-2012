---

title: Scheme for balancing skew between lanes of high-speed serial digital interface
abstract: A device that supports communication over parallel serial lanes may include an analog circuit domain, a digital circuit domain, a buffer between the analog domain and the digital domain, and an alignment circuit. The buffer may receive data from the digital domain according to a write clock and send out the received data to the analog domain according to a read clock. The alignment circuit may generate control signals to initiate reading from the buffer when the read clock and write clocks are aligned. In one embodiment, the device may be an analog-to-digital converter (ADC) integrated circuit (IC) chip and the buffer may be a FIFO.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08760325&OS=08760325&RS=08760325
owner: Analog Devices, Inc.
number: 08760325
owner_city: Norwood
owner_country: US
publication_date: 20121127
---
The present disclosure benefits from priority of U.S. patent application 61 614 647 entitled Scheme for Balancing Skew Between Lanes of High Speed Serial Digital Interface filed Mar. 23 2012 the disclosure of which is incorporated herein in its entirety.

JEDEC has released a series of industry standards for interconnection between a digital to analog converter DAC or an analog to digital converter ADC and logic devices using serial data lanes. Some of these industry standards for example the JESD204B serial interface specification support multiple data lanes in parallel e.g. 4 lanes between an ADC and a logic device but require that the skew between serial lanes be kept within specified tolerances.

In an ADC or DAC integrated circuit IC chip for most digital blocks latency is consistent due to the nature of digital processing. However a first in first out FIFO buffer typically is used at the end of a data path for the digital blocks to transfer a bitstream from a digital clock domain to a high frequency analog serial clock domain. The design of the FIFO is complicated due to the high frequency nature of the encoding scheme and high speed nature of the serial link. For example the JESD204B serial interface uses an 8b10b encoding scheme that converts an 8 bit value into a 10 bit code with some redundancy for control codes. Under this encoding scheme a framer circuit which creates properly encoded frames produces a multiple number of 10 bit codes per write clock period. At the other side of the buffer it is possible to design a serializer that could handle input output ratios that are not a power of two 2 . However this is more complex than the power of 2 version and more difficult to achieve the required speed. Thus high speed analog circuits that serialize the bitstream typically operate on a power of 2 basis. For example the analog circuit of a two channel 16 bit ADC reads 32 bits from a FIFO per read clock period while the digital domain writes 40 bits per write clock period. Thus the read and write clocks for the FIFO are at different frequencies and have no defined phase relationship. This asynchronous nature of the write and read clocks to the FIFO causes the FIFO to have an inconsistent latency. In worst case scenarios this could lead to a variation in latency by up to one clock period. This would exceed the skew allowances in the specification.

Therefore the inventor perceives a need in the art for an ADC or DAC chip with an alignment system that ensures a low variation in latency through parallel FIFOs.

Embodiments of the present invention provide a device that supports communication over parallel serial lanes. The device may comprise an analog circuit domain a digital circuit domain a buffer between the analog domain and the digital domain and an alignment circuit. The buffer may receive data from the digital domain according to a write clock and send out the received data to the analog domain according to a read clock. The alignment circuit may generate control signals to initiate reading from the buffer when the read clock and write clocks are aligned. In one embodiment the device may be an analog to digital converter ADC integrated circuit IC chip and the buffer may be a FIFO.

The digital circuit domain may include digital circuitry not shown that processes digitized data. The processed digital data stream may be sent to the buffers . and .. The analog domain may include serializers . and . that read data from the buffer . and . and send the data bits out in serial lanes. The alignment circuit blocks . and . may generate control signals for the buffers . and . to initiate reading and writing of data from these buffers . and . using locally generated read and write clocks not shown . In an embodiment the alignment circuits . . may generate local read and write clocks whose frequencies differ by a rational ratio M N where M and N both are integers and whose operation is synchronized with each other.

In one embodiment the digital domain may process digitized data in multiple channels in parallel. Each buffer . and . may receive data bits from one or more channels respectively. Thus each serializer . and . may transmit data for one or more digital data channels. In one or more embodiments the serializers . and . may be double data rate DDR serializers. That is the serial bit rate may be double the rate of the clock provided to the serializer. As an example illustrates a system having two serializers but other embodiments may have more than two serializers to transmit data in more serial lanes e.g. four serializers for four lanes .

In one or more embodiments the alignment blocks . and . may be triggered by a common phase locked loop PLL not shown that provides a system clock SYS CLK. Thus the alignment blocks . and . may generate consistent reset signals for the buffers . and .. By resetting the buffers . and . in a consistent way the variation in the latency through the buffers . and . may be small e.g. 0.2 write clock periods . Since all FIFOs have almost the same latency the overall latency for all the lanes will be small e.g. within 0.2 write clock periods of each other .

Further in other embodiments alignment between lanes on two or more ICs may be controlled using the alignment blocks associated with the buffers on each IC chip. Since all the digital blocks have constant latency and the buffers between the digital domain and analog domain on all ICs will have very low variation in latency the overall variation latency is again controlled to a small amount e.g. 0.2 write clock periods .

The ADC IC chip may further comprise a buffer and a serializer . The buffer may store the encoded data bits received from the framer and forward them to the serializer . The buffer may have a plurality of entries not shown that are indexed by a write pointer and read pointer respectively. The buffer may have data written to it and read from it at a consistent data rate. Write operations to the buffer however may occur at a speed determined by a write clock using data words of a first bit width. Read operations from the buffer may occur at a speed determined by a read clock RD CLK which has a different frequency than the write clock using data words of a second bit width. In one example write operations to the buffer may occur at 40 bits per write clock and read operations from the buffer may occur at 32 bits per read clock. The read clock may operate at higher frequency than the write clock the read clock frequency may be 5 4 times 1.25 faster than the write clock frequency.

Buffer write operations and read operations may be managed by write pointers and read pointers respectively not shown . The write pointer may identify a next buffer entry to have data written to it and once data is written to the buffer entry the write pointer may be incremented to point to the next buffer entry. Similarly the read buffer may identify a next buffer entry to have data read from it and once data is read from the buffer entry the read pointer may be incremented to point to the next buffer entry. The write pointer and read pointer may be reset respectively by assertion of a WRITE RESET input and a READ RESET input of the buffer .

The serializer may transmit data bits for two channels from ADCs . and . respectively on one serial lane.

The ADC IC chip may also comprise a frequency divider a frame divider an alignment block a PLL and a clock divider . The frequency divider may have two inputs coupled to a device clock and a SYSREF CLK clock signal respectively. The frequency divider may generate an internal ADC clock for the ADCs . and . ADC processing blocks . and . frame divider and the PLL . The frequency divider may generate a SYSREF ALIGNED signal to the frame divider and the framer which may indicate when the SYSREF signal is aligned with the ADC clock. In one embodiment the SYSREF CLK signal may act as a timing reference for the frequency divider and the SYSREF ALIGNED may act as a timing reference for the frame divider and framer . In one or more embodiments the SYSREF CLK may be used to align framers and framer dividers between two or more ICs.

The PLL may generate a serial clock SER CLK to drive the serializer . The serial clock may be divided down at the clock divider to generate the read clock for the buffer . The division factor may be dependent upon the type of the serializer and number of bits to be read from the buffer in one read clock. For example if 32 bits are read from the buffer in one read clock and the serializer is a DDR serializer e.g. two bits to be transmitted by the serializer per serial clock the division factor may be 16. In one or more embodiments the clock divider may be formed by divider circuits. For example for a division factor of 16 the clock divider may include two or more division stages e.g. two stages of divide by 2 and 8 two stages of divide by 4 and 4 three stages of 2 2 and 4 and other combinations .

The frame divider may generate a clock signal to the framer and the buffer from the ADC clock and the SYSREF ALIGNED signal. In one embodiment the framer may use an 8b10b encoding scheme that converts an 8 bit value output from the ADCs . . into a 10 bit code. Each 10 bit code may be referred to as an octet and thus may represent 8 bits of data. The frame divider clock WR CLK may have a speed that is based on the number channels being placed on a common lane and also the number of octets that the framer will process per clock period. For example the framer may be capable of generating 4 octets and 16 bits so 2 octets per sample. In this example the framer may run at half the ADC clock rate when handling one channel per lane and at the ADC clock rate when placing both channels on 1 lane. The frame divider clock also may be input to the buffer as the write clock. If 4 channels were being placed on a common lane and the framer handles octets per sample then the framer clock may be twice the speed of the ADC clock. In this latter example frame divider would include a clock doubler or PLL.

The framer can handle 4 octets per frame clock and therefore it may handle 2 16 bit samples per clock period. The number of octets produced by the framer may be controlled by a configurable parameter set in the framer divider . If there is only one channel the framer clock may provided as a divider divide by 2 since a framer clock period would be equal to 2 samples. However if there are two channels to one lane as shown in then the framer gets one sample from each ADC at the same time so it may have its clock run twice as fast as the ADC CLK so a divider would not be necessary . Therefore the frame divider setting of 1 may mean 4 octets per ADC sample period and the frame divider setting of 2 may mean 2 octets per ADC sample period. The embodiment shown in may set the configurable parameter to 1 because there are two ADCs the ADCs . and . generating digital data bits for the framer .

As indicated the framer may input data to the buffer at a first rate e.g. N 10 bits clk1 N being an integer equal or larger than one clk1 being a write clock and the serializer may drain data at a different rate e.g. 2bits clk2 k being an integer equal or larger than one clk2 being a read clock . Thus the buffer may operate on a read frequency different from its write frequency WR CLK RD CLK . In one embodiment each ADC . and . may generate 16 bit data for a respective channel for one ADC clock and the framer may generate 40 bits for the two channels in one framer clock. The buffer may have a 40 bit input and a 32 bit output. That is forty 40 bits of data may be received by the buffer for each cycle of the write clock and thirty two 32 bits of data may be read out on each cycle of the read clock. Thus the read write frequency ratio may be 5 4 meaning the read clock frequency may be 5 4 times faster than the write clock frequency.

The read and write clocks have different frequencies and the timing difference between an edge on one clock and the nearest edge on the other clock may vary in a periodic manner. For the buffer with 40 bit input and 32 bit output the period of this cycle may be equal to 4 write clock periods 5 read clock periods . If the read and write clock periods were equal but the phase was asynchronous then the worst case timing difference between the read and write clock would be equal to one clock period of their common clock. That is in the worst case the read operation may be one clock period of the common clock behind the write operation. But when the read and write clock frequencies have a rational ratio then the relative phase relations between two closest read and write edges changes periodically and thus even in the worst case the phase difference between a read clock and a closest write clock may be just a fraction of the read clock period or the write clock period. For example for the read write clock frequencies ratio is 5 4 the closest read and write edges may be 0.25 read clock or 0.2 write clock away in the worst case.

In one embodiment the alignment block may perform an alignment operation to sample the read and write clocks and generate two synchronous reset signals e.g. read and write when the read and write clocks are synced e.g. at their closest edges . The alignment block may be controlled by a trigger signal from the PLL to start the alignment operation. PLL may generate the trigger signal once it is stable e.g. during a start up of the chip . In this manner the trigger signal may be generated when the serial clock and hence the read clock may be stable.

In one embodiment to ensure that data is written to the buffer before a read occurs the buffer may start producing data after the first 2 read clocks.

The clock divider may receive the write clock and may generate an output clock signal having a frequency X times lower than the frequency of the write clock divide by X . The divided down clock CLK may be input to the metastable protection block . An output of the metastable protection circuit may be input to the first delay unit whose output may be input to the state machine . The second delay block may be coupled to an output of the clock divider to delay the write reset signal generated by the clock divider .

As described above when the read and write clock frequencies have a rational ratio the relative phase relations between two closest read and write edges may change periodically. In one embodiment in order to find the read clock edge that is closest to the rising edge of the write clock a divided down version of the write clock may be generated at the clock divider . This divided clock may be protected by the metastable protection block delayed by the delay block and then sampled at the state machine by the read clock .

In one embodiment the metastable protection block may include a pair of flip flops . . and may cause a delay. The total delay along the metastable protection block and the first delay block may be equal to one cycle of the phase shifting between the read and write clocks. For example if the read write frequencies ratio is 5 4 this total delay may be set to equal to 4 write clocks 5 read clocks . Thus the total delay along the metastable protection block and the first delay block may be ignored because it does not introduce any phase mismatch equivalent to sampling instantly . In other words the CLKsignal has a common timing relationship to the read clock and write clock as the delayed CLKsignal and therefore they function as a common clock signal.

In one or more embodiments the alignment system may perform an alignment operation that may have a coarse alignment stage followed by a fine alignment stage. The coarse alignment stage and fine alignment stage may also be referred to as a coarse alignment mode and a fine alignment mode. The alignment operation may be triggered by a trigger signal which may function as a reset for the state machine . In one embodiment the reset is not necessarily synchronous with either the read or write clock. For example the reset may come from a PLL from an SPI trigger so synchronous with the SPI clock or from a delay counter based on the ADC clock which is itself reset by the PLL . That is the reset may have metastable protection.

During the alignment operation the delayed divided down clock signal may be sampled at the state machine . Once aligned read and write clock edges have been found synchronous reset signals e.g. write and read resets may be generated for both the write and read clocks that marks the aligned clock edges. In one embodiment the read reset may be generated directly by the state machine . For the write reset the state machine may send a write reset notify signal to the clock divider . The write reset notify signal may be timed to change on the falling edge of the divided down clock . A write reset may be generated on the next positive edge of the divided down clock . This write reset signal may be delayed at the second delay block to make sure the write reset signal that is output from the alignment system is synced with the read reset signal .

In the example of the divided down clock need not have a 50 50 duty cycle. Instead the divided down clock may have an asymmetric duty cycle in which the clock that has a mark logical 1 for one write clock cycle and a space logical 0 for two write clock cycles. The divided down clock may be sampled at the read clock by 2 flip flops in series to provide metastable protection e.g. at the metastable protection block of . Other embodiments find application with divided down clocks having a 50 50 mark space ratio.

Phase relationships between the write clock and read clock of may be shown in Table 1 below. The phase shifts of the nearest write clock may be given in write clock periods.

As shown in Table 1 for each read clock period the nearest positive edge of the write clocks shift by 0.2 of a write clock 0.25 of a read clock . Also the phase relationship between edges repeats every 5 read clock periods.

The phase relationship between the read clock and the divide by 3 clock may be shown in Table 2 below again measured in write clock periods.

As shown in Table 2 the alignment between the divide by 3 clock and the read clock may repeat every 15 read clock periods. In particular a delay of 1 read clock may shift the phase difference by 0.8 write clock period and a delay of 4 read clock periods may shift the phase difference by 0.2 write clock period. Thus to align the read and write clocks a coarse alignment may be carried out with steps of one read clock period and a fine alignment stage may be carried out with steps of 4 read clock periods.

At block a coarse alignment may be performed. As described above a trigger signal may be generated at a PLL when the PLL stabilizes. During the coarse alignment stage the divide by 3 clock may be sampled at the state machine at each read clock e.g. positive edge of each read clock until a falling edge 1 0 is detected. That is the coarse alignment may be performed at steps of 1 read clock period or 0.8 write clock periods until a negative edge of a divide by 3 clock may be detected. The detection of the logic low may mean a falling edge has occurred during the last read clock period.

Once the coarse alignment stage is completed the read clock edge may be at most one read clock period after the falling edge of the divide by 3 clock. The rising edge of the divide by 3 clock may occur two write clock periods after the falling edge which is equal to 2 5 4 read clock periods. Thus the next positive edge of the divide by 3 clock is guaranteed to be at least 10 4 1 1.5 read periods in the future. Therefore at block in one embodiment the state machine may wait 1 read clock period before switching to the fine alignment stage.

After the wait at block a fine alignment stage may be performed. During the fine alignment stage the state machine may test the divide by 3 clock every 4th read clock. The clock period of the divide by 3 clock may be equal to 15 4 read clock periods. Stepping in 4 read clock periods may be equivalent to stepping for one quarter of one read clock period plus one divide by 3 clock period 0.25 read clock period one divide by 3 clock period . Thus after each four read clock periods the phase of the divide by 3 clock may shift by one quarter of one read clock period which is 0.2 write clock period. The fine alignment stage may continue until the state machine detects a value of one when testing the value of the divide by 3 clock.

Since the phase of the divide by 3 clock is shifting by one quarter of one read clock period between each test of the fine alignment stage when the value of one is detected the positive edge of the divide by 3 clock may have occurred within one quarter of a read clock period.

Once the state machine detects a value of one during the fine alignment stage the state machine may send a write reset notify signal to the clock divider . This signal may be timed to be asserted on the falling edge of the divide by 3 clock and may be observed on the positive edge of the divide by 3 clock. By changing the write reset notify signal near the falling edge and observing it near the rising edge the signal may be read safely. By the time the write reset notify signal is sent the alignment process may be complete so the state machine knows which read clock edge may be near the falling edge of the divide by 3 clock.

After the write reset notify signal is asserted reset signals may be generated for both clock domains. In one embodiment the write reset may be asserted by a write clock division circuit on the next positive edge of the divide by 3 clock synced with the write clock and the read reset may be asserted by a state machine on the matching read clock edge synced with the read clock . In one or more embodiments the write reset notify signal may be de asserted on a next falling edge of divide by 3 clocks.

In one embodiment the reset for the read clock may be generated five read clock periods later. That is the period at which the phase relationships repeat so waiting 5 periods from when the 2 edges were aligned gives the aligned phase relationship.

The write reset notify signal may be sent to the clock divider two read clock periods later. This may align the write reset notify signal with the falling edge of the divide by 3 clock because 2 read clock periods after the rising edge of the divide by 3 clock may be roughly aligned with the falling edge of the divide by 3 clock.

As describe above the write reset notify signal may transition on the negative edge of the divide by 3 clock. When the clock divider detects this signal it may generate a write reset on the next positive edge of the divide by 3 clock. As shown in the write reset signal may be delayed e.g. the delay block before being sent out.

As shown above in box the method waits a predetermined number of read clocks when searching for clock transitions in box . The number of read clock cycles may vary in implementation based on the ratio of write clocks to read clocks M N and the division factor X used to generate the divided down clock X. A delay of D read clocks may induce a phase shift between the read clock and write clock given by D N mod M X N. With M 5 N 4 and X 3 that gives

A delay of four clock cycles may be selected because it gives fine control over phase shifts. In other implementations with other values of M N and X and other phase shift patterns the wait length may be different.

The system and the method disclosed here are simple to implement and provides a fine resolution to alignment of the read and write clocks to a buffer.

As shown above skew between lanes of an ADC chip can be controlled by an alignment circuits that manage alignment between read and write clocks to an output buffer. Sub sample resolution may be achieved by exploiting the rational frequency relationship between the read and write clocks. When the read and write clocks have a ratio of 5 4 fine resolution of 0.2 write clock cycles can be achieved. The alignment circuits may selecting a number of read clock periods to wait between measurements to give optimal phase shifting for fine and coarse stages of operation. In other embodiments positive and negative edges of the read and write clocks may be exploited to improve a resolution by a factor of two. The phase shift tables Tables 1 and 2 may be expanded to include positive and negative edge sampling.

Several embodiments of the invention are specifically illustrated and or described herein. However it will be appreciated that modifications and variations of the invention are covered by the above teachings and within the purview of the appended claims without departing from the spirit and intended scope of the invention.

