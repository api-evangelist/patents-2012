---

title: Method and system of enabling intelligent and lightweight speech to text transcription through distributed environment
abstract: A system includes at least one wireless client device, a service manager, and a plurality of voice transcription servers. The service manager includes a resource management service and a profile management service. The client device communicates the presence of a voice transcription task to the resource management service. The resource management service surveys the plurality of voice transcription servers and selects one voice transcription server based on a set of predefined criteria. The resource management service then communicated an address of the selected server to the profile management service, which then transmits a trained voice profile or default profile to the selected server. The address of the selected server is then sent to the client device, which then transmits an audio stream to the server. Finally, the selected server transcribes the audio stream to a textual format.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08438025&OS=08438025&RS=08438025
owner: Nuance Communications, Inc.
number: 08438025
owner_city: Burlington
owner_country: US
publication_date: 20120730
---
This application claims the benefit under 35 U.S.C. 120 as a continuation of U.S. patent application Ser. No. 10 979 334 filed on Nov. 2 2004 and entitled METHOD AND SYSTEM OF ENABLING INTELLIGENT AND LIGHTWEIGHT SPEECH TO TEXT TRANSCRIPTION THROUGH DISTRIBUTED ENVIRONMENT the entire contents of which is incorporated herein by reference.

The present invention relates generally to voice to text transcription and more particularly to voice to text transcription for pervasive devices instant messagers and web browsers over a distributed environment.

With the growing popularity of pervasive devices e.g. palm tops personal digital assistants PDAs cellular telephones smart phones etc. and the increasing bandwidth for wired and wireless communications it is becoming more and more feasible to enable intelligent applications that provide more sophisticated services. Usually these pervasive devices have the following features they are physically small have limited memory and computational power and wirelessly communicate with other devices or systems.

Instant message clients which include the AOL MSN and Yahoo instant message services and the like are prevalent in the marketplace to provide real time communication using text among the different end users. One of the efficient methods of input is using voice transcription. Rather than to make the instant message client heavy to support transcription we could dispatch the transcription task to the server to reduce the resource requirement and consumption at the client side.

Web browser client devices which include kiosks personal computers notebook computers Internet appliance and the like are prevalent in the marketplace. Many web browser client devices depend on remote resources for computation and storage functions and do not have the capacity themselves to store the sophisticated software and run the applications of the software.

One such sophisticated application is voice to text transcription where a user can simply speak to the pervasive instance message client through a lightweight voice plug in or web browser client device and the recorded audio stream is processed and transcribed to a text format. The versatile memory efficient text format can then be saved transmitted to other devices printed or any of several other similar functions. However accurately converting an audio voice stream to text is a complicated process. This process is further complicated by varying dialects inflections accents and other speech characteristics of users.

In order to get more accurate transcription results the solution needs to be personalized for the end user. Several prior art techniques utilize stored trained voice profiles. A trained voice profile is a conversion table that matches a user s vocal characteristics to known letter sounds. The profile is usually created by having the user utter a series of pre selected words. The user s voice is then cross referenced to the letter sounds. A transcription engine then employs the trained voice profile to produce a more accurate conversion from voice to text.

As the resolution of the profile increases so too does its size and required system resources. Similarly the more sophisticated the transcription engine the more system resources that are required to execute the transcription tasks. To this end it is impractical for a pervasive device instant messager or web browser to store the trained voice profile and execute the transcription itself.

Several prior art methods have been to transmit audio voice data from the pervasive devices or web browsers to a central server containing a transcription engine that performs the arduous computations needed for accurate transcription service. However as the number of users grows so too does the demand on the central transcription server which has finite resources available for the transcription tasks. Additionally as the geographic location of the users expands the use of a single centralized transcription server becomes impractical.

Accordingly a need exists for a solution to enable sophisticated voice applications on low end pervasive instant message and web browser devices that scale with the number of users as well as the geographic locations of the end users.

The present invention provides a scalable solution to enable sophisticated voice applications on low end pervasive and web browser client devices using a distributed computation model. At least three components are provided a service manager one or more voice transcription servers and one or more lightweight clients.

The present invention includes a pool of remote voice transcription servers. When a voice audio stream is input into a client device the transcription task is dispatched to the pool of remote voice transcription servers using TCP IP communication or other communication manners. A service manager includes a resource management service that selects a member of the voice transcription server pool to handle a particular service request based on a set of criteria which includes among other factors distance between a client device and a voice transcription server the network traffic bandwidth from a client device to a transcription server and the available computation resources of a transcription server.

Furthermore a profile management service in the service manager holds and dispatches trained voice profiles to provide immediate dynamic deployment of the personalized profiles to each assigned voice transcription engine. The trained profiles provide greater accuracy in the transcription process.

The present invention therefore provides a distributed computing mechanism i.e. transcription engines that are distributed not necessary identical easily managed and that support potential huge requests from end users for service.

In one embodiment of the present invention a format transformation module allows transcription of multiple voice formats as part of the functions of the voice transcription server. In a further embodiment of the present invention audio is transferred at the same time the end user is recording to expedite the speed of communications between the lightweight client and voice transcription server.

While the specification concludes with claims defining the features of the invention that are regarded as novel it is believed that the invention will be better understood from a consideration of the following description in conjunction with the drawing figures in which like reference numerals are carried forward.

Described now is an exemplary hardware platform according to an exemplary embodiment of the present invention. The hardware platform includes three main components a service manager at least one voice transcription server and a lightweight client device.

Due to the steady advances in technology fully operating computers are now available in palm top or hand held devices such as personal digital assistants PDAs in vehicle devices business organizers and the like. In addition many people now utilize cellular telephones to access the Internet and to perform various other computing functions. Portable computing devices including but not limited to palm tops PDAs and cellular telephones are often collectively referred to as pervasive computing devices.

The present invention is implemented on servers in a computer network such as the Internet. Referring now to a lightweight client device is shown. There are different kinds of lightweight clients. The following are three examples i pervasive client e.g. a PDA Palm computer or cellular telephone ii instant message and ii web browser client e.g. personal computer notebook computer or Internet appliance . The client device may include an operating system such as Microsoft Windows Microsoft Windows CE or Palm OS . The device may also include a suite of Internet tools such as a Web browser application to access a distributed voice transcription server via a service manager over network and network .

Service manager gateway computer or just service manager includes a resource management service and a profile management service .

The computer system can include a display interface that forwards graphics text and other data from the communication infrastructure or from a frame buffer not shown for display on the display unit . The computer system also includes a main memory preferably random access memory RAM and may also include a secondary memory . The secondary memory may include for example a hard disk drive and or a removable storage drive representing a floppy disk drive a magnetic tape drive an optical disk drive etc. The removable storage drive reads from and or writes to a removable storage unit in a manner well known to those having ordinary skill in the art. Removable storage unit represents a floppy disk magnetic tape optical disk etc. which is read by and written to by removable storage drive . As will be appreciated the removable storage unit includes a computer usable storage medium having stored therein computer software and or data.

In alternative embodiments the secondary memory may include other similar means for allowing computer programs or other instructions to be loaded into the computer system. Such means may include for example a removable storage unit and an interface . Examples of such may include a program cartridge and cartridge interface such as that found in video game devices a removable memory chip such as an EPROM or PROM and associated socket and other removable storage units and interfaces which allow software and data to be transferred from the removable storage unit to the computer system.

The computer system may also include a communications interface . Communications interface allows software and data to be transferred between the computer system and external devices. Examples of communications interface may include a modem a network interface such as an Ethernet card a communications port a PCMCIA slot and card etc. Software and data transferred via communications interface are in the form of signals which may be for example electronic electromagnetic optical or other signals capable of being received by communications interface . These signals are provided to communications interface via a communications path i.e. channel . This channel carries signals and may be implemented using wire or cable fiber optics a phone line a cellular phone link an RF link and or other communications channels.

In this document the terms computer program medium computer usable medium and computer readable medium are used to generally refer to media such as main memory and secondary memory removable storage drive a hard disk installed in hard disk drive and signals. These computer program products are means for providing software to the computer system. The computer readable medium allows the computer system to read data instructions messages or message packets and other computer readable information from the computer readable medium. The computer readable medium for example may include non volatile memory such as Floppy ROM Flash memory Disk drive memory CD ROM and other permanent storage. It is useful for example for transporting information such as data and computer instructions between computer systems. Furthermore the computer readable medium may comprise computer readable information in a transitory state medium such as a network link and or a network interface including a wired network or a wireless network that allow a computer to read such computer readable information.

Computer programs also called computer control logic are stored in main memory and or secondary memory . Computer programs may also be received via communications interface . Such computer programs when executed enable the computer system to perform the features of the present invention as discussed herein. In particular the computer programs when executed enable the processor to perform the features of the computer system. Accordingly such computer programs represent controllers of the computer system.

Although specific embodiments of the invention have been disclosed those having ordinary skill in the art will understand that changes can be made to the specific embodiments without departing from the spirit and scope of the invention. The scope of the invention is not to be restricted therefore to the specific embodiments. Furthermore it is intended that the appended claims cover any and all such applications modifications and embodiments within the scope of the present invention.

The distributed voice transcription servers in one embodiment are substantially the identical platform. It is important to note however that in another embodiment the voice transcription servers are a diverse variety of platforms each with different processors operating systems I O capability and voice transcription software.

The voice transcription servers are operable to execute an audio voice transcription program which processes an audio voice input and generates a textual transcription. The voice transcription software not shown is any available voice transcription product available from IBM AT T Dragon Systems Microsoft and others.

Data transfers between the resource manager and client device and voice transcription servers typically conform to the TCP IP specification as well as File Transfer Protocol FTP HyperText Transfer Protocol HTTP or some similar communications protocol and such communications may be made over a secure connection over network and network .

In a preferred embodiment the implementation of the service manager and the voice transcription servers are realized using the grid computing model such as Globus GT3 found at http www.globus.org gt3 . In one embodiment the voice transcription server is deployed as a grid service using the GT3 grid tools. In this embodiment the voice transcription server is deployed and enabled automatically using the Grid data management and resources management systems. The text transcription becomes one of the grid services provided by a grid system. The service manager in another embodiment is part of the resources management system.

As stated above the service manager includes two sub components a resource manager service and a profile manager service .

The role of the resource manager service is to survey a pool of voice transcription servers record the status of each of the voice transcription servers and determine which voice transcription server should handle each particular request from a client device . Each voice transcription server can join and leave the pool of servers freely for any of a variety of reasons including maintenance availability and more.

The resource manager uses an algorithm for the selection of a voice transcription server which is based on the factors of the voice transcription server voice transcription ability the network bandwidth the distance proximity between voice servers and the client device and other similar pertinent factors. These factors are more fully described in the following sections below. The transcription time is used as the decision criteria which includes two parts 

The following is an example of a cost function c d b u with variables of distance between a client device and a voice transcription server denoted d client server the network traffic bandwidth from a client device to a transcription server denoted b client server and the available computation resource of a transcription resource denoted u server . The selected voice transcription server is preferably the one with the lowest c d b u value of all the available voice transcription.servers.

where are weighted variables. Following is an example of selection of d client server b client server and u server .

The first factor addressed is the determination of the distance between the client device and voice transcription server . There are multiple ways of defining the distance and although distance is typically related to geographic distance the present invention is not limited to this definition. For example distance can be defined as 1 the geographic distance between the client device and voice transcription server 2 the distance of the actual cable routes between the client device and the voice transcription server 3 the number of trace route hops from the client to the voice transcription server and 4 the difference of the geographic areas of the client device and voice transcription server location. In the preferred embodiment method 2 is selected as the distance for the cost function.

The second factor is the network traffic bandwidth from a client device to a distributed voice transcription server . In this calculation it is assumed that the distributed voice transcription server is located at the backbone of the network and that the voice transcription server has enough network bandwidth to accept the requirements from the clients. The traffic bandwidth is limited by the outbound traffic from a client device to its ISP Internet service provider or wireless network base station if the client device is a pervasive device using wireless . In other embodiments the network connection to each distributed voice transcription server is not uniform bandwidth which becomes one of the variables in the cost function above.

The third step is to find the computation resources for a voice transcription server. Here it is assumed that all the voice transcription servers have substantially the same hardware configuration where the performance is mainly determined by the available system CPU I O bandwidth and memory resources. The state of the CPU resources can be one of the following 

Again as noted above it is not necessary for the voice transcription server to be similar in capabilities to be within the true scope and spirit of the present invention. Other factors for determining resource allocations to a voice transcription server shown to be used advantageously with the present invention include the format of the audio stream e.g. MPEG versus WAV whether the audio stream is compressed or not a priority given to a particular client device the financial cost to run or lease a given voice transcription server or any other variable or factor which can be measured in a distributed network and or grid computing environment.

A voice profile characterizes various speech properties of an end user such as for example accents dialects inflective variations or other pronunciation habits of the end user. Such speech properties may be determined by a training program wherein a user speaks various sample words and phrases such that applicable speech processing algorithms learn to more accurately process the user s speech.

The voice profiles are stored in profile file and managed by the profile manager service corresponding to the end users are stored in the profile manager . Each profile has a state value and a set of property values. The state of a profile specifies the status of the training process for the profile. The property values specify the details of the profile. The exemplary states of a profile include 

The property values of a profile and its state is used for deployment of the profile for purposes of voice transcription and profile creation training . If no profile is created or available for an end user a default profile is used for the transcription.

Each voice transcription server has a voice format converter a local profile manager and voice transcription engine .

Many formats for compressing and transmitting data are well known in the art. As the name suggests the voice format converter converts the user input audio formats to the format s accepted by the voice transcription engine. Compressed formats include MPEG AVI and both lossless and lossy compression.

In a preferred embodiment a simple algorithm is used to determine whether compression of a voice stream is needed based on the tradeoff of the compression time and transmission time. In the following formula L denotes an audio stream length and B denotes an available network bandwidth from client device to the assigned voice transcription server. The compression time is assumed to be proportional to L at the client side for example a pervasive device . The un compression time at the voice transcription server side is ignored by assuming that the server has enough computational capacity to rapidly uncompress the audio stream. By assuming a compression ratio as the time required to deliver the audio stream without compression is 

Once a voice transcription server is selected for a requested transcription task the profile management service transfers a copy of the trained voice profile or default profile if no trained profile is available over network to the selected voice transcription server. The default profile also could be stored at each individual transcription server to save time. Furthermore all the profiles could be pre deployed at each individual transcription server if the transcription server has enough storage space. A local profile manager within the voice transcription server manages all the profiles temporarily or permanent stored at the voice transcription server . Since a single voice transcription server can process many transcriptions simultaneously the local profile manager may store many profiles at any given time.

The voice transcription engine is a software service or dedicated hardware that transcribes the incoming voice to text using the end user voice profile or a pre defined default voice profile as described above. Voice transcription software to implement voice transcription engine includes voice transcription product available from IBM AT T Dragon Systems Microsoft and others including.

The voice transcription servers can be identified by their hostname or IP address and a set of pre defined ports to support the communications between the other components of the system.

It is the client device that is the voice audio input to the system of the present invention. Each lightweight client is identified by two attributes a the ID of the device which could be the IP address of the device and b the end user ID. The end user ID may be anonymous applied to anybody who does not have a profile or does not wish to use his her profile. For the case of using anonymous ID the default profile will be used by the transcription server. The end user ID can be retrieved from the login process or entered by the end user while using the system.

If a profile exists the existing profile is retrieved from the profile repository step . The profile repository usually is but not limited to a file system or a relational database. Existing profiles can have several states which include not finished finished with basic training and finished with extended training . If the profile is not finished with extended training the profile can be modified to enhance the transcription results. In this circumstance the user is asked step whether the profile should be modified. If the answer is yes the profile is modified step .

The profiles can be stored and transmitted in a compressed format to preserve network resources such as bandwidth or repository space . If no profile exists in the profile management service an entry in the profile repository of the profile management service is created and the new profile is stored step .

Referring now to after the profile is stored or if the user indicates that he does not wish to create a profile the resource management service is called upon to survey the pool of voice transcription servers to get an identifier of a voice transcription server at an acceptable location and with the resources available to perform the necessary transcription step . The system then waits to see if a server is available step . If a server is not available a server busy signal is returned and step must be repeated step . If a server is available the server identification is sent to the profile management service step . The profile management service then sends the user profile or profile identifier if the profile has been preloaded to the available voice transcription server step .

For the case of transferring the profile the voice transcription server uncompresses the profile and attempts to deploy it step . If the deployment is successful a positive acknowledgement is sent to profile management service step . If deployment is unsuccessful a negative acknowledgement is sent to the profile management service step .

If the acknowledgement is positive a server identifier or address is sent to the requesting client device step . If the acknowledgement is unsuccessful a deployment failed message is returned step and the profile is sent again step . Provided the deployment of the user profile was successful and the client device received the address of the voice transcription server holding the profile the pervasive client device then transmits an audio stream either from microphone recording or other methods such as read from an audio file to the assigned voice transcription server with the ID of the device and the ID of the end user step . The audio stream can be transferred at the same time the end user is recording to expedite the speed of communications between the lightweight client and voice transcription server. The voice transcription server utilizing the trained voice profile can then transcribe the audio stream to a textual format step .

A web browser client gets the voice services using applet technology. shows an embodiment of the present invention using a web browser client device . The web browser client device communicates with a web container which includes a servlet . To minimize the code downloaded a proxy structure for the web browser clients is utilized. A proxy is a servlet running at a server machine which contact with resource management center and profile management center. There could be one or more proxies based on the scalability requirements of the application.

The web container also includes a user interface that can be loaded onto the web browser client device . The web container communicates with the service manager which includes a resource management service a profile management service and a resources management web services application programming interface API . The system also includes a pool of voice transcription servers 

While the various embodiments of the invention have been illustrated and described it will be clear that the invention is not so limited. Numerous modifications changes variations substitutions and equivalents will occur to those skilled in the art without departing from the spirit and scope of the present invention as defined by the appended claims.

