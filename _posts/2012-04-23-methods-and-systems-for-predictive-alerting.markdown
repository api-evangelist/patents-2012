---

title: Methods and systems for predictive alerting
abstract: Systems and methods to provide predictive alerting are disclosed. Trends and characteristics in the data may be identified in advance of actual occurrence, with an expected event being predicted or extrapolated based on data and a predictive model associated with stored and/or incoming data. This may be done by, for example, developing a set of rules associated with the model that may then be used to trigger predictive alerts based on predicted trends. Various data and associated characteristics may be determined based on past data and/or analogous data taken from similarly modeled systems. For example, seasonal trends may be factored into the model so that a prediction is based on both a received set of data and expected seasonal (or other temporal) trends. Various other characteristics may also be used in the predictive model.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09373078&OS=09373078&RS=09373078
owner: Anametrix, Inc.
number: 09373078
owner_city: San Diego
owner_country: US
publication_date: 20120423
---
This application claims priority under 35 U.S.C. 119 e to U.S. provisional application No. 61 477 993 entitled METHODS AND SYSTEMS FOR PREDICTIVE ALERTING filed on Apr. 21 2011 the content of which is hereby expressly incorporated by reference in its entirety for all purposes.

This application is related to U.S. patent application Ser. No. 13 396 362 entitled METHODS AND APPARATUS FOR INTERACTIVE DATA MANAGEMENT USING AN APPLICATION PLUG IN filed on Feb. 14 2012 referred to herein as the Related Application which claims priority under 35 U.S.C. 119 e to U.S. Provisional Patent Application Ser. No. 61 442 467 entitled METHODS AND APPARATUS FOR INTERACTIVE DATA MANAGEMENT USING AN APPLICATION PLUG IN filed on Feb. 14 2011. The content of both these applications is incorporated by reference in its entirety for all purposes.

The present invention relates generally to networked data collection processing and visualization including components for client use as well as server and database use. More particularly but not exclusively the invention relates to apparatus methods and computer media for receiving and storing data and information as well as configuring and providing predictive alerting based on the data and information.

Networked computer systems for collection aggregation and processing of data are known and some systems allow acquisition and aggregation of data from multiple sources. In addition some existing systems provide simplistic alerting capabilities based on received information. These systems however are very limited in their capability and typically provide only minimal capabilities such as binary indication when a variable exceeds a predefined value.

Existing systems do not take into account more detailed information included in the information such as interrelationships trends or other factors.

Exemplary aspects of the invention that are shown in the drawings are summarized below. These and other aspects are more fully described in the Detailed Description section. It is to be understood however that there is no intention to limit the invention to the forms described in this Summary or in the Detailed Description. One skilled in the art can recognize that there are numerous modifications equivalents and alternative constructions that fall within the spirit and scope of the invention as expressed in the claims.

In one aspect the present disclosure relates to a method of providing predictive alerting. The method includes determining at a server system one or more predictive models associated with the one or more variables the one or more predictive models being determined based at least in part on previous data associated with the one or more variables. The method further includes receiving additional data associated with the one or more variables. An alert indicative of a predicted future state of the one or more variables is then provided based upon this additional data and the one or more predictive models.

In another aspect the present disclosure provides an alternate method of providing predictive alerting. The method includes receiving first data associated with one or more variables and analyzing the first data to identify a seasonality pattern associated with the one or more variables. The method further includes determining at a server system one or more predictive models associated with the one or more variables where the one or more predictive models are determined based at least partially on the identified seasonality pattern. The method further includes receiving second data associated with the one or more variables and generating based on the received second data and the one or more predictive models an alert indicative of a predicted future state of the one or more variables.

In a further aspect the disclosure pertains to a processor readable medium comprising instructions for causing a processor to store at a server system one or more predictive models associated with one or more variables the one or more predictive models being determined based at least in part on previous data associated with the one or more variables. The instructions further cause the processor to receive additional data associated with the one or more variables. The instructions also cause the processor to provide based on the additional data and the one or more predictive models an alert indicative of a predicted future state of the one or more variables.

In another aspect the present disclosure provides a processor readable medium including instructions for causing a processor to receive first data associated with one or more variables and analyze the first data to identify a seasonality pattern associated with the one or more variables. The instructions further cause the processor to store at a server system one or more predictive models associated with one or more variables the one or more predictive models being determined based at least partially on the identified seasonality pattern receive second data associated with the one or more variables and generate based on the received second data and the one or more predictive models an alert indicative of a predicted future state of the one or more variables.

In an additional aspect the disclosure relates to a server system including a processor and a memory coupled to the processor. The memory contains instructions which when executed by the processor cause the processor to store one or more predictive models associated with one or more variables the one or more predictive models being determined based at least in part on previous data associated with the at least one or more variables. The instructions further cause the processor to receive additional data associated with the one or more variables and generate based on the additional data and the one or more predictive models an alert indicative of a predicted future state of the one or more variables.

In yet another aspect the present disclosure provides a server system. The server system includes a processor and a memory coupled to the processor. The memory contains instructions for execution on the processor to receive first data associated with one or more variables analyze the first data to identify a seasonality pattern associated with the one or more variables store at a server system one or more predictive models associated with one or more variables the one or more predictive models being determined based at least partially on the identified seasonality pattern receive second data associated with the one or more variables and generate based on the received second data and the one or more predictive models an alert indicative of a predicted future state of the one or more variables.

Further areas of applicability of the present disclosure will become apparent from the detailed description provided hereinafter. It should be understood that the detailed description and specific examples while indicating various embodiments are intended for purposes of illustration only and are not intended to necessarily limit the scope of the disclosure.

Systems and methods in accordance with the disclosure relate generally to the field of data collection processing and visualization that is accomplished though a host or server system and computer network such as the Internet but internal corporate networks may also be used in various implementations in conjunction with one or more client computer systems.

In an exemplary embodiment a server system acquires data from various sources such as online web site visitor behavior such as web analytics offline data sources 3party APIs etc. Various mechanisms for providing such data such as via a client application on a local computer system are described in the Related Application along with ways for efficiently providing information to a host or server system.

Embodiments of systems and methods in accordance with the disclosure may be used to configure and provide alerting capabilities in conjunction with such a system such as is further described below.

As used herein the term alerting relates to mechanisms for informing or notifying customers e.g. users of a host server system configured such as described in herein and or in the Related Application when certain events or conditions have been met. These may be based on one or more metrics that may be configured by a user such as described further below. For example in one implementation a customer such as a business having a website and interesting in tracking hits to the website may be interested in determining the number of visitors and receiving advanced notification when the number of visitors reaches a particular level or satisfies some other functional relationship. This may be done by applying predictive processing to received and or stored data that may be used to generate a prediction as to when a particular event or condition will occur. In some implementations multiple variables and or functions of those variables may be combined in the prediction such as for example adjusting predictions for seasonality or other variations adjusting based on past characteristics or characteristics of similar or analogous processes or based on other factors such as are further described below.

To provide predictive alerting trends and characteristics in the data may be identified in advance of actual occurrence with an expected event being predicted or extrapolated based on data and a predictive model associated with stored and or incoming data. This may be done by for example developing a set of rules associated with the model that may then be used to trigger predictive alerts based on predicted trends. By carefully generating the model a small sample of data may be used as an input to generate the predictive results and associated alerts . Various data and associated characteristics may be determined based on past data and or analogous data taken from similarly modeled systems. For example seasonal trends may be factored into the model so that a prediction is based on both a received set of data and expected seasonal or other temporal trends. Various other characteristics may also be used in the predictive model. For example particular events may be considered which may be periodical or temporally known. Alternately or in addition events of unknown occurrence e.g. natural disasters war economic impacts etc. may have data and models associated with them that may be used to generate the predictive model.

Based on a predictive model and received data an alert may be sent to a customer in various ways as further described below. For example a user may be able to configure a particular alert type and indication mechanism e.g. phone FAX instant messaging IM email etc. as well as other parameters such as confidence or reliability of the prediction frequency of alerting and the like.

Before further describing various aspects of alerting functionality it may be helpful to describe the general context and systems in which embodiments may be implemented. For example illustrates details of a system . System includes one or more typically many Client Systems or Devices as well as a host Server Database System . Server system will generally include one or more databases or other data storage devices as well as associated hardware software peripheral interface devices and the like including modules to receive and store data store predictive configuration information generate predictions and provide alerts or other data or information to client systems.

The data and information stored on server system may be data associated with multiple clients and each client s data may be further subdivided into data associated with campaigns such as advertising campaigns web metrics sales data and or other types of data or information. Data may be provided to server system from a variety of sources some of which are shown as sources and in . In particular data source may be data or information from print media sources such as newspapers magazines or other print publications. This may be information such as for example sales data subscriber data advertising metrics website view or hits and or other data or information. Similarly data from other sources such as TV Radio advertising and marketing source web analytics information system and or data or information from other sources not shown may also be integrated with server system .

At client system a client application program such as for example a spreadsheet application like Microsoft Excel or other standardized or customized client application may be loaded and running. A user of client system may desire to retrieve information from server system such as for example a user desiring to see the results of a particular advertising campaign the number of webhits at multiple websites inventory information sales information and or other information. In addition the user may desire to receive predictive alerts associated with the campaigns.

Information from multiple sources such as sources and and or others not shown in may be aggregated in server system . A standalone application program or programs and or a plug in module which may be integrated with the application program may be configured as described in the Related Application to facilitate download of information from server system display and analysis of the information editing and adding data to the information and uploading and merging any changes or additions of data to server system . In addition data and information may be provided to server system from any of the other sources shown in and or other sources not shown . The aggregated data may be used in whole or part to generate predictions and associated alerts as further described subsequently herein.

Turning to an example configuration of a plug in module for facilitating data transfer and or alerting information such as shown in is illustrated. Alerting information may also be provided separately via various other media such as text or voice messages emails IMs audible or visual alarms web pages or via other mechanisms.

Plug in module may include a server interface module which may be configured to integrate with the application program and or other programs such as operating systems drivers etc. in the client system so as to transfer data to and from the server system . In addition plug in module may include a processing verification module configured to perform functions such as processing data stored in or transferred to or from the application program verifying data being transferred to the server system and or performing other functions described herein. An application interface module may be included with the application interface module configured to interface such as through an Application Programming Interface API with the application program to transfer data to or from the application program facilitate displaying data and or provide other application interface functions.

A getAuthenticationToken function authenticates to the API by passing a valid username password combination. The rest of the API calls may assume that the session has been initiated by an authentication call. A getUserInfo function gets a list of accessible data suites accounts and other related information. An executeQuery function downloads data from the server system e.g. Anametrix servers . A getTableList function downloads a list of tables associated with the specified data suite account. An a ddAlert function and or deleteAlert function may be included to add or remove alerts such as described subsequently herein. In addition a getAlert function may be included to facilitate receiving alerts.

A typical API session may include a series of sequential executions of commands such as the following 

Server system may include for example a received data module configured to receive data from one or more sources such as sources and shown in and store and provide the data to prediction module . Prediction module may be configured to generate a prediction based on received data and or other stored data or model information in data storage module with the prediction based on data or other configuration information stored in user prediction configurations module and or alerting types and confidence configuration module . An alert provision module which may be configured to send alerts via text message email voicemail and or other alerting mechanisms may be coupled to prediction model to send alerts. A user may configure alerting parameters and conditions in conjunction with the user prediction configurations module and the confidence configuration module such as further described subsequently herein.

The process may further include for example providing the alert to a user using one or more signaling mechanisms. For example the alert may be provided as an email message. Alternately or in addition the alert may be provided as a text or voice message. Alternately or in addition the alert may be provided on a website.

The predictive model may be based for example at least in part on a temporal variation in the one or more variables. The temporal variation may be a seasonal variation. Alternately or in addition the predictive model may be based at least in part on an event associated with the one or more variables.

The process may further include for example providing a display to configure parameters associated with the alert. The parameters may relate to a temporal configuration associated with the alert. The parameters may relate to a prediction configuration associated with the alert. The parameters may relate to a confidence configuration associated with the alert.

The prediction model may be generated for example based in part on previous data associated with the variable. The prediction model may be generated in part based on data that is analogous to data associated with the variable. The alert may be generated based on a plurality of predictive models.

If it is determined that no new data has been received at stage alert provision is postponed at stage to a subsequent alert cycle. This may be conditional for example if the alert has been postponed multiple times such as a predefined number of times or based on processor loading etc. an alert may be sent and or an alarm or other indication regarding postponement of the alert may be sent to a user and or to an operation administration and management function OA M associated with the server system .

At stage the alert is executed using an available thread such as described subsequently with respect to .

Alternately at stage a determination is made as to whether predictive alerting has been enabled. This may be set by a menu option such as described previously which may be further accompanied by rules conditions parameters such as described previously. If no predictive alerting has been enabled at stage processing proceeds to stage and the process is repeated at the next evaluation time. If it is determined at stage that predictive alerting is enabled the process continues at stage where it is determined if a forecasting prediction model has been defined. If it is determined at stage that a forecasting prediction model has been defined the process continues at stage where a forecast prediction is made such as described in more detail subsequently . If it is determined at stage that no prediction model has been defined a model is determined at stage . This prediction model may be based on for example old previous data such as is described subsequently herein. The prediction model may also be based on criteria such as confidence desired by the user availability of related data models and or other criteria. In some cases data or other models may be available which may be based on similar or analogous processes and time series.

At stage a prediction is made based on received data and the prediction model. If it is determined at stage that the prediction is such that an alert is sent e.g. the prediction matches an alerting criteria such as for example reporting within a certain number of hits of a target at a predefined time interval or based on other criteria and processing proceeds to stage from which a predictive alert may be sent such as via an email text voice message etc. At stage subsequent evaluation timing may be determined. This may be based on a periodical evaluation data or event driven evaluation or other evaluation criteria. Consistent with the next evaluation time process is then repeated. The evaluation timing may be configured so as to minimize loading on the server system such as by processing data and generating alerts during non peak times.

As an example of processing associated with stage subsequent evaluation timing may be generated as follows. For the sake of efficiency depending on the data already collected alert timing may be determined to be efficiently done. For example in some cases it may not be efficient to run the alert every single day especially in the beginning of the alerting period. The following formula may be used to determine how many days of waiting should be used until a next alert is run assuming the alert has been run for at least 5 subsequent days in this example .

In this example C is the threshold value used during the given period of time. This may be the value specified in the alert definition e.g. in the user interface as described previously with respect to screenshot .

where n is the number of days of waiting and p is a factor that determines how strict one should be when waiting certain number of days 0

where is the smoothing coefficient Yis the received data sample and Sis the exponentially smoothed data.

In a first aspect seasonality is represented by a number of times a trend changes over a certain period of time. In this aspect seasonality may be determined using previously received data. For example a mean of the time intervals between multiple time points where the trend has changed may be used.

One general formula to calculate the mean time interval between trend changes is as follows 1 3 where n is the number of observed times that the trend has changed k 0 1 2 in this example is the time interval between two different data points at which the trend changed and is the mean time interval between trend changes. In the graph illustrated in the variable is representative of half a cycle where a full cycle is similar to a complete cycle of a sin wave.

The example shown in in graph utilizes a moving average convergence divergence MACD indicator. The MACD may be based on for example two exponential moving averages one over a longer period of time and another one over a shorter period.

For example MACD EMA short EMA long where EMA short is a shorter exponential moving average and EMA long is a longer exponential moving average as determined by values of the smoothing coefficient . The number of data points used to calculate either EMA may be set to a predefined or arbitrary value.

The signal indicator may be the exponential moving average of itself for some arbitrary number of data points .

In certain embodiments it may be desired to determine the number of times that the signal indicator experiences a seasonal change over a given period of time e.g. the number of times the trend of the signal changes over the given period . In one embodiment the trend of the signal is deemed to change at each data point at which the slope of the signal changes from negative to positive or vice versa. Having determined such trend changes an optimal model for forecasting may be selected as discussed above .

For example assume a user sets an alert for one month and uses predictive alerting. The data for previous months may be used to compute cyclical characteristics such as for example the average number of times the trend changed per month and the average interval length between two different data points at which the trend changed. In the present example it is further assumed that historical data is available for three 3 months. Based upon this historical data the trend was determined to change four 4 times during the first month five 5 times during the second month and three 3 times during the third month. Accordingly in this example the average interval length between trend changes is approximately 6.4 days over the historical three month period that is the trend changes roughly once per week.

In addition the data for each of the individual weeks within the period may be evaluated to determine if multiple trend changes occur during any of the weeks. If not a model based upon monthly seasonality may be utilized.

In various embodiments seasonality may be further analyzed using an autocorrelation function. For example the autocorrelation function may be used to determine whether the data is random. If the data is determined not to be random the autocorrelation function is next used to determine the number of lags in the data. In an exemplary embodiment a lag is defined as a local maximum in the autocorrelation function and is therefore similar to completion of two changes in trend discussed above completion of a full cycle or one period of a sin wave .

If on the other hand the data is determined to be random a simple moving average is used for the forecasting prediction.

When the data is determined to be non random the average period before each change in trend is determined in the following manner. First lags are calculated using an autocorrelation function for each lag. A lag is defined as follows. Given measurements Y Y . . . Ythe lag k autocorrelation function r is defined as 

where is the average or mean value of the measurements Y Y . . . Y. If rfor the first three lags k 1 2 3 is greater than 0.5 in one example the data can be determined to be non random. Otherwise the data is determined to be random. When the data is determined to be random in one aspect a simple moving average can be used to determine an average change per data point based on a previous set of data points e.g. 28 data points . Based on the moving average it can be estimated how big a change would be expected for n data points in the future assuming that there is no non random trend determined in the future.

In this case the autocorrelation variable r for a middle lag value i is compared to five lag values on either side of the middle lag value i. The signal Y can be sampled every second minute day week month or whatever time length is of interest or fits the seasonality of the signal e.g. seasonality varies throughout the day week month etc. . Lags that satisfy relationship 5 are classified as local maximums. All local maximums in a given seasonality period are identified and an average lag value indicative of a cyclical characteristic for the seasonality period is calculated e.g. average time between local maximums to calculate the number of full cycles or periods L in one or more seasonality time frames . In another aspect local minimums of the autocorrelation function at different lag values k could also be used. The time interval between trend changes discussed above is similar to half a cycle as indicated by the distance between local maximums of the autocorrelation function r.

A triple exponential smoothing model may be used when the data shows seasonality and trend. To use this model in one example at least two seasonal time periods of old previous data are received and stored. With more than two seasonal time periods of old previous data the results may be improved e.g. by improving stability etc. . Example forecasting algorithms are shown below 

Where Y is the observed value S is the smoothed value b is the trend factor I is the seasonal index F is the forecasted value L is the average lag value between local maximums or an average time for the trend to change twice as discussed above and m is the number of data points in the future for which the predictive forecast is being made. When selecting and for this model old previous data may be used to make a forecast over one or more whole periods with proposed parameters. An example of this is shown in . An original time series defined by the old previous data shown in a first time series is shown to the left of line with multiple forecast time series and shown along with the first time series to the right of line . In this example time series may have a minimal error metric such as for example a minimum Mean Squared Error MSE compared to the first time series . This model may then be used as the predictive model for future prediction generations and alerts. The generation process may be repeated periodically and or asynchronously to update the predictive model.

In some configurations the systems and apparatus described herein include means for performing various functions as described herein. In one aspect the aforementioned means may be a processor or processors and associated memory in which embodiments reside and which are configured to perform the functions recited by the aforementioned means. The aforementioned means may be for example processor and or memory modules or apparatus residing in modems to perform the functions described herein. In another aspect the aforementioned means may be a module or apparatus configured to perform the functions recited by the aforementioned means such as an application program and or plug in to an application program.

In one or more exemplary embodiments the functions methods and processes described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored on or encoded as one or more instructions or code on a computer readable medium. The software may include an application program and or a plug in for use with an application program. The application program may be for example a spreadsheet such as Microsoft Excel.

Computer readable media includes computer storage media. Storage media may be any available media that can be accessed by a computer. By way of example and not limitation such computer readable media can include RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and blu ray disc where disks usually reproduce data magnetically while discs reproduce data optically with lasers. Combinations of the above can also be included within the scope of computer readable media.

It is understood that the specific order or hierarchy of steps or stages in the processes and methods disclosed are examples of exemplary approaches. Based upon design preferences it is understood that the specific order or hierarchy of steps in the processes may be rearranged while remaining within the scope of the present disclosure. The illustrated processes present elements of the various steps in a sample order and are not meant to be limited to the specific order or hierarchy presented.

Those of skill in the art would understand that information and signals may be represented using any of a variety of different technologies and techniques. For example data instructions commands information signals bits symbols and chips that may be referenced throughout the above description may be represented by voltages currents electromagnetic waves magnetic fields or particles optical fields or particles or any combination thereof

Those of skill would further appreciate that the various illustrative logical blocks modules circuits and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the disclosure.

The various illustrative logical blocks modules and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration.

The steps or stages of a method process or algorithm described in connection with the embodiments disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a user terminal. In the alternative the processor and the storage medium may reside as discrete components in a user terminal.

The scope of the invention is not intended to be limited to the aspects shown herein but is to be accorded the full scope consistent with the description herein wherein reference to an element in the singular is not intended to mean one and only one unless specifically so stated but rather one or more. Unless specifically stated otherwise the term some refers to one or more. A phrase referring to at least one of a list of items refers to any combination of those items including single members. As an example at least one of a b or c is intended to cover a b c a and b a and c b and c and a b and c.

The previous description of the disclosed aspects is provided to enable any person skilled in the art to make or use the present disclosure. Various modifications to these aspects will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other aspects without departing from the spirit or scope of the disclosure. Thus the disclosure is not intended to be limited to the aspects shown herein but is to be accorded the widest scope consistent with the principles and novel features disclosed herein.

