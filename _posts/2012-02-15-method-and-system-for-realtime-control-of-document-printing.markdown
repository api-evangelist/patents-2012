---

title: Method and system for real-time control of document printing
abstract: A method for secure printing is presented. A document management system (DMS) is provided within a server computer for storing, displaying and printing a plurality of documents. At least a portion of the documents require authentication information for displaying and printing. A web-based capture protection system is provided that prevents proprietary content displayed on a display device from being screen-captured. The web-based capture protection system is combined with the DMS to augment the DMS with capture protection of displayed documents, including intercepting retrieval requests from a client computer to display documents from the DMS.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=RE044209&OS=RE044209&RS=RE044209
owner: Alearo Properties Limited Liability Company
number: RE044209
owner_city: Dover
owner_country: US
publication_date: 20120215
---
This application is a reissue of U.S. patent application Ser. No. 10 141 308 filed on May 7 2002 now issued as U.S. Pat. No. 7 664 956 which is a continuation in part of assignee s pending application U.S. Ser. No. 09 774 236 filed on Jan. 29 2001 now abandoned entitled Method and system for copy protection of data content which is a continuation in part of assignee s application U.S. Ser. No. 09 397 331 filed on Sep. 14 1999 entitled Method and system for copyright protection of digital images transmitted over networks now U.S. Pat. No. 6 298 446 which claims priority to Israeli patents IL 127093 filed on Nov. 16 1998 and IL 127869 filed on Dec. 30 1998 and is a continuation in part of assignee s application U.S. Ser. No. 09 313 067 filed on May 17 1999 entitled Methods and apparatus for preventing reuse of text images and software transmitted via networks now U.S. Pat. No. 6 209 103 which in turn claims priority to Israeli patent IL 124895 filed Jun. 14 1998 each of which is incorporated by reference herein.

The present invention relates to controlled printing of documents within a content copy protection system.

Printing electronic documents within a personal computer operating system such as Microsoft Windows typically involves selecting a printer from a list of available local and network printers selecting print options for the selected printer and issuing a print request. A printer driver for the selected printer then sends data for printing to a print spool which is a buffer feeding into a printer board.

After a print request is issued the document is listed in a print queue for the selected printer while the print job is pending. An administrator or the user issuing the print request typically can delete the job prior to its execution and abort the print job while it is executing.

Prior art print workflows do not enable real time control of printing other than deleting and aborting a print job. User and document access control parameters and printer control parameters are pre configured. Today s digital rights management and secure document environments focus on copy protection but print control is only enforced by pre set parameters and by enabling or disabling printing altogether.

Thus there is a need for a dynamic print controller that can control print jobs on the fly after the print request is issued.

The present invention provides a method and system for controlled printing of documents within a content copy protection system. The present invention enables inter alia real time document access control real time document watermarking and real time control of which printers a document can be printed on.

There is thus provided in accordance with a preferred embodiment of the present invention a method for real time control of document printing including intercepting a print request for an original document by a user obtaining print information corresponding to the original document in response to the intercepting the print information including an address for a print server re issuing the print request by a server computer and sending the print request and the print information to the print server.

There is further provided in accordance with a preferred embodiment of the present invention a method for real time control of document printing including in response to a request by a client computer to print an original document obtaining document print information corresponding to the original document generating a modified document comprising embedding the document print information within the original document and sending the modified document to a print server.

There is yet further provided in accordance with a preferred embodiment of the present invention a system for real time control of document printing including an administrative tool for specifying document specific print information for a collection of original documents a server computer including an interceptor for intercepting a print request for an original document a print control processor for obtaining print information specific to the original document and a request generator for re issuing the print request and a client computer including a request generator for issuing a print request for an original document a transmitter for sending the print request and print information specific to the original document to the server computer.

There is additionally provided in accordance with a preferred embodiment of the present invention a system for real time control of document printing including a data storage for providing document print information corresponding to an original document a document generator for obtaining document print information corresponding to an original document and for generating a modified document by embedding the document print information within the original document in response to a request by a user to print the original document and a transmitter for sending the modified document to a print server.

There is moreover provided in accordance with a preferred embodiment of the present invention a method for real time control of document printing including intercepting a print request for an original document by a user obtaining print information corresponding to the original document in response to the intercepting and logging the print request and at least a portion of the print information.

There is further provided in accordance with a preferred embodiment of the present invention a system for real time control of document printing including an interceptor for intercepting a print request for an original document by a user a print control processor for obtaining print information corresponding to the original document in response to the intercepting and a print event logger for logging the print request and at least a portion of the print information.

There is yet further provided in accordance with a preferred embodiment of the present invention a print server including a pre check module for dynamically processing print information at run time a document requester for requesting a document to be printed from a document management system a format processor for converting a document from a native format to an internal format and a print module for delivering content to be printed to a print spool.

There is additionally provided in accordance with a preferred embodiment of the present invention a method for serving documents to a printer including dynamically processing print information at run time requesting a document to be printed from a document management system converting a document from a native format to an internal format and delivering content to be printed to a print spool.

There is moreover provided in accordance with a preferred embodiment of the present invention a document management system with secure printing including a document manager for managing a storage of original documents a user account manager for managing at least one user account for at least one user having at least partial access to the original documents an interceptor for intercepting a print request for an original document and a print control processor for obtaining print information specific to the original document.

There is moreover provided in accordance with a preferred embodiment of the present invention a method for secure printing within a document management system including managing a storage of original documents managing at least one user account for at least one user having at least partial access to the original documents intercepting a print request for an original document and obtaining print information specific to the original document.

The present invention provides a method and system for printing documents within a secure content copy protection system. In a preferred embodiment the present invention operates as a component of a secure display system. An example of such a system is applicant s Mirage enterprise software product which is used to protect text and image content displayed on a computer monitor for viewing from being copied. Mirage includes server side software that encrypts content prior to delivering it to clients and client side software for decrypting the content prior to displaying it.

The Mirage technology is described in applicant s U.S. Pat. No. 6 298 446 entitled Method and System for Copyright Protection of Digital Images Transmitted over Networks in applicant s U.S. Pat. No. 6 353 892 entitled Copy Protection of Digital Images Transmitted over Networks in applicant s U.S. Pat. No. 6 992 693 entitled Method and System for Copy Protection of Images Displayed on a Computer Monitor in applicant s U.S. Pat. No. 6 993 662 entitled Method and System for Copy Protection of Displayed Data Content in applicant s U.S. Pat. No. 7 076 469 entitled Copyright Protection of Digital Images Transmitted over Networks in applicant s U.S. Pat. No. 7 155 744 entitled Copy Protection of Digital Images Transmitter over Networks . and also in applicant s co pending patent applications 

In a preferred embodiment the present invention is used to add secure printing functionality to Mirage to complement its secure display capability. Secure printing functionality enables a user who is viewing a secure document on his display to print the document yet does not expose to the user an unencrypted document file. In order to print the document the user must have appropriate authorization and be able to authenticate himself. Additionally the present invention provides the capability to dynamically watermark the document at print time. Such watermark may include for example a CONFIDENTIAL mark or a DO NOT DUPLICATE mark on each page of the document that is printed as well as print job and user information and an expiration date and or time.

In a preferred embodiment the present invention dynamically logs each print event as described hereinbelow.

The Mirage system can be integrated within a web server and used to protect HTML pages XML pages and other web content. Mirage can also be integrated within a document management system DMS such as Livelink which is a DMS developed and manufactured by Open Text Corporation of Waterloo Canada and Documentum which is a DMS developed and manufactured by Documentum Inc. of Pleasanton Calif. Mirage enhances DMS capability by providing copy protection for displayed documents.

A DMS typically includes its own digital rights management including permissions that require authentication. Mirage authentication preferably operates in conjunction with DMS authentication.

Mirage manages permissions using administrative rules and using a properties file. Administrative rules are typically set by an administrator and specify paths for directories and files wherein protected content resides and one or more rules to be associated therewith. In a preferred embodiment of the present invention administration rules include printing attributes. If an administration rule applies to a specific document then print attributes within the rule are used for such document. In addition a properties file is set when Mirage is configured and typically contains initial permission information and default permission information. In conjunction with Mirage the DMS may add additional permission information.

In a preferred embodiment the present invention associates print and watermark attributes with document print permissions. Each such attribute includes a space delimited list of parameters. The print and watermark attributes are described in Table I hereinbelow and typically are document specific.

In a preferred embodiment the present invention embeds an encrypted header within a document file prior to sending the document to a client for display. The encrypted header is used inter alia to store print and watermark attributes. Preferably the encrypted header includes the following fields 

Print attributes are collected into the encrypted header as a block denoted PRINTINFO. Thus the encrypted header includes PRINTINFO PRINTINFO where

In a preferred embodiment of the present invention relevant print and watermark attributes are included within SU PD and HD.

Preferably the encrypted header contains a plain text block and an encrypted block. The plain text block contains inter alia a key ID for requesting a key from a key server to decode the encrypted block. Preferably the encrypted block contains inter alia the above PRINTINFO block of data and also contains a key for encrypting at least a portion of the document text.

Reference is now made to which is a simplified block diagram of a controlled printing system in accordance with a preferred embodiment of the present invention. The present invention can be integrated with a web server computer such as web server computer and with a document server computer such as document management server computer . Web server computer includes a web server . Web server may be one of several popular web servers such as a Netscape Internet server a Microsoft Internet server or an Apache Internet server. Web server delivers web pages to client computers. Shown in is a storage of web pages accessed by web server . Storage may reside within web server computer or within one or more other computers or partly within web server computer and partly within other computers.

Preferably web server computer also includes server side software for protecting web content such as applicant s Mirage server software . Mirage server software may operate as an independent application or in conjunction with web server . The operation of Mirage server software is described in hereinbelow.

Preferably web server computer also includes a print server for serving documents to one or more printers for printing. It may be appreciated by those skilled in the art that print server may alternatively reside on a separate computer. The operation of print server is described in hereinbelow. Ina preferred embodiment of the present invention Mirage server software contains an interceptor for intercepting client requests to web server and routing them to Mirage server software .

Similarly document management server computer includes a document management system . Document management system may be one of several popular document management systems DMS such as LiveLink DMS or Documentum DMS. Document management system delivers documents to client computers. Shown in is a storage of documents accessed by document management system . Storage may reside within document management server computer or within one or more other computers or partly within document management server computer and partly within other computers.

Preferably document management server computer also includes server side software for protecting documents such as applicant s Mirage server software . Mirage server software may operate as an independent application or in conjunction with document management system . The operation of Mirage server software is described in hereinbelow.

Preferably document management server computer also includes a print server for serving documents to one or more printers for printing. It may be appreciated by those skilled in the art that print server may alternatively reside on a separate computer. The operation of print server is described in hereinbelow. In a preferred embodiment of the present invention document Mirage Server software contains an interceptor for intercepting client requests to document management system and routing them to Mirage server software . It may be appreciated by those skilled in the art that document management system may fully or partially fulfill the functionality of interceptor .

Also shown in is a client computer operated by a user. Client computer includes a web browser . Web browser may be one of several popular web browsers such as a Netscape Navigator browser or a Microsoft Internet Explorer browser. Web browser displays web pages and documents. Client computer may contain a document browser for displaying documents in addition to or instead of web browser .

Preferably client computer also includes client side software for protecting web content such as applicant s Mirage client software . Mirage client software may operate independently or in conjunction with web browser or in conjunction with document browser or in conjunction with both web browser and document browser . The operation of Mirage client software is described in hereinbelow.

In a preferred embodiment of the present invention when client computer requests a web page or a document from web server computer or document management server computer interceptor or intercepts the request and forwards the request to Mirage server software or respectively. In tarn Mirage server software or issues a re request for the web page or the document to web server or document management system respectively. The web page or the document is delivered to Mirage server software or and Mirage server software or determines if the document is printable based on one or more administration rules properties files and HTTP headers. If the web page or document is printable then Mirage server software or encrypts the web page or document and embeds an encrypted header including print information denoted PRINTINFO within the web page or document respectively. The web page or document is then sent to client computer .

In an alternative embodiment of the present invention the functionality of interceptor may be included within document management system . In such an embodiment document management system may be configured to automatically deliver a requested document and its print information to Mirage server software to be encrypted before being returned to the user without intervention of interceptor .

Upon receipt of the web page or document Mirage client software decrypts encrypted data and securely renders the web page or document for viewing. While a user is viewing the web page or document on client computer he may issue a print command. Preferably Mirage client software intercepts the print command and queries Mirage for print information included within the encrypted header that was embedded in the web page or document specifically within the PRINTINFO block as described hereinabove If print information is available Mirage client software sends such information to a print server specified in the print information such as print server or print server . If print information is not available ten either the MSG message or a default message is displayed.

In a preferred embodiment of the present invention print server or print server enables the user to select print options for example printer page orientation and page range and logs the user s selection. Print server or print server requests the web page or document from web server or from document management system respectively. Preferably print server or print server uses authentication information within the PRINTINFO block to request the web page or document respectively. For document printing upon receipt of the document print server determines whether the document can be printed in its native format. If the document is stored in an unsupported format then preferably an HTML rendition is printed instead. Preferably print server and print server log the print job and send the web page or document respectively to printer .

In an alternative embodiment in which some of Mirage server software is integrated within document management system the print request can be recorded by document management system in a consolidated DMS log.

Regarding the client side decryption preferably Mirage client software communicates with a key server to obtain a key necessary for decoding the web page or document As described hereinabove Mirage server software or preferably embeds an encrypted header within the web page or document respectively. The encrypted header contains a key ID to request a key from key server for decoding the encrypted header. Preferably the encrypted header includes an encrypted key for encrypting at least a portion of the web page or document. Thus the key obtained from key server enables Mirage client software to extract another key for decoding at least a portion of the web page or document.

In an alternative embodiment of the present invention the encrypted PRINTINFO is sent by client computer to key server for decryption. In this embodiment Mirage client software does not decrypt the print information. Instead key server decides whether to decrypt the print information it receives from client computer and send decrypted information back to the client or whether to send updated print information to the client or whether to decline to decrypt the print information altogether.

Reference is now made to which is a simplified block diagram of a server side component of a system for controlled printing in accordance with a preferred embodiment of the present invention. Shown in is Mirage server software from . Mirage server software includes interceptor for intercepting document requests for a document server. Mirage server software also includes a document processor and individual components and for processing text HTML Word Excel PowerPoint and PDF documents respectively and a component for processing images. It is apparent to those skilled in the art that components for processing other types of documents may be included in addition to components and that some or all of components may not be included depending on the types of documents chosen to be supported. Document processor preferably includes a print information processor and a header generator for embedding administration rules and print information within a document.

Print information processor preferably processes i print information included within a document processor configuration file ii administration rule data intercepted by interceptor and iii HTTP header data within the web server or DMS re request response. Print information processor also formats the printing information for inclusion within a document header. It is noted that the print information is encrypted so that only trusted print servers can decrypt it.

In a preferred embodiment of the present invention print information processor is implemented as a separate module or class or API. This is done so as to simplify customization for different DMSs. DMSs may require different HTTP headings or special encoding for data needed to request an authenticated printable version of a document web page ASP page or CGI generated page.

Finally document processor also includes a document encrypter and an application programming interface API for communicating with document processor .

Reference is now made to which is a simplified block diagram of a client side component of a system for controlled printing in accordance with a preferred embodiment of the present invention. Shown in is Mirage client software from . Mirage client software includes a TextSafe module which intercepts text rendering by web browser . Mirage client software preferably also includes a document decrypter and a coordinator .

Upon issuance of a command by client computer to view a secure document TextSafe module intercepts encrypted text as it is being rendered and calls document decrypter to decrypt the intercepted text. TextSafe inserts the decrypted text into a video frame buffer for secure display. Coordinator is responsible for communication with a key server and with print server . Coordinator is preferably also responsible for caching of keys and encrypted headers.

A PixSafe module is used to provide secure display service by protecting displayed content from screen capture. PixSafe module operates by patching system graphics display interface GDI functions including inter alia Microsoft Windows BitBlt and StretchBlt functions as described in U.S. Pat. Nos. 6 298 446 and 6 353 892.

Upon issuance of a print command by client computer to print a secure document TextSafe module intercepts a print event and forwards it to document decrypter . Document decrypter analyzes print information within the PRINTINFO block and determines a corresponding action. Specifically document decrypter determines whether i to display a default error message ii to display the MSG message or iii to initiate a print request. Coordinator then performs the action.

Reference is now made to which is a simplified block diagram of a print server for controlled printing in accordance with a preferred embodiment of the present invention. Shown in is printer server from . Print server includes two core modules a print console and a print engine . Print console is a public interface of print server . Preferably client communications go through print console . Print console preferably accepts print requests and presents a user with a print options interface. In a preferred embodiment of the present invention a jsp Java server page is used in conjunction with a servlet for the print options dialogue.

After print options have been selected print console preferably passes the information to print engine . In a preferred embodiment of the present invention print engine requests a document from a specified location via Mirage server software watermarks the document as required and prints the document to a printer spool .

Print console is responsible for receiving print requests generated by a client computer and sent via coordinator . Preferably the client computer includes print information associated with the document in its request. Such print information is generated by a document processor such as document processor and is preferably encrypted and embedded within a document currently being viewed as described hereinabove. Preferably only print console can decode print information generated by document processor . In a preferred embodiment of the present invention print console is a Java servelet.

In a preferred embodiment of the present invention a print console properties file contains the following configuration information 

Preferably when print console receives print information it analyzes the print attributes together with data in the properties file and appropriately populates fields in the .jsp print options page. The generated .jsp page is sent back to a user who can then set print options within a form.

The print option data filled in by the user is then submitted by the form back to print console . Print console processes the data and calls print engine to print the document. When print engine finishes it returns a value to print console which preferably sends back an HTML page informing the user of the outcome.

Print console includes a pre check module which is an API that print console calls after receiving a request. Print console calls pre check module with print information and pre check module returns updated print information. Pre check module enables software integrators to dynamically pre process print information at run time before it is acted upon. As only the updated print information is acted upon it may be appreciated that pre check module enables software integrators to 

As such it may be appreciated that pre check module may be used to change print properties and permissions at print time. Pre check module may also be used to ensure that a latest version of a document is printed in conformance with the Food and Drug Administration FDA Office of Regulatory Affairs guidelines for electronic records and electronic signatures relating to document versioning. These guidelines are described in Title 21 of the Code of Federal Regulations 21 CFR Part 11 available on the Internet at http www.fda.gov ora compliance ref part11 .

Similarly pre check module may also be used to control how a document may be printed through print options that it enables or disables. Pre check module may also be used to enforce DRM rules including how many times a document may be printed and when a document may be printed.

Print engine preferably includes a print engine API that can only be called by print console or by a third party that desires to implement its own print console such as a document management system provider. Preferably the print engine API cannot be called directly by users. Print engine includes a document requester for requesting a document from database management server computer to be printed.

Print engine also includes a format pre processor for converting various document formats into an internal format. Various pre processing units feed into format pre processor . Shown in are units and for processing Word documents HTML documents and Excel documents respectively. Following format pre processor documents are passed to a watermark processor for optional watermarking.

It may be appreciated that watermark processor enables dynamic processing of watermarks at run time. Watermark processor also enables application of usage policies. For example a watermark Document valid Until . . . may be added at run time. As such watermark processor can be used to comply with 21 CFR part 11 mentioned hereinabove.

Following watermark processor documents are passed to a print processor for generating a print command and delivering content to print spool . As content is being delivered to print spool a post print API module is used for last minute dynamic updating of print permission.

In a preferred embodiment of the present invention a controlled printing process includes three phases as follows 

When processing a document information that the client will need to send to the print engine is included. Such information is either provided as one or more default parameters in a configuration file or as part of an administration rule or provided by a back end web server such as web server or a back end DMS such as DMS when returning a document to be processed.

Reference is now made to which is a simplified flowchart for document preparation within a copy protection application in accordance with a preferred embodiment of the present invention. At step a web browser requests a document from a document server computer. At step the request is intercepted by an interceptor component within Mirage server side software. The interceptor matches the request against administration rules which preferably include printing attributes. The interceptor re directs the request to a document processor passing it a matching rule ID.

At step the document processor extracts print information from the rule. At step the document processor re requests the document passing a document URL and print attributes. In a preferred embodiment of the present invention the print attributes may include a SUPPORTED attribute indicating that printing is supported. Preferably the document processor also sets a CKSM SEED to allow authentication of DMS print attributes. Preferably a configuration file is used to determine if attributes are to be check summed.

When the document processor re requests the document at step the back end system may return print attributes in its response. Such attributes supplement the print information already obtained through the document processor s properties file and the administration rules. Preferably the DMS uses the print attributes to provide a print server with sufficient information to make an authorized request for the document at print time.

At step the interceptor again intercepts the document request as was done at step but this time the interceptor preferably forwards the request along to the document management system. At step the web server or DMS sends back the requested document. The DMS may also send print attributes in response to the print attributes received from the document processor. In a preferred embodiment of the present invention depending on the value of ALLOW the DMS decides whether or not to return print attributes at in its response If CKSM SEED is set the DMS checksums its print attributes. The DMS preferably includes information required by a print engine so as to make an authorized request for a native version of the current document at print time If supported the DMS may also include data that enables it to authenticate and authorize a user s print permission For example this may be a one time token to be used for printing. In a preferred embodiment of the present invention the DMS sends its print attributes within print headers or more generally as document meta data.

At step the document processor receives a document. In a preferred embodiment of the present invention the document processor combines the print attributes from the administration rule with the print attributes in the response from the DMS and embeds them into an encrypted header. At step the document processor encrypts the document and sends it to the web browser for viewing. At step the web browser renders the encrypted document to a Windows API. At step the Mirage client software intercepts the rendering decrypts encrypted data and displays it securely.

A user generally prints by clicking on a print icon in an application s toolbar or within a print preview window by a mouse right click and print by using a CRTL P shortcut or by choosing File Print. Additionally printing can be requested within JavaScript or within a COM object or via dynamic data exchange DDE .

When the present invention is operative a protected document is typically encrypted within applications. Thus if an application were to print such document without the intervention of document processor only encrypted data is printed.

In a preferred embodiment of the present invention a user s attempt to print normally is intercepted by interceptor and printing is initiated within Mirage server software . Following Phase I Document Preparation information necessary to initiate printing of a document by Mirage server software is already encoded within a document header.

The header of a document to be printed is queried for print information. If such information is available it is sent to a print server such as print server .

When the header is queried thee possibilities can arise namely i the document is not protected ii the document is protected but not printable and iii the document is protected and printable. Reference is now made to which is a simplified flowchart for a controlled print process in accordance with a preferred embodiment of the present invention. A user tries to print and at step a web browser accordingly issues a request to print a document. At step TextSafe module of Mirage client software intercepts the print request and document decrypter module of Mirage client software is used to determine whether or not the document is protected. If not for example if the document does not have an encrypted header then at step Mirage client software instructs the browser to process the print request in the normal fashion and at step the browser prints the document.

If document decrypter determines at step that the document is protected then at step document decrypter determines if the protected document is printable. If for example the protected document does not include print information in its encrypted header or if the encrypted header is not decryptable such as for lack of an available key or if a print server URL SU field has a zero size then the document is not printable. At step a message is returned to the user preferably using a MSG field in the document header informing the user that the document is not printable.

If she document decrypter determines at step that the protected document is printable then the print request is forwarded to coordinator module of Mirage client software . Thereafter the web server authenticates the user and presents to the user a print options dialogue generated by print console A . If the user is authenticated then at step print server URL and print information PRINTINFO is provided to the print dialogue. In a preferred embodiment of the present invention the print dialogue is a browser control although this is not necessary. At step the web browser forwards the print request to a print server designated by a SU and at step the print server preferably enables the user to select print options.

It is noted that the in a preferred embodiment of the present invention the process of is performed at the client side. This is advantageous for catching print operations as early as possible.

Reference is now made to which is a simplified data sequence diagram for an authentication and secure print workflow in accordance with a preferred embodiment of the present invention.

Preferably sufficient print information PRINTINFO is provided in Phase I so that when the client sends printing instructions in Phase II the print server has sufficient information to request the document and allow the back end system to authorize the user s request to print the document. In a preferred embodiment of the present invention PRINTINFO includes inter alia the SU and the document URL.

In the last step of Phase II Client Side Trigger namely step coordinator opens a browser window to the print server URL SU . If there was data in the encrypted header Print POST Data PD field this is also sent as POST data. Additionally there may be parametrized data in the SU and HD.

Preferably the SU points to print console which is a Java servlet. Print console decodes data in the SU and header POST buffer and recreates the print information PRINTINFO. Print console calls pre check module passing in PRINTINFO. Pre check module allows print console to 

If the user is permitted to print the document PRINTINFO is preferably saved in a current connection session. Print console preferably decides if either the native or HTML version of the document should be printed. Using its internal list of printers and other print information obtained from pre check module print console uses a .jsp page to generate an HTML form that allows the user to select print options. The .jsp page is sent back to the user.

Print console receives the user s print settings. Print console uses the user s print settings to pass appropriate PRINTINFO data to print engine for printing the document.

The print engine s document requester requests the document from a document management system such as DMS . Preferably included in the request are cookies and headers that the DMS specified when the document was requested for viewing. Such information allows print engine to request the document for printing assuming that the DMS has not since revoked the user s permission to print the specified document. Print engine also sends print attributes allowing the DMS to choose final print options and set watermark properties. Preferably the DMS logs the print request for the user.

Print engine receives the document and resolves the watermark data and tries to print the document. If necessary print engine calls an external watermark engine to generate a watermark image according to watermark values. Print engine returns the results to print console which in turn sends hack an HTML page advising the user whether or not the job was successful.

In a preferred embodiment of the present invention print and watermark attributes are sent to the recipient either as HTTP header values or as metadata within a document. Table I hereinbelow indicates a specific set of print attributes used in a preferred embodiment of the present invention. Preferably all values are URL encoded.

As can be seen from Table I print attributes generally fall into two sets. The first set includes attributes used by the print server to determine how to print. Such parameters preferably allow the print server to decide whether it wants to print the native version of the document when available or alternatively to print an HTML version when available. The first set of attributes includes U HTML U NATIVE M GENERAL H HTML H NATIVE and M NATIVE. Preferably these attributes are only processed by the document processor after the re request of the document from the DMS. If the native format of the document is available then preferably the U NATIVE and M NATIVE attributes are defmed and sent. The M NATIVE attributes enable the print server to decide if it can print a specific format. Otherwise if the U HTML attribute is defmed the HTML version can be printed.

The second set of print attributes are used to aid the back end DMS to re authenticate the print server and user when requesting the document for printing. Using H GENERAL the DMS can insert any headers that it needs to authenticate and authorize either the users or print servers to access the document. Preferably H GENERAL holds common headers. If specific headers are needed for the native or HTML version they are preferably set using H NATIVE and H HTML respectively.

The present invention also enables the DMS to use its own print server. In such a case the DMS can override the print server URL SU by specifying SU. Typically SU is specified in the document processor s configuration or properties file. SU is encoded in the encrypted header as SU which is the URL that the coordinator calls when attempting to print. Authentication information is preferably encoded in SU as a GET string.

If a DMS specifies its own print server it can also set PD which overrides other data set by the document processor when processing the attributes. The PD attributes are preferably included in the encrypted header as a PD field. PD is preferably sent as POST data when the coordinator calls SU. If SU together with the GET data exceeds a 1024 character limit then the data is preferably included in PD rather than SU.

In an alternate embodiment of the present invention an API for the DMS is created and sent a URL including a server IP and port number a document ID and a username. In addition a special account is created within the DMS that the print server can log into and impersonate a user and request a document in the user s name. For such an embodiment it is only necessary to send the URL.

Table II hereinbelow indicates a specific set of watermark attributes used in a preferred embodiment of the present invention. Preferably all values are URL encoded and watermark attributes are not sent without a CKSM if CKSM SEED was sent in the request.

In a preferred embodiment of the present invention watermarking parameters are either specified when the document is requested in Phase I or when it is requested for printing in Phase III. Watermarking occurs if SUPPORT is set and WMRK is YES. The attribute WMRK is preferably sent both at document request and document print request.

The attributes WMRK B WMRK F and WMRK H are preferably set by the DMS if watermarking is enabled. These attributes specify a watermark format for the body footer and header respectively. Each of these attributes takes a space delimited list of watermark types as specified in Table II. Default values are typically specified in the document processor s properties file.

During Phase I and Phase m the attribute WMRK P is preferably sent with the request. The DMS can specify a value for either of these attributes and for others as well by including in the header a parameter name and value. If the DMS specifies WMRK B WMRK F and WMRK H then preferably it should also set values for any new watermark parameters and for parameters specified in WMRK P. The DMS can either set parameter values in Phase I or Phase III. There is no need in Phase III to send back an updated WMRK P. If the print server is unable to calculate a value for a required watermark parameter it does not include it in the watermark.

During Phase I and Phase III the attribute WMRK P is preferably sent with the request. The DMS can specify a value for either of these attributes and for other as well by including in the header a parameter name and value. If the DMS specifies WMRK B WMRK F and WMRK H then preferably it should also set values for any new watermark parameters and for parameters specified in WMRK P. The DMS can either set parameter values in Phase I or Phase III. There is no need in Phase III to send back an updated WMRK P. If the print server is unable to calculate a value for a required watermark parameter it does not include it in the watermark.

Reference is now made to which is a simplified data flow diagram for setting print and watermark attributes for a document in accordance with a preferred embodiment of the present invention. illustrates how print and watermark attributes are provided from several different sources including document processor interceptor DMS and print server . As shown in at step the interceptor ascertains print and watermark attributes from a properties file and from administrative rules. The rules may contain the attributes ALLOW and WMRK. Such print and watermark attributes are sent to the document processor.

At step the document processor preferably sends the attribute SUPPORTED to the document management system. At step the document management system generally sends the ten attributes CKSM ALLOW WMRK WMRK P U HTML U NATIVE H GENERAL H HTML H NATIVE and M NATIVE.

At step the document processor generates an encoded header including the print server URL SU print POST data PD header data HD and a print message MSG . Preferably the latter parameters are optional. The encoded header is embedded within the document and the document is then sent to a client for secure viewing. Mirage client software at the client decrypts the encoded header and then decrypts the document for display.

The client subsequently issues a print request and at step the print request is sent to the print server along with the SU PD and HD. At step the print server requests the document from the document management system. The print server preferably sends the attribute SUPPORTED.

At step the document management system sends the requested document to the print server. The document management system may send the four attributes CKSM ALLOW WMRK and MSG.

After receiving the document the print server prints it on a designated printer and at step issues a print report with MSG to the client.

In a preferred embodiment of the present invention the print and watermark attributes sent at steps and are sent as HTTP headers. The encoded header sent at step is embedded within the document itself.

Preferably the present invention imposes rules for order of processing attributes. Specific rules used in Mirage are as follows. Print and watermark attributes are processed in the order i document processor properties files ii interceptor and administration rule attributes and iii web server DMS attributes. Relative to this order the latter value specified for an attribute is used overriding previous values except for ALLOW and WMRK. Regarding ALLOW and WMRK latter values of these attributes must complement and include previous values at their beginnings or else they are ignored.

In reading the above description persons skilled in the art will realize that there are many apparent variations that can be applied to the methods and systems described.

In the foregoing specification the invention has been described with reference to specific exemplary embodiments thereof. It will however be evident that various modifications and changes may be made to the specific exemplary embodiments without departing from the broader spirit and scope of the invention as set forth in the appended claims. Accordingly the specification and drawings are to be regarded in an illustrative rather than in a restrictive sense.

