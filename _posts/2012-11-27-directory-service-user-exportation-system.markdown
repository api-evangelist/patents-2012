---

title: Directory service user exportation system
abstract: Disclosed are various embodiments for exporting user accounts and associated information from a directory service for a local computing environment to the authentication service of a remote computing environment. A list of user accounts including usernames and other associated data is selected after querying the directory service. The selection of user accounts is then analyzed to make sure that a minimum set of data has been selected. Subsequently, the user account data is written to file, which can then be either programmatically uploaded or manually uploaded. In certain embodiments of the present disclosure, user account information may be directly exported to an authentication service through a network connection without the intermediate step of first writing the data to file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09043880&OS=09043880&RS=09043880
owner: Amazon Technologies, Inc.
number: 09043880
owner_city: Seattle
owner_country: US
publication_date: 20121127
---
Numerous businesses and enterprises use remote computing services offered by various companies. As part of the remote computing services business and enterprises may manually create users or groups and associated permissions. However manual creation of large numbers of users and groups may take an inordinate amount of time especially for large enterprises. Similarly problematic is the creation deletion and modification of remote computing service user accounts for organizations that experience significant employee turnover.

The present disclosure relates to synchronizing user accounts and user account data between separate computing environments. A directory service that manages user accounts for the local computing environment is queried for a list of users and a list of data associated with user accounts. A selection of user accounts and a selection of data associated with the user accounts are obtained. Depending on security privacy and functional concerns all user accounts and all associated data may be selected or a subset thereof may be chosen. The user accounts are then exported to a remote computing environment where new user accounts are created and the selected data is associated with each corresponding new user account. Permissions are then assigned to the new user accounts and authorization credentials are created on a per user account basis. In the following discussion a general description of the system and its components is provided followed by a discussion of the operation of the same.

With reference to shown is a networked environment according to various embodiments. The networked environment includes a remote computing environment and a local computing environment that are in data communication with each other via a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks.

The remote computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively the remote computing environment may employ a plurality of computing devices that may arranged for example in one or more server banks or computer banks or other arrangements. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. Further such computing devices may be in networked communication with each other. For example the remote computing environment may include a plurality of computing devices that together may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. In some cases the remote computing environment may correspond to an elastic computing resource where the allotted capacity of processing network storage or other computing related resources may vary over time.

Various applications and or other functionality may be executed in the remote computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the remote computing environment . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the remote computing environment for example include the authentication service and other applications services processes systems engines or functionality not discussed in detail herein. The authentication service is executed to authenticate users accessing the remote computing environment and authorize use by authenticated users of computing resources provided by the remote computing environment .

The data stored in the data store includes for example remote user accounts and associated data as well as potentially other data. Data associated with a remote user account may include login credentials authorization or access permissions user data and other such data. Login credentials may include information such as user names passwords digital certificates authentication or access codes data related to multi factor authentication and other such data. Authorization or access permissions may include data related to resources a user may or may not use limitations on the use of a particular resource by a user limitations on when a user may or may not use a particular resource and other related data. Authorization or access permissions may be set on a per account basis or remote user accounts may be assigned to groups and inherit permissions and restrictions on the basis of group membership. User data may include data such as the first and last name of the user the email address of the user the phone number of the user the address of the user and other such data.

Users are generally not provided with direct access to the remote computing environment . Instead access to the remote computing environment is generally made through a publicly facing application programming interface API . Calls to the API may be made remotely or locally through HTTP calls using the representational state transfer REST protocol or the simple object access protocol SOAP . Any number of applications may make API calls including network applications executing in the remote computing environment and made available through network pages rendered in a browser or custom applications executed in a local computing environment.

Because access to and use of the remote computing environment is made through calls to a publicly accessible API authentication and authorization credentials for authorized users are generally included in requests to the API. This prevents unauthorized usage of the remote computing environment . Authorization credentials may include a username and password a digital certificate an authorization token or other such credentials associated with a remote user account . Requests to the API may be encrypted using the secure sockets layer SSL or transport layer security TLS protocols to prevent interception of authentication and authorization credentials.

The local computing environment is representative of a plurality of local computing devices that may be coupled to the network . The local computing device may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. The local computing device may include a display . The display may comprise for example one or more devices such as liquid crystal displays LCDs gas plasma based flat panel displays organic light emitting diode OLED displays LCD projectors or other types of display devices etc.

The local computing device may be configured to execute various applications such as the exporter application and or other applications. The exporter application may be executed in the local computing device for example to access network content served up by the remote computing environment or the local computing environment and or other servers thereby rendering a user interface on the display . To this end the exporter application may comprise for example a browser a dedicated application etc. and the user interface may comprise a network page an application screen etc. The local computing device may be configured to execute applications beyond the exporter application such as for example email applications social networking applications word processors spreadsheets and or other applications.

Local user accounts and associated data are stored within the local data store . It is understood that a plurality of local user accounts may exist. Data associated with a user account may include login credentials authorization or access permissions user data and other such data. Login credentials may include information such as user names passwords digital certificates authentication or access codes data related to multi factor authentication and other such data. Authorization or access permissions may include data related to resources a user may or may not use limitations on the use of a particular resource by a user limitations on when a user may or may not use a particular resource and other related data. Authorization or access permissions may be set on a per account basis or local user accounts may be assigned to groups and inherit permissions and restrictions on the basis of group membership. User data may include personally identifying data such as the first and last name of the user the email address of the user the phone number of the user the address of the user and other such data.

A directory service may provide data associated with local user accounts in response to requests for said data. Requests may come in many forms and may request some or all of the data associated with one or more local user accounts stored in the local data store . A request may for example comprise a request from a client application such as an email application for an email address associated with a user account. In another example the login prompt provided by the operating system of the local computing device may request that the directory service authenticate a password associated with a user account. In a preferred embodiment of the present disclosure the directory service will interoperate with other applications using industry standards such as X.500 the directory access protocol DAP and the lightweight directory access protocol LDAP . Examples of such directory services include Active Directory eDirectory Open Directory and OpenLDAP .

Next a general description of the operation of the various components of the networked environment is provided. To begin it is assumed that at least one remote user account with sufficient authorization privileges exists and that the exporter application has access to the appropriate credentials for the remote user account .

The exporter application begins execution on the local computing device . As part of the initial stages of execution the exporter application queries the directory service for a listing of all local user accounts and a listing of all data associated with each local user account . In a preferred embodiment of the present disclosure the exporter application and the directory service communicate using LDAP and X.500. The directory service then responds to the query of the exporter application with a listing of all available data.

It is understood that depending on the number of local user accounts and the amount of data associated with each local user account it may be more efficient for the exporter application to request a list of user accounts and a list of associated data instead with each local user account instead of the requesting the associated data. This is particularly true where the number of local user accounts may be particularly large and therefore the volume of associated data may be particularly great. In other situations where the number of local user accounts is small or a minimal amount of associated data is stored it may be more efficient for the exporter application to request a list of all local user accounts and request all data associated with each local user account from the directory service .

After the directory service has responded to the query of the exporter application the exporter application renders a user interface on the display . The user interface renders a list of the local user accounts and the data associated with each local user account . The user interface further obtains a selection of local user accounts groups of local user accounts and data associated with each local user account .

After the user interface of the exporter application obtains a selection of local user accounts and data associated with each local user account the exporter application then validates the selection. Validation consists of checking that a minimum set of data associated with the local user accounts has been selected. Generally the minimum set of data required will comprise a first name a last name and an email address. However various implementations of the present disclosure may require additional data. If the exporter application detects an error during validation such as a lack of an email address then an error message will be rendered within the user interface displayed on the display .

If validation is successful the exporter application then renders a user interface on the display of the local computing device in order to obtain a selection of a list of permissions to assign to remote user accounts that will be created upon export. It is understood that the permissions associated with remote user accounts do not correspond to permissions associated with local user accounts . To the extent that permissions do correspond or overlap it is understood that such correspondence is often coincidental.

After a selection of permissions to be assigned has been obtained the selected local user accounts and associated data are exported. Export occurs when the authentication service is supplied with sufficient information to create remote user accounts which correspond to the selected local user accounts on a one to one basis. The authentication service will create new remote user accounts which share the same username as the corresponding local user account and which have the same associated data as was selected for export previously. In addition each newly created remote user account will have the permissions assigned to it that were previously selected.

In one embodiment of the present disclosure export is conducted in real time. Export begins with the exporter application directing the local computing device to communicate across the network with the remote computing environment . The exporter application supplies previously supplied authentication credentials to the authentication service . Upon authentication of the exporter application the directory service is queried for the selected data associated with each selected local user account . A list of the selected local user accounts the data selected for export associated with each local user account and the selected permissions to be assigned are then supplied across the network to the authentication service . Upon receipt of the exported data the authentication service creates remote user accounts which correspond to the selected local user accounts . The created remote user accounts and the selected local user accounts should have the username and selected associated data in common.

In a second embodiment of the present disclosure export is conducted as a batch operation. In this particular embodiment export comprises of the exporter application querying the directory service for selected local user accounts and associated data. The usernames and other selected data associated with the selected local user accounts are written to a file stored on the local computing device or the local data store . The file may comprise a text file formatted in compliance with the extensible markup language XML standard a flat file a comma or tab separated value file CSV or TSV or other similar file. Writing the selected data associated with the selected local user accounts to file allows for the exported information to be manually or programmatically verified. Subsequently the file is uploaded to the authentication service either manually or programmatically. After the file is uploaded the authentication service creates remote user accounts which correspond to the selected local user accounts . The created remote user accounts and the selected local user accounts should have the username and selected associated data in common.

Regardless of the manner of export the authentication service contacts the user associated with each newly created remote user account using the imported information associated with each remote user account in order to permit the user associated with the newly created remote user account to create suitable authentication credentials. Users may be contacted in real time as the associated remote user account is created or users may be contacted in batch after the authentication service has completed importing all selected local user accounts and created all corresponding remote user accounts

In one particular embodiment the authentication service sends an email to the email address associated with the newly created remote user account . The email may contain instructions for creating a new password as well as either a temporary password or a URL linking to a network page such as a web page that permits a user to create a new password. Additional security may be provided by marking the temporary password or the URL as valid for a predetermined period of time such as 24 48 or 72 hours. The temporary password or URL will cease to function after predetermined period of time has passed forcing a user to quickly create a new and secure password.

In another particular embodiment the authentication service causes a letter containing a temporary password to be mailed to the mailing address associated with the newly created remote user account . The temporary password will permit the user associated with the newly created remote user account to login to the remote computing environment through the authentication service .

In a third particular embodiment the authentication service causes a phone call to be made to a phone number associated with the newly created remote user account . While live operators may be used it is expected that automated dialers will be used to make the phone call. The purpose of the phone call is to provide the user associated with the newly created remote user account with a temporary password which can be used to access the remote computing environment through the authentication service .

Referring next to shown is an example user interface denoted herein as user interface according to various embodiments of the present disclosure. It is understood that the user interface is rendered by the exporter application on the display of the local computing device . In this particular embodiment user interface is generated by the exporter application after querying the directory service for a list of local user accounts and a list of data available to the directory service that is associated with each local user account . User interface subsequently lists the response to the exporter application s query in order to permit the local computing device to obtain a user interaction selecting a plurality of local user accounts and associated data for export from the local computing environment to the remote computing environment .

In some embodiments of the present disclosure the exporter application may preselect a minimum set of associated data necessary for the creation of remote user accounts . For example the first name last name and an email address or other item of contact information may be selected in order to create default usernames and permit users to be contacted in order to create a password. In the event that data items from the minimum set have not been selected when export begins an error message would be rendered on the display and export would halt. The error message would describe in detail the nature of the error identify the omitted data item necessary for export and provide other necessary information or instructions sufficient for a user to correct the error.

Turning now to shown is a second example user interface denoted herein as user interface according to various embodiments of the present disclosure. It is understood that the user interface is rendered by the exporter application on the display of the local computing device . In this particular embodiment user interface is generated by the exporter application in response to the local computing device obtaining a user interaction to specify options. An options screen has been subsequently displayed. The options screen permits the local computing device to obtain from a user selections that specify desired behavior for the export of local user accounts from the local computing environment to the remote computing environment . In this particular embodiment the options screen allows for the selection of export to a file or automatically to a remote server within the remote computing environment or to write the exported information to a flat file or XML file. Other embodiments of the present disclosure may provide for additional options within the options screen as necessary.

Moving on to shown is a third example user interface denoted herein as user interface according to various embodiments of the present disclosure. It is understood that the user interface is rendered by the exporter application on the display of the local computing device . In this particular embodiment user interface is generated by the exporter application to permit the local computing device to obtain a user interaction specifying permissions associated with remote user accounts of the remote computing environment to assign to previously selected local user accounts .

Referring next to shown is a flowchart that provides one example of the operation of a portion of the exporter application according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the exporter application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the local computing environment according to one or more embodiments.

Beginning with box the exporter application analyzes the selection of users and associated user data. It is assumed that the exporter application has already queried the directory service for a list of local user accounts and associated data. It is further assumed that the results of the query have already been rendered within user interface and a user selection has been obtained.

As part of its analysis the exporter application first determines which local user accounts have been selected for export. Such a determination is made by checking for the selection of an individual local user account or the selection of a group to which a local user account belongs. The exporter application then determines which data associated with the local user accounts has been selected for export.

Proceeding to box the exporter application validates the selected data. Validation comprises of checking to determine if a predefined minimum set of data associated with the local user accounts has been selected. In many embodiments the minimum set of data comprises of a first name a last name and at least one method for contacting a user associated with a user account. Validation may but need not be conducted on a per field basis. For example more than one email address may be associated with a local user account . Validation may require that at least one email address be selected but need not require that a specific email address be selected. If validation fails execution proceeds to box . However if validation succeeds execution proceeds to box .

Box represents the case where validation has failed. In this instance the exporter application causes an error message to be rendered within the user interface of the display on the local computing device . The contents of the error message are expected to be descriptive in identifying the source of the error and specifying how the error can be corrected. Execution then proceeds back to the start where a new user selection is obtained in response to the error message.

Box represents the case where validation has succeeded. The exporter application then proceeds to write the selected data to file for export. The file is generally expected to be a text file in order to permit manual verification of the exported data before upload to the authentication service if desired. Such text files may be in any number of forms such as an extensible markup language XML file or a flat file such as a comma separated value CSV or tab separated value TSV file. However a binary file may be desired in certain implementations or embodiments of the present disclosure and may therefore be used instead of a text file.

Proceeding to box the exporter application determines if a selection of an option to automatically upload the exported data to the authentication service has been obtained. It is understood that obtaining a user selection of the option to automatically upload the exported data includes obtaining any necessary information such as login or authentication credentials including an appropriate username and password and a network address such as an IP address or a hostname. If a selection of the option to automatically upload the exported data has not been obtained then execution ends. However if a selection for the option to automatically upload the exported data has been obtained then execution proceeds to box .

In box the exporter application has obtained a user interaction indicating that the exporter application should automatically upload the exported data. The exporter application transfers the file containing the exported user account data to the authentication service . If authentication is necessary and credentials were supplied then the exporter application will first authenticate itself before beginning the file transfer. If the file is particularly large for example as a result of a large number of users or a voluminous amount of associated data the exporter application may compress the file using one of any number of algorithms known to those of ordinary skill in the art before beginning transmission. The purpose of such compression is to reduce the amount of bandwidth used and the decrease the transmission time.

The exporter application may also implement multiple security measures to protect user data before beginning transmission. Various embodiments may choose to encrypt the file using one of any number of algorithms known to those of ordinary skill in the art before beginning transmission. Examples of such algorithms include the Advanced Encryption Standard AES Triple DES 3DES Blowfish Twofish Serpent or other such algorithms. Alternatively the network connection between the local computing device and authentication service may be secured using application protocols such as secure sockets layer SSL or transport layer security TLS . Encrypting the file protects the contents of the file in the event that the file is intercepted during transmission or a copy is obtained after transmission. Securing the connection between the local computing device and the authentication service prevents interception of the file during transmission but does not maintain the security of data within the file after transmission is complete.

With reference to and shown is a schematic block diagram of the remote computing environment and the local computing environment according to an embodiment of the present disclosure. The remote computing environment constitutes a networked plurality of computing devices . The local computing environment includes one or more local computing devices . Each computing device and local computing device includes at least one processor circuit for example having a processor or and a memory or both of which are coupled to a local interface or . To this end each computing device or may comprise for example at least one server computer or like device. The local interface or may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory or are both data and several components that are executable by the processor or . In particular stored in the memory and executable by the processor is the authentication service and potentially other applications. Also stored in the memory may be a data store and other data such as data associated with remote user accounts . Similarly a local data store containing data associated with local user accounts and other such data may be stored in the memory . In addition an exporter application and a directory service may be stored in the memory and executable by the processor . In addition an operating system or may be stored in the memory or and executable by the processor or .

It is understood that there may be other applications that are stored in the memory or and are executable by the processor or as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Flash or other programming languages.

A number of software components are stored in the memory or and are executable by the processor or . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor or . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory or and run by the processor or source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory or and executed by the processor or or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory or to be executed by the processor or etc. An executable program may be stored in any portion or component of the memory or including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memory or is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory or may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor or may represent multiple processors or and or multiple processor cores and the memory or may represent multiple memories or that operate in parallel processing circuits respectively. In such a case the local interface or may be an appropriate network that facilitates communication between any two of the multiple processors or between any processor or and any of the memories or or between any two of the memories or etc. The local interface or may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor or may be of electrical or of some other available construction.

Although the exporter application and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits ASICs having appropriate logic gates field programmable gate arrays FPGAs or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowchart of shows the functionality and operation of an implementation of portions of the exporter application . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowchart of shows a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the exporter application that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system.

The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

