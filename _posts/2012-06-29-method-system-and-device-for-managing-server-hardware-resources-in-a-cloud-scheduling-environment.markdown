---

title: Method, system, and device for managing server hardware resources in a cloud scheduling environment
abstract: A method, system, and device for managing hardware resources in a cloud scheduling environment includes a zone controller. The zone controller can manage groups of node servers in a cloud datacenter using a checkin service. The checkin service allows server groups to be created automatically based on one or more hardware characteristics of the node servers, server health information, workload scheduling or facilities management parameters, and/or other criteria.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09207988&OS=09207988&RS=09207988
owner: Intel Corporation
number: 09207988
owner_city: Santa Clara
owner_country: US
publication_date: 20120629
---
 Cloud computing often refers to the provision of computing resources as a service usually by a number of computer servers that are networked together at a location that is remote from the location from which the services are requested. A cloud datacenter refers to the physical arrangement of servers that make up a cloud or a particular portion of a cloud. For example servers can be physically arranged in the datacenter into rooms groups rows and racks. A datacenter may have one or more zones which may include one or more rooms of servers. Each room may have one or more rows of servers and each row may include one or more racks. Each rack may include one or more individual server nodes. Servers in zones rooms racks and or rows may be arranged into groups based on physical infrastructure requirements of the datacenter facility which may include power energy thermal heat and or other requirements.

Notwithstanding its physical location within a datacenter a server or portions of its resources may be allocated e.g. for use by different customers of the datacenter according to actual or anticipated use requirements such as security quality of service throughput processing capacity and or other criteria. As an example one customer s computing workload may be divided among multiple physical servers which may be located in different rows racks groups or rooms of the datacenter or among multiple processes on the same server using virtualization. Thus in the context of virtualization servers can be grouped logically to satisfy workload requirements.

A cloud scheduling system refers to computer software that is used to manage the server resources in a cloud datacenter. Cloud scheduling systems attempt to reconcile customers workload requirements with facilities management criteria and or other requirements and allocate the cloud s server resources accordingly. In some cases scheduling may be complicated by physical configurations that contain heterogeneous groups of servers e.g. zones rooms groups rows or racks in which individual servers have different hardware configurations. This can be a common occurrence as many datacenters replace or upgrade servers only as needed e.g. rather than upgrading an entire group at once for cost reasons or otherwise.

While the concepts of the present disclosure are susceptible to various modifications and alternative forms specific embodiments thereof have been shown by way of example in the drawings and will herein be described in detail. It should be understood however that there is no intent to limit the concepts of the present disclosure to the particular forms disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives consistent with the present disclosure and the appended claims.

In the following description numerous specific details such as logic implementations opcodes means to specify operands resource partitioning sharing duplication implementations types and interrelationships of system components and logic partitioning integration choices are set forth in order to provide a more thorough understanding of the present disclosure. It will be appreciated by one skilled in the art however that embodiments of the disclosure may be practiced without such specific details. In other instances control structures gate level circuits and full software instruction sequences have not been shown in detail in order not to obscure the description of the of the concepts described herein. Those of ordinary skill in the art with the included descriptions will be able to implement appropriate functionality without undue experimentation.

References in the specification to one embodiment an embodiment an example embodiment etc. indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may not necessarily include the particular feature structure or characteristic. Moreover such phrases are not necessarily referring to the same embodiment. Further when a particular feature structure or characteristic is described in connection with an embodiment it is submitted that it is within the knowledge of one skilled in the art to effect such feature structure or characteristic in connection with other embodiments whether or not explicitly described.

Embodiments of the concepts described herein may be implemented in hardware firmware software or any combination thereof. Embodiments implemented in a computer system may include one or more point to point or bus based interconnects between components. Embodiments of the concepts described herein may also be implemented as instructions carried by or stored on one or more machine readable or computer readable storage media which may be read and executed by one or more processors. A machine readable or computer readable storage medium may be embodied as any device mechanism or physical structure for storing or transmitting information in a form readable by a machine e.g. a computing device . For example a machine readable or computer readable storage medium may be embodied as read only memory ROM device s random access memory RAM device s magnetic disk storage media optical storage media flash memory devices mini or micro SD cards memory sticks and others.

In the drawings specific arrangements or orderings of schematic elements such as those representing devices modules instruction blocks and data elements may be shown for ease of description. However it should be understood by those skilled in the art that the specific ordering or arrangement of the schematic elements in the drawings is not meant to imply that a particular order or sequence of processing or separation of processes is required. Further the inclusion of a schematic element in a drawing is not meant to imply that such element is required in all embodiments or that the features represented by such element may not be included in or combined with other elements in some embodiments.

In general schematic elements used to represent instruction blocks may be implemented using any suitable form of machine readable instruction such as software or firmware applications programs functions modules routines processes procedures plug ins applets widgets code fragments and or others and that each such instruction may be implemented using any suitable programming language library application programming interface API and or other software development tools. For example some embodiments may be implemented using Java C and or other programming languages. Similarly schematic elements used to represent data or information may be implemented using any suitable electronic arrangement or structure such as a register data store table record array index hash map tree list graph file of any file type folder directory database and or others.

Further in the drawings where connecting elements such as solid or dashed lines or arrows are used to illustrate a connection relationship or association between or among two or more other schematic elements the absence of any such connecting elements is not meant to imply that no connection relationship or association can exist. In other words some connections relationships or associations between elements may not be shown in the drawings so as not to obscure the disclosure. In addition for ease of illustration a single connecting element may be used to represent multiple connections relationships or associations between elements. For example where a connecting element represents a communication of signals data or instructions it should be understood by those skilled in the art that such element may represent one or multiple signal paths e.g. a bus as may be needed to effect the communication.

Traditionally cloud scheduling systems rely on centralized workload management software to initially identify all of the servers in the datacenter and determine when new servers are added by periodically polling the network. The management software typically creates and maintains a list of all of the IP addresses in the cloud. This top down approach to server management is not as useful in cloud datacenter environments in which the hardware configurations workload requirements health status of individual servers and or facilities management policies can change frequently or in which it may be desirable to allow individual servers to be used to satisfy multiple different or overlapping requirements.

Referring now to in one embodiment a system for managing server hardware in a zone of a cloud datacenter environment which may include multiple zones includes a zone manager server . The illustrative zone manager server operates a zone controller and a checkin service . As described in detail below the zone controller and the checkin service enable individual node servers to initiate the process of joining the zone . The system also includes one or more group manager servers each of which manages a group of one or more of the node servers . Each group manager server can initiate the process of adding its group to the zone . The illustrative zone controller can create groups and assign nodes to groups based on capabilities of the processor hardware including real time server health data that are available at each node server and or other criteria. The illustrative group controller can collect a variety of data from the node servers in its group which can be used to create or modify groups for monitoring generating alerts and or for other purposes. In this way server hardware resources in a cloud datacenter environment can be allocated and managed dynamically in response to changes in processor capabilities server health issues and or a variety of other parameters without incurring the overhead of a top down approach.

The illustrative zone manager server includes at least one processor memory an input output I O subsystem at least one data storage device and communication circuitry . The zone manager server may be embodied as any suitable type of server computer or other computing device capable of performing the functions and features described herein as being performable by the zone manager server or any of its components. For example the zone manager server may be embodied as a computer a personal computer PC a desktop computer a laptop computer a notebook computer a handheld computer a server a server array or server farm a web server a network server an enterprise server an Internet server a work station a mini computer a main frame computer a supercomputer a network appliance a web appliance a distributed computing system multiprocessor systems processor based systems or combination of any of the foregoing.

The illustrative processor includes at least one processor core . In addition to an amount of cache memory the processor includes or is otherwise communicatively coupled to the memory . The memory may be embodied as any type of suitable memory device such as a dynamic random access memory device DRAM synchronous dynamic random access memory device SDRAM double data rate dynamic random access memory device DDR SDRAM and or other volatile memory device.

The processor is also communicatively coupled to the I O subsystem . While not specifically shown the illustrative I O subsystem may include a memory controller e.g. a memory controller subsystem or northbridge an input output controller e.g. an input output controller subsystem or southbridge and a firmware device. Of course in other embodiments I O subsystems having other configurations may be used. For example in some embodiments the I O subsystem may form a portion of a system on a chip SoC and be incorporated along with the processor and other components of the zone manager server on a single integrated circuit chip. As such it will be appreciated that each component of the I O subsystem may be located on a common integrated circuit chip in some embodiments.

The I O subsystem is communicatively coupled to the zone controller the checkin service the data storage device the communication circuitry and one or more communicate ports . The zone controller is embodied as one or more computerized programs logic and or instructions e.g. software and or firmware that are configured to manage the arrangement of server computers in the zone . Details relating to the operation of the zone controller are described below with reference to . The checkin service is embodied as one or more computerized programs logic and or instructions e.g. software and or firmware that are configured to manage requests from various computer servers e.g. group manager servers and or node servers to join the zone . Details relating to the operation of the checkin service are described below with reference to .

Portions of the data storage device may be embodied as any suitable device for storing data and or computer instructions such as disk storage e.g. hard disks a network of physical and or logical storage devices and or others. In the illustrative embodiment a zone identifier and zone topology data reside in the data storage device . In addition portions of the zone controller and or the checkin service may reside in the data storage . Portions of the zone identifier the zone topology data the zone controller and or the checkin service may be copied to the memory during operation for faster processing or other reasons.

The communication circuitry may be embodied as one or more devices and or circuitry configured to enable communications between or among the zone manager server the group manager server s and or the server node s via a communication network . The communication circuitry may include one or more wired and or wireless network interfaces or cards to facilitate communications over the wired and or wireless portions of the network . As described below the communication port s are used by the zone controller to exchange communications with the group manager server s and or the node server s . Any suitable number of communication ports 1 to N where N is a positive integer may be provided according to the requirements of a particular design or implementation of the system .

Although not specifically shown the I O subsystem may be communicatively coupled to one or more peripheral device s such as a display touchpad keypad microphone speaker and or others depending upon for example the intended use of the zone manager server . Further it should be appreciated that the zone manager server may include other components sub components and devices not illustrated in for clarity of the description.

The group manager server s may be embodied as any suitable type of server computer or other computing device capable of performing the functions and features described herein as being performable by the group manager server s or any of its components. For example the group manager server s may be embodied as any of the types of computing devices mentioned above in the description of the zone manager server . In general the group manager server s include hardware components e.g. processor memory I O subsystem data storage communication circuitry similar or analogous to those described above in connection with the zone manager server therefore those descriptions are not repeated here. Any suitable number 1 to Y where Y is a positive integer of group manager servers may be included in the zone according to the requirements of a particular design or implementation of the system .

The group controller is embodied as one or more computerized programs logic and or instructions e.g. software and or firmware that are configured to manage the arrangement of node servers in the group of servers managed by the group manager server using a group identifier group server data and message queues or channels . The group controller can initiate the process of joining the zone and or any other zone of the datacenter environment using its group identifier . Any suitable number 1 to M where M is a positive integer of message queues may be provided at a group manager server depending on the requirements of a particular design or implementation of the system . In general the message queues are configured to receive status messages from node servers in the group. Details relating to the operation of the group controller are described below with reference to .

The node server s may be embodied as any suitable type of server computer or other computing device capable of performing the functions and features described herein as being performable by the node server s or any of its components. For example the node server s may be embodied as any of the types of computing devices mentioned above in the description of the zone manager server . In general the node server s include hardware components e.g. processor memory I O subsystem data storage communication circuitry similar or analogous to those described above in connection with the zone manager server . The illustrative node server s includes at least one processor . The illustrative processor includes at least one processor core . In addition to an amount of cache memory the processor includes or is otherwise communicatively coupled to the memory . The processor is also communicatively coupled to the I O subsystem . The I O subsystem is communicatively coupled to the node identifier the node controller the communication circuitry the communication port and the data storage device . Portions of the data storage device may be embodied as any suitable device for storing data and or computer instructions such as disk storage e.g. hard disks a network of physical and or logical storage devices and or others. Any suitable number 1 to Z where Z is a positive integer of node servers may be included in the zone according to the requirements of a particular design or implementation of the system .

The node controller is embodied as one or more computerized programs logic and or instructions e.g. software and or firmware that are configured to manage communication of a node server with other components of the system using among other things communication circuitry and a communication port . Portions of the node controller and or the node identifier may reside in the data storage device . In some embodiments the node identifier may be stored in non volatile memory associated with the processor or processor core e.g. in flash memory . Details relating to the operation of the node controller are described below with reference to .

The network may be embodied as any type of wired and or wireless telecommunications network. For example the network may be embodied as or otherwise include one or more public or private cellular networks telephone Digital Subscriber Line DSL or cable networks local or wide area networks publicly available global networks e.g. the Internet or any combination thereof. For example in some embodiments the network may be embodied as or otherwise include a Global System for Mobile Communications GSM cellular network. Additionally the network may include any number of additional devices as needed to facilitate communication between or among the zone manager server the node servers and the group manager servers such as routers switches intervening computers and or others. Any suitable communication protocol e.g. TCP IP may be used to effect communication over the network depending on for example the particular type or configuration of the network . In the some embodiments a broadcast messaging framework and or publish and subscribe communication environment may be used. For example in some embodiments a Zero Configuration Networking Zeroconf or similar network communication environment may be used in combination with an Advanced Message Queueing Protocol AMQP Active Message Queueing Active MQ or similar messaging framework.

In general the components of the zone manager server the group manager server s and the node server s are communicatively coupled as shown in by one or more signal paths. Such signal paths may be embodied as any type of wired or wireless signal paths capable of facilitating communication between the respective devices. For example the signal paths may be embodied as any number of wires printed circuit board traces via bus point to point interconnects intervening devices and or the like. Also generally speaking some of the components of the computing devices described above may be incorporated on a motherboard while other components may be communicatively coupled to the motherboard via for example a peripheral port.

Referring now to in an embodiment of the system each of the illustrative zone controller the checkin service the group controller and the node controller is embodied as one or more computerized modules e.g. software and or firmware . The illustrative zone controller includes a broadcaster module a listener module a channel creator module and a message communication module . As described below with reference to in operation the broadcast and listener modules enable group manager servers and or node servers to discover the existence of the zone manager server and subscribe to its zone . The channel creator module creates one or more communication channels configured to receive data packets from group manager servers that have subscribed to the zone for alerting monitoring analytics or other purposes. The message communication module configures the communication circuitry and communication ports to implements a messaging framework capable of handling the communication features described herein. For example in some embodiments the message communication module configures the zone controller for communication using a Zeroconf or similar service and a broker messaging framework such as an AMQP or similar protocol.

The illustrative checkin service includes a node discovery module a group mapping module a logical group creator module and a message communication module . As described below with reference to in operation the modules allow node servers to discover the zone subscribe to it and be assigned to one or more groups of the zone e.g. to be associated with one or more group manager servers . The message communication module enables the checkin service to listen for messages from node servers and is configured in a similar fashion to the message communication module .

The illustrative group controller includes a physical group creator module a message queue module and a message communication module . As described below with reference to in operation the physical group creator module associates new node servers with their respective physical location in the datacenter e.g. a rack by associating the node server with the group identifier of the group manager server of that physical location or rack. In other words the group controller manages the physical grouping of node servers to which the group manager server belongs. The message queue module creates and manages one or more of the separate message queues to which node servers subscribing to the group can send status data packets e.g. for monitoring and or data collection purposes. In some embodiments a topic based routing scheme such as an AMQP Topic routing procedure may be used for these data communications.

The message communication module configures the messaging framework at the group manager server to detect new node servers being added to the physical location or rack with which the group manager server is associated or located. In some embodiments the message communication module may be configured to use a fanout or broadcast message routing scheme e.g. an AMQP Fanout or broadcast routing procedure . It should be appreciated that node servers that are added to the group managed by the group manager server may have the same hardware configuration as or a different hardware configuration from other node servers in that group physical location or rack and indeed in the zone . In other words any group rack or other physical location of servers in the zone may be heterogeneous in the sense that it may contain servers that have different hardware configurations e.g. different processors having one or more different capabilities. As explained below the processor configurations and capabilities of each node server are made known to the system so that node servers can be assigned to group s within the zone based on their processor configurations capabilities health data and or other factors.

The illustrative node controller includes a node subscription data packet creator module a node status data packet creator module and a message communication module . As described below with reference to the node subscription data packet creator module creates a data packet that contains information about the hardware topology of the node server which can be used by the checkin service to assign the node server to a group in the zone . The node status data packet creator module creates a data packet that contains information about the current status or health of the node server arranged in a special compressed data format which can be received by one or more of the message queues of the group manager server for data collection and or monitoring purposes. The message communication module is configured in a similar fashion to the message communication module described above. As described below with reference to the message communication module publishes node subscription data packets and node status data packets including the node identifier for receipt by the checkin service using a suitable routing procedure of the implemented messaging framework. For example in some embodiments a direct routing procedure such as an AMQP Direct Protocol or similar mechanism may be used for such communications.

Referring now to an illustrative method executable as computerized logic and or instructions by the various modules of the zone controller to broadcast the existence of the zone manager server to other servers on the network is shown. At block the method creates a hello data packet i.e. a data packet that is configured to identify the zone manager server to other servers in the system . The hello data packet or zone data packet includes e.g. as part of the packet header the zone identifier which uniquely identifies the zone manager server vis vis other servers in the system . In some embodiments the zone identifier may be created e.g. by an administrator of the zone or an administrator of the datacenter using a unique identifier associated with a processor or central processing unit CPU of the zone manager server and a hash value provided by the administrator. The illustrative hello data packet also includes a label or tag e.g. a text label including the word zone that identifies the zone manager server as the server that is configured to manage the particular zone in other words the server that has the zone controller installed thereon . The illustrative hello data packet further includes the IP address of the zone manager server .

At block the method opens a communication port e.g. a Zeroconf or similar port and broadcasts the hello data packet to the network . At block the method listens using e.g. a Zeroconf or similar listener for acknowledgment ACK messages that may be issued by one or more group manager servers in response to the hello data packet. The method interprets the ACK messages as requests by the issuing group manager servers to join the zone . An ACK data packet generated by a group manager server includes the IP address of the group manager server issuing the ACK message and a label or tag e.g. a text label including the word group that identifies the group manager server as a server that is configured to manage a group of node servers in other words a server that has the group controller installed thereon . In this way the group manager servers can initiate the process of joining the zone or another zone in response to their discovering the zone via the broadcast by the zone controller of the hello data packet. Thus group manager servers can in some embodiments be associated with multiple different zones if they are within the zones broadcast range.

At block the method determines whether the sender of a given ACK message that has been received at block e.g. by the listener module is a group manager server e.g. based on the presence of the text label group in the ACK packet header . If the method determines at block that the ACK message was not sent by a group manager server the method ignores the ACK message returns to block and continues listening for ACK messages from group manager servers . If the method determines at block that the ACK message is from a group manager server the method updates that zone topology data at block to reflect that the group manager server sending the ACK message has joined the zone . For instance in some embodiments the method may parse the IP address and group information from the header of the ACK data packet and store it in one or more data tables of the zone topology data .

At block the method creates one or more communication channels to be used for periodically receiving information from the group manager server and designates a communication port for each such channel. In some embodiments separate communication channels e.g. AMQP channels are created for Alerts Policies and Analytics so that communications received by the zone controller can be allocated to a different channel based on the communication type. Similarly other channels can be created for Security Power and or any other category for which it may be desirable to monitor information about the servers in the zone . The method sends a zone subscriber data packet containing the information for each of the communication channels and its respective communication port to the group manager server s that have sent ACK messages to the zone controller in response to the hello data packet. In other words when a group manager server joins the zone it is provided with communication channel information so that it can periodically report certain types of information to the zone controller on the appropriate channels. In some embodiments the zone subscriber data packet includes the zone identifier and a port number of the communication port associated with each of the separate communication channels e.g. alerts policies analytics created by the zone controller . In any event the zone subscriber data packet enables the responding group manager servers to subscribe to the zone for scheduling monitoring workload and or facilities management and or other purposes. The establishment of the communication channels allows potentially a wide variety of information about the group manager server and or node servers in its group to be considered by the zone controller in the formation of new groups in the zone and in making scheduling and workload allocation decisions.

At block the method installs one or more instances of the checkin service in different physical locations e.g. at other server nodes of the datacenter so that node servers can be discovered and added to the group managed by the group manager server that responded to the hello data packet and has thereby been added to the zone . In the sense that each checkin service can be installed at a different physical location from the zone controller the checkin service may be considered as being analogous to a client piece of a client server computer application.

Each checkin service is configured with a pre designated communication port and a namespace which indicates the IP address of the server hosting the checkin service and a label or tag e.g. a text label containing the word checkin identifying it as a checkin service. In some embodiments the checkin service may be implemented as a Zeroconf or similar service. The physical location of the checkin services in the datacenter may be determined in advance e.g. by a system administrator. As described further below the checkin services allows node servers to be discovered and added to groups managed by the various group manager servers in the zone .

Referring now to an illustrative method executable as computerized logic and or instructions by the checkin service to add a node server to a logical group of servers e.g. a group that is formed based on functionality hardware topology server health and or other parameters as opposed to physical location is shown. The checkin service is configured to monitor the communication of node subscription data packets from node servers that are within a defined range of IP addresses which may be specified by a system administrator or may simply include the IP addresses of all of the node servers that are within broadcast range of the checkin service . The checkin service maintains group manager data which includes a data table or other suitable data structure that contains the IP addresses of all of the group manager servers and their respective communication channel information e.g. port number channel type as assigned by the zone controller . At block the method opens the communication port to listen for node subscription data packets from node servers e.g. messages that have a node tag in the packet header . When a packet with a node tag is received at block the method determines the node identifier which may need to be decoded using cryptographic techniques as should be appreciated by those skilled in the art and creates a node hardware topology map based on the information contained in the node identifier . Using the node topology map the method formulates a node capability identifier which includes information about the node s hardware capabilities such as its CPU family memory technology type of network interface and or other characteristics of the server hardware. In other words the node capability identifier may be derived from the node identifier .

At block the method uses the group manager data to access relevant portions of the zone topology data to retrieve hardware topology information associated with the group or groups managed by the checkin service . More specifically in some embodiments each unique combination of hardware topology information e.g. CPU family memory technology type of network interface etc. is associated with a pre generated unique group identifier . For instance in some embodiments the zone topology data includes table entries that map the concatenation of relevant hardware characteristics e.g. CPU family memory technology type of network interface with unique group identifiers. At block the method compares the node s capability identifier e.g. a concatenation of CPU family memory technology type of network interface with the information obtained from the zone topology data to obtain the group identifier with which to associate the node server . At block the method continues comparing the node s capability identifier to information in the zone topology data until a suitable match is found. Based on the node s capability identifier and the zone topology data the node server is assigned to a group within the zone . At block the method sends the group identifier and its associated message channels to the node server using e.g. an AMQP Direct Address Protocol or similar mechanism and to the zone controller to update the zone topology data .

Referring now to an illustrative method executable as computerized logic and or instructions by the group controller to define a new physical group of servers to the system or add a new node server to a physical group is shown. At block a system administrator i.e. a person designates one server in a physical grouping of servers e.g. a rack as the group manager server that is the server that will host the group controller . Block is shown in dashed lines to illustrate that it is typically a step that is performed by a person although it may be automated in some embodiments. At block the method generates the group identifier for the group managed by the group manager server . In some embodiments the group identifier may be generated using a random unique identifier. In other embodiments the group identifier may be generated using a portion e.g. the first 24 bits of the IP address of the group manager server that all of the servers in the group will have in common.

At block the method detects e.g. via an AMQP broker or similar mechanism a new node server being added to the physical location with which the group manager server is associated e.g. the rack in which the group manager server is located . When the method detects a node server as being added the method sends a data packet containing the group identifier to the IP address of the node server at block . In some embodiments an AMQP broker or similar mechanism may be used as an intermediary to facilitate this communication.

As noted above the group controller manages a number of message queues or channels that it uses to collect data from node servers that have subscribed to its group. These message queues may be referenced by a namespace that includes the group identifier and a descriptor that indicates a particular data collection purpose. For instance separate message queues may be hosted by the group controller for among other things performance metrics health alerts e.g. alerts relating to the health of a particular server in terms of throughput quality of service and or other factors health actions e.g. actions taken in response to a health alert and or others. At block the method may subscribe the newly added node server to the message queues in a similar fashion to block described above.

Referring now to an illustrative method executable as computerized logic and or instructions by the node controller to communicate with the system is shown. At block the method determines the unique node identifier for the node server e.g. obtains the node identifier from the server s chipset . At block the method formulates and publishes a node status data packet which includes in addition to the node identifier and encrypted tag which may contain the node capability identifier described above data relating to other various characteristics of the node that the associated group controller may be monitoring via the message queues . The node status data packet is sent to a checkin service that has the node s IP address in the range of IP addresses that it has been configured to monitor using e.g. an AMQP Direct Protocol or similar mechanism .

In some embodiments at block the method may formulate the node status data packet to use a special compressed data format to store indicators of node health. In some embodiments indicators of node health e.g. CPU temperature available memory errors etc. node quality of service or other monitored parameters are represented in a fixed length bit field of for example 24 bits. Where indicators of node health are detected e.g. using various sensors that are coupled to the node server in ways that should be understood by those skilled in the art threshold values are set in advance to indicate when each particular indicator exceeds an acceptable range or otherwise needs attention. In the illustrative bit field each bit represents one of the monitored parameters or health components and a bit change e.g. from 0 to 1 or vice versa indicates that the parameter has exceeded its pre defined threshold. As one example if a node health bit field has a value of 10110101 this may indicate that 5 out of the 8 monitored parameters are currently operating outside the acceptable range. In this way real time information about how particular node servers are performing can be factored into group assignment decisions and or scheduling decisions.

At block the method receives the group identifier associated with the group manager server managing the group to which the node server is subscribed from the checkin service or from the group controller . At block the method may determine whether the node server is a new node being added to a physical location in the zone e.g. the rack managed by the group manager server and if so at block subscribe the node server to the group manager server s message queues to push node data packets for data collection purposes. If the node server is not newly added to a physical location but is involved in an automatic group formation via the checkin service then block is skipped.

In this way logical groups of servers in a zone can be automatically formed on the fly e.g. as functionality requirements and or processor capabilities or other parameters change during the operation of the system irrespective of the physical locations of the servers in the datacenter .

Illustrative examples of the devices systems and methods disclosed herein are provided below. An embodiment of the devices systems and methods may include any one or more and any combination of the examples described below.

In one example a zone server for use in a cloud datacenter environment including a communication network and at least one group server includes a zone controller configured to broadcast a zone data packet identifying the zone server to the network listen for acknowledgement data packets issued by one or more group servers in response to the zone data packet and subscribe a group server to a zone managed by the zone server in response to receipt of an acknowledgment data packet from the group server. In an example the zone controller may include a broadcast module to broadcast the zone data packet to the network where the zone data packet includes a zone identifier uniquely distinguishing the zone server from other servers in the datacenter environment and a tag identifying the zone server as manager of the zone. In an example the zone controller may include a listener module to receive a plurality of data packets in response to the zone data packet and determine whether any of the plurality of data packets were issued by a group server. In an example the zone controller may include a channel creator module to create at least one communication channel configured for data communication with the group server. In an example the at least one communication channel may include a first communication channel configured to receive data communications from the group server corresponding to a first communication type a second communication channel configured to receive data communications from the group server corresponding to a second communication type and a third communication channel configured to receive data communications from the group server corresponding to a third communication type. In an example the first communication type may include alerts the second communication type may include policies and the third communication type may include analytics. In an example the zone server may include a checkin service to subscribe at least one node server to a group managed by the group server.

In another example a method for associating a group server with a zone server associated with a zone of a cloud datacenter environment includes broadcasting a zone data packet comprising data identifying the zone server to the cloud datacenter environment listening for acknowledgement data packets issued by one or more servers in the cloud datacenter environment in response to the zone data packet determining whether any acknowledgment data packets are issued by the group server and subscribing the group server to the zone associated with the zone server in response to determining that an acknowledgement data packet is issued by the group server. In an example the method may include sending a data packet including a plurality of communication channel information to the group server in response to determining that the acknowledgement data packet is issued by the group server. In an example the method may include initiating a checkin service to subscribe node servers to a group managed by the group server in response to determining that the acknowledgement data packet is issued by the group server. In a further example a computing device may include at least one processor and computer circuitry coupled to the at least one processor the computer circuitry being arranged to cause the at least one processor to perform the foregoing method. In another example at least one computer accessible storage medium includes a plurality of instructions that in response to being executed result in a computing device performing the foregoing method.

In an example a server for use in a cloud datacenter environment including a communication network a group server and at least one node server includes a checkin service configured to open a communications port to listen for node subscription messages issued by node servers determine hardware topology information about a node server from a node subscription message issued by the node server and assign the node server to a group managed by the group server based on the hardware topology information. In an example the hardware topology information may include central processing unit family data memory technology data and or type of network interface data. In an example the checkin service may be configured to access a group data table associating group identifiers with hardware topology information and compare the hardware topology information of the node server with hardware topology information in the group data table.

In another example a method for associating a node server with a group server associated with a zone of a cloud datacenter environment includes receiving a data packet from a node server determining from the data packet hardware configuration information about the node server comparing the hardware configuration information for the node server with hardware configuration associated with one or more group servers and subscribing the node server to a group managed by a group server in response to comparing the hardware configuration information for the node server with the hardware configuration associated with the group server. In an example the method may include sending a group identifier associated with the group server to the node server. In an example the method may include comparing at least one of central processing unit family data memory technology data and type of network interface data of the node server to at least one of central processing unit family data memory technology data and type of network interface data associated with the one or more group servers.

In a further example a computing device may include at least one processor and computer circuitry coupled to the at least one processor where the computer circuitry may be arranged to cause the at least one processor to perform the foregoing method. In another example at least one computer accessible storage medium includes a plurality of instructions that in response to being executed may result in a computing device performing the foregoing method.

In an example a group server for use in a cloud datacenter environment comprising a communication network associated with a physical location in the cloud data center environment includes a group controller configured to detect a new node server at the physical location send a group identifier to the new node server to associate the new node server with a group managed by the group server and subscribe the new node server to a plurality of message channels for data communication where each of the message channels corresponds to a different type of data being collected by the group controller for monitoring purposes. In an example the plurality of message channels may include a first message channel to receive data relating to metrics from the node server a second message channel to receive data relating to server health from the node server and a third message channel to receive data relating to alerts from the node server.

In another example a method for associating a node server with a group server associated with a physical location in a cloud datacenter environment includes detecting the node server as being newly added to the physical location generating a group identifier associated with the group server sending the group identifier to the node server in response to detecting the node server at the physical location and configuring a plurality of message queues at the group server each message queue to receive data packets of a different type from the node server. In an example the method may include sending the group identifier to the node server through a broker intermediary.

In a further example a computing device may include at least one processor and computer circuitry coupled to the at least one processor where the computer circuitry may be arranged to cause the at least one processor to perform the foregoing method. In another example at least one computer accessible storage medium includes a plurality of instructions that in response to being executed may result in a computing device performing the foregoing method.

In another example a node server for use in a cloud datacenter environment including a communication network and a group server includes a node controller configured to publish to the network a node data packet comprising a node identifier uniquely distinguishing the node server from other servers on the network node capability information where the node capability information comprises data relating to one or more hardware capabilities of the node server and node status information where the node status information may include data relating to at least one of server health power capabilities and quality of service. In an example the node controller may be configured to receive a group identifier associated with the group server in response to the node data packet. In an example the node controller may be configured to formulate the node status information using a fixed length bit field wherein each bit in the bit field indicates whether an indicator of node health has exceeded a threshold. In an example the bit field may include a maximum length in the range of about 24 bits.

In a further example a method for subscribing a node server to a group in a cloud datacenter environment comprising a communication network includes publishing information about at least one of hardware capabilities and health status of the node server to the network and receiving a group identifier associating the node server with a group in the cloud datacenter environment in response to publishing the information about the hardware capabilities and or the health status of the node server to the network. In an example the method may include formulating information about the health status of the node server using a compressed data format including a fixed length bit field in which each bit indicates whether a health status indicator exceeds a threshold. In a further example a computing device may include at least one processor and computer circuitry coupled to the at least one processor may be arranged to cause the at least one processor to perform the foregoing method. In an example at least one computer accessible storage medium may include a plurality of instructions that in response to being executed may result in a computing device performing the foregoing method.

In an example a method for managing servers in a zone of a cloud datacenter environment includes receiving data relating to one or more hardware capabilities of a node server in the zone from the node server assigning the node server to a first group of servers in the zone in response to the one or more hardware capabilities receiving data relating to one or more server health parameters of the node server and assigning the node server to a second group of servers in the zone in response to the one or more server health parameters. In an example the method may include broadcasting information relating to the zone to the cloud datacenter environment and receiving data from the node server in response to the broadcasting. In an example a computing device may include at least one processor and computer circuitry coupled to the at least one processor where the computer circuitry may be being arranged to cause the at least one processor to perform the foregoing method. In an example at least one computer accessible storage medium may include a plurality of instructions that in response to being executed may result in a computing device performing the foregoing method.

In an example at least one machine accessible storage medium includes a plurality of instructions that in response to being executed result in a computing device broadcasting a zone data packet comprising data identifying the zone server to the cloud datacenter environment listening for acknowledgement data packets issued by one or more servers in the cloud datacenter environment in response to the zone data packet determining whether any acknowledgment data packets are issued by the group server and subscribing the group server to the zone associated with the zone server in response to determining that an acknowledgement data packet is issued by the group server.

In an example the at least one machine accessible storage medium may include sending a data packet comprising a plurality of communication channel information to the group server in response to determining that the acknowledgement data packet is issued by the group server. In an example the at least one machine accessible storage medium may include initiating a checkin service to subscribe node servers to a group managed by the group server in response to determining that the acknowledgement data packet is issued by the group server.

While the concepts of the present disclosure have been illustrated and described in detail in the drawings and foregoing description such an illustration and description is to be considered as exemplary and not restrictive in character it being understood that only illustrative embodiments have been shown and described and that all changes and modifications consistent with the disclosure and recited claims are desired to be protected.

