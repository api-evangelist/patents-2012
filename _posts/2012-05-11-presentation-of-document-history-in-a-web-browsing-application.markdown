---

title: Presentation of document history in a web browsing application
abstract: In a collaborative computing environment, a method and system for displaying revisions associated with a hosted electronic document are disclosed. In accordance with the disclosed method and system, select revisions of an electronic document may be displayed to a user, recreating a visual history play-back of the evolution of the electronic document. The electronic document may be displayed in a web-browsing application, utilizing a Document Object Model (“DOM”) retrieving the select revisions via Asynchronous JavaScript and XML (“AJAX”) calls to a remote device/server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09135228&OS=09135228&RS=09135228
owner: Domo, Inc.
number: 09135228
owner_city: American Fork
owner_country: US
publication_date: 20120511
---
The present invention relates to document creation and collaboration systems. More particularly the present invention relates to utilizing a document object model DOM and related client server technologies to present revisions of a hosted electronic document within a web browsing application whereby selected revisions of the electronic document are presented in a superimposed sequence.

Electronic device users are increasingly able to collaborate on an ever growing number of types of documents and projects online. Users are able to access documents hosted by application providers online from their electronic devices typically via a web browsing application. Google Docs Microsoft Office Live collaborative internetlintranet websites such as wikis etc. are examples of services allowing users to create various types of documents e.g. word processing spreadsheets presentation etc. online and invite other people to revise these documents remotely. Changes to a document made by users are captured in the form of document revisions. A user accessing a shared online document may view various states of the document where a state also referred to as a revision of a document may include changes made by other users. The changes are usually delineated by different colors fonts formatting notations etc.

At present while document revisions are captured and can be listed in chronological order there is no convenient and efficient way to present to the user a logical story board of the changes made by various users. The user can compare any two revisions and be displayed the differences between the revisions in different colors but each revision is a snap shot of the document at a point in time with no visual connection to other revisions of the document. Changes made by one user may be in response to other changes made by a second user and may be later un done by a third user. Thus a document evolves in response to changes made by various users and it becomes necessary and an unfulfilled need in the prior art to allow the user to observe the evolution of the document or a portion of the document as a continuum and not as discrete snap shots of revisions as taught in the prior art.

In a collaborative computing environment a method and system for displaying revisions associated with a hosted electronic document are disclosed. In accordance with the disclosed method and system select revisions of an electronic document may be displayed to a user recreating a visual history playback of the evolution of the electronic document. The electronic document may be displayed in a web browsing application utilizing a Document Object Model DOM retrieving the select revisions via Asynchronous JavaScript and XML AJAX calls to a remote device server.

A timeline may be presented to the user displaying a graphical representation of various revisions of the electronic document. The timeline may act as an input control allowing the user to select one or more revisions. A sequence of revisions may be automatically traversed in a playback fashion superimposing revisions of the document on top of each other created a playback effect of the electronic document morphing between revisions. The user may control the attributes of the playback speed and direction of the playback zoom and pan etc.

Referring to in the prior art a web browser may access a remotely hosted document whose location is commonly denoted by a URL URI Uniform Resource Locater Identifier . The hosted document may be displayed in a web page of the web browser . Multiple remote users may be able to access the document from their web browsers and make modifications to the document. The modifications are saved as revisions associated with the document . A list of revisions associated with the document may be displayed to the user. The user may select one or more revisions and choose to view former revisions revert to a former revision or compare any two former revisions.

Referring now to in the one presently preferred embodiment a media player e.g. Windows Media Player QuickTime player RealPlayer iTunes Rhapsody player may display an animation movie clip . The animation. movie clip may be an animation of revisions of a document. In this example referring now also to user selected revisions and of the document may be animated into a movie clip and displayed by the media player .

In one embodiment the media player may play the movie clip off of a live media stream from a remote server. In an alternate embodiment the media player may play the movie clip from a file on the local electronic device or saved on a local network or a storage device accessible to the electronic device. In yet another embodiment the media player may be a plug in of the web browser e.g. an Adobe Flash plug in and may play the movie clip within the web browser please refer to for further discussion of this alternate embodiment. 

Referring now to the media player may allow the user to control the display of the media clip . The user may use common media controls such as play pause stop rewind fast forward a slider control etc. to control the speed and direction of the playback of the movie clip . The slider control may allow the user to control the frames of the movie clip where each frame may correspond to a revision of the document please refer to for a discussion of the correlation of frames and revisions. 

The movie clip may contain animation which morphs various document revisions into one another. Various colors may be used to delineate changes made by one user in one revision e.g. the word was appearing in a darker shade than the rest of the sentence Obama elected President . Balloons Brandon adds was Nov. 4 2008 may be displayed in the movie clip to further incorporate and display revision related information association with the document .

The movie clip may be comprised of all the revisions previously chosen by the user e.g. revisions and of the document whereby each revision is represented by at least one frame in the move clip . Animation morphing effects may be used in the compilation of the movie clip to create a smooth visual blending effect of one revision into the next. The user may use various media player controls to control the display of the movie clip . For example the user may control the direction of the playback movie clip and the speed at which it is played e.g. the user may choose to play backwards in time slowly where more recent revisions made by a user melt away and morph into earlier revisions of the document prior to more recent changes. In alternate embodiments the user may be able to pan around the movie clip within the media player zoom in and zoom out etc.

Referring to a data store e.g. a data store of a S.a.a.S. provider such as Google Docs may contain document revision data . The document revision data may include document information and related information on revisions of the document. The document revision data may be sufficient to define and recreate a document revisions to the document and additional notes on the revisions. For example the document revision data may encompass the sum of information accessed by a user s web browser to display a hosted document.

In one presently preferred embodiment of the invention the document revision data may be used to recreate revised states of a document based on revisions chosen by a user. For example a user may choose two random revisions from a list of revisions applicable to the document. In response the first revision of the document may be constructed. In the presently preferred embodiment the first revision may be constructed in the remotely hosted environment i.e. invisible to the user. In alternate embodiments the first revision may be rendered on the client s electronic device e.g. within a web browser.

A first revision image of the first revision may be created. Various common back end tools may be used to render the first revision image from the first revision . In various embodiments the first revision image may include an image of any portion of the first revision and may be subject to various settings such as resolution color depth size etc.

Referring now to a second revision may be recreated from the document revision data . A revision may include various common mark ups denoting changes to a document e.g. words underlined crossed out displayed in different colors balloons pointing to and containing information on changes etc. A second revision image may be constructed to capture a visual representation of the second revision with similar embodiments discussed above for the creation of the first revision image . 

Referring now to revision images may be combined into a media clip. The first revision image may be combined with the second revision image to form content within a media clip . The media clip may be an animation media file such as an Adobe Flash file. The media clip may be created via API application programming interface functions made available by the media creation application.

One of the API functions may be a morphing function which may combine the revision images and by creating a series of frames containing the images morphed into one another. For example the resulting media file may contain n frames representing the transition of the revision image into the revision image where 

Frames 3 through Frame n 1 contain a progressively decreasing revision image combined with a progressively increasing image and

Frame n contains the revision image . The morphing function may be invoked with various parameters controlling the morphing effect and may be set to produce animation clips of various lengths and properties.

The process may be repeated for all selected revisions where each new selected revision is combined and morphed with the previously selected revision such that the media clip contains an animation and morphing of all selected revisions into one another. Please note that the present invention is not restricted to one particular method of creating an animation but rather illustrates one simplified method whereby animation is created from morphing two images at one time and repeating the process for all successive images. In alternate embodiments the application used to generate the media clip may be utilized in different ways to create animation for example a series of revision images each representing a snapshot of a selected document revision may be passed into the animation creating application and an animation clip may be produced automatically based on various predefined settings.

A SaaS provider e.g. a hosted application provider such as Google Docs Microsoft Office Live etc. resides in a cloud i.e. a network such as the internet or an intranet . A client device connected to the cloud network can access a document hosted by the service provider . The client device may utilize a web browser or an equivalent applications with web access on a mobile device to access data of a hosted document on an application server of the service provider . The web browser may display the data of a hosted document to the user of the client device as a document

In response to a request from the user to view an animation of revisions of the document the web browser may transmit an instruction to the application server to produce a media clip of the data of a hosted document . As discussed in a media content may be automatically produced from revisions of a document on a media server which may be a separate physical server from the application server or may be an application running on the application server or may be a remote service providing media creation services or a remote media hosting site such as YouTube etc. The media content may contain a visual representation of various revisions in the data of a hosted document

The client device may download and or stream the media content and display the media clip to the user a user facing representation of the media content . In one possible embodiment shown in the web browser may in conjunction of the transmission of the instruction to the application server to create the media content launch another web browser with the address e.g. a URI of the media content . In another possible embodiment the web browser may initiate a plug in application gadget or any other component on the client device to access and display i.e. play the media clip off of the media content on the media server service .

In alternate possible embodiments various other methods may be utilized to allow a user to select revisions of a remotely hosted document creating media content from the selected revisions and displaying the media content to the user.

Referring to a web browser browsing application browser is illustrated displaying a document . The document may be hosted remotely e.g. at URL address http documents.atida.atd ccc key 123 and displayed in a tabbed browser page within the browser . The browser may be a PC based web browser e.g. Internet Explorer FireFox Safari Chrome Netscape etc. or a web browsing application on a mobile device e.g. BlackBerry web browser or any other hand held smart phone browser. 

A user may select a region of the document . The selection of the region may be done in various ways such as using GUI methods e.g. a selection tool a lasso a highlighting tool a touch based selection methodology etc. After selecting the region the user may choose a function to animate revisions applicable to the selected region . In one possible embodiment the user would choose a function from a context menu invoking revision playback applicable to the selected region . For example after selecting the region the user may right click their mouse or the equivalent function in any other pointing device and in response a context menu may be displayed. The user may then select an animation function e.g. Animate Region from the context menu .

In alternate embodiments the user may also select specific revisions e.g. based on revision authors timelines etc. The context menu may contain other additional functionality including choosing types of animation revisions and other functionality. In response to the user s issuing the animation command referring now to a media player may be displayed. The media player may display animated content which corresponds with the selected region . The media player may include standard playback controls e.g. play pause stop fast forward rewind skip a slide bar etc. 

A list of revisions may be displayed. The list of revisions may display various information on the revisions and may indicate the current revision animated . The user may use the slide bar control or any other control to advance and go back trough revisions in the list of revisions . In alternate embodiments the user may select specific revisions for playback and may choose settings such as the speed of the playback the direction i.e. going forward or backwards in history etc.

Referring now to the animated content may be presented as an alternating sequence of translucent images and solid images represented in as hollowed out fonts and underlined fonts respectively for illustrative purposes. The animated content may represent the chronological replay of the revisions selected appearing to the user as an evolving document. For example the revision labeled 1 week ago Sydney Pasted may be contain and thus be displayed as a letter 6 fading into view in response to advancement of the timeline of the chronological replay.

Referring now to in an alternate embodiment animated content may be displayed in a separate tab browser page in this example titled Revisions animation . The animated content may contain transparency for example when animating a transition. Please note that in diagram D the transparency is in the shape of a number 5 and is presented as an outline of the number 5 merely as in illustration of a transparency. 

In the alternate embodiment illustrated in the tab browser page may automatically display the animated content associated with a document being edited in a separate tab browser page . The animated content may be automatically updated in response to changes to and events generated in association with the document edited in the tab browser page .

In other alternate embodiments animated content associated with a document may be displayed on electronic devices e.g. mobile phones that may not be displaying the document. For example the electronic device may display animated content of a document hosted remotely separately from the document itself which may at the same time be edited via another electronic device.

In other alternate embodiments animated content may be created on the client s device. For example a browsing application on the client s electronic device may download all revisions from a server and create animated content from the revisions.

Referring to flowchart illustrates steps for generating and displaying revision animation content to a user. At step a user request for revision animation content is received. The user may submit the request from a client sided interface e.g. a GUI control on a document editing browser application from a Gadget etc. The request may be received by the server hosting the document or by a server associated with the server hosting serving the document. 

At step all revisions to be included in the revision animation may be identified. The user may have selected a range of revisions based on date or any other criteria. Alternatively or in addition to the user may have selected various specific revisions.

At step illustrated in further detail in the selected document revisions may be rendered into a graphics media file. For example a media file such as a Flash file composed of the selected revisions may be created.

At step the graphics media file is transferred to the user. The transfer may be accomplished in many various common ways of electronic media transmission via download streaming Ajax XMPP and other protocols technologies and methods.

At step the graphics media file may be displayed to the user in a web browser media player or via any other media display application. The user may control the properties and presentation of the displayed media e.g. playback direction speed size etc. 

In step of is illustrated as a smaller series of steps . At step selected revisions of the document may be loaded starting with retrieval of information on the first selected revision.

For example the user may select any number of revisions made by various users at various times etc. The revisions or information sufficiently describing the revisions to reconstruct the document per each revision may be retrieved. For example if a currently selected revision is a hypothetical revision made by a User A on Dec. 23 2008 at 6 pm information for presenting the document inclusive of all changes in that revision is retrieved.

At step all information retrieved at step in association with the current revision may be applied to the document. For example any textual changes made to the document in the current revision such as deleting a word may be applied.

At step the post revision document created at step may be captured as converted to an image or as an animation frame. In one possible embodiment an animation movie may be created by capturing and combining images of all revisions. In other possible embodiments other methods may be used to capture a visual representation of the post revision document.

At step the captured image may be converted into an animation frame in a media type file e.g. Adobe Acrobat movie Flash animation etc. At step which may be combined with step in alternate embodiments an animation effect e.g. fading may be added. For example as the current revision is added to the animation file a graphical transition such as the previous revision smoothly morphing into the current revision may be added.

At step a determination is made whether all the selected revision have been added to the media file thus the steps may be repeated until all the revisions have been added. In an alternate embodiment an animation producing program may receive all revisions as input and may output an animation file in a manner similar to but not strictly following steps .

In yet another possible embodiment illustrated in the steps associated with creating an animation off the revisions of the document may also include steps to pan scroll the document such that the region of the document affected by a the current revision is automatically scrolled into view. For example a Revision A may contain a change to line 10 of a document. Adjacent lines 5 15 with line 10 centered may be displayed in the animation media when the Revision A animation is played back. If the next Revision B contains changes to a line 100 of the document the animation may include animation of scrolling the document to make line 100 visible and then displaying Revision B .

Referring now to the step from of loading a selected revision may be followed by a step of determining whether the changes in the revision affect the same portion of the document as the previous revision. If at step it is determined that the current revision is in a portion of the document that is invisible in the previous animation view steps may be executed scrolling the document to include areas of the documents containing revisions in the revision animation media. Otherwise a negative determination at step may lead to execution of the step previously described in .

At step the document may be automatically scrolled to make the area of the document containing the current revision visible. For example if a page 1 of the document has been displayed in relation to the last revision and the current revision is on page 5 at step the document may be scrolled to page 5 . At step the visible portion of the document page 5 in this example may be converted to an image. At step changes from the current revision may be added to the image. At step the new image formed may be turned into an animation frame in the animation media file and at step a morphing effect may be applied to the animation media.

Referring to a browser may display document content in a browser page . The document content may be rendered from data that resides in a cloud i.e. remotely to the client device running the browser and accessible via the browser . A plug in e.g. a program running on the client electronic device and interacting with the browser may display an animation media .

The animation media may contain a visual representation of revisions associated with the document content . For example the plug in may be an Adobe Shockwave player and the content animation media may be a .swf or Shockwave supported file.

The plug in may display user controls allowing the user to control the playback of the animation media . The plug in may be downloaded and installed on the electronic device running the browser in response to a request by the browser to play the animation media or a pre installed plug in may be invoked in response to a request to play the animation media .

Referring now also to sample document code for displaying the animation media file in the plug in is illustrated. Code segment illustrate sample HTML code. The sample code segment may be any code in any one or more computer languages used in the browser to display the document please refer to . 

The sample document code may contain sample plug in code . The sample plug in code may be used to invoke the plug in which is used to display the animation media . The sample plug in code may contain information of the type of animation media to be played the source of the animation media etc. For example the sample plug in code may be 

In alternate embodiments non plug in applications or application extensions associated with a browser displaying a document may be used. For example widgets may be utilized to display animation media. In alternate embodiments using plug ins new browser tabs or windows may be automatically created to display animation media files. In other possible embodiments other means and technologies may be utilized to visually display a timeline depicting changes to a document without deviating from the scope of the present invention.

A web browser may be a popular browser such as Internet Explorer Apple Safari FireFox Google Chrome etc. A web browser may also be a client application on a mobile phone e.g. iPhone Blackberry etc. used to access information online.

In flow chart it is assumed a browser displays a document hosted remotely which includes revisions to the document also hosted remotely e.g. in the cloud over a network on a remote server on the Internet etc. At step the browser receives user input e.g. keyboard input mouse click touch screen or voice command etc. selecting one or more document revisions. For example the user may select multiple revisions associated with the document from a drop down list or from a context menu. The user input may be received indicating a selection of previous revisions. For example the browser may display a list of all previous revisions of the document and the user may select one or more previous revisions to display as animated media.

At step user input may be received to invoke revision animation. For example the browser may display a control e.g. as part of content displayed by the browser to invoke the animation of revisions. A control displayed to the user allowing the user to make the request may be labeled replay revision history or view revision history or recreate document timeline etc.

At step the browser may communicate back to the server an instruction to generate the animation content. For example using AJAX XMPP data posting or any other protocol or method the browser may request from the server to generate the animation media.

In two possible embodiments illustrated as steps and as one and as another the animation content may be retrieved and displayed to the user. In the first embodiment at step the browser may receive from the server a URI to the animation file. At step the browser may then open a new window and or launch an application and or navigate to the URI to display the animation media at the URI. For example a new browser window may be launched resized to an ideal size for playback of the content media and point to the URI to play the content media.

In the second possible embodiment at step a plug in or any other application on the client device may be invoked to access the URI of the animation media on the server. The plug in may then play the animation media e.g. using streaming on the client device displaying the animation media to the user.

Referring now to flowchart illustrates steps in another embodiment where animation media is created locally on the client device. At step a browsing application on a client device may receive a user s selection of revisions of a document. For example a browsing application displaying a document may display a list of available revisions of the document and the user may use various input methods to select any number of the revisions.

At step the user may invoke a command to initiate the animation play back of the revisions. For example the user may select a button in the browsing application called play back selected revisions . In response to receiving a user s command to create the animation of revisions at step the browsing application may send a request to a server e.g. a form GET POST AJAX or XMPP type request URL request or any other type of request to retrieve information associated with the selected revisions.

The server may be the server hosting the document or a server hosting having access to the revisions associated with the document or any other remote computing storage device containing data on the requested revisions.

At step data associated with the revisions selected may be downloaded by the client device from the server. Various methods common to network computing may be be utilized to download the revision data to the client device. The revision data may contain sufficient information e.g. text date times stamps graphics and other media to reconstruct all the selected revisions of the document.

At step an application on the client device may create a media file from the downloaded document revisions. Various animation creation applications such as Adobe Flex may be used to construct an animation file from re created revisions of the document. More than one type of application may be utilized in this process for example one type of application to recreate each revision in the visual format of a document another application to take a memory snap shot of the revision and another application to animate the memory snap shots into a media file. In the presently preferred embodiment of the invention step may take place in a manner invisible to the user e.g. in the device s memory .

At step the media file may be displayed to the user. For example an application on the client device e.g. Windows Media Player iTunes Adobe Flash etc. may play the animation media to the user.

Referring to a hand held electronic device may display a document containing content please note that the document and its content are for illustrative purposes only the document is representative of any content editable by a plurality of users while the content is representative of any sub portion of the original content content. A user may use a pointing device to manipulate a control e.g. slider and in order to replay revision history of the document .

Referring also to in sliding the scroll bar along slider in this example to the right which may represent traversing revision history from older to newer the content may change to read We should go IPO at 13 with the 3 character and the 2 character in a morphing transition i.e. with the 2 gradually fading out and the 3 gradually becoming solid . In this example an earlier revision of the document contained text 12 while a newer revision replaced that text with 13 hence the morphing transition.

Referring now additionally to further sliding of the scroll bar to the right i.e. forward in time may display later revisions of the document . For example the text in FIG. B which appears in a partially morphed state i.e. the character 3 is not solid and the character 2 is still visible may now be displayed in its complete state in the 3 character is solid and the 2 character is no longer displayed. Likewise traversing the B C in reverse order whereby the scroll bar is slid from right to left may cause the document to morph from its newer revision in to its older revision in through the morphing transition stage depicted in .

At step a website may be accessed by a web browser associated with an electronic device. The website may be a web service offering document editing or any website on the Internet an intranet capable of rendering a website from which documents may be displayed.

At step DOM Document Object Model may be used by the web browser as part of the process of rendering a web page displayed by the website. DOM encompasses web presentation technology API that are standard across all modern web browsers. The DOM model allows for individual elements within the web page for example a word processing document being displayed or a see history button to be accessed programmatically and to generate events which may be used by the web browser to invoke actions.

At step an electronic document may be retrieved by code in the website processed by the web browser. Document retrieval is well known in the prior art and may be accomplished in many ways. Similarly at step the electronic document e.g. a MS Word compatible document may be displayed as part of the DOM in the web browser.

At step user input may be received requesting viewing of revision history of the current electronic document. In various embodiments the user may choose a command from a menu e.g. display document revisions or alternatively may issue a keyboard command voice command etc.

In response to the user request at step an AJAX query may be constructed and sent by code e.g. Javascript included in the website but running in the web browser requesting the server or any other data store storing document revisions to transmit back to the web browser revision information related to the current electronic document. Information may be packaged transmitted and received in XML packets or alternatively in any other data structure.

In one possible embodiment the entire revision history of the current document i.e. entire saved versions of the electronic document may be retrieved. In alternate embodiments less data pertaining to the revisions may be transmitted. In one example only headers e.g. revision author name revision date time may be transmitted at first then after the user has made further selections of specific revisions only a new set of revisions meeting the newly selected criteria may be transmitted. One clear advantage of the latter embodiment is saving on bandwidth especially when the user is on a slower connection e.g. mobile 3G link and or the document revisions are very large e.g. AutoCAD drawings .

At step a revisions timeline may be constructed from the revisions retrieved at step and at step the revision timeline may be displayed. The revision timeline may be displayed in chronological order i.e. earliest revision on the left latest on the right and the rest in between. Various information related to the revisions may be displayed along with the timeline e.g. author name date of revision etc. In one presently preferred embodiment the timeline may be an actionable control i.e. the user may be able to click on portions of it to select specific revisions. In alternate embodiments the timeline may be a list of saved versions in a context popup menu etc.

At step user input may be received selecting one or more of the revisions. As discussed earlier the revisions may be displayed in various ways and consequently the user may use various means from clicking checkboxes associated with revisions to issuing voice commands to select the revisions.

At step document editing may be temporarily disabled. Since steps change the display of the document as discussed below it may be advantageous in the presently preferred embodiment to temporarily halt user edit commands in order to avoid malformed versions of the document from being prematurely edited.

At step a system timer may be initiated in order to control visual presentation of all the traversed revisions of the electronic document. For example if the user has chosen to view evolution of the present document going back five revisions the system timer at step may be set to roll back each version once every 10 seconds. The use of a system timer is not critical for all embodiments of the present invention but may present certain advantages especially in terms of viewability.

At step a specific document revision N may be displayed. In one possible embodiment the revision N may be re created and presented in its final form. In an alternate possible embodiment the document revision N may be achieved by automatically re issuing user edit commands that had been used originally to create the revision N. For example. if revision N represents the word am inserted after the word I and before the word here the electronic document may be transmitted internal commands mimicking a user s typing the word am in the right place including the correct text treatment for a specific user s edit e.g. edits by user Nancy are underlined in red .

At step it may be determined whether the last revision for the user s selected revisions to display has been reached. If the last revision selected has not been reached at step N may be decremented and step may be repeated causing the presently previous revision N 1 to be displayed. For example if the user had selected to view last five revisions and revision four has been displayed at step it may be determined that the last revision has not yet been displayed causing step to decrement or increment the vector is arbitrary in this example as revisions may be displayed morphing forward or backwards and the next revision to be displayed at step .

If it is determined at step that the last requested revision has been displayed at step the system timer may be stopped and at step document editing may be re enabled.

The invention has been described with reference to particular embodiments. However it will be readily apparent to those skilled in the art that it is possible to embody the invention in specific forms other than those of the preferred embodiments described above. This may be done without departing from the spirit of the invention.

