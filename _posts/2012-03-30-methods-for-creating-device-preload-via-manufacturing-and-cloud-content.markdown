---

title: Methods for creating device preload via manufacturing and cloud content
abstract: Systems, methods and products directed toward creating device preloads via employing base and additional image content. One aspect includes communicating an aspect of an information handling device, and assimilating additional image content at the information handling device responsive to communication of the aspect of the device, wherein a base image and the additional image content are combined to form a unitary device image. Other embodiments are described herein.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09182970&OS=09182970&RS=09182970
owner: Lenovo (Singapore) Pte. Ltd.
number: 09182970
owner_city: Singapore
owner_country: SG
publication_date: 20120330
---
Generally information handling devices or embedded devices such as mobile phones or tablet computers involve the use of firmware based images. Conventionally image files corresponding to an intended geographical region for sale distribution or to another identifying aspect of a device are installed at manufacture. Put another way in order to support a preload image manufacturers currently tend to include one image per country on an information handling device. It can thus become very costly and time consuming to create and maintain a large number of unique images with considerable complexity being imparted to the process overall.

In contexts such as those described above conventional arrangements can also involve the use of multiple partitions wherein one partition is accorded for each possible customizing option. This by extension can occupy an inordinately a large amount of valuable space on a device.

Generally it can further be noted that information handling devices have OS images that are monolithic in nature. A process of compiling and building produces an image that contains needed components however variations in devices especially in their identifying aspects as noted above normally warrant more patches and updates to be provided that are unique in nature. In other words to the extent that information handling devices may need to include images or other components that are uniquely tailored to one or more identifying aspects of the device one or more patches or updates may be needed by way of altering or amending the OS or its functioning in order that such unique variations may adequately be supported. Conventional solutions accordingly tend to involve binary patches or partition image fragmentation in order to permit discrete elements to be updated. This can prove to be an immensely complex and costly task given the possibly wide range of variability at hand.

In summary one aspect provides an information handling device comprising a base image one or more processors one or more memories storing program instructions accessible by the one or more processors and wherein responsive to execution of program instructions accessible to the one or more processors the one or more processors are configured to communicate an aspect of the information handling device and assimilate additional image content at the information handling device responsive to communication of the aspect of the device wherein the base image and additional image content combine to form a unitary device image.

Another aspect provides a method comprising communicating an aspect of an information handling device and assimilating additional image content at the information handling device responsive to communication of the aspect of the device wherein a base image and the additional image content are combined to form a unitary device image.

An additional aspect provides a program product comprising a storage medium having program code embodied therewith the program code comprising program code configured to communicate an aspect of an information handling device and program code configured to assimilate additional image content at the information handling device responsive to communication of the aspect of the device wherein a base image and the additional image content combine to form a unitary device image.

The foregoing is a summary and thus may contain simplifications generalizations and omissions of detail consequently those skilled in the art will appreciate that the summary is illustrative only and is not intended to be in any way limiting.

For a better understanding of the embodiments together with other and further features and advantages thereof reference is made to the following description taken in conjunction with the accompanying drawings. The scope of the invention will be pointed out in the appended claims.

It will be readily understood that the components of the embodiments as generally described and illustrated in the figures herein may be arranged and designed in a wide variety of different configurations in addition to the described example embodiments. Thus the following more detailed description of the example embodiments as represented in the figures is not intended to limit the scope of the embodiments as claimed but is merely representative of example embodiments.

Reference throughout this specification to one embodiment or an embodiment or the like means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. Thus appearances of the phrases in one embodiment or in an embodiment or the like in various places throughout this specification are not necessarily all referring to the same embodiment.

Furthermore the described features structures or characteristics may be combined in any suitable manner in one or more embodiments. In the following description numerous specific details are provided to give a thorough understanding of embodiments. One skilled in the relevant art will recognize however that the various embodiments can be practiced without one or more of the specific details or with other methods components materials etc. In other instances well known structures materials or operations are not shown or described in detail to avoid obfuscation. The following description is intended only by way of example and simply illustrates certain example embodiments.

While various other circuits circuitry or components may be utilized depicts a block diagram of one example of Win Tel type information handling device circuits circuitry or components. The example depicted in may correspond to computing systems such as the THINKPAD series of personal computers sold by Lenovo US Inc. of Morrisville N.C. or other devices. As is apparent from the description herein embodiments may include other features or only some of the features of the example illustrated in .

The example of includes a so called chipset a group of integrated circuits or chips that work together chipsets with an architecture that may vary depending on manufacturer for example INTEL AMD ARM et cetera . The architecture of the chipset includes a core and memory control group and an I O controller hub that exchanges information for example data signals commands et cetera via a direct management interface DMI or a link controller . In the DMI is a chip to chip interface sometimes referred to as being a link between a northbridge and a southbridge . The core and memory control group include one or more processors for example single or multi core and a memory controller hub that exchange information via a front side bus FSB noting that components of the group may be integrated in a chip that supplants the conventional northbridge style architecture.

In the memory controller hub interfaces with memory for example to provide support for a type of RAM that may be referred to as system memory or memory . The memory controller hub further includes a LVDS interface for a display device for example a CRT a flat panel a projector et cetera . A block includes some technologies that may be supported via the LVDS interface for example serial digital video HDMI DVI display port . The memory controller hub also includes a PCI express interface PCI E that may support discrete graphics .

In the I O hub controller includes a SATA interface for example for HDDs SDDs et cetera a PCIe interface for example for wireless connections a USB interface for example for devices such as a digitizer keyboard mice cameras phones storage other connected devices et cetera a network interface for example LAN a GPIO interface a LPC interface for ASICs a TPM a super I O a firmware hub BIOS support as well as various types of memory such as ROM Flash and NVRAM a power management interface a clock generator interface an audio interface for example for speakers a TCO interface a system management bus interface and SPI Flash which can include BIOS and boot code . The I O hub controller may include gigabit Ethernet support.

The system upon power on may be configured to execute boot code for the BIOS as stored within the SPI Flash and thereafter processes data under the control of one or more operating systems and application software for example stored in system memory . An operating system may be stored in any of a variety of locations and accessed for example according to instructions of the BIOS . As described herein a device may include fewer or more features than shown in the system of .

Referring to with regard to smart phone and or tablet circuitry an example includes an ARM based system design with software and processor s combined in a single chip . Internal busses and the like depend on different vendors but essentially all the peripheral devices may attach to a single chip . In contrast to the circuitry illustrated in the tablet circuitry may combine the processor memory control and I O controller hub all into a single chip commonly referred to a system on a chip SOC . Also ARM based systems do not typically use SATA or PCI or LPC. Common interfaces for example include SDIO and I2C. There are power management chip s which manage power as supplied for example via a rechargeable battery which may be recharged by a connection to a power source not shown and in at least one design a single chip such as may be used to supply BIOS like functionality and DRAM memory.

ARM based systems typically include one or more wireless transceivers including but not limited to WWAN and WLAN transceivers for connecting to various networks such as telecommunications networks and wireless base stations. Commonly an ARM based system will include a touchscreen for data input and display. ARM based systems also typically include various memory devices for example flash memory and SDRAM .

In addition to the types of devices described and illustrated herein with respect to embodiments can provide for a hybrid computing system comprising a primary environment PE for example a conventional computing device platform such as a Win Tel platform and a secondary environment SE for example a mobile device platform such as an ANDROID platform in a single computing system.

Specific reference will now be made herebelow to . To facilitate easier reference in advancing from to and through a reference numeral is advanced by a multiple of 100 in indicating a substantially similar or analogous component or element with respect to at least one component or element found in at least one earlier figure among .

It should be clearly understood that the various arrangements and processes broadly described and illustrated with respect to and or one or more individual components or elements of such arrangements and or one or more process steps associated of such processes can be employed independently from or together with one or more other components elements and or process steps described and illustrated herein. Accordingly while various arrangements and processes are broadly contemplated described and illustrated herein it should be understood that they are provided merely in illustrative and non restrictive fashion and furthermore can be regarded as but mere examples of possible working environments in which one or more arrangements or processes may function or operate.

In accordance with at least one embodiment there are broadly contemplated herein methods and arrangements for providing for an information handling device e.g. a tablet computer or mobile telephone a limited number of images with common content at a manufacturing stage whereupon image unique content can be downloaded and installed at a first boot of the device. Accordingly a number of images provided at a manufacturing stage can thereby be greatly reduced by breaking up dividing or delineating device content into common base content and image unique content. The base content is thereby installed during manufacturing and the first boot content is gathered and installed during a first boot process.

In accordance with at least one embodiment by way of an illustrative and non restrictive example base content can generally be common across multiple regions and languages while image unique first boot content can be region and or language specific. In this vein region specific content could be specific to a country or group of countries. 

In accordance with at least one embodiment in the context of information handling devices such as mobile phones or tablet computers a small subset of image content that is common to different geographical regions or other identifying aspects of a device are preloaded at manufacture while region specific or aspect specific content is downloaded and installed at another time such as at first boot. This can considerably streamline the process in that easily 70 to 75 percent of image content of a given device can be common with that of other devices that otherwise may differ in terms of their intended geographical regions or other identifying aspects . For instance common content can include a base OS as well as language specific content that may be usable across different regions or countries sharing a common language. On the other hand region specific or aspect specific content can include applications apps that may be allowed in one country or not another or may take on a different appearance or functionality in one country as compared to others. Default web browsers for instance can emerge as region specific content.

In accordance with at least one embodiment device leaves the factory with a pre loaded image containing content items and partial item already installed. Upon first boot or at another predetermined or user selected time device communicates with a cloud server which itself includes a catalogue or other database of items of unique content that can be downloaded by devices. Downloading then takes place whereby a unique content item and partial content item can be installed. By way of an illustrative and non restrictive example cloud server could represent or be associated with an app store connected with the manufacturer of device and the call to initiate downloading unique content items or partial content items can be an API application programming interface call that is automatically triggered upon first boot or otherwise user initiated.

In accordance with a specific working example in accordance with at least one embodiment a cloud server is embodied by an app store or app shop . Based on data sent to the cloud server the app store decides on additional preload modules that would be intended for a specific MTM region combination. For example a tablet computer can be shipped out with a basic OS installed but during first boot the device will detect or the user will select a location where the tablet is first being booted e.g. a specific country such as Japan . It can also be appreciated that in the alternative a user can select a geographic location other than that where the tablet is being booted e.g. he she may purchase the tablet and boot it in the U.S. but select another country e.g. Japan as a country of destination or residence for which relevant unique content is to be sought.

In accordance with at least one embodiment content does not need to be tied to a specific user of the device in question. However the user could be asked to register to an app store at first boot whereupon bonus or customer specific content could be downloaded as further unique content .

In accordance with at least one embodiment it can be appreciated that there is broadly contemplated herein a combination of device manufacturing with cloud delivery in order to produce a complete image once a customer is in possession of a device. Some discrete components are thereby contemplated in place of a single monolithic image and associated OS. As such and as schematically shown in a common area or OS core of an information handling device may contain a kernel DRM digital rights management system and any and all other components that would be common to different devices e.g. boot code a partition layout and or proprietary items such as encryption and enterprise management . Interchangeable first and second core modules and respectively can represent different versions of a core wherein one includes DRM code and one does not. It is possible to install one core module or the other and not both depending on which version of a core is desired for the device in question. However it is also conceivable to have both installed wherein the one needed or desired for device can then be activated.

On the other hand in accordance with at least one embodiment additional modules can be constituted by a preload install area PIA and a cloud based delivery area . Each of the three areas can contribute components to produce what the customer might expect to get with a device when he she purchase it based on an intended geographical region and or other identifying aspect of the device.

In accordance with at least one embodiment the common area or OS core covers many images that would be common to different information handling devices. Components of PIA area on the other hand can be unique to a customer or for a region. Further cloud content delivered to the cloud delivery area can be delivered at first boot is not tied to the manufacturing process and provides flexibility by allowing the cloud content to be defined in the servers such that the user can get predefined packages at first boot. Such packages may be based on an intended geographical region and or another identifying aspect of the device.

In accordance with at least one embodiment it can be appreciated that a modular device is accorded that flexibly can be tailored or customized to devices associated with an intended geographical region and or one or more other identifying aspects of devices. At the point of manufacture the PIA area and OS core are present. However the PIA area is configured to accommodate additional patches for configuring the device for an intended geographical region and or one or more other identifying aspect. Such patches can already be present in the device at manufacture e.g. in a repository within the device which may e.g. be within or constituted by the PIA area to then be activated at a predetermined time e.g. at first boot or could be downloadable e.g. from a cloud server at a predetermined time e.g. at first boot . Device can even accommodate both scenarios if desired i.e. activate one or more patches already present in the device and download one or more from elsewhere e.g. a cloud server each at the same or different predetermined times. Though OS patches can take on a very wide variety of forms by way of illustrative and non restrictive example they can include a patch to tether a given app to the device and or to disable such an app in the OS core .

In accordance with at least one embodiment to the extent that OS patches are discussed herein it can be appreciated that downloadable items such as those found in an app store present a different task in that such items are end user items and can be installed removed modified. In other words OS patches and related items are beyond the sight or control of an end user while downloadable items such as apps are not and embodiments herein variously address both types of components to the extent that an information handling device can be customized or tailored for a particular intended geographical region and or other identifying aspect of the device.

In accordance with at least one embodiment of the invention to the extent that geographical regions are discussed herein as representing a parameter for identifying a device and determining content to be supplied to the device one or more other identifying aspects of a device instead or in addition could be employed to assist in making such a determination. Thus for instance instead of identifying a geographical region of or for a device the device could be identified by a device identifier not associated with a geographical region. For example such a device identifier could be an MTM machine type model or model number wherein devices presenting a given model number would trigger the downloading or supplying of additional and or unique image or operating system content to a device. Other device identifiers can include by way of example a serial number a user or a company associated with the device.

In accordance with at least one embodiment to the extent that OS patches may have been included in or downloaded to a device thus altering the basic makeup and functioning of the OS itself broadly contemplated herein are arrangements for recovering any missing or altered components of an original OS at least to such a degree as to adequately accommodate updates to the OS or other area of the device. As can be appreciated from the foregoing a system image can be split generally into two portions wherein one portion is common to a majority or large number of information handling devices in a given distribution with the other portion representing an overlay of distribution specific files. At first boot a program can be run just after the file systems are mounted to create a series of links to region specific files in another partition e.g. a PIA area such as that indicated at in . This program can check for the existence of a recovery list to quickly exit so as to not slow the device down during subsequent boots wherein such a recovery list would contain files or portions thereof that would need to be recovered at a subsequent time in connection with accommodating an OS update or OTA patch see below . The program can also process a list of files to delete from the system image and then creates links from a parallel system image and the common system image. Files are not then removed but are renamed to a backup name to prevent actual installation or usage of these files.

In accordance with at least one embodiment all files that are modified are indeed written to a list of files or recovery list that would need to be corrected when an update such as an OTA over the air patch is applied. An OTA patch can be recognized herein as a specific type of update that can be accommodated by a device it is provided here as but an illustrative and non restrictive example of an update. On boot of the device into recovery mode to apply an OTA patch or other update the recovery list is read in and the links are removed. Also any backup files are restored so that when the OTA patch or other update is applied the system partition appears similarly to the base partition. Thence again at reboot the process of recreating the links occurs to re customize the device for distribution. It can thus be appreciated that throughout the process certain files and actions relating thereto are hidden to the end user and only are exploited to the extent that would be needed to accommodate an OTA patch or other update .

Accordingly schematically illustrates a process for system image boot to prepare for accommodating at least one update such as an update e.g. OTA patch to an OS in accordance with at least one embodiment. First a check is made for a recovery list . If the list does exist then the process exits. Otherwise a check is made for a PIA in the device e.g. as indicated at in and if one is not found the process exits while the process continues if indeed a PIA is present.

As such in accordance with at least one embodiment the system remounts i.e. there is a disconnect from the file system followed by reconnect to the file system and system read write is permitted temporarily . If a log file cannot be written into then the process finishes with an error . Otherwise a check is made as to whether a delete file list is present for example but not necessarily in the PIA. The delete file list for its part may be sight unseen to the user in embodiments or alternatively could be visible to the user. If such a file exists then it is opened for read and for each file listed if the named file exists then that file is renamed e.g. to name orig and the file is then dispensed with e.g. archived backed up or deleted and or for instance written to the recovery list file . The delete file list is then closed . In accordance with at least one embodiment system is pushed onto the work stack and for as long as the work stack is not empty a top entry is opened and the status of a PIA file is checked to see if it is a directory or file . It should be noted that system can be a location where the OS and device specific apps. e.g. that were added during manufacturing can be stored and which location is typically read only to the end user. On the other hand data can be a location where end user content is stored and typically could be writable to by the end user. If a directory then a check is made to see if system name exists if not a directory is created and the name is written to the recovery list file . If not a directory then if there exists a file system file this file is renamed to system file orig . A symbolic link is then created between pia system file and system file and the name the file in the PIA that was linked to or the file that was renamed in step is written to the recovery list . It should be noted that the written name as just mentioned need only represent some sort of unique identifier that will permit the recovery list to find the change . If the work stack is not empty then a reversion is made to step otherwise the recovery list file is then closed and then the system remounts and reverts to read only .

In accordance with at least one embodiment of the invention and as schematically illustrated in during recovery the following process is undertaken. The existence of a recovery list file is checked for . If it does not exist then the process exits. Otherwise the system remounts and an attempt at read write is made but if the attempt is not successful then a log file is created in cache and the process exits with an error. As the process continues the recovery list file is opened and each line in the file is pushed onto a work stack . The recovery list is then closed .

In accordance with at least one embodiment of the invention for as long as the work stack is not empty the top of the stack and stat file are removed. If the removed file is a directory the directory is removed else the file is unlinked . Continuing if the file is not a directory then by way of an illustrative and non restrictive example a check is made as to whether a file with the name name orig exists if so then it is renamed to name . In all eventualities here if the work stack is not empty a reversion is made back to step otherwise the recovery list is removed the system remounts and read only is reverted to .

In accordance with at least one embodiment of the invention to the extent that information handling devices are discussed herein it should be understood that they can represent a very wide range of devices applicable to a very wide range of settings. Thus by way of illustrative and non restrictive examples such devices and or settings can include mobile telphones tablet computers other portable computers such as portable laptop computers and appliances such as televisions which may contain or incorporate an information handling device and or aspects thereof.

As will be appreciated by one skilled in the art various aspects may be embodied as a system method or computer device program product. Accordingly aspects may take the form of an entirely hardware embodiment or an embodiment including software that may all generally be referred to herein as a circuit module or system. Furthermore aspects may take the form of a computer device program product embodied in one or more computer device readable medium s having computer device readable program code embodied thereon.

Any combination of one or more non signal computer device readable medium s may be utilized. The non signal medium may be a storage medium. A storage medium may be for example an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples of a storage medium would include the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing.

Program code embodied on a storage medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF et cetera or any suitable combination of the foregoing.

Program code for carrying out operations may be written in any combination of one or more programming languages. The program code may execute entirely on a single device partly on a single device as a stand alone software package partly on single device and partly on another device or entirely on the other device. In some cases the devices may be connected through any type of network including a local area network LAN or a wide area network WAN or the connection may be made through other devices for example through the Internet using an Internet Service Provider or through a hard wire connection such as over a USB connection.

Aspects are described herein with reference to the figures which illustrate example methods devices and program products according to various example embodiments. It will be understood that the actions and functionality illustrated may be implemented at least in part by program instructions. These program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing device or information handling device to produce a machine such that the instructions which execute via a processor of the device implement the functions acts specified.

The program instructions may also be stored in a device readable medium that can direct a device to function in a particular manner such that the instructions stored in the device readable medium produce an article of manufacture including instructions which implement the function act specified.

The program instructions may also be loaded onto a device to cause a series of operational steps to be performed on the device to produce a device implemented process such that the instructions which execute on the device provide processes for implementing the functions acts specified.

This disclosure has been presented for purposes of illustration and description but is not intended to be exhaustive or limiting. Many modifications and variations will be apparent to those of ordinary skill in the art. The example embodiments were chosen and described in order to explain principles and practical application and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated.

Thus although illustrative example embodiments have been described herein with reference to the accompanying figures it is to be understood that this description is not limiting and that various other changes and modifications may be affected therein by one skilled in the art without departing from the scope or spirit of the disclosure.

