---

title: System and method of generating REST2REST services from WADL
abstract: A system and method is provided for generating a RESTful communication service which offers REST2REST functionality seamlessly with automatic support for the API agnostic features such as policy enforcement, load balancing, routing, failover, logging, accounting, format conversion (XML2JSON,JSON2XML) etc. Such a system can include one or more applications, executing on one or more application servers. The system can also include a WADL plug-in which generates code for the RESTful communication service from Web Application Description Language files (WADL) which define the service interface and internal templates which define the code logic. The method offers rapid and efficient generation of REST APIs supporting API agnostic features, automatic REST API code generation from WADL files, and translation from WADL to WSDL.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08856735&OS=08856735&RS=08856735
owner: Oracle International Corporation
number: 08856735
owner_city: Redwood Shores
owner_country: US
publication_date: 20120725
---
A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The current invention relates to a system and method of generating REST2REST services from Web Application Description Language WADL data.

Service providers may have existing third party or proprietary applications or platforms that communicate using Representational States Transfer REST web services. A services gatekeeper functionality can be integrated with existing applications that support REST interfaces by creating a RESTful communication service which conforms to the REST constraints. A services gatekeeper mediates traffic between users and existing REST infrastructure allowing the application of service level agreements policy enforcement security alarms and statistics for more control over communication services. However customers developers are required to manually code the REST application programming interfaces APIs for the REST web services that support platform agonistics features such as policy enforcement load balancing routing failover logging accounting format conversion XML2JSON JSON2XML etc. Implementing these features in each REST API is time consuming and inefficient.

In accordance with various embodiments the present invention provides a system and method is provided for generating a RESTful communication service which offers REST2REST functionality seamlessly with automatic support for the API agnostic features such as policy enforcement load balancing routing failover logging accounting format conversion XML2JSON JSON2XML etc. Such a system can include one or more applications executing on one or more application servers. The system can also include a compiler which generates REST API code for the RESTful communication service from WADL file s which define the service interface and internal templates which define the code logic. The method offers rapid and efficient generation of REST APIs for RESTful web services supporting API agnostic features automatic REST API code generation from WADL files and translation from WADL files to Web Service Description Language file WSDL .

Other objects and advantages of the present invention will become apparent to those skilled in the art from the following detailed description of the various embodiments when read in light of the accompanying drawings.

In the following description the invention will be illustrated by way of example and not by way of limitation in the figures of the accompanying drawings. References to various embodiments in this disclosure are not necessarily to the same embodiment and such references mean at least one. While specific implementations are discussed it is understood that this is provided for illustrative purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without departing from the scope and spirit of the invention.

Furthermore in certain instances numerous specific details will be set forth to provide a thorough description of the invention. However it will be apparent to those skilled in the art that the invention may be practiced without these specific details. In other instances well known features have not been described in as much detail so as not to obscure the invention.

Common reference numerals are used to indicate like elements throughout the drawings and detailed description therefore reference numerals used in a figure may or may not be referenced in the detailed description specific to such figure if the element is described elsewhere. The first digit in a three digit reference numeral indicates the series of figures in which the element first appears. Likewise the first two digits in a four digit reference numeral.

Web Application Description Language WADL is an XML based file format that provides a machine readable description of HTTP based web applications. WSDL is an XML based format for describing network services as a set of endpoints operating on messages containing either document oriented or procedure oriented information. Both WADL and WSDL are platform and independent languages. Representational State Transfer REST is a style of software architecture for distributed systems such as the World Wide Web. Conforming to the REST constraints is generally referred to as being RESTful . RESTful web services are implemented in a REST API application programming interface .

Embodiments of the present invention provide a system and method for generating a RESTful communication service which offers REST2REST functionality seamlessly with automatic support for the API agnostic features such as policy enforcement load balancing routing failover logging accounting format conversion XML2JSON JSON2XML etc. The system includes a WADL plug in which generates code for the RESTful communication service from WADL which defines the service interface and internal templates which define the code logic. The method offers rapid and efficient generation of REST APIs supporting API agnostic features automatic REST API code generation from WADL files and translation from WADL to WSDL. The system avoids the need for manual coding of the REST APIs for the RESTful web services. Thus the REST APIs can be implemented quickly and efficiently.

Services gatekeeper includes pre built specialized components the above communication services to allow third party developers and application partners to easily access the operator s telecommunication network capabilities. The network capabilities supported by the communication services include messaging call control terminal location payment profile and presence. These communication services APIs expose user information such as charging capability location and profile to third party applications. Services gatekeeper provides flexibility and choice in how third party developers and applications can access the operator s network through multiple types access interfaces the above service facades .

Services gatekeeper supports two types of RESTful communication services. A REST2REST service communicates with an existing REST API service facade allowing communication between RESTful interfaces. A REST Exposure is a custom service facade providing an application bound network facing service used when RESTful requests are sent to a custom network implementation for translation and processing. Services gatekeeper mediates traffic between users and existing REST infrastructure allowing the application of service level agreements policy enforcement security alarms and statistics for more control over communication services.

Services gatekeeper includes a platform development studio . Because all networks are different matching the particular requirements and capabilities of some networks sometimes means that services gatekeeper must be extended or that certain aspects of it must be closely integrated with existing network functionality. Platform development studio is designed to ease this process by providing for the creation integration testing and customization of communication services.

Platform development studio includes a WADL plug in that creates projects based on the responses that the developer makes to a WADL wizard . The WADL wizard generates REST communication services from WADL files representing RESTful web application services. Services gatekeeper can then uses the generated REST communication service to handle RESTful communications between platforms. The WADL wizard can be used to create both REST2REST e.g. a network plug in that interfaces with an existing service facade and REST Exposure services e.g. a service facade . In one embodiment WADL plug in takes WADL files as the only input and automatically generates REST2REST services including server side and client side components.

A WADL file is an XML based Extensible Markup Language file format that provides a machine readable description of HTTP based web applications. WADL models the resources provided by a service and the relationships between them. A WSDL file is an XML based file format that describes the functionality offered by a web service by providing a machine readable description of how the service can be called what parameters it expects and what data structures it returns.

The WADL plug in generates end to end RESTful communication services. The RESTful communication service offers REST2REST functionality seamlessly with automatic support for the API agnostic features such as policy enforcement load balancing routing failover logging accounting format conversion XML2JSON JSON2XML etc. The WADL plug in generates the code for the RESTful communication service based on the WADL files and internal templates. The WADL files define the service interface and the templates define the code logic.

The WADL plug in of can be used to generate end to end RESTful communication service from a WADL files. First the operator uses the WADL wizard to enter service configuration information and select WADL files. The developer chooses a project name and location and the selects each WADL file that includes the service definition to be implemented by the new Communication Service. The developer also selects each WADL file that includes the callback service definition to be used by the new Communication Service in sending information to the service provider s application. The developer then selects REST2REST as the output and selects finish to execute. Then the WADL2WSDL translator automatically translates the WADL files into WSDL files. After the translation the WADL2REST generator automatically generates the RESTful communication service.

As shown in a JAXB unmarshall process is used to unmarshall the XML content of the WADL file into a Java content tree WADL JAXB object . JAXB unmarshall process utilizes the schema WADL.xsd appropriate to WADL file . A data translation process is then performed on the WADL JAXB object to generate template attributes . In general a compiler uses template attributes and gets data from WADL file as well as enterprise Java bean EJB convention data generated from WSDL and then binds the data to the template to generate the required Java resource class. A template binding process is applied using template attributes and templates which define the code logic to generate Java objects which include all necessary Java implementations of web applications in the access tier necessary to implement the original WADL file . As mentioned above all java implementations of JAX RS web applications and communication service are automatically generated based on WADL definition. A JAX RS web application includes an application and a set of resource classes one per WADL. file .

As shown in the WADL file is translated to generate a WSDL file by translation between JAXB POJO objects of WADL and WSDL. The translation is performed by a WADL to WSDL compiler which translates between Java objects of WADL and WSDL. As shown in a JAXB unmarshall process is used to unmarshall the XML content of the WADL file into a Java content tree WADL JAXB object . The JAXB unmarshall process utilizes the schema WADL.xsd appropriate to WADL file . The WSDL schema WSDL.xsd contains extended elements which can not be bound to a concrete JAXB Objects. These unbound fragments of the WADL xml are parsed and manipulated using a Direct Object Model DOM to generate the corresponding WSDL JAXB Object . The WSDL JAXB Object is then marshaled to generate the WSDL file .

The present invention may be conveniently implemented using one or more conventional general purpose or specialized digital computer computing device machine or microprocessor and or network of same programmed according to the teachings of the present disclosure.

Appropriate software coding can readily be prepared by skilled programmers based on the teachings of the present disclosure as will be apparent to those skilled in the software art. The invention may also be implemented by the preparation of application specific integrated circuits or by interconnecting an appropriate network of conventional component circuits as will be readily apparent to those skilled in the art.

The various embodiments include a computer program product which is a storage medium media having instructions stored thereon in which can be used to program a general purpose or specialized computing processor s device s to perform any of the features presented herein. The storage medium can include but is not limited to one or more of the following any type of physical media including floppy disks optical discs DVDs CD ROMs microdrives magneto optical disks holographic storage ROMs RAMs PRAMS EPROMs EEPROMs DRAMs VRAMs flash memory devices magnetic or optical cards nanosystems including molecular memory ICs paper or paper based media and any type of media or device suitable for storing instructions and or information. The computer program product can be transmitted in whole or in parts and over one or more public and or private networks wherein the transmission includes instructions which can be used by one or more processors to perform any of the features presented herein. The transmission may include a plurality of separate transmissions. In accordance with certain embodiments however the computer storage medium containing the instructions is non transitory i.e. not in the process of being transmitted but rather is persisted on a physical device.

The foregoing description of the preferred embodiments of the present invention has been provided for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations can be apparent to the practitioner skilled in the art. Embodiments were chosen and described in order to best explain the principles of the invention and its practical application thereby enabling others skilled in the relevant art to understand the invention. It is intended that the scope of the invention be defined by the following claims and their equivalents.

