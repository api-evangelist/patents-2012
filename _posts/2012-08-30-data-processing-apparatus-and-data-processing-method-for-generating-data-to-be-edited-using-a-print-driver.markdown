---

title: Data processing apparatus and data processing method for generating data to be edited using a print driver
abstract: A data processing apparatus includes an input unit configured to input data, a first processing unit configured to generate intermediate data using a printer driver based on the data input by the input unit according to a print setting that is determined not to divide an editing area of the data into pages, and a second processing unit configured to perform editing processing based on the intermediate data generated by the first processing unit.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09158488&OS=09158488&RS=09158488
owner: Canon Kabushiki Kaisha
number: 09158488
owner_city: Tokyo
owner_country: JP
publication_date: 20120830
---
Aspects of the present invention relate to a data processing apparatus that processes data to be edited a data processing method and a storage medium.

Various types of information have been generally acquired by accessing a web page on the Internet. The web page includes a structured document described in a structured language e.g. a Hyper Text Markup Language HTML or an Extensible Hyper Text Markup Language XHTML . The web page can be displayed on a display by software referred to as a web browser and can be printed out by a printer.

When the web page which has been acquired using the web browser is output after being edited the image quality of an object such as characters and graphics is less degraded if the object is acquired in a vector format. Thus the image quality of the edited web page will increase.

Japanese Patent Application Laid Open No. 2000 187566 discusses generating editable data using a virtual printer driver and editing the generated data. The editable data is generated using the virtual printer driver so that the data can be edited in a vector format using a printer driver that is capable of outputting an object having a vector format still in the vector format.

When data having no information about a page such as a web page is converted into data having a format that can be printed by a printer driver the printer driver generates a printing data while dividing the data into pages according to a recording medium size used for printing. At this time some printer drivers provide a margin in an outer edge of each of the generated pages. Therefore if there is an object existing across the pages when the data generated by the printer driver is edited a margin may be inserted into the object. If the object is moved for example not to exist across the pages when the data generated by the printer driver is edited the margin provided by the printer driver needs to be deleted. This can result in an increase in a processing load or degradation in image quality. In addition some printer drivers move the object to the subsequent page if there is an object existing across the pages as described above. In this case the data changes in layout from the original data so that an editing result according to the original layout cannot be obtained.

An aspect of the present invention is directed to a data processing apparatus capable of generating data editable when the data to be edited is generated using a printer driver.

According to an aspect of the present invention a data processing apparatus includes an input unit configured to input data a first processing unit configured to generate intermediate data using a printer driver based on the data input by the input unit according to a print setting that is determined not to divide an editing area of the data into pages and a second processing unit configured to perform editing processing based on the intermediate data generated by the first processing unit.

Further features and aspects of the present invention will become apparent from the following detailed description of exemplary embodiments with reference to the attached drawings.

Various exemplary embodiments features and aspects of the invention will be described in detail below with reference to the drawings.

A display device displays the web page downloaded from the WWW server a print preview image or a graphical user interface GUI as a visible image based on control by the CPU . An input device is a device for a user to issue various instructions to the PC e.g. a pointing device or a keyboard. A system bus connects the CPU the RAM the ROM and the hard disk and data is communicated on the system bus . A local area network LAN interface is an interface for connecting the PC to a LAN. Via the LAN interface A a data communication is performed with the external WWW server which is connected via a router not illustrated or the network . An interface supporting a wireless communication may be provided on the PC to perform the data communication wirelessly. The display device and the input device may be integral with or separate from the PC .

A structured document printing module is plug in software to be incorporated in the browser and is called by the browser . When the browser is started the browser executes the structured document printing module . Each of processing units included in the structured document printing module may be modularized as a sub module or may be a processing unit within one module. Formats of the structured document may include various types.

In the structured document printing module a user interface UI unit is started by executing the structured document printing module . In a window of the browser a print button illustrated in for the user to issue an instruction to start printing and a print preview button illustrated in for issuing an instruction to display a print preview.

An intermediate data generation unit is executed when the user operates the print button or the print preview button that is displayed by the UI unit . The intermediate data generation unit sets by the above mentioned operation a printer driver as a printer driver for an output destination printer of the structured document acquired by the browser irrespective of a default printer set in an operating system OS . The printer driver is a virtual printer driver for generating an intermediate data file in which a selectable user defined recording medium size can be selected as a recording medium size. The printer driver may include a general purpose virtual printer driver capable of generating image data in a page unit according to a predetermined recording medium size.

When the above mentioned operation is performed the intermediate data generation unit acquires size information including the width and the height of the structured document which is acquired and displayed by the browser from a size information acquisition unit . The size information acquisition unit analyzes the structured document and determines acquires the size information. The unit of the size information to be determined is a pixel and a length millimeter or inch . The intermediate data generation unit sets the user defined recording medium size using a print setting unit as a recording medium size of the structured document from the browser at the time of print processing using the printer driver while setting the size information acquired as described above. The intermediate data generation unit determines the recording medium size to prevent an editing target area of the web page an editing area where an object to be printed exists from being divided into a plurality of pages a plurality of sheets as much as possible.

The intermediate data generation unit can issue a print instruction to the browser and cause the browser to perform print processing generate rendering data for printing based on the structured document . The browser performs rendering processing for the printer driver via the OS when the print instruction is issued and outputs the rendering data on the printer driver . The rendering data remains in a vector format if the structured document includes data having a vector format such as characters and graphics. The printer driver which has received the rendering data generates the intermediate data file serving as spool data based on the rendering data and stores the generated intermediate data file in a predetermined storage area in the RAM . The intermediate data generation unit does not generate intermediate data by itself but instructs the printer driver to execute a print job and generate an intermediate data file. The printer driver does not output the intermediate data file on an actual printer after generating the intermediate data file because the printer driver is a virtual printer driver. However the browser outputs the rendering data in a similar manner as if an actual printer driver actually performs an output on the actual printer.

The intermediate data file has a similar format to that of the intermediate data file generated in an actual output on the printer and the information such as characters and graphics remains in a vector format. The information may be converted into an image format e.g. a bit map data format. The intermediate data file may include an Enhanced Metafile Format EMF an XML Paper Specification XPS and a Portable Document Format PDF .

The intermediate data generation unit issues the print instruction to the browser then monitors a status of a spooler in the OS and determines whether the printer driver has converted the rendering data generated by the browser into the intermediate data file . Thus the intermediate data generation unit detects that print job processing by the printer driver is completed and starts an intermediate data editing unit for editing the intermediate data file in response to the detection. The intermediate data file is output as editing data to the intermediate data editing unit so that editing processing is performed.

The intermediate data editing unit acquires the intermediate data file generated by the printer driver which has been extracted by the intermediate data generation unit and performs layout editing so that the acquired intermediate data file appropriately fits sheets in actual printing according to a print setting. The intermediate data editing unit performs layout editing of each object in the intermediate data file determines and store the information about each object s arrangement while generating an edited intermediate data file . To perform editing the intermediate data editing unit acquires print setting information including a recording medium size a resolution and a printable area from a printer driver via the OS . The printer driver is an actual printer driver for a printer used when an edited web page is actually printed. The printer driver can include a general purpose actual printer driver capable of performing processing for printing the web page on sheets based on input intermediate data. The printer may be previously determined or may be selected by the user to perform printing. Here the printer driver also functions as a printer driver for the printer .

A print preview unit generates print preview image data based on the edited intermediate data file which has already been subjected to the layout editing by the intermediate data editing unit and displays the generated print preview image data on the display device . When the user performs a re editing operation after the print preview unit performs a print preview the edited intermediate data file is edited again to rewrite the content thereof.

A print processing unit performs various types of printing control for actual printing. When the user operates the print button or the print button the print processing unit performs print processing of the edited intermediate data file print job processing which is a result of the editing performed by the intermediate data editing unit . The print job processing may be performed while changing a layout according to the arrangement information stored in the intermediate data editing unit using the intermediate data file instead of using the edited intermediate data file . The print processing unit performs rendering processing for the edited intermediate data file with the layout edited according to the print setting acquired from the printer driver and outputs rendering data on the printer driver via the OS . The printer driver receives the rendering data from the print processing unit generates print data having a format which can be read by the printer based on the rendering data and outputs the print data on the printer .

The OS can include a general purpose OS. The OS provides an application programming interface API for exchanging a print setting data between the structured document printing module and the printer driver. The OS also provides an API for an exchange of the rendering processing via the printer driver. The OS includes various types of control software such as a spooler system that manages a print job and a port monitor that outputs a print command on a port.

As illustrated in the browser provides a back button a forward button and an address entry field . The print button and the print preview button are provided by the UI unit in the structured document printing module and are displayed when the structured document printing module is started. When the print button is pressed the printer driver processes the data which has been processed by the structured document printing module without performing a print preview and the printer prints an image based on the data. When the print preview button is pressed a print preview using the print preview unit is performed. A web page displays the web page which has been acquired and read by the browser as a visible image.

The back button is a button for switching the currently displayed web page to a web page having been displayed before the web page is displayed. The forward button is a button for switching the web page after the switching by the return button in the web page . The address entry field is a field to input a URL of a web page desired to be acquired and displays a URL of the web page currently displayed. The browser also has a print menu and issues a print instruction using the print menu of the browser when the web page is printed without performing processing using the structured document printing module .

In a print preview screen is a screen window displayed by the structured document printing module . A print preview is an image based on edited print preview image data which has been generated by the print preview unit based on the web page displayed on the screen illustrated in . A print button is a button for starting printing based on a content of the print preview . A button for calling a screen for changing a print setting is included beside the print button . Thus print appearances such as a recording medium size a direction and a column setting can be changed using the called screen. A printing magnification designation unit is a slider for setting an enlargement reduction rate to be used for enlarging and reducing a web page to be printed at the time of printing. The designation unit changes the enlargement reduction rate so that the print preview is zoomed a sheet image is not changed and can confirm how printing is performed on a sheet. A button is a button for automatically determining a reduction rate of a web page to be printed so that the web page closely fits the sheet when the web page sticks out of the sheet. A page switching button is a button for switching the currently displayed print preview to the previous page or the subsequent page. Here the page indicates a page in a sheet unit. A display zooming button is a button for changing a display magnification of the print preview to be used for displaying the entire sheet or displaying the sheet based on the sheet width. Zooming by the display zooming button does not affect the enlargement reduction rate for printing. When the web page to be printed includes a plurality of pages and a thumbnail display is selected by the display zooming button the web page including the plurality of pages can be listed.

The flow of processing performed by the structured document printing module in the above mentioned configuration will be described below. is a flowchart illustrating processing performed until the structured document printing module generates the edited intermediate data file . The flowchart illustrates the flow of processing performed when the CPU reads out a program corresponding to the structured document printing module from the hard disk loads the read program into the RAM and executes the loaded program. Details of processing in each step are described above with reference to .

In step S the CPU starts the flow when the user presses the print button or the print preview button on the screen illustrated in . In step S the CPU acquires the width and the height in pixel units of the web page to be processed from the size information acquisition unit . The width and the height to be acquired at this time do not depend on the current window size of the browser but the entire area to be displayed. More specifically the width and the height also includes an area that can be displayed by being scrolled though concealed and not displayed at some point of time. In some browsers however the width of the web page may depend on the current window size. Therefore the size information acquisition unit may acquire the size information after the window width of the browser is changed. The window width is enlarged when the width of the web page is smaller than a predetermined size or when the structured document of the acquired web page is to be changed as a result of being analyzed.

In step S the CPU causes the intermediate data generation unit to set a printer driver serving as a virtual printer driver as the output destination printer printer driver of the web page from the browser .

In step S the CPU causes the print setting unit to select a user defined recording medium size from a recording medium size type included in a print setting for the printer driver that can be specified from the browser and set a width and a height previously acquired as a recording medium size the number of pages is set to be one . At this time the width or the height may be too large to fall within one page depending on the size of the acquired web page . In the case the recording medium size of the web page is determined so that the web page is split with a predetermined size into a plurality of pages. When the size of the web page can fall within one recording medium size the number of pages need not necessarily be one. The number of pages may be two or more. When the number of pages is two or more the web page is desirably split after a page break position is controlled not to affect editing. A condition under which the number of pages is two or more includes a case where the size of the web page to be processed is equal to or larger than a predetermined size. When the size pixels of the web page to be processed exceeds an upper limit settable as a user defined recording medium size for example the web page is split at a position that does not exceed the upper limit. Another condition under which the number of pages is two or more includes a case where the number of pages is previously determined to be two or more irrespective of the size of the web page.

In step S the CPU sets a print setting of a header and a footer included in the print setting of the browser to OFF. The print setting of the header and the footer is a setting for printing a title a URL a date and a page number of the web page as a header and a footer of each of the pages when the web page is printed. If the header and the footer are added in the output on the printer driver an appearance differs from that when displayed by the browser . Therefore the print setting is set to OFF here. However this setting may be omitted when the header and the footer can be deleted or when the header and the footer are desired to be added in the following editing processing.

In step S the CPU causes the intermediate data generation unit to set a margin setting included in the print setting of the browser to zero. While margins are added to upper lower left and right sides of each of the pages when printing is performed the margin setting is set to zero here so that an appearance seems closer to that when displayed by the browser . This setting may be omitted when the margins can be deleted or when the margins may be added in the following editing processing.

In step S the CPU causes the intermediate data generation unit to issue a print instruction to the browser and correspondingly causes the browser to perform processing of a print job of the web page for the printer driver via the OS according to the print setting.

In step S the CPU causes the intermediate data generation unit to acquire a status of the print job of the web page to be processed from the OS spooler . In step S the CPU monitors the spooler until it is determined that the print job is completed.

If it is determined that the processing of the print job is completed YES in step S the processing proceeds to step S. In step S the CPU starts the intermediate data editing unit to edit the intermediate data file that has been generated by the processing of the print job. In step S the CPU ends the processing of the intermediate data generation unit .

In the web page structured document which has been acquired by the browser has a width of W pixels and a height of H pixels. The intermediate data file which is generated from the structured document by the printer driver instructed by the intermediate data generation unit as described above becomes print data for one page having a width of W pixels and a height of H pixels. The width of W pixels and the height of H pixels are settable by selecting a user defined recording medium as described above and by specifying the width of W pixels and the height of H pixels.

If the size of the structured document exceeds an upper limit value of a size that can be specified as the user defined recording medium size for example the number of pages is forced to be two or more. In such a case when the number of pages is n and the height for one page is H n an extra margin can be prevented from occurring at a rear end of the final page. However the structured document may be divided in other dividing methods. The other dividing methods include a method for setting the size of the first page to the upper limit size or a size smaller than the upper limit size just a little and dividing the remaining portion into a unit of the same size. In this case a large margin area may occur in the final page. The size of the final page may be set not to exceed a position where the original web page existed so that the margin area does not occur. The other dividing methods also include a method for specifying a division position so that the height for one page is H n as described above and shifting the division position forward or backward if a specific object exists at the division position. In this case the page size may vary among pages.

The intermediate data editing unit performs layout editing for the intermediate data file to perform actual printing using the printer . The intermediate data file is output as the edited intermediate data file . Variable magnification processing and pagination processing corresponding to a recording medium size a resolution and a printable area included in the print setting acquired from the printer driver are performed. A layout change and a size change of each of the objects included in the intermediate data file are also performed so that the web page appropriately falls within the sheet so that the object is neither cracked nor split . The layout change and the size change of each of the objects may be automatically performed by analyzing the object or may be performed according to an instruction from the user. An arrangement pattern of each of the objects may be determined according to an instruction from the user and a position and a size of each of the objects may be automatically determined according to the arrangement pattern.

Here each of pages in the edited intermediate data file is edited to have a width W and a height H . When a recording medium size used at the time of printing is set to an International Organization Standardization ISO A4 size on the printer driver for example the width W is 210 mm and the height H is 297 mm. If the size of the original structured document corresponds to one sheet or less at the time of final printing the edited intermediate data file is not divided into a plurality of pages.

Thus the size of the intermediate data file is made sufficiently larger than a recording medium size used for actual printing a size in which a plurality of pages eventually corresponds to one page . Therefore the intermediate data editing unit can perform editing in a succeeding stage with a margin not occurring between pages or the object not moved so that the flexibility for the editing is increased.

The examples of changing a magnification using the printing magnification designation unit or changing a print setting have been described. However the intermediate data editing unit can also perform some other editing. For example the user can trim a predetermined area in a print preview by operating the input device e.g. a pointing device or can enlarge reduce and move any object.

As described above if the acquired structured document includes data having a vector format the editing processing in the succeeding stage can be performed still in the vector format by generating the intermediate data file using the virtual printer driver based on the structured document . Therefore a high quality image can be obtained in the editing in the succeeding stage. When the intermediate data is generated using the virtual printer driver a recording medium size is set according to the size of the structured document . Thus the editing in the succeeding stage can be performed without the data being divided in a format similar to the format that the data is displayed by the browser so that the flexibility for the editing is increased.

While the printer driver serving as a virtual printer driver and the printer driver serving as an actual printer driver are used in the present exemplary embodiment the two printer drivers may be combined into one printer driver. In this case when the intermediate data file is generated the recording medium size is set to match the size of the structured document while remaining stored in the spooler without being output on the printer . When the intermediate data file has been generated the processing proceeds to processing in the intermediate data editing unit . The intermediate data editing unit changes the recording medium size to a recording medium size originally set for actual printing. When the intermediate data editing unit completes the editing the print processing unit performs processing and outputs a processing result on the printer .

In the above mentioned exemplary embodiment the recording medium size is set to match the size of the structured document in generating the intermediate data on the virtual printer driver so that the data is not divided into pages. If the virtual printer driver has an enlargement reduction function however the recording medium size may be reduced using this function. Further using both the recording medium size setting and the size reduction processing may prevent the data from being divided into pages. Instead of a user defined recording medium size a definite size in which the number of pages is one may be selected as a recording medium size at the time of print job processing of the virtual printer driver.

While the web page is eventually printed in the above mentioned exemplary embodiment the present invention is not limited to this. The edited intermediate data file which has been edited by the intermediate data editing unit may be stored in a predetermined storage device or may be sent to an external apparatus.

While the data to be processed is the web page acquired by the browser in the above mentioned exemplary embodiment data in another format which is not divided in a page unit may be the data to be processed.

Aspects of the present invention can also be realized by a computer or a plurality of computers of a system or apparatus or devices such as a CPU or MPU that reads out and executes a program recorded on a memory device to perform the functions of the above described embodiment s and by a method the steps of which are performed by a computer or a plurality of computers of a system or apparatus by for example reading out and executing a program recorded on a memory device to perform the functions of the above described embodiment s . For this purpose the program is provided to the computer or the computers for example via a network or from a recording medium of various types serving as the memory device e.g. computer readable medium .

Moreover it is not necessary to realize all the processes described above by the software and part of or all the processes may be realized by hardware like an ASIC.

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all modifications equivalent structures and functions.

This application claims priority from Japanese Patent Application No. 2011 194963 filed Sep. 7 2011 which is hereby incorporated by reference herein in its entirety.

