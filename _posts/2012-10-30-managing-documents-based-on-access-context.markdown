---

title: Managing documents based on access context
abstract: Disclosed is a document management system where accessed documents can be stored in a document list along with information regarding the context in which the documents were accessed. The context can include information regarding the time and date the document was accessed and what applications were running when the document was accessed. Other context information can include whether the document was accessed during a calendar event or if the document was included in an attachment to an e-mail. When the current context of the computing device matches a previously recorded context, documents from the document list can be entered into a subset list and presented to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09529916&OS=09529916&RS=09529916
owner: GOOGLE INC.
number: 09529916
owner_city: Mountain View
owner_country: US
publication_date: 20121030
---
This disclosure relates in general to prioritizing and managing documents based on information gathered from a user s access history recent e mails or concurrent collaborators and in particular to managing documents related to a context in which the documents were accessed.

Computing devices can be used to create and manage documents for a user. Documents can include text documents spreadsheets pictures videos presentations e mail messages or web pages for example. A user can create documents on one or more computing devices and store the documents locally or on a server to allow the stored documents to be accessed on multiple computing devices. Storing documents on a server sometimes called cloud storage permits a document to be shared among users so as to permit documents to be viewed and edited by more than one user on more than one computing device.

Disclosed herein are aspects of systems methods and apparatuses for managing computer based documents. One method includes identifying one or more documents accessed by a user including a context in which the one or more documents were accessed wherein the context includes date and time information and one or more of an application a document a calendar event a shared document or an email message creating a document list that includes the one or more documents including the context in which the one or more documents were accessed identifying a current context creating a subset list from the document list based on the current context and presenting the subset list to the user.

Another aspect of the teachings herein includes an apparatus for managing documents including a memory and a processor. The processor is configured to execute instructions stored in memory to identify one or more documents accessed by a user including a context in which the one or more documents were accessed wherein the context includes date and time information and one or more of an application a document a calendar event a shared document or an email message create a document list that includes the one or more documents including the context in which the one or more documents were accessed identify a current context create a subset list from the document list based on the current context and present the subset list to the user.

Computing devices can be used to create and manage documents for a user. As computing devices become more powerful and include larger and more varied storage options it can become increasingly difficult for users to keep track of documents. For example storage devices are now available that exceed one terabyte of storage for a single computing device. A user may have access to multiple computing devices including desktop computers laptop computers tablet computers and mobile phones all connected via networks from time to time each of which can create and store documents that can be accessed on other computing devices. In addition a computing device can be connected to a server via a network that provides storage for documents.

The various computing and storage options available to a user can make it difficult to access a desired document. In this disclosure access will refer to the process of locating a file representing a document and making use of the contents of the file with a computing device. For example a document can be accessed by a word processing application for viewing or editing. Document access can be complicated by the fact that a document to be accessed could be one of thousands of documents stored on large capacity storage device. In other cases the document may not be stored locally on the computing device currently being used by the user but rather in memory or local storage on another computing device accessible for example via a network. In yet other cases the document can be stored in cloud storage accessible via a wide area network WAN such as the internet or a cellular telephone network.

Aspects of the teachings herein can improve the efficiency with which documents are accessed by creating a list of documents and the context in which they were previously accessed. Context can be defined as the state of the computing device at a particular point in time. Context can include the time of day the day of the week which applications are currently running which calendar events may be occurring what storage devices are available locally or networked what cloud storage is available what web sites may be active what e mail messages may be open and or whether a document is a shared document. A subset of the list of documents that were accessed in contexts similar to the current context can be provided. When a user performs an operation that accesses a document for example by selecting a menu item that activates an open document dialog box the computing device can examine the current context and provide the user with a list of suggested documents that were accessed in a similar context.

First discussed below are environments in which aspects of this disclosure can be implemented. Then details of certain implementations are described.

A network can connect computing station and a server station for storing documents or calendar information. For example a document can be created at computing station and transmitted to cloud storage at server station . Network can be for example the Internet. Network can also be a local area network LAN WAN virtual private network VPN cellular telephone network or any other means of transferring the data from computing station to in this example server station .

Server station in one example can be a computer having an internal configuration of hardware such as that described in . However other suitable implementations of server station are possible. For example the processing of server station can be distributed among multiple devices.

Other implementations of computing system are possible. For example an implementation can omit network . In another implementation documents may be created and then stored for transmission at a later time to server station or any other device having memory. In one implementation server station receives e.g. via network a computer bus and or some communication pathway and stores documents for later access.

A CPU in computing device can be a conventional central processing unit. Alternatively CPU can be any other type of device or multiple devices capable of manipulating or processing information now existing or hereafter developed. Although the disclosed implementations can be practiced with a single processor as shown e.g. CPU advantages in speed and efficiency can be achieved using more than one processor.

A memory in computing device can be a read only memory ROM device or a random access memory RAM device in an implementation. Any other suitable type of storage device can be used as memory . Memory can include code and data that is accessed by CPU using a bus . Memory can further include an operating system and application programs the application programs including at least one program that permits CPU to perform the methods described here. For example application programs can include applications 1 through N which further include an application that performs the methods described here. Computing device can also include a secondary storage which can for example be a memory card used with computing device when it is mobile. Documents may contain a significant amount of information so they can be stored in whole or in part in secondary storage and loaded into memory as needed for processing.

Computing device can also include one or more output devices such as a display . Display may be in one example a touch sensitive display that combines a display with a touch sensitive element that is operable to sense touch inputs. Display can be coupled to CPU via bus . Other output devices that permit a user to program or otherwise use computing device can be provided in addition to or as an alternative to display such as a keyboard or speakers. When the output device is or includes display display can be implemented in various ways including by a liquid crystal display LCD a cathode ray tube CRT display or a light emitting diode LED display such as an OLED display.

Computing device can also include or be in communication with an image sensing device for example a camera or any other image sensing device now existing or hereafter developed that can sense an image such as the image of a user operating computing device . Image sensing device can be positioned such that it is directed toward the user operating computing device . In an example the position and optical axis of image sensing device can be configured such that the field of vision includes an area that is directly adjacent to display and from which display is visible.

Computing device can also include or be in communication with a sound sensing device for example a microphone or any other sound sensing device now existing or hereafter developed that can sense sounds near computing device . Sound sensing device can be positioned such that it is directed toward a user operating computing device and can be configured to receive sounds for example speech or other utterances made by the user while the user operates computing device .

Although depicts CPU and memory of computing device as being integrated into a single unit other configurations can be utilized. The operations of CPU can be distributed across multiple machines each machine having one or more of processors that can be coupled directly or across a local area or other network. Memory can be distributed across multiple machines such as a network based memory or memory in multiple machines performing the operations of computing device . Although depicted here as a single bus bus of computing device can be composed of multiple buses. Further secondary storage can be directly coupled to the other components of computing device or can be accessed via a network and can comprise a single integrated unit such as a memory card or multiple units such as multiple memory cards. Computing device can thus be implemented in a wide variety of configurations.

For simplicity of explanation process is depicted and described as a series of steps. However steps in accordance with this disclosure can occur in various orders and or concurrently. Additionally steps in accordance with this disclosure may occur with other steps not presented and described herein. Furthermore not all illustrated steps may be required to implement a method in accordance with the disclosed subject matter.

At step process identifies document accesses by a user of a computing device. Identify means associate determine distinguish relate or identify in any manner whatsoever. A document can be accessed locally where the document can be stored in memory or a storage device associated with a computing device or remotely where a document can be stored in memory or a storage device located on a network. A document can also be regarded as accessed when it is accessed by some or all other collaborators accessing a shared document. Document accesses can also include e mail events such as receiving a document as an attachment to an e mail message with for example a notice that the document is being shared with the user. In these latter two cases a document access can occur without locating or making use of the contents of the document by an application by a user of a computing device. Instead process can identify the document as being accessed based on other activities that include the document. Documents can be files managed by a file system of computing device . In addition to the contents of a document the file system can store identifying information about the document including its file name location creation date and last modified date the identity of the user who created the document and information regarding whether the document is shared with other users for example.

Identifying document accesses can include recording at least some information from the document s identifying information along with information regarding the context at the time the document was accessed. For example a user can open a document representing a task list in the morning upon arriving at work at about the same time. According to the teachings herein these accesses can be identified by recording identifying file information and context information based on these accesses.

Identifying document accesses can be made more robust by adding tolerances to the time of day. For example a document access occurring within an hour of the previous day s access time can be considered as happening at the same time of day. This time tolerance can be adjustable and can be set by a user. Process may also be made tolerant of missing days including weekends holidays and occasional missed work days due to illness vacations or travel.

At step process compiles a context list of document accesses including the context. The collection of context entries is called a list for ease of explanation herein. However the context entries can be included in any type of data structure suitable for managing a collection of context entries. This step can also be called logging. The context with which a document was accessed can include the identity of the user that accessed the document and the time of day and the day of the week the document was accessed. The context can also include the location of the document and from which computing device it was accessed. The context can also include which application program was used to access the program and which application programs are also running on the computing device at or near the time the program was accessed.

Special cases associated with compiling a context list of document accesses includes calendar applications e mail applications and shared document access. In the case of calendar applications the context for a document access can be associated with an event. For example if a document is accessed proximate to the time of a recurring event the context for that document can associate it with the recurring event so that the document can be suggested to the user for access whenever the recurring event occurs. The document can be compiled into a document list or logged where the context can include the recurring event.

Context for documents included as attachments to e mail messages can be associated with the sender or with the e mail message associated with the original e mail. For example some e mail programs permit the use of topic threads that associate incoming e mails with a list of previous e mails. A document previously included as an attachment to an e mail message can have a context associated with the e mail thread or with the sender of the e mail. The document can be compiled into the context list and the context can include arrival of a new e mail from the same recipient or belonging to the same thread.

Context for documents that are shared can include document accesses by users sharing the document. Shared documents can be a single copy of a document stored on a server or other storage devices where the document is available to more than one user. When any one of the users sharing the document makes changes to a document the changes are made to the one shared copy so that they are available to all shared users. The context for a shared document can include another user on another computing device accessing a shared document. The document can be added to the document list and the context can include access of the shared document by any of the users sharing the document.

At step process identifies the current context of the computing device. The context identified at this step can include the current time of day the day of the week which applications are currently running on the computing device whether a calendar event is occurring or is close to occurring whether a shared document is being accessed on any computer in network communication with the computing device or whether an e mail message is being accessed for example. is a diagram of a computing device display including documents according to an implementation. As discussed in more detail herein shows examples of a current context.

At step the current context identified at step is used to sort the document list formed at step to create a subset list based on the current context. Sorting the context list includes matching the current context to the contexts stored with the documents in the context list. When the current context matches the context stored in the list the documents corresponding to the matched contexts are entered into a subset list that represents a subset of the documents from the documents list. The subset list can include file identifier information for the documents used to access the documents.

At step the subset list is presented to the user. The subset list can be presented in response to a user s selection of an open menu item in an application for example. is a diagram of a user interface for opening documents according to an implementation. For example includes an example of a subset list presented to a user in response to a request to open a document as part of an open dialog box. The subset list can be presented as a separate section of an open dialog box in an implementation. The subset list can give the user an option to open documents that have been identified based on their stored context matching the current context of the computing device in addition to the standard list of documents that may be included in an open dialog box e.g. recent documents . For additional ease of use the subset list can be organized using date and time information. For example items of the subset list can be grouped by date and time information such as today yesterday or last week and can be listed in chronological or reverse chronological order based on their last accessed or last saved date and time.

The subset list can be presented to the user in response to any action that uses a list of documents. For example selecting a menu item in an application that opens documents or selecting a recent items menu item could be such an action. The computing device can also be programmed to present the subset list whenever the current context matches a context stored in the documents list and a subset list is created. Once the subset list is presented to the user in step the user can select one of the documents on the subset list or close the subset list or otherwise ignore the subset list. Other ways that the subset list can be employed by process include using the subset list as suggested inputs to search applications for example or as suggested documents to be used in conjunction with web browser applications that can use documents as input.

In a computing device includes a display showing a group of icons representing applications including a text processing application T a spreadsheet application SS a presentation application P an image processing application I a video processing application V a web browser application B and an e mail application E. Display shows three open documents a text processing document a spreadsheet document and an image document . Display includes a taskbar that displays three task identifiers and corresponding to documents and . Taskbar also includes a date and time display that indicates the time of day and the date. Taken together task identifiers and and date and time display can be included in the current context. For example identifiers for the three documents and in the context list of documents can be included with a context that includes three documents DOC1.TXT DOC2.SS and DOC3.IMG being open. The context can include the three documents text processing application T spreadsheet application SS and image processing application I and date and time for example.

An open dialog box shown by example in includes a title bar that identifies this dialog box as an open dialog box. Dialog box can appear on a display in response to a request by the user to open a document for example. Suggested documents section header indicates that suggested documents section includes documents suggested by for example step of . Suggested documents section includes file names derived from the identifier information stored in a subset list derived from the context list of documents based on the current context. For example if a user previously opened DOC1.TXT DOC3.SS and DOC3.IMG during a recurring meeting that occurred at a previous time these documents could be stored in a context list by storing document identifiers along with the concurrent context information in the context list. At another time when the recurring meeting occurs again a subset list can be created that includes the documents stored in the context list associated with the current context that includes the recurring event. This can result in file names being included in dialog box in suggested documents section as shown in .

The words example or exemplary are used herein to mean serving as an example instance or illustration. Any aspect or design described herein as example or exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather use of the words example or exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X includes A or B is intended to mean any of the natural inclusive permutations. That is if X includes A X includes B or X includes both A and B then X includes A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims should generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form. Moreover use of the term an implementation or one implementation throughout is not intended to mean the same embodiment or implementation unless described as such.

Implementations of computing station and or server station and the algorithms methods instructions etc. stored thereon and or executed thereby can be realized in hardware software or any combination thereof. The hardware can include for example computers intellectual property IP cores application specific integrated circuits ASICs programmable logic arrays optical processors programmable logic controllers microcode microcontrollers servers microprocessors digital signal processors or any other suitable circuit. In the claims the term processor should be understood as encompassing any of the foregoing hardware either singly or in combination. The terms signal and data are used interchangeably. Further portions of computing station and server station do not necessarily have to be implemented in the same manner.

Further in one aspect for example computing station or server station can be implemented using a general purpose computer or general purpose processor with a computer program that when executed carries out any of the respective methods algorithms and or instructions described herein. In addition or alternatively for example a special purpose computer processor can be utilized which can contain other hardware for carrying out any of the methods algorithms or instructions described herein.

All or a portion of implementations of the present invention can take the form of a computer program product accessible from for example a tangible computer usable or computer readable medium. A computer usable or computer readable medium can be any device that can for example tangibly contain store communicate or transport the program for use by or in connection with any processor. The medium can be for example an electronic magnetic optical electromagnetic or a semiconductor device. Other suitable mediums are also available.

The above described embodiments implementations and aspects have been described in order to allow easy understanding of the present invention and do not limit the present invention. On the contrary the invention is intended to cover various modifications and equivalent arrangements included within the scope of the appended claims which scope is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structure as is permitted under the law.

