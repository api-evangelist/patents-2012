---

title: Program management method for performing start-up process for programs during start-up of device based on the previous start-up status to prevent occurrence of an out of memory condition
abstract: A device includes a storage unit configured to store programs; a start-up status storing unit; and a start-up management unit configured to perform a start-up process for each of the programs during start-up of the device, and record information indicating status of the start-up process in the start-up status storing unit in association with identification information of each of the programs. If information indicating that the start-up process has not been previously completed is present in the start-up status storing unit, the start-up management unit limits the programs to be started.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08775785&OS=08775785&RS=08775785
owner: Ricoh Company, Ltd.
number: 08775785
owner_city: Tokyo
owner_country: JP
publication_date: 20120130
---
The present application is based upon and claims the benefit of priority of Japanese Patent Application No. 2011 030623 filed on Feb. 16 2011 and Japanese Patent Application No. 2011 279508 filed on Dec. 21 2011 the entire contents of which are incorporated herein by reference.

Japanese Laid Open Patent Publication No. 2008 084304 for example discloses an image forming apparatus including a platform hereafter called an application platform for executing application programs. The disclosed image forming apparatus allows the user to install application programs suitable for the user environment as plug ins to add functions. Hereafter such application programs may be called plug in applications .

Unlike the case of a personal computer PC it is generally not desirable to request the user of an image forming apparatus to manually start a plug in application each time when using a function. Therefore functions of an image forming apparatus need to be available immediately after its start up. For this reason typically plug in applications are automatically started by the application platform during the start up of the image forming apparatus i.e. when the power is turned on .

Meanwhile compared with a PC the amount of memory of an image forming apparatus is generally kept small to reduce the costs. Also in an image forming apparatus swapping is normally not performed to improve the performance of plug in applications. Accordingly compared with a PC an image forming apparatus is more likely to run out of memory.

Assuming that plug in applications are newly installed in a normally operating image forming apparatus and the image forming apparatus is restarted the image forming apparatus may run out of memory during the start up process of the plug in applications and the start up of the application platform itself may fail. If the application platform is not running on an image forming apparatus it is not possible to use or execute plug in applications. Also since the function to uninstall plug in applications is implemented by the application platform it may not be possible to uninstall the plug in applications. In such a case it is difficult to solve the problem by restarting the image forming apparatus because the out of memory condition described above may occur repeatedly.

In an aspect of this disclosure there is provided a device that includes a storage unit configured to store programs a start up status storing unit and a start up management unit configured to perform a start up process for each of the programs during start up of the device and record information indicating status of the start up process in the start up status storing unit in association with identification information of each of the programs. If information indicating that the start up process has not been previously completed is present in the start up status storing unit the start up management unit limits the programs to be started.

Preferred embodiments of the present invention are described below with reference to the accompanying drawings. is a block diagram illustrating an exemplary hardware configuration of an image forming apparatus according to an embodiment. The image forming apparatus is an example of a device according to an aspect of this disclosure. As illustrated in FIG. the image forming apparatus may include as hardware components a controller a scanner a printer a modem an operations panel a network interface and a secure digital SD card slot .

The controller may include a central processing unit CPU a random access memory RAM a read only memory ROM a hard disk drive HDD and a non volatile RAM NVRAM . The ROM stores for example programs and data used by the programs. The RAM is used for example as a storage area into which programs are loaded and as a work area for the loaded programs. The CPU executes the programs loaded into the RAM to implement various functions. The HDD stores for example programs and data used by the programs. The NVRAM stores for example various settings.

The scanner is a hardware component image scanning unit for scanning a document to obtain image data. The printer is a hardware component printing unit for printing print data on a recording medium such as paper. The modem is a hardware component for connecting the image forming apparatus to a telephone line and is used to send and receive image data for facsimile communications. The operations panel is a hardware component including an input unit such as buttons for receiving user inputs and a display unit such as a liquid crystal display panel. The network interface is a hardware component for connecting the image forming apparatus to a wired or wireless network such as a local area network LAN . The SD card slot reads for example programs stored in a secure digital SD card . With the image forming apparatus configured as described above in addition to the programs stored in the ROM and the HDD programs stored in the SD card can be loaded into the RAM and executed. Instead of the SD card any other storage medium e.g. a CD ROM or a universal serial bus USB memory may also be used for this purpose. That is a storage medium that can be mounted on the image forming apparatus is not limited to the SD card . When a storage medium other than the SD card is used the SD card slot may be replaced with a hardware component corresponding to the storage medium used.

The standard applications are default applications installed in the image forming apparatus before the factory shipment. In the example of the standard applications include a scan application a print application a copy application and a fax application . The scan application performs a scan job. The print application performs a print job. The copy application performs a copy job. The fax application performs a facsimile transmission job and a facsimile reception job.

The control service is implemented by software modules that for example provide functions for controlling various hardware resources to upper layer applications and perform fundamental functions of the image forming apparatus .

The SDK applications may be called in the singular form for descriptive purposes are plug in applications that are additionally installed to add functions to the image forming apparatus after its factory shipment. Applications implementing any appropriate functions may be provided as the SDK applications . For example the SDK applications may be installed via the SD card or a network into the image forming apparatus . Each of the SDK applications may run as a thread on the SDK platform .

The SDK platform provides an execution environment for the SDK applications . The SDK applications are developed using application programming interfaces API provided by the SDK platform . For example the SDK platform provides the SDK applications with a scan function interface a print function interface and a copy function interface. APIs provided by the SDK platform may be made public to allow a third party to develop the SDK applications . Since the APIs are machine independent it is generally not necessary to modify the SDK applications for different types or models of image forming apparatuses. Here the SDK platform itself is also a type of an application program installed in the image forming apparatus . The SDK platform may be installed for example via the SD card or a network into the image forming apparatus . Unlike the SDK applications however the SDK platform runs as a process on the OS .

The OS is an operating system. Software programs in the image forming apparatus run as processes or threads on the OS .

The installation unit installs or adds the SDK applications . Also the installation unit generates in the start up status storing unit records hereafter called start up status records including identifiers e.g. product IDs of SDK applications that are successfully installed and also set to an automatic start mode. The start up status records are used to manage start up status of the SDK applications . The installation unit sets 0 which is the initial value indicating the start up status in each of the generated start up status records.

The start up status is an example of information indicating the status or progress of a start up process of the SDK application . In this embodiment the start up status may take one of the following values depending on the status of the start up process 

Here automatic start mode indicates that the SDK application is automatically started by the start up management unit during the start up of the image forming apparatus . When an SDK application is installed the SDK application is set to either the automatic start mode or a manual start mode. In the manual start mode the SDK application is started in response to a start request input by the user at a random timing via for example the operations panel . Normally the SDK applications are set to the automatic start mode. In the descriptions below it is assumed that all installed SDK applications are set to the automatic start mode.

The start up status storing unit may be implemented for example by a storage area of the NVRAM or the HDD and stores start up status records of the SDK applications installed in the image forming apparatus .

The uninstallation unit uninstalls or removes the SDK applications . Also the uninstallation unit removes the start up status records including the product IDs of the uninstalled SDK applications from the start up status storing unit .

The start up management unit performs a start up process for each of the SDK applications installed in the image forming apparatus during the start up of the image forming apparatus . As the start up process proceeds the start up management unit updates the start up status record of the SDK application .

The start up determining unit refers to the start up status storing unit and thereby determines whether to allow start up of each of the SDK applications installed in the image forming apparatus .

The start up order management unit determines the order in which the SDK applications are started in a given occasion.

The memory status management unit records a value hereafter called an out of memory flag indicating occurrence of an out of memory condition during the start up process of the SDK application in for example the NVRAM or the HDD .

An exemplary process performed by the image forming apparatus is described below. is a flowchart illustrating an exemplary process performed during start up of the image forming apparatus according to a first embodiment.

When turned on the image forming apparatus starts an initialization process. In the initialization process i.e. when the image forming apparatus is turned on the OS the control service the standard applications and the SDK platform are started in this order. During the start up process of the SDK platform the SDK platform starts the SDK applications installed in the image forming apparatus . illustrates a process of starting the SDK applications by the SDK platform .

In step S the start up management unit of the SDK platform determines whether the out of memory flag is present. In other words as is explained later whether the out of memory flag was recorded in the previous start up process of the image forming apparatus is determined in step S.

Next the start up management unit initializes the out of memory flag S . For example if the out of memory flag is present the start up management unit removes the out of memory flag. This is to prevent the out of memory flag recorded in the previous start up process previous with respect to the current start up process of the image forming apparatus from being used in the next start up process of the image forming apparatus i.e. to prevent the use of the out of memory flag recorded two times before .

The start up management unit performs different steps depending on whether the out of memory flag is present i.e. the process branches depending on whether the out of memory flag is present S . If the out of memory flag is not present NO in S the start up management unit selects one of the SDK applications in a normal order for example in ascending order of the product IDs S .

Then the start up management unit performs a start up process for the selected SDK application S . Steps S and S are repeated for all the SDK applications installed in the image forming apparatus S . Thus in the example of steps S and S are repeated for each of the SDK applications . In other words multiple sets of steps S and S are performed sequentially. Alternatively to reduce the time for processing the SDK applications threads may be generated for respective sets of steps S and S or start up processes . In other words multiple start up processes or multiple sets of steps S and S for the SDK applications may be performed in parallel.

In step S the start up management unit determines the current start up status of the target application based on the corresponding start up status record stored in the start up status storing unit . The current start up status here indicates the start up status of the target application before being started. In other words the current start up status indicates the start up status recorded during the previous start up process of the image forming apparatus .

The SDK application with a product ID 0x0005 was successfully started in the previous start up process of the image forming apparatus . The SDK applications with product IDs 0x000f and 0x0001 were installed when the image forming apparatus was started previously and have never been automatically started.

When the current start up status of the target application is 0 or 1 the start up management unit records 1 in the start up status record as the start up status of the target application i.e. updates the start up status S . That is since the target application has never been started or successfully started 1 indicating that the target application is being started for the first time is recorded as the start up status. Thus 0 and 1 are examples of information indicating that the target application has never been started.

When the current start up status of the target application is 2 or 3 the start up management unit records 3 in the start up status record as the start up status of the target application i.e. updates the start up status S . That is since the target application has been started at least once 3 indicating that the target application is being started for the second time or later is recorded as the start up status.

Next the start up management unit inputs a start up request to the target application S . In response to the start up request the target application performs an initialization process for itself. In the initialization process for example the target application reserves or secures a memory area heap area as necessary. When the start up of the target application is completed YES in S the start up management unit records 2 in the start up status record as the start up status of the target application i.e. updates the start up status S . That is the start up management unit records normal or successful completion of the start up process for the target application.

For example the start up management unit detects completion of the start up process of the target application based on a response to the start up request. For example when the target application is configured to receive the start up request by calling a synchronous function or method the response to the start up request may correspond to a return from the called function or method. Meanwhile when the target application is configured to receive the start up request via an asynchronous function or method the response to the start up request may correspond to a start up completion report sent by the target application when the start up process is completed and the target application becomes a steady normal or standby state.

Meanwhile if an out of memory condition or an exception occurs YES in S after the start up request is input and before the start up process is completed i.e. while the target application is being started the memory status management unit records the out of memory flag in for example the NVRAM or the HDD S .

In this case the target application is not started and the process of is terminated. Accordingly in this case SDK applications other than those already started will not be started. In certain circumstances the process of the SDK platform is also terminated and as a result the SDK applications running as threads on the SDK platform are terminated. Thus when an out of memory condition occurs the user cannot use some or all of the SDK applications . Here when an out of memory condition occurs the start up status of the target application stored in the start up status storing unit is 1 or 3 . In the next start up process of the image forming apparatus i.e. before the start up process for the SDK application is performed next time the start up status 1 or 3 indicates that the start up process has not been previously completed. Thus the start up status 1 or 3 is an example of information indicating that the start up process has not been previously completed.

When the image forming apparatus is restarted after an out of memory condition occurs the presence of the out of memory flag is determined in step S of .

The out of memory flag is recorded by the memory status management unit to distinguish the termination of the process of or due to the occurrence of an out of memory condition from the termination of the process of or due to a forced power shutdown e.g. blackout . That is although it is possible to determine whether there is an SDK application whose start up process failed during the previous start up process of the image forming apparatus by referring to the start up status storing unit it is not possible to determine whether the failure is due to an out of memory condition or a forced power shutdown based only on the start up status records in the start up status storing unit .

There is even a case where the memory status management unit cannot record the out of memory flag when an out of memory condition occurs. If this is likely to happen the image forming apparatus may be configured to not use the out of memory flag. In this case the start up management unit may be configured to determine whether there is a failed SDK application with the start up status 1 or 3 whose start up process failed in the previous start up process of the image forming apparatus by referring to the start up status storing unit . Steps and may be performed if there is no failed SDK application and steps S through S may be performed when there is a failed SDK application .

Referring back to if the out of memory flag is present YES in S the start up order management unit selects one of the SDK applications to be started S . For example the start up order management unit may be configured to select SDK applications in descending order of memory heap consumption. Take for example an SDK application that temporarily consumes a large amount of memory during start up and consumes a smaller amount of memory after start up i.e. the peak of the memory consumption is at the start up . If a start up process for this SDK application is performed after many other SDK applications are started i.e. when the amount of remaining memory is small an out of memory condition may occur. Therefore the start up order management unit may be configured to start an SDK application that temporarily consumes a large amount of memory during start up when the amount of remaining memory is still large. This configuration makes it possible to prevent the occurrence of an out of memory condition and to increase the chance of being able to start all SDK applications . The memory consumption at start up of an SDK application may be reported by the developer of the SDK application and the reported memory consumption may be recorded as attribute information of the SDK application in for example the NVRAM or the HDD when the SDK application is installed. Alternatively the installation unit may be configured to virtually start the SDK application during an installation process as a test to measure the memory consumption and to record the measured memory consumption in the NVRAM or the HDD .

Also the start up order management unit may be configured to select the SDK applications when the out of memory flag is present in descending order of priority that is recorded for example in the NVRAM or the HDD .

Also the start up order management unit may be configured to select the SDK applications in the order of installation. In this case an SDK application that has been installed most recently is selected last. This configuration in combination with the start up determining unit described later makes it possible to increase the number of SDK applications that can be installed.

The order of installation may be determined for example based on the order of start up status records in the start up status storing unit . Alternatively information indicating the order of installation may be recorded by the installation unit when installing the SDK applications and the start up order management unit may be configured to select the SDK applications based on the information.

Further even if the out of memory flag is present YES in S the SDK applications may be selected in the normal order.

Referring back to the start up determining unit determines whether to allow start up of the SDK application hereafter called a target application selected by the start up order management unit by referring to the start up status storing unit S . For example the start up determining unit allows start up of SDK applications other than an SDK application whose start up process failed during the previous start up process of the image forming apparatus . More specifically the start up determining unit does not allow start up of the target application if the start up status is 1 or 3 . Otherwise the start up determining unit allows start up of the target application. Since the start up status 1 or 3 indicates that an out of memory condition occurred during the previous start up process of the SDK application starting the SDK application may cause an out of memory condition again.

Alternatively the start up determining unit may be configured to allow start up of SDK applications other than an SDK application s installed most recently. For example the start up determining unit does not allow start up of the target application if the start up status is 0 or 1 and allows start up of the target application if the start up status is other than 0 and 1 . This configuration makes it possible to reproduce a situation where all SDK applications are successfully started. That is this configuration makes it possible to prevent start up of the most recently installed SDK application that has caused an out of memory condition.

If start up of the target application is allowed by the start up determining unit YES in S the start up management unit performs a start up process for the target application S . The start up process of step S is substantially the same as the start up process of step S described with reference to .

In step S however SDK applications are preferably started in sequence. That is instead of concurrently executing multiple start up processes as threads the start up management unit is preferably configured to wait for the completion of a start up process for an SDK application before performing a start up process for the next SDK application . If start up processes for SDK applications that consume a large amount of memory at start up are performed in parallel the peaks of memory consumption may overlap and an out of memory condition may occur. Performing start up processes in sequence or in series makes it possible to prevent this problem.

If start up of the target application is not allowed by the start up determining unit NO in S the start up process for the target application is not performed.

Steps S through S are repeated for all the SDK applications installed in the image forming apparatus S . As described above steps S through S are generally performed if an out of memory condition occurs in the previous start up process of the image forming apparatus . In steps S through S the start up determining unit prevents start up of one or more SDK applications to prevent occurrence of an out of memory condition. This configuration makes it possible to reduce the chance that an out of memory condition occurs in succession. In other words this configuration makes it possible to prevent failure of start up processes of the SDK applications and thereby makes it possible to improve the chance that the SDK platform is normally started. If the SDK platform is normally started the user can uninstall unnecessary or low priority SDK applications via the uninstallation unit to reduce the chance that an out of memory condition occurs in the subsequent start up processes of the image forming apparatus .

The start up management unit may instead be configured to automatically start none of the SDK applications if the out of memory flag is present YES in S . In this case the start up management unit may be configured to display a message indicating the occurrence of an out of memory condition on for example the operations panel and to request the user to select SDK applications to be started.

A second embodiment is described below. is a flowchart illustrating an exemplary process performed during start up of the image forming apparatus according to a second embodiment. In similarly to it is assumed that an initialization process is performed by the image forming apparatus and a process of starting the SDK applications is performed during the start up process of the SDK platform .

In step S the start up management unit of the SDK platform determines whether the amount of remaining memory or the amount of remaining heap area is greater than or equal to a threshold. The threshold may be predetermined and stored in for example the NVRAM or the HDD . Alternatively assuming that the memory consumption at start up is recorded as attribute information in the NVRAM or the HDD for each of the SDK applications the threshold may be dynamically determined e.g. in step S by the start up management unit by adding a value to the largest memory consumption among the SDK applications or to the memory consumption of an SDK application to be started next. For example the value a may indicate the amount of memory necessary to normally start the SDK platform . The memory consumption at start up of an SDK application may be reported by the developer of the SDK application or may be measured by virtually starting the SDK application during the installation process.

If the amount of remaining memory is greater than or equal to the threshold YES in S the start up management unit selects one of the SDK applications in a normal order for example in ascending order of the product IDs S . Next the start up management unit inputs a start up request to the selected SDK application S .

When start up requests are input to all the SDK applications installed YES in S all the SDK applications become available and the start up process of the image forming apparatus is completed.

Meanwhile if it is detected that the amount of remaining memory is less than the threshold NO in step S at any point during the process of starting the SDK applications the start up management unit terminates threads of all SDK applications that have already been started S . As a result the memory being occupied by the already started SDK applications is released and the SDK platform is normally started. Then the start up management unit reports to the user that the SDK applications have been terminated S . For example the start up management unit displays on the operations panel a message indicating that the SDK applications have not been started due to insufficient memory. The user reads the message and determines that the SDK applications have not been started.

With the above configuration the image forming apparatus is started with the SDK platform normally running. Therefore the user can request the SDK platform to uninstall unnecessary SDK applications and to cancel the automatic start mode of some SDK applications . This in turn makes it possible to prevent the image forming apparatus from being started again with all the SDK applications unavailable.

As a variation of the process of step S may be omitted. In this case already started SDK applications are not terminated. However step is preferably performed to terminate already started SDK applications and thereby to increase the chance that the SDK platform is normally started.

As another variation when the amount of remaining memory is less than the threshold a start up process may be performed for an SDK application s which has not been started whose memory consumption at start up is less than the threshold. In other words the start up management unit may be configured to not start SDK applications whose memory consumption at start up is greater than or equal to the threshold.

As described above the second embodiment makes it possible to normally start the SDK platform even when the amount of memory becomes insufficient without restarting the image forming apparatus .

In addition to the image forming apparatus the above embodiments may also be applied to any apparatus such as a projector a smartphone a cell phone or a digital camera where programs are installable.

An aspect of this disclosure provides a device a program management method and a non transitory computer readable storage medium storing program code that make is possible to prevent failure of start up processes of programs.

The present invention is not limited to the specifically disclosed embodiments and variations and modifications may be made without departing from the scope of the present invention.

