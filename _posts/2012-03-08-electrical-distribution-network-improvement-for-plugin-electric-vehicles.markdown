---

title: Electrical distribution network improvement for plug-in electric vehicles
abstract: Electrical distribution network (EDN) improvement method for plug-in electric vehicles receives and stores in a database EDN configuration information, demography information and load information for simulating load of the EDN assets. The method dynamically updates the EDN configuration, demography information and/or load information to provide an efficient and customizable method of simulating a PEV load impact on an EDN configuration and apply improvements to the EDN in real time.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09106101&OS=09106101&RS=09106101
owner: Accenture Global Services Limited
number: 09106101
owner_city: Dublin
owner_country: IE
publication_date: 20120308
---
This application claims the benefit of the filing date of European Patent Application Number 11305260.9 filed Mar. 10 2011 the disclosure of which is incorporated in its entirety by this reference.

This disclosure relates to a system for improving electrical distribution networks for plug in electrical vehicles PEV .

Businesses and governments are facing pressures from a business standpoint and from a political standpoint to reduce carbon emissions secure energy independence and support the automotive industry for more environmentally friendly means of transport. Many businesses and governments consider PEVs as a near term technology to achieve these goals. Studies have shown that putting PEVs on the road could reduce U.S. greenhouse gas emissions by as much as 500 million metric tons a year by 2050. On the technological side development of more efficient batteries and chargers allow car manufacturers to produce more efficient and affordable PEVs. As concerns for environmental issues rise and as fuel prices are forecasted to increase worldwide consumers are also becoming more interested in PEVs leading to an increase in the forecast of the number of PEVs on the road.

The rising number of PEVs on the road and associated charging stations would generate an additional load that will be dynamically spread on the existing electrical distribution networks EDN both geographically and in time. Studies have shown that even a small penetration of PEVs would overload a local EDN and shorten the lifespan of the power equipment such as switching equipments transformers and regulators. However more needs to be done to enable widespread use of PEVs.

An electrical distribution network EDN improvement system system allows an operator of an EDN to efficiently and accurately simulate the impact of PEVs dynamically modify the configuration of the EDN to account for different load scenarios determine programs for improving the EDN for the PEVs. The system further enables applying the improving measures to the EDN.

An electrical distribution network improvement method includes receiving user input wherein the user input comprises electrical distribution network EDN configuration information demography information and load information and storing the user input in a database. The method further includes performing a first simulation using a simulator based at least on the EDN configuration information the demography information or the load information stored in the database to obtain a first simulation result analyzing the first simulation result using an analytics engine to obtain a first interpretation result determining at least one improvement program based on the first interpretation result and updating the EDN configuration information based on the determined improvement program. The method also includes performing an improvement simulation based on the updated EDN configuration information and applying the improvement program to the EDN.

Other systems methods features and will be or will become apparent to one with skill in the art upon examination of the following figures and detailed description. It is intended that all such additional systems methods and features be included within this description be within the scope of the disclosure and be protected by the following claims.

The EDN may include one or more power generation sources such as a power plant a transmission grid a distribution grid and customer premises . The transmission grid may include transmission towers for transmitting electricity to transmission substation within the transmission grid. The transmission substation may transmit electricity to various distribution grids such as the distribution grid . The distribution grid may include distribution substations such as substation and which in turn distribute electricity to various nodes in customer premises . The customer premises may include one or more meters for metering electricity flowing to various nodes . The nodes may be for example a factory node home node PEV charge node and other types of nodes .

The EDN may further include an EDN operator center . The EDN operator center may communicate via a network with various aspects of the EDN to control the configuration and operation of the EDN. For example the EDN operator center may communicate with the transmission substation distribution substations and meter and various nodes in order to control and change the operation and configuration of part or all of the EDN. For example the EDN operator center may alter the electrical distribution patterns among the different distribution substations and adjust rates depending on the type of node or the time of the day or identify any hardware maintenances that may be required. The EDN operator center may include the system a demand response system and the EDN control system .

The demand response system may control loads at one or more nodes such as curtailing power used or implementing the vehicle to grid V2G features. V2G will be discussed in more detail below. EDN control system may receive instructions from the system demand response system or an operator to control the EDN.

The front end may act as an interface for users to interact with the system . The front end may be for example a web site an application running on a smart phone or tablet PCs which may be used by EDN operators. The front end may be used to interact with users at a high level. The interaction may be done through screens. The screens may briefly explain key terms like Smart grid and PEVs and may also describe the problem to the user. The screens may also allow the user to specify a set of parameters that will be used to simulate a specific EDN. The values specified by the user may be put in a specific table of the database and identified by a simulation identifier which will be discussed in more detail below. The screens may also display a graphical view of the network and highlight the failure points and times. Further the screens may display statistical results about a set of simulations that have been performed. The screens may also allow the user to apply one of the improvement programs established to help the EDN handle its new load and visualize the effects of the programs.

The analytics engine may interact with the front end the database and the simulator . The analytics engine may receive from the front end a simulation identifier. The simulation identifier may be used to obtain from the database details about the simulations the system is supposed to run. Those details may be stored in the database through the front end . Alternatively the details of the simulations may be loaded directly into the database . The analytics engine may also send alerts to the front end when a set of simulations are finished so that results may be highlighted in a graphical view displayed to the user.

The analytics engine may interact with the database to store the description of an EDN that will be simulated. The analytics engine may analyze the PEV load for the EDN such as by accessing a PEV load model as discussed below . The analysis may lead to one or more improvements of the EDN such as changes or improvements in the structure of configuration of or devices in the EDN or such as changes or improvements in the operation of the EDN including selecting one or more nodes for demand response . The analysis of the EDN using the analytics engine may be prospective in order to make future changes to part of all of the EDN such as upgrading hardware in the EDN . Or the analysis of the EDN using the analytics engine may be performed in real time in order to make real time changes to part of all of the EDN such as applying demand response to part of the EDN .

From one simulation to another the EDN simulated may have a different configuration as far as assets characteristics and loads are concerned. The modifications from one configuration to another may be performed by the analytics engine using user input parameters and a model such as PEV model defining the load increase from one date to another. The PEV model may be stored in and obtained from the database or may be incorporated into the analytics engine .

Simulation data may be provided to the simulator to run the simulation. Such data may include for example the EDN configuration PEV load information and demography information. These data may be provided to the simulator from the database . The simulation may perform a load flow calculation to simulate the load received on various assets of the EDN. The simulator may be implemented for example using GridLab D or OpenDSS. The simulator may also be implemented for example using the backward sweep method. The simulation data may be passed to the simulator in a variety of ways for example as a process call a method call or as a script file. After the simulation the results may also be accessed in a variety of ways for example as a process call a method call or by generating a result file.

In an embodiment before each simulation the analytics engine may generate from the database a script file describing the configuration of the EDN and passes it to the simulator . The simulator in turn runs the simulation to simulate the EDN operation for a specified period of time according to the script file and generates result files. The result files may include information on various aspects of the EDN such as currents voltages and powers values of the assets in the EDN.

After each simulation the results may be stored in the database . Then the analytics engine may interpret the results and store the interpretation into the database . The interpretation may detect various issues within the EDN such as for example outages for example due to overcapacity and line failure.

The analytics engine may call the simulator any time to run a specific configuration of an EDN. In an embodiment in such a call the analytics engine may pass to the simulator a description of the EDN to simulate. That description may be in a format compatible with the simulator . After the simulation the analytics engine may access the results files generated by the simulator . The analytics engine may then parse the result files and store the results values in the database .

The database may store information about the simulated EDNs and the simulation process itself. A data model of a classical EDN may be defined in the database . This model may include tables containing the characteristics of each asset of the EDN and the relationships between the assets. Receiving the simulation data from the user as user input and storing in the database allows the system to dynamically simulate EDNs with varying configurations. Further by storing the load information such as the PEV load model and providing it to the simulator the system may also dynamically simulate a certain EDN configuration with varying load and demography information.

Therefore the simulator may receive simulation data describing a specific configuration of the EDN demography and load information which may be efficiently tailored for specific needs. Further the simulator may simulate the EDN for a specific range of time and provide results. The results may be used by the analytics engine to populate the database with results from the simulation.

When modifying a configuration of an EDN to reflect additional loads as discussed above a PEV load model may be used. PEV load and load coming from other sources like population growth or increase in individual power needs may be included in this load model.

The PEV load model may account for factors such as for example energy consumption of a PEV the charging profile of the batteries used and the driving behavior of the drivers. The load at each node and for each simulation may be computed with a set of formulae. These formulae may assume that base load and demography are known for each node at the starting date. In those formulae n represents the date of simulation and i represents a loaded node. Those formulae may be used in the order at which they are listed below.

The first parameter that is computed is DemographyWeight. It represents the weight of each node as far as demography is concerned. The demography of a node is the number of people that receive their electric power from that node. The formula also uses the YearlyPopulationlncrease corresponding to the simulation date. The last element used by formula is ActivitylnfluenceonDemography. It is a coefficient between 0 and 1 and represents the influence that the activity on a region has on its demography. For example four regions may be defined as commercial residential agricultural and industrial.

Given the previous parameter the overall demography at the start date and the YearlyPopulationlncrease demography at each node may be computed according to Equation 2.

PEVWeight calculated by equation 3 represents the likelihood of each node to handle some PEVs. This is computed using the demography at each loaded node and ActivityinfluenceOnPEV which is a coefficient between 0 and 1 representing the influence the activity in a region has on the number of PEVs used within a region.

Equation 4 computes the number of PEVs that will be recycled during the year corresponding to the simulation date. It uses the life expectancy of each PEV and the number of cars sold for the year of simulation. PEVToRecycle if lifeExpectancy StartDate then NumberCarSales lifeExpectancy else 0 where NumberCarSales NumberCarSales StartDate 1 YearlyPopulationIncrease Equation 4

Equation 5 computes the number of PEVs for the current simulation date. That equation uses the number of PEVs of the previous simulation the number of PEVs to recycle the PEV penetration the number of cars sold at the start date and the corresponding YearlyPopulationIncrease. NumberPEV NumberPEV 1 PEVToRecycle PEVPenetration NumberCarSales StartDate 1 YearlyPopulalationIncrease Equation 5

The parameter NumberPEV n used with PEVWeight at each node helps compute the number of PEVs at each node for the simulation date according to Equation 6.

Using Equations 1 6 all the parameters to compute the load at each node according to Equation 7 may be obtained. PEVLoad represents the average power used by a PEV. Load Load StartDate 1 YearlyLoadIncrease 1 YearlyPopulationIncrease NumberPEV PEVLoad Equation 7

SimulD the primary key of the table. When the front end calls the Analytics engine it passes the SimulD corresponding to the set of simulations to run.

NetworklD is the name of the EDN to use for a set of simulations. Using this ID other simulations using the same EDN configuration may be run at a later time without having to provide the full description of the EDN again.

PEVFinalPenetrationRate The PEV penetration rate estimated at End Date. A typical value used may be 50 in 2060.

The three previous criteria may be used to infer the penetration rate according to the simulation date. Equation 8 may be used 

YearlyLoadlncrease Yearly load increase used for the set of simulations. That parameter represents the increase in individual power needs. A typical value is 3 .

The analytics engine may include a processor in communication with a memory which may store various logic for operating the system when executed by the processor . The memory may include a main program which governs the main operation of the analytics engine . The memory may further include a database manager network configuration manager script generator simulation result parser and results interpreter . These may be implemented as computer programming software classes accessible by the main program .

The database manager may be used at the beginning of each set of simulations. It accesses the database . A web service that exposes the database content may be used to access the database . The database manager may be implemented as a computer programming class.

The network configuration manager may be used to put in the database the description of the EDN to be used for a specific set of simulations. The network configuration manager may interact with the database parse the EDN description asset by asset and put the characteristics of the asset in the corresponding tables of the database . Access to the database may be performed through a web service. The date of simulation may also be added in the tables as part of the primary key of each table.

In an initial base load simulation if an XML file describing the demography of all the nodes of the EDN is provided the network configuration manager may be used to fill the demography parameter of tables representing node objects in the database . In an embodiment a web service may be used to interact with the database .

If such XML file is not provided the network configuration manager may be compute the demography of each node of the EDN assuming that the description of the EDN have been given with corresponding load at each node. Here two options are shown below 

The first option is to use the total population for the simulated EDN input by the user via the front end . In this case the population is spread over the EDN according to the load each node handles.

The second option is to infer the population from the loads assigned to each node. This option may use the LoadPerHousehold and MembersPerHousehold parameters described above.

Before each time a simulation is run the network configuration manager may be used to define a new configuration or update a previous simulation of the EDN. An initial configuration may be defined or a previous configuration updated to run a simulation for a specific date between the start and the end date. Running the initial simulation updating the configuration and re running the configuration may be iterated automatically. This process may be iterated based on predefined criteria. The predefined criteria may be for example equation 15 discussed below.

Further the network configuration manager may be used to compute the load corresponding to the current simulation date and to put that load in the corresponding tables of the database . The network configuration manager may use the PEV load model discussed above to compute the load.

In an embodiment the memory may also include a script generator which may be used to generate a script file describing a configuration of the EDN that is being simulated. The script generator may be implemented in a computer programming language class and may implement a function called Generate which may access the database through the web service and which reviews table by table to write down assets configuration corresponding to the simulation date.

The previously generated script file may be passed to the simulator and run. In an embodiment the simulator may provide the results by generating a result file. When the result files are generated those files may be parsed to obtain the result values that may be stored at the corresponding places in the database . The memory may further include a simulation result parser which may implement a method call Parse that may parse the result file access the database and store in the results of a simulation. The result file may be a comma separated value CSV file and the simulation result parser may be adapted to parse the CSV files. The simulation result parser may be integrated with the results interpreter which will be described below.

As discussed above in another embodiment the simulation data such as the asset configuration which may be included in the script file generated in the embodiment above may be provided to the simulator as a method call or process call. The result of the simulator may also be accessed by a method or process call to the simulator .

The results that have been input to the database may be interpreted to determine if the EDN worked properly or not for the load from population and PEVs that has been applied. Results interpreter may interpret the results. Depending on the embodiments discussed above the results interpreter may parse the simulation result file or call the simulator to obtain the results of the simulation. The results interpreter may also use the results parsed by the simulation result parser . The results interpreter may implement a method called Interpret to perform the interpretation. An approach which focuses on fuse and transformer assets may be used for the interpretation. Transformers have various properties such as power rating and power. The power rating of a transformer represents the power it can handle indefinitely without any problem. Typically the transformer can operate at 100 of its rating for years however the more power the transformer handles the quicker it ages. For example a transformer can handle 150 of its rating for some hours. The following are the equations which may be used in interpreting the results. The loads applied to the transformer are average values which the transformers are assumed to handle for long period up to one year.

If power 1.5 power Rating the transformer is too overloaded and will eventually fail. Upgrade needs to be planned e.g. 160 kVA to 250 kVA 

When a fault occurs on the distribution system it is interrupted and cleared by a fuse recloser or relayed circuit breaker. The current is compared to current limit to detect a fault on a fuse. This is used to check if current increases are not too high on a line. If the current is too high the line may be upgraded. The following equations may be used to interpret results from the fuse.

The main program governs the operation of the analytics engine . At the beginning the main program may receive from the front end the simulation identifier. The simulation identifier may be the primary key of the user input table which stores user input for the set of simulations to run. Using the simulation identifier the main program may initiate the simulation and improvement of an EDN. Details of the main program will be discussed below with reference to .

After all of the simulations are complete and the results are interpreted by the analytics engine the analytics engine may determine based on the results one or more improvement programs which may address the problems identified or improve the operation of the EDN. The one or more improvement programs may be directed to one or more goals such as minimizing power loss voltage dip and avoiding asset overload within the EDN. Such improvement program may include 

1. Upgrading assets to support the additional load prioritization of asset investments for transformers and conductors upgrade when the assets are operating over the capacity or adding capacitor banks when there is a voltage loss.

2. Reducing impact by changing driver behavior enforcing different charging controls day night tariff real time pricing or price schedule v. smart metering system.

3. Advising new charging locations based on travel patterns places of interest potential buyer s locations and grid capacity.

The improvement program may also be directed to helping utilities plan for vehicle to grid V2G feature and maximize their benefits while retaining enough energy in PEVs for driving needs. Utilizing V2G may allow the EDN to draw energy stored in the PEVs as necessary allowing for a more efficient and flexible use of electrical energy. Improvement programs may be directed to improve the efficient use of the V2G feature. Such improvement programs may include 

2. Maximizing benefits by changing driver behavior encourage PEV drivers to remain connected to the grid when parked even if the vehicle does not need to be charged. Feed in tariffs may be used to implement this feature.

3. Dispatching of vehicles timing and control of V2G to match system needs drawing electricity from fleets with scheduled usage from a fixed location and synchronizing charging with renewable sources.

Further the improvement program may include utilizing the demand response system to determine allocations of electricity usage for certain nodes and controlling the electricity flow to the nodes based on the allocations. The demand response system may also monitor the status of the EDN in real time and dynamically allocate the electric resources to keep the electricity usages in conformity with the determined allocations.

The above improvement programs are exemplary and more or different improvement programs may be developed and implemented. After the analytics engine determines one or more improvement programs the analytics engine may iterate through the process. For example the analytics engine may update the EDN configuration files to reflect the improved EDN and run the simulation again with the improved EDN configuration. Once the new results are interpreted the analytics engine may determine whether the improvement program will be implemented in the actual EDN. If the analytics engine determines the improvement program will be implemented instructions may be communicated to the EDN operator center and the EDN control system in the EDN operator center may communicate to the various assets within the EDN to implement the improvement program. In an embodiment when determining an improvement program and determining whether to apply the program to the EDN the system may also receive a decision from the user rather than a decision by the analytics engine .

The user input discussed above may include the EDN configuration information and the demography information associated with the EDN configuration. The EDN configuration information may be processed by the network configuration manager and placed into the database such that it may be provided to the simulator . In an embodiment the EDN configuration information may be provided in an EDN configuration file which the network configuration manager may parsed and store the configuration in the database . Such EDN configuration file may be in a Glm format.

The network manager may also process the demography information associated with the EDN configuration and store the processed information in the database to be provided to the simulator . In an embodiment the demography information may be provided in an XML file and that file may be parsed by network configuration manager and placed in the database . If no XML file is provided the network configuration manager may compute the initial demography of each node of the EDN and store in the database .

Next the simulation data is provided to the simulator . The simulation data may include all or part of the input discussed above. The simulation data may also include the EDN configuration information and the demography information discussed above. In an embodiment script generator may generate a script file to be passed to the simulator based on the data stored in the database and or input and provide the script file as the simulation data. Next the simulator runs a simulation based on the simulation data . Load information for the simulation may be provided by the EDN configuration information demography information or computed by the network configuration manager based on the user input . Next the simulation is run by the simulator which may generate the results . Solutions such as for example GridLab D OpenDSS and CYME CYMDIST may be used as the simulator .

The results may be accessed by making a method or process call to the simulator or the simulator may generate a result file containing the results. The results may first be stored in the database . If a result file is generated the simulation result parser or the result interpreter may parse the file and store the parsed results into the database . Next the results interpreter interprets the results stored in the database . In an embodiment the result interpreter may obtain the results to interpret by placing a method or process call to the simulator rather than obtaining the results from the database . The results interpreter may determine whether the network assets are aging detect any over capacity situations detect any faults on recloser fuse and or detect any voltage drops. Overcapacity and faults on recloser fuse may be determined based on the Equations 10 15 discussed above. Aging may be estimated from the IEEE standard C57.91 1995 load dependent failure rate given the load on the transformer and ambient temperature. Various other methods may be used to estimate aging.

Voltage drops may be determined by comparing current voltage to historical voltages in the database. In determining appropriateness of voltage deviations norm EN50160 may be used. Norm EN50160 is a European standard on voltage characteristics of electricity supplied by public distribution systems issued by CENELEC in November 1994 in order to promote a common understanding and interpretation among the electricity distributors. According to this norm voltage deviations should be less than 10 for 95 of the time. Other types of norms that may exist may be used as well.

Next the main program may simulate the EDN with new configurations including modified assets or higher loads to handle for nodes. First the main program may generate a new configuration with the new load of the EDN with network configuration manager . The PEV load model may be used for computing the new load. Next the steps are repeated.

Steps may be repeated multiple times in an iterative process. For example steps may be repeated k times where k is defined as in the following equation 15 

At the end of those k simulations a signal is sent to the front end to alert the end of all simulations.

After the main program determines that steps will not be repeated the main program further determines whether to run an improvement program. If the main program determines to run an improvement program the main program further determines an appropriate improvement program to be run . In an embodiment the main program may also receive an input from the user indicating whether or not to run an improvement program and a selection on which improvement programs to run. The various improvement programs are discussed above in the previous sections. Next the main program runs the determined improvement programs and updates the network configuration information and the demography information based on the determined improvement program . Afterwards steps are repeated with the updated data.

When the simulation with the updated data is complete the main program may determine whether or not to apply the improvement program to the actual EDN. If the improvement programs are determined to be applied the main program determines the changes to be made to the assets of the EDN based on the contents of the improvement program and the interpretation results . Next the main program communicates with the EDN control system to communicate with the various assets of the EDN to implement the changes determined at step .

After determining to apply the changes to the EDN the main program may determine to apply the changes using the demand response system . In this case the main program may communicate with the demand response system to determine allocations of electricity usage for certain nodes in the EDN based on the interpretation results . Next the demand response system may obtain real time measurements of the EDN . The measurements may be obtained through the EDN control system or through other meters such as meters such as meter . The measurements may include for example power usage on each node voltage drops and number of PEVs connected to the nodes in the EDN. Next the demand response system may determine any changes to be made to the EDN necessary to meet the allocation determined in step . The changes may include for example limiting power consumption at a certain node or limiting power drawn from a PEV connected to a certain node. Then the demand response system may communicate with the EDN control system to make the necessary changes to the EDN in step . Afterwards the main program may determine whether or not to continue usage of the demand response system . If the main program determines to continue demand response then the process is repeated from step . If not the process ends.

The demand response system may be implemented in the EDN operation center or may be implemented separate from the EDN operation center. In an embodiment the demand response system may be integrated with the system specifically with the analytics engine .

The implementation discussed above is exemplary. Other implementations may vary any of the supported systems of provided services noted above. For example other implementations may use different types of systems types of infrastructure hosting the system.

The system described above may be implemented in any combination of hardware and software. For example programs provided in software libraries may provide the functionality that forms programs workflows or classes. Such software libraries may include dynamic link libraries DLLs or other application programming interfaces APIs . The logic described above may be stored on a computer readable medium such as a CDROM hard drive floppy disk flash memory or other computer readable medium. The logic may also be encoded in a signal that bears the logic as the signal propagates from a source to a destination.

In addition the system may be implemented as a particular machine. For example the particular machine may include a CPU GPU and software library for carrying out the functionality that forms the workflows classes or other functions noted above. Thus the particular machine may include a CPU a GPU and a memory that stores the logic described above.

While various embodiments of the disclosure have been described it will be apparent to those of ordinary skill in the art that many more embodiments and implementations are possible within the scope of the disclosure. Accordingly the disclosure is not to be restricted except in light of the attached claims and their equivalents.

