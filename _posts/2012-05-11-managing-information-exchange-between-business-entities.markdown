---

title: Managing information exchange between business entities
abstract: Techniques for managing information exchange between business entities include identifying a plurality of routing rules stored in a database of a first business entity computing system; receiving a request for a business transaction through an application of a plurality of applications of the first business entity computing system; determining, based on the identified routing rules, an identifiable business context reference (IBCR) associated with a second business entity computing system, the IBC comprising a unique identifier associated with the second business entity and a first plurality of business data attributes associated with the second business entity; determining, based on the identified IBCR, a communication connection associated with the IBC and an identifiable business context (IBC) associated with the first business entity computing system; and initiating the business transaction between the first business entity computing system and the second business entity computing system through the determined communication connection.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08775671&OS=08775671&RS=08775671
owner: SAP AG
number: 08775671
owner_city: Walldorf
owner_country: DE
publication_date: 20120511
---
This disclosure relates to managing an exchange of information and more particularly managing an exchange of information between two or more business entities.

In business applications it is often necessary for business entities in one computing system to communicate with business entities that reside in a different computing system for an exchange of information. For instance a sales department of a company may need to communicate with an external customer for business advertisement or a manufacturing company may need to contact a vendor for business supply purchases. Typically logical addressing is possible to locate an entity within the same computing system. However for an application to address business entities that are located in other computing systems direct logical addressing may not be feasible. Routing information has to be configured to connect to other computing systems that host the business entities. Information on the sender and recipient business entities would be included in the payload message to identify the business entities in the computing systems. Moreover the routing information would need to be updated whenever technical infrastructure for other computing systems changes.

One or more general embodiments for managing information exchange between business entities include identifying a plurality of routing rules stored in a database of a first business entity computing system receiving a request for a business transaction through an application of a plurality of applications of the first business entity computing system determining based on the identified routing rules an identifiable business context reference IBCR associated with a second business entity computing system the IBCR comprising a unique identifier associated with the second business entity and a first plurality of business data attributes associated with the second business entity determining based on the identified IBCR a communication connection associated with an identifiable business context IBC and the IBC associated with the first business entity computing system and initiating the business transaction between the first business entity computing system and the second business entity computing system through the determined communication connection.

A first aspect combinable with any of the general embodiments includes prior to identifying the plurality of routing rules receiving the routing rules through the application of the plurality of applications of the first business entity computing system.

In a second aspect combinable with any of the previous aspects the IBCR is one of a plurality of IBCRs and each IBCR is associated with a unique business entity computing system of a plurality of business entity computing systems comprising the second business entity computing system.

In a third aspect combinable with any of the previous aspects determining based on the identified routing rules an IBCR associated with a second business entity computing system comprises comparing the routing rules to each IBCR associated with a corresponding one of the plurality of business entity computing systems determining the IBCR associated with the second business entity computing system based on the comparison and identifying the IBCR associated with the second business entity computing system to a user through the application.

In a fourth aspect combinable with any of the previous aspects the plurality of routing rules comprise at least one rule comprising a product type associated with the second business entity computing system and at least one rule comprising a delivery criteria associated with the second business computing system.

A fifth aspect combinable with any of the previous aspects includes identifying a logical port of the second business entity computing system based on the IBCR.

In a sixth aspect combinable with any of the previous aspects the communication connection comprises a communication protocol defined by one of web service protocol a REST protocol an iTalk communication protocol an HTTP protocol an HTTPS an SMTP protocol or a Fast Common Gateway Interface FastCGI protocol.

In a seventh aspect combinable with any of the previous aspects the unique identifier and the first plurality of business data attributes are defined in an XML data object.

Various embodiments of an identifiable business context IBC framework in accordance with the present disclosure may include one some or all of the following features. For example the IBC framework may facilitate communications between business entities in different computing systems by allowing the business entities to be addressed outside of system borders. Further communication connections based on the routing rules can be set on a business level e.g. logical representation of business entities are determined based on routing rules to address business entities using the IBC framework regardless of which system hosts the business entities. As a result the logical routing information of communication connections are independent from the physical addresses of the business entities and would be maintained the same irrespective of the change of technical configurations. Therefore maintenance and update of the communication connections are simplified in situations when the technical infrastructure of the computing systems change. For another example the communication connections based on the IBC framework can be established in a secure manner as the business entities involved in the connections may be authenticated in the target computing system at an initial stage of connection setup whereas the conventional scheme in absence of the IBC framework would include the identification of business entities in the payload information which makes the authentication difficult to be implemented.

These general and specific aspects can be implemented using a device system or method or any combinations of devices systems or methods. For example a system of one or more computers can be configured to perform particular actions by virtue of having software firmware hardware or a combination of them installed on the system that in operation causes or cause the system to perform the actions. One or more computer programs can be configured to perform particular actions by virtue of including instructions that when executed by data processing apparatus cause the apparatus to perform the actions. The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features objects and advantages will be apparent from the description and drawings and from the claims.

Each of the on demand computing system and on premise computing systems includes a server appliance having a processor and an interface. For example the illustrated on demand computing system includes a processor or processors and an interface or interfaces . Similarly the illustrated on premise computing system includes a processor or processors and an interface or interfaces . As further illustrated the on demand computing system includes an IBC framework including an application layer and an integration layer . At a high level the application layer may present an interface to one or more users of the on demand computing system through one or more of the enterprise applications . The integration layer may receive from the application layer an IBC describing a business entity used in one or more of the enterprise applications for storage in a repository communicably coupled to the application. In receiving the IBC from the application layer the on demand computing system may associate the IBC with a communication connection involving the business entity described by the IBC. The integration layer may receive a request to modify the IBC describing the business entity verify the request through the application layer and modify the IBC based on the verification of the request.

In some embodiments the integration layer may identify an IBC referenced on another computing system such as the on premise computing system or through the application layer describing a business entity located in the other computing system. The on demand computing system may then identify a communication connection between the business entities in the different computing systems and generate an identifiable business context reference IBCR associated with the communication connection for storage on the on demand computing system .

In some embodiments the on demand computing system may identify a set of routing rules stored in a database and receive a request for a business transaction through one or more of the enterprise applications . The on demand computing system may then determine an IBCR associated with a business entity located in another computing system based on the identified routing rules. Based on the identified IBCR the on demand computing system may determine a communication connection associated with the IBCR and an IBC associated with the on demand computing system and initiate the business transaction between the business entity in the on demand computing system and the business entity in the other computing system.

Similar functions may be provided by the IBC framework in the on premise computing system which includes an application layer and an integration layer as well. For example the application layer may present an interface to one or more users of the on premise computing system through one or more of the enterprise applications . The integration layer may receive from the application layer an IBC describing a business entity used in one or more of the enterprise applications for storage in a repository communicably coupled to the application. In receiving the IBC from the application layer the on premise computing system may associate the IBC with a communication connection involving the business entity described by the IBC. For another example the integration layer may identify an IBC referenced on another computing system such as the on demand computing system through the application layer describing a business entity located in the other computing system. The on premise computing system may then identify a communication connection between the business entities in the different computing systems and generate an identifiable business context reference IBCR associated with the communication connection for storage on the on premise computing system . As yet another example the on premise computing system may identify a set of routing rules stored in a database and receive a request for a business transaction through one or more of the enterprise applications . The on premise computing system may then determine an IBCR associated with a business entity located in another computing system based on the identified routing rules. Based on the identified IBCR the on premise computing system may determine a communication connection associated with the IBCR and an IBC associated with the on premise computing system and initiate the business transaction between the business entity in the on premise computing system and the business entity in the other computing system. More details regarding the operation of the IBC framework e.g. including the application layer e.g. and integration layer e.g. are provided below and in the accompanying figures.

In general the on demand computing system and on premise computing systems may each be one or more servers that store applications software middleware and data for example the illustrated IBC frameworks e.g. the illustrated enterprise applications e.g. and any hosted applications located on the on demand computing system . In some instances the on demand computing system and on premise computing systems may each store a plurality of various applications. In some instances the on demand computing system and on premise computing systems may each comprise a web server where the IBC framework e.g. the applications e.g. and any other applications represent one or more web based applications accessed and executed via network by the clients or other clients of the system to perform the programmed tasks or operations of the IBC framework e.g. and .

At a high level the on demand computing system and on premise computing system each represents an electronic computing device operable to receive transmit process store or manage data and information associated with the system . For example the on premise computing system may be responsible for receiving application requests from one or more client applications associated with the clients of system e.g. enterprise clients or other clients and responding to the received requests by processing said requests with the IBC framework enterprise applications and or other application and sending the appropriate response back to the requesting clients illustrated in . Requests associated with the IBC framework and or other applications may also be sent from internal users external or third party customers other automated applications as well as any other appropriate entities individuals systems or computers.

As used in the present disclosure the term computer is intended to encompass any suitable processing device. For example although illustrates a single server associated with the on demand computing system and a single server associated with the on premise computing system system can be implemented using two or more servers at each of the on demand computing system and the on premise computing system as well as computers other than servers including a server pool. Indeed on demand computing system and on premise computing systems may each be any computer or processing device such as for example a blade server general purpose personal computer PC Macintosh workstation UNIX based workstation or any other suitable device. In other words the present disclosure contemplates computers other than general purpose computers as well as computers without conventional operating systems. Further the illustrated on demand computing system and on premise computing system may each be adapted to execute any operating system including Linux UNIX Windows Mac OS or any other suitable operating system.

At a high level the IBC framework e.g. and including the application layer and integration layer is any application program module process or other software that may execute change delete generate or otherwise manage information according to the present disclosure particularly in response to and in connection with one or more requests received from the illustrated clients and their associated client applications. In certain cases system may implement a composite IBC framework e.g. and . For example portions of the composite application may be implemented as Enterprise Java Beans EJBs or design time components may have the ability to generate run time implementations into different platforms such as J2EE Java 2 Platform Enterprise Edition ABAP Advanced Business Application Programming objects or Microsoft s .NET among others.

Additionally the IBC framework e.g. and may represent web based applications accessed and executed by remote clients or client applications via the network e.g. through the Internet . Further while illustrated as internal to the on demand computing system and on premise computing system one or more processes associated with the IBC framework e.g. and may be stored referenced or executed remotely. For example a portion of the IBC framework e.g. and may be a web service associated with the application that is remotely called while another portion of the IBC framework e.g. and may be an interface object or agent bundled for processing at a remote client. Moreover any or all of the IBC framework e.g. and may be a child or sub module of another software module or enterprise application not illustrated without departing from the scope of this disclosure. Still further portions of the IBC framework e.g. and may be executed by a user working directly at the on demand computing system on premise computing system as well as remotely.

The illustrated interface e.g. may be used by the on demand computing system and on premise computing system respectively for communicating with other systems in a client server or other distributed environment including within system connected to the network e.g. clients other on premise computing system as well as other systems communicably coupled to the network . Generally the interface e.g. and includes logic encoded in software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interface e.g. and may comprise software supporting one or more communication protocols associated with communications such that the network or interface s hardware is operable to communicate physical signals within and outside of the illustrated system .

As illustrated in the on demand computing system and the on premise computing system each includes a processor e.g. . Although illustrated as a single processor e.g. and in two or more processors may be used according to particular needs desires or particular embodiments of system . Each processor e.g. and may be a central processing unit CPU a blade an application specific integrated circuit ASIC a field programmable gate array FPGA or another suitable component. Generally the processor e.g. and executes instructions and manipulates data to perform the operations of the respective on demand computing system or on premise computing system and specifically the IBC framework e.g. and applications e.g. and and other applications. Specifically the processor e.g. and executes the functionality required to receive and respond to requests from the clients and their respective client applications as well as the functionality required to perform the other operations of the IBC framework e.g. and .

Regardless of the particular implementation software may include computer readable instructions firmware wired or programmed hardware or any combination thereof on a tangible non transitory or in some instance transitory medium operable when executed to perform at least the processes and operations described herein. Indeed each software component may be fully or partially written or described in any appropriate computer language including C C Java Visual Basic assembler Perl any suitable version of 4GL as well as others. It will be understood that while portions of the software illustrated in are shown as individual modules that implement the various features and functionality through various objects methods or other processes the software may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate. In the illustrated system processor e.g. and executes the respective portion all are a part of the applications on the on demand computing system or applications on the on premise system .

Generally the network facilitates wireless or wireline communications between the components of the system e.g. between the on demand computing system and on premise computing systems and the clients as well as with any other local or remote computer such as additional clients servers or other devices communicably coupled to network but not illustrated in . The network is illustrated as a single network in but may be a continuous or discontinuous network without departing from the scope of this disclosure so long as at least a portion of the network may facilitate communications between senders and recipients. The network may be all or a portion of an enterprise or secured network while in another instance at least a portion of the network may represent a connection to the Internet. In some instances a portion of the network may be a virtual private network VPN such as for example the connection between the clients and the on demand computing system and the on premise computing systems . Further all or a portion of the network can comprise either a wireline or wireless link. Example wireless links may include 802.11a b g n 802.20 WiMax and or any other appropriate wireless link. In other words the network encompasses any internal or external network networks sub network or combination thereof operable to facilitate communications between various computing components inside and outside the illustrated system .

The network may communicate for example Internet Protocol IP packets Frame Relay frames Asynchronous Transfer Mode ATM cells voice video data and other suitable information between network addresses. The network may also include one or more local area networks LANs radio access networks RANs metropolitan area networks MANs wide area networks WANs all or a portion of the Internet and or any other communication system or systems at one or more locations.

As illustrated each of the on demand computing system and on premise computing system includes a memory e.g. . Memory may include any memory or database module and may take the form of volatile or non volatile memory including without limitation magnetic media optical media random access memory RAM read only memory ROM removable media or any other suitable local or remote memory component. Memory may store various objects or data including classes frameworks applications backup data business objects jobs web pages web page templates database tables repositories storing business and or dynamic information and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto associated with the purposes of the on demand computing system on premise computing systems and their one or more enterprise applications e.g. and . Additionally memory e.g. and may include any other appropriate data such as VPN applications firmware logs and policies firewall policies a security or access log print or other reporting files as well as others.

In some embodiments the memory e.g. and may store and or reference one or more business routing rules e.g. and IBCs and or IBCRs e.g. and and a registry e.g. and that stores information associated with the IBCs and or IBCRs e.g. and in the on demand computing system or on premise computing system respectively. Additionally the memory e.g. and may store or reference one or more scripts that include for example a payload of the one or more business transaction messages associated with a set of routing rules. In addition in some embodiments the memory e.g. and may store or reference one or more database tables that include descriptions of one or more business entities being involved in the communication connections on one or more nodes of the on demand computing system or on premise computing system .

Each of the illustrated clients may be any computing device operable to connect to or communicate with at least the on demand computing system and on premise computing systems and or via the network using a wireline or wireless connection. Further each illustrated client typically includes a processor an interface a graphical user interface GUI a client application and a memory. In general each illustrated client comprises an electronic computer device operable to receive transmit process and store any appropriate data associated with the system of .

There may be any number of clients associated with or external to system . For example while illustrated system includes clients alternative implementations of system may include a single client communicably coupled to the on demand computing system or on premise computing system or any other number suitable to the purposes of the system . Additionally there may also be one or more additional clients external to the illustrated portion of system that are capable of interacting with the system via the network . Further the term client and user may be used interchangeably as appropriate without departing from the scope of this disclosure. Moreover while each client is described in terms of being used by a single user this disclosure contemplates that many users may use one computer or that one user may use multiple computers.

As used in this disclosure client is intended to encompass a personal computer touch screen terminal workstation network computer kiosk wireless data port smart phone personal data assistant PDA one or more processors within these or other devices or any other suitable processing device. For example each client may comprise a computer that includes an input device such as a keypad touch screen mouse or other device that can accept user information and an output device that conveys information associated with the operation of the on demand computing system and the on premise computing system and IBC framework or the client itself including digital data visual information the client application or the GUI.

Both the input and output device may include fixed or removable storage media such as a magnetic storage media CD ROM or other suitable media to both receive input from and provide output to users of the clients through the display namely the GUI.

A GUI typically comprises a graphical user interface operable to interface with at least a portion of system for any suitable purpose including generating a visual representation of client application in some instances the client s web browser and the interactions with the IBC framework e.g. and including the responses received from the IBC framework e.g. and received in response to the requests sent by a client application. Generally through the GUI the user is provided with an efficient and user friendly presentation of data provided by or communicated within the system. The term graphical user interface or GUI may be used in the singular or the plural to describe one or more graphical user interfaces and each of the displays of a particular graphical user interface. Therefore a GUI can represent any graphical user interface including but not limited to a web browser touch screen or command line interface CLI that processes information in system and efficiently presents the information results to the user.

In general a GUI may include a plurality of user interface UI elements some or all associated with a client application such as interactive fields pull down lists and buttons operable by the user at a particular client. These and other UI elements may be related to or represent the functions of the client application as well as other software applications executable from a particular illustrated client. For purposes of the present location a GUI may be a part of or the entirety of a client application while also merely a tool for displaying the visual representation of application actions and interactions.

The illustrated example architecture includes an on demand computing system an on premise computing system for company A and another on premise computing system for company B. In the illustrated embodiment each of the computing systems also includes an application layer e.g. and an integration layer e.g. . For example in some embodiments each application and integration layer is part of an IBC framework as described in reference to above. But in alternative embodiments the application layer and integration layer of the on premise computing systems and may be located in a remote cloud based computing system that can be accessed by the on premise computing systems through internet.

The illustrated on demand computing system hosts applications for companies X and Y which have business relationships with companies A and B. Companies X and Y may need to establish communication connections with companies A and B to exchange information with them. Likewise Companies A and B hosted in the on premise computing systems and may need to establish communication connections with companies X and Y for the purpose of exchanging information. In particular as illustrated in company X has business relationships and with vendor companies A and B respectively. Company Y has a business relationship with vendor company A. From the perspective of the on premise computing systems sales organization of company A has business relationships and with business partners X and Y respectively. Sales organization of company B has a business relationship with business partner X.

As illustrated in the business relationships as well as the business entities associated with the business relationships may be identified in the application layer of the distributed computing systems. In order to address the business entities in communicably coupled computing systems IBC and IBCR objects may be generated in the integration layer describing the identified business entities and be used to define communication connections between the business entities. In some embodiments the integration layer may also obtain the IBC objects of other computing systems by looking up them in a public service registry that publishes all the IBC information in the related businesses. As a result communication connections may be established between the IBC and IBCR objects in the integration layers.

The illustrated business entities in the application layer may be mapped to IBC or IBCR objects in the integration layer. The business entities in the application layer are connected with the corresponding IBC or IBCR objects in the integration layer using dashed lines pointing to the IBC or IBCR objects. For example company X with company code 0100 in the application layer can be represented in the integration layer as a first IBC object . The company code may be included in the IBC object for describing the associated business entity. Similarly company Y with company code 0300 in the application layer can be represented in the integration layer as a second IBC object . Since vendor company A identified in the application layer is a business entity located in another computing system the on demand computing system may generate an IBCR object describing the remote business entity in the local system. As such communications directed to the remote business entity can be addressed in the local computing system using the IBCR. Vendor company B in the application layer can be mapped to a corresponding IBCR object in the integration layer in a similar manner. Thus business entities in both local and remote computing systems may be created and stored as IBC or IBCR objects in the integration layer. In addition the on demand computing system may publish the local IBC objects describing business entities in the local system to a registry that is exposed to a variety of applications such that the IBC objects describing the local business entities may be accessed by other remote computing systems.

As illustrated in the IBC objects in the on demand computing system describing local business entities may be referenced at a remote computing system such as the on premise computing systems and as an IBCR object. For example IBC object is referenced as corresponding IBCR object in the on premise computing system for company A and IBCR object in the on premise computing system for company B. The IBC object in the local system is connected with the corresponding IBCR object in the remote system using dashed lines. It can also be seen that the IBC object describing local business entity company Y is referenced as IBCR object in the on premise computing system for company A. Thus for each IBC object describing a local business entity one or more corresponding IBCR objects may exist in remote computing systems describing the same business entity.

The on premise computing system for company A and computing system for company B may create and store their own IBC and IBCR objects in a similar manner as the described on demand computing system . For example IBC object may be created in the integration layer of the computing system describing the local business entity e.g. sales organization . Remote business entities e.g. business partners identified in the application layer may be created as IBCR objects in the integration layer . Further the IBC object describing the local business entity in the computing system may be referenced as an IBCR object in the on demand computing system . Likewise IBC object may be created in the integration layer of the computing system describing the local business entity e.g. sales organization . Remote business entities e.g. business partner identified in the application layer may be created as IBCR object in the integration layer . Further the IBC object describing the local business entity in the computing system may be referenced as an IBCR object in the on demand computing system . The on premise computing systems may also publish the IBC objects created in the integration layer describing the local business entities to a registry such that the IBC objects may be accessed and used by other computing systems.

With the IBC and IBCR objects created in the integration layer it is possible to establish communication connections addressing the business entities in the different computing systems. For example a communication connection between IBC object in the on demand computing system and IBC object in the on premise computing system for company A may be set up using the IBC and IBCR objects resulting from the business relationship between company X and vendor company A in the application layer of the on demand computing system as well as the business relationship between sales organization and business partner in the application layer of the on premise computing system . Further the logical port of the connection may be created using the IBC and IBCR information at the computing system initiating the connection.

Similarly a communication connection between IBC object in the on demand computing system and IBC object in the on premise computing system for company A may be established resulting from the business relationship between company X and vendor company A in the application layer of the on demand computing system as well as the business relationship between sales organization and business partner in the application layer of the on premise computing system .

The on premise computing system for company B may also establish a communication connection with the on demand system defining the connection between IBC object in the computing system and IBC object in the computing system as a result of the business relationship between company X and vendor company B in the application layer of the on demand computing system as well as the business relationship between sales organization and business partner in the application layer of the on premise computing system .

The communication connection may be initiated by either of the on demand or on premise computing systems based on the IBC or IBCR information that is used in a common way for all the applications running on the integration layer. Utilizing the IBC framework business entities in the remote computing systems are now visible in the local computing system and can be addressed regardless of the systems at which the remote business entities are actually located.

The illustrated example IBC object may include various business data attributes associated with the business entity. For example the IBC object also includes a description field providing a short description of the IBC object. The description field may include name of the business entity location of the business entity and or a code associated with the business entity in the computing system. The IBC object may also include a field for receiver type describing the type of the receiver associated with the IBC object and a field for receiver name. Further the IBC object may include a field for the class name specifying the class of the IBC object. The duration that the IBC object is valid for may also be included in the IBC object illustrated in and .

The information of ID description receiver type receive name class name and validity associated with the IBC object may be presented as portion of the general data section in the IBC object presented to the user interface. Other information such as application component may be included in the general data section as well. In some embodiments the presented general data associated with the IBC object may be generated by the computing system and may not be editable by the user.

Furthermore the illustrated example IBC object may include descriptions for describing the business entity associated with the IBC object in more details. The descriptions may be described in multiple different languages to provide descriptions for users in different countries. The illustrated IBC object also includes business contact details of the business entity associated with the IBC object e.g. name telephone numbers and mail addresses. Technical contact details of the IBC object may also be provided for technical maintenance and update with the particular IBC object. In some embodiments the description business contact details and technical contact details may be modified or updated by the user through the user interface.

Additionally the illustrated example IBC object includes administrative data such as IBC uniform resource locators URLs and notes for the IBC object. Specifically the IBC URLs may include an internet address where an extensible markup language XML file for the presented business data attributes associated with the IBC object can be found. One or more URLs may be provided in the IBC URLs although they point to the same XML file. An example XML file associated with the illustrated IBC object is presented below in Table 1. Moreover additional details related to the IBC object and the associated business entity such as additional administrative information additional technical information may be included in a notes section of the presented IBC object. These additional details may be input by a user through the user interface.

The illustrated IBC object is merely for illustration purpose and should not be limiting on the construction of IBC objects. Other business data attributes related to the associated business entity may be included in the IBC object. The IBC object is flexible enough to store any kind of business entity and carry any type of helpful information describing the business entity to the user of the business application.

The illustrated example IBCR object may include various business data attributes associated with the business entity located in a remote computing system. For example the IBCR object also includes a description field providing a short description of the business entity associated with the IBCR object. The description field may include name of the business entity location of the business entity and or a code associated with the business entity in the computing system. The IBCR object may also include a field for receiver type describing the type of the receiver associated with the IBCR object and a field for receiver name. Further the IBCR object may include a field for the receiver system specifying the remote system where the business entity associated with the IBCR object is located at. The duration that the IBCR object is valid for may also be included in the IBCR object illustrated in and . The information of ID description receiver type receive name class name and validity associated with the IBC object may be presented as portion of the general data section in the IBCR object presented to the user interface.

Other information such as application component may be included in the general data section as well. The contents of the general data section in the IBCR object except the field of receiver system may be substantially identical to the contents in the corresponding IBC object of the computing system where the associated business entity resides. In some embodiments the presented general data associated with the IBCR object may be copied from the corresponding IBC object describing the same business entity.

The illustrated IBCR object further includes a usage section describing the usage of the IBCR object in the local computing system. For example the usage section may include the receiver type receiver name class name application component describing how the IBCR object is used in the local computing system. Additionally an assignment section may be included in the IBCR object assigning the system for the business entity associated with the IBCR object such that a physical connection may be established with the business entity located in another computing system.

Furthermore the illustrated example IBCR object may include descriptions for describing the business entity associated with the IBCR object in more details. The descriptions may be described in multiple different languages to provide descriptions for users in different countries. The illustrated IBCR object also includes business contact details of the business entity associated with the IBCR object e.g. name telephone numbers and mail addresses. Technical contact details of the IBC object may also be provided for technical maintenance and update with the particular IBC object. In some embodiments the description business contact details and technical contact details of the IBCR object may be copied from the contents of the corresponding IBC object describing the same business entity.

Additionally the illustrated example IBCR object includes administrative data such as the IBCR notes and the IBC notes . IBCR notes may include additional administrative information regarding the IBCR object. The IBCR notes may be input by a user through the user interface. Additional details related to the corresponding IBC object and the associated business entity such as additional administrative information additional technical information may be included in a notes section of the presented IBCR object. In some embodiments the IBC notes may be copied from the contents of the corresponding IBC object associated with the same business entity.

The illustrated example IBCR object may be generated from an XML file defining the unique ID and the business data attributes associated with the business entity. In some embodiments some portion of the XML file may be copied from the original XML file defining the corresponding IBC object. An example XML file associated with the illustrated IBCR object is presented below in Table 2.

As illustrated in the business context definition includes a structure associated with the defined component and a short description describing the usage or purpose of the business context definition. In the specification of components the component name type category and component type are included to describe the product group component which is used for the users to configure the routing rules. Other descriptions with respect to the product group component may also be included such as data type length short description etc.

Although only illustrates the business context definition of a product group other types of business context such as company location business revenue years of business relationship can be defined in a similar manner for the purpose of configuring routing rules. After the business context for a group of routing components are defined the user may select one or more components in the defined business context and configure appropriate values to determine a desired logical receiver.

In some embodiments a logical receiver determination can provide business information about services. For example legal requirements specific to a country. Having the IBC and IBCR objects describing business entities inside and outside of the local system logical receiver determination can be enhanced using the IBC framework. With IBCR objects describing business entities located in provider systems e.g. remote computing systems the business entities in provider systems can be directly addressed based on the routing rules no longer the technical provider systems. In other words the logical receiver determination uses routing rules to decide which business entity to send a call to.

As illustrated in service groups are maintained for logical receiver determination. The service groups include service interfaces for services associated with the client application. The service groups represent the provide systems from a consumer e.g. a client point of view. The logical receiver determination may use the service groups to decide what consumer proxies are needed to communicate with a provider system. A service group for the IBCR based addressing or IBCR objects may be included to allow the logical receiver determination based on the IBC framework. The service groups may include one or more service groups and may be edited by a user of the logical receiver determination. For each service group a description routing status and routing description may be provided for more information about the service group.

As a result of the logical receiver determination a list of business entities in compliance with the routing rules are determined and displayed to the user. The IBC objects in the provider system and are returned to describe the business entities in providing systems in compliance of the routing rules configured by the user. The provider IBC reference and point to business entities in the provide systems that satisfy the routing rules. Certain business data attributes associated with the business entities may also be displayed to the user. For example product groups for each IBC reference may be included in association with the IBC reference. It can be seen from that a product group of hardware is associated with provider IBC reference and product groups of books and software are associated with provider IBC reference . As such the business entity with IBC reference is the provider of the hardware purchases and the business entity with IBC reference is the provider of books and software purchases according to the logical receiver determination.

Based on the routing rules configured by the user different provider IBC references may be returned presenting different business entities that satisfy the routing rules. Communication connections with the business entities in the provider systems associated with the IBC references may be subsequently established for business transactions or information exchange. Therefore using the IBC framework business entities in remote computing systems can be found and addressed in a direct manner without having to inquire the remote computing system for the business entities first in order to initiate a communication connection.

In step the IBC may be received from the application for storage in a repository communicably coupled to the application. In some embodiments the IBC may be received from the application layer to an integration layer communicably coupled to the application layer. Further the name and type of the business entity associated with the IBC may be received from the application layer. In some embodiments the integration layer may assign the globally unique identifier to the IBC. The unique identifier may contain a string of numbers letters symbols or a combination of them. The unique identifier and the variety of business data attributes associated with the business entity may be defined in an XML data object. In some embodiments the IBC includes one or more URLs that point to an internet address where the XML data object can be found.

In step a communication connection may be defined between business entities located at different computing systems. For example a communication connection may be defined between a sales department of a company and its business partner. The communication connection may be defined by an on demand computing system an on premise computing system or a client. The communication connection may include a communication protocol defined by one of web service protocol a representational state transfer REST protocol an iTalk communication protocol a hypertext transfer protocol HTTP a hypertext transfer protocol secure HTTPS a simple mail transfer protocol SMTP or a fast common gateway interface FastCGI protocol.

In step the IBC describing one of the business entities involved in the communication connection is associated with the defined communication connection. Thus when the communication connection needs to be established the IBC describing one of the business entities may be used. In some embodiments the communication connection and its associated IBC may be stored at the integration layer of the computing system for quick retrieval when the connection needs to be established.

In step the IBC including the unique identifier and at least a portion of the business data attributes and the defined communication connection are published to a registry that is exposed to a number of applications. In particular the IBC unique identifier the name of the business entity associated with the IBC the type of the business entity associated with the IBC along with the defined communication connection may be published to the registry. The registry may be accessible to applications at different computing systems. In some embodiments the registry may publish the XML data object associated with the IBC. The XML data object may be stored in the internet and the registry may publish the URL for the XML data object.

In some implementations the IBC may need to be modified or updated to reflect changes of business data attributes associated with the business entity. The integration layer may receive a request to modify the IBC. The integration layer would then verify the request with the application through the application layer to confirm the modification. Unless the application confirms the modification the IBC would not be modified. When the request is verified by the application the IBC may be modified based on the verification of the request. The verification with the application is to ensure that the IBC modification request is authorized and the IBC would not be manipulated by an external party. Conversely the application may detect changes of business data attributes associated with the business entity. In this case the application may notify the changes of business data attributes associated with the business entity to the integration layer. Accordingly the integration layer may modify the IBC associated with the business entity based on the updated business data attributes.

After the IBC is modified the updated IBC may be published to the registry replacing the out dated IBC such that the updated IBC may be used in other computing systems. In some embodiments the registry may send a message to the related computing systems notifying them that the updated IBC is available. The registry may also send a copy of the updated XML file defining the updated IBC to the computing systems that have request this service.

In step a communication connection between a local business entity and the IBC referenced remote business entity may be identified based on the identification of the IBC. For example a communication connection may be identified between a sales department of a company in the local computing system and its business partner hosted by a remote computing system. The communication connection may be defined by an on demand computing system an on premise computing system or a client. The communication connection may include a communication protocol defined by one of web service protocol a representational state transfer REST protocol an iTalk communication protocol a hypertext transfer protocol HTTP a hypertext transfer protocol secure HTTPS a simple mail transfer protocol SMTP or a fast common gateway interface FastCGI protocol.

In step an IBCR associated with the communication connection may be generated for storage on the local computing system. The IBCR may be generated in an integration layer communicably couple to the application layer in the local computing system. The IBCR contains the same unique identifier as in the IBC and a variety of business data attributes associated with the remote business entity. The unique identifier may be associated to the IBCR through the integration layer of the local computing system.

The business data attributes contained in the IBCR may include distinct elements from the business data attributes contained in the IBC. For example the IBCR may include usage of the remote business entity in the local computing system which may not be described in the business data attributes contained in the IBC. For another example the IBCR may include receiver system assignment of the remote business entity such that a technical connection may be established which may not necessarily exist in the IBC. In some embodiments the business data attributes in the IBCR may include a different type of the remote business entity compared with the type of the business entity included in the IBC.

In some embodiments the unique identifier and the business data attributes associated with the remote business entity may be received from a user through the application. The IBCR may then be generated based on receipt of the unique identifier and the business data attributes associated with the remote business entity. The IBCR may be generated by the integration layer of the local computing system describing the remote business entity.

In some embodiments the integration layer of local computing system may identify an existing IBCR associated with the IBC. The integration layer may copy the existing IBCR and generate the IBCR associated with the remote business entity based on the existing IBCR. For example the integration layer may modify certain business data attributes or the unique identifier of the existing IBCR and keep the remaining part of the existing IBCR for generating the IBCR associated with the remote business entity.

In some embodiments the integration layer of local computing system may identify a registry that stores the unique identifier and a link to the IBC. The integration layer may generate the IBCR based on the unique identifier and the link to the IBC stored in the registry. In some embodiments the integration layer of the local computing system may have access to the XML data object defining the unique identifier and the business data attributes of the IBC. The integration layer may copy the XML data object of the IBC and generate the IBCR based on the copied XML data object. For example the integration layer may add usage assignment or administrative information of the remote business entity in the copied XML data object to generate the IBCR.

In step the generated IBCR may be stored in a repository communicably coupled to the application. The repository may include a database for IBC or IBCRs relevant to the local computing system. When an updated copy of the IBCR becomes available in the integration layer the updated IBCR may be stored in the repository in replace of the outdated IBCR such that the most recent copy of the IBCR associated with the remote business entity may be retrieved from the repository.

In step a request for a business transaction may be received through an application of the local computing system. The business transaction may be a sales order a purchase order a shipping order or any other transaction that involves a remote business entity hosted by a remote business entity computing system. The request for the business transaction may be initiated by a local business entity hosted by the local computing system such as a sales department a product department a customer relationship department etc.

In step an IBCR associated with a remote business entity hosted by a remote business entity computing system may be determined based on the identified routing rules. The IBCR may include a unique identifier and a variety of business data attributes associated with the remote business entity. The unique identifier and the variety of business data attributes associated with the IBCR may be defined in an XML data object. The IBCR may be determined from a group of IBCRs each having a unique identifier and associated with a remote business entity computing system. In some embodiments the local computing system may compare the routing rules to each IBCR associated with a corresponding remote business entity computing system. The local computing system may determine a particular IBCR associated with a particular remote business entity computing system based on the comparison. As a result the local computing system may identify the particular IBCR associated with the particular remote computing system to a user through the application.

In step a communication connection associated with the IBCR and an IBC associated with a local business entity hosted by the local computing system may be determined. For example a communication connection may be determined between a business partner hosted by a remote computing system and a sales department of a company in the local computing system. The communication connection may include a communication protocol defined by one of web service protocol a representational state transfer REST protocol an iTalk communication protocol a hypertext transfer protocol HTTP a hypertext transfer protocol secure HTTPS a simple mail transfer protocol SMTP or a fast common gateway interface FastCGI protocol.

Further a logical port of the remote business entity computing system may be identified based on the IBCR. The logical port specifies the target entity of the communication connection and may be used to establish connections with the remote business entity associated with the IBCR. In some embodiments the identified logical port associated with the IBCR may be stored and persisted for future communication connections involving the IBCR.

In step the business transaction between the local computing system and the remote computing system may be initiated through the determined communication connection. At runtime of establishing the communication connection for the business transaction the recipient computing system may identify the source IBC describing the local business entity the business connection with the local business entity and the target IBC describing the remote business entity hosted by the remote computing system. Authentication may be conducted at the recipient computing system based on the source IBC the business connection and the target IBC. For example the recipient computing system can verify that the business transaction is initiated by the business entity described by the source IBC. Once the business entity initiating the transaction is authenticated the recipient computing system may notify the application that this transaction is secure and then the application layer would proceed with the transaction knowing that the transaction is secure. At this point the information of the business entities involved in the communication is not necessary to be included in the payload message as the connection is established and authenticated.

In addition since the communication connection is established on a business level between two or more business entities when the technical infrastructure associated with the business entities changes the communication connection is still valid as only the technical entities at a level below change. One would only need to update the technical assignments or configuration with the IBCs or IBCRs associated with the business entities in this case. The logical communication connections defined by the IBCs or IBCRs remain to be the same. As such with the IBC framework change of technical infrastructures requires minimal effort to update the communication connections and becomes much easier to be dealt with.

A number of implementations have been described. Nevertheless it will be understood that various modifications can be made. For example other methods described herein besides those or in addition to those illustrated in can be performed. Further the illustrated steps of methods and can be performed in different orders either concurrently or serially. Further steps can be performed in addition to those illustrated in methods and and some steps illustrated in methods and can be omitted without deviating from the present disclosure. Accordingly other implementations are within the scope of the following claims.

