---

title: Distributed file system at network switch
abstract: Embodiments herein relate to running a distributed file system on a network switch. The distributed file system is to manage access to a plurality of storage drives that store data and are connected to the network switch.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09075820&OS=09075820&RS=09075820
owner: Hewlett-Packard Development Company, L.P.
number: 09075820
owner_city: Houston
owner_country: US
publication_date: 20120730
---
With the advent of cloud computing service providers face increasing storage needs to store information such as text pictures videos music emails services PC backup services etc. Further service providers require data resiliency and fast access on a continuously larger scale as the cloud grows. Service providers may add file servers such as commodity or NetApp servers with multiple hard drives to increase storage capacity while maintaining sufficient redundancy to reach the desired level of availability and integrity.

Typically clouds that use many file servers for storage e.g. storage farms require truly distributed file systems that abstract file locations and volumes presenting a single hierarchical name space with virtually unlimited capacity to applications. A server side of the distributed file systems is generally stored and executed at the file servers.

Specific details are given in the following description to provide a thorough understanding of embodiments. However it will be understood by one of ordinary skill in the art that embodiments may be practiced without these specific details. For example systems may be shown in block diagrams in order not to obscure embodiments in unnecessary detail. In other instances well known processes structures and techniques may be shown without unnecessary detail in order to avoid obscuring embodiments.

Service providers such as web or cloud companies often store data in large storage networks. These storage networks usually employ file servers such as commodity servers to store the data. Commodity servers may be entry level or affordable servers employed for basic tasks such as file serving and cloud computing. Thus in addition to having storage drives commodity servers may also include a power supply and a processor for running software such as a Windows based or Linux operating system as well as a distributed file system.

The distributed file system may abstract volume file locations from a plurality of file servers by presenting a single hierarchical name space to an application. Further the distributed file system may seamlessly accommodate for an increase in capacity without disruption to applications maintain a balanced distribution of files across all file servers to avoid access bottlenecks and implement both data and metadata redundancy to avoid permanent losses and further distribute the load.

A cost of a commodity server for example that implements a distributed file system and include 8 terabytes TB of capacity may be 2000 to 3000. The service provider may initially buy thousands of such commodity servers and then continue to buy additional such commodity servers in the future as storage needs increase. Thus any reduction in costs that can be achieved per unit of storage capacity such as per file server may become significant.

Embodiments herein relate to operating a distributed file system at a network switch instead of at a file server. For example the network switch may include a server interface a drive interface and a file module. The server interface is to interface with an application server that is to store an application. The drive interface is to interface with a storage drive that is to store data. The file module is to interface with the server and drive interface. Further the file module includes a distributed file system to manage access to the storage drive via the server interface. Thus embodiments may replace commodity servers with lower cost storage drives while employing a slightly more costly network switch that performs file services in addition to its traditional duties which may result in relatively great storage cost reductions.

For example typical network switches that support up to 48 1 Gb s Ethernet ports may include a single core CPU and a relatively small amount of RAM. In one embodiment in order to have the network switch run a server side of a distributed file system the network switch may include additional processing power and RAM. For instance the network switch may include a processor such as a relatively inexpensive multi core ARM processor and a relatively inexpensive amount of RAM such as 2 to 4 gigabytes GB . As a result the storage drives connecting to the network switch may be simple low power storage devices such as 2 terabyte TB hard or solid state drive that consumes less than 20 Watts. Thus embodiments may allow for overall lower power consumption and less heat being generated which may also lower cooling costs.

Further an embodiment of the network switch may include an Ethernet port for supporting data as well as power e.g. Power over Ethernet PoE to the storage drives. By directly powering the storage drives the network switch may further reduce costs by removing a need for a power supply at the storage drives. In addition an Ethernet connection to the storage devices may allow for higher data transfer speeds compared to traditional ATA connections. In another embodiment the network switch may include a hypervisor to run a plurality of operating systems such as Linux in parallel with a non Linux system in order to interface with devices having different operating systems.

In embodiments by moving the distributed file system to the network switch and thereby removing a need for an off board processor and or a power supply at the storage devices the smaller storage devices may occupy less space consume less power cost less and generate less heat than traditional file servers such as commodity servers. For example embodiments may reduce storage costs by replacing traditional systems having single core network switches and commodity servers that cost 2000 to 3000 with low cost multi core switches and storage drives costing less than 500.

Referring now to the drawings is an example block diagram of a network switch . The network switch may be any type of device to connect network segments or network devices. For example the term network switch may also include computer networking devices such as a hub router bridge gateway multilayer switch and the like.

In the embodiment of the network switch includes a server interface a file module and a drive interface . The server interface file module and drive interface may include for example a hardware device including electronic circuitry for implementing the functionality described below such as control logic and or memory. In addition or as an alternative the resource and interface modules and may be implemented as a series of instructions encoded on a machine readable storage medium and executable by a processor.

The server and drive interfaces and may include mechanical electrical and or logical signals and a protocol for sequencing the signals. The server interface is to interface such as via a LAN or WAN connection with an application server not shown that is to store an application. The drive interface is to interface such as via an Ethernet connection with a storage drive not shown that is to store data such as user data and file system metadata. For example the server interface may include a port not shown to connect to the application server and the drive interface may include one or more ports not shown to connect with one or more storage drives. The application server and storage drive will be explained in greater detail with respect to .

The file module is to interface with the server and drive interfaces and . Further the file module includes a distributed file system to manage access to the storage drive via the server interface . The distributed file system may be any type of file system that allows access to files from multiple hosts sharing via a computer network. Thus multiple users on multiple machines may share files and storage resources. Examples of the distributed file system may include Amazon S3 S3 Google GFS GFS Apache Hadoop HADOOP and Maxiscale Flex FLEX .

When the distributed file system is implemented the users or clients may not have direct access to the underlying block storage but may interact over the network using a protocol such as NFS 9P CIFS and the like. For example the users may interact with the application server to request access to data which may then send an NFS request to the network switch . The distributed file system at the network switch along with any related systems such as an operating system OS a Network File System NFS client a Virtual File Systems VFS may then translate the NFS request to local file system APIs in order to access the requested data from the storage drive.

Thus the distributed file system may control access to one or more files depending on access lists or capabilities of the application server and or clients depending on how the protocol is designed. For example as shown above users or clients may access the distributed file system at the network switch via one or more application servers using an NFS protocol and the hosts may be one or more storage drives connected to the network switch .

In the embodiment of the network switch includes a server interface a file module a drive interface a processor and a memory . The network switch further connects to an application server and a plurality of storage devices to . The server interface file module and drive interface of may at least respectively include the functionality and or hardware of the server interface file module and drive interface of .

As shown in the network switch is to communicate and connect directly with the application server and to communicate and connect directly with the storage drives to . Further the network switch may power at least one of the storage drives to via the drive interface. For example a network cable such as an Ethernet cable may connect a port not shown of the network switch to a port not shown of one of the storage drives to . When the Ethernet cable is used the one of the storage drives to may be referred to as the Powered Device PD the network switch may be referred to as the Power Sourcing Equipment PSE and an overall scheme for providing the power from the network switch to at least one of the storage drives to may be referred to as Power over Ethernet PoE with a PoE module of the drive interface including circuitry and or protocols for providing the power. In one example the network switch may include 48 ports not shown and thus be able to support up to 48 storage drives .

For example the drive interface and the storage drives to may include Ethernet ports with the drive interface to provide the power to and to communicate with the storage drives to via the Ethernet ports. Further the drive interface may communicate with the storage drives to using an ATA over Ethernet AoE protocol and is to provide power to the storage drive via a PoE controller not shown included in the PoE module . However embodiments are not limited to Ethernet cables and may include various other types of network cables for providing power and or data to the storage drives to 

As the distributed file system and power source may be centralized at the network switch the storage drives to may not need their own power supply or an off board processor. As a result the storage drives to may provide substantial cost savings and require less space compared to traditional file servers. Further a cost of the network switch or that includes the distributed file system or may only be slightly greater than a cost of a traditional network switch. Thus overall costs may be greatly reduced without a sacrifice in overall performance.

While the network switch may have a capability to power all the connected storage drives to the network switch may not power inactive storage drives . For example some of the storage drives may be allocated as spare drives that are powered down and not powered up and activated until the distributed file system requires additional capacity and or to replace faulty storage drives . However other embodiments of the network switch may also altogether lack a capability to power the storage drives to 

The file module is shown to include a hypervisor to host an operating system OS 227. Example OSs may include Windows Linux GHS Integrity and the like. The hypervisor may concurrently host a plurality of OSs where the one or more OSs may be virtual machines that are managed by the hypervisor . The hypervisor may include any type of hardware virtualization technique that allows multiple OSs to run concurrently as guests on a host device such as the network switch or the hypervisor could be an OS itself. A functionality of the hypervisor may be flexible and determined according to a user s or manufacturer s specification. For example the hypervisor may launch and monitor the OS and or other OSs not shown such as via a process of the hypervisor .

In this instance the OS is shown to run the distributed file system . However embodiments are not limited thereto. For example in one embodiment the hypervisor may instead directly run the distributed file system concurrently with the OS . Moreover embodiments may include the hypervisor hosting a plurality of OSs with each of the OSs running a separate distributed file system. While shows the file module to include the hypervisor embodiments may exclude the hypervisor altogether such as if file module only includes a single operating system.

The network switch is to connect to the plurality of storage drives to and the distributed file system is to manage access to the plurality of storage drives to via the drive interface . The distributed file system is to store retrieve and update the data and to manage available space on the storage drives to . The network switch is to present at least a portion of a single hierarchical name space to the application of the application server . For example in a network employing a plurality of network switches a single network switch may only contribute a portion of the name space mapped to the storage drives that the network switch controls. In turn the plurality of the network switches running the distributed file system may provide in aggregate the entire name space. On the other hand if the network only employs a single network switch the single network switch may provide the entire name space.

The application server is to execute a client side of the distributed file system not shown to access the data at the storage drives to and the network switch is to execute a server side of the distributed file system . Further the application server may perform access validation and run the services invoked by the user. For example the application server may be a server that provides services such as security data services transaction support load balancing management of large distributed systems a file application programming interface API a virtual file system VFS etc.

The application server may provide the services to one or more users accessing the application server . While shows the application server to include a single application the application server may include a plurality of applications. Moreover while shows a single application server embodiments may include a plurality of application servers connecting to the network switch .

The plurality of storage devices to where n is a natural number may be may be any electronic magnetic optical or other physical storage device that contains or stores data such as user data file system metadata application server data and the like. For example the plurality of storage devices to may be any combination of hard disk drives solid state drives SATA drives and the like.

The storage drives to may include a hard drive controller board having an Application specific integrated circuit ASIC not shown to terminate the AoE protocol as well as a PoE module not shown to separate a power component from the data component of the Ethernet connection. In one embodiment at least one of the storage drives may use approximately 25 Watts W to start up and approximately 10 W thereafter. Further should any of the storage drives require more power than that available from a single port of the network switch the storage drive may connect to more than one port of the network switch .

The processor may be at least one central processing unit CPU at least one semiconductor based microprocessor or other hardware devices suitable for retrieval and execution of instructions. For example the processor may be a multi core processor to fetch decode and execute instructions related to the hypervisor the OS and or the distributed file system .

The memory may be any electronic magnetic optical or other physical storage device that contains or stores executable instructions. Thus the machine readable storage medium may be for example Random Access Memory RAM an Electrically Erasable Programmable Read Only Memory EEPROM a storage drive a Compact Disc Read Only Memory CD ROM and the like. For example the memory may store executable code and or data related to the hypervisor the distributed file system the OS metadata or application data of the application server and the like. While not shown the network switch may also include software firmware and or hardware related to a socket socket APIs the Ethernet protocol file APIs a virtual file system VFS a local file system a SATA driver the AoE protocol the PoE protocol and the like.

The processor may be at least one central processing unit CPU at least one semiconductor based microprocessor or other hardware devices suitable for retrieval and execution of instructions stored in the machine readable storage medium or combinations thereof. The processor may fetch decode and execute instructions and to implement for executing a distributed file system at a network switch. As an alternative or in addition to retrieving and executing instructions the processor may include at least one integrated circuit IC other control logic other electronic circuits or combinations thereof that include a number of electronic components for performing the functionality of instructions and .

The machine readable storage medium may be any electronic magnetic optical or other physical storage device that contains or stores executable instructions. Thus the machine readable storage medium may be for example Random Access Memory RAM flash static memory an Electrically Erasable Programmable Read Only Memory EEPROM a storage drive a Compact Disc Read Only Memory CD ROM and the like. As such the machine readable storage medium can be non transitory. As described in detail below machine readable storage medium may be encoded with a series of executable instructions for executing a distributed file system at a network switch.

Moreover the instructions and when executed by a processor e.g. via one processing element or multiple processing elements of the processor can cause the processor to perform processes such as the process of . For example the execute instructions may be executed by the processor to execute a distributed file system at the network switch the distributed file system to manage access to a plurality of storage drives not shown storing data and connected to the network switch. The communicate instructions may be executed by the processor to communicate with an application server not shown connected to the network switch the distributed file system to control access between the data at the plurality of storage drives and the application server based on an access request received from the application server at the network switch.

The machine readable storage medium may also include instructions not shown to provide power to at least one of the plurality of storage drives via a port not shown of the network switch the network switch to communicate directly with the at least one storage drive via the port.

At block the network switch runs a distributed file system to manage access to a plurality of storage drives connected to the network switch . The plurality of storage drives are to store data such as user data and file system metadata. Next at block the network switch allows access to at least one of the plurality of storage drives based on a request received by the distributed file system from an application server to at least one of read from and write to the at least one of the plurality of storage drives. The network switch is to communicate directly with a plurality of storage drives. The application server is to execute a client side of the distributed file system and the network switch is to execute a server side of the distributed file system .

At block the network switch runs a distributed file system to manage access to a plurality of storage drives to connected to the network switch . The plurality of storage drives to are to store data such as user data and file system metadata. Next at block the network switch allows access to at least one of the plurality of storage drives to based on a request received by the distributed file system from an application server to at least one of read from and write to the at least one of the plurality of storage drives to 

At block the network switch provides power to at least one of the plurality of storage drives to via a drive interface of the network switch . The drive interface is to connect the network switch directly to the at least one storage drive to . The network switch is to communicate directly with the plurality of storage drives to . The application server is to execute a client side of the distributed file system and the network switch is to execute a server side of the distributed file system .

According to the foregoing embodiments may provide a method and or device for running a distributed file system on a network switch. By moving the distributed file system to the network switch and thereby removing a need for an off board processor and or a power supply at the storage devices the smaller storage devices may occupy less space consume less power cost less and generate less heat than traditional file servers such as commodity servers.

