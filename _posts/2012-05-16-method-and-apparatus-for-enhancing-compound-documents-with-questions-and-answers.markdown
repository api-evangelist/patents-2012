---

title: Method and apparatus for enhancing compound documents with questions and answers
abstract: A server system runs a bot service that registers an FAQ (frequently asked questions) for a document having an embedded object. The FAQ includes one or more question-and-answer (Q&A) pairs. The bot service receives, from each electronics device that renders a copy of the document, a request from the embedded object for the FAQ registered for the document, and transmits the FAQ to each electronic device from which a request is received. Each electronics device displays the FAQ, including the one or more Q&A pairs, within its rendered copy of the document. Any viewer of a copy of the document with the embedded object can submit a question to the bot service through the embedded object. The bot service uses a messaging service to obtain an answer to the question from an author. The FAQs displayed at the electronics devices are updated to include the new Q&A pair.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08468203&OS=08468203&RS=08468203
owner: International Business Machines Corporation
number: 08468203
owner_city: Armonk
owner_country: US
publication_date: 20120516
---
This application is a continuation application claiming priority to and the benefit of co pending U.S. patent application Ser. No. 12 636 909 filed Dec. 14 2009 titled Method and Apparatus for Enhancing Compound Documents with Questions and Answers the entirety of which U.S. patent application is incorporated by reference herein.

The invention relates generally to computing systems. More specifically the invention relates to methods and apparatus for enhancing compound documents with questions and answers.

People live today in a social networking world full of information. Their daily lives and livelihood are closely connected with the Internet. They read online documents watch streaming movies and listen to online music. Online they spend time to socialize with friends share photos and information entertain and be entertained acquire knowledge and find solutions. Forums and news group serve as vital channels through which people can ask and answer questions and share information.

In addition instant messaging IM provides a convenient interactive mechanism by which people can interact communicate and collaborate with one another. If a person wants to ask a question while reading a document or playing media he can open an IM session and ask one or more of his buddies from his standard buddy list . However a buddy is often not the most knowledgeable person or expert to answer the question. Thus if the person cannot get a satisfying answer through IM he has to try other channels such as visiting the document s web site in search of an FAQ Frequently Asked Questions . But if no FAQ is found or if his particular question is not addressed he has to go further and post his question on a forum or news group. Answers through such avenues however do not come instantly even for a simple question. Industry has devised technology to integrate document collaboration with instant messaging conversation and thereby improved the usability for some degree but such technology is still limited to buddies who may not be the appropriate persons to answer the questions.

In one aspect the invention features a method for inserting collaborative communications into a displayed document. A document with an embedded object is rendered. The embedded object sends in response to the rendering of the document a request to a bot service executing on a server system. A list of question and answer Q A pairs associated with the document is received from the bot service in response to the request. The received list of Q A pairs is displayed in the rendered document. A question is submitted to the bot service through the object embedded in the document.

In another aspect the invention features a method for inserting collaborative content in a document distributed to one or more viewers. An FAQ is registered for a document having an embedded object. The FAQ includes one or more Q A pairs associated with the document. A request is received from the embedded object from at least one electronics device rendering a copy of the document having the object embedded therein to acquire the FAQ that is registered for the document. The FAQ that includes the one or more Q A pairs associated with the document is transmitted to each electronics device from which a request is received. A question is received from the object embedded in the copy of the document rendered on a given electronics device.

In another aspect the invention features a collaborative communication system comprising a server system running a bot service that registers an FAQ for a document having an embedded object. The FAQ includes one or more Q A pairs associated with the document. The bot service receives from each electronics device that renders a copy of the document a request from the embedded object for the FAQ registered for the document. The bot service transmits the FAQ that includes the one or more Q A pairs associated with the document to each electronic device from which a request is received. The bot service receives a question from the object embedded in the copy of the document rendered on a given one of the electronics devices.

Compound documents generally are organized collections of different types of objects that embody data for example formatted text tables drawings images slides audio video and graphs. When rendered in a framework a compound document produces a single integrated visual environment. Each object embedded in a compound document may be stored separately and remotely from that document and offer various interfaces that provide editing and displaying capabilities. Each specific document format e.g. a Microsoft WORD document a Microsoft Excel spreadsheet a Microsoft PowerPoint presentation has it s own unique framework for embedding objects which includes an API application program interface for interacting with the object s executable code or script engine.

As described herein a compound document can have an embedded object that when rendered communicates with a bot running on a networked server to acquire an FAQ associated with the document. A bot as defined herein is a software application that runs automated tasks over a network such as the Internet. Bots are useful in performing simple and structurally repetitive tasks. In instant messaging systems for example a virtual chat partner can use a bot to respond to queries with relevant content.

Upon receiving the FAQ which includes zero one or more Q A pairs an embedded object automatically displays the FAQ within the document. Accordingly when a viewer opens a copy of a document on her computer and renders the embedded object the subsequent communications between the embedded object and the bot results in the appearance of the associated FAQ within the document. The viewer can then immediately see those answered questions that have been posed by other viewers about the information in the document.

In addition through the embedded object a viewer of the document can submit a question to an author who is typically an expert regarding the subject matter in the documents. The bot running on the networked server referred to hereafter as an Ask the Author ATA bot receives the question identifies one or more authors who are available to answer the question and attempts to solicit an answer from such authors. In one embodiment the ATA bot is co resident with an instant messaging service and prompts the IM service to send the question to and receive an answer from an appropriate author through instant messaging. After receiving an answer from an author the ATA bot associates the new Q A pair with the document in the database and sends the new Q A pair to the embedded object where it becomes a part of the document. Other viewers subsequently rendering their copy of the document on their electronics devices or computing machines also see this new Q A pair.

This process of question and answer bypasses the aforementioned steps typically employed by persons who want their questions answered while reading a document. Moreover the process enhances the content of the document for other current and future viewers provided such viewers have connectivity to the ATA bot because the questions and answers become part of the document by virtue of subsequent renderings of the document with the embedded object.

The server system hosts an ATA bot service that is in communication with a database . The database contains configuration rules and Q A pairs for each FAQ registered for a compound document. An identifier herein called RDFAQID uniquely identifies each particular registered FAQ. In the example shown the database stores two FAQs identified as RDFAQID and RDFAQID each including at least one Q A pair. As described further below the configuration rules determine which author s are selected to answer questions submitted by objects embedded in documents. In general an author is an individual who makes time available to field questions related to a given compound document. An author need not actually be a writer of the document but is typically someone who is knowledgeable regarding the document s subject matter and capable of answering questions. Each online author includes an electronic device with connectivity to the server system .

The server system also hosts a messaging service for communicating with the authors . Examples of implementations of the messaging service include but are not limited to instant messaging and email messaging.

The electronics device has a plurality of compound documents generally displayed within separate graphical windows or frameworks. Each document has a respective embedded object generally . Each object is an Ask the Author object i.e. ATA object through which the viewer of the document with the ATA object can obtain an FAQ associated with the document and submit questions to authors of the document.

In addition each ATA object is configured to be compatible with the particular format of the document within which that object is embedded. For example documents can each be a Microsoft WORD document while document is a Microsoft Excel document ATA objects and are compatible with WORD documents whereas ATA object is compatible with Excel documents. Each ATA object is in communication with the ATA bot service running on the server system .

Electronic device has an open compound document that has a plurality of embedded ATA objects each of which is configured to be compatible with the particular format of the document . The ATA objects are both in communication with the ATA bot service running on the server system . Here electronic device illustrates that a single document can render multiple different ATA objects.

Open within the electronic device is a copy of the same compound document with the same embedded document object as the copy displayed on the electronic device . Accordingly electronic devices illustrate that multiple copies of the same document having the same embedded document object can be distributed to multiple electronic devices and that such document objects can concurrently communicate with the ATA bot service on the server system .

The ATA bot provides three appearances on the network 1 to provide a RESTful service used by the ATA objects to retrieve GET associated Q A pairs from the database and for posting PUT POST questions 2 to present a Web accessible administration GUI that allows the registration of and configuration updates to RDFAQIDs 3 to provide a virtual IM chat endpoint that interacts with document authors .

At step each viewer of the distributed document renders the ATA object when that viewer opens the document for viewing or editing or displays the portion of the document within which the ATA object is embedded. Depending upon the particular application that renders the document the viewer may need to enable the operation of the ATA object before the ATA object can render analogous to enabling macros . As described in more detail below the rendering of the ATA object causes the FAQ that is registered for the document to appear within a frame displayed in the document.

If for whatever reason no connectivity exists between the ATA object and the ATA bot service when the ATA object is rendered the document uses a local cached copy of the Q A pairs cached on the last successful retrieval. Various techniques including a timer may be used to refresh the FAQ frame with the ATA bot preferably transmitting only changes from the last polled state.

Through the rendered ATA object a given viewer here e.g. viewer A submits step a question. The ATA bot receives the submitted question and solicits step an answer from one or more authors through the messaging service as described further below. At step an author replies with an answer. Each ATA object embedded in the distributed copies of the document communicates step with the ATA bot to acquire an updated FAQ for the document including the new Q A pair comprised of the question submitted by viewer A and the answer received from the author. Acquiring the updated FAQ can occur the next time the viewer opens the document provided it has been closed or as a result of polling the ATA bot while the document remains open.

In this example the I AM states for a group called Book42G are bread and butter meaning any state containing either word and the question filter pattern is a wildcard symbol which matches any question. Individuals SamH SueZ and HankM have different I AM states SamH s state pattern is bread SueZ s state pattern is butter and HankM s state pattern is cooking for example the I m preparing cooking class presenter notes state would match HankM s pattern . This particular configuration indicates that when in a compatible state that the Book42G group handles any question SamH s handles questions that include the word bread SueZ handles questions that include the word butter and HankM handles questions that include the words temp bake or fry.

In response to receiving the Get request step the ATA bot queries step the database for the respective identified resource ID i.e. RDFAQID . If the RDFAQID is registered the database returns step the FAQ associated with the RDFAQID to the ATA bot and the ATA bot returns step the current set of Q A pairs i.e. the associated FAQ to the embedded object. Optionally the ATA bot filters the current set of Q A pairs by a date range before sending the current set of Q A pairs to the ATA object.

Upon receiving the current set of Q A pairs the embedded ATA object then renders the Q A pairs in a frame within the document. In the frame appears a clickable graphical button this button appears irrespective of whether the viewer opened the document in read only mode or in an editable mode. The clickable button can appear below the set of Q A pairs. By clicking upon this button the viewer of the document can initiate a question submission process. The document is listening to an event code associated with the button so that the embedded object can react to the button being pressed.

After selecting step one author the ATA bot sends step the selected author an instant message having the title of the FAQ the text of the question and a reference number assigned to the request by the ATA bot. After receiving an answer from the author the ATA bot forwards step the answer to the ATA object that submitted the corresponding question.

If instead the ATA bot does not find a currently available author the ATA bot queues step the question and RDFAQID for a background process. The ATA bot then periodically retries step to find an available author. In addition the ATA bot sends step a status of the queued request to the ATA object. In response to receiving the status of the queued request the ATA object can update the contents within the displayed frame to include a status message.

If instead the answer from the chat partner lacks a reference number the ATA bot determines step if only a single outstanding request exists for the chat partner who sent the answer. When there is only one such outstanding request the ATA bot can match the answer to the corresponding question and proceed as described in steps and . Otherwise if the ATA bot cannot match the received answer to a corresponding question the ATA bot sends step an instant message to the chat partner asking for the missing information namely the reference number of the question to which the chat partner is responding.

The memory includes non volatile computer storage media such as read only memory ROM and volatile computer storage media such as random access memory RAM . Stored in the ROM may be a basic input output system BIOS which contains program code for controlling basic operations of the electronics device including start up of the electronics device and initialization of hardware. Stored within the RAM are program code and data. Program code includes but is not limited to application programs program modules plug ins and an operating system e.g. Windows XP Vista Windows 7 Linux and Macintosh . The non volatile storage may be removable or non removable storage media examples of which include but are not limited to hard disks USB memory sticks optical disks such as CD ROMs magnetic diskettes and flash memory cards.

Application programs on the electronics device include but are not limited to an electronic mail client program browser software an instant messaging program a web conferencing program and office applications such as spreadsheet word processor and slide presentation software. Each application program can be a proprietary or commercially available program such as Lotus NOTES for email Lotus Sametime or IBM Workplace for instant messaging and for web conferencing Microsoft Internet Explorer for browser software and Microsoft WORD for word processing. The browser software can incorporate a JAVA virtual machine for interpreting JAVA code i.e. applets scripts and applications.

The communication bus connects the processor to various other components of the electronics device including a user input interface a display interface and a network interface . Although shown as a single bus the communication bus can comprise multiple separate busses which may be of different types. Example implementations of the communication bus include but are not limited to a Peripheral Component Interconnect PCI bus an Industry Standard Architecture ISA bus an Enhanced Industry Standard Architecture EISA bus and a Video Electronics Standards Association VESA bus.

Over one or more links wire or wireless the user input interface is in communication with one or more user input devices e.g. a keyboard a mouse trackball touch pad touch screen microphone joystick by which a user can enter information and commands into the electronics device . A display e.g. a video monitor connects to the communication bus through the display interface .

The server system includes a processor in communication with memory storing the program code and data for supporting the ATA bot service and messaging service and with a storage interface for communicating with the database as described herein.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk RAM ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wire line optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages.

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions 

While the invention has been shown and described with reference to specific preferred embodiments it should be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention as defined by the following claims.

