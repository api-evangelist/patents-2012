---

title: Bootstrap social network using event-related records
abstract: Event-related data including at least one event-related record belonging to a first user is received. The event-related record is processed for an event. The event is classified into an event type using a plurality of predefined event types. A post for the event based on the event type is generated and a content stream of the first user is populated with the post.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09596207&OS=09596207&RS=09596207
owner: Google Inc.
number: 09596207
owner_city: Mountain View
owner_country: US
publication_date: 20121231
---
People are increasingly turning to social networks to communicate and share information. For example users can access their own content streams and the content streams of others on a given social network to view various posts and receive updates. However in many cases the events that are not shared by users via a social network will be missing from the content stream of those users. As a result only events dating back to the time the user began using the social network and that the user shared via that social network might be included in that user s content stream.

According to one innovative aspect of the subject matter being described in this disclosure a system receives event related data including at least one event related record belonging to a first user. The system processes the event related record for an event and classifies the event into an event type using a plurality of predefined event types. The system generates a post for the event based on the event type and populates a content stream of the first user with the post.

In general another innovative aspect of the subject matter described in this disclosure may be embodied in methods that include receiving event related data including at least one event related record belonging to a first user processing the event related record for an event classifying the event into an event type using a plurality of predefined event types generating a post for the event based on the event type and populating a content stream of the first user with the post.

Other implementations of one or more of these aspects include corresponding systems apparatus and computer programs configured to perform the actions of the methods encoded on computer storage devices.

These and other implementations may each optionally include one or more of the following features. For instance the operations may further include processing the event related record for event related attributes that correspond to the event applying an event template associated with the event type the event template including one or more required fields processing the event related attributes for information corresponding to the one or more required fields generating the post for the event based on the event template and the information that at least one record includes an electronic message thread and a calendar entry that the electronic message thread and the calendar entry are aligned based on a similarity processing the event related record includes processing the electronic message thread and the calendar entry to determine the event processing the event related data includes assigning scores to the event related records based on one or more criteria and filtering out one or more of the event related records having scores that do not satisfy a predetermined threshold classifying one or more events of the one or more event related records that are unfiltered by the filtering generating one or more posts based on the one or more event related records populating the content stream with the one or more posts receiving interaction data reflecting an interaction by the first user or another user with a post of the content stream determining an event type corresponding to the post of the content stream modifying scores that are assigned during the processing of a subsequent set of event related records based on the event type processing sets of contacts sets of contact related attributes and sets of event related attributes from the event related records assigning first importance scores to the sets of contacts based on the sets of contact related attributes that respectively correspond to the sets of contacts assigning second importance scores to the event related records based on one or more criteria including the first importance scores and the sets of event related attributes corresponding to the event related records filtering out one or more event related records having second importance scores less than the predetermined threshold and determining one or more events based on one or more sets of event related attributes corresponding to one or more event related records that are unfiltered by the filtering.

For instance the features may include that at least one record includes an electronic message thread or calendar entry belonging to the first user and that the event related data includes a plurality of event related records.

These implementations are particularly advantageous in a number of respects. For instance the technology described herein can populate the user s content stream with past significant events that are memorialized in that user s electronic messages and calendar entries. The technology can also supplement the user s content stream with current events that were communicated by the user to other users using electronic messages and calendar invitations. It should be understood however that this list of features and advantages is not all inclusive and many additional features and advantages are contemplated and fall within the scope of the present disclosure. Moreover it should be noted that the language used in this disclosure has been principally selected for readability and instructional purposes and not to limit the scope of the subject matter disclosed herein.

In some implementations the entities of the system may use a cloud based architecture where one or more computer functions or routines are performed by remote computing systems and devices at the request of a local computing device. For example a client device may be a computing device having hardware and or software resources and may access hardware and or software resources provided across the network by other computing devices and resources including for instance other client devices the social network server the electronic messaging server the calendar server or any other entities of the system .

The network is a network for interconnecting computing nodes. The network may have any number of configurations or topologies. For example the network may have a star token ring or other known topology or hybrid thereof. The network may include a local area network LAN a wide area network WAN e.g. the Internet and or any other interconnected data path across which multiple devices may communicate. The network may be coupled to or include a mobile cellular network including distributed radio networks and a hub providing a wireless wide area network WWAN or other telecommunications networks. In some implementations the network may include Bluetooth communication networks for sending and receiving data. The network may transmit data using a variety of different communication protocols including for example various Internet layer transport layer or application layer protocols. For example the network may transmit data using user datagram protocol UDP transmission control protocol TCP HTTP HTTPS file transfer protocol FTP WebSocket WS WAP IMAP SMTP POP SMS protocol MMS protocol XMS protocol or other known protocols.

The client devices . . . are computing devices having data processing and data communication capabilities. In the depicted implementation the client device is coupled to the network via signal line and the user s interactions with client device are depicted by line and the client device is coupled to the network via signal line and the user s interactions with the client device are depicted by line

In some implementations a client device includes a workstation computer a desktop computer a laptop computer a netbook computer a tablet computer a smartphone a set top box unit an Internet Protocol connected smart TV including a computer processor capable of receiving viewer input accessing video content on computer networks e.g. the Internet and executing software routines to provide enhanced functionality and interactivity to viewers or the like. In some implementations the client device can be a handheld wireless computing device which is capable of sending and receiving voice and or data communications.

The client device may include a computer processor a memory a power source and a communication unit including one or more network interfaces for interacting with the network including for example wireless transceivers to broadcast and receive network data via radio signals. The client device may also include one or more of a graphics processor a high resolution touchscreen a physical keyboard forward and rear facing cameras sensors like accelerometers and or gyroscopes a GPS receiver a Bluetooth module memory storing applicable firmware and various physical connection interfaces e.g. USB HDMI headset jack etc. etc.

Additionally an operating system for managing the hardware and resources of the client device application programming interfaces APIs for providing applications access to the hardware and resources a user interface module for generating and displaying interfaces for user interaction and input and applications including for example applications for making phone calls video calls web browsing messaging social networking gaming capturing digital video and or images etc. may be stored and operable on the client device . While illustrates two or more client devices the present disclosure applies to any system architecture having any number of client devices .

In the depicted implementation the client device contains a client application executable by a processor not shown of the client device to provide for user interaction and to send and receive data via the network . In particular the client application is operable to instruct the client device to render user interfaces receive user input and send information to and receive information from the social network server and the other entities of the system . In these or other implementations the client application is stored in a memory not shown of the client device and is accessible and executable by a processor not shown .

In some implementations the client application generates and presents user interfaces to the user via a display not shown . For example the client application may generate and present the user interface depicted in based at least in part on information received from the social network server via the network . In some implementations the client application receives interface instructions from the social network application or the bootstrapping engine of the social network server via the network in the form of a mark up language e.g. HTML XML etc. style sheets e.g. CSS XSL etc. graphics and or scripts e.g. JavaScript ActionScript etc. and then interprets the interface instructions and renders an interactive Web User Interface WUI for display on the client device based thereon. In some implementations some or all of the interface instructions are provided by the client application while the substantive information is provided by the social network server . Other variations are also contemplated and within the scope of this disclosure. The client application is also operable to receive input signals from the user via an input device not shown of the client device and to send information to and receive information from the social network application and the bootstrapping engine via a communication unit not shown e.g. one like or substantially similar to the communication unit .

As depicted in the social network server the electronic messaging server and the calendar server are respectively coupled to the network via signal lines and for interaction with each other and the other components of the system . The social network server the electronic messaging server and the calendar server may be a computing device having one or more processors and one or more storage devices storing data or instructions for execution by the one or more processors. For example a computing device may be a hardware server a server array or any other computing device or group of computing devices having data processing storing and communication capabilities. The computing device may also be a virtual server i.e. a virtual machine implemented via software. For example the virtual server may operate in a host server environment and accesses the physical hardware of the host server including for example a processor memory storage network interfaces etc. via an abstraction layer e.g. a virtual machine manager . Although only one social network server electronic messaging server and calendar server is shown multiple social network servers electronic messaging servers and calendar servers may be included in the system . Furthermore it should be understood that any of the entities of the system can be stored in any combination of devices and servers or in one device or server.

The electronic messaging server is a computing device for sending receiving managing and providing access to electronic messages. While not depicted the electronic messaging server may include an electronic message application operable to send store receive manage and provide access to the electronic messages. The electronic message application may be operable to store electronic messages received composed saved and or sent by users in a data store and provide access to these messages to the other entities of the system including for example the social network server . In some implementations the electronic messaging application requires user consent be provided before providing access to a user s electronic messages to these other components.

The calendar server is a computing device for organizing editing sending managing and providing access to calendar related data including for example calendar entries. While not depicted the calendar server may include a calendar application operable to perform the above discussed functionality. In some implementations the calendar application may be operable to store calendar entries received composed saved and or sent by users in a data store and provide access to these entries to the other entities of the system including for example the social network server . In some implementations the calendar application requires user consent be provided before providing access to a user s calendar entries to these other components.

In the depicted implementation the social network server includes a social network application and a bootstrapping engine . The social network application provides functionality for a social networking service also referred to as a social network and the bootstrapping engine cooperates with the social network application to bootstrap a social network content stream with posts using event related records. Additional structure and functionality of the social network application and the bootstrapping engine are further described below with reference to at least .

While only the social network server is depicted in as including a bootstrapping engine it should be understood that this implementation is provided by way of example and that any single entity or any number of entities may include an instance of the bootstrapping engine . For example the electronic messaging server the calendar server or a third party server not shown could store and operate an instance of the bootstrapping engine and provide access to the functionality of it to the other entities of the system via an application programming interface API .

The social network server the social network application the bootstrapping engine the electronic messaging server and the calendar server may require users to register for a user account to access various functionalities and services provided by these entities. For example to register a credential module included in and operated by a given entity of the system may require a user to provide identifying information for example a valid electronic address and password and the application may test the validity of the electronic address by sending the a confirmation message to the address containing instructions for confirming the account e.g. selecting a hyperlink to a confirmation webpage operated by the service provider . Once registered the credential module may require a user seeking access to the service operated by this entity to authenticate by inputting the identifying information in an associated user interface.

The social network server depicted in is provided by way of example and it should be understood that the social network server may take other forms and include additional or fewer components without departing from the scope of the present disclosure. For example while not shown in some implementations the social network server may include input and output devices e.g. a computer display a keyboard and mouse etc. various operating systems sensors additional processors and other physical configurations. Additionally it should be understood that the computer architecture depicted in is applicable to the other entities of the system with various modifications. For example a third party server not shown including the functionality of the bootstrapping engine the electronic messaging server and or the calendar server could have the same or a similar architecture as the social network server depicted in including for instance the processor the memory the communication unit and the data store coupled via the bus .

The bus can include a conventional communication bus for transferring data between components of a computing device or between computing devices a network bus system including the network or portions thereof a processor mesh a combination thereof etc. In some implementations the social network application the bootstrapping engine and its sub components and see and or various software operating on the social network server e.g. an operating system may cooperate and communicate via a software communication mechanism implemented in association with the bus . The software communication mechanism can include and or facilitate for example inter process communication local function or procedure calls remote procedure calls an object bus e.g. CORBA direct socket communication e.g. TCP IP sockets among software modules UDP broadcasts and receipts HTTP connections etc. Further any or all of the communication could be secure e.g. SSH HTTPS etc. .

The processor includes an arithmetic logic unit a microprocessor a general purpose controller or some other processor array to perform computations and provide electronic display signals to a display device not shown . The processor may be coupled to the bus for communication with the other components of the social network server . The processor may process data signals and may have various computing architectures including a complex instruction set computer CISC architecture a reduced instruction set computer RISC architecture or an architecture implementing a combination of instruction sets. Although only a single processor is shown in multiple processors may be included and each processor may include a single processing core or multiple interconnected processing cores. The processor may be capable of supporting the display of images and the capture and transmission of images perform complex tasks including various types of feature extraction and sampling etc.

The memory stores instructions and or data that may be executed by the processor . In the depicted implementation the memory stores at least the social network application and the bootstrapping engine . The memory is also capable of storing other instructions and data including for example an operating system hardware drivers other software applications databases etc. The memory is coupled to the bus for communication with the processor and the other components of social network server . The instructions and or data may include code for performing any and or all of the techniques described herein. In particular the memory includes a non transitory computer usable e.g. readable writeable etc. medium which can be any apparatus or device that can contain store communicate propagate or transport instructions data computer programs software code routines etc. for processing by or in connection with the processor . A non transitory computer usable storage medium may include any and or all computer usable storage media. In some implementations the memory may include volatile memory non volatile memory or both. For example the memory may include one or more of a dynamic random access memory DRAM device a static random access memory SRAM device flash memory a hard disk drive a floppy disk drive a CD ROM device a DVD ROM device a DVD RAM device a DVD RW device a flash memory device and any other mass storage device known for storing information on a more permanent basis. It should be understood that the memory may be a single device or may include multiple types of devices and configurations.

The communication unit may include devices for communicating with other electronic devices. For example the communication unit may include wireless network transceivers e.g. Wi Fi Bluetooth cellular wired network interfaces e.g. a CAT type interface USB Firewire or other known interfaces. The communication unit may provide connections to the network and to other entities of the system using standard communication protocols including for example those discussed with reference to the network . The communication unit may link the processor to the network which may in turn be coupled to other processing systems. In the depicted implementation the communication unit is coupled to the network via signal line for communication and interaction with the other entities of the system .

A social network is any type of social structure where the users are connected by one or more common features. The common features can include any attribute interest preference relation or interaction attributable to the users. For example the common features include relationships connections e.g. professional and academic attributes and interests friendships familial ties etc. The common features can also include explicitly defined relationships and relationships implied by social connections with other online users and entities. The common features can be provided by one or more social networking systems including for example those included in the system . These common features which may be stored as profile information for the users can be mapped by the social network application to connect the users.

A user s social graph may include social graph connection information describing connections between that user and the other users of the social network what common features e.g. attributes interests social network activity relationships etc. connect that user to other users any groups sets formed by that user and or the social network application to categorize or group his or her connections on the social network the strength of the connections i.e. affinity between the user and other users which can be calculated based on for example the degree or degrees e.g. 1st 2nd 3rd 4th etc. of separation between the user and other users who if any the connecting interstitial users are the amount or type of interactions between the users etc. etc. For instance the social network application and or a user e.g. via an associated user interface may define groups for users who are work friends school friends networking contacts clients etc. and user s social graph may include data reflecting what groups these users belong to. Together the social graphs of the users form a collective social graph that reflects a mapping of all of the users of the social network and how they are related.

In some implementations the information stored by the social graph is stored in the memory of the social network server . In other implementations the social graph is included in a memory computing device and or storage system distinct from but accessible by the social network server . In various implementations the social graph stores records files objects data etc. in cooperation with a file system executable by the processor . The social graph may additionally or alternatively include a database management system DBMS executable by the processor to manage a collection of records files objects etc. For example the database could be a structured query language SQL and or a NoSQL DBMS storing data that can be manipulated using programmatic operations e.g. queries and statements by the social network application the bootstrapping engine and the other entities of the system .

The data store is an information source capable of storing and providing access to data to the various entities coupled to the network . In the depicted implementation the data store is coupled for communication with the components and of the server via the bus and coupled via the processor for communication with the components and of the bootstrapping engine see . In some implementations the data store includes a database management system DBMS operable on the social network server or another computing device and storable in the memory thereof. For example the DBMS could be a structured query language SQL DBMS and the components and see are configured to manipulate i.e. store query update and or delete data stored in the data store using programmatic operations e.g. SQL queries and statements .

The data stored by the data store may include information generated received or sent by the bootstrapping engine and or its sub components and see the social network server the electronic messaging server and the calendar server . In some instances one or more of the components and discussed above may use the data in the data store to perform their respective functionalities as discussed elsewhere herein.

The bootstrapping engine is software code logic or routines for bootstrapping a social network content stream with posts using event related records. As depicted in the bootstrapping engine includes an aggregator an event processor an event classifier a stream populator and a learning module which cooperatively provide the functionality of the bootstrapping engine . However the arrangement illustrated in is provided by way of example and it should be understood that other arrangements are possible. For example an alternative arrangement could combine the functionality of one or more of the components and or into a single component integrate the bootstrapping engine into other software applications e.g. the social network application or vice versa or further divide the modules into separate additional cooperative components.

In the depicted implementation the components and or are electronically communicatively coupled for cooperation and communication with each other the social network application the processor the memory the communication unit the social graph and or the data store . These components and are also coupled for communication with the other entities e.g. client devices the social network server the electronic message server and the calendar server of the system via the network .

In some implementations the social network server the bootstrapping engine the aggregator the event processor the event classifier the stream populator and the learning module are sets of instructions executable by the processor or logic included in one or more customized processors to provide their respective functionalities. In some implementations the social network server the bootstrapping engine the aggregator the event processor the event classifier the stream populator and or the learning module are stored in the memory of the social network server and are accessible and executable by the processor to provide their respective functionalities. In any of these implementations the social network server the bootstrapping engine the aggregator the event processor the event classifier the stream populator and or the learning module are adapted for cooperation and communication with the processor and other components of the social network server .

The aggregator is software code logic or routines for aggregating event related data that includes event records. In some implementations the event related data includes message related and or calendar related data. For example the message related data may include records like electronic message threads and the calendar related data may include records like calendar entries as discussed in further detail below with reference to at least the event processor . However it should be understood that the event related data is not limited to including electronic message threads and calendar entries and may include other types of records including images videos documents and other content. For instance upon user consent the aggregator may aggregate images videos and documents from online services e.g. photo video and document hosting services or native applications that the users uses to compose post share and or otherwise manage those records.

The aggregator aggregates the event related data from one or more information sources including for example the electronic messaging server the calendar server one or more client devices the data store and or any other information source coupled to the network . In some implementations the event related data may include electronic messages and calendar entries stored and managed by the client devices the electronic messaging server the calendar server and or the social network server via calendar and messaging applications operable by these devices.

The aggregator can store the event related data that was aggregated in a local repository e.g. the data store for access by the other entities i.e. and of the social network server . The aggregator may also provide aggregated event related data directly to the event processor or the other components and of the bootstrapping engine . In some implementations upon aggregating the event related data the aggregator may instruct the event processor to process the data by sending a signal to the event processor . In some implementations the event processor may initialize independently of the aggregator .

In some implementations the aggregator can aggregate the event related data automatically at regular intervals. For example the aggregator may include a batch process that is capable of performing the aggregation periodically e.g. every few minutes hours days weeks etc. . In other instances the aggregator may begin aggregating in response to receiving an aggregation request from the social network server or another element of the system .

In some implementations the aggregation request can include or be associated with an authentication token authorizing the aggregator to process the event related data. In some implementations the social network application the electronic messaging server calendar server and any of the other entities of the system may authenticate users using a common credential module. For example the common credential module may be implemented by a federated identity authentication service for authenticating users that is operated by the social network server the electronic messaging server the calendar server etc.

In some implementations the aggregator may act as a controller for receiving the aggregation requests and in response to receiving may then aggregate the event related data and then signal the event processor to perform its operation. The bootstrapping engine or the social network application may also alternatively or additionally include a discrete controller to handle requests including for example an aggregation request and signal the aggregator and or other components and to perform their respective operations.

The event processor is software code logic or routines for processing and scoring the event related data. The event processor may be coupled to an information source including for example the aggregator the data store and or another component of the system to receive the event related data. In some implementations the functionality of the aggregator is integrated into the event processor and the event processor may aggregate the event related data independently upon receiving an aggregation request from the social network server or at regular intervals as discussed above with reference to the aggregator .

The event related data may include a plurality of event related records. In some implementations an event related record may include information about a topic that was shared with other users. For example the event related records may include electronic message threads and calendar entries belonging to a user. In some implementations an electronic message thread may include one or more electronic messages and metadata associated with the messages. For instance an electronic message thread may include an original message that a user composed and sent to other users. The electronic message thread may further include any subsequent replies to the original message and or to the replies to that message and so on and so forth. Each message included in the message thread may have metadata associated with it including a distribution list that identifies the sender and one or more recipients e.g. from to cc and bcc fields . The metadata may also contain fields including for example a subject for the message a timestamp e.g. date time a geographic location describing where the message was sent from a view count describing the number of times the message was viewed and accessed attachment s e.g. audio files video files photos images electronic documents hyperlinks to multimedia resources etc. and the like. Each of the messages of the message thread may have a message body that embodies the message being conveyed by the sender to the recipients. The message body may include textual data formatted and or plain text etc. images audio data video data presentational information embedded data or any other form of data and or formatting used to convey information etc.

A calendar entry may likewise include a message body and metadata that collectively describe an event. The metadata may include a distribution list that identifies the event organizer and one or more recipients invited to attend the event e.g. from to cc and bcc fields . The metadata may also include a subject for the event the time and date the event is scheduled to occur a geographic location of the event attachment s e.g. audio files video files photos images electronic documents hyperlinks to multimedia resources etc. describing the event e.g. a menu a program pictures of the event location a map etc. and the like. The body may include textual data formatted and or plain text etc. images audio data video data presentational information embedded data or any other form of data and or formatting used to describe the event.

In some implementations the event processor can process each of the records included in the event related data for contacts contact related attributes and event related attributes. The contacts may include one or more users that a user interacted with via the record. For instance the contacts may include one or more users from the distribution list of the record one or more users referenced by the record e.g. message body an attached document an attached photograph etc. etc.

The contact related attributes may describe how the contacts of a given record are associated with one another and the user to which the record belongs as well as the strength of that association. In some implementations the contact related attributes may include raw attributes processed from the record and attributes derived from the raw attributes. For example the event processor may process the record e.g. metadata message body ies etc. for the raw contact related attributes and then derive attributes based on the contact related attributes and other information associated with or included in the record. In some implementations the contact related attributes may include one or more of a total messages exchanged between the contacts and the user time spent by the user interacting with the contacts number of previous interactions with the contacts familial ties between the contacts and the user based on last name patterns affinity between the user and the contacts on a social network uniqueness of the contacts how recently the contacts exchanged messages view count describing the number of times that the user viewed or accessed a message received from the contacts location e.g. home work of the contacts and or the user at given time etc.

The event related attributes are attributes that describe an event associated with a record. The event processor may process the record e.g. metadata message body ies etc. to determine the event related attributes. In some implementations the event processor may process raw attributes from the record and then derive additional event related attributes based on the raw attributes and or other information associated with or included in the record. Examples of the event related attributes may include but are not limited to timestamps i.e. date time associated with the event location of the event subject for the event attachment s summary describing the event view count describing the number of times event information was viewed or accessed time spent on reading the record embedded multimedia links e.g. video links links to external photo sharing websites etc. representative images associated with the event etc.

In some implementations the event processor may determine the events reflected by the records based on the event related attributes. For instance the event processor can process the event related attributes of a record for the topic s discussed by the record. As a further example the event processor can process the message text a subject attachments and or any other information included in the record to identify the events described by that information. The event processor may identify patterns between words and or phrases included in the information to identify the events. For instance as discussed in further detail below the event processor may use a Bayesian model to determine the event a record describes and the event classifier may classify the record into an event type using the event.

In some implementations the event processor may align two or more records that are associated with the same event. Based on the alignment the event processor may determine additional information about the event e.g. details about the event who attended pictures and or videos of the event etc. that may otherwise not be available from a single record and or may confirm details of the event processed from one record e.g. when the event was held who attended etc. with the details from another record. In some implementations the event processor can identify two or more records as being directed to the same event based on their respective contacts contact related attributes and or event related attributes. For instance the event processor can align two or more records based on their respective metadata e.g. matching distribution lists timestamps keywords included in the subject etc. their respective descriptions e.g. matching text or keywords in the message bodies etc. etc.

As an example important life events like a baby announcement the birth of a baby a baby shower a 100 day party etc. are likely to have both calendar events and electronic messages associated with them and the event processor align the calendar events and electronic messages to more completely determine the details of the events and verify those details. For instance an electronic message thread may fail to mention the date of the baby shower but the calendar entry may include that date and by aligning the two the event processor can use both to more completely determine the details about the baby shower.

In some implementations to determine how closely related a calendar event and electronic message thread are the event processor can determine whether the contacts e.g. those invited by the user from the calendar entry and the contacts e.g. recipients of a message from the user from an electronic message thread overlap and can determine whether the textual description from the calendar entry and the textual description from the electronic message thread contain similar content e.g. by matching the text patterns etc. . Based on this determination the event processor may approximate whether the records are a match. In some implementations to determine whether two or more records match the event processor may score the records being aligned based on the number and or strength of the similarities between their attributes e.g. contacts contact related attributes event related attributes etc. and if the score satisfies a predetermined alignment threshold may determine the records to match.

In some implementations the event processor may be unable to determine the events for two or more records by processing them separately and instead may align those records based on similarities between them e.g. between the contacts contact related attributes event related attributes etc. and then use content from those records collectively to determine the events they relate to and whether the events are the same.

In some implementations the event processor can score the contacts associated with the records. The scores assigned by the event processor may reflect how important the contacts are relative to the events the users to which the records belong etc. In some implementations the event processor can for a given record score the contacts associated with that record based on the contact related attributes processed from the record. For example the event processor can score the contacts based on one or more of the number of contacts the affinity between the user to which the record belongs and the contacts on the social network e.g. as reflected in the social graph the level of exchange i.e. back and forth in the record between the user and the contacts the number of users who accepted a calendar invitation if the record is a calendar entry whether the user and contacts are relatives e.g. based on last name processing how recently the contacts exchanged messages the amount of time the contacts and or user spent viewing or exchanging messages etc.

In some implementations the more closely related the contacts are to one another the user and or to the event as reflected by the contact related attributes the social graph the event related attributes etc. the better the score they receive from the event processors . For example if for a given record the contact related attributes and or the social graph reflect that the contacts are generally unrelated to one another and or that they have little or no relation to the event etc. the event processor may score these contacts poorly relative to contacts that are related to one another and or attended or are otherwise associated with the event.

In some implementations the event processor can score the records based on one or more criteria. The scores assigned by the event processor may reflect how important the records are to the users to which they belong. The one or more criteria used to score the records may include for example the importance score assigned to the contacts associated with the record and one or more of the event related attributes associated with the record including level of activity or exchange reflected by the record e.g. amount back and forth reflected by the electronic message thread the number of records that relate to the event e.g. as aligned by the event processor the time spent accessing the record e.g. opening reading composing a response etc. the importance of the event some events carry more weight in the user s life e.g. wedding death in family important milestone etc. etc. As a further example if an electronic message thread reflects little or no engagement by the users that are associated with the thread e.g. includes a single message and no replies the event processor may assign a worse score to that record than to an electronic message thread that reflects a lot of engagement by users that are associated with the thread e.g. includes the original message and several replies to that message .

In some implementation the event processor may determine the importance of the event embodied by a record in cooperation with the event classifier . For example the event processor may request the event classifier to classify what type of event the event is and the event classifier may classify the event into an event type and identify such to the event processor . The event processor may then determine the significance of the event type and score the record accordingly.

It should be understood that the event processor may utilize a variety of different statistical methods and scales to score the contacts and records. For example the event processor may score the records by sorting them into different importance categories e.g. very low low medium high and very high etc. . In another example the event processor may assign numerical values to the contacts and or records where a higher value reflects a more important record or set of contacts and a lower value reflects a less important record or set of contacts or vice versa.

The event processor can filter out the records that are unrelated to an event or do not contain sufficient information about a particular event. In some implementations the event processor can filter the records based on their importance scores. For instance the event processor may filter out the records having importance scores that do not satisfy a threshold. The threshold may signify whether the record is important enough to include in the content stream of the user. For instance the threshold may require that the records have an importance score of medium or better. In some implementations the threshold may be defined as a variable and the event processor may retrieve the variable from memory e.g. the memory and compare the importance scores of the records to the threshold to determine whether to filter them out.

In some implementations the threshold may vary based on the number of posts the user already has in his her content stream. For instance if the user is active and has a consistent distribution of posts over an applicable timeline in his her content stream the threshold may be more strict and may filter out all records except for those related to very significant life events e.g. deaths births weddings etc. and thus receiving relatively high scores e.g. 90 percentile or better high or better etc. . In another example if the user activity on the social network is sporadic and has an inconsistent distribution of posts over an applicable timeline in his her content stream e.g. large gaps like a year six months etc. of inactivity the threshold may be more loose and may only filter out records for which an event type cannot be determined or have relatively low scores e.g. below 50 low or worse etc. . The records having importance scores that satisfy the threshold i.e. are unfiltered may be provided by the event processor to the event classifier to be classified as discussed in further detail below.

The event processor can store the data that it generates during processing e.g. the contacts contact related attributes event related attributes importance scores alignment information record filtering data etc. in a data store e.g. the data store for access and retrieval by the event processor itself and or the other components and or of the bootstrapping engine or can provide this data or portions thereof directly to these components and or .

The event classifier is software code logic or routines for classifying the events corresponding to the records using the event types. The event classifier may be coupled to an information source including for example the event processor the data store and or another component of the system to receive the record related information including for example the records and associated events contacts contact related information event related information etc. In some implementations the event processor may process and filter the records and then the event classifier may classify and generate posts for the unfiltered records. In some implementations the event processor may signal the event classifier to classify the events of various records into event types and provide the event types to the event processor for use in scoring the records based on importance as discussed above.

Event types may be defined for a variety of different types of events that may happen in a user s life including for example a birthday a birthday party an anniversary a move a wedding a honeymoon a graduation a birth a ceremony a death a job change a school change a party a vacation a business trip a new venture a political event a purchase e.g. new house car etc. a new membership to an online community or any other event. In some implementations the event classifier may classify a record based on the event topic the user and contacts associated with the record and or the number of records that relate to the event e.g. number of messages and calendar entries aligned with the event etc. For example the event classifier may classify the record by comparing metadata e.g. keywords identifiers etc. for the event of the record with metadata e.g. keywords identifiers etc. for the event types to determine a match. As a further example if the event is the birth of a baby the event processor may have stored a set of keywords for the event e.g. birth baby etc. and the event classifier can match the keywords with keywords associated with the event types to determine a matching event type.

In another example the event classifier may classify the event based on whether the group of users belong to the same group on the social network as reflected by the social graph past interaction between the users as reflected by the aggregated records belonging to the user e.g. electronic message threads calendar entries etc. etc. For example the event classifier may match the event of a given record to a holiday party event type but may be uncertain as to whether the party is work related. To make this determination the event classifier may compare the record s contacts to the groups defined in the social graph . The social graph may include a group defined by the user for the user s friends and family and a group for the user s co workers and the event classifier may determine that the contacts overlap the users in the co worker group. Based on this the event classifier may match the event to the more specific event type of a work related holiday party. It should be understood that numerous other variations are also possible and are encompassed by the present disclosure.

In some implementations the event classifier may maintain event templates for the event types and apply the event templates to the records once they have been classified so event based posts can be generated for the events. An event template may be maintained for each event type defined in the data store. An event template may include a description for the event and a plurality of custom fields that can be populated with information from the record or aligned set of records to which the template is being applied.

The event classifier may apply an event template to a matching record or set of aligned records by retrieving the event template from the data store and then processing the contacts the contact related attributes and or the event related attributes of the record s for information to populate the fields of the event template with. For example the event template may include fields for the title the date time the geographic location photographs and or videos a description various event specifics the organizer the users that attended and or were informed about the event etc. and the event classifier may process the information from the record s for the information that matches these fields and may then populate them with that information. For instance the event may be the birth of a baby and the event classifier may apply event template that announces the birth of the baby and includes fields for custom information that is desirable to include in such an announcement including for example the baby s name date and time of birth weight height photos etc. The event classifier may process the event related information of the record for information corresponding to these fields and populate them accordingly.

In some implementations the event classifier is capable of determining event types and event templates using supervised classification. For example the event classifier may receive a corpus of sample records that have been manually tagged with the event types they relate to. The event classifier may generate a graphical model e.g. using a Bayesian algorithm based on the information e.g. textual description subject tags etc. included in the sample records. The graphical model may include the event types for the records and may map related keywords and phrases to those event types. Templates corresponding to these event types may also be manually defined and stored in the data store .

The event classifier can autonomously learn about new event types and develop existing event types by adapting the patterns included in the model to the records it classifies. For example based on this learning the event classifier may define a new event template for a new event type using the information from one or more records determined by the event classifier as related to that event type. In another example based on this learning the event classifier can add additional fields or information to an existing event template derived from one or more records that the event classifier determines as being related. In some implementations this learning may be probabilistic in nature. For example the event classifier may use logistic regression support vector machines decision tree algorithms etc. to predict new event types based on patterns included in the records being processed by the bootstrapping engine . The training performed by the event classifier provides numerous benefits including but not limited to continuously evolving the types of events that can be used to classify the records processed by the event classifier .

In some implementations if there is sufficient information to populate the fields of the event template for a given event the event classifier generates a post based on the populated event template and provides it to the stream populator for insertion into the content stream of the user. In some implementations the event classifier can provide the event related posts that it generates directly to the stream populator or may store the event related posts in an information source e.g. the data store for access and retrieval by the stream populator and or the other components and or of the bootstrapping engine . In some implementations where there is insufficient information from the record or aligned records to populate the fields of the event template the event classifier may skip populating the event template and generating an event based post from it may request the event processor to process records of the user again to attempt to identify additional event related information that can be used by the event classifier to populate the required fields of the template or may set the record aside until additional records have been aligned with it by the event processor and it is determined that there is sufficient information with which to populate the event template.

The stream populator is software code logic or routines for populating the content stream of users with event based posts generated by the event classifier . The stream populator may be coupled to an information source including for example the event classifier the data store and or any other entities of the system to access receive event based posts. An event based post may include any combination of textual graphical video audio data and or other data used for relaying the event information. In some implementations an event based post may include a textual and or graphical description about a topic and hyperlink s e.g. a URL to the event related record s from which it has been generated.

In some implementations the stream populator can annotate the event based post s with information identifying that the event based post s were generated based on the user s record s . For example if an event based post is generated based on a recent electronic message thread belonging to the user then the stream populator may annotate the post with an annotation informing the user of such. An example of an annotated post is depicted in the example user interface of .

In some implementations users content streams may order the posts they include based on time and date. For example posts that were posted to the content stream by a user using the functionality of the social network application e.g. via a user interface that includes options for entering a status comment note etc. checking in a location endorsing other content etc. may be inserted into that user s content stream by the social network application according to the date time they were input and submitted by the user. For event based posts the stream populator may insert them into the content stream of a user according to the time and date that the post s occurred. This is advantageous as it can supplement the content stream of the user with additional content that predates when the user registered and began using the functionality of the social network application . In addition the posts posted by the user using the social network application may in some instances only represent a portion of the life of the user and supplementing the user s content stream with event based posts processed from the user s records may paint a more complete digital picture of the user s life via the user s content stream. For example a user may have used electronic messaging to communicate with his her contacts for some time before using the social network to communicate and the bootstrapping engine may leverage these electronic messages to fill out the user s content stream. In some implementations the stream populator may expressly share a post being inserted into the user s content stream with the contacts associated with the record from which the post was processed. For example the bootstrapping engine may share a post with the users processed from the to from cc fields of the electronic message corresponding to the post.

In some implementations the stream populator may populate the content stream of a user with the event based posts by storing the posts in association with the user for retrieval by the social network application at query time upon receiving a content stream request from the client device of the user . In some implementations the stream populator may populate the content stream of a user by receiving the content stream from the social network application and injecting the event based posts into the content stream and providing the content stream to the client device of the user. In some implementations the stream populator may receive the content stream request and may retrieve and populate the content stream with event related and other posts and then provide the content stream to the entity requesting it. It should be understood however that numerous additional implementations are also possible contemplated and encompassed by the scope of the present disclosure.

The learning module is software code logic or routines for determining whether to bootstrap a social network content stream with event related posts. In some implementations to make this determination the learning module processes interaction data to determine the level of user interaction with the content stream and the types of posts the users engage with most. The learning module can determine what types of events these posts relate to and store this determination in a data store e.g. the data store . Based on this data the event processor can modify the scores it assigns when scoring records of the user to optimize which types of events posts are generated and included in the content stream of the user. This is advantageous as it can optimize the types of event based posts that are generated and included in the user s content stream based on the types of events the user and or the users contacts engage with most when interacting with the content stream. Additional structure functionality and processing that can be performed by the learning module are discussed in further detail below with reference to at least .

The learning module may be coupled to an information source including for example the data store to access the user interaction data. In some implementations the social network application may receive and store in the data store user interaction data reflecting the interactions e.g. comments positive or negative endorsements re sharing other web analytics data etc. by users and or their contacts with the posts included in the users content streams.

The learning module may autonomously perform its functionality at regular intervals or may begin processing responsive to receiving a request. For example the learning module may include a batch process that is capable of performing the processing periodically every few minutes hours days weeks etc. . In another example the learning module may begin its processing in response to receiving a request from another component and of the social network server or the system .

In some implementations the bootstrapping engine may be configured to bootstrap a user s social graph with the user s contacts stored by a service and or computing device that is distinct from the social network including for example the user s client device the electronic messaging server the calendar server or another entity coupled to the network . In some implementations upon user consent the bootstrapping engine may securely access the user s contacts from one or more of these other entities and incorporate them into the user s social graph as stored by the social graph . For example the aggregator may aggregate a record for the user and the bootstrapping engine may determine the contact related information from the record including the contacts associated with the record and selectively add the contacts to the user s social graph.

In some implementations the bootstrapping engine may determine which contacts to add to the user s social graph based on one or more criteria. For example the bootstrapping engine may score the contacts e.g. as discussed elsewhere herein and then determine whether to add the contacts to the user s social graph based on the scores. In a further example when adding contacts the bootstrapping engine may determine how strongly the user should be connected to one or more of the contacts based on the scores. For example if the user exchanges electronic messages frequently with substantially the same contact group of contacts the bootstrapping engine may closely connect associate that those contact s with the user in the social graph e.g. via a first degree connection higher affinity score a close knit group etc. . Conversely if the user exchanges messages with a certain contact group of contacts less frequently or irregularly the bootstrapping engine may more loosely associate that those contact s with the user in the social graph e.g. via a second or third degree connection lower affinity score etc. . The bootstrapping engine may use the same or substantially similar criteria to score sort filter and or process the contacts as it does when it scores sorts filters and or processes records to which those contacts may correspond.

In some implementations a user s contacts e.g. messaging device etc. contacts can be converted by the bootstrapping engine into social network contacts and can be stored as groups based one or more common features. For example the groups may be based on an area code last name physical and or electronic address or any other contact related attribute s . In some implementations the bootstrapping engine may send an authorization request to the client device of the user whose social graph is to be bootstrapped. For instance the request may ask that user to edit and or confirm creation of a group of contacts. In some implementations the bootstrapping engine e.g. learning module may use the corrections made to the groups suggested by it to improve future suggestions. In some implementations the bootstrapping engine may compare two or more sets of contacts e.g. the user s messaging contacts and the contacts stored in a phone book on the user s client device to determine any differences and may then compare the differences with the learning data to determine whether a user should be added to an existing group. In some implementations the bootstrapping engine may bootstrap the user s social graph in combination with the event related records that are used to bootstrap the user s social network content stream.

Additional structure and functionality of the bootstrapping engine including the aggregator the event processor the event classifier the stream populator and the learning module are further discussed below with reference to at least .

Next the method may process the event related data e.g. calendar data message related data etc. aggregated in block for events and classify the events using event types. In some implementations the event processor processes the event related data for the events and the event classifier classifies the events using event types that are pre defined and retrieved from a data store e.g. the data store .

The method can then generate one or more posts using the classified events and populate content stream of the first user with the generated posts. In some implementations the event classifier generates event based post s based on the event classification performed in block and provides the event based post s to the stream populator . In some implementations the event classifier may generate and store the event based post s in the data store and the stream populator may retrieve the event based post s upon receiving a content request from another entity of the system e.g. a client device the social network application etc. and provide the event based post s e.g. to the social network application the client device etc. for insertion into the content stream or may insert the event based post s into the content stream itself and then provide the content stream to the entity requesting it.

In some implementations the method may align two or more records with a single event. For example the method may align one or more calendar entries with one or more electronic message threads that relate to the same event as determined in block . In another example the method may align two or more message threads two or more calendar entries or a combination of the foregoing which relate to the same event. In some implementations the event processor can align the two or more records using information that is common between those records. For example the event processor can match various contacts contact related attributes and event related attributes of a first record e.g. calendar entry with various contacts contact related attributes and event related attributes of a second record e.g. a message thread to determine that the records relate to the same event and then use information from both the first record and the second record when scoring and or classifying the records as discussed elsewhere herein.

The method may score the contacts associated with each record. In some implementations the event processor may score each set of contacts that correspond to each of the records by assigning importance scores to sets of contacts. Next the method may score the records based on one or more criteria. In some implementations the event processor may score the contacts by assigning importance scores to the records i.e. the electronic message threads and or calendar entries based one or more of the importance scores of the contacts assigned in block the contact related attributes and or the event related attributes.

Next the method can filter out records e.g. electronic message threads calendar entries etc. that have importance scores that do not satisfy a predetermined threshold. In some implementations the event processor compares the scores corresponding to the records to the threshold and filters out those that are less than the threshold. These unfiltered records can then be classified and processed into event related posts as discussed elsewhere herein.

Next for record C the method may classify the event reflected by the record in block by determining what type of event the event is and applying a corresponding event template. By way of example the event classifier may determine the event of record C to be a wedding and may apply an event template that includes wedding related fields and content. In some implementations the event templates may be predetermined for a plurality of different types of events using a learning algorithm stored in the data store and retrievable by the event classifier .

The method continues by processing event related attributes of the record C for information corresponding to the fields of the applied event template. For example the event classifier may populate the fields of the event template by matching the event related attributes to the fields of the template and populating those fields with the attributes that correspond.

Next the method determines whether the required field s of the applied event template can be populated completed using the event related attributes of the record C. If the required field s cannot be completed the method increments the counter and either proceeds to the next record in queue or terminates . For example the event template may include a required field and the event related attributes may not include information that matches this field. As a result the event classifier determines that the record does not include enough information to satisfactorily populate the template and either proceeds to the next record in queue or terminates. If the method determines that the required fields of the template can be completed the method can generate an event related post using the populated event template and populate a content stream of a first user with the post. The method then increments the counter and determines if the counter is greater than the number of records to be processed. If so the method terminates. Otherwise the method returns to block to process the next record in queue.

In some implementations the method may populate the content stream with the post as it processes the records or may process each of the records first and then once all the records X have been processed the method may populate the content stream with the event related posts that were generated in block .

In some implementations the method may cease for a period of time e.g. a week month year etc. and then may reinitialize to determine whether the content stream of the user still has sufficient content. In some implementations the threshold may vary based on the density of posts in the user s content stream and any content gaps that may be present. For instance if the density of posts e.g. posts per week month year etc. in the user s content stream is below a certain threshold the methods and or may iterate until sufficient content has been inserted into the users content stream to satisfy the density threshold. In some implementations if significant gaps e.g. more than two weeks a month a half a year a year etc. exists between posts or only a small number of posts e.g. 5 10 etc. were posted over a particular time period e.g. a month half a year a year etc. the methods and or may iterate until sufficient content has been inserted into the users content stream to eliminate the gaps and satisfy the density threshold .

If the method determines that the content stream of the user contains insufficient content the method may receive interaction data describing user interactions with one or more posts of the content stream e.g. comments endorsements sharing etc. . In some implementations the social network application may receive the interaction data and store it in the data store in association with the user and the learning module may receive the interaction data for the user from the data store e.g. the data store .

Next the method can determine one or more active posts i.e. the post s from the user s content stream that have been interacted with most e.g. by the user the user s friends on the social network etc. relative to the other posts in the user s content stream and can determine the event type s that correspond to the active post s . In some implementations the learning module can process the content of an active post for an event embodied by the post and then compare the event to the predetermined event types stored in the data store to determine its type.

The method can then continue by adjusting the criteria used to score records. In some implementations the event processor may modify the scores that are assigned during the processing of a subsequent set of event related records e.g. produced in a subsequent iteration based on the event type s . For example the event processor may assign scores to the records of the user based on one or more criteria and the learning module may instruct the event processor to adjust the weighting of these criteria based on the event types determined by it to be the most engaging as reflected by the interaction data . This is beneficial as it can optimize what content is being used to supplement the user s content stream based on the types of events the user and or his or her connections on the social network are most likely to engage with.

It should be understood that the methods are provided by way of example and numerous variations and or combinations of these methods as well as other methods are contemplated. For example in some implementations at least a portion of the methods represent various segments of one or more larger methods and may be concatenated or various steps of these methods may be combined or interchanged to produce other methods which are encompassed by the present disclosure. Additionally it should be understood that the methods may be iterative and thus repeated as many times as necessary to generate sufficient learning data so as to optimize the browser data based posts being promoted.

As depicted in the user interface the example content stream includes a group selector for refreshing the example content stream with posts associated with group selected in the group selector a status bar for posting a status update and or any other information on the content stream an example event based post and a scroll bar . The status bar includes a status box for inputting any textual information which a user wants to post on his her example content stream with other users an add photo button for posting photos on the example content stream an add video button for posting videos on the example content stream an add event button for posting events on the example content stream and an add link button for posting hyperlinks to various websites audio files videos files blogs etc. on the content stream .

In the depicted implementation the example event based post includes a notification bar to notify the user that the content in the example event based post is based on one of his her recent electronic messages a hyperlink to the record e.g. electronic message thread from which the example event based post has been generated a notification help button for elaborating on the information included in the notification bar metadata for displaying metadata associated with the example post including for example sender s name time at which the post is received one or more users among which the post is shared etc. a content box for displaying the contents of the post one or more attributes that have been retrieved from the electronic message to fill pre defined event template for a particular event type one or more attachments e.g. photos videos audio files etc. associated with the electronic message an endorsement button for liking and or recommending the example post a sharing button to share the example post with other users on the social network an activity informer to inform how many users have endorsed and are associated with the example post a comment bar for displaying one or more comments on the example post and a comment box for inputting a comment.

In the depicted implementation one example event based post is shown as having been based on event information retrieved from an event related record. However it should be understood that any number of event based posts may be included in the example content stream . Further while the post illustrated in is based on an electronic message thread it should be understood that any record type may be used to generate event based posts for a user on a social network including for example a calendar entry a user created event on the social network an alignment of multiple records etc. It should also be understood that the format of the post and the information displayed in the post is not limited to any specific type or size and that other variations are contemplated. For instance the client application may generate user interfaces that are compatible with smaller screen sizes like those included in various handheld mobile devices e.g. mobile phones . Moreover the user interfaces rendered by the client application may have a variety of distinct formats content positions within the window and combinations all of which are encompassed by the scope of the present disclosure.

Technology for bootstrapping a social network using event related records has been described. In the above description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of this disclosure. It should be understood however that the systems methods and computer products described herein can be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to avoid obscuring the disclosure. For example the various components operations and or features are described in some implementations above with reference to user interfaces and particular hardware. However the present disclosure applies to any type of computing device that can receive data and commands and any peripheral devices providing services.

Reference in the disclosure to one implementation an implementation some implementations etc. means that a particular feature structure or characteristic described in connection with the implementation is included in at least one implementation. The appearances of the phrase in one implementation or in some implementations in various places in the disclosure are not necessarily all referring to the same implementation s .

Some portions of the detailed descriptions above are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the above discussion it is appreciated that throughout the description discussions utilizing terms including for example processing or computing or calculating or defining or identifying or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The present disclosure also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may include a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium including for example any type of disk including floppy disks optical disks CD ROMs and magnetic disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards flash memories including USB keys with non volatile memory or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

The disclosure can take the form of an entirely hardware implementation an entirely software implementation or an implementation containing both hardware and software elements. In a preferred implementation the disclosure is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the disclosure can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

Finally the algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description above. In addition the present disclosure is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the disclosure as described herein.

The foregoing description of the implementations of the present disclosure has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the present disclosure to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the present disclosure be limited not by this detailed description but rather by the claims of this application. As will be understood by those familiar with the art the present disclosure may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise the particular naming and division of the modules routines features attributes methodologies and other aspects are not mandatory or significant and the mechanisms that implement the present disclosure or its features may have different names divisions and or formats. Furthermore it should be understood that the routines features attributes methodologies and other aspects of the present disclosure can be implemented as software hardware firmware or any combination of the three. Also wherever a component an example of which is a module of the present disclosure is implemented as software the component can be implemented as a standalone program as part of a larger program as a plurality of separate programs as a statically or dynamically linked library as a kernel loadable module as a device driver and or in every and any other way. Additionally the present disclosure is in no way limited to implementation in any specific programming language or for any specific operating system or environment. Accordingly the present disclosure is intended to be illustrative but not limiting of the subject matter set forth in the following claims.

