---

title: Method and apparatus for wireless communications in a process control or monitoring environment
abstract: A method in a communication device that implements a communication stack to wirelessly communicate with a remote device according to a general purpose wireless communication protocol, where the remote device operates in a process control environment, includes receiving a request from a software module to establish a wireless communication link with the remote device, establishing a direct connection between the software module and the communication stack, where the direct connection is free of intermediate services, and communicating process data between the software module and the remote device in accordance with an industrial automation protocol over the wireless communication link, where the wireless communication link utilizes the general purpose wireless communication protocol.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09124999&OS=09124999&RS=09124999
owner: FISHER CONTROLS INTERNATIONAL LLC
number: 09124999
owner_city: Marshalltown
owner_country: US
publication_date: 20120309
---
This application claims benefit of U.S. Provisional Patent Application No. 61 450 964 entitled Method and Apparatus for Wireless Communications in a Process Control or Monitoring Environment filed Mar. 9 2011 the disclosure of which is hereby expressly incorporated herein by reference.

The present invention relates generally to process control networks and more particularly to operating field devices via a portable device.

Operators who configure monitor and troubleshoot automated process control systems such as those used in chemical or petroleum process plants often use handheld or otherwise portable field maintenance devices to access system components in the field. Typically systems for controlling and or monitoring processes include one or more centralized or decentralized process controllers communicatively coupled to at least one host or operator workstation and to one or more process control and instrumentation devices such as for example field devices via analog digital or combined analog digital buses. Field devices which may be for example valves valve positioners switches transmitters and sensors e.g. temperature pressure and flow rate sensors are located within the process plant environment and perform functions within the process such as opening or closing valves measuring process parameters increasing or decreasing fluid flow etc. Smart field devices such as field devices conforming to the well known FOUNDATION Fieldbus hereinafter Fieldbus protocol e.g. FOUNDATION Fieldbus Version 5.1 or the HART protocol the version ratified by International Electrotechnical Commission as IEC 62591 in April 2010 for example may also perform control calculations alarming functions and other control functions commonly implemented within the process controller.

The process controllers which are typically located within the process plant environment receive signals indicative of process measurements or process variables made by or associated with the field devices and or other information pertaining to the field devices and execute controller applications. The controller applications implement for example different control modules that make process control decisions generate control signals based on the received information and coordinate with the control modules or blocks being performed in the field devices such as HART and Fieldbus field devices. The control modules in the process controllers send the control signals over the communication lines or signal paths to the field devices to thereby control the operation of the process.

Information from the field devices and the process controllers is typically made available to one or more other hardware devices such as for example operator workstations maintenance workstations personal computers handheld devices data historians report generators centralized databases etc. to enable an operator or a maintenance person to perform desired functions with respect to the process such as for example changing settings of the process control routine modifying the operation of the control modules within the process controllers or the smart field devices viewing the current state of the process or of particular devices within the process plant viewing alarms generated by field devices and process controllers simulating the operation of the process for the purpose of training personnel or testing the process control software diagnosing problems or hardware failures within the process plant etc.

While a typical process plant has many process control and instrumentation devices such as valves transmitters sensors etc. connected to one or more process controllers there are many other supporting devices that are also necessary for or related to process operation. These additional devices include for example power supply equipment power generation and distribution equipment rotating equipment such as turbines motors etc. which are located at numerous places in a typical plant. While this additional equipment does not necessarily create or use process variables and in many instances is not controlled or even coupled to a process controller for the purpose of affecting the process operation this equipment is nevertheless important to and ultimately necessary for proper operation of the process.

As is known problems frequently arise within a process plant environment especially a process plant having a large number of field devices and supporting equipment. These problems may take the form of broken or malfunctioning devices logic elements such as software routines being in improper modes process control loops being improperly tuned one or more failures in communications between devices within the process plant etc. These and other problems while numerous in nature generally result in the process operating in an abnormal state i.e. the process plant being in an abnormal situation which is usually associated with suboptimal performance of the process plant.

Field devices and other equipment may be analyzed locally in the field using handheld field maintenance devices such as Emerson 475 Communicator for example or using software applications running on general purpose portable devices such as smartphones or personal digital assistants PDAs . For example ValveLink Mobile software from Emerson Process Management can be executed on a portable device and provides set up calibration and troubleshooting functionality. In general operators find wireless connections to be convenient for most applications although some devices support both wired and wireless communications.

Typically a portable device establishes a wireless connection for transferring process control or diagnostic information to and from a field device according to a certain industrial automation protocol such as HART or Fieldbus using a virtual serial COM port. More specifically the portable device includes a wireless communication stack that supports wireless communications according to a certain standard such as Bluetooth . Emulation software supports virtual COM port functionality to serve as an interface between applications running on the portable device and the communication stack. Accordingly a software application that supports COM communications connects to a virtual COM port using the emulation software and transmits and receives data via a wireless communication link without directly interacting with the communication stack.

However communication via a virtual COM port requires a significant configuration effort. For example to configure an application on a portable device to exchange HART messages with a field device via Bluetooth a user must turn on the Bluetooth radio of the portable device pair up the portable device with a HART modem coupled to the field device establish an outbound virtual COM port associated with the paired field device direct the application to associate the virtual COM with the paired field device. Moreover after the application completes the message exchange with the paired field device the user must remember to turn off the Bluetooth radio.

In some embodiments a software application establishes a wireless communication link for exchanging process control and or monitoring data with a remote device by accessing the appropriate communication stack without opening a virtual COM port. The software application may run on a portable device such as a smartphone a PDA etc. To access the communication stack in this manner referred to herein as direct access the application may invoke one or several application programming interface functions APIs for direct manipulation of the communication stack hereinafter communication APIs . Depending on the embodiment the communication APIs correspond to synchronous or asynchronous function calls. For example the communication APIs may allow the application to directly invoke functions associated with the communication stack so that the invoked functions are in the call stack of the application. Alternatively the communication APIs allow the application to interact with a service implemented as a separate task e.g. a process a thread that services the communication stack.

The communication stack may provide short range wireless communications according to a communications standard such as Bluetooth or Infrared Data Association IrDA for example. Depending on the embodiment the communication stack is provided as a component of the operating system of the portable device or as a separately provided software component such as the WIDCOMM Bluetooth stack by Broadcom Corporation or the Bluetooth stack by the Microsoft Corporation. The communication stack may be provided via a set of standard APIs.

The software application in some embodiments invokes functions associated with the communication stack directly or via communication APIs built into the code of the application. In another embodiment the communication APIs are provided as a separately installable component such as a dynamic link library DLL for example.

In some embodiments the communication APIs enable the application to establish a wireless communication link with the remote device that operates according to a communication protocol that supports commands and or information elements specifically defined for conveying process control and or monitoring information such as HART for example.

The process control system includes one or more process controllers connected to one or more host workstations or computers which may be any type of personal computer or workstation and connected to banks of input output I O devices each of which in turn is connected to one or more field devices . The controllers which may be by way of example only DeltaV controllers sold by Fisher Rosemount Systems Inc. are communicatively connected to the host computers via for example an Ethernet connection or other communication link. Likewise the controllers are communicatively connected to the field devices using any desired hardware and software associated with for example standard 4 20 ma devices and or any smart communication protocol such as the Fieldbus or HART protocols. As is generally known the controllers implement or oversee process control routines stored therein or otherwise associated therewith and communicate with the devices to control a process in any desired manner.

The field devices may be any types of devices such as sensors valves transmitters positioners etc. while the I O cards within the banks and may be any types of I O devices conforming to any desired communication or controller protocol such as HART Fieldbus Profibus etc. In the embodiment illustrated in the field devices are standard 4 20 ma devices that communicate over analog lines to the I O card . The field devices are illustrated as HART devices connected to a HART compatible I O card A. Similarly the field devices are smart devices such as Fieldbus field devices that communicate over digital bus or to the I O cards B or B using for example Fieldbus protocol communications. Of course the field devices and the banks of I O cards and could conform to any other desired standard s or protocols besides the 4 20 ma HART or Fieldbus protocols including any standards or protocols developed in the future.

In an embodiment each of the controllers is configured to implement a control strategy using what are commonly referred to as function blocks wherein each function block is a part e.g. a subroutine of an overall control routine and operates in conjunction with other function blocks via communications called links to implement process control loops within the process control system . Function blocks typically perform one of an input function such as that associated with a transmitter a sensor or other process parameter measurement device a control function such as that associated with a control routine that performs PID fuzzy logic etc. control or an output function that controls the operation of some device such as a valve to perform some physical function within the process control system . Of course hybrid and other types of function blocks also exist. Further groups of function blocks are referred to as modules. Function blocks and modules may be stored in and executed by the controller which is typically the case when these function blocks are used for or are associated with standard 4 20 ma devices and some types of smart field devices or may be stored in and implemented by the field devices themselves which may be the case with Fieldbus devices. While the description of the control system is provided herein using function block control strategy the control strategy could also be implemented or designed using other conventions such as ladder logic sequential flow charts etc. and using any desired proprietary or non proprietary programming language.

When inspecting or setting up new equipment or when configuring or troubleshooting field devices operators sometimes must and often prefer to physically approach system components and closely observe these components during work. As indicated above operators can use the portable communicator to establish a short range wireless connection with one or several components of the system . To this end the system may include one or several access points for wireless access such as wireless modems and . In an example embodiment the wireless modem includes a wireless interface that operates according to the Bluetooth standard an adaptor to layer messages of the HART communication protocol over Bluetooth and a wired interface to exchange messages with the HART device via a corresponding wired connection. As another example the wireless modem includes a wireless interface that operates according to the Bluetooth standard an adaptor to layer messages of the Fieldbus communication protocol over Bluetooth and a wired interface to exchange messages with the Fieldbus devices and via the digital bus .

Now referring to the portable communicator includes an antenna a two way radio frequency RF module which may include digital signal processing DSP components encoders modulators etc. a computer readable memory to store data and computer programs and a processing unit to execute these instructions according to an embodiment. The RF module may support Bluetooth e.g. Bluetooth version 1.2 ratified in 2005 as the 802.15.1 protocol IrDA e.g. IrDA Physical Layer Specification v1.4 IrDA Link Access Protocol v1.1 IrDA Link Management Protocol v1.1 or another communication protocol or standard. In some embodiments the RF module communicates in accordance with a protocol ratified as one of IEEE 802.11 e.g. IEEE 802.11 2007 or 802.15 standards for example. More generally the RF module may operate in accordance with one or more suitable wireless local area network WLAN wireless personal area network WPAN near field communication NFC etc. standards. The processing unit is also coupled to a system for receiving and providing user input and output respectively. Depending on the embodiment the system includes one or more of a keypad a pointing device a screen or touch screen. Further the portable communicator may include a local power storage module such as replaceable batteries for example. In some embodiments the portable communicator complies with intrinsic safety requirements to be used safely on oil rigs or in oil refineries for example.

As discussed in more detail below the programs stored on the computer readable memory may include software components to enable the portable communicator to transmit messages according to one or more industrial automation protocols such as HART Fieldbus or Profibus over the communication protocol supported by the RF module . Next a prior art software system in which an application communicates via a wireless communication link using a virtual COM port is discussed with reference to followed by a discussion of an efficient system of in which an application accesses a wireless communication stack directly e.g. without using a virtual COM port. The software systems illustrated in may be implemented in a device such as the portable communicator .

First referring to a system includes a software framework to supports a wireless stack service that services a wireless communication stack such as Bluetooth a virtual COM port service that services one or more virtual COM ports an application for monitoring and or controlling components of a process control system using an industrial automation protocol such as HART and possibly other services and applications. The software framework may include an operating system such as Windows Mobile Symbian or Android for example. In general the software framework provides access to physical and logical resources of the portable communicator as well as basic services such as file system manipulation access to user input and output devices etc. In some embodiments the wireless stack service is integral with the software framework . Along with the corresponding hardware components the software framework defines the platform of a portable communicator.

To use the wireless communication stack serviced by the wireless stack service the application invokes one or more COM port APIs to interact with a virtual COM port which the virtual COM port service emulates. However a user must activate the wireless stack service configure the virtual COM port service and in some cases the wireless stack service establish a wireless connection with a target device and instruct the application to associate the virtual COM port with the target device. Only after the user completes these configuration steps can the application begin to exchange monitoring and or control information with the target device.

As indicated above this set up and configuration procedure is time consuming and error prone. For example referring to an example touchscreen interface screen depicted in a user must activate the connect Bluetooth utility via a control follow the steps associated with the Bluetooth setup procedure on the corresponding platform and begin a virtual COM port setup procedure by operating a control . To conduct a valve stroke test for example the user may then operate a control to invoke the appropriate software application. The application typically displays dialogues to allow the user to configure a set up a wireless connection via the virtual COM port and the Bluetooth link configured using the controls and respectively.

Moreover the configuration problems outlined above often are compounded by differences in implementation of the wireless communication stack by different vendors and more particularly by differences in configuration utilities. For example some vendors require that a user set up the virtual COM port before starting the application that will utilize the port while other vendor require that these steps be performed in the reverse order.

By contrast a system illustrated in includes an application that directly interacts with a wireless stack service via a set of APIs and therefore does not require the complex configuration associated with a virtual COM port. The application can directly interact with a wireless stack service using a set of wireless stack APIs . More specifically the application may transmit messages according to an industrial automation protocol such as HART Fieldbus Profibus etc. over the wireless communication stack supported by the portable communicator. In an embodiment the application is ValveLink Mobile sold by Emerson Process Management that provides local configuration calibration monitoring and diagnostics of a valve.

Referring back to the wireless stack service may control the RF module which may be a Bluetooth radio an IrDA communication module etc. The software components and may be stored in the memory and executed by the CPU .

In some embodiments the APIs are a set of functions exposed by the wireless stack service i.e. functions provided by the developer of the wireless stack service for sending and receiving data. In other embodiments the APIs include wrappers of the APIs exposed by the wireless stack service to define a porting layer between the application and the wireless communication stack. In one embodiment for example the APIs are provided as a separate software component such as a dynamic link library DLL for use by multiple applications.

In one example implementation the APIs support network socket communications. The APIs may define a set of platform independent functions and include for example an API for creating a new stream oriented network socket or a new datagram oriented socket an API for reading data from a network socket or writing data to a network socket an API for closing a specified network socket etc. The APIs may be similar to a Berkeley socket function library for example.

In the example system the application and the wireless stack service are separate tasks e.g. processes threads that interact using an inter process communication IPC mechanism provided by a framework . For example the framework may provide messaging a mechanism to exchange information via a shared memory region etc. Accordingly the interaction between the application and the wireless stack service may include asynchronous function calls. However the wireless stack functions of the wireless communication stack in other embodiments may be executed on the call stack of the application . In other words the application may call the functions directly or via the APIs in a synchronous manner. In at least some of these embodiments the wireless stack service is not executed as a separate task.

On the other hand in other embodiments the wireless stack APIs may interact with another task that serves as an interface between the application and the wireless stack service . In general it will be understood that a direct interaction between the application and the wireless stack functions may be implemented via function calls on the same call stack or separate call stacks and using one or several tasks according to the implementation which in turn may depend on the requirements of the framework .

To implement direct access to the wireless communication stack the application and or the wireless stack APIs may provide the functionality of a driver of the industrial automation protocol used by the application . For example if the application uses HART to monitor or control a field device the wireless stack APIs may be defined on a per command basis to emulate the timing blocking and other attributes of a HART connection. Thus the wireless stack APIs recognizes and in some of these embodiments partially executes e.g. provides a return code a progress indication a scheduling indication etc. the received HART command so as to present a HART communication link to the application . As a more specific example one of the wireless stack APIs may implement the formatting and transmission of HART command 0 zero that causes the receiving HART device to reply with the expanded device type code revision levels and the device identification number. The API may format the command cause the formatted command to be transmitted over the wireless communication stack ensure the proper timing and blocking etc. In an embodiment the API also implements a state machine to process the response to HART command 0 check for errors etc. In another embodiment the API returns control to the calling application immediately after transmitting the HART command over the communication stack and another software component e.g. a thread receives and processes a notification from the wireless stack service that a response has been received. The response or the notification is then forwarded to the application .

In general the wireless stack APIs and in some embodiments a component running as a separate task in the framework to facilitate direct access of the application to the wireless communication stack serviced by the wireless stack service provides a communication scheme associated with an industrial automation protocol e.g. a master slave configuration that is typically not provided by the communication stack of the portable communicator. For example the Bluetooth standard as is known does not provide a master slave communication protocol.

Further in some embodiments the application and or the wireless stack APIs utilize the wireless stack so as to allow other services or applications to invoke wireless stack functionality. For example if the system is implemented on a smartphone and the wireless stack service operates according to the Bluetooth standard the application uses only some of the resources of the wireless stack service and the wireless stack can transmit audio to the user s headphones for example while simultaneously communicating with a field device.

In some embodiments the wireless stack APIs may provide additional functionality such as automatically turning on the RF module see by transmitting the appropriate command to the wireless stack service for example when the user launches the application . In this manner the configuration is further simplified and the operator need not remember to activate the wireless link prior to using the application.

Further the wireless stack APIs may automatically determine the type e.g. manufacturer version of the wireless stack service and automatically select the appropriate configuration options. For example a certain wireless stack API may query the framework to determine whether the Bluetooth communication stack is a Microsoft stack or a Widcomm stack and depending on the result of the query select the appropriate sequence for automatically establishing a connection between the application and the wireless stack service .

In an embodiment the wireless stack APIs allow the application to automatically discover devices that support HART Fieldbus or another industrial automation protocol used by the application . For example the application may automatically discover HART Bluetooth modems that operate within the range of the portable communicator. The user may then select the device to which he or she wishes to connect from the list automatically generated upon launching the application . Further the wireless stack APIs may automatically attempt to establish a connection with known field devices. Moreover if desired the wireless stack APIs may allow the application to automatically reestablish lost connections.

Further in some embodiments the application and or the wireless stack APIs filter out all proximate Bluetooth devices that are not HART Bluetooth modems. To this end the application may for example cause the wireless stack service to discover all Bluetooth devices transmit a command via the corresponding Bluetooth link to determine whether the peer devices is a HART device and cause the wireless stack service to delete the device from the list of discovered devices if no response to the command is received or if the received response indicates that the device is not a HART device.

In an embodiment the application and or the wireless stack APIs implement automated power management so that the RF module efficiently uses the power storage see . If for example the application reads periodic update data from a HART sensor coupled to a HART Bluetooth modem the application can turn on the Bluetooth RF module via the wireless stack service for example in accordance with the periodic update schedule e.g. once every two seconds for a 50 millisecond period .

If desired the application in some embodiments causes the wireless stack service to turn off the RF module after the user terminates the application provided no other services or application running on the portable communicator are using the wireless stack service . Thus the user need not remember to turn off the RF module when the wireless link is not in use.

Although the forgoing text sets forth a detailed description of numerous different embodiments of the disclosure it should be understood that the scope of the invention is defined by the words of the claims set forth at the end of this patent. The detailed description is to be construed as exemplary only and does not describe every possible embodiment of the invention because describing every possible embodiment would be impractical if not impossible. Numerous alternative embodiments could be implemented using either current technology or technology developed after the filing date of this patent which would still fall within the scope of the claims defining the invention.

Thus many modifications and variations may be made in the techniques and structures described and illustrated herein without departing from the spirit and scope of the present disclosure. Accordingly it should be understood that the methods and apparatus described herein are illustrative only and are not limiting upon the scope of the invention.

