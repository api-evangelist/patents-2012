---

title: Cell-based composited windowing system
abstract: A system improves the performance of compositing individual images representing graphic layers into a composite image. The system may subdivide an image area of the composite image into cells such that for each one of the cells, either none of the graphic layers overlap within a respective one of the cells or all of the graphic layers that overlap within the respective one of the cells overlap throughout the respective one of the cells. A composition operation may be applicable to composite the respective one of the cells. The system may determine which processor generates the respective one of the cells based on which one of the processors is able to perform the type composition operation. The processor may generate the respective one of the cells by processing the composition operation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08994750&OS=08994750&RS=08994750
owner: 2236008 Ontario Inc.
number: 08994750
owner_city: Waterloo, Ontario
owner_country: unknown
publication_date: 20120611
---
Graphical user interfaces GUI Picture in Picture PiP and other types of graphical images may be composited from multiple independently rendered images. For example a GUI may contain a background image and one or more rendered graphic layers on top of the background image. The graphic layers may comprise applications task bars or any other type of graphic elements. Each one of the graphic layers may be rendered independently of the other graphic layers by individual software applications. The graphic layers may then be composited together into a single graphic layer or composited buffer which may be presented on a display device transmitted over a network or otherwise processed.

A cell based composited windowing system may include processors graphics buffers a cell identification module and a processor assignment module. The processors may include for example a CPU central processing unit a GPU graphics processing unit a 2D two dimensional engine and or a DMA Direct Memory Access controller. The graphics buffers may represent individual images to be composited into a composite image where the individual images correspond to graphic layers arranged in a stack. The cell identification module and the processor assignment module may be for example part of a composition manager that generates the composite image.

The cell identification module may subdivide an image area of the composite image into cells such that for each one of the cells a set of the graphic layers intersect a respective one of the cells and each graphic layer in the set of the graphic layers intersects the respective one of the cells throughout the respective one of the cells. In other words for each one of the cells either none of the graphic layers overlap within the respective one of the cells or all of the graphic layers that overlap within the respective one of the cells overlap throughout the respective one of the cells.

The processor assignment module may determine for each one of the cells a composition operation to composite the set of the graphic layers that intersect the respective one of the cells. For example the composition operation may be a blit bit blit or bit block transfer operation or a multi layer blend operation. The processor assignment module may also determine which processor will generate the respective one of the cells based on which processor is able to perform the respective composition operation. For example the processor assignment module may determine that a two dimensional 2D engine is to process the respective composition operation when the respective composition operation is either an opaque transaction type such as a blit operation or a two layer blend operation and a Graphics Processing Unit GPU is to process the respective composition operation when the respective composition operation is a multi layer blend operation involving more than two of the graphic layers. The manner in which the processor assignment module determines the processor that is to process the composition operation is described in more detail below.

The processor that is determined by the processor assignment module may generate the respective one of the cells of the composite image. In particular the cell may be generated by the processor executing the respective composition operation. If a combination of composition operations is needed for the composition of one of the cells then one or more of the processors may execute the composition operations for the cell.

A single pass approach may generate each cell. The composition operation may make one or more reads of the individual images and one write to a buffer representing the composite image. Multiple read and or writes to the composite image buffer when compositing any region within any cell may be unnecessary. For example an opaque cell may be read from one of the graphic buffers once and written to the composite image buffer once. For any cell in which multiple graphic layers overlap the composition operation may cause two or more reads from the individual images in the graphic buffers and a single write to the composite image buffer. In reading from and writing to the graphics buffers the processors may use a substantial portion of the bandwidth of a bus connecting the processors with the memory. The system may decrease the amount of bandwidth of the bus that is consumed by the processors when updating the graphics buffers.

The cell based composited windowing system may leverage modern GPU and 2D graphics engines. For example standards like OPENGL Open Graphics Library support multi texturing which provides an operation for reading multiple individually rendered images and blending the individual images together in a single operation in which the composite image is written to the composite image buffer once OPENGL is a registered trademark of Silicon Graphics Inc. of Mountain View Calif. . The CPU or other processor may also support such standards. Accordingly the GPU the CPU and or the 2D graphics engine may provide a standards based API application programming interface to perform cell compositing for blending cases. Each one of the cells may form a set of vertexes that may be filled in with rendered graphics such as textures during generation of the cells. Filling in areas described by vertexes maps well to many GPU architectures. 2D graphics engines may support operations like blits blits with blending and even blits with blending of multiple graphic layers in some examples. A DMA controller may also be programmed to perform operations such as blits. Accordingly the 2D engine the DMA controller the GPU and the CPU may support cell compositing.

Deciding which of the processors to use for compositing a cell may depend on the system because each system may be different. For example some systems have a fast CPU with a relatively slow GPU whereas other systems have a relatively fast GPU. Each cell may be rendered independently of the other cells so that each cell may be rendered by a selected one of the processors. For example the DMA controller may fill the opaque cells with a blit operation and the GPU may composite the cells that require blending. Alternatively or in addition composition of the cells in which the graphic layers are to be blended may be divided between the GPU and the 2D engine. In some implementations one of the processors such as the 2D engine may consume less power than another one of the processors such as the GPU. The processor that consumes less power than other processors may be selected when the processor is able to process the composition operation. Alternatively or in addition the processor that consumes less power may be selected when the load on that processor is below a threshold level. Alternatively or in addition directing the first one of the processors to process a subset of the composition operations may reduce the chance of cache swapping in other words thrashing in the second processor. Any combination of processors and any rule for routing the composition operations to the processors may be included in the cell based composited windowing system.

The memory interface may be any component that manages the transportation of data going to and from the memory such as between the processors and the memory . The memory interface may be any memory controller such as a Memory Chip Controller MCC a Double Data Rate2 DDR2 memory controller used to drive DDR2 SDRAM double data rate synchronous dynamic random access memory a Peripheral Component Interconnect PCI bus controller or any other type of memory controller. The memory interface may communicate with the memory over a bus such as a 64 bit DDR2 bus operating at 400 Megahertz or any other type of bus. One or more of the processors such as the DMA controller may be included in the memory interface .

The memory may be any device for storing and retrieving data or any combination thereof. The memory may include non volatile and or volatile memory such as a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or a flash memory. Alternatively or in addition the memory may include an optical magnetic hard drive or any other form of data storage device.

The memory may store computer code such as a composition manager . The computer code may include instructions executable with one or more of the processors . The computer code may be written in any computer language such as C C assembly language shader code channel program code and or any combination of computer languages.

The memory may include graphics buffers . The graphics buffers may include individual images that represent graphic layers such as the three graphic layers illustrated in which are individually designated A B and C respectively. In particular the images may represent the graphic layers that are to be composited into a composite image stored in one or more of in the graphics buffers .

The composition manager may be any component that composites or directs the composition of the individual images into the composite image . The images may include windows generated by a windows based operating system such an operating system for a mobile electronic device a desktop computer or a server. Examples of the windows based operating system may include MICROSOFT WINDOWS which is a registered trademark of Microsoft Corporation of Redmond Wash. LINUX which is a registered trademark of Linus Torvalds of Finland and ANDROID which is a trademark of Google Inc. of Mountain View Calif. Alternatively or in addition any of the images may include a task bar a background picture a frame in a sequence of frames in a video or any other type of digital image.

Each one of the images may represent a corresponding one of the graphic layers . The images represented by the graphic layers may have any size and may be arranged in any order and or position. The graphic layers may be arranged or stacked along a depth dimension so that when the composition manager combines the graphic layers the composition manager forms the composite image of the graphic layers in multiple dimensions such as two dimensions. If the graphic layers overlap then the composition manager may merge the overlapping portion or portions. The composite image may have an image area that is different from the sizes of the graphic layers being composited. The graphic layer or the graphic layers may also be referred to as the layer or the layers .

In for example layer A is the lowest layer layer B is the next lowest layer and layer C is the highest layer. Layer A has the same size as the image area of the composite image . Layers B and C are smaller than the image area of the composite image . All of layers B and C overlap layer A. A portion of layer C overlaps layer B.

During operation of the cell based composited system the composition manager may combine or merge the images representing the layers into the composite image . In particular the composition manager may merge the layers by subdividing the image area of the composite image into cells assigning each one of the cells to a corresponding one of the processors and processing each cell with the corresponding assigned processor .

The composition manager may arrange the cells differently than illustrated in . For example two or more of the cells may be combined to form one cell. In one such example the cells that are designed A in may be combined to form one cell. The cells may have a rectangular shape as illustrated in or any other shape.

The composition manager may composite each of the cells from the set of the layers in a manner that may depend on whether the respective one of the cells intersects just one of the layers and or based on how the layers that overlap within the respective one of the cells are to be combined. For example if the cell intersects just one of the layers then the cell in the composite image may be generated by a blit operation which may comprise a memory copy operation. The blit operation may copy memory from the graphics buffer that includes the intersected layer to the graphics buffer that includes the composite image . Alternatively if the cell intersects multiple layers and a top one of the intersected layers obscures the remaining intersected layers then the cell in the composite image may be generated by a blit operation. For example the blit operation may copy memory from the graphics buffer that includes the top layer to the graphics buffer that includes the composite image . Alternatively or in addition if the cell intersects two layers and the top layer is transparent then then the cell in the composite image may be generated by a blit operation that copies memory from the graphics buffer that includes the bottom layer to the graphics buffer that includes the composite image . Alternatively if the cell intersects multiple layers and the top layer is semitransparent then the multiple layers may be blended with a blending operation such an alpha blending operation.

Thus the composition manager may composite each one of the cells based on what type of a composition operation is applicable to the set of layers that intersect the cell . The type of the composition operation may be any type of operation that may generate the cell of the composite image . The composition operation may blend or copy pixel information or any other representation of image data. Examples of the type of the composition operations include an opaque transaction type a blended transaction type or any other type of operation.

The opaque transaction type may be a type of an operation that generates the cell from one of the layers . Examples of the composition operations that are of the opaque transaction type include a single texture fill and a source destination blit operation. The source destination blit operation may copy memory from one buffer to another.

The blended transaction type may be a type of operation that generates the cell from a combination of two or more of the layers . Examples of the composition operations that are of the blended transaction type include a multi layer blend operation a two layer blend operation a multi texture standard command a blit with blend or multi source blend or any other type of composition operation . The two layer blend operation may blend two of the layers . The multi layer blend operation may blend any number of the layers .

The composition operations may include one or more commands that may be completed by one or more of the processors . The composition operations may be in a graphics language such as OPENGL a registered trademark of Silicon Graphics Inc. of Mountain View Calif. Alternatively or in addition the composition operations may be in any other suitable language such as in input output commands for DMA controllers. Alternatively or in addition the composition operations may be executed by invoking a procedural call in an API application programming interface .

Each one of the processors may be able to perform one or more types of the composition operations . For example the DMA controller may be able to perform the composition operations that are the opaque transaction type but not the blended transaction type. The 2D engine may be able to perform the blit operations and the two layer blend operations but not the multi layer blend operations where more than two of the layers are to be blended. The GPU may be able to perform both the opaque transaction type and the blended transaction type. Alternatively the DMA controller the 2D engine and the GPU may be able to perform different types of composition operations .

The composition manager may determine which of the processors is to process the composition operation for each one of the cells . The composition manager may route the composition operation for each one of the cells to a corresponding one of the processors that has the ability to process the composition operation .

The composition manager may route the composition operation to the corresponding one of the processors in many ways. For example the composition manager may pass an instruction or code to the processor . For example the composition manager may pass the composition operation in the form of shader code to the GPU . Alternatively or in addition the composition manager may invoke an API to direct the processor to perform the composition operation . For example the 2D engine may accept a blit command. However rather than passing the 2D engine the blit command the composition manager may determine what memory should be copied where in order to complete the blit command and pass a corresponding copy command directly to the DMA controller to be processed.

The composition manager may apply one or more rules when routing the composition operations to the processors . A rule may be to direct a first one of the processors to process one or more types of the composition operations and to direct a second one of the processors to process any other type of the composition operations . For example a rule may be to direct the 2D engine to the process the blit operations and or the two layer blend operations and to direct the GPU to process multi layer blend operations that blend more than two of the layers .

A rule may route the composition operations to a main one of the processors but if the main processor is busy then route the composition operations to a second one of the processors . For example a rule may direct the GPU to process the composition operations when a load on the GPU is below a threshold level and direct the CPU and or the 2D engine to process the composition operations when the load on the GPU is above the threshold level. Alternatively or in addition a rule may route the composition operations to a least loaded one of the processors that is capable of processing the composition operation . The load level of one or more of the processors may be available to the composition manager for applying one or more of the rules for routing the composition operations .

As discussed the composition manager may direct a corresponding one of the processors to composite each one of the cells with the composition operations . Each one of the cells may be composited independently of the other cells . The cells may be composited in parallel. For example a first one of the processors may composite a first one of the cells while a second one of the processors composites a second one of the cells . The first one of the processors may composite the first one of the cells by processing the composition operation for the first one of the cells . At the same time the second one of the processors may composite the second one of the cells by processing the composition operation for the second one of the cells . If the processors include the CPU the 2D engine and the GPU for example then the processors may composite three of the cells in parallel each one of the CPU the 2D engine and the GPU may composite a corresponding one of the three cells .

Referring to the composition manager may include a cell composition controller that handles tasks related to the cells . The cell composition controller may include a cell identification module and a processor assignment module .

The cell identification module may identify the cells by subdividing the image area of the composite image into the cells . The cell identification module may use any number of mechanisms for subdividing the image area . For example the cell identification module may use a bottom up or a top down mechanism where the cells are identified as each of the layers is applied. For example in the bottom up mechanism the cell identification module may start with the bottom layer and iteratively apply each successive one of the layers until the top layer is reached identifying the cells on each iteration. In the example illustrated in the cell identification module may start with layer A which is a rectangle that covers the image area of the composite image . The cell identification module may apply layer B which is a rectangle enclosed by layer A. The cell identification module may provisionally identify the cells as comprising five cells the rectangle that is layer B and four rectangular cells that surround layer B which together cover the portion of layer A not covered by layer B. The cell identification module may then apply layer C which is a rectangle that overlaps layer B and which is enclosed by layer A. The cell identification module may identify the cells as the cells illustrated in by overlaying the rectangle that is layer C onto the five cells identified when layer B was applied.

The cell identification module may use layer information stored in the memory to identify the layers . The layer information may include information about each one of the layers such as the size and position of each of the layers and an alpha value and or opaqueness value for each one of the layers . The cell identification module may generate cell information that includes information about each one of the cells . The cell information may include the size and position of the cell . The cell information may include more less or different information. For example the cell information may include the composition operation or the composition operations to composite the cell the type of composition operation to composite the cell and or any other information applicable to the cell .

The processor assignment module may determine which of the processors is to composite each respective one of the cells as described herein. The processor assignment module may determine the assigned processor for each one of the cells from the layer information and or the cell information . For example the processor assignment module may determine the composition operation for each one of the cells by determining which of the layers intersect the cell from the cell information and then determine how the layers are to be combined from the properties of the layers as indicated in the layer information . The processor assignment module may also composite each respective one of the cells with the determined one of the processors by providing the composition operation for the respective one of the cells to the determined one of the processors .

In some embodiments the system may keep track of dirty regions of the individual images represented in the layers . illustrates the dirty regions of the individual images . The dirty regions in each of the images may identify what portion of each individual image changed from a first frame to a second frame. When updating the individual images in the graphics buffers to the second frame the system may limit the updates to the portions of the individual images included within the dirty regions .

The processor assignment module may determine which of the cells of the composite image intersect the dirty regions of the individual images . The cells that intersect the dirty regions of the individual images being composited may be referred to as dirty cells . For example in the dirty regions intersect the cells designated A C and the cell in the upper left corner of the image area designated A. The processor assignment module may direct the processors to composite the dirty cells but skip compositing the cells that are not the dirty cells .

All of the disclosure regardless of the particular implementation described is exemplary in nature rather than limiting. The cell based composited windowing system may include additional fewer or different components than illustrated in . For example the system may include a display controller and a display device . The display controller may read the composite image from the memory through the memory interface and cause the composite image to be displayed in the display device .

Furthermore each one of the components of the cell based composited windowing system may include more fewer or different elements than is illustrated in . For example the memory may include more fewer or different modules graphics buffers and applications. Moreover the various modules are but one example of such functionality and any other configurations of modules encompassing similar functionality are possible. The cell composition controller for example may be included in a different component than the composition manager . In another example one or more of the features of the cell identification module may be implemented in a different module. Flags data databases tables entities and other data structures may be separately stored and managed may be incorporated into a single memory or database may be distributed or may be logically and physically organized in many different ways. The components may operate independently or be part of a same program. The components may be resident on separate hardware such as separate removable circuit boards or share common hardware such as a same memory and processor for implementing instructions from the memory. Programs may be parts of a single program separate programs or distributed across several memories and processors.

In some examples one or more of the components of the system may be included in a System on a Chip SOC . For example the SOC may include the processors the memory interface and the display controller . In another example the SOC may include additional components such as memory. Some implementations of the SOC may include a 2D engine that has different features than other implementations of the SOC . In other implementations of the SOC the SOC may not include the 2D engine .

The system may include a configuration file that identifies multiple types of systems and or types of systems on a chip. The configuration file may also identify the types of processors in each of the identified systems. During operation of the system the system may look up the system and or the SOC in the configuration file and identify the processors and or the types of the processors available in the system from the configuration file. The processor assignment module may determine the processor to process the composition operation based on a lookup of the identity of the SOC in a configuration file where the SOC comprises at least one of the processors . For example the configuration file may indicate what types of the composition operations the processors in the SOC are able to process.

The system may be implemented in many different ways. For example although some features are shown stored in computer readable memories as logic implemented as computer executable instructions or as data structures in memory portions of the system and its logic and data structures may be stored on distributed across or read from any other machine readable storage media. Examples of the media may include memories a cache a buffer RAM a removable media a hard drive hard disks floppy disks CD ROMs or any other type of machine readable or computer readable storage medium. The media may include any non transitory computer readable storage media such as CD ROMs volatile or non volatile memory such as RAM and ROM any other suitable storage device or any combination thereof. Alternatively or in addition features and or modules described as logic implemented as computer executable instructions or as data structures in memory may be implemented in hardware or in a combination of hardware and software such as in a field programmable gate array FPGA .

As one example each one of the processors may be implemented as a microprocessor a microcontroller a DSP digital signal processor an application specific integrated circuit ASIC a field programmable gate array FPGA a digital circuit an analog circuit discrete logic any other type of circuit or logic or any combination thereof. As another example the memory may include non volatile and or volatile memory such as a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM flash memory any other type of memory now known or later discovered or any combination thereof. The memory may include an optical magnetic hard drive or any other form of data storage device.

The functions acts or tasks illustrated in the figures or described may be executed in response to one or more sets of logic or instructions stored in or on computer readable media. The functions acts or tasks are independent of the particular type of instructions set storage media processor or processing strategy and may be performed by software hardware integrated circuits firmware micro code and the like operating alone or in combination. Likewise processing strategies may include multiprocessing multitasking parallel processing distributed processing and or any other type of processing. In one embodiment the instructions are stored on a removable media device for reading by local or remote systems. In other embodiments the logic or instructions are stored in a remote location for transfer through a computer network or over telephone lines. In yet other embodiments the logic or instructions are stored within a given computer central processing unit CPU graphics processing unit GPU or system.

The processing capability of the system may be distributed among multiple entities such as among multiple processors and memories optionally including multiple distributed processing systems. Parameters and other data structures may be separately stored and managed may be incorporated into a single memory or database may be logically and physically organized in many different ways and may be implemented with different types of data structures such as linked lists hash tables or implicit storage mechanisms. Logic such as programs or circuitry may be combined or split among multiple programs distributed across several memories and processors.

The logic may start by subdividing the image area of the composite image into the cells such that for each one of the cells either none of the graphic layers overlap within a respective one of the cells or all of the graphic layers that overlap within the respective one of the cells overlap throughout the respective one of the cells . Any number of algorithms may be used to subdivide the image area into the cells .

The composition operation may be determined for each of the cells . The composition operation may be applicable to composite a set of the graphic layers that intersect the respective one of the cells .

For each of the cells a determination may be made as to which of the processors is to generate the respective one of the cells based on which of the processors is able to perform the type of the composition operation . The respective one of the cells of the composite image may be generated from the set of the graphic layers that intersect the cell . In particular each cell may be generated by performing the respective composition operation with the processor that was determined to be the processor to generate the cell . The logic may end for example by displaying the composite image or otherwise reading the composite image from the graphics buffers .

The logic may include additional different or fewer operations. For example the logic may limit the cells that are composited to the cells that intersect the dirty regions of the individual images . The operations may be executed in a different order than illustrated in .

To clarify the use of and to hereby provide notice to the public the phrases at least one of . . . and or at least one of . . . or combinations thereof or . . . and or are defined by the Applicant in the broadest sense superseding any other implied definitions herebefore or hereinafter unless expressly asserted by the Applicant to the contrary to mean one or more elements selected from the group comprising A B . . . and N that is to say any combination of one or more of the elements A B . . . or N including any one element alone or in combination with one or more of the other elements which may also include in combination additional elements not listed.

While various embodiments have been described it will be apparent to those of ordinary skill in the art that many more embodiments and implementations are possible within the scope of the disclosure. Accordingly the disclosure is not to be restricted except in light of the attached claims and their equivalents.

