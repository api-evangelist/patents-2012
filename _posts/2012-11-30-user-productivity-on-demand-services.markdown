---

title: User productivity on demand services
abstract: The present disclosure involves systems, software, and computer implemented methods for providing user productivity on-demand services. One process includes operations for determining a hosted service for use with an application at a client based on user context data associated with the application. A request for the hosted service and a reference to stored data required for the hosted service is received. The hosted service is executed, and the results are transmitted to the client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08655948&OS=08655948&RS=08655948
owner: SAP AG
number: 08655948
owner_city: Walldorf
owner_country: DE
publication_date: 20121130
---
This application claims priority under 35 USC 119 e to U.S. patent application Ser. No. 12 643 725 filed on Dec. 21 2009 the entire contents of which are hereby incorporated by reference.

The present disclosure relates to software computer systems and computer implemented methods for user productivity on demand services.

In some computing models resources such as software and storage space are accessed by clients locally at for example a client s desktop computer. The software can be stored and executed from the client s local memory and further upgrades or features of the software are provided by installing new versions of the software directly on the client computer. Likewise the client computer may utilize only a local hard disk drive for storage space. The increased use of high bandwidth networks and data connections and high capacity data storage servers has resulted in the implementation of other computing models such as cloud computing solutions. In cloud computing solutions resources services enhanced functionality or software can be provided to a client computer across a network. Cloud computing models can also be used to provide shared access and remote storage of data to users. In cloud computing solutions computing resources are provided as hosted services across a network such as the Internet.

End users of software applications may frequently work in a corporate environment with an information technology IT department. Improvements in the end users productivity may require involvement of existing IT maintenance and administration processes. For example upgrades to the software applications may require installation of a complete software package provided by an existing IT department. The end user may be limited to software versions that have been installed by the IT department if the end user s employer has not upgraded to more up to date versions of the application. In particular end users that work in heterogeneous environments may interact with other end users that use different versions of various applications. Certain end users may use web application user interface technology when interacting with other systems or older versions of a front end enterprise portal. The ever growing and changing demands of businesses may dictate quick updates and release of new features or applications from software developers. In some instances an older version of an application is used merely because the end users employer may not have adopted the newest version. Accordingly some end users of a particular application may be forced to interface with other end users of the particular application using different versions of the same application. Further the end user s productivity may be limited by the lack of enhanced functionality and configuration options of the application. Users outside of the end user s IT environment may work with applications similar to the end user s application that have a particular configuration of the application based on the users roles within the working environment. These configurations and preferences implemented by other users may be inaccessible to the user or may require a complete software upgrade due to the restrictions inherent in an existing corporate IT infrastructure.

The present disclosure involves systems software and computer implemented methods for providing user productivity on demand services. A computer program product is encoded on a tangible storage medium where the product comprises computer readable instructions for causing one or more processors to perform operations. These operations can include operations for determining a hosted service for use with a client application based on user context data associated with the client application. A request is received for the hosted service and a reference to stored data required for the hosted service. The hosted service is executed and the results are transmitted to a client.

While generally described as computer implemented software embodied on tangible media that processes and transforms the respective data some or all of the aspects may be computer implemented methods or further included in respective systems or other devices for performing this described functionality. The details of these and other aspects and embodiments of the present disclosure are set forth in the accompanying drawings and the description below. Other features objects and advantages of the disclosure will be apparent from the description and drawings and from the claims.

This disclosure generally describes computer systems software and computer implemented methods for providing on demand services to an end user. On demand services can be hosted services that are provided over a network such as the Internet in a cloud computing implementation. In some implementations the hosted services are computing resources such as business applications software data and storage space that are stored or located at servers within the cloud computing network but that are provided to an end user directly over the Internet or accessed by the end user from a web browser. Thus an existing business application can be complemented with additional features or even replaced with an entirely new business application through the cloud computing network without the installation of new software on a client computer or the involvement of an information technology IT department. In addition data for improving user productivity can be shared among multiple end users through the cloud computing network such as for example preferred business application configuration data or other information associated with best practices. To meet the ever growing and changing demands of businesses a user of a business application can be provided with a flexible integrated and self service work environment.

In certain implementations an end user of a business application requests an on demand service available from a cloud computing network. User context metadata associated with the business application is identified and transmitted to the cloud computing network. Updated metadata associated with the on demand service comprising additional features of the business application is received from the cloud computing network. The updated metadata is then applied to a user interface associated with the business application allowing the end user to utilize the requested on demand service without acquiring additional software for installation on the end user s computer. In other implementations an end user of a business application stores configuration settings of the business application. The configuration settings and situational data associated with the end user is transmitted as user context data to a server in the cloud computing network. Based on the user context data recommendations for improving productivity such as suggested configuration settings are generated and transmitted to the end user.

One potential benefit of such techniques is that end users are given the freedom and ability to access use or share newer services features or functionality of an existing application without the need to install a newer version of the application. For example a particular business application product may be installed across a broad range of client computers associated with various end users. The end users may use the business application in connection with a business organization and within a particular IT environment maintained by the business organization. After a certain period of time the software developers of the business application may have released additional features or an entirely new version of the business application to improve the productivity of users of the business application. Using the techniques of the present disclosure the end users of the business application can then access the newly released features of the business application by requesting the features as part of on demand hosted services through a cloud computing network. Thus the end users can use new features of the business application according to each end user s specific need or role within a business organization and without the need for approval or installation from the business organization s IT department. In other words the end user can manage the productivity of the client application because the end user is aware of his own requirements and has access to resources on the Internet. The end users of an existing application can choose to increase their own productivity without intrusion in existing IT maintenance and administration processes.

In addition other benefits can be realized from the techniques of the present disclosure. For example new on demand services can be delivered to an end user without requiring the end user to upgrade existing technology. These new on demand services can be hosted services that have been identified in a cloud computing network as having particular relevance for an end user based on the end user s particular role within an organization. Further a new version of a business application or an entirely new application can be distributed to users in smaller components that can be consumed in an on demand fashion. Similarly user productivity enhancements can be delivered to end users independently of application release cycles. Thus the end user can enhance productivity even if the end user s employer is not upgrading to an updated version of the application. Finally an end user can access and apply business application configuration settings that have been used by other end users having similar roles within their respective organizations. This allows end users to optimize interactions with frequently used applications and tools and as a result increase user productivity. Also the distribution of application configuration settings allows the end users to network and collaborate with other end users dealing with similar productivity issues.

From a business customer s perspective new upgrades and services released by software developers can be distributed to employees on a case by case basis or provided in a narrowly tailored manner according to the business customer s requirements. The benefit to the business customer is that the business customer can scale its technology on a more flexible basis without requiring wholesale turnover of the business customer s existing applications or business infrastructure. Further some business customers may not have the resources IT infrastructure or technical capability to implement large scale upgrades or installation of up to date business applications and the distribution of on demand services as described in the present disclosure may allow for small or mid sized business customers to access the most current releases provided by software developers in an efficient manner. Moreover on demand services provided to the business customers allows the business customers to avoid lengthy rollout times of business software applications. Business customers can minimize or reduce expenses related to time consuming deployment of servers software and IT personnel required at each location. New locations and user services can be rolled out more quickly using on demand services while avoiding the unpredictable expenses associated with large scale business application upgrades or installations.

Additional benefits include an increase in productivity across the entire business network and across different security domains. In other words providing hosted services beyond a particular security domain managed by a particular firewall is typically limited by the difficulties associated with protecting sensitive information and providing the security required for a business environment. The on demand services of the present disclosure however can be accessed and provided across corporate boundaries securely. Further the users and the business community can provide data concerning particular needs and solutions for increasing user productivity through on demand services. The developers of the on demand services can respond accordingly based on contributions from the community and the development of the business applications progresses at a speed based on the needs of the business customers.

Turning to the illustrated example illustrates an example environment for providing on demand services to an end user. The illustrated environment includes or is communicably coupled with one or more servers and one or more clients at least some of which communicate across network . In some implementations the one or more servers provide a set of services to the client and they can be logically grouped and accessible within a cloud computing network . In general environment depicts an example configuration of a system capable of providing on demand services to clients without installation of new software or intervention from an IT department. The environment also supports a system capable of enabling users to share and distribute configuration settings of an application.

The illustrated environment of includes one or more clients . Each client may be any computing device operable to connect to or communicate with other computing devices via the network or with at least the servers or using a wireline or wireless connection. Further as illustrated by client each client includes a processor an interface a graphical user interface GUI a client application and a memory . In some implementations a server application can be executed at a server but accessed and displayed at client in GUI . The server application is hosted in memory at server which can be physically located on the premises of client . In general each client comprises an electronic computer device operable to receive transmit process and store any appropriate data associated with the environment of . It will be understood that there may be any number of clients associated with or external to environment . For example while illustrated environment includes two clients and alternative implementations of environment may include a single client communicably coupled to the servers or any other number suitable to the purposes of the environment . Additionally there may also be one or more additional clients external to the illustrated portion of environment that are capable of interacting with the environment via the network . Further the terms client user and end user may be used interchangeably as appropriate without departing from the scope of this disclosure. Moreover while each client is described in terms of being used by a single user this disclosure contemplates that many users may use one computer or that one user may use multiple computers.

As used in this disclosure client is intended to encompass a personal computer touch screen terminal workstation network computer kiosk wireless data port smart phone personal data assistant PDA one or more processors within these or other devices or any other suitable processing device. For example each client may comprise a computer that includes an input device such as a keypad touch screen mouse or other device that can accept user information and an output device that conveys information associated with the operation of servers and or the client itself including digital data visual information the client application server application or the GUI . Both the input and output device may include fixed or removable storage media such as a magnetic storage media CD ROM or other suitable media to both receive input from and provide output to users of the clients through the display namely the GUI

Generally example client may be communicably coupled with a network that facilitates wireless or wireline communications between the components of the environment i.e. between each client as well as between client and servers and as well as with any other local or remote computer such as additional clients servers or other devices communicably coupled to network but not illustrated in . In the illustrated environment network is illustrated as a single network in but may be a continuous or discontinuous network without departing from the scope of this disclosure so long as at least a portion of the network may facilitate communications between senders and recipients. The network may be all or a portion of an enterprise or secured network while in another instance at least a portion of the network may represent a connection to the Internet. In some instances a portion of the network may be a virtual private network VPN such as for example the connection between the clients and and one or more servers and . Further all or a portion of the network can comprise either a wireline or wireless link. Example wireless links may include 802.11a b g n 802.20 WiMax and or any other appropriate wireless link. In other words the network encompasses any internal or external network networks sub network or combination thereof operable to facilitate communications between various computing components inside and outside the illustrated environment . The network may communicate for example Internet Protocol IP packets Frame Relay frames Asynchronous Transfer Mode ATM cells voice video data and other suitable information between network addresses. The network may also include one or more local area networks LANs radio access networks RANs metropolitan area networks MANs wide area networks WANs all or a portion of the Internet and or any other communication system or systems at one or more locations.

In the illustrated environment each of the clients may belong to a network that is maintained by an organization such as a company. The organization may incorporate clients into a security domain to reduce security risks to the organization s data accessible via network . Accordingly communication between clients and server within the organization s network and computing devices external to the organization such as servers within cloud computing network for example may be governed by a firewall . Firewall may comprise any device or set of devices configured to monitor and control data communications between different security domains i.e. between devices connected via network and servers within the cloud computing network . Firewall can be implemented in either hardware or software or both. The organization may have an information technology IT department that manages firewall as well as the installation of applications on each client and server .

Client may have access to resources external to the firewall including computing devices other networks such as the Internet and servers within cloud computing network . The servers within the cloud computing network comprise a cloud computing platform for providing cloud based services. The terms cloud cloud computing and cloud based may be used interchangeably as appropriate without departing from the scope of this disclosure. Cloud based services can be hosted services that are provided by servers and delivered across a network to a client platform to enhance supplement or replace applications executed locally on a client computer. Clients can use cloud based services to quickly receive software upgrades applications and other resources that would otherwise require a lengthy period of time before the resources can be delivered to the client .

As described in the present disclosure on demand services can include multiple types of services such as products actionable analytics enterprise portals managed web content composite applications or capabilities for creating integrating and presenting business applications. For example the cloud based implementation of the present disclosure can allow clients to transparently upgrade from an older user interface platform to newer releases of the platform without loss of functionality. Users of a server application can also obtain suggested configuration settings for use with server application based on user context data associated with the user. Based on the user s own self configuration settings and on user context data comprising situational data associated with the user recommendations for increasing productivity for the user can be provided to the user.

Further users can register in a cloud based environment which allows the users to download additional features and capabilities to enhance the user s productivity on demand rather than relying on on premise applications provided by a user s employer for example to increase user productivity features. The users can also store the user context data on a cloud based server which allows sharing knowledge with other users and increasing the speed at which new user productivity features are provided. Still further additional features and services designed to augment an existing transaction or application can be provided graphically such as in the form of a side panel. The side panel can interact with existing applications and transactions and visually represent additional on demand services that the user can select as needed. The side panel can also act as a document management service allowing users to add and store via the side panel attachments relevant to the user s current working context. Help services can also be enhanced via the side panel. For example in addition to basic help content provided by an on demand application users can also integrate existing help content from a hosted environment or any other help providing environments. Furthermore such help information can be shared among other users via on demand services.

Additional on demand services can also be implemented using the techniques described in the present disclosure. A tagging infrastructure and application interrogation APIs application programming interface can be used to augment and enhance existing applications. Applications can be interrogated to identify data objects for annotation via tags. The cloud computing environment can then attach on demand services to particular annotated and tagged objects such as search mail and financial data services. Thus different applications and services can be coupled and augmented without changing the source code to the underlying applications. Moreover on demand services for automating tasks can record user interaction sequences and play the sequences back as needed so that users do not have to repeat repetitive tasks. Personal workflows can be optimized and elements of an application can work more effectively together using on demand services for automating tasks. In addition collaboration and decision making tools can be integrated into the existing customer landscape using on demand services. Also users can be enabled to create portal pages containing static content in conjunction with applications. Still further existing applications can be simplified using on demand services so that only the elements and information needed for the current task performed by the application are shown to a user.

In general server is any server that stores one or more hosted applications where at least a portion of the hosted applications are executed via requests and responses sent to users or clients within and communicably coupled to the illustrated environment of . For example server may be a Java 2 Platform Enterprise Edition J2EE compliant application server that includes Java technologies such as Enterprise JavaBeans EJB J2EE Connector Architecture JCA Java Messaging Service JMS Java Naming and Directory Interface JNDI and Java Database Connectivity JDBC . In some instances the server may store a plurality of various hosted applications while in other instances the server may be a dedicated server meant to store and execute only a single hosted application . In some instances the server may comprise a web server where the hosted applications represent one or more web based applications accessed and executed via network by the clients of the system to perform the programmed tasks or operations of the hosted application .

At a high level the server comprises an electronic computing device operable to receive transmit process store or manage data and information associated with the environment . The server illustrated in can be responsible for receiving application requests from one or more server applications associated with the clients of environment and responding to the received requests by processing said requests in the associated hosted application and sending the appropriate response from the hosted application back to the requesting server application . Alternatively the hosted application at server can be capable of processing and responding to local requests from a user accessing server locally. Accordingly in addition to requests from the external clients illustrated in requests associated with the hosted applications may also be sent from internal users external or third party customers other automated applications as well as any other appropriate entities individuals systems or computers.

As used in the present disclosure the term computer is intended to encompass any suitable processing device. For example although illustrates a group of servers environment can be implemented using computers other than servers including a server pool. Indeed server may be any computer or processing device such as for example a blade server general purpose personal computer PC Macintosh workstation UNIX based workstation or any other suitable device. In other words the present disclosure contemplates computers other than general purpose computers as well as computers without conventional operating systems. Further illustrated server may be adapted to execute any operating system including Linux UNIX Windows Mac OS or any other suitable operating system. According to one embodiment server may also include or be communicably coupled with a mail server.

In the present implementation and as shown in the server includes a processor an interface a memory and one or more hosted applications . The interface is used by the server for communicating with other systems in a client server or other distributed environment including within environment connected to the network e.g. client as well as other systems communicably coupled to the network . Generally the interface comprises logic encoded in software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interface may comprise software supporting one or more communication protocols associated with communications such that the network or interface s hardware is operable to communicate physical signals within and outside of the illustrated environment .

As illustrated in server includes a processor . Although illustrated as a single processor in two or more processors may be used according to particular needs desires or particular embodiments of environment . Each processor may be a central processing unit CPU a blade an application specific integrated circuit ASIC a field programmable gate array FPGA or another suitable component. Generally the processor executes instructions and manipulates data to perform the operations of server and specifically the one or more plurality of hosted applications . Specifically the server s processor executes the functionality required to receive and respond to requests from the clients and their respective client applications or server applications as well as the functionality required to perform the other operations of the hosted application .

Regardless of the particular implementation software may include computer readable instructions firmware wired or programmed hardware or any combination thereof on a tangible medium operable when executed to perform at least the processes and operations described herein. Indeed each software component may be fully or partially written or described in any appropriate computer language including C C Java ABAP Advanced Business Application Programming Visual Basic assembler Perl any suitable version of 4GL as well as others. It will be understood that while portions of the software illustrated in are shown as individual modules that implement the various features and functionality through various objects methods or other processes the software may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate. In the illustrated environment processor executes one or more hosted applications on the server

At a high level each of the one or more hosted applications is any application program module process or other software that may execute change delete generate or otherwise manage information according to the present disclosure particularly in response to and in connection with one or more requests received from the illustrated clients and their associated client applications or server applications . In certain cases only one hosted application may be located at a particular server . In others a plurality of related and or unrelated hosted applications may be stored at a single server or located across a plurality of other servers as well. In certain cases environment may implement a composite hosted application . For example portions of the composite application may be implemented as Enterprise Java Beans EJBs or design time components may have the ability to generate run time implementations into different platforms such as J2EE Java 2 Platform Enterprise Edition ABAP Advanced Business Application Programming objects or Microsoft s .NET among others. Additionally the hosted applications may represent web based applications accessed and executed by remote clients or server applications via the network e.g. through the Internet . Further while illustrated as internal to server one or more processes associated with a particular hosted application may be stored referenced or executed remotely. For example a portion of a particular hosted application may be a web service associated with the application that is remotely called while another portion of the hosted application may be an interface object or agent bundled for processing at a remote client . Moreover any or all of the hosted applications may be a child or sub module of another software module or enterprise application not illustrated without departing from the scope of this disclosure. Still further portions of the hosted application may be executed by a user working directly at server as well as remotely at client .

In general the server also includes memory for storing data and program instructions. Memory may include any memory or database module and may take the form of volatile or non volatile memory including without limitation magnetic media optical media random access memory RAM read only memory ROM removable media or any other suitable local or remote memory component. Memory may store various objects or data including classes frameworks applications backup data business objects jobs web pages web page templates database tables repositories storing business and or dynamic information and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto associated with the purposes of the server and its one or more hosted applications . Still further memory may include any other appropriate data such as VPN applications firmware logs and policies HTML files data classes or object interfaces unillustrated software applications or sub systems firewall policies a security or access log print or other reporting files as well as others.

While is described as containing or being associated with a plurality of elements not all elements illustrated within environment of may be utilized in each alternative implementation of the present disclosure. For example although depicts a server client environment implementing a hosted application at server that can be accessed by client computer in some implementations server can execute a local application that features an application user interface accessible to a user directly utilizing GUI to inject software components representing on demand services to the application user interface. Additionally one or more of the elements described herein may be located external to environment while in other instances certain elements may be included within or as a portion of one or more of the other described elements as well as other elements not described in the illustrated implementation. Further certain elements illustrated in may be combined with other components as well as used for alternative or additional purposes in addition to those purposes described herein.

The providing of multiple on demand services to a client described in the present disclosure can include different implementations. illustrates one example environment for providing on demand services to a client computer . A networking environment can include an external firewall and an internal firewall . The internal firewall manages and controls data communications within a business entity or business customer. For example client computer can be used by a user within the business customer s domain and may execute a hosted on premise application by traversing the internal firewall and accessing the back end server that hosts the application . Similarly application can be used in connection with a shell application programming interface API that provides an interface between application and other applications operating systems or interfaces on the client computer . The shell API can also be hosted on a shell back end server accessible through internal firewall . In certain implementations shell API provides a persistent and up to date environment for application . Users of client computer can always be presented with an updated desktop working environment web browser and other applications through shell API . Thus new applications or services can be automatically and seamlessly provided to application through shell API when they are released and without user intervention.

The networking environment can also include an external firewall that manages and controls data communications between computers located within the business customer s security domain i.e. within the external firewall and computers external to the business customer domain. In some implementations an internal computer such as client computer can execute applications hosted on remote servers external to firewall such as servers in a cloud network as depicted in . For example shell API may implement a side panel application in connection with application and the side panel application may further provide one or more on demand services. The side panel application allows generic interaction with existing applications and transactions at client computer . In certain implementations the side panel application can also visually represent additional on demand services that the user can select for incorporation into application . The side panel application can be represented visually in the application s user interface as an on demand home page. The side panel application can be hosted at a side panel back end server which is accessed by the client computer through the external firewall . The side panel back end server may be one of many servers in a network such as cloud network . The data for the on demand home page can be stored locally in memory or remotely at the side panel back end server in memory . Further the on demand services and updated enhancements provided from servers in a cloud network such as services hosted on the side panel back end server are available to the user faster than if the applications or services were installed directly on client computer or on servers within the external firewall such as on the application back end server .

In some implementations the on demand services are provided to empower users to create and adapt their own application workspaces based on their understanding of the business. Specifically the on demand services provided by the side panel application can be included in or represented as software components called mashup components or on demand chips . While the chips are described as on demand chips the present disclosure contemplates the use of on premise services and chips in addition to in place of or in combination with on demand chips for generating a user s application workspace. An on demand chip is an application or a module subroutine process service or other component of an application that can be combined with other similar components into a new service or arranged in a particular layout along with other components to present a customized arrangement of applications for convenient access to a user. The on demand chips can be characterized as small reusable pieces of the content of a business application. Users can build the on demand chips from existing content elements of business applications such as screens portal views or dashboards. The on demand chips can be visually represented as a user interface element that is easily moved from one location to another within the GUI of client computer . The chips can be hosted remotely at a server outside the external firewall on demand chip such as on the on demand chip back end server or locally on the premises of client computer at a server within the external firewall on premise chip .

Further the on demand chips can also be mashable in the sense that they can be linked with other components or with an underlying application for data flow. That is input and output ports from one on demand chip can be connected to input and output ports of another on demand chip or application. Thus a user of client computer can incorporate a variety of on demand services into application each on demand service represented by a mashable on demand chip and hosted at an on demand chip back end server . The on demand chip back end server can be located within a network such as cloud network . Moreover on demand chip back end server can be one of many servers within a cloud network each server providing one or more on demand services such as on demand chips or other services. One or more containers with page building services can be used in connection with the on demand chips to aggregate and enable the chips from various user interface technologies and systems. Accordingly application can be enhanced with a selection of on demand services that a user of client computer can choose from in the form of on demand chips presented in a side panel application and shell . These enhancements can be provided to the user to complement the functionality of an existing application without upgrading the application or installing the enhancements directly on client computer or the application back end server . The user can then create personalized application workspaces adapted to the user s needs and business situations without the need for central IT involvement.

In some instances the existing personalization infrastructure of the application is utilized to inject or combine an on demand chip into the user interface of the application . The personalization infrastructure includes persistent personalization settings that store personalization data for the hosted application . Just as personalization data would typically be stored in the persistent personalization settings during normal execution of the application the data associated with the insertion of the on demand chips in the application user interface is also stored in the persistent personalization settings. The persistent personalization settings allow personalization data to be stored for an application and for changes to the personalization data to remain in effect even after termination of the application. The personalization settings can also be used to generate controls for the on demand chip such as a text field or a user interface link element. Thus even when application requires use of the full screen of GUI during runtime the user interface of the application may still be used as a backdrop for including on demand chips incorporated into the application user interface and applied to the application based on a user s selection from side panel .

The on demand chips can be merged into the application s user interface by creating a user interface container. The user interface container can be created after input is received from a user indicating the element or location in the application s user interface that is to be used for receiving the on demand chip . The parameters of the user interface container are added to the user interface control tree of the application and the location of the user interface container within the control tree and the on demand chip are stored in the persistent personalization settings of the application . Finally the on demand chip is executed within the user interface container as an embedded application or embedded component within the application s user interface . The injection of the on demand chip into the application user interface results in the integration of a user interface framework standard component with the underlying hosted application . In other words the on demand services can be injected into the user interface of the application using the personalization settings of the application without requiring a user to have knowledge of particular technical skills. Further in some implementations the injected on demand chip can be linked to services modules subroutines or other components within application by connecting input or output ports between the on demand chip and any components within application .

In some implementations shell API provides a desktop component for application that is configured to access metadata associated with the user s role within an organization such as a business. Based on the user s metadata certain on demand chips can be dynamically injected into the user interface of application . The on demand chips presented to the user in application may change based on the changing role of the user within the business. In other words the on demand chips available for selection by the user in the side panel application may change in accordance with changes to the role metadata associated with the user. Moreover the on demand environment can enable integration of third party services such as document management vendors as well as innovative decision making solutions. The on demand chips can also be combined with on premise chips or software components accessed locally or through an internal network to create a user specified application workspace. Further application can be configured to not only be updated with on demand chips in response to changes to a user s role metadata but also in response to external status changes such as changes in the business s status or the status of third party business entities related to the user. A persistent business context is applied to a user s application workspace that ensures the application workspace reflects changes to business entities and applicable business processes that are of interest to the user or that are associated with the user s role within the business. Accordingly the application workspace can be updated based on identification of new third party services or changes to existing third party services.

On demand chips can also be incorporated into a user s application workspace by applying tagging data to data objects used by an application. Existing applications can be augmented and enhanced through a tagging infrastructure that associates data objects in an application with on demand services. Tags can be applied to a data object that are merely descriptive of the data object or the tags can be additional data linking the data object to a software component such as for example an on demand chip . The tagging data applied to data objects helps facilitate user intuitive extension of the functionality of current applications that do not necessarily have tagging capabilities. In some implementations data objects can be graphical elements in the user interface of the application. Specifically an application can be interrogated and particular data objects associated with the application can be annotated via tags. The existing personalization infrastructure of the application can be used to apply tagging data to data objects used by application . The tagging data is not stored for a user interface element or a field of the user interface element but for bound data objects underlying the user interface element. The tagging data is stored in the same way as any other kind of personalization data for the application . On demand chips can then be executed using the tagged data objects as input values when the tagged data objects are selected. Thus various user interface elements of application can be linked with on demand chips to enhance the functionality of application in a user friendly way.

The on demand services provided through the shell API and available to a user of application can also include the ability to streamline or adapt existing applications according to the requirements of the task at hand or the current working context. For example existing business applications can be complex and may include various features for fulfilling any task related to creating or modifying data objects. A user of a business application may only want or need the application to show the features needed for a particular task. For example if the user is creating sales orders for only one customer the user should not be required to reenter the customer and address information each time a sales order is created. The shell API and on demand services can be configured to hide redundant or unnecessary functions within the business application such as the customer and address information or simply to display the same customer name and address information for each sales order. In other words the on demand services described in the present disclosure can reduce existing applications to a bare minimum according to the need of the business process or task. The streamlined application can then be augmented with additional information to assist the user of the application based on the current task. For example to assist a user in creating a sales order the products that were ordered previously may be displayed as a quick reference or information from external sites such as the least expensive delivery service for the destination country can be provided to the user. Thus application and its features can be adapted to a user s particular needs.

Further enhancing existing applications such as application with on demand services can include updating the existing user interface of application . The existing application user interface can be turned into a smart application user interface with context sensitive navigation disclosures of data related to elements in the application user interface related contributions from other users over a network flexible rendering of graphical elements and customization of application views in line editing of tables with shared notes and comments and other enhancements to a user interface of application . The updating of application user interfaces can utilize user driven semantics and presentation layer rendering to resolve differences in the underlying semantics of the original user interface and the updated user interface. First user interface metadata associated with an original application user interface is extracted from the user s client computer or from a data dictionary at a back end server hosting application . The semantics of particular user interface fields of the original application user interface can be tagged or declared by users and associated with particular functionality. The user interface metadata can then be indexed and made available or transmitted across a network for access by other users and applications. Based on the user defined semantics of the user interface metadata each field or element of the user interface metadata can be associated with elements of other systems. The metadata of the original application user interface can then be associated with updated enhancements and user interface features available on a cloud network or other network. The updates to the user interface can be applied to the user interface of application .

From a user s perspective a user may use a current application at client computer . The application may be operated in connection with a shell API that provides the user interface framework for the application and for the availability of additional on demand services that can be used in conjunction with application . Both application and the shell API may be hosted at on premise back end servers and within an internal firewall . The on demand services available to the user through shell API can include hosted services represented as on demand chips which the user can select in the user interface screen presented to the user at client computer . The on demand chips may be provided and organized within a side panel application for the user to view and select from. The user may select a particular on demand chip for incorporation into application . The server hosting the on demand chip on demand chip back end server receives the user s request for the on demand service represented in the on demand chip . The on demand service can then be executed at the on demand chip back end server and the results of the execution of the on demand service can be returned to the client computer for inclusion into application . In some implementations execution of the hosted service may require access to data stored at client computer or at an on premise server within external firewall . A reference to the data rather than the actual data may be passed to on demand chip back end server for execution of the hosted service. The results of the hosted service are then transmitted to the client computer based on the reference to the required data.

The on demand services available to a user of application can also include the application of configuration settings associated with other users and shared across a network or situational data based on a user s role within a company. For example application can be automatically configured with particular settings designed to increase user productivity based on the user s job title division or responsibilities within a company. The configuration settings may be requested from servers or shared with other users through a cloud network . Further information or settings associated with best practices within an industry or within the user s company can be provided as on demand services. Each on demand service can be accessible to a user of application or shared with other users through a network such as cloud network .

The shell API and on demand chips depicted in are example implementations for providing on demand services across a network as described in the present disclosure to enhance an application at a client computer . Another example of on demand services includes business worklists that can be provided to a user as an on demand service or on demand chip from an on demand chip back end server . The business worklists include metadata for configuring and accessing particular application objects and functions allowing efficient access to the application objects and functions without complex navigation through standard transactions involving the application s user interface. Business worklists can be generated automatically based on metadata concerning a user s role within an organization. Alternatively business worklists can be manually created by users based on the user s own preferences or based on recognized best practices that can be shared across a network with other users. Users that share similarities in roles within their respective organizations for example may share their business worklists or access to automatically generated worklists may be given to other users. The business worklists can be applied to application to automatically configure application or incorporate on demand services into application according to user preferences best practices or role metadata as defined in the business worklists. Further the business worklists can be provided to mobile devices so that the content and configuration data of application can be easily accessible on mobile devices. A user first selects a business worklist to be made available on a mobile device and the on demand chip can be configured to push the business worklist and associated data to a mobile gateway where the business worklist can be transferred to the mobile device. Thus business worklist functionality and self service mobility can be instantly delivered to users of application and business worklists.

After the appropriate additional functionality has been identified for a particular user at the graphical representation of the functionality can applied to the client s user interface after the user interface metadata associated with the identified functionality has been transmitted to the client at . This user interface metadata can be initially obtained when it is extracted from the client system or a data dictionary at the back end servers hosting the server application . In certain implementations permission is requested from the user before the additional functionality is integrated into the server application . Alternatively the graphical representation of each additional identified feature can be seamlessly and automatically included in the GUI of client so that from the user s perspective the server application is a continually updated application with the most recently developed and requested features or solutions. The updating of the client s user interface with the additional functionality can be implemented either before or after the additional functionality is executed by the user.

Next at a request to perform the identified additional functionality is received at server . In some implementations the additional functionality requires access to data stored locally at the client or stored within a network behind a firewall . Instead of transmitting the data across the cloud computing network and potentially compromising sensitive data a reference to the stored data can be passed from client to server for executing the requested functionality at . Thus the functionality is executed by server at and the results are passed to the client with a reference to the stored data so that the user of the application can view the data without transmitting sensitive information outside of the firewall . Finally after server has executed the additional functionality based on the stored data the results and any user interface metadata associated with the additional functionality are transmitted to the client at .

The preceding figures and accompanying description illustrate example processes and computer implementable techniques. But environment or its software or other components contemplates using implementing or executing any suitable technique for performing these and other tasks. It will be understood that these processes are for illustration purposes only and that the described or similar techniques may be performed at any appropriate time including concurrently individually or in combination. In addition many of the steps in these processes may take place simultaneously and or in different orders than as shown. Moreover environment may use processes with additional steps fewer steps and or different steps so long as the methods remain appropriate.

In other words although this disclosure has been described in terms of certain embodiments and generally associated methods alterations and permutations of these embodiments and methods will be apparent to those skilled in the art. Accordingly the above description of example embodiments does not define or constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure.

