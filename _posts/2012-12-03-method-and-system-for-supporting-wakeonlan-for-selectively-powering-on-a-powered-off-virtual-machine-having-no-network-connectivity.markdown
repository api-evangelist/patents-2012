---

title: Method and system for supporting wake-on-LAN for selectively powering on a powered off virtual machine having no network connectivity
abstract: A method and system for supporting Wake-on-LAN technology in a virtualized environment is described. An improved virtual switch comprises a listener, which receives a power-on message on behalf of virtual machines, extracts addresses of the virtual machines to be powered on, which are embedded in the power-on message, compares the extracted addresses with addresses of the virtual machines stored in a database, and selectively powers on those virtual machines for which the extracted and stored addresses match.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08661439&OS=08661439&RS=08661439
owner: Embotics Corporation
number: 08661439
owner_city: Ottawa
owner_country: CA
publication_date: 20121203
---
The present application is a Continuation of U.S. patent application Ser. No. 12 407 719 filed Mar. 19 2009 issued as U.S. Pat. No. 8 327 356 on Dec. 4 2012 which claims priority from the U.S. provisional application Ser. No. 61 038 317 filed on Mar. 20 2008 which are incorporated herein by reference.

The invention relates to virtual machines VMs and computer systems using VMs in particular to a method and system for supporting Wake on LAN WOL in a virtualized environment.

Virtualization of computing systems has become quite prevalent in recent times. It refers to a new layer that abstracts computer hardware from operating system OS and associated applications that run on it. Virtualization technique allows the computer hardware to support concurrent running of more than one operating system and applications associated with the operating systems held in containers called virtual machines controlled and scheduled by a virtual machine monitor VMM . This has offered a way for computer operators to consolidate optimize and increase efficiencies of computing platforms while simplifying application deployment. To improve energy efficiency virtual machines that are not currently operational are often powered off. Virtualization in general and powering off inactive VMs to save energy are in line with a green computing initiative that is becoming increasingly popular in various information technology domains. Such powered off virtual machines may need to be powered on upon a command from the system administrator for performing system maintenance. Using existing WOL technology to selectively power on computer systems is known. Providing WOL support in a virtualized environment however has its own challenges that will be described next. Before discussing WOL for virtualized environments a short introduction to the existing WOL technology is provided.

Wake on LAN technology is used by system administrators for doing maintenance on computer systems that are sleeping. Wake on LAN technology has been known since 1997 see for example Wake on LAN article from Wikipedia encyclopedia last modified Mar. 12 2008 listed in the information disclosure statement for this application and White paper White on LAN Technology by Lieberman Software Corporation on published on Jun. 1 2006 at URL and listed in the information disclosure statement for this application.

Many users turn off their computer systems both desktop and server at night to save energy. System administrators however need to do work at night while users are away from their computer systems. Using the WOL technology system administrators can wake up power on any number of sleeping powered off computer systems in minutes without making a physical visit to these computer systems. In this way they can make changes to multiple computers without impeding productivity of users who are not using their computers at that time.

Please note that although a computer system to be powered on is shutdown it has power to its network interface card NIC and some other parts of the computer system. Powering on the computer system in a Local Area Network LAN remotely typically follows the following steps.

As discussed earlier virtualization technology allows more than one VM comprising a Guest OS and applications to share a single computer system. Each virtual machine is provided with simulated computer hardware such that the Guest OS and application can run in isolation without making any modifications to them. Please note that VMs run on top of a virtualization platform which includes a hypervisor.

With all the advantages that have been offered by virtualization it does not support the existing WOL technology as there is no NIC on reserve power for each VM listening for the Magic Packet.

Thus there is an existing need in the industry for an improved and effective method for supporting Wake on LAN in a virtualized environment.

Therefore there is an object of the present invention to provide an improved method and system for supporting Wake On LAN in a virtualized environment.

According to one aspect of the invention there is provided a method for supporting Wake on LAN WOL for selectively powering on virtual machines in a computer in a local area network LAN the method comprising a1 assigning respective unique addresses to the virtual machines b1 connecting the virtual machines to the LAN through a virtual switch including a Listener for selecting one or more virtual machines to be powered on c1 by the Listener receiving a power on message including unique addresses of said one or more virtual machines d1 by the Listener decoding the power on message to extract the unique addresses received in the step c1 e1 by the Listener comparing extracted unique addresses extracted in the step d1 with assigned unique addresses assigned in the step a1 and f1 powering on those virtual machines whose assigned unique addresses match with the extracted unique addresses. The method further comprises a step of storing the assigned unique addresses in a database the step being performed after the step a1 . The step e1 comprises a3 sending a query including the extracted unique addresses to the database and b3 receiving a response including the assigned unique addresses stored in the databases that matched the extracted unique addresses. The step f1 further comprises a4 selecting a power on command depending on a virtualization platform on which a virtual machine is running and b4 sending the power on command selected in the step a4 to the virtual machine. The step of storing the assigned unique addresses further comprises a5 receiving a command for registering a virtual machine for enabling the Wake on LAN on the virtual machine the command including the assigned unique address of the virtual machine and b5 recording the assigned unique address of the virtual machine in the database. The method further comprises a step of disabling the Wake on LAN on selected virtual machines in response to an un registering command. The step of disabling the Wake on LAN on selected virtual machines comprises a7 receiving the un registering command for the virtual machine the un registering command including the assigned unique address of the virtual machine and b7 removing the assigned unique address of the virtual machine from the database. The assigned unique address is a Media Access Control MAC address of the virtual machine. The method further comprises a step of running the virtual machines and the Listener on a hypervisor.

According to one of the embodiments of the invention the method further comprises a19 by the Listener receiving a power off message including unique addresses of virtual machines to be powered off b19 by the Listener decoding the power off message to extract the unique addresses received in step a19 c19 by the Listener comparing the extracted unique addresses with the assigned unique addresses and d19 powering off the virtual machines the assigned addresses of which match the extracted unique addresses the steps a19 d19 being performed after the step f1 .

The Listener c10 comprises a message checker receiving a message through the virtual switch b10 the message comprising unique addresses of one or more virtual machines and a message type including one of power on and power off and based on the message type powering on or powering off those virtual machines whose assigned unique addresses stored in the database c10 match with the unique addresses in the message. The virtual switch b10 comprises a first virtual switch a21 connecting a subset of virtual machines to the LAN and providing support for the Wake on LAN and a second virtual switch b21 free of connection to the LAN connecting remaining virtual machines with the subset of virtual machines connected to the LAN through the first virtual switch for providing inter communication among the virtual machines and wherein the Listener receives the power on message through the first virtual switch a21 the message including unique addresses of one or more virtual machines.

According to another aspect of the invention there is provided a system for supporting Wake on LAN WOL for selectively powering on virtual machines in a computer in a local area network LAN the system comprising a processor a computer readable medium comprising computer readable instructions stored thereon for execution by the processor forming the following a10 a database storing a unique address assigned to each virtual machine b10 a virtual switch connecting the virtual machines to the LAN and providing support for the Wake on LAN and c10 a Listener receiving a power on message through the virtual switch the message including unique addresses of one or more virtual machines to be powered on and powering on those virtual machines whose assigned unique addresses stored in the database match with the unique addresses in the message. In the system the Listener comprises the database and the virtual switch comprises the Listener. The Listener further comprises a Rules Engine a13 processing the power on message for selectively powering on the virtual machines a Web Services Interface b13 managing and configuring the Listener including registering and un registering of the virtual machines and a Configuration Block c13 providing administrative access for enabling or disabling of the Wake on LAN on the virtual machines. The Rules Engine a13 comprises a Receiver a14 receiving the power on message including unique addresses of one or more virtual machines to be powered on and a Decoder b14 decoding the power on message for extracting the unique addresses from the power on message received by the Receiver comparing the extracted unique addresses with the assigned unique addresses and sending a power on command to the virtual machines the assigned addresses of which match the extracted unique addresses. The system further comprises a Registration Handler processing commands for enabling or disabling the Wake on LAN on the virtual machines. In the system described above the computer includes a hypervisor for running the virtual machines and the Listener. The system may include another computer connected to the LAN for running the Listener.

A computer readable storage medium having a computer readable program code instructions stored thereon when executed by a computer to perform the steps of the method as described in the application is also provided.

According to yet another embodiment of the invention there is provided a method for supporting Wake on LAN WOL for selectively powering on a set of virtual machines in a computer in a local area network LAN the method comprising a22 assigning respective unique addresses to the virtual machines b22 connecting a subset of the virtual machines to the LAN through a first virtual switch including a Listener for selecting one or more virtual machines in the set to be powered on c22 connecting remaining virtual machines with the subset of virtual machines connected to the LAN through the first virtual switch by a second virtual switch that is free from communication with the LAN for providing inter communication among the virtual machines d22 by the Listener receiving a power on message including unique addresses of said one or more virtual machines in the set of virtual machines e22 by the Listener decoding the power on message to extract the unique addresses received in the step d22 f22 by the Listener comparing extracted unique addresses extracted in the step e22 with assigned unique addresses assigned in the step a22 and g22 powering on those virtual machines in the set of virtual machines whose assigned unique addresses match with the extracted unique addresses.

VMware ESX virtualizes processors memory and disks in a computer system as well as a LAN connecting multiple computer systems. One or more VMs comprising its Guest operating system and applications can execute on this virtualization platform. The LAN is also virtualized and each VM is connected to a specific LAN for example through a virtual network interface card vNIC connected to a virtual switch. A virtual switch such as the vSwitch maintains a MAC port forwarding table and can be managed remotely by an administrator. There can be up to 4 vNICs in a VM supported by ESX each of which can be connected to a different vSwitch which in turn is connected to a different LAN. Only one such vSwitch vSwitch is shown in for clarity. The vNIC and are designed to simulate a common commercial network interface card such as the NICA NICB and NICC of .

The vSwitch can handle various types of traffic that includes vNIC to LAN traffic LAN to vNIC traffic and vN IC to vN IC traffic. Every frame packet for each of these traffic types goes through four basic modules. There is a pre processing module which assists in filtering out unwanted traffic a forwarding engine a teaming engine and a post processing engine which sends packets out through a destination port.

In a power on message in the form of a Magic Packet is broadcast from the Administrative System step circle around . The vSwitch maintains a MAC port forwarding table that is used to forward packets to VMs that are identified in the Magic Packet. When a VM is powered off the vSwitch does not forward packets to the MAC address for the VM as it is no longer exposed. This means that the powered off VM of is not listening for the Magic Packet. As a result it is not possible for it to receive the power on message initiated by the Administrative System on its own.

Thus to present a network interface card on behalf of a VM that is powered off it is necessary for the virtualization platform to present to the LAN a network interface card in listening mode awaiting the Magic Packet.

Virtualization platform of the embodiment of the invention comprises an improved vSwitch including a WOL Listener or Listener which allows the vSwitch to become a proxy for each VM with vNIC connected to it which is configured for WOL. Each VM is assigned a unique address. In the preferred embodiment the assigned unique address of the VM is its respective vNIC MAC address as shown in . The vNIC MAC address for vNIC and are 00 00 00 000 00 01 00 00 00 000 00 02 and 00 00 00 000 00 03 respectively. Each VM is also associated with a unique identification number ID . These assigned unique addresses of VMs are stored in a database that is used in selectively powering on the VMs.

As part of a configuration step the vSwitch can be set up to listen for a particular Magic Packet or a list of specific Magic Packets which is performed at a Configuration Block within the vSWitch that is described next. Normally the vSwitch related to the VMs for example VM or would be the proxy for those VMs.

Web Service WS Interface is an interface through which the system administrator performs configuration and management of the Listener . Commands registering un registering a VM for WOL support are received through this interface.

Database includes a list of assigned unique addresses MAC addresses and IDs for all the VMs on which WOL is enabled. The MAC address corresponds to the vNIC that connects the VM to the vSwitch . Each ID in turn corresponds to a specific VM. These addresses and IDs are stored in a computer storage medium.

Configuration Block performs access control for reading or writing of the Database . It enables only authorized users to insert delete or change the assigned unique addresses of VMs.

Rules Engine is a component which upon receiving the power on message containing the Magic Packet extracts the unique addresses of VMs in the power on message and determines if there is a match in the Database i.e. whether it needs to proxy WOL for that MAC address . Then it powers on the VMs the assigned unique addresses of which match with extracted unique addresses extracted from the power on message. Please note that the assigned unique addresses of VMs are stored in the Database . The Rules Engine in turn includes a Decoder a Receiver and a Registration Handler . Each of these is briefly described.

Receiver listens for messages used for powering on virtual machines. As soon as a power on message containing the Magic Packet is received the Receiver passes on the power on message to the Decoder .

Decoder decodes the power on message received by the Receiver for extracting the unique addresses from the power on message compares the extracted unique addresses with the assigned unique addresses stored in the Database . Then it sends the power on command to the VMM for powering on virtual machines the assigned unique addresses of which match the extracted unique addresses.

Registration Handler processes commands for enabling disabling the Wake on LAN on the virtual machines. A command for registering a VM records the assigned unique address of the virtual machine and its ID in the Database enabling WOL on the VM. A command for un registering a VM removes the assigned unique address and the ID of the virtual machine from the Database thus disabling WOL on the VM.

The operation of the Rules Engine is explained further with a sequence diagram presented in that captures a sequence of operations performed when a power on message arrives at the Listener . Flow of messages and control are shown with the help of arrows. The power on message for powering on a powered off virtual machine such as is sent by a system administrator through the LAN and is received by the Receiver . The Receiver invokes arrow the Decoder that decodes the power on message for extracting the unique addresses of VMs in the power on message received by the Receiver and compares these extracted unique addresses with the assigned unique addresses stored in the Database . This is achieved by sending a Query to the Database . Upon receiving the Query the extracted unique addresses are matched with the assigned unique addresses of VMs stored in the Database that sends back a Response identifying VMs the assigned unique addresses of which matched the extracted unique addresses. Upon a successful match the Decoder determines the power on command for the virtualization platform for the VM to be powered on and sends the power on command to the VMM through its own Software Development Kit specifying the VM to be powered on. Power on messages are not sent if the Response indicates no address match in the Database .

Block diagram of illustrates another embodiment of the WOL technology of the present invention. There are three VMs in this example system a Frontend Server having vNICs and a Frontend Server vNICs and and a Backend Server having vNIC . In the virtualization platform more than one virtual switch may be related to the same VM as shown in including a First vSwitch that is connected to the LAN and a Second vSwitch that is not connected to the LAN and is thus free form communication with the LAN . A connection between each virtual switch and a particular VM is handled by a respective vNIC. vNICs and connect VM to the First vSwitch and the Second vSwitch respectively. vNICs and are used to connect VM to the First vSwitch and the Second vSwitch respectively. VNIC connects VM to the Second vSwitch . Out of the two virtual switches the First vSwitch is configured to be the only virtual switch supporting WOL as a proxy as the First vSwitch is the only virtual switch receiving packets from the LAN . The purpose of the second vSwitch in is to provide inter communication among the Frontend Servers and and the Backend Server . Although the VM is not directly connected to the First vSwitch this embodiment of the invention enables the VM to use WOL. The First vSwitch receives the power on message from the LAN and sends a power on command to the VMM through its own Software Development Kit specifying VM to power on. Block diagram presented in displays another embodiment in which only the Frontend Server is connected to the First vSwitch through vNIC . The two other VMs and are connected to the Second vSwitch through vNIC and vNIC respectively. Once again although VMs and are not connected to the First vSwitch and the LAN on which the power on message arrives this embodiment of the invention can selectively power on one or both of the VMs and in response to a power on message. This is because the First vSwitch receives the power on message from the LAN and sends a power on command to the VMM through its own Software Development Kit specifying one or both of the VMs and to power on. As in the case of the Second vSwitch does not contribute to WOL but is used to provide inter communication among VMs and that is connected to the Second vSwitch via vNIC .

The steps of the methods of the embodiments of the invention performed by the Listener are explained with the help of flowchart illustrated in and flowchart illustrated in . These flowcharts respectively correspond to Case 1 and Case 2 handled by the Listener namely to receiving the power on message for the VM and registering un registering the VM for WOL.

Upon start box the procedure begins watching the LAN for a power on message containing the Magic Packet including the unique address of the VM to be powered on. Upon receiving the power on message box including a Magic Packet the procedure decodes the power on message and extracts the unique address MAC address of the VM to be powered on box . Whether or not the extracted unique address matches an assigned unique address stored in the Database is checked next box . If there is match the procedure exits YES from box and obtains the power on command for the virtualization platform that includes the hypervisor on which the VM is running e.g. VM box . Please note that the power on command can vary from one virtualization platform to another. The procedure sends the power on command box specifying the VM to be powered on via a power on Application Programming Interface API call to the Virtual Machine Manager of the virtualization platform for example and exits box . This power on command is sent regardless of a potential success or failure due to misconfiguration or missing files in the virtualization platform . A failure would result in the same outcome that occurs when a computer has no auxiliary power on the NIC or when a hardware problem has occurred on the system. A system administrator will need to diagnose the problem when she he is unable to power on the VM. If the extracted unique address is not found in the Database the procedure ignores the power on message box and exits box .

Thus an improved method and system for supporting WOL in a virtualized environment have been provided.

Although specific embodiments of the invention have been described in detail it should be understood that the described embodiments are intended to be illustrative and not restrictive.

Various changes and modifications of the embodiments shown in the drawings and described in the specification may be made within the scope of the following claims without departing from the scope of the invention in its broader aspect. For example the Listener can be implemented on a remote computer connected to the LAN . Similar to the power on command described earlier a power off command can be sent by an authorized person such as the system administrator for selectively powering off virtual machines. Before executing such a command the command needs to be authenticated for ensuring an authorized person is using the command. A modification of the embodiments of the invention handling a power on and power off message is illustrated in . The system shown in is the same as the system shown in except for the Listener having a Message Checker which receives a power on or power off message includes unique addresses of the virtual machines to be powered on or powered off. Based on the message type power on or power off the Message Checker powers on or powers off those virtual machines whose assigned unique addresses stored in the Database match with the unique addresses of the virtual machines in the message.

