---

title: Repositioning gestures for chromeless regions
abstract: In graphical computing environments, applications are often presented as windows and other regions with visual controls that enable standardized region management functions, including repositioning the regions. However, in some scenarios (particularly devices with small displays), such user interface “chrome” may undesirable diminish the size of the region devoted to the output of the application, and removing such visual controls without eliminating repositioning functionality may be advantageous. Presented herein are repositioning gestures that may be invoked to request repositioning of a selected region by “hovering” a pointer near an edge of the display that is near the selected region; optionally by activating the pointer; and by moving the pointer away from the edge of the display (e.g., “dragging” the pointer while depressing a mouse button). This gesture may easily and unambiguously invoke a region repositioning mode for the selected region, despite the absence of visual repositioning controls confluent with the region.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08890808&OS=08890808&RS=08890808
owner: Microsoft Corporation
number: 08890808
owner_city: Redmond
owner_country: US
publication_date: 20120106
---
Within the field of computing many scenarios involve the presentation of regions in a graphical environment such as windows icons menu bars toolbars and widgets as well as a background region such as a desktop presented as a backdrop for the graphical environment. A user may manipulate a pointing device e.g. a mouse trackball touchpad drawing tablet stylus or touchscreen device to manipulate a pointer within the graphical environment in order to select and interact with the regions. One such interaction involves the position of a region within the graphical environment such as showing or hiding a region moving the region to a new location changing the size of the region in one or more dimensions or toggling a region into a full screen maximized non maximized docked or hidden state.

In many such graphical environments regions are presented confluent with one or more visual controls that when manipulated with the pointer or other user input enable various operations on the region. For example buttons may be attached to the region to enable the region and optionally an application associated with the region to be suspended resumed or terminated and a menu bar may be attached to the region adjacent to or within the region to enable the user to invoke various operations of the application associated with the region.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Although the presentation of visual controls associated with a region may enable various operations on the region and or the associated application such presentation may consume valuable space on the display of the device. In some scenarios such consumption may be regarded as an inefficient use of display space that diminishes the amount of display space usable by the application. For example if the application presents within the region a custom menu including a Close option then presenting a Close visual control confluent with the region of the application in a manner that is visible at all times may incrementally reduce the size of the region while providing only redundant functionality. Moreover such visual controls are often presented in a large non interactive display element such as a menu bar displayed along the entire top width of the region but presenting only one or two menu options. Therefore it may be desirable to reduce the amount of chrome e.g. attached visual controls and embedding visual elements confluent with respective regions in order to maximize the use of the display space by the regions in furtherance of associated applications. However it is still desirable to enable standardized operations for such regions and associated applications that were provided by the omitted visual controls particularly including the capability of altering the position including the location and size of respective regions.

Presented herein are techniques for enabling a user to reposition regions presented on a display of a device where such repositioning may be conveniently achieved in the absence of confluent visual controls that explicitly provide repositioning options. These techniques involve the configuration of the device to detect a particular type of pointer gesture that a user may learn to utilize to invoke a repositioning mode. This pointer gesture comprises hovering the pointer near an edge of the display near e.g. adjacent to a region for a brief duration and then moving the pointer away from that edge. Depending on the input device manipulating the pointer the movement away from the edge may comprise a dragging gesture e.g. activating and holding a mouse button while moving the pointer away from the edge of the display. This gesture may cause the device to enter a region repositioning mode e.g. where positions for the region on the display may be suggested and where a suggested position may be selected by the user e.g. by repositioning the pointer over a suggested position and releasing the held mouse button to execute the repositioning of the region at the selected position.

The configuration of the device to detect such gestures as requests to reposition a region may present several advantages. As a first example the edges of a display are often easily accessible to a user according to some consequences of Fitts Law and a user may rapidly invoke such gestures and possibly without regard to the current position of the pointer or even without looking at the display. As a second example such gestures are not currently associated with any known functionality and users may be easily and intuitively trained to utilize such gestures to request the repositioning of a region. As a third example such gestures may be detectable with high accuracy a low degree of ambiguity and a comparatively simple analytic process as contrasted with gestures that involve complex shape analysis such as the drawing of symbols such as letters . These and other advantages may be achievable through the implementation of the techniques presented herein.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.

Within the field of computing many scenarios involve a graphical computing environment comprising a set of regions. Such regions may comprise e.g. a window a rendering of a media object a menu bar a toolbar a notification dialog an icon representing an application or document or a widget embedded in a desktop. Such graphical computing environments may be generated on a device e.g. by first rendering a background color or background image by rendering one or more regions for each application executing on the device and by presenting the renderings on a display component of the device such as a monitor. Each region is typically associated with an application executing on the device and may be configured to present visual output from the application within the region and or convey input directed to the region to the application. Such applications may include user applications renderings of media objects configuration dialogs games operating system applications e.g. a file explorer and graphical interfaces for background service e.g. a notification icon stored in a notification icon area .

A user may be permitted to interact with the regions presented in the graphical computing environment. As one such example the device may comprise a pointing device such as a mouse a trackball a trackpad a drawing tablet a touchscreen a stylus a targeting element such as an infrared emitter and or a camera configured to detect a manual pointing gesture of a user at the display component. These pointing devices may be used to control a pointer presented on the display e.g. represented by a cursor such as an arrow and the user may utilize the pointer to select activate and interact with various regions e.g. the user may slide a mouse on a flat surface to achieve corresponding movement of the pointer may position the pointer over a region of interest and may click a button on the mouse to indicate a selection of the region. The device may be configured to support many such operations through the pointing device e.g. clicking with one or more particular buttons double clicking dragging an item such as an icon or creating a marquee or lasso to select an area or items of interest . The device may also evaluate the input of the pointing device to identify gestures performed with the pointer e.g. a shaking of the cursor and or of the pointing device e.g. a single multitouch gesture performed on a touchpad that is to be processed in lieu of corresponding movements on the touchpad . Such manipulations may enable the execution of many types of activities including selecting and or unselecting items invoking switching to or terminating particular applications and zooming into or out of a region.

In addition to operations invoked solely through the input of the pointing device pointer based user interfaces are frequently used in conjunction with various types of visual controls such as depressable buttons selectable radio buttons checkboxes sliders lists numeric up down controls menus and pickers. These visual controls may be confluent with a region e.g. adjacent to or overlapping a region . For example a window is often presented with a visual frame a set of buttons at a top corner of the window for frequently invoked window management functions such as maximizing restoring minimizing and closing an application and a top menu bar providing a set of invokable operations exposed by the application. These controls may be applied by default to the region by the operating system or specified by the application associated with the region and may be positioned in an independent floating detachable dockable and or attached manner with respect to the region.

Of particular relevance to the present disclosure are techniques for achieving a repositioning of a region on the display. Such repositioning may involve e.g. altering the location of a region on the display resizing the region switching to a particular view mode e.g. a maximized fullscreen windowed or hidden view mode and moving the region to a different display e.g. from a first monitor to a second monitor connected to the same device from a first virtual display space to a second virtual display space of the same device or to a display component of a different device . Because regions are very frequently repositioned in window based graphical computing environments such devices often provide several ways to invoke the repositioning of a region. For example the maximize restore and minimize buttons attached to a graphical window enable the repositioning of the window at predefined sizes and locations the graphical frame of a window enables a user to position the pointer over an edge of the window and drag to adjust the size of the window and menu options in a standard application menu enabling the maximizing restoring and minimizing of the region. Additional input options may be included to reposition the region without the use of a visual repositioning control e.g. keyboard shortcuts may be provided to invoke the maximize restore and minimize commands and a throw pointer gesture may be implemented to enable a user to grab a region with the pointer and rapidly move the pointer to a particular location of the display in order to throw it into that location.

However the implementation of visual controls for respective regions may consume space within the graphical computing environment . For example in the exemplary scenario of approximately 10 of the display space devoted to the region is consumed by visual controls including the title bar the window frame the maximize minimize and close buttons and the menu. Moreover some of these elements are embedded in non interactive visual elements in order to provide visual alignment and or consistency among regions e.g. the area from the right edge of the close button to the right edge of the frame is entirely reserved for the menu bar but is only partially utilized resulting in a non functional block of the region. In this exemplary scenario these visual elements together reduce the size of the region devoted to presenting output from the application by at least 10 and more complex applications may present even more visual controls that consume further display space. Moreover the functionality provided by a visual control may be redundant with other visual controls may be invoked only occasionally or rarely despite its ubiquitous presentation and may be handled entirely by the logic of the application e.g. the application may present an option within the region to exit the application at an appropriate time thereby rendering the close button irrelevant and confusing .

These and other considerations may encourage a reduction in the amount of redundant infrequently invoked and or non functional visual elements chrome attached to regions within the graphical computing environment thus maximizing the portion of the region dedicated to the output of the application . However users may nevertheless wish to invoke the functionality provided by the visual controls omitted from the region and it may be undesirable to relegate the implementation of such functionality to the application . Therefore it may be desirable to design the graphical computing environment to provide such functionality other than through the use of chrome. 

One such technique is the implementation of gestures whereby a particular motion of the pointer may be associated with a particular functionality such as the marquee or lasso gesture whereby the drawing of a rectangle enclosing a set of items in a list results in a selection of the enclosed items or double clicking a button on a pointing device to activate an item indicated by the pointer . However at present gestures for repositioning a region are not widely recognized particularly in the absence of chrome. For example users may readily recognize a moving of a region by dragging the region from a first location to a second location. However such dragging is often initiated by a title bar that is otherwise non interactive and therefore desirably removed in order to reduce the chrome of the region . Moreover attempting to move the region by dragging within the region may conflict with providing input to the application associated with the region resulting in unanticipated inconsistent and or ambiguous behavior of the graphical computing environment . Similar problems may arise from attempting to resize the region in the absence of a window frame . In view of these difficulties it may be desirable to devise gestures that enable users to reposition a region e.g. moving the region to a different location resizing the region switching the view mode of the region among full screen exclusive maximized non maximized and hidden modes and moving the region to a different display of the same or a different device in the absence of visual controls in order to promote the reduction of the chrome of the region .

Presented herein are techniques for enabling users to reposition regions through the development of pointer based gestures that distinguish between interactions with the application within the region and repositioning of the region . Moreover it may be desirable to select gestures that are readily accessible to and rapidly performed by users . Relevant to such considerations a principle known within the field of human computer interaction identified as Fitts Law specifies that the accessibility of an area presented on a display is proportional to the size of the area. More particularly an edge of a display is particularly accessible with a pointing device like a mouse because movement past the boundary of the edge is restricted and the user may err on the side of rapidly moving the pointer toward the edge. Therefore choosing gestures that are associated with an edge of the display to achieve a repositioning of regions may present some user interface advantages.

In accordance with these considerations the techniques presented herein enable a user to enter a region repositioning mode with respect to a particular region by performing a gesture with respect to an edge of the display near the region . In particular for a region near an edge of the display near the region the gestures involve a hovering of the pointer for a brief hovering duration near the associated edge of the display to enter a region repositioning suggestion mode followed by movement of the pointer away from the edge optionally while activating the pointer during the movement e.g. depressing a button of a mouse or a drag away from the edge of the display . It may be appreciated that if the region is near but not adjacent to the edge of the display the gesture may be performed in the gap between the region and the edge and may therefore not be construed as interacting with the region . Alternatively if the region is adjacent to the edge the hovering of the gesture to enter the repositioning mode may differentiate interaction with the portion of the region near the edge of the display and the initiation of the repositioning gesture. Upon detecting such a gesture the graphical computing environment may enter a region repositioning mode for the region e.g. the user may then draw a rectangle to represent the new location and size of the region may drag the region to a new location and or resize the edges of the region where such input is not construed as interaction with the region during the region repositioning mode and or may choose one or more suggested locations and or sizes of the region e.g. the graphical computing environment may present a set of suggested repositionings and the user may point to one with the pointer and release the button of the pointing device . In this manner the detection of such gestures may enable the user to invoke a repositioning of a region in an unambiguous manner without interacting with visual repositioning controls confluent with the region thereby promoting the reduction of chrome while preserving the accessibility of the repositioning functionality of the region within the graphical computing environment .

As further illustrated in at a fourth time point presented in this exemplary scenario as an optional variation of these techniques while in the region repositioning suggestion mode the user may activate the pointer e.g. by depressing a button of a pointing device associated with the pointer causing the pointer to change to a third visual style indicating the further performance of the gesture e.g. a closed fist which may suggest that the user has grabbed the edge of the display . At a fifth time point the user may invoke a movement of the pointer away from the edge of the display thereby completing the repositioning gesture. In response and as illustrated at a sixth time point the completion of the repositioning gesture causes the graphical computing environment to enter a region repositioning mode with respect to the region . For example the graphical computing environment may hide all of the regions except the selected region may display the selected region and optionally the background of the graphical computing environment with a dimmed muted and or low contrast appearance and atop the selected region and the background may present some region repositioning suggestions of the selected region such as a left half of the display a right half of the display and a maximized mode filling the display . If the user positions the pointer over or near a region repositioning suggestion and deactivates the pointer e.g. by releasing the depressed button of the pointing device the graphical computing environment may reposition the selected region according to the selected region repositioning suggestion . Alternatively if the user provides any other input e.g. not completing the repositioning gesture providing contrary input while in the region repositioning suggestion mode or the region repositioning mode such as keyboard input or deactivating the pointer before completing the repositioning gesture or while not pointing at a suggested region repositioning the region repositioning suggestion mode and or region repositioning mode of the device may be canceled and the graphical computing environment may return to an initial or normal operating mode. In this manner the user may utilize the illustrated exemplary repositioning gesture to initiate a repositioning of a selected region in an accessible unambiguous and chromeless manner according to the techniques presented herein.

Another embodiment involves a computer readable medium comprising processor executable instructions configured to apply the techniques presented herein. Such computer readable media may include e.g. computer readable storage media involving a tangible device such as a memory semiconductor e.g. a semiconductor utilizing static random access memory SRAM dynamic random access memory DRAM and or synchronous dynamic random access memory SDRAM technologies a platter of a hard disk drive a flash memory device or a magnetic or optical disc such as a CD R DVD R or floppy disc encoding a set of computer readable instructions that when executed by a processor of a device cause the device to implement the techniques presented herein. Such computer readable media may also include as a class of technologies that are distinct from computer readable storage media various types of communications media such as a signal that may be propagated through various physical phenomena e.g. an electromagnetic signal a sound wave signal or an optical signal and in various wired scenarios e.g. via an Ethernet or fiber optic cable and or wireless scenarios e.g. a wireless local area network WLAN such as WiFi a personal area network PAN such as Bluetooth or a cellular or radio network and which encodes a set of computer readable instructions that when executed by a processor of a device cause the device to implement the techniques presented herein.

An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to the principles set forth herein. In one such embodiment the processor executable instructions may be configured to perform a method of enabling users to reposition regions in the absence of visual repositioning controls such as the exemplary method of . Some embodiments of this computer readable medium may comprise a nontransitory computer readable storage medium e.g. a hard disk drive an optical disc or a flash memory device that is configured to store processor executable instructions configured in this manner. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

The techniques discussed herein may be devised with variations in many aspects and some variations may present additional advantages and or reduce disadvantages with respect to other variations of these and other techniques. Moreover some variations may be implemented in combination and some combinations may feature additional advantages and or reduced disadvantages through synergistic cooperation. The variations may be incorporated in various embodiments e.g. the exemplary method of to confer individual and or synergistic advantages upon such embodiments.

A first aspect that may vary among embodiments of these techniques relates to the scenarios wherein such techniques may be utilized.

As a first variation of this first aspect these techniques may be utilized with many types of devices such as servers workstations laptop or palmtop computers tablets phones personal data assistants media players game consoles and appliances.

As a second variation of this first aspect these techniques may be utilized with many types of displays such as active or passive matrix liquid crystal displays LCD organic or traditional light emitting diode LED displays cathode ray tube CRT displays and projectors. Such displays may also exhibit various features including various physical sizes aspect ratios resolutions pixel densities adjustable properties and three dimensional image simulation. The device may also have one or multiple displays arranged in various ways e.g. an aggregate desktop presented seamlessly across the displays a set of distinct and isolated display spaces presented on different displays or a mirrored desktop that is partially or wholly redundantly presented on several displays . Additionally in some variations a first device may apply the techniques presented herein for regions presented on a display of a second device e.g. a terminal services client presenting on a display the graphical computing environment generated by a terminal server .

As a third variation of this first aspect these techniques may be utilized with many types of pointing devices such as a mouse trackball trackpad pointing stick joystick or drawing tablet. The pointing device may also be incorporated in the display such as a magnetic or capacitative touch sensitive display capable of detecting touch by a finger of a user or by a stylus. Other pointing devices may include a camera and may correlate movements of the pointer with movements of a user e.g. applying image evaluation techniques to detect the body position and physical gestures of the user or a pointing device such as an infrared emitter. Such pointing devices may also include various properties that may affect the pointer such as sensitivity acceleration the inclusion of buttons and or wheels the detection of various axes of movement possibly including a third dimensional axis and or gyroscopic sensors detecting device attitude such as tilt and sensitivity to the touch of the user as in a touch sensitive mouse. As a further variation such pointing devices may generally correlate with the pointer in various modes such as an absolute correlation e.g. on a touch sensitive display the location touched by the user is the location of the point or on a touchpad the size and dimensions of the touchpad may be scaled to the size and dimensions of the display such that touching a particular location on the touchpad positions the pointer at the corresponding scaled position on the display and a relative correlation e.g. input from a mouse or touchpad may be interpreted not as a location of the pointer on the display but as directional motion of the pointer within the graphical computing environment .

As a fourth variation of this first aspect these techniques may be utilized to reposition many types of regions within a graphical computing environment such as modal or modeless windows interactive and non interactive dialogs toolbars menu bars renderings of media objects such as documents and images icons and widgets embedded in a desktop.

As a fifth variation of this first aspect the gestures presented herein may invoke many types of region repositioning modes on the device . As a first example the region repositioning mode may simply allow the user to manipulate the selected region in the manner of a window despite the absence of visual repositioning controls by dragging and or resizing the boundaries of the region . As a second example the region repositioning mode may permit the user to draw a rectangle or other shape indicating the new location size and shape of the region . As a third example and as illustrated in the graphical computing environment may present one or more region repositioning suggestions and may apply a repositioning selected by the user to the selected region . These and other types of region repositioning modes may be invoked by the repositioning gestures presented herein. Those of ordinary skill in the art may devise many scenarios wherein the techniques presented herein may be utilized.

A second aspect that may vary among embodiments of these techniques relates to variations in the gestures detectable by such techniques.

As a first variation of this second aspect the association between an edge of the display and an edge of a nearby region may be determined in many ways. As a first example a region may be associated with an edge of the display only if it is located adjacent to e.g. positioned against the edge . As a second example a region may be associated with an edge of the display if it is within a particular threshold distance of the edge e.g. within forty pixels of the edge . As a third example when the pointer is detected to hover near an edge of the display the device may select the region that is positioned nearest the edge optionally taking into account the layering Z order of the regions in a layered graphical computing environment . As a fourth example for respective regions a repositioning area of the display may be identified such that if the pointer is determined to hover in such a repositioning area the graphical computing environment may initiate a region repositioning suggestion mode for the region . As a further variation the detection may involve only particular edges of the display e.g. only the top edge and or may only involve some regions . For example one or more specific regions may be defined as unrepositionable through the invocation of the region repositioning mode such as regions appearing in a fixed location and size on the display may not be selectable for repositioning in this manner and the graphical computing environment may refrain from detecting hovering of the pointer near edges of the display that are near unrepositionable regions . As a still further variation the association of regions with respective edges of the display may be determined on an ad hoc basis e.g. upon detecting a hovering of the pointer near an edge evaluate the positions of the regions to determine nearness to the edge and or on an advance basis e.g. upon positioning a region determine the nearby edges of the display and store such determinations for later use upon detecting a hovering of the pointer near an edge .

As a second variation of this second aspect the hover duration preceding the detection of a hovering of the pointer may be variably defined and or may be adjustable by the user an application or the graphical computing environment . For example the hover duration may be lengthened or shortened based on such circumstances as the dexterity or preferences of the user the type of device and the other types of operations that might have been intended by the user e.g. the similarity of the gesture to other gestures within the graphical computing environment . In scenarios where such user input is comparatively unambiguous the hover duration may be reduced to a very brief duration or even set to zero.

As a third variation of this second aspect the repositioning gesture may be defined to include between the hovering of the pointer and the movement of the pointer away from the edge of the display an activation of the pointer e.g. a detected depression of a button on a mouse. This activation of the pointer may cause the following movement to resemble a drag gesture as part of the repositioning gesture further decreasing the ambiguity of the gesture. The device may therefore be configured to transition from the region repositioning suggestion mode to the region repositioning mode only upon the region repositioning mode upon detecting an activation of the pointer followed by the movement of the pointer away from the edge of the display .

As a fourth variation of this second aspect the movement of the pointer away from the edge of the display may be defined as many ways including a particular repositioning movement length e.g. a movement of at least ten pixels away from the location of the hovering of the pointer that initiated the repositioning gesture . The repositioning movement length may be defined in many ways e.g. as a fixed logical or physical length optionally taking into account the pixel size of the display and or as a percentage of the display dimension of the display perpendicular to the edge e.g. if a relocation gesture is initiated near a left edge of the display the repositioning movement length may be defined as 5 of the width of the display . Moreover the movement may be designed to filter out unintended variation e.g. to tolerate a particular amount of lateral movement of the pointer parallel to the edge of the display in addition to movement of the pointer away form the edge of the display .

As a fifth variation of this second aspect while the pointer is hovering and or while the device is in a region repositioning suggestion mode or a region repositioning mode the device may be configured to evaluate input from the user in various ways. As a first example input associated with the pointer during the performance of a repositioning gesture and or a repositioning of the region may be withheld from the application associated with the region e.g. in order to reduce unintended interaction with the application while the user is attempting to reposition the region . As a second example extraneous input received during a potential relocation gesture e.g. the detection of a hovering of the pointer in a repositioning area followed not by the movement of the pointer away from the edge of the display during an activation of the pointer but by keyboard input may result in a cancellation of the hovering the region repositioning suggestion mode and or the region repositioning mode i.e. the user may avoid or cancel an unintended invocation of the region repositioning mode by not completing the repositioning gesture or providing other input interrupting the repositioning gesture of the pointer . As an additional variation the extraneous input may be sent to an application associated with the selected region e.g. in order to avoid accidentally intercepting input intended for the application by misconstruing such input as the initiation of a repositioning gesture.

As a sixth variation of this second aspect the various modes of the device involved in the repositioning of regions e.g. the region repositioning suggestion mode and the region repositioning mode may be indicated within the graphical computing environment in various ways. In particular the device may indicate the current mode through a visual pointer style applied to the pointer . For example and as illustrated at the third time point in a visual pointer style may be applied to the pointer upon transitioning to the region repositioning suggestion mode . Additionally if the repositioning gesture involves an activation of the pointer such as illustrated at the fourth time point the device may transition to a second visual pointer style indicative of an imminent availability of the region repositioning mode e.g. an entry of the region repositioning mode upon movement of the pointer away from the edge of the display . These and other visual indications of respective modes of the device may be presented in addition to visual resize controls or in the absence of visual resize controls e.g. by refraining from presenting visual resize controls other than the visual pointer style of the pointer .

As a seventh variation of this second aspect while in a region repositioning mode for a selected region the graphical computing environment may provide various options for terminating the region repositioning mode . For example upon receiving a selection of a region repositioning suggestion or input signaling a termination of the region repositioning mode e.g. the release of a button of the pointing device that was activated as part of the repositioning gesture the device may terminate the region repositioning mode and accordingly reposition the selected region . Alternatively or additionally the graphical computing environment may construe other input as a cancellation of the region repositioning mode without repositioning the selected region . Those of ordinary skill in the art may devise many such variations of the repositioning gestures that may be compatible with the techniques presented herein.

As a third aspect of the techniques presented herein additional variations of the repositioning gestures may be devised in view of additional details the visual computing environment .

As a first variation of this third aspect the regions presented within the graphical computing environment may include a background that is presented under the other regions of the graphical computing environment . The background may be presented as a background region having a region size matching the size of the display . Moreover if the repositioning gesture is performed within the graphical computing environment in an area that is not near any of the other regions the graphical computing environment may enter a background region repositioning mode which may enable operations with respect to the background. As one such example the background region repositioning mode may enable an all regions repositioning mode which may enable a repositioning of all other regions presented in the graphical computing environment as a more efficient repositioning mechanism than individually repositioning each region .

As a second variation of this third aspect the graphical computing environment may be configured with various modes that variably display or hide visual repositioning elements confluent with the regions . For example the graphical computing environment may be presented on mobile devices which may include small displays where the reduction of user interface chrome may present a high priority and on workstations which may include large displays where such reduction may present a lower priority. Accordingly the graphical computing environment may include a visual repositioning control hiding mode where regions are presented without confluent visual repositioning controls and a visual repositioning control presenting mode where regions are presented with confluent visual repositioning controls. The availability of the repositioning gestures may therefore be enabled or disabled corresponding to the mode of the device . For example in a visual repositioning control hiding mode repositioning gestures may be enabled to permit repositioning of the regions but in a visual repositioning control presenting mode repositioning gestures may be redundant with the visual repositioning controls and such gestures may therefore be disabled to avoid redundant and possibly accidentally invoked repositioning gestures.

As a third variation of this third aspect the repositioning gestures may be adjusted in view of the characteristics of the pointer and or pointing device . As one such example for pointing devices enabling an absolute pointing input mode it may be advantageous to replace the repositioning gestures provided herein with a different repositioning gesture e.g. tapping and holding a location corresponding to the location of the region to be repositioned and therefore to disable the repositioning gestures presented herein. Alternatively for pointing devices enabling a relative pointing input mode it may be advantageous to enable repositioning regions with the repositioning gestures presented herein. The repositioning gestures may be adjusted in many ways according to many such variations of the graphical computing environment in furtherance of the techniques presented herein.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

