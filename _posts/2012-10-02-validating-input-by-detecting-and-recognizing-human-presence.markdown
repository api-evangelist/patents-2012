---

title: Validating input by detecting and recognizing human presence
abstract: Techniques are disclosed for validating input on a handheld device. In response to receiving an input and a request to access a computing resource, an application running on the handheld device may collect data from one or more sensors of the handheld device. The application may then determine, based on the collected sensor data, if an individual is interacting with the device and recognize the input as valid if such is the case. In one embodiment, the application may present a challenge to a user which is difficult for computer programs to perform, and determine whether an individual is interacting with the device based on successful completion of the challenge. In an alternative embodiment, the application may collect data and determine whether an individual is interacting with the device without presenting an explicit challenge to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09465927&OS=09465927&RS=09465927
owner: Disney Enterprises, Inc.
number: 09465927
owner_city: Burbank
owner_country: US
publication_date: 20121002
---
The present invention relates to user authentication techniques and in particular to techniques for validating input by detecting and recognizing human presence.

Handheld devices such as mobile phones have evolved to provide sophisticated computing platforms complete with large display areas touch sensitive surfaces among other components. Further the computing power of these devices has steadily increased allowing sophisticated computing applications to be executed from the palm of one s hand. Recently handheld devices have been introduced which include sensors which can acquire physical data about the devices position orientation motion and surrounding environment among other things. For example accelerometers and gyroscopes on handheld devices may allow applications to sense and respond to changes in acceleration and spatial orientation as the devices are tilted in different axes.

Applications running on handheld devices may receive inputs which need to be validated as human inputs. For example applications may validate login credentials as user entered so as to prevent automated scripts from accessing a given service attempting to guess username password combinations and the like. One approach for validating input as human input uses CAPTCHA challenges which typically present images of distorted text. Humans are typically better than computer programs at reading such distorted text.

Embodiments of the invention provide a technique for validating input on handheld devices. One embodiment of the invention includes a method for validating input on a device. The method includes collecting data from one or more sensors of the device and determining whether the collected data indicates an individual is interacting with the device. The method further includes recognizing the input as valid if the collected data is consistent with the individual interacting with the device.

Another embodiment of the invention includes a computer readable storage medium storing instructions that when executed by a processor cause a computer system to perform an operation for validating input on a device. The operation includes collecting data from one or more sensors of the device and determining whether the collected data indicates an individual is interacting with the device. The operation further includes recognizing the input as valid if the collected data is consistent with the individual interacting with the device.

Still another embodiment of the invention includes a system with a processor and a memory configured to perform an operation for validating input on a device. The operation includes collecting data from one or more sensors of the device and determining whether the collected data indicates an individual is interacting with the device. The operation further includes recognizing the input as valid if the collected data is consistent with the individual interacting with the device.

Embodiments of the invention provide techniques for validating input on a handheld device. In this context validating input refers to a mechanism which ensures that input was entered by a human as opposed to e.g. a computer program. In response to receiving the input and a request to access a computing resource an application running on the handheld device may collect data from sensors on the handheld device for determining human presence. As used herein computing resource includes resources provided on the device e.g. an application a user interface a hardware resource etc. as well as external resource e.g. a server external storage etc. . The sensors may be configured to acquire physical data about e.g. the device s position orientation and surrounding environment among other things. The application may determine based on the collected sensor data if an individual is interacting with the device and recognize the input as valid if such is the case.

In one embodiment the application may present a challenge to a user which is difficult for computer programs to perform and determine whether an individual is interacting with the device based on the user successfully performing the challenge. For example the application may challenge the user to shake the device and determine based on collected sensor data e.g. accelerometer data whether the handheld device has in fact been shaken. In such a case the application may validate an input as user input if the device is determined to be shaking. In an alternative embodiment the test for determining whether an individual is interacting with the device may be transparent to a user such that the user is unaware that input is being validated or that human interaction with the device is being determined. For example the application may collect accelerometer data and determine whether a human is interacting with the device based on whether the device is moving as opposed to still without notifying the user or presenting an express challenge requiring an express response. In such a case the application may validate an input by determining whether the device is moving thereby suggesting that a human is holding the device.

Illustratively the user may move the handheld device in various ways and the accelerometer s gyroscope s and other sensors may measure the handheld device s position orientation surrounding environment etc. as the handheld device moves. Based on such measurements an application on the handheld device may determine whether an individual is interacting with the device. For example the application may invoke an API provided by an operating system of the handheld device to collect sensor data. The application may then use the data to determine whether the movement of the device images and sounds recorded and other measurements are consistent with an individual interacting with the device as discussed in greater detail below.

The server system generally includes a processor connected via a bus to a memory a network interface device a storage an input device and an output device . The server system is generally under the control of an operating system not shown . Examples of operating systems include the UNIX operating system versions of the Microsoft Windows operating system and distributions of the Linux operating system. More generally any operating system supporting the functions disclosed herein may be used. The processor is included to be representative of a single CPU multiple CPUs a single CPU having multiple processing cores and the like. Similarly the memory may be a random access memory. The network interface device may be any type of network communications device allowing the server system to communicate with the handheld devices via the network .

The input device may be any device for providing input to the server system . For example a keyboard and or a mouse may be used. The output device may be any device for providing output to a user of the server system . For example the output device may be any conventional display screen or set of speakers. Although shown separately from the input device the output device and input device may be combined. For example a display screen with an integrated touch screen may be used.

Illustratively the memory includes a server application . The server application provides a software application configured to serve validation tests to clients e.g. handheld devices . In one embodiment the server system may receive a message from a client requesting a validation test and in response serve a validation test to the client via network . For example a user may navigate to a login screen of a handheld device application. Then the handheld device application may request a validation test to validate a human user is controlling the handheld device. In response the server application may serve a validation test to the handheld device via the network . Note the particular validation test which is served may generally change over time to make it difficult for computer programs to be developed that can pass the test.

As shown storage includes validation tests which may include various challenges presented to users as well as transparent tests. Each validation test may include program instructions as well as relevant images text and the like. For example tests which present challenges to users may be configured to present text messages such as Walk 5 feet in any direction Shake me Shake your head etc. on a display screen of the handheld device. The tests may also collect data from appropriate sensors such as accelerometers gyroscopes cameras and the like to determine whether the challenge has been completed. For example to determine whether the device has moved 5 feet has been shaken whether the user has shaken his her head etc. In general challenges may be designed so that automated programs have difficulty performing them. As a result the validation tests may indicate that input is valid if the challenges are completed and vice versa.

In contrast the transparent tests may determine whether input was entered by a user without the user being aware of such determination. For example a transparent test may collect accelerometer data and determine based on the data whether the handheld device is moving as it would if held in a human s hands. Note the user need not be notified that such a determination is being made. As a result the user need not be aware that input is being validated or that human interaction with the device is being determined. In one embodiment non transparent tests may be provided if transparent test s are unable to confirm that an individual is interacting with the device. For example the motion based transparent test described above may fail to detect that an individual is interacting with the device if the device is placed on a table rather than held in a human s hands. In such a case the handheld device application may be configured to present a challenge test explicitly after being unable to confirm whether an individual is interacting with the device using a transparent evaluation.

As shown the handheld device includes without limitation a central processing unit and graphics processing unit CPU GPU network interfaces an interconnect a memory and storage . In addition the hand device includes a touch sensitive display and sensor s . As discussed the sensor s may generally acquire physical data about e.g. the device s position orientation and surrounding environment among other things. For example the device may include camera s microphone s accelerometer s a global positioning system GPS component proximity sensor s magnetometers s thermometer s pressure sensor s gyroscope s and the like. Such sensors may be hardware sensors or software sensors or sensors which include both hardware and software.

The CPU GPU retrieves and executes programming instructions stored in the memory . Similarly the CPU GPU stores and retrieves application data residing in the memory . The interconnect is used to transmit programming instructions and application data between the CPU GPU storage network interfaces and memory . CPU GPU is included to be representative of a single CPU multiple CPUs a single CPU having multiple processing cores and the like. And the memory is generally included to be representative of a random access memory. Storage such as a hard disk drive or flash memory storage drive may store non volatile data.

Illustratively the memory includes a mobile operating system O S and an application . The mobile O S provides software configured to control the execution of application programs on the handheld device. The mobile O S may further expose application programming interfaces APIs which can be invoked to determine available device sensors collect sensor data and the like. The application which itself includes an input validation component is configured to run on the mobile O S . In one embodiment the input validation component may execute one or more validation tests to determine whether an individual is interacting with the device. As discussed such tests may include e.g. challenges presented to a user or alternatively such tests may be performed transparent to users. In general such tests may collect sensor data from one or more of the sensor s available on the device and determine whether an individual is interacting with the device based on the collected data as discussed in greater detail below.

In one embodiment the application may receive user input and the validation component may then validate that the input was entered by a human using one or more of the validation tests . The application may recognize the input as valid if human device interaction is confirmed and reject the input otherwise. For example the application may be a web browser and the input validation component may be a javascript application of a webpage. After a user clicks a submit button of a webpage form to e.g. attempt to log in to a website the javascript application may be called to determine whether an individual is interacting with the device. The javascript application may do so by applying one or more of the validation tests and returning the results of the determination. Based on the results the web browser may cause the data to be transmitted to a server if human device interaction is confirmed and display an error message otherwise. Of course the application may also be other types of applications such as games e mail clients etc. running on the handheld device which require input validation e.g. to log into the game e mail client etc. and the input validation component may be e.g. a function that when called returns a boolean value indicating whether an individual is interacting with the device.

Although shown as an application on the handheld device the application may be a server side application. In such the case the server side application may similar to the client side application above present challenges collect data from the device sensor s etc. and determine based on collected sensor data whether an individual is interacting with the device. For example Adobe Flash permits servers to access client device sensors so a Flash application may include server side input validation through detection of human interaction with the device.

As shown the storage includes sensor data and validation tests . The sensor data may indicate the handheld device s position orientation and surrounding environment among other things which are measured by one or more of the sensor s . Depending on the validation test the sensor data may be data from an instant in time or the sensor data may include measurements taken over a period of time. For example the validation test may determine whether an individual is interacting with the device based on facial recognition and the sensor data may include an image captured by a camera at a single instant in time. As another example the validation test may determine whether an individual is interacting with the device from movement of the handheld device . In such a case the input validation component may e.g. register an event listener for monitoring changes in position of the handheld device over time. Data relating to such changes may then be stored in storage as sensor data .

As noted the validation tests are configured to determine whether input is human input by determining whether an individual is interacting with the device. As discussed various types of tests may be used including challenge tests and tests which are transparent to users. Additionally new validation tests may be downloaded by the application and stored in storage . For example a new challenge test may be downloaded each time a user navigates to a login screen of the application and the user may be required to complete the challenge before the user s input is accepted.

Of course one of ordinary skill in that art will recognize that the handheld device is provided as a reference example and that variations and modifications are possible as well as other devices e.g. computing tablets with similar accelerometers sensors or a laptop with a camera that can capture an image of an individual interacting with the laptop.

At step the application determines the sensors available on the device. For example the handheld device s operating system may provide an application programming interface API having one or more functions which return available sensors and sensor capabilities. In such a case the application may invoke the API functions to determine the sensors available on the device. Of course the application may determine which sensors are available and sensor properties in any other technically feasible manner.

At step the application selects a validation test from a set of one or more tests based on the available sensors and their properties. In one embodiment one or more tests which are tailored to various types of sensors may be stored in a data storage of the handheld device. In a further embodiment additional tests may be downloaded e.g. periodically whenever a webpage is visited etc. and stored in the data storage. The application may select from the plurality of validation tests tailored to various types of sensors. For example one validation test may use a camera to capture an image then determine via facial recognition if a human face appears in the image. Another validation test may use data collected from an accelerometer to determine whether the handheld device is shaking in a manner consistent with the device being held by a user. Given such validation tests the application may select a particular test based on e.g. whether there is an available camera and or accelerometer whether the properties of any available camera and or accelerometer are suitable for the test and the like.

In one embodiment validation tests may present challenges to the user. For example the tests may present text messages such as Walk 5 feet Shake me Shake your head Hum a tune etc. on a display screen of the handheld device. The tests may collect data from appropriate sensors such as accelerometers gyroscopes cameras microphones and the like and determine based whether the challenge has been completed e.g. whether the device has moved 5 feet has been shaken whether the user has shaken his her head or hummed a tune etc. . As discussed such challenges may generally be designed so that automated programs have difficulty performing them.

Alternatively validation tests may be transparent to the user of the handheld device. That is the tests may be configured such that the user is generally unaware of the fact that input is being validated or that human interaction with the device is being determined. For example a validation test may without notifying or presenting a challenge to the user collect accelerometer data and use such data to determine whether the movement of the handheld device is consistent with that of a device being held in human hands. As another example the validation test may be integrated into a game and the application may collect accelerometer data during ordinary gameplay or other in game interactions. Such collected data may then be used for input validation.

In a further embodiment the application may switch to a non transparent validation test after a transparent validation test fails. For example if the transparent accelerometer test fails e.g. because the handheld device is on a table the application may then present an explicit challenge e.g. Shake me to the user and determine whether an individual is interacting with the device based on whether the challenge is successfully completed.

In yet another embodiment the application may download new validation tests from a server. As discussed a new challenge test may be downloaded e.g. each time a user navigates to a login screen of the application and the user may be required to complete the challenge before the user s input is accepted.

At step the application collects sensor data relevant to the selected validation test. For instance the handheld device s operating system may provide an application programming interface API having one or more functions which return sensor data. In such a case the application may call those API functions to e.g. retrieve current sensor data monitor changes in sensor data and the like. Here the particular data collected may depend on the validation test which is selected at step . A validation test based on facial detection may for example collect data by calling an API function which returns a camera image. In contrast a validation test based on movement may for example call an API function which monitors changes in position acceleration orientation etc. over a period of time.

At step the application determines using the selected validation test whether the collected sensor data is consistent with an individual interacting with the device. The validation test may ascertain whether an individual is interacting with the device in any feasible manner and the manner of ascertaining whether an individual is interacting with the device may generally vary for tests using different types of sensor data. For example a validation test which relies on camera images may be configured to determine using on one or more images whether a human face is present in the images. Here the facial recognition algorithm need not be complicated and may not necessarily recognize the actual individual depicted in the images. That is the facial recognition algorithm may simply determine based on e.g. various image features shapes colors etc. whether any human face appears in the images. As another example validation tests which use accelerometer magnetometer or gyroscope data may determine whether or not the handheld device is moving shaking etc. In yet another case the validation test may prompt a user to perform a challenge action e.g. Walk 5 feet Hum a tune Move your head from left to right and determine using appropriate sensors e.g. accelerometers microphones cameras etc. whether the challenge is successfully completed. Of course one or more validation tests may be used together and other validation tests may be used in addition to or in lieu of those described above.

At step the application accepts the input received at step if the sensor data is consistent with an individual interacting with the device. The application may accept the input in various ways depending on the nature of the input. For instance the application may accept input for creating an online account by sending an HTTP message to a server on which the account is to be created. As another example the application may accept a password for accessing a game running on the device by permitting the user to play the game.

In an alternative embodiment the application may return an indication of whether human device interaction is detected without sending data permitting access to an application and the like. For example the application may be a method which is called to determine human device interaction and such a method may simply return a boolean value indicating whether human device interaction is detected.

Although described above with respect to handheld devices embodiments of the invention may be adapted for use with a variety of computing devices having sensors. For example a camera and or a microphone of a desktop computer may be used to validate input as human input according to techniques described herein.

Advantageously embodiments disclosed herein permit input to be validated as human input without requiring a user to complete difficult challenges such as reading distorted text. In some embodiments input validation may even be transparent to users. As a result embodiments disclosed herein may increase accessibility and or be more secure than e.g. CAPTCHA challenges based on distorted text.

Various embodiments of the invention may be implemented as a program product for use with a computer system. The program s of the program product define functions of the embodiments including the methods described herein and can be contained on a variety of computer readable storage media. Illustrative computer readable storage media include but are not limited to i non writable storage media e.g. read only memory devices within a computer such as CD ROM disks readable by a CD ROM drive flash memory ROM chips or any type of solid state non volatile semiconductor memory on which information is permanently stored and ii writable storage media e.g. floppy disks within a diskette drive or hard disk drive or any type of solid state random access semiconductor memory on which alterable information is stored.

The invention has been described above with reference to specific embodiments and numerous specific details are set forth to provide a more thorough understanding of the invention. Persons skilled in the art however will understand that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention. The foregoing description and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense.

