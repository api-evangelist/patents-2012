---

title: Location estimation of social network users
abstract: Various embodiments relate to estimating the location of social network users. In one embodiment, a plurality of social media messages generated by a given user is received. A plurality of location features is extracted from the social media messages. Each of the location features is processed with at least one classifier from an ensemble of classifiers. A location classification is generated by each of the classifiers for each of the social media messages. Each classification comprises a location and a weight associated with that location. One of the locations is selected from the location classifications as the location of the given user based on a combination of the weights of the location classifications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09002960&OS=09002960&RS=09002960
owner: International Business Machines Corporation
number: 09002960
owner_city: Armonk
owner_country: US
publication_date: 20120824
---
This application is a continuation of and claims priority from U.S. patent application Ser. No. 13 487 855 filed on Jun. 4 2012 the entire disclosure is herein incorporated by reference in its entirety.

The present invention generally relates to location estimation and more particularly relates to estimating the location of users based on social networking messages.

Recent years have seen a rapid growth in social network services and social network messaging. This has spurred numerous research efforts to mine data from social networking messages for various applications such as event detection epidemic dispersion and news recommendation. These and many other applications can benefit from information about the location of users. However location data associated with social networking messages is currently very sparse or even non existent.

In one embodiment a method is disclosed. The method comprises receiving a plurality of social media messages generated by a given user. A plurality of location features is extracted from the social media messages. Each of the location features is processed with at least one classifier from an ensemble of classifiers. A location classification is generated by each of the classifiers for each of the social media messages. Each classification comprises a location and a weight associated with that location. One of the locations is selected from the location classifications as the location of the given user based on a combination of the weights of the location classifications.

One or more social network servers and at least one location server are also communicatively coupled to the network . The social network servers provide one or more social networking services and or environments to users of the user devices . Examples of a social networking service environment are a micro blogging service and a social networking website. Users access the social networking service via an interface such as a web browser or an application programming interface API . For example a user is able to submit social networking messages such as micro blogs and wall posts to the social networking service via the interface .

The location server includes a location estimator for estimating the location of users based on their social networking messages . In this embodiment the location estimator estimates or determines the home locations of these users at different granularities e.g. country city state time zone and or geographic region using the content of their social networking messages and their social network messaging behavior. A user s home location refers to the location in which the user lives resides at one or more granularities with the terms home location primary location and location being used interchangeably . The location estimator retrieves receives social networking messages from the social networking service . In this embodiment the location estimator obtains social networking messages using various mechanisms such as an API provided by the social networking service that allows the location estimator to receive streams of social networking messages from the service .

The location estimator comprises a message preprocessor one or more statistical classifiers heuristic classifiers behavior based classifiers and one or more predictability classifiers . Various examples of classifiers are Na ve Bayes Na ve Bayes Multimonial Sequential Minimal Optimization SMO a Support Vector Machine SVM implementation J48 PART and Random Forest. The message preprocessor extracts various location features also referred to as features or terms from the social networking messages generated by one or more given users and passes these features terms to the corresponding classifiers and . The statistical heuristic and behavior based classifiers and analyze these features and output a location of the user. In this embodiment one or more of the statistical classifiers utilize geographical data when performing a location determining process. One example of geographical data is the names of countries states territories cities counties and the like. The geographical data is manually entered by human users and or is obtained from sources such as the United States Geological Survey USGS gazetteer. The predictability classifier analyzes the features extracted for a given statistical classifier and the statistical model of a given classifier and to determine whether or not the location of a user can be determined.

In this embodiment one or more of the statistical classifiers heuristic classifiers and behavior based classifiers are pre trained from different features terms extracted from a training dataset comprising a test sample of social networking messages. The predictability classifier is pre trained based on the outputs of the statistical heuristic and behavior based classifiers being correct or incorrect.

Examples of features that are extracted from social networking messages for the statistical classifiers are words hashtags or any other metadata tag place names e.g. country state county and city location names and terms that are local to place names. Therefore in this embodiment the statistical classifiers include a classifier pre trained on word features a classifier pre trained on hashtag features and a classifier pre trained on place name features as shown in . These pre trained classifiers are also referred to as pre trained statistical models that each comprise a set of pre defined features associated with a given number of classes which is equal to the total number of locations within the training dataset granularity. For example if the granularity of the training dataset is at the city level the total number of classes for the statistical classifiers and corresponds to the total number of cities in the training dataset. The location classification process of the location estimator utilizes the statistical models of the statistical classifiers as well as the pre trained models of the heuristic and or behavior based classifiers to identify a home location of a user based on the features within the messages .

Each message in the training dataset is annotated with a location associated with the user who generated the message. This annotation can be generated based on a location given by the actual user. For example users participating in the training process can provide their home location as part of the training process. In another example the annotation can be generated based on a location from which the social networking message originated. In this example a bounding box is obtained in terms of latitude and longitude for each city using a geo coding API. Social networking messages are then recorded using the geo tag filter option of a social networking service s streaming API for each of those bounding boxes until a given number of messages are received from a given number of unique users in each location. The city corresponding to the bounding box where the user was discovered is assumed to be the home location for that user.

During the training process the features of each message in the training dataset are inputted into the appropriate classifiers and . The home location of the message is also inputted into the classifiers and . Statistical machine learning processes are then performed for each classifier based on these inputs. As a result of this training process a trained statistical model is generated for use during the location classification process. During training a statistical model can be generated for each classifier and at each level of granularity. Also the classifiers and can be continually trained based on classifications performed during the location classification process. While this example of training a classifier applied to the statistical classifiers the example is analogously applicable to training the heuristic and behavior based classifiers.

Once the classifiers have been trained location classification can be performed. During the location classification process the location estimator obtains one or more social networking messages associated with one or more given users. shows exemplary social networking messages obtained by the location estimator . The message preprocessor processes the social networking messages to extract various features terms that are passed to the classifiers and . To extract these features for the statistical classifiers and the message preprocessor performs a tokenization process to generate tokens from the messages while removing punctuation and other whitespace. Any tokens comprising uniform resource locators URLs or special characters e.g. and are then removed. However tokens comprising URLs from location based services and tokens representing hashtags or other metadata tags of interest starting with e.g. the token Portland in are not removed.

Once the tokens have been extracted various processes are used to extract features specific to each statistical classifier and . With respect to the words classifier the message preprocessor extracts all words from tokens that are nouns and non stop words in this embodiment. The message preprocessor utilizes a parts of speech tagging process to identify all words within tokens that are nouns. Adjectives verbs prepositions and the like are not utilized as features for the word classifier of this embodiment because they are often generic and may not discriminate among locations. The message preprocessor also compares words in the tokens to a predefined list of stop words which are words that are filtered out before or after processing of natural language data text . Any tokens comprising words matching this list are then removed from the tokens. In this manner the message preprocessor of this embodiment only extracts words that are nouns and non stop words.

With respect to the hashtag classifier the message preprocessor identifies extracts all tokens that start with the symbol or any other symbol of interest . With respect to the place names classifier the message preprocessor extracts a set of features that appear in the social networking message and match names of U.S. cities and states from the geographic data . Because not all city or state names are a single word the message preprocessor first generates bi grams and tri grams from the tokens which can be an ordered list . The message preprocessor then compares all uni grams bi grams and tri grams to the list of city and state names from the geographic data . Any matching names are used as features for the place names classifier .

Once the message preprocessor has identified extracted the set of features for a particular statistical classifier in this embodiment the message preprocessor identifies which of these features are particularly discriminative or local for a location at the granularity level of interest. For example the feature BaseballTeam A that is extracted from the fourth social networking messaging in is local to the city Boston . The message preprocessor utilizes one or more heuristics to select local feature from the set of features extracted from the messages . In this embodiment the message preprocessor computes the frequency of the selected features for each location and the number of people in that location who have used the feature in their social networking messages. The message preprocessor keeps the features that are present in the messages of at least a threshold percentage of people in that location where the threshold is an empirically selected parameter such as 5 . This process also eliminates possible noisy features.

The message preprocessor then computes the average and maximum conditional probabilities of locations for each feature term and tests if the difference between these probabilities is above a threshold T. If this test is successful the message preprocessor further tests if the maximum conditional probability is above a threshold T. This ensures that the feature has high bias towards a particular location. Applying these heuristics allows the message preprocessor to identify localized features and eliminates many features with uniform distribution across all locations. Non limiting examples of the above thresholds are T 0.1 and T 0.5. shows exemplary features and their conditional distributions. These local features become features that are inputted into the respective statistical classifiers and . Therefore the statistical classifiers and are able to receive local terms as well as the various features terms discussed above.

Each of the extracted features and is then passed to the corresponding statistical classifier and as shown in . Once each statistical classifier and receives the corresponding features and from the message preprocessor each classifier and applies its statistical model to these features and determines the probability of the user s location based thereon. Each classifier then outputs a location classification and comprising the location with the highest probability of being the location of the user. For example the words classifier outputs a location based on words within a message. The hashtag classifier outputs a location based on the hashtags within a message. The place name classifier outputs a location based on place names within a message. If local features are used as an input these classifiers and can also output a location based on the local terms. The outputs and of these classifiers and can be combined to create an ensemble of classifiers that outputs a location of the user based on the combination of outputs and of the individual classifiers and .

In addition to the statistical classifiers and the location estimator also utilizes heuristic classifiers that determine predict users locations at different granularities. For example shows a first heuristic classifier . This classifier is a local heuristic classifier that is specific to classifying city or state level location. The heuristic utilized by this classifier is that a user would mention their home city and state in social messages such as tweets more often than other cities and states. Therefore the local place heuristic classifier receives city and state terms from messages as input and computes the frequency count of cities and states mentioned in a given number of messages associated with a given user. The local place heuristic classifier utilizes this count as the matching score of the given user with the given city or state. The local place heuristic classifier outputs a location classification comprising the city or state with the highest matching score as the location of the given user.

A second heuristic classifier is a visit history heuristic classifier that is applicable to location classification at all granularities. The heuristic utilized by this classifier is that a user would visit places in his home location more often than places in other locations. In order to retrieve a user s visit history the message preprocessor searches for URLs generated by a location based service in a given user s messages e.g. the second social networking message in contains one such URL . The message preprocessor accesses the content pointed to by the URL and retrieves venue location information city state etc. associated therewith using one or more APIs associated with the location based service. This venue location information is inputted into the visit history heuristic classifier which builds a frequency based statistic for the visited location at the desired level of granularity. The visit history heuristic classifier outputs a location classification for the user comprising the location with the highest frequency. The outputs of one or more of these heuristic classifiers can be combined together and also with the outputs of one or more statistical classifiers to create an ensemble of classifiers as explained below.

The statistical and heuristic classifiers determine the location of a user based on the content of the user s social networking messages . In some embodiments the location of a user is alternatively or additionally determined based on the messaging behavior of the user. The behavior based classifier determines the location of a user based on the time at which the user sends generates their social network messages . shows the average messaging volume per user for each hour of the day in the four time zones of the United States shown in GMT . From this graph the messaging behavior throughout the day has the same shape in each time zone with a noticeable temporal offset that the classifier is able to leverage to predict the time zone of a user.

The behavior based classifier is configured by dividing the day into equally sized time slots of a specified duration. Each time slot represents a feature dimension for the classifier . Time slots for the classifier can be set at any duration and in this example are set at 1 minute durations. For each time slot the classifier counts the number of messages sent during that time slot for each user in a set of messages . Since total messaging frequency in a day varies across users the number of messages in a time slot for a user is normalized by the total number of messages for that user. shows that the differences between messaging volumes in different time zones are not uniform throughout the day. The graph in shows variations of standard deviations of messaging volumes across time zones. These variations mean that different times of day are more discriminative and this variation is captured by weighting the feature values of each time slot using the standard deviation for that time slot.

A user s location may not be correctly predictable by a statistical content based location classifier if the features extracted from user s messages do not have enough overlap with the discriminative features used by the trained model of that classifier. This is also true for the heuristic classifiers a user may not be correctly predictable if mentions of local place names or visits to locations do not exist or are not discriminative. Therefore it is advantageous to determine whether a user s location can be determined predicted by these types of classifiers. Also an ensemble classifier can improve its accuracy by eliminating classifiers that cannot provide accurate predictions for users whose features are less discriminative for both statistical and heuristics classifiers and less overlapping with the trained model for statistical classifiers .

Therefore in one embodiment the location estimator utilizes a predictability classifier in conjunction with each location classifier and . Each predictability classifier has a binary output predictable or not predictable. If a user is not predictable the location of that user is not predicted using the corresponding location classifier. Let T denote the set of terms from user s messages that would be considered for classification using a particular classifier. With respect to statistical classifiers the matching location distribution of a term t is the set of locations in a trained model containing that term. If that distribution is not empty the term is referred to as a matched term. When the matching location distribution is computed for all the terms in T a cumulative matching location distribution is found for the user. For the local place classifier this distribution contains locations from the geographical data that match content in the user s messages as well as the frequency of the match. For the visit history classifier this distribution contains locations from the user s visit history that appear in the geographical data and the frequency of their visits. As an example consider the following matching location distribution for the statistical word based classifier for a user at the city granularity New York 20 Los Angeles 10 Chicago 5 Dallas 3 Boston 6. Based on this distribution several metrics are computed to use as features for corresponding predictability classification.

The average classification strength or classification strength for a user is the inverse of the number of matching locations in the matching location distribution. Therefore the average classification strength is 1 5 0.2 for the above example. The maximum classification strength is the ratio of the maximum location frequency and the total frequency in the matching location distribution. For minimum classification strength the numerator is the minimum location frequency from the same distribution. Here the maximum classification strength is 20 44 5 11 0.4545 and the minimum classification strength is 3 44 0.068. These three classification strength metrics are used as features for all predictability classifiers.

The overlap strength of a user is the ratio of the number of matched features terms to the total number of features. For example if a user has 100 words identified from social messages e.g. tweets and 50 of them have a non empty matching location distribution then the overlap strength for the word based predictability classification will be . In one embodiment this feature is only used to train predictability classifiers for the statistical content based classifiers . To construct the labeled data for a predictability classifier the corresponding location classifier is used. For each user the location classification is generated using that location classifier and the predictability class label is set based on whether or not that classification is correct.

In one embodiment the individual classifiers and are combined together to form an ensemble of location classifiers as shown in . In this embodiment the ensemble of classifiers is a weighted linear ensemble of location classifiers. Let C C . . . C be the set of classifiers and Y x Y x . . . Y x be the classification produced by each of them where the input data is xand Y x corresponds to the location predicted by jth classifier. In the simplest ensemble approach of bagging each classifier receives an equal weight. More complex approaches such as boosting can also be used. In boosting weights are automatically learned based on performance. In this embodiment the classifiers are heuristically weighted according to their discriminative abilities as determined by the classification strength for classifying that instance. The location with the highest rank by weighted linear combination is returned as the result as shown in .

The weights of the location classifications corresponding to the same location are combined . For example the weights for location classification Lare combined the weights for location classification Lare combined the weights for location classification Lare combined and the weights for location classification Lare combined. The location classification comprising the highest weight or lowest depending on the weighting and or ranking mechanism is then outputted as the location classification for the user.

In some embodiments the weighting heuristic utilizing classification strength is not used for the behavior based classifier . In these embodiments the following ensemble approach can be utilized. Let TCbe the content based time zone classification and Wbe the normalized value of the weight associated with it where Wis computed as a ratio of the weight associated with classification TC sum of classification strengths for TC and the total value of classification strengths associated with content based classifications. Let TCbe the classification produced by the tweet behavior classifier and Wbe the weight associated with the classification TC where Wis either the probability value or the confidence value associated with the classification TC. The classification with higher weight is returned as the final classification.

For location classification at a smaller granularity such as city level classifiers discriminate among many locations to generate a location classification. In one embodiment this task is simplified by taking a large classification problem and dividing it up into multiple smaller classification problems in which the classifiers and are organized in a hierarchy. The initial classifier in such a system generates a high level classification such as for time zone and lower level classifiers are trained for each of the classes of the high level classifier. The low level classifier that is used for a particular instance is determined by the classification of the initial classifier.

In this embodiment a location is determined utilizing a two level hierarchy in which the time zone is the first level of hierarchy. The location estimator classifies between only certain time zones such as Eastern Central Mountain and Pacific . An ensemble time zone classifier is trained using all content based classifiers and the behavior based classifier. In this embodiment city classifiers are trained for each time zone with each classifier determining predicting only the cities in its time zone and only being trained with examples from that time zone.

In a state hierarchy configuration states territories are used as the first level of the hierarchy. The ensemble state classifier includes content based classifiers and city classifiers are built for all states. In a region hierarchy configuration geographical regions are utilized as the first level of hierarchy such as Northeast Midwest South and West and the regional hierarchical classifiers are built using the same basic approach as for the state hierarchical classifiers.

Accordingly embodiments of the present invention infer the home locations of social network users at different granularities such as city state time zone or geographic region using the content of their social networking messages and or messaging behavior. Some embodiments utilize an ensemble of statistical and heuristic classifiers to determine predict locations. Some embodiments utilize a hierarchical classification approach for improving prediction accuracy such as by predicting time zone state or geographic regions first and then predicting city next . A predictability classifier is utilized in some embodiments to determine whether enough information is available for a given user to predict the home location.

A predictability classifier associated with each of the ensemble of classifiers determines if the location of the given user is predictable by a given classifier at step . If the result of this determination is negative the location estimator prevents this classifier s from generating a location classification for the given user at step . This location estimator can be prevented from generating a location classification for all messages associated with the given user or a subset of the messages. If the result of this determination is positive each classifier processes the corresponding features and generates a weighted location classification for the given user at step . The location estimator combines the weights for each location classification comprising the same location at step . The location estimator selects a location classification as the location of the given user based on the combined weight associated therewith. The control flow then exits. A similar process is performed for a hierarchical ensemble of classifiers or for single classifiers.

The information processing system includes a computer . The computer has a processor s that is connected to a main memory mass storage interface and network adapter hardware . A system bus interconnects these system components. Although only one CPU is illustrated for computer computer systems with multiple CPUs can be used equally effectively. Although not shown in the main memory includes the location estimator and its components as well as the social networking messages and geographic data . In another embodiment the location estimator can reside within the processor or be a separate hardware component.

The mass storage interface is used to connect mass storage devices such as mass storage device to the information processing system . One specific type of data storage device is an optical drive such as a CD DVD drive which can be used to store data to and read data from a computer readable medium or storage product such as but not limited to a CD DVD . Another type of data storage device is a data storage device configured to support for example NTFS type file system operations.

An operating system included in the main memory is a suitable multitasking operating system such as any of the Linux UNIX Windows and Windows Server based operating systems. Embodiments of the present invention are also able to use any other suitable operating system. Some embodiments of the present invention utilize architectures such as an object oriented framework mechanism that allows instructions of the components of operating system to be executed on any processor located within the information processing system . The network adapter hardware is used to provide an interface to a network . Embodiments of the present invention are able to be adapted to work with any data communications connections including present day analog and or digital techniques or via a future networking mechanism.

The flowcharts and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

Aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention have been discussed above with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiments above were chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

