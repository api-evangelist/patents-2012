---

title: Generating network pages using customer-generated network page portions
abstract: Disclosed are various embodiments for generating network pages for customers that include customer-generated page portions. A request for a network page is obtained from a client. The network page is associated with a network site hosted by a hosting provider on behalf of a customer. A portion of the network page is obtained from a service operated by the customer in response to the request. The network page, which includes the portion, is generated in response to the request. The generated network page is sent to the client in response to the request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09542500&OS=09542500&RS=09542500
owner: Amazon Technologies, Inc.
number: 09542500
owner_city: Seattle
owner_country: US
publication_date: 20120111
---
The following application is related to co pending U.S. patent application entitled GENERATING NETWORK PAGES USING CUSTOMER SUPPLIED GENERATION CODE filed on even date herewith having application Ser. No. 13 348 051 which is incorporated herein by reference in its entirety.

Compliance with Payment Card Industry Data Security Standards PCI DSS and or other security standards may present challenges for online merchants. For this and other reasons online merchants may elect to have their electronic commerce platform managed by a third party electronic commerce hosting provider who ensures compliance with the security standards. However merchants may lose flexibility in customizing or configuring their network sites when using such a hosted solution as compared with a self managed solution.

The present disclosure relates to generation of network pages with a hosted network page server platform. Merchants and other owners of network page sites may contract with hosting providers to generate and serve up their network sites. For example a hosting provider may offer an end to end hosted electronic commerce platform that maintains an item catalog generates detail pages for items facilitates searching for items facilitates browsing for items by way of a taxonomy or by way of suggested items allows for customer reviews of items and so on. Such a hosted electronic commerce platform may include functionality relating to shopping carts order placement order management and fulfillment and or other functionality. Such a platform offers merchants many advantages over self managed solutions.

Merchants may wish to retain stylistic and content control over their online presence even if it leverages an end to end hosted electronic platform. However the hosting provider may be reluctant to grant the merchant access to execute arbitrary page generation code due to security concerns and compliance requirements for Payment Card Industry Data Security Standards PCI DSS and or other security standards. Various embodiments of the present disclosure facilitate customer control over network page generation with a hosted network site. As used herein the term customer may also include developers acting on behalf of customers of the hosting provider.

In a first embodiment a merchant or other customer of the hosting provider is able to upload page generation code for execution server side. Data aggregation is performed on behalf of the page generation code so that the page generation code does not contact data sources directly. In a second embodiment a merchant or other customer of the hosting provider self generates portions of network pages. These page portions are incorporated in network pages generated by systems operated by the hosting provider. In the following discussion a general description of the system and its components is provided followed by a discussion of the operation of the same.

With reference to shown is a networked environment according to a first embodiment relating to customer supplied page generation code. The networked environment includes a computing environment in data communication with one or more clients by way of a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks.

The computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively a plurality of computing devices may be employed that are arranged for example in one or more server banks or computer banks or other arrangements. For example a plurality of computing devices together may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. The computing environment may be operated by a hosting provider to host network sites for various customers.

Various applications and or other functionality may be executed in the computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the computing environment . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed by the computing environment for example include a plurality of data sources . . . N a data aggregation service a network page generation application a network page server application a network site configuration application and other applications services processes systems engines or functionality not discussed in detail herein. The data sources are executed to provide various data used in generating network pages for network sites of customers of the hosting provider. Where the customers are merchants the data provided by the data sources may relate to electronic commerce data such as for example item catalog data item suggestions data shopping cart data checkout data order data and so on. In one embodiment the data sources may comprise web services. In another embodiment the data sources may comprise files or other forms of data stores.

The data aggregation service is executed to aggregate data from the data sources for use in generation of network pages . The data aggregation service may employ parallel fetching to reduce latency when data is aggregated from multiple data sources . The network page generation application is executed to generate the network pages in response to page requests obtained from clients . The network pages may correspond to web pages gopher pages mobile application screens and or other forms of network content. Where the customer is a merchant the network pages may correspond to home pages catalog pages item detail pages shopping cart pages checkout pages order confirmation pages and so on. Such network pages may facilitate selecting items for purchase rental download lease or other form of consumption. In addition where the customer is a merchant the network page generation application may include or be in communication with an electronic commerce system that performs various backend functions in order to facilitate the online purchase of items.

The network page generation application may execute page generation code in order to generate the network pages . The page generation code may correspond to a default version supplied by the hosting provider or may correspond to a customized version supplied by the customer. In some cases the page generation code may be transformed or compiled from one code format to another and or may be interpreted. As a non limiting example the page generation code may correspond to JavaServer Pages JSPs which may be compiled into Java servlets which in turn may be compiled into bytecode which may be executable by the network page generation application . To this end the network page generation application may include a servlet container such as Apache Tomcat or another servlet container.

The network page generation application may be configured to obtain aggregated data from the data aggregation service and to provide the aggregated data to the page generation code for example as a set of predefined variables or by another approach. The network page generation application may act as a sandbox for the page generation code to enforce restrictions on application programming interface API calls access to the data source and or other resources in the computing environment

The network page server application is configured to obtain the page requests from the client over the network to generate network pages in response to the page requests using the network page generation application and to return the network pages to the client by way of the network . The network page server application may correspond to a commercially available hypertext transfer protocol HTTP server such as for example Apache HTTP Server Apache Tomcat Microsoft Internet Information Services IIS and or other servers.

The network site configuration application is executed to facilitate customer configuration of network sites. To this end the network site configuration application may enable uploading and configuration of the page generation code configuration of various parameters associated with the operation of the network site order fulfillment management item catalog management and or other functionality. The network site configuration application may implement an HTTP server a web based distributed authoring and versioning WebDAV server a file transfer protocol FTP server and or other servers.

The data stored in the data store includes for example network site data network site configuration data customized page generation code default page generation code a page generation resource consumption log page generation restrictions and potentially other data. The network site data corresponds to data used in the generation of the network pages for the hosted network sites of the merchants or other customers. Such data may include for example templates hypertext markup language HTML text extensible markup language XML cascading style sheets CSS images audio video animations and or other data.

The network site configuration data may store parameters and or other data for controlling the operation and appearance of the hosted network site. Such data may control various electronic commerce functionality such as for example item catalogs item taxonomies item searching item recommendations shopping carts checkout order fulfillment and or other functionality. The customized page generation code corresponds to page generation code which is created or customized by merchants or other customers. The default page generation code may correspond to a default set of page generation code for a merchant or other customer to use for a base functionality for a network site. The default page generation code may generate network pages having for example a default appearance and behavior for a generic electronic commerce site.

The page generation resource consumption log may indicate the computing resources consumed by the page generation code and or the network page generation application in generating network pages for customer network sites. The page generation restrictions may configure various restrictions to be placed on the page generation code by the network page generation application . As a non limiting example where the page generation code corresponds to JSP code the network page generation application may restrict the JSP code from including scriptlets and or various API calls. Various functionality may be whitelisted or blacklisted as the case may be. Such restrictions may be configured by way of parameters in the page generation restrictions .

The client is representative of a plurality of client devices that may be coupled to the network . The client may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. The client may include a display . The display may comprise for example one or more devices such as cathode ray tubes CRTs liquid crystal display LCD screens gas plasma based flat panel displays LCD projectors or other types of display devices etc.

The client may be configured to execute various applications such as a browser and or other applications. The browser may be executed in a client for example to access and render network pages served up by the computing environment and or other servers thereby generating a rendered network page on the display . The client may be configured to execute applications beyond the browser such as for example code development applications file transfer applications mobile applications email applications instant message applications and or other applications.

Next a general description of the operation of the various components of the networked environment is provided. To begin a merchant or other customer of a hosting provider associated with the computing environment configures a network site to be hosted through the computing environment . The network site may have a common domain that is shared by multiple customers of the hosting provider or the network site may correspond to a unique domain for each customer. The merchant or other customer may adopt default page generation code for various network pages accessible through the network site. Alternatively or additionally the merchant or other customer may create customized page generation code for generating some or all of the network pages accessible through the network site.

The merchant or other customer may interact with the network site configuration application to customize or make changes to the network site. In various cases the customer may edit the page generation code directly through the network site configuration application or the customer may upload replacement page generation code . Through this system customers are able to control generation of network pages for their network sites despite using a hosted infrastructure and potentially a hosted electronic commerce platform.

The page generation code is able to access the aggregated data generated by the data aggregation service . In some cases the page generation code may declare various data that it accesses which is then aggregated by the data aggregation service . In other cases the data aggregation service may provide a standard set of data from the data sources . The set of data may depend on the type of network page e.g. whether the network page is a checkout page catalog page order confirmation page and so on. In one example the aggregated data may be associated with the hosted electronic commerce platform provided by the hosting provider. The aggregated data may be provided to the page generation code by way of variables such as implicit variables or other variables that are available in the scope of the page generation code . The page generation code may be configured to use all of the predefined variables or a subset of the predefined variables. The page generation code may be restricted from accessing the data sources directly.

In operation the client sends a page request to the network page server application for some network page from a network site of a customer. The network site is hosted on behalf of the customer by the hosting provider who operates the computing environment . Where the customer is a merchant the hosting provider may operate a hosted electronic commerce platform in conjunction with the computing environment . The page request is provided to the network page generation application which then obtains the aggregated data from the data aggregation service . The aggregation may be performed automatically in response to the page request or in advance of the page request . The data aggregation service fetches the aggregated data from one or more data sources .

The page generation code for the requested network page is executed by the network page generation application . The network page generation application facilitates access to the aggregated data by the page generation code . The page generation code generates the network page and the network page server application serves up the network page to the client in response to the page request .

In some embodiments the page generation code is restricted from accessing one or more of the data sources . The customer supplied page generation code may be isolated from one or more of the data sources for purposes of complying with PCI DSS and or other security standards. Consequently the data from the data sources may be accessible only as aggregated data provided by the data aggregation service . It is noted that the data aggregation service may generate the aggregated data in response to the page request in response to other events or at other times as desired.

The page generation code may be analyzed for compliance with one or more policies according to the page generation restrictions when initially configured or compiled and or at runtime. Such policies may include acceptable content of the network page API usage usage of scriptlets or other disallowed language features and so on. If the page generation code is determined to be non compliant the page generation code may be unexecuted terminated if already executing replaced with default page generation code or another action may be taken.

In one embodiment the page generation code may be executed in an elastic computing resource which can expand and contract with respect to computing capacity in response to demand for the capacity by the page generation code . Such usage may be monitored or metered for billing and or other purposes. To this end the elastic computing resource usage may be recorded in the page generation resource consumption log . This recognizes that page generation code for some customers may be more computing resource intensive than page generation code for other customers. Accordingly an elastic amount of resources may be provided such that the customer is billed for what is used in terms of machine instances memory processor time disk space and or other resources that are allocated for the customer.

Referring next to shown is a networked environment according to another embodiment relating to customer supplied page generation code. The networked environment includes a protected computing environment in communication with a non protected computing environment and one or more clients by way of a trusted network a firewall and an untrusted network . The trusted network and the untrusted network each include for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks. Network traffic between the untrusted network and the trusted network passes through the firewall . The firewall may perform network address translation NAT packet filtering and or other functions which may serve to logically separate the trusted network from the untrusted network in accordance with network security policies.

In contrast to the networked environment the computing environment has been separated into a protected computing environment and a non protected computing environment to divide functionality. Such a division may be desirable for security reasons PCI DSS compliance reasons and or other reasons. It may be the case that the protected computing environment is under control of the hosting provider while the customer may have at least some control over the non protected computing environment at least to the extent that the customer is able to configure the page generation code . In other words the customer may have a greater level of access to the non protected computing environment than to the protected computing environment

In the exemplary arrangement of the protected computing environment includes the data store the data sources the data aggregation service and potentially other data and applications. The non protected computing environment includes the network page generation application the page generation code the aggregated data the network page server application and potentially other data and applications. Such a separation may be employed to prevent direct access by the page generation code to the data sources the data store an electronic commerce system and or other data and applications.

The data aggregation service may control access to the customer data by way of network address access control whitelists pre shared symmetric keys signed certificate validation and or other authentication approaches. In addition data request methods may be restricted e.g. HTTP GET may be permissible but HTTP POST or PUT may be impermissible. It may be the case that no external endpoints for the data sources are exposed to the untrusted network while an external endpoint for the data aggregation service may be exposed to the untrusted network for the network page generation application .

Moving on now to shown is a networked environment corresponding to a second embodiment where portions of network pages are generated by customers and then incorporated in network pages generated under control of a hosting provider for network sites of the customers. The networked environment may include a hosted computing environment in data communication with a customer computing environment and one or more clients by way of a network .

The hosted computing environment corresponds to computing resources provided by and under control of a hosting provider. The hosted computing environment hosts network sites for customers such as merchants similarly to the computing environment . The customer computing environment corresponds to computing resources under control of the customer. The customer computing environment may or may not be provided by the hosting provider. In one embodiment the customer computing environment corresponds to an elastic computing resource. The customer may have more flexibility in controlling aspects of the customer computing environment versus the hosted computing environment due to security compliance requirements such as PCI DSS. Additionally the hosted computing environment may correspond to shared infrastructure whereas the customer computing environment may correspond to dedicated infrastructure such as for example physical machines virtual machines and so on. In some cases one or more firewalls in the network may be interposed between the customer computing environment and the hosted computing environment

The hosted computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively a plurality of computing devices may be employed that are arranged for example in one or more server banks or computer banks or other arrangements. For example a plurality of computing devices together may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. Such computing devices may be located in a single installation or may be distributed among many different geographical locations.

Various applications and or other functionality may be executed in the hosted computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the hosted computing environment . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed by the hosted computing environment for example include a network page generation application a network page server application a validation service a network site configuration application and other applications services processes systems engines or functionality not discussed in detail herein. The network page generation application is executed to generate network pages for network sites of customers in response to page requests obtained from clients . In contrast to the network page generation application in does not execute customer supplied page generation code .

In this embodiment the network page generation application issues page portion requests to the customer computing environment and obtains network page portions from the customer computing environment in response. The network page portions are validated and included in the network page if valid. The network page server application may operate as described in connection with . The validation service is executed to validate and or verify the compliance of the network page portions with one or more policies.

The data stored in the data store includes for example network site data and network site configuration data as described in connection with as well as page portion verification data signature verification data and potentially other data. The page portion verification data includes data employed by the validation service to verify or validate the compliance of network page portions with one or more policies. For example the page portion verification data may include whitelists and or blacklists for elements that may or may not be included in the network page portions . The page portion verification data may also include data used to authenticate the customer computing environment . The signature verification data may include data used to verify signatures returned with the network page portions . Such signatures may be of a cryptographic nature and may be used to authenticate the source of the network page portion and or indicate a previous validation assessment of the network page portion .

The customer computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively a plurality of computing devices may be employed that are arranged for example in one or more server banks or computer banks or other arrangements. For example a plurality of computing devices together may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. Such computing devices may be located in a single installation or may be distributed among many different geographical locations.

Various applications and or other functionality may be executed in the customer computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the customer computing environment . The data stored in the customer computing environment includes for example aggregated data and potentially other data. The components executed by the customer computing environment for example include a page portion generation service and other applications services processes systems engines or functionality not discussed in detail herein. The page portion generation service is executed to generate network page portions in response to page portion requests . The network page portions potentially may include signatures for verification purposes. The aggregated data may be used to generate the network page portions .

Next a general description of the operation of the various components of the networked environment is provided. To begin a user at a client sends a page request to the network page server application associated with a network site of a customer of a hosting provider. In response the network page generation application determines what network page portions are to be included or incorporated in the network page to be generated. The network page generation application issues potentially multiple page portion requests to potentially multiple page portion generation services . The page portion requests may include data derived at least in part from the page requests and or other data.

The page portion generation services then generate the network page portions and may also generate signatures for verification purposes. The network page portions may include CSS XML HTML extensible HTML XHTML and or other types of code. The network page portions may be generated dynamically based at least in part on information derived from the page requests . The network page portions and signatures are returned to the network page generation application .

The validation service determines whether the network page portions comply with one or more policies in order for the network page portions to be included in the network page . To this end the validation service may perform a runtime check on the content of the network page portion . Where the network page portion includes HTML or CSS the validation service may determine whether the network page portion includes HTML or CSS elements that are permissible or impermissible according to the page portion verification data . In some cases the validation service may require compliance of the network page portion with a restricted XML schema. JavaScript VBScript and other scripting languages may be impermissible within the network page portion .

Several non limiting examples of HTML elements that may be impermissible include BGSOUND SCRIPT STYLESHEET EVENT OBJECT APPLET META LINK and others. Such elements may be impermissible due to the ability to import or include JavaScript or other impermissible executable code. An IMG element may be permissible to allow for the inclusion of images but the SRC attribute of the IMG element may be examined to ensure that the attribute does not include embedded JavaScript or other impermissible executable code. Other elements may be similarly examined for impermissible executable code. CSS import rules may be impermissible due to an inability to examine what is imported. Unparseable CSS may be impermissible as well as certain or unrecognized extension points and behaviors executed to style matched elements. CSS properties which are judged to be unsafe may also be impermissible.

The validation service may also evaluate the content of the network page portion to ensure compliance with established policies. For example a policy may require a copyright notice on each network page . The validation service may ensure that the copyright notice is included within at least one of the network page portions . Consequently in some situations validation may depend on a condition existing across multiple network page portions to be included in a network page .

To improve latency the validation procedure may be performed in advance. Advance validation may be used for example with network page portions that are relatively static. For example the page portion generation service may call the validation service and obtain a signature if the network page portion is valid. The signature may be returned to the network page generation application along with the network page portion . The validation service may then verify whether the signature is valid. In one scenario the signature may be configured such that any changes to the pre validated network page portion may render the signature invalid.

When the network page portions have been received the network page generation application assembles the network page portions into the network page along with potentially other content. If the network page portions are invalid they may not be included in the network page or the network page may not be generated. In some cases an error may be returned to the client . Likewise if the network page portions are not received due to a timeout or other error the network page may be generated without the network page portions or the network page may not be generated. If the network page is generated the network page is returned to the client by the network page server application .

Referring next to shown is a flowchart that provides one example of the operation of a portion of the network site configuration application according to the embodiments discussed in connection with . It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the network site configuration application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the network site configuration application obtains page generation code from a customer whose network site is hosted by the hosting provider who operates the computing environment . The network site configuration application may be configured to authenticate a client associated with the customer. In box the network site configuration application determines whether the page generation code is valid. If the page generation code is not valid the network site configuration application rejects the page generation code in box . An error may be presented to the customer. Thereafter the portion of the network site configuration application ends.

If the page generation code is valid the network site configuration application proceeds from box to box . Even assuming that the page generation code is determined to be valid by the network site configuration application validity checks may still need to be performed by the network page generation application at runtime. In box the network site configuration application compiles the page generation code . For example the network site configuration application may compile the page generation code from a JSP into a servlet. The resulting servlet code may also be compiled into bytecode for execution by a Java Virtual Machine JVM or directly by a processor circuit of the computing environment

In box the network site configuration application configures the network page generation application to execute the compiled page generation code for one or more network pages for the network site of the customer. In box the network site configuration application may store configuration data that configures the data aggregation service to provide a set of aggregated data to the page generation code . Thereafter the portion of the network site configuration application ends.

Continuing on to shown is a flowchart that provides one example of the operation of a portion of the network page generation application according to the embodiments discussed in connection with . It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the network page generation application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the network page generation application obtains a page request from the client by way of a network page server application . The page request indicates a network page from a network site of a customer. The network site is hosted by the hosting provider who operates the computing environment . In box the network page generation application obtains or fetches page generation code corresponding to the requested network page . In box the network page generation application aggregates various data pertaining to the customer from one or more data sources by way of the data aggregation service .

In box the network page generation application executes the page generation code . In doing so the network page generation application may perform various runtime checks to ensure that the page generation code does not include any impermissible code or content. In box the network page generation application provides the aggregated data to the page generation code as predefined implicit variables.

In box the network page generation application assembles the network page using the output of the page generation code and potentially other data. In box the network page generation application sends the generated network page to the client in response to the page request . Thereafter the portion of the network page generation application ends.

Turning now to shown is a flowchart that provides one example of the operation of a portion of the network page generation application according to the embodiments discussed in connection with . It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the network page generation application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the hosted computing environment according to one or more embodiments.

Beginning with box the network page generation application obtains a page request for a network page from a client by way of a network page server application . The network page is part of a network site of a customer which is hosted by the hosting provider who operates the hosted computing environment . In box the network page generation application determines whether the requested network page includes a customer generated network page portion .

If the requested network page does not include a customer generated network page portion the network page generation application moves to box and generates the network page without a customer generated portion. In box the network page generation application sends the network page to the client by way of the network page server application . Thereafter the portion of the network page generation application ends.

If instead the network page generation application determines that the requested network page does include one or more customer generated portions the network page generation application moves from box to box . In box the network page generation application obtains a network page portion from a page portion generation service . To this end the network page generation application may authenticate the page portion generation service . In some cases the network page generation application may obtain multiple network page portions potentially in parallel from multiple page portion generation services . If the network page portion cannot be obtained due to a network timeout or other error a network page may be generated without the unobtained portion or an error may be generated.

In box the network page generation application determines whether the network page portion has a valid signature by way of the validation service . A valid signature may indicate that a determination of validity has already been made for the network page portion . If the network page portion has a valid signature the network page generation application moves to box and generates the network page including the customer generated network page portion s . In box the network page generation application sends the network page to the client by way of the network page server application . Thereafter the portion of the network page generation application ends.

If instead it is determined that the network page portion does not have a valid signature the network page generation application proceeds from box to box . In box the network page generation application verifies the compliance of the network page portion with one or more policies of the hosting provider by way of the validation service . In box the network page generation application determines whether compliance has been verified. If compliance has not been verified the network page generation application transitions from box to box and generates the network page without the customer generated portion. In box the network page generation application sends the network page to the client by way of the network page server application . Thereafter the portion of the network page generation application ends.

If compliance is verified the network page generation application instead moves from box to box and may enable signature generation for the customer for the particular network page portion by way of the validation service . The network page generation application then moves to box and generates the network page including the customer generated network page portion s . In box the network page generation application sends the network page to the client by way of the network page server application . Thereafter the portion of the network page generation application ends.

With reference to shown is a schematic block diagram of the computing device according to an embodiment of the present disclosure. The computing device corresponds to a representative computing device which may be employed in the computing environment the protected computing environment the non protected computing environment the hosted computing environment or the customer computing environment .

The computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end the computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the data aggregation service the data sources the network page generation application the network page server application the network site configuration application and potentially other applications such as the page portion generation service and the validation service . Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in the memory and are executable by the processor as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Delphi Flash or other programming languages.

A number of software components are stored in the memory and are executable by the processor . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory and run by the processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory and executed by the processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory to be executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memory is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor may represent multiple processors and the memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor may be of electrical or of some other available construction.

Although the data aggregation service the data sources the network page generation application the network page server application the network site configuration application the page portion generation service the validation service and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits having appropriate logic gates or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts of show the functionality and operation of an implementation of portions of the network site configuration application and the network page generation application . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowcharts of show a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the data aggregation service the data sources the network page generation application the network page server application the network site configuration application the page portion generation service and the validation service that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system. The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

