---

title: Systems and methods for implementing customized routing in a modularized processing environment
abstract: A facility for customizable routing in a modularized routing environment is provided, where the complexities of routing functionality are not exposed to an application program. An identifier associated with a routing policy of an application program is used to configure a route table and to obtain routing instructions from the route table that are associated with the identifier. Routing is performed according to a message routing protocol, such as the Diameter protocol, for example. An interface between the facility and the application program may be implemented with an API that provides a relatively simple interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09386501&OS=09386501&RS=09386501
owner: Dialogic Corporation
number: 09386501
owner_city: Montreal
owner_country: CA
publication_date: 20121026
---
The present disclosure relates generally to systems and methods for implementing customized routing in a network using a modularized processing environment and relates more particularly to providing a facility for selecting specific routes for routing messages in a network while avoiding exposing the complexities of message routing processing to an application program.

Processing communications in a telecommunication network sometimes involves the routing of communication messages where the messages are sent on a specified path through the network. As used herein a message refers to any type of communication that uses a telecommunication network for transport and may include communications related to video voice text or other data transmission communications. For example call signaling messages are routed through a telecommunication network to set up manage and tear down a call. When a call is made a call session is typically initiated for which zero or more call signaling messages can be generated. The call signaling messages are routed to components in the communication network to manage the call during the call session.

Typically messages are routed in a network in accordance with various protocols. For example a call signaling oriented protocol such as SS7 or SIP may be used to process call signaling messages. Other message handling protocols may be used for purposes such as to implement authentication of users of the telecommunication network to authorize use of particular telecommunication network services and or to convey accounting information related to the authorized user. One such protocol for handling such messages including routing those messages through a network is the Diameter protocol which can be used within telecommunication networks that offer universal mobile telecommunications system UMTS and long term evolution LTE services.

The Diameter protocol contributes to determining how to route messages related to authentication authorization and accounting which determination s may be made at least in part based on Diameter protocol specified parameters of destination host destination realm and or application ID which parameters are defined by the Diameter protocol specification in IETF RFC 3588 2003 . The destination host destination realm and application ID parameters are contained within the Diameter protocol message that is to be routed as may occur during a call session for example. An implementation of the Diameter protocol specification includes rules and procedures for routing based on the above noted Diameter protocol parameters. It should be appreciated that Diameter protocol messages may be generated and routed through the network in the absence of a call or call session such as when a subscriber activates turns on a mobile phone in a mobile service cell area to establish a presence in the cell area. The Diameter protocol defines a precedence for evaluating the above noted parameters to select a route in the order of 1 destination host 2 both destination host and application ID and 3 destination realm.

Messages originated by users or clients are typically routed to servers which may be for example signaling servers that process the messages such as by providing responses or routing services. The routing of the messages including those based on the Diameter protocol may be implemented using various agents. The agents may be configured to implement security policies between administrative domains avoid exposure of network architecture consolidate routing configurations implement routing policies and or resolve interoperability issues. Some agents are defined explicitly for the Diameter protocol including relay proxy redirect and translation agents. One or more of these agents may perform any some or all of the operations of receiving a message analyzing a message modifying a message and or routing the message to an indicated destination.

The implementation and operation of the agents can be somewhat complex. For example the routing function performed by an agent can be influenced by such factors as peer availability advertized capabilities of a network node flow control mechanisms signaling network management state and load sharing. Because implementation of routing functionality is typically a complex undertaking due at least in part to some of the above mentioned factors development of such an implementation is often time consuming uses extensive development resources and is technically challenging. Due to some of these difficulties entities that seek to provide network equipment that implement routing face significant challenges in developing and implementing routing functionality in the network equipment.

The challenges of implementing routing functionality in network equipment have resulted in some equipment builders looking to third parties to develop and package routing functionality in a modularized component. The equipment builders can then incorporate such a routing functionality component in the equipment often with other modularized components which can reduce the complexity of the overall equipment implementation. The operator of the equipment which may be a builder referred to herein as a user may then access the routing functionality component with an application program via an interface that is intended to be simplified to promote interoperability between the routing functionality component and other components in the telecommunication equipment. The user of the telecommunication equipment thus does not typically deal with the complexities of implementing routing functionality but rather leaves that task to the third party provider of the routing functionality component.

The equipment builder user and third party provider can all stand to benefit from the modularization of the telecommunication equipment. The complexity and cost of building the equipment is reduced for the builder by taking a modular approach. The user can coordinate operations among modules more easily with improved organization that tends to make proper maintenance of the equipment easier to achieve. The third party provider can typically take advantage of economies of scale by providing the routing functionality component to numerous telecommunication equipment builders so that the significant development costs associated with the routing functionality component can be spread among the builders or users. The routing functionality component typically incorporates routing protocols including the Diameter protocol and typically implements the complex routing functionality desired by the telecommunication equipment builder. The routing functionality component may expose a simplified interface to permit the user to easily access and utilize the complex routing functionality.

In some instances a telecommunication equipment builder or a user might seek to provide proprietary or custom routing operations based on proprietary or custom routing parameters policies or logic for example. These proprietary or custom routing operations are sometimes implemented with the intent of optimizing network operations supporting a value added service enforcing one or more security policies or for other reasons that may be specific to the telecommunication equipment builder or user. However equipment builders and users are often limited in the proprietary or custom routing operations that can be performed through the simplified interface with the third party routing functionality component.

As a result telecommunication equipment builders may undertake to implement such proprietary or custom routing in conjunction with implementing the routing functionality themselves with all the attendant complexity and development challenges such as some or all of those discussed above. In such cases the telecommunication equipment builder will usually lose the advantages of utilizing a third party routing functionality component with a simplified interface and will typically be forced to absorb the significant development costs associated with customizing the routing operations in conjunction with implementing the complex routing functionality. In such an instance the telecommunication equipment builder would essentially develop a customized routing functionality component that is similar in many ways to the routing functionality component with the simplified interface offered by the third party while expending significant resources for development costs.

The presently disclosed systems and methods provide a facility for customizable routing in a modularized routing environment where the complexities of routing functionality are at least partially opaque or inaccessible to a user application. According to an aspect the disclosed systems and methods provide a routing engine that implements a protocol for routing messages in a telecommunication network. The routing engine is encapsulated so that the inner workings of the protocol are largely opaque or inaccessible to the user application to avoid over complicating routing control from the viewpoint of the user application. An interface to the routing engine is accessible to the user application to permit the user application to provide instructions and data to the routing engine to implement routing requests. For example the user application can provide instructions to the routing engine via the interface to configure a route table with an entry in accordance with a user application policy implementation. The user application can also submit routing requests to the routing engine via the interface to obtain routing for a message in relation to a corresponding route entry configured in the route table.

According to another aspect one or more route tables can be configured with an entry that includes an identifier that relates to an implementation of a routing policy of the user application. With the route table s so configured the user application can provide a routing request that includes and or references the identifier. The reference and or identifier may then be used to select a particular entry in a route table to contribute to determining a specific route and or routing instructions to be used for routing the message in accordance with the user application policy. The route determined in conjunction with the selected route table entry is used for routing the message through the network. The facility of providing an identifier in the route table s for a user application policy implementation beneficially permits the user application to implement customized route selection without requiring the user application to implement complex routing functionality.

According to an aspect of the present disclosure an application programming interface API is provided to implement the interface between the user application and the routing engine. The API exposes access to message routing functionality for the user application which can submit routing requests to the routing engine via the API. For example the API provides a facility for receiving routing configuration requests from the user application in which one or more route table entries can be added modified or deleted. One or more route tables can be configured with one or more entries to include an identifier or reference that permits a particular route to be selected in accordance with a desired user application policy implementation.

According to another aspect the API exposes a facility to the user application to accept routing requests that include the identifier and or a reference to the identifier. The interface exposed by the API accepts message routing parameters as well as the identifier and or reference that is used to specify a particular route selection in accordance with policies implemented by the user application. The routing engine looks up a route table entry based on the message routing parameters as well as the identifier and or reference and implements the desired routing functionality in accordance with the complexities of message routing protocols without exposing the inner workings of the message routing operations to the user application. Accordingly the API permits the user application to specify particular routes for messages using the identifier and or reference without the user application becoming involved in the intricacies of routing operations.

According to another aspect the user application is able to specify a particular route for routing a message where there otherwise may be several acceptable routes for routing the message. For example one or more route tables in the routing engine may include one or more entries that provide proper routing for a given message where the first route table entry that matches the message parameters is chosen for determining how the message will be routed. In such an instance the path taken by the message in the network can vary depending upon for example such factors as which route and or route table entry is first located in a route selection search the status of one or more network nodes which nodes may be nonfunctional unable to supply desired processing overloaded or unavailable for processing a message. In accordance with this aspect of the present disclosure a particular route can be specified to determine a path in the network with particularity based on a route table and or route table entry that corresponds to a routing policy identifier and or reference provided to the routing engine by the user application.

The present disclosure provides systems and methods for routing a message through a telecommunications network according to a customized routing specification. The customized routing specification is employed to designate a route for routing the message without exposing the complexities of routing operations to the user application that requests the routing operation. The designated route permits selection of a particular path for routing the message through the network where several possible paths might be available for routing the message.

Referring now to a block diagram of different pathways between interconnected nodes in a telecommunication network is illustrated. Network represents a portion of a larger telecommunication network such as for example a packet switched internet protocol IP network for illustrative purposes. Network consists of nodes that are interconnected to permit messages to be sent and or received among the various nodes. As shown in the exemplary embodiment there are six nodes and however it is noted that the number of nodes can be greater or less than six while still remaining in accordance with the scope of the present disclosure and its teachings.

Some of nodes and or may be implemented for example as network devices which network devices may include gateways routers network bridges switches hubs repeaters as well as other network devices that may be interconnected to pass messages to other network devices to which they are connected. For example node may be implemented as a home subscriber server HSS that processes communication data including by routing messages to peer nodes in network . Node designated as peer A and node designated as peer B are illustrated as peers of node in this example. Accordingly node can route messages through node or through node depending upon an ultimate destination of the message and the routing configuration of node .

Network includes a first pathway which is illustrated with an arrow as connecting node to node through node and node . A second pathway in network is illustrated with an arrow as connecting node to node via node and node . Node and node are peers of node and are respectively designated as Peer C and Peer D. Each of nodes is generally configured to have one or more route tables not shown that specify how incoming messages to each of nodes are to be routed in network . A route table is a construct typically implemented in memory of a telecommunication network node that provides information on how messages should be routed from the node.

Referring to a route table is illustrated as having three groupings of route entries organized as tables and . It is it is noted that the number of groupings can be greater or less than three while still remaining in accordance with the scope of the present disclosure and its teachings Tables and may be implemented as logical tables which is an organization in memory of the table data that permits access to the table data as if the information were actually stored in a table type format whether that is actually the case or not. For example route table may be physically or logically organized as a linked list to implement tables and . A linked list is a memory storage construct that is known in the relevant art for storing and referencing information in discrete groups. It should be appreciated by one of ordinary skill in the art that a route table such as route table can be implemented to have a single table construct with zero or more entries. Entries in the route table such as route table can be indexed based on one or more keys that each represent groups of route entries that can be searched to locate a particular route entry. In addition the logical or physical structure of a route table such as route table can be as a linked list as discussed above a tree structure or any other type of construct that provides consistent results for a search conducted on the structure to locate a route entry.

In the exemplary embodiment illustrated in table is implemented as a group of routes that provide standard routing instructions based on routing protocol parameters for example. Tables and are each illustrated as including route entries each of which can specify values for one or more of the Diameter protocol parameters destination host destination realm and or application ID. shows three route entries and for each of tables and however the number of route entries can be greater or less than three while still remaining in accordance with the scope of the present disclosure and its teachings. Each of route entries and can be referenced by one or more key fields that may be implemented as one or more of the Diameter protocol parameters mentioned above. For example route entry in table may include values for one or more of the Diameter protocol parameters destination host destination realm and or application ID which values are used as keys to locate route entry in table .

In some circumstances such as when the search criteria does not include a routing policy identifier a search of route table is directed to table to locate standard routes based on the content of key fields . Such a search typically matches the values contained in one or more of key fields with the corresponding values provided in the search criteria. It may be the case that route entries and in table all provide appropriate or proper routing instructions for routing a given message. However route entry may be selected prior to route entry or if for example route entry is the first route entry encountered in the search that matches the route search criteria. Accordingly while each of route entries and may provide appropriate and proper routing instructions for routing a given message route entry being located first in accordance with the search criteria would be selected to provide the routing instructions for routing the message.

Referring again now to if route table is implemented in node for example route entry may correspond to peer connections leading to pathway in network . For example route entry may identify a peer connection for Peer B node . In such an instance selection of route entry provides routing instructions for routing the message to Peer B node . Furthermore route entry may represent a route for forwarding the message from node to node along pathway . In that instance route entry identifies a peer connection for Peer A node . Selection of route entry in this case provides routing instructions for routing the message to Peer A node . However due to the selection of route entry prior to the selection of route entry based on the content of key fields routing instructions for routing the message from node to the peer connection for Peer B node would be retrieved.

Other factors may also influence the selection of a route entry in table to obtain routing instructions for a given message which factors may include for example network status peer availability advertised capabilities of peers flow control mechanisms and or load sharing determinations. In any event when a routing policy identifier is not specified in a routing request the resulting route selection is limited to the route entry such as route entry selected according to the content of key fields conditioned by factors related to network operations.

In accordance with an exemplary embodiment of the present disclosure route table shows tables and that are referenced respectively in accordance with the value of routing policy identifier fields and . Routing policy identifier fields and correspond to policy IDs that are associated with particular routing policy implementations specified by the user for routing messages out of a node such as node for example. Tables and are organized according to a similar construct as table in which route entries and are provided and referenced based on the content of key fields . It should be understood by one of ordinary skill in the art that route entries in each of tables and may each include unique values for routing protocol parameters such as destination host destination realm and or application ID where selection of a particular one of route entries or can be made on the basis of key fields .

In accordance with an exemplary embodiment of the present disclosure the value of a routing policy identifier employed in a search criteria is used to reference a specific one of tables and . For example no specified routing policy identifier in the search criteria can be used to reference table whereas a routing policy identifier value that matches that in routing policy identifier fields or can be used to respectively reference table or table . Routing policy identifier fields and can be viewed as an additional key field that can be used to locate particular groups of routes in route table . It should be understood by one of ordinary skill in the art that any number of route tables such as route table can be implemented in a given network node and any number of table or other constructs such as tables and can be implemented in a route table such as route table . Moreover a route table such as route table can be implemented to have alternate or additional constructs other than tables such as linked lists trees or other logical or physical organizations of data that can be realized in a memory. The use of route table in the process of route selection is discussed further below.

Referring to a block diagram of node according to an exemplary embodiment of the present disclosure is illustrated as having internal components one or more of which may be implemented with one or more hardware components for example. Node may be implemented as an HSS as mentioned above and includes a processer a memory a bus an incoming interface and an outgoing interface . Processer executes instructions out of memory to implement constructs such as a route table not shown to direct a message received on interface to an appropriate output channel not shown in interface . Routing a message to a particular output channel in interface causes the message to be directed to a peer network device such as peer A or peer B in respective node or node . Route table illustrated in can be implemented in memory of node and accessed and manipulated by processor .

Referring now to a block diagram illustrates an architecture of internal components of node according to an exemplary embodiment of the present disclosure which internal components may be implemented in hardware or software for example. Architecture may be implemented in node with processor executing instructions from memory to implement the various internal components of architecture .

Architecture is illustrated in this exemplary embodiment of the present disclosure as having two major components that implement routing operations namely an application program and a routing engine . Application program is typically but not necessarily created and configured by a user to implement the users desired policies and behaviors for node . Routing engine is typically but not necessarily created and configured by a third party and provided to the user as a stand alone component that can be incorporated into architecture using an interface . Routing engine provides routing functionality for network node for example under the direction of application program .

Application program communicates with routing engine using interface that links the two components together to permit exchanges of information to implement routing operations. According to an exemplary embodiment of the present disclosure interface may be implemented as an application programming interface API that provides structured access between application program and routing engine . Typically but not necessarily application program provides instructions to routing engine through interface for configuration of routing operations in addition to providing runtime routing requests to indicate how messages should be routed. Application program includes a configuration controller that is responsible for providing routing configuration instructions and data to routing engine through interface . Configuration controller is a processing component that can create configuration instructions and data for configuring routes in routing engine that will determine how messages received by application program will be processed for routing. Configuration controller is implemented to set specific routes or lists of routes in routing engine in accordance with desired configuration parameters established for application program . For example configuration controller can format requests that are used to instruct routing engine to configure routes for routing messages where the information in the formatted requests is derived from desired policies to be implemented by application program .

Routing engine includes a route configuration handler that receives the instructions and data from configuration controller via interface for configuration of a route table . Route table may be implemented as route table illustrated in or as route table illustrated in . Accordingly route table may be organized to have entries grouped into different categories that may be referenced by standard routes or a routing policy identifier such as is illustrated with route table and

Configuration handler can access route table and use the instructions received from configuration controller to modify route table in accordance with the instructions such as by adding instantiating an entry to route table modifying an entry or deleting an entry. The instructions provided to route configuration handler may be applicable to configuration of a list of routes in a given construct of route table such as one of tables or or may be applicable to configuration of one or more individual routes that can be implemented in route table .

Route table may be implemented and organized in accordance with route table illustrated in where route entries are logically or physically grouped together according to a given category for example. Table illustrates route entries that are grouped according to routing policy identifiers as may be provided by routing policy identifier fields or or the absence thereof. In addition or alternatively route table may be organized as a single table data structure that holds zero or more routes. A route provided in route table is referenced in accordance with one or more key fields. In accordance with an exemplary embodiment of the present disclosure the key fields that may be used to reference a route entry in the single table data structure may include a routing policy identifier a destination realm a destination host and or an application ID. Any one some or all of such key fields may be used to reference a given route entry for selection of desired route.

Once a new route entry is instantiated the applicable key fields of the new route entry are configured with values specified by route configuration handler . Any some or all of the key fields may be configured with values which may then be used to reference the route entry when a search is performed on route table . The new route entry with the configured key fields is then added to the collection of route entries in route table .

The way in which the new route entry is added to the collection of routes may depend upon the configuration of route table . For example if route table is configured in accordance with the arrangement of route table illustrated in the new route entry may be added to one or more of tables or or may be used to establish a new table construct. As an additional or alternative exemplary embodiment of the present disclosure the new route table entry may be added to the collection of routes by being included in a linked list of route entries. For example if route table is configured as a single data structure such as a linked list the new route entry may be added at the end of the data structure. In such an instance the new route entry would be referenced in a search of route table in accordance with the values configured for the key fields provided in the new route entry.

Route table can be configured via route configuration handler upon initialization or at any time during operation in accordance with instructions provided from configuration controller in application program for example. Route table can be used to locate desired routing instructions based on a search through route table conducted on the basis of the values in the key fields or other parameter values that can be implemented in one or more of the route entries in route table .

Application program also includes a policy engine and a request handler that are communicatively connected together. Request handler is a processing component that receives and processes messages such as routing protocol messages that may be for example Diameter protocol messages. Request handler is also communicatively connected to interface to provide instructions and data to routing engine to arrange for routing of the received message. Request handler thus provides processing for messages that are received by network node and managed by application program to permit the messages to be forwarded to appropriate destinations. As part of the processing request handler submits requests to policy engine to determine how messages should be processed according to policies that may be set in policy engine . More specifically policy engine provides a set of rules and policy implementations that can indicate how certain messages are to be processed such as by providing information on how messages should be routed.

In operation request handler submits a request to policy engine to determine how an incoming message should be handled. Request handler may pass parameters to policy engine that are related to the message such as origination destination originator device identifier and or other call signaling related information that may for example contribute to a determination of routing instructions based on policy considerations. Policy engine analyzes the message and or passed parameters and provides request handler with information for processing the received message. The information provided to request handler may include an identifier that identifies a particular policy specified in policy engine and or may identify a particular route to be used for processing the message. The information returned from policy engine permits request handler to formulate a request to routing engine via interface to undertake routing operations for the message. The request may include the identifier provided by policy engine .

Routing engine includes a request handler that manages requests for routing operations received from application program . More specifically request handler receives requests from request handler via interface and processes the requests to provide routing instructions for routing the message. Request handler is connected to a route selector which provides route selection information to request handler upon request. Route selector is connected to route table and can access and search route table to obtain routing instructions that are determined by the information provided by request handler . Route selector thus uses the information provided by request handler to search route table for a route entry that matches a criteria indicated by the information supplied to route selector by request handler .

Route table can include zero or more route entries which operate as rules for routing a given message. Route entries in route table are typically broken up into two different sections such as an input section that is used to match routes with search criteria and an output section that provides routing instructions specific to the network node in which the route table is implemented such as for example node . The input section may include key fields that have values that can be used to match search criteria to select a route. Route selector provides the criteria to be matched against the input section of the entries of route table and receives the routing instructions in the entry that matches the input criteria. The routing instructions retrieved by route selector are provided to request handler .

In accordance with an exemplary embodiment of the present disclosure request handler provides the routing policy identifier received from request handler to route selector . Route selector uses the routing policy identifier to index through route table to locate a specific matching entry. The entry in route table that matches the routing policy identifier provided by route selector is the entry that was previously configured with the routing policy identifier specified by configuration controller . Consequently a specific entry in route table associated with the routing policy identifier is retrieved by route selector and provided to request handler to provide specific routing instructions for the message being processed by routing engine .

It should be understood by one of ordinary skill in the art that the routing policy identifier used to index through route table may be the routing policy identifier provided by policy engine via request handler and application program . The routing policy identifier can be used as a primary key in searching route table so that a group of routes corresponding to the routing policy identifier may be selected for further searching operations by route selector . For example if route table is implemented as route table illustrated in the routing policy identifier can be applied to match an associated routing key field in tables and . If for example the routing policy identifier matches value of table table is further searched for an entry that matches the parameters in the search criteria which parameters may include key field values such as destination host destination realm or application ID in accordance with the Diameter protocol. If no routing policy identifier is specified in the routing request provided by request handler in application program table in route table may be selected for further searching operations to locate a route entry that matches the search criteria.

It should be understood by one of ordinary skill in the art that the routing policy identifier used by route selector to select an entry in route table may be the same as or different from the routing policy identifier provided by policy engine or configuration controller . For example the routing policy identifier used by route selector may be provided as a reference that is specific to the entry in route table that includes the routing policy identifier provided by configuration controller . Since application program sets the route configuration of route table application program may provide a particular reference or routing specification to routing engine that is known by application program to cause the selection of a single entry in route table . For the sake of simplifying interface the routing policy identifier used by configuration controller policy engine and the routing policy identifier provided in route table may all be identical. By providing a single routing policy identifier that can be passed between application program and routing engine interface which may be implemented as an API can be simplified and can include a basic message structure.

Referring to a route table is illustrated in accordance with an exemplary embodiment of the present disclosure. Route table includes seven route entries each of which is identified with a respective designator . It is noted that the number of designators can be greater or less than seven while still remaining in accordance with the scope of the present disclosure and its teachings. Route entries represent different scenarios for how a given route entry may be selected based on the key fields of the routing policy identifier and Diameter protocol parameters destination host denoted as Dest Host in destination realm denoted as Dest Realm in and application ID denoted as App id in . For example route entry labeled as Route is the only route entry in route table that includes a value for the key field labeled as Dest Host to indicate the Diameter protocol destination host parameter. Accordingly a search performed on route table with the search criteria of destination host equal to hlr1.abc.com causes route entry to be selected.

Route entry and each have a key field value of 123.co.uk for the key field labeled destination realm. Route entry also includes the key field labeled as Policy ID which has a value of 1. Accordingly a search performed on route table with a destination realm value of 123.co.uk and with no value for the key field labeled Policy ID or a value other than 1 for the key field labeled Policy ID causes route entry to be selected. A search performed on route table with the parameters that include destination realm with a value of 123.co.uk and a value for the key field labeled Policy ID of 1 causes route entry to be selected.

A search performed on route table with destination realm value of xyz.co.uk selects route entry if no value for the key field labeled Policy ID is specified or selects route entry if the value for the key field labeled Policy ID is set to 1 and selects route entry if the value for the key field labeled Policy ID is set to 2. In accordance with the exemplary embodiment of the present disclosure of a route table as illustrated with route table different route entries and thus routing instructions can be selected in the route table based on varying routing policy identifier values where specification of a routing protocol parameter value may lead to nonspecific route entries being selected for routing the message in the network. For example in the absence of a value for the key field labeled Policy ID in any of route entries of route table specifying the destination realm of xyz.co.uk as a search criterion for route table would potentially permit any one of route entries or to be selected for routing the associated message. The selected route entry in such an instance depends on which of route entries or is first located in a search of route table . For example if a search of route table were to be conducted for entries with a destination realm of xyz.co.uk and route entry was the first to be located in such a search that route entry would be selected for determining routing instructions for the message. With the introduction of the key field for the Policy ID parameter a specific route entry in route table can be selected based on appropriate search criteria that includes a value for the routing policy identifier. Thus a customized route can be selected based on the request provided by application program in accordance with a routing policy identifier.

Request handler is connected to a routing controller which is responsible for determining how to implement the routing instructions in accordance with the configuration of network node . Request handler provides routing controller with the instructions and information obtained from the route entry in route table that match the criteria related to the message that is to be routed. Routing controller is connected to a peer connection controller which is responsible for connection control for connections to peers of network node . Peer connection controller is connected to an interface which provides a structured transport mechanism for the message under control of peer connection controller based on the control instructions received from routing controller . Interface may have a single connection not shown or one or more different connections not shown to peer network nodes that can be used to transport messages. A connection on interface that is chosen to transport a message determines the route that the message traverses from network node . Accordingly route table provides logical designations for routing messages which are translated to physical connections for routing through processing by routing controller and peer connection controller .

According to an example of an implementation of the disclosed systems and methods user application is configured to specify particular routing policies that can be implemented by routing engine . In this example the user defines a routing policy for messages with a mobile subscriber integrated services digital network number MSISDN in the range of 07740111111 to 07740222222. The routing policy calls for routing messages associated with an MSISDN that falls in this range from node to peer A node and calls for routing all other messages from node to peer B node . In this example the user can configure two routes each being associated with a specific routing identifier to provide customized routing for the desired routing policy implementation. The user thus configures application program to form and submit a route table entry configuration request via configuration controller to establish routes to implement the policy.

Referring to a route table entry configuration request is illustrated in accordance with an exemplary embodiment of the present disclosure. Request is employed to supply a desired entry in route table see to implement the policy according to the above example. Request includes a message header and various parameter fields that are used for setting up the desired entries in route table . Included in request is a routing policy identifier with a label of Policy id and a value of Policy identifier. Routing policy identifier may be used to establish a key field such as is discussed above with respect to . Request also includes a route entry identifier with a label of Route id and a value of Route identifier. Route entry identifier can identify a specific route in route table that is to be configured. Configuration controller illustrated in formulates and forwards request over interface to route configuration handler in routing engine . Route configuration handler receives request and prepares to update route table with an entry that may include one or more parameters provided in request including routing policy identifier .

Referring now to an exemplary embodiment of a route table route list configuration request that is formed by configuration controls is illustrated which is intended to follow request . Request includes a message header and several parameter fields that are used for setting up the desired entries in route table . Request includes a route entry identifier with a label of Route id a route list identifier with a label of Route list id and a peer identifier with a label of Peer id. Route list identifier has a value of Route list identifier that identifies the particular route list that is to be configured in route table . Route entry identifier has a value of Route identifier which matches that of request to establish that request is to be used to configure a route entry in route table corresponding to the value Route identifier found in route entry identifier . Peer identifier has a value of Peer identifier which presumes that the peer connection to peer A node was previously configured with a value of Peer identifier associated with the peer connection.

Request is provided by configuration controller via interface to route configuration handler in routing engine to configure route table with the specified route. illustrates a portion of route table that includes an entry that results from route configuration handler receiving and processing requests and . Route entry includes route entry identifier labeled as Route id with a value of Route identifier and routing policy identifier labeled as Policy id with a value of Policy identifier on an input side of route table . Note that the value of route entry identifier matches that of route entry identifier and route entry identifier . Also the value of routing policy identifier matches that of routing policy identifier . An output side of route entry provides the selection of peer A node which has a peer identifier labeled as Peer id with a value of Peer identifier which matches the value of Peer identifier .

When a request is applied to route table that includes routing policy identifier with a value of Policy identifier route entry is selected which results in peer identifier with a value of Peer identifier being returned to identify a connection to peer A node as the routing target for the message associated with the routing request. Accordingly messages with the MSISDN in the above specified range will be routed from node to node based on the content of route entry provided in route table .

In operation the routing selection process is initiated by receipt of a message by application program that includes an MSISDN in the above specified range. Request handler receives the message and submits a request to policy engine to determine how the message should be handled. Policy engine is configured with the above noted policy for routing messages with the MSISDN in the above noted range and thus provides a routing policy identifier associated with the policy in addition to other routing related parameters such as one or more of a destination realm destination host and or application ID. The value associated with the routing policy identifier is Policy identifier and is the value returned to request handler to implement the desired routing policy in this example. Request handler forms a routing request that includes the routing policy identifier value and forwards the routing request to routing engine via interface .

Referring to a format of a routing request as composed by request handler is illustrated. Request includes a message header and parameters and which are respectively the destination host destination realm and application ID that are defined for the message routing protocol employed by routing engine such as may be implemented with the Diameter protocol. Parameter is the routing policy identifier labeled as Policy id with a value of Policy identifier. Routing request is received by request handler in routing engine for routing processing.

Request handler receives routing request and submits a route selection request to route selector . Route selector in turn performs a search on route table to match the parameters of routing request with entries in route table . Route selector locates route entry that includes routing policy identifier with a label of Policy id and a value of Policy identifier which matches routing policy identifier of routing request . Upon determining that route entry matches routing request route selector returns routing instructions in the form of peer identifier with a label of Peer id and a value of Peer identifier which designates peer A node . Route selector returns the value of peer identifier to request handler which in turn submits a request to routing control . Routing control forwards the message to the appropriate connection configured with a peer identifier of Peer identifier via peer connection controller . Peer connection controller receives and forwards the message to interface on the appropriate connection with a peer identifier value of Peer identifier to reach peer A node .

Referring now to as well as a flowchart illustrates a process for configuring route table in accordance with an exemplary embodiment of the present disclosure. A block illustrates the process of forming a configuration request by application program to include a routing policy identifier. The configuration request is forwarded to routing engine as illustrated in a block .

The forwarded configuration request is used to configure route table with one or more entries indicated in the configuration request as illustrated in a block . The one or more entries configured in route table include the routing policy identifier provided in the configuration request as is also illustrated in block . In accordance with the process illustrated in flowchart route table is configured with route entries that include the routing policy identifier used to select a specific route for customized routing of messages.

Referring now to as well as a flowchart illustrates a process for implementing customized routing for a message. A block illustrates the receipt of the message such as may occur by application program receiving a message that is directed to and handled by request handler . A decision block illustrates the determination being made as to whether a policy exists for the received message. The determination illustrated in decision block can be made by policy engine upon request by request handler . If a policy does exist for the message a routing policy identifier is obtained that relates to the routing policy for the message as illustrated with a block which is reached via the Yes branch from decision block . If no policy is specifically provided to handle the received message a routing policy identifier is not returned by policy engine or a routing policy identifier that is non specific for determining a route is returned. The lack of or a non specific routing policy identifier being returned is illustrated with the No branch of decision block being taken. A routing request is formed with the routing policy identifier value or lack thereof and the routing request is forwarded to the routing engine as illustrated in a block . The routing engine may be implemented as routing engine which can receive the routing request from request handler via interface .

Upon receipt of the routing request a search of route table can be initiated to locate a routing instruction that is based on or matches the routing request as illustrated in a block . The route table is searched to locate a routing instruction that matches criteria in the routing request with the end result being that a matching entry is located or not located as illustrated in a decision block . If an entry matching the criteria associated with the routing request is not found a default routing instruction is returned in response to the routing request as illustrated in a block that is reached via the No branch of decision block . If a route table entry matching the criteria of the routing request is located the routing instruction associated with that entry is returned in response to the routing request as illustrated in a block . The routing instruction returned in response to the routing request may be selected based on the routing policy identifier included in the routing request such that a customized routing instruction is provided in response to the routing request.

Upon obtaining routing instructions message routing can be determined and implemented based at least in part on the routing instructions as is illustrated in a block . The message is routed based on the routing determination as shown in a block to thereby implement customized routing for a message without exposing routing operation complexities to a user application.

The operations herein described are purely exemplary and imply no particular order. Further the operations can be used in any sequence when appropriate and can be partially used. With the above embodiments in mind it should be understood that the in accordance with the present disclosure there can be employed various computer implemented operations involving data transferred or stored in computer systems. These operations are those requiring physical manipulation of physical quantities. Usually though not necessarily these quantities take the form of electrical magnetic or optical signals capable of being stored transferred combined compared and otherwise manipulated.

Any of the operations described herein that form part of the present disclosure are useful machine operations. The present disclosure also relates to a device or an apparatus for performing these operations. The apparatus can be specially constructed for the required purpose or the apparatus can be a general purpose computer selectively activated or configured by a computer program stored in the computer. In particular various general purpose machines employing one or more processors coupled to one or more computer readable medium described below can be used with computer programs written in accordance with the teachings herein or it may be more convenient to construct a more specialized apparatus to perform the required operations.

The disclosed system and method can also be embodied as computer readable code on a computer readable medium. The computer readable medium is any data storage device that can store data which can be thereafter be read by a computer system. Examples of the computer readable medium include hard drives read only memory random access memory CD ROMs CD Rs CD RWs magnetic tapes and other optical and non optical data storage devices. The computer readable medium can also be distributed over a network coupled computer system so that the computer readable code is stored and executed in a distributed fashion.

The foregoing description has been directed to particular embodiments of the present disclosure. It will be apparent however that other variations and modifications may be made to the described embodiments with the attainment of some or all of their advantages. The procedures processes and or modules described herein may be implemented in hardware software embodied as a computer readable medium having program instructions firmware or a combination thereof. For example the function described herein may be performed by a processor executing program instructions out of a memory or other storage device. Therefore it is the object of the appended claims to cover all such variations and modifications as come within the true spirit and scope of the present disclosure.

