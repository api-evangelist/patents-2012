---

title: Arrangements of text type-ahead
abstract: A method and system of text entry. An attribute of text entered by a user into an application is determined. The entered text is matched to a single portion of each attribute segment of one or more indexed segments of text, based upon a determined attribute of each attribute segment and the determined attribute of the entered text. Each attribute segment consists of the single portion and a remaining portion. After the entered text is matched to a single portion of each attribute segment, a selection of a single attribute segment selected from the one or more indexed segments of text by the user is received. The remaining portion of the selected single attribute segment is entered into the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08725753&OS=08725753&RS=08725753
owner: International Business Machines Corporation
number: 08725753
owner_city: Armonk
owner_country: US
publication_date: 20120905
---
This application is a continuation application claiming priority to Ser. No. 12 015 361 filed Jan. 16 2008 now U.S. Pat. No. 8 316 035 issued Nov. 20 2012.

The present invention is in the field of text entry. More particularly the present invention relates to methods and arrangements to auto complete user entered text.

Users of applications that accept text entry such as Instant Message IM clients and email programs often type keywords or phrases that they have previously typed or previously seen in a text document. For example an IM user may use some words or phrases regularly. Examples include information about the user s availability such as Sorry on a call right now. will ping you later long keywords or phrases such as polymorphism or IBM Tivoli Composite Application Manager ITCAM and a referral for a certain expertise. For instance an IM user may type a message to another contact saying For the ABC problem in product XYZ you can contact Joe Somebody as he is the developer of that component. His short name is joesomebody us.ibm.com . Similarly a user may email or IM friends about a recently viewed web page.

In current applications that accept text entry entering text that a user has previously typed or viewed may require manually performing a laborious and time consuming series of steps. Below is an example of the manual method in a scenario in which a user repeatedly asks permission to use a resource 

In this scenario Danny continues to ask the same question and provide the same explanation to other IM users. To avoid retyping Danny may perform the typical steps of copying and pasting. These steps include 

The problems identified above are in large part addressed by methods and arrangements of text entry. One embodiment provides a method of text entry. The method may involve selecting segments of text from text files based upon the number of words in phrases of the text files upon the number of letters in words of the text files or upon other patterns of the text in the text files. The text files may include web sites and news indexes. The method may also involve indexing the selected segments of text matching text currently being entered by the user current text into an application to a portion of a segment of the indexed text and entering a remaining portion of the segment of the indexed text into the application based upon the matching. In some embodiments the current text may be matched to a portion of a single word and the single word may be entered into the application. In many embodiments the text may be selected from the text entered into any of several applications. In a few embodiments the text may be selected from sources specified by a user.

In several embodiments a user may specify web sites and topics and segments of text may be selected based upon the specification of web sites and topics. In many embodiments the matching may include determining an attribute of text and matching based upon the attribute. In some further embodiments the matching may be based upon a time period of text. Current text may be matched to a segment of indexed text based upon a time period of the segment of the text and a time period of the current text. In several further embodiments the matching may be based upon a source of text. Matching current text to a portion of a segment of the indexed text may include matching the current text to the portion of the segment of the indexed text based upon a source of the segment of the text and a source of text entered by a user. In some embodiments a user may specify a source of text and the current text may be matched to portions of segments of text from the source specified by the user. In several further embodiments the matching may be based upon a recipient of the current text.

The following is a detailed description of embodiments of the invention depicted in the accompanying drawings. The embodiments are in such detail as to clearly communicate the invention. However the amount of detail offered is not intended to limit the anticipated variations of embodiments but on the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims. The detailed descriptions below are designed to make such embodiments obvious to a person of ordinary skill in the art.

Generally speaking methods and arrangements of text entry are contemplated. Embodiments include transformations code state machines or other logic to select segments of text from text files based upon the number of words in phrases of the text files upon the number of letters in words of the text files or upon other patterns of the text in the text files. The text files may include web sites and news indexes. Embodiments may also involve indexing the selected segments of text matching text currently being entered by the user current text into an application to a portion of a segment of the indexed text and entering a remaining portion of the segment of the indexed text into the application based upon the matching. In some embodiments the current text may be matched to a portion of a single word and the single word may be entered into the application. In many embodiments the text may be selected from the text entered into any of several applications. In a few embodiments the text may be selected from sources specified by a user.

In several embodiments a user may specify web sites and topics and segments of text may be selected based upon the specification of web sites and topics. In many embodiments the matching may include determining an attribute of text and matching based upon the attribute. In some further embodiments the matching may be based upon a time period of text. Current text may be matched to a segment of indexed text based upon a time period of the segment of the text and a time period of the current text. In several further embodiments the matching may be based upon a source of text. Matching current text to a portion of a segment of the indexed text may include matching the current text to the portion of the segment of the indexed text based upon a source of the segment of the text and a source of text entered by a user. In some embodiments a user may specify a source of text and the current text may be matched to portions of segments of text from the source specified by the user. In several further embodiments the matching may be based upon a recipient of the current text.

While specific embodiments will be described below with reference to particular circuit or logic configurations those of skill in the art will realize that embodiments of the present invention may advantageously be implemented with other substantially equivalent configurations.

The devices and may select segments of text from files containing text text files . A segment may consist of a word a phrase a sentence a paragraph or other unit of text. A phrase may consist of a string of words terminated by particular punctuation marks such as . or or by line return. A word may consist of a string of alpha numeric characters terminated by whitespace or by particular punctuation marks. The text files may include documents authored by a user of the devices such as email messages and IM and may include documents created by others such as web pages blog entries pages of shopping sites and web encyclopedias. The selection may be based upon patterns of the text. The devices may also index the selected text match text currently being entered by the user into an application to a portion of a segment of the indexed text and enter a remaining portion of the segment of text into the application based upon the matching. The entering of a remaining portion of a segment in response to matching the portion is called an auto completion or type ahead feature.

Network which may consist of the Internet or another wide area network a local area network or a combination of networks may provide data communications among web server and communications program server and the devices and . Web server may have installed and operative upon it software to manage a web site or sites. The software may include instructions to generate content and to communicate with visitors to the web site or web sites.

Communications program server may enable users of the devices and to communicate across network . In some embodiments communications program server may provide instant message service. Examples of instant message programs include Microsoft s Windows Messenger IBM s Lotus Sametime 7.5.1 Yahoo Messenger and AOL s AIM . Typically a person at one of the devices and may initiate an instant message chat session by invoking an instant message client program and identifying one or more additional people to participate in the chat session. The initiator may identify other desired participants in the chat session by accessing a directory and selecting individuals or groups of people listed in the directory. The client program may send to the communications program server identifications such as e mail addresses of the other desired participants.

In response the communications program server may attempt to connect to the client workstations or other computing devices of the other desired participants to determine if they are currently on line. If communications program server successfully connects with a desired participant it may create a chat session for the desired participant by invoking the participant s chat session client program and identifying the active members of the chat session. In addition the communications program server may notify the initiator of the desired participants who are not currently available for a chat session.

Communications program server may then establish communications between the participants. In some implementations of chat client programs communication between clients is done on a peer to peer level i.e. directly from a user device such as devices and to another user device without mediation by or assistance from communications program server . In other implementations a message from one participant may be relayed through communications program server . In either implementation a message sent by one participant is sent to all of the other participants and may be displayed on their user devices nearly in real time.

In many embodiments communications program server may provide email service for users of the devices and . Communications program server may contain instructions to receive email messages over network to store the messages and to upload the messages to the users when they sign in. Communications program server may also contain instructions to receive email messages from the users and forward them on the way to their designated destinations. Examples of email programs include IBM Lotus Notes 8 Eudora Outlook and Outlook Express .

The arrangement of web server and communications program server and other devices making up the exemplary system illustrated in is for explanation not for limitation. Data processing systems useful according to various embodiments of the present invention may omit a server or may include additional servers routers other devices and peer to peer architectures not shown in as will occur to those of skill in the art. For example users may participate in an instant message chat session by establishing peer to peer connections or by visiting a web site. Multiple web servers may maintain a single web site or one web server may maintain multiple sites. Multiple servers may provide for email service. For example a system for providing email may include a separate server or servers for receiving email such as POP3 servers and for sending email such as SMTP servers. Networks in such data processing systems may support many data communications protocols including for example TCP Transmission Control Protocol IP Internet Protocol HTTP HyperText Transfer Protocol WAP Wireless Access Protocol HDTP Handheld Device Transport Protocol and others as will occur to those of skill in the art. Various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in .

Turning to depicted is an embodiment of a computer capable of entering text into applications that includes random access memory RAM a processor or CPU non volatile memory a communications adapter and an Input Output I O interface adapter connected by system bus . Stored in RAM is text type ahead module email program word processor web browser and operating system .

Text type ahead module may comprise computer program instructions for auto completing user entered text. Text type ahead module includes selection module indexing module matching module and text entry module . Selection module may select segments of text from text files. The text files may include files authored by a user of computer such as email and IM messages and address books and other data files. The text files may also include files created by others such as web pages blog entries pages of shopping sites web encyclopedias company organization charts and inventory lists.

The selecting may be based upon patterns of text in the text files. The patterns may be based upon the number of words in phrases of the text or upon the number of letters in words of the text. Indexing module may index the selected text. Matching module may match text currently being entered by the user into an application to a portion of a segment of the indexed text and text entry module may enter a remaining portion of the segment of indexed text into the application based upon the matching.

In the embodiment of text type ahead module may constitute a separate program that may provide a type ahead feature for multiple applications including email program and word processor . Text type ahead module may select segments of text from multiple sources including text entered into email program and word processor and text viewed through the web browser . Text type ahead module may gather the selected text into a single repository index the segments match the segments against text entered into either of the programs and and enter text into the program. In further embodiments plug ins to the programs and may enable text type ahead module to access text entered into the programs and to auto complete text entered into the programs. A plug in is an auxiliary program that enhances the capability of another program. The other program may provide a standard interface for plug ins.

Email program may comprise computer program instruction for sending receiving and storing emails. Word processor may comprise computer program instructions for creating and editing text. The computer program instructions may provide for generating windows and processing text that a user may enter into the windows. Operating system may comprise UNIX Linux Microsoft Windows AIX or other operating systems useful for auto completion programs as will occur to those of skill in the art.

The modules shown in RAM are for explanation not for limitation. In many other embodiments a text type ahead module may constitute a module of a single program that accepts text entry. For example a text type ahead module may form a component of an IM program and may auto complete phrases entered into the IM program based upon other text entered into the IM program. In several other embodiments a text type ahead module may auto complete text entered into programs other than word processing programs and email programs such as web browsers instant message programs and translation programs. For example a user may begin to enter text for translation into a program. The text type ahead module may match the text to text previously entered and auto complete the text entry. The completed entry may then be translated by the translation program.

Text type ahead module email program word processor web browser and operating system components of software are shown in RAM in but many components of such software may be stored in non volatile memory also. Further while the components of such are shown simultaneously present in RAM in some other embodiments only some of the components of RAM may be present at any given time.

Non volatile computer memory may be implemented as a hard disk drive optical disk drive electrically erasable programmable read only memory space EEPROM or Flash memory RAM drives not shown or as any other kind of computer memory as will occur to those of skill in the art. Communications adapter may implement the hardware level of data communications through which one computer sends data communications to other computers such as other computers directly or through a network. The data communications may include transmitting and receiving instant messages and email messages. Such data communications may be carried out serially through RS 232 connections through external buses such as USB through data communications networks such as IP networks and in other ways as will occur to those of skill in the art. Examples of communications adapters include modems for wired dial up communications Ethernet IEEE 802.3 adapters for wired network communications 802.11a b g n adapters for wireless network communications and mobile broadband cards.

I O interface adapter implements user oriented I O through for example software drivers and computer hardware for controlling output to display devices such as display device and audio output device as well as user input from user input device and audio input device . User input device may include both a keyboard and a mouse. Some embodiments may include other user input devices such as speech interpreters bar code scanners text scanners tablets touch screens and or other forms of user input devices. Audio output may include speakers or headphones and audio input device may include a microphone or other device to capture sound.

The computer and components illustrated in are for explanation not for limitation. In other embodiments embedded systems PDAs cell phones BlackBerries and other devices which accept text entry may select text based upon patterns of the text index the selected text match text currently being entered by the user into an application to the indexed text and enter a phrase of text into the application based upon the matching. In other embodiments modules to auto complete text may be implemented in hardware firmware or in state machines or may form a component of an operating system. In several embodiments a computing device may contain two or more processors. In various embodiments a computing device may use point to point interconnects to connect processors or to connect a processor and another element of the computing system.

Selection module may select text from text files based upon patterns of the text. The text files may include files authored by a user of text type ahead module such as email messages and IM. The text files may also include files created by others such as text files available from web sites and data files. Web text files may include news sites blog entries pages from shopping sites web encyclopedias and other web sites. News sites may include sites such as cnn.com and sites that collect news articles news aggregators . The news aggregators may provide an index of the collected articles or may provide a feed of the entire articles. In some embodiments selection module may access text from a web site through an external application programming interface API provided by the site. The API may implement commands for extracting text from the web site. In many embodiments a web service may provide access to text from a web site. Web services present a standardized way of integrating web based applications. Web services typically provide business services upon request through data communications in standardized formats called bindings. A binding is a specification of a data encoding method and a data communications protocol. The most common binding in use for web services is data encoding in XML according to the SOAP protocol and data communications with HTTP. SOAP Simple Object Access Protocol is a request response messaging protocol that supports passing structured and typed data using XML and extensions. In a few embodiments selection module may access text from a web site by visiting the site to obtain the HTML making up web pages and extracting text from the HTML.

Data files may include address books organizational charts inventory lists and other programs which track data such as programs providing the time of day. In a few embodiments selection module may select text from chat windows or word processing documents that have not been saved. Selection module may for example leverage memory buffers available in Microsoft Word to process the latest copy of text.

Selection module includes sources and rules . In the embodiment of a user may specify sources of text from which selection module makes selections. Information about these sources may be stored in sources module . In some further embodiments a user of text type ahead module may specify files authored by the user such as email and IM messages and address books and other data files. The user may also specify files created by others such as news sites blog entries pages from shopping sites web encyclopedias company organization charts and inventory lists. In many further embodiments a user may specify a cut off date for text selection. For example in response to a user specification selection module may disregard text created in IM chat conferences or on websites more than two months earlier. In several further embodiments the user may specify directories of files from which to select text created in word processing programs.

Rules module may apply the rules or patterns used by selection module to select segments of text. The rules or patterns may be based upon the number of words in segments of the text or upon the number of letters in words of the text. Example rules or patterns of segments of text include phrases of four or more words phrases containing at least two words of five or more characters or words of ten or more characters. In some embodiments the rules or patterns may be based upon other factors. For example a pattern of text may consist of text that has been entered at least twice into an application whose text is a source for selection module .

In the embodiment of selection module operates as a rule based pattern matcher selecting text based upon the rules of rules module . In some embodiments the rules may be represented declaratively with rules module containing a representation of a set of the rules as data. Selection module may apply the rules to text by processing the data. In other embodiments rules module may consist of a program into which the rules were hard coded. Execution of the program with text as data may apply the rules to the text.

Indexing module may index segments of text selected by selection module . In some embodiments the index of a segment of text may consist of the text to which the segment may be matched. In many embodiments the index of a segment of text is an initial portion of the segment of text. In these embodiments selection module may match a segment of text to text currently being entered by a user into an application current text when the current text is a beginning portion of the selected segment of text. For example the currently entered text Are you on CC may match the previously entered text Are you on CCT Dev It won t accept my connection because someone else is logged on. Conversely in embodiments which allow matching to the middle of a phrase indexing module may index a segment of text by multiple portions of the segment. Similarly in embodiments which require matched words to contain the same characters with the possible exception of case an index to a segment may contain exact words from the segment. On the other hand in embodiments in which a portion of a segment of selected text may match several segments of current text the indexing to the segment may indicate the range of matches. For example if the matching rules permit transmits to match both transmit and transmitted then transmits may be indexed as transmit where represents any alphanumeric characters. As another example if the matching rules disregard pronouns and articles then the index to a segment of text may consist of a beginning segment stripped of pronouns and articles. Under such matching rules away from office may match I m away from the office. The former phrase may then be used to index the latter. With this indexing scheme a matcher may strip pronouns and articles from the current text and check for the transformed text in the index.

Matching module matches current text to previously entered text. The previously entered text includes text indexed by indexing module . In some embodiments previously entered text may also include text that has not yet been indexed for example because it was entered after the most recently scheduled operation of indexing module . In further embodiments the previously entered text may include text contained in a window currently on display. For example in some further embodiments matching module may match text currently being entered into a chat window of an IM program to text previously entered into an open chat window of another IM program. In some embodiments a user may invoke a command to activate matching module . The user may for example activate matching module by hitting a key combination such as Ctrl Space or Ctrl Tab. In many embodiments matching module may begin operation only after a user has entered a minimum number of characters such as 7 into a current application. In alternative embodiments matching module may begin matching but display module may not display possible completions and text entry module may not enter text until the user has entered the minimum number of characters.

Matching module includes matching rules . Matching rules may define a match between current text and indexed text. Typically the two match when the current text is a beginning portion of the indexed text. For example the currently entered text Are you on CC may match the previously entered text Are you on CCT Dev It won t accept my connection because someone else is logged on. In the above example the current text is exactly the same as a beginning portion of the previously entered text. In other embodiments the beginning portion and the current text need not be identical for the phrases to match. For example whitespace and other non alpha numeric characters may be disregarded. Hi there may match Hi there. Similarly the rules of matching rules may disregard case. For example in some embodiments Are you on CC may match are you on cct dev 

In some embodiments the rules of matching rules may be less strict. In some further embodiments words with the same stem may match. For example rules may match ruled or dictator may match dictatorship. In a few embodiments the rules of matching rules may disregard some words in finding matches. The rules may for example disregard pronouns and articles. In these embodiments away from office may match I m away from my office. Please contact XXX in case of emergency. In several embodiments the rules of matching rules may disregard short words such as words of three characters or fewer. In many embodiments a user may specify the rules contained in matching rules .

Text entry module may enter text into a document. Matching module may match text being entered by a user into the document current text to a portion of a segment of indexed text. Text module may then enter the remaining portion of the segment of indexed text into the document. When the portion of the segment of text matched to the current text is the beginning portion of the segment of text the entry of the remaining portion amounts to auto completion of the current text.

Text entry module includes display module and priority rules module . Display module may display matching segments of text to a user through a user interface. A text display may include an entire segment of text that matches current text the remaining portion of text or something in between. For example if the user has typed Are you on CC and that current text is matched Are you on CCT Dev the display may consist of the entire matching text Are you on CCT Dev the remaining portion T Dev or CCT Dev In some embodiments display module may display possible completions in a floating window. In many of these embodiments auto completion module is a stand alone application that provides auto completion for multiple other applications. In other embodiments display module may display the possible completions in line in the same window or other display mechanism in which the user is entering text into the document. An in line display may consist of a scrollable window drop down menu bar or other display mechanism known to those of skill in the art.

The user may select a matching segment of text for entry of the remaining portion into the application. Alternatively the user may continue typing to further restrict the list of matching segments. In some embodiments if there is only one possible match text entry module may automatically enter the text into the application without selection by the user.

Priority rules module may contain rules for the order of display of possible matches. Priority rules module together with selection module indexing module and matching module may attempt to display first the remaining portions of segments of text most likely to be selected by a user. In some embodiments priority rules module may determine an attribute of text and may base the order of display of potential matches on the attribute. Attributes of text may include frequency of appearance in news indices or other sources location time period or currency subject matter source and target or recipient. For example in some embodiments priority rules module may rate the indexed segments of text by the number of times they appear in news indices. Segments that appear in more indices will be displayed before segments that appear in fewer indices.

In some embodiments priority rules module may determine a location of a segment of indexed text and may give priority to those segments which match a current location of the user s computing device. In some further embodiments priority rules module may assign to segments of text extracted from a regional article the region of origin of the article as their location. For example news from a West Virginia web paper may be assigned the location of West Virginia. The location of a user s computer may be determined from an IP mapping and the location of a user s mobile device may be determined from techniques such as GPS IP and cellular tower triangulation.

In some embodiments priority rules module may base the priority of matching segments of indexed text on a time period. In further embodiments the time period of text may measure how current the text is. For example yesterday s news may be of a different time period than breaking news. In some further embodiments priority rules module may determine the time period of indexed text from its time of origin. Text from a web page may be dated according to its publication date. The time period of text currently being entered by a user into an application may be determined by an examination of the pattern of word usage of the user. The examination may determine whether the user usually selects words from yesterday s news i.e. they are a newspaper reader or the user usually selects words from the latest breaking news. In these further embodiments priority rules module may give priority to matching segments of indexed text of the same time period or currency as the words selected by the user.

In a few embodiments priority rules module may base the priority of matching segments of indexed text on the source of the text. In further embodiments priority rules module may determine a source of the words entered by a user and may give priority to matching segments from the same sources. For example priority rules module may rank terms from a particular website or even a particular section of a website higher than terms from other websites. In some further embodiments priority rules module may study the pattern of words entered by a user to determine the sources. For example priority rules module may determine that the user usually selects words that come from CNN.com or a section of another news site. In other further embodiments a user may specify sources to receive preference. In many further embodiments priority rules module may assign as the source of text the program creating the text. For example when a user enters text into an IM chat window priority rules module may first display selections from other IM chats with the other participant or participants. In some embodiments of type ahead modules used with IM programs searching indexing and display may be executed in the following order 

Priority rules module may include a learning feature. In some embodiments for example priority rules module may monitor a user s selections of matches to an item of current text. Priority rules module may then display potential matches in order of frequency of selection with the most often selected shown at the top of list the next most often selected shown second etc.

Configuration module may configure the other modules of auto completion module . Configuration module includes source module text selection module scheduler matching rules module and display module . Configuration module may receive specifications from a user about parameters for the operation of the other submodules of auto completion module and may set the parameters. Source module may receive specifications and set parameters about the source of text for indexing and matching such as websites blogs news indices specific directories of word processing documents expiration dates for selection and indexing and auxiliary programs that provide data that may be used in text entry. Text selection module may receive specifications and set rules describing the patterns of text to be indexed such as phrases of at least four words or words of at least ten characters. Scheduler may receive information about the scheduling of selection module and indexing module and may set their schedules. Matching rules module may receive specifications of matching rules for matching module . Display module may set parameters regarding the display of display module . The parameters may for example govern the order in which to show possible completions whether to automatically enter the only possible completion and the minimal number of characters to be entered before possible completions are shown.

Selected text storage module may store segments of text selected by selection module and indices created by indexing module . Selected text storage module may be accessed by matching module for segments of text that match current text. Matching module may pass the matches on to text entry module for display through display module and entry in applications. In some embodiments selected text storage module may also store attributes of the segments of text such as their source or their creation date.

The method may include receiving an indexing and selection schedule element . This schedule may determine how often to select segments of text from text files and how often to index the phrases for use in auto completing text. Typical schedules may be daily every few days or weekly. A scheduled selection and indexing may however be postponed if current I O usage is high.

The method may include receiving rules for the selection of patterns of text element . The rules may be based upon the number of words in phrases or upon the number of letters in words. The rules may also be based on other attributes of the text. For example in some embodiments text may be selected for use in auto completion only if the text is found at least twice in the sources of text. A module such as type ahead module of may apply the rules to select text from the specified sources. As a result the text may be selected based upon patterns of the text element . In some embodiments the content of rules supplied by users may not provide the exclusive criteria for text selection. In some further embodiments a type ahead module may apply default rules in the absence of rules entered by a user. In many further embodiments a type ahead module may select text based upon built in rules.

The method may include indexing the selected text element . The indexing may be based upon the methods of matching used in element . For example current text may match indexed text when the current text forms the beginning of the indexed text. In such cases the indexed text may be indexed by the beginning phrase. In some embodiments a word in current text may match a word in indexed text if the words have the same stem. In such cases the index to the indexed text may contain the stem of the word.

The method may include matching current text to a portion of a segment of indexed text element . In some embodiments the matching may consist of searching for indexed text with the same beginning as the current text. In many embodiments the portion of indexed text may not be identical to the current text. For example words with the same stem may match or articles may be ignored in finding a match.

The method may include displaying matches to the user through a user interface element . The matches may consist of segments of text that begin with the current text. In some embodiments the display may be in line as part of the display of the application into which the user is entering text. In other embodiments the display may be in a floating window.

The user may select one of the indicated matches through the user interface element . The user may for example click on a match and hit ENTER or TAB. A type ahead apparatus may enter a remaining portion of text into the application based upon the matching element . For example if a match is to an initial portion of a segment of text the apparatus may enter the remainder of the segment. The segment may be the segment selected by the user element or a modification of the segment if exact matches are not required. In some embodiments the user may then treat the text as other user entered text. The user may perform direct in line actions such as search edit copy or paste.

If the user enters additional text into an application which provides for auto completion elements through may be repeated element . Otherwise the method of flowchart may end.

The method of flowchart may enable a user to efficiently enter previously typed text into a text entry window without undergoing the laborious cut and paste process described in the Background section. The user may recall the previously typed text by typing a few characters of the text such as the first few words. The method may also enable a user to recall contact information for a person by typing a few characters from the person s name into the application the user is currently working with.

The elements of flowchart are for illustration and not for limitation. In alternative embodiments additional elements may be included some of the elements of flowchart may be omitted or the elements may be performed in a different order. For example embodiments which provide auto completion for a single application may omit element . Some embodiments may omit some or all of elements and using fixed procedures that are not configurable by a user.

The invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the invention can take the form of a computer program product for auto completion of text the computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

It will be apparent to those skilled in the art having the benefit of this disclosure that the present invention contemplates methods and arrangements for text type ahead. It is understood that the form of the invention shown and described in the detailed description and the drawings are to be taken merely as examples. It is intended that the following claims be interpreted broadly to embrace all the variations of the example embodiments disclosed.

Although the present invention and some of its advantages have been described in detail for some embodiments it should be understood that various changes substitutions and alterations can be made herein without departing from the spirit and scope of the invention as defined by the appended claims. Although an embodiment of the invention may achieve multiple objectives not every embodiment falling within the scope of the attached claims will achieve every objective. Moreover the scope of the present application is not intended to be limited to the particular embodiments of the process machine manufacture composition of matter means methods and steps described in the specification. As one of ordinary skill in the art will readily appreciate from the disclosure of the present invention processes machines manufacture compositions of matter means methods or steps presently existing or later to be developed that perform substantially the same function or achieve substantially the same result as the corresponding embodiments described herein may be utilized according to the present invention. Accordingly the appended claims are intended to include within their scope such processes machines manufacture compositions of matter means methods or steps.

