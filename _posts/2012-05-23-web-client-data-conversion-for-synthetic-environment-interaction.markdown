---

title: Web client data conversion for synthetic environment interaction
abstract: Web client data conversion for synthetic environment interaction is described, including receiving a message at a synthetic environment server indicating occurrence of an event on a web client by a web application server configured to generate a transformed message from a first protocol format to a second protocol format, sending the transformed message from the web application server to a message bus using the second protocol format, translating the transformed message into a translated message, the transformed message being translated from the second protocol to a third protocol using a property class, sending the translated message from the message bus to the synthetic environment server according to the property class, and updating the synthetic environment using data included in the translated message, wherein the synthetic environment is updated in substantially real-time. In some embodiments, a method can include an implementing an application programming interface associated with a transactional server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08775653&OS=08775653&RS=08775653
owner: Trion Worlds, Inc.
number: 08775653
owner_city: Redwood City
owner_country: US
publication_date: 20120523
---
This application is a continuation of U.S. patent application Ser. No. 12 791 773 now U.S. Pat. No. 8 214 515 entitled WEB CLIENT DATA CONVERSION FOR SYNTHETIC ENVIRONMENT INTERACTION filed Jun. 1 2010 which is incorporated herein by reference for all purposes which claims priority to U.S. Provisional Application No. 61 183 038 entitled WEB CLIENT DATA CONVERSION FOR SYNTHETIC ENVIRONMENT INTERACTION filed Jun. 1 2009 which is incorporated herein by reference for all purposes.

The present invention relates generally to software computer program architecture and data network communications. More specifically techniques for web client data conversion for synthetic environment interaction are described.

Conventional video games online video games personal computer i.e. PC games console games and handheld or mobile games i.e. gaming are becoming increasingly prolific in titles distribution and revenues. Increasing available bandwidth due to faster network connection speeds and computing resources are enabling the development of more sophisticated games with technically complex and diverse functions. In some conventional games virtual worlds or artificially created and rendered environments are created to allow games players or users users to interact with each other and virtual environments. Typically personal computers are used for interaction with a virtual environment given increasing computer processor and storage resources. In other conventional examples mobile personal or handheld devices are also allowing users to interact with virtual environments. However conventional solutions for interacting with a virtual environment are problematic.

Using conventional solutions access to a virtual environment is often slow. In some conventional solutions substantial delays are incurred during game play or interaction which reduces the consumer and commercial appeal of computer software programs or applications i.e. applications resulting in lowered revenues and success in individual titles games and platforms. Further the gaming industry is highly cyclical and competitive which results in many unsuccessful conventional gaming solutions. Online game such as massively multiplayer online games i.e. MMOG often depend upon the acquisition of user subscriptions in order to generate revenue. However if a conventional game is slow not real time or unable to use existing computing resources and bandwidth users will not engage and buy or subscribe to a given title.

In conventional gaming extension of game features and functions to encompass web based i.e. World Wide Web based data communication using hyper text transfer protocol HTTP interactivity are often included. However conventional web based interactivity is very limited slow and not real time in game play. In some conventional examples users are able to perform limited functions over the web such as reviewing a game character inventory characteristics features or attributes. Other conventional solutions enable users to review or update information associated with his account. Further conventional. MMO solutions enable game play but not in real time.

In short conventional solutions enabling web based gaming interaction are limited unappealing and unsuccessful. Conventional web based interaction in gaining is very limited in features and functions. Conventional solutions do not allow for web based interaction that results in interactive game play and the use of cached data while offline i.e. not connected results in a substantially reduced user experience.

Typically conventional solutions rely upon the use of synchronous data communication techniques that implement client based requests and server generated responses. Web based client requests for data are often answered slowly with responsive data being retrieved from a networked storage facility or server. Further conventional solutions for establishing persistent data communication links between a web based client and a game server have not been successfully implemented in web browsers using document object model DOM persistent connection protocols such as user datagram protocol UDP . Transmission of data in conventional solutions using UDP is problematic since lost packets errors and other detriments are not detected as transmission of data between a client and a server are sent without error correction or checking which results in game play errors. Still further web based data communication protocols such as transmission control protocol Internet protocol TCP IP require substantial processor resources for performing protocol based functions such as error checking checksum calculation and correction typically requiring high bandwidth resulting in slow game play i.e. processing . In other words transmission of data in conventional solutions using TCP IP uses error correction techniques such as checksums but is processor intensive and can command resources such that a server may be slowed substantially causing latencies and slow game play. Conventional solutions have not successfully implemented asynchronous data communication techniques between web based game clients and game servers due to low bandwidth capacities. In other words the increasing features functionality and user experiences e.g. look and feel of virtual worlds due to enhanced graphics and rendering technologies in gaming require high bandwidth capabilities that exceed those available from existing web based clients and devices.

Thus what is needed is a solution for web based gaming or virtual world interaction without the limitations of conventional techniques.

Various embodiments or examples may be implemented in numerous ways including as a system a process an apparatus a user interface or a series of program instructions on a computer readable medium such as a computer readable storage medium or a computer network where the program instructions are sent over optical electronic or wireless communication links. In general operations of disclosed processes may be performed in an arbitrary order unless otherwise provided in the claims.

A detailed description of one or more examples is provided below along with accompanying figures. The detailed description is provided in connection with such examples but is not limited to any particular example. The scope is limited only by the claims and numerous alternatives modifications and equivalents are encompassed. Numerous specific details are set forth in the following description in order to provide a thorough understanding. These details are provided for the purpose of example and the described techniques may be practiced according to the claims without some or all of these specific details. For clarity technical material that is known in the technical fields related to the examples has not been described in detail to avoid unnecessarily obscuring the description.

In some examples the described techniques may be implemented as a computer program or application application or as a plug in module or sub component of another application. The described techniques may be implemented as software hardware firmware circuitry or a combination thereof. If implemented as software the described techniques may be implemented using various types of programming development scripting or formatting languages frameworks syntax applications protocols objects or techniques including ASP ASP.net .Net framework Ruby Ruby on Rails C Objective C C C Adobe Integrated Runtime Adobe AIR ActionScript Flex Lingo Java Javascript Ajax Perl COBOL Fortran ADA XML MXML HTML DHTML XHTML HTTP XMPP PHP and others. Design publishing and other types of applications such as Dreamweaver Shockwave Flash Drupal and Fireworks may also be used to implement the described techniques. The described techniques may be varied and are not limited to the examples or descriptions provided.

Techniques for web client data conversion for synthetic environment interaction are described. For descriptive purposes that follow synthetic environment may refer to both a topology as well as a virtual environment i.e. world that is created as a result of processes performing within the computing environment associated with the synthetic environment. In some examples a web application server and game i.e. synthetic environment communicate using a message bus native data communication protocols e.g. JMS OpenWire and others . Any conversion of native web or native game protocols may occur at various points in a network topology as described below. As an example a web application server may be configured to send and receive messages associated with a game event as described below through a message bus. Conversely a game environment may send and receive messages associated with a web event as described below using message bus. A web application server may be configured to handle protocol conversion between a web client and a web application server. In other examples a message bus may be omitted instead providing data communication between a web application server and a synthetic environment server. For example a web application server may be configured to emulate a game client and communicate with game servers via native game protocols. A web application server may be configured to establish a persistent TOP or UDP connection and send receive messages due to emulation of a game client. In still other examples blocking requests from web clients to a synthetic environment and associated game databases may be implemented. Game data may be maintained simulated in memory and persisted to a game database that is configured to provide data communication between a web environment and a synthetic environment using an application server with transactional API s built on top of a game database s . Stale simulated game data may be refreshed i.e. updated periodically and data associated with web events may be written into a game. The described techniques may be varied in design function implementation order configuration layout format or other technical aspects and are not limited to the examples provided.

The quantity and configuration of elements shown are provided for purposes of illustration and are not limited to the configurations shown. For example message bus may be directly indirectly or network connected to game environment . In other words an intervening data network may be disposed or otherwise configured between message bus and game environment and between message bus and web clients . As another example network may be implemented using one or more networks using different types or topologies of networks. For example network may be implemented using any type of data communication network such as the Internet a local area network LAN wide area network WAN municipal area network MAN public private wireless wired or others without limitation.

As shown game environment may be implemented with one or more game servers e.g. game servers that are configured to render a virtual world or synthetic environment hereafter synthetic environment using techniques such as those described in U.S. patent application Ser. No. 11 715 009 entitled Distributed Network Architecture for Introducing Dynamic Content into a Synthetic Environment filed Sep. 6 2007 which is herein incorporated by reference for all purposes. In some examples game database may also be implemented using one or more data storage facilities such as data bases data warehouses data marts storage area networks redundant arrays of independent disks or others without limitation. Homogeneous or heterogeneous storage facilities types or schemas may be used again without limitation. Logic in some examples may be configured to provide control signals and data to manage game environment . In other examples game clients not shown may also be included with game environment . As described herein game environment may be used to instantiate generate render display or perform other functions associated with a synthetic environment. In some examples synthetic environments may be implemented using shards i.e. individual instances of a synthetic environment that are implemented using one or more assigned resources e.g. servers or shardless. Here massively multiplayer online games MMOGs such as massively multiplayer online real time strategy MMORTS massively multiplayer online first person shooter MMOFPS massively multiplayer online sports MMORS and others without limitation may be implemented for web based client interaction without limitation. As used herein client may refer to any type of application that is implemented using hardware software circuitry or a combination thereof configured for interaction with game environment .

In some examples message bus may be implemented to translate transform evaluate or to perform other functions associated with data being exchange between web clients web application server and game environment . In order to implement real time or substantially real time interactivity message bus as described in greater detail below uses a property class system of objects that may be instantiated using specifications that determine attributes associated with a given object. Property class objects are also described in greater detail in U.S. patent application Ser. No. 11 715 009 which is herein incorporated by reference for all purposes. Here message bus is configured to process data being communicated between game environment game servers and web clients by translating data from web protocols HTTP persistent HTTP and others to server side data communication protocols e.g. UDP TCP IP and others . As mentioned above message bus and various implementation examples are described in greater detail below. In still other examples system and the above described elements may be implemented differently and are not limited to the descriptions shown or provided above.

Here events occurring in synthetic environment may be initiated from several sources including game clients web clients game servers or others. In some examples an event occurring within synthetic environment e.g. a character is killed a weapon is purchased a battle commences an auction occurs and others without limitation data may be sent from game environment by one or more of game servers to message bus . If connected i.e. a data network connection exists between game environment and a web environment i.e. web application server and web clients message bus translates or transforms translate and transform may be used interchangeably as described herein a message i.e. an encapsulation of data that is formatted based on one or more data communication protocols e.g. HTTP TCP IP UDP and others for further processing by web application server . When received and processed by web application server the message is formatted for delivery to a web client for delivery i.e. rendering instantiation or the like within a web browser regardless of the end physical device on which the web browser is installed. Alternatively if a data communication link or connection is not present between message bus and synthetic environment data may be queued in game database until the connection is restored. Further if data from one or more of web clients is sent to synthetic environment but a data communication link between message bus and synthetic environment is broken down or otherwise not available then data may be stored in queue until the link is restored. Once restored data may be translated or transformed by message bus and transmitted to synthetic environment for write operations to be performed on game database which may be implemented using any type of data storage facility or technology. Likewise in order to maintain interactive features and functions if a data communication link between message bus and synthetic environment is unavailable game data may be stored in caches . In other words if users are employing web clients to request data from i.e. perform a read operation synthetic environment and a data communication link becomes unavailable i.e. between message bus and synthetic environment data may be read instead from caches and or . In other examples events occurring within a synthetic environment i.e. game events may result in pushing or sending data from synthetic environment to one or more of game clients . Conversely write operations from web clients to synthetic environment e.g. a user on a web client indicates a movement of her character within synthetic environment or causes a web event may be performed to queue . In some examples input or data from web clients for a write operation to game data i.e. data stored in game database may be temporarily stored in queue until a data communication link between message bus is re opened with synthetic environment . Further game data may be stored on cache to enable features and functionality for users of web clients to continue to interact with an instance of synthetic environment even though the latter may not be available due to a network connectivity problem. When a network connectivity problem is resolved and a data communication link is restored data stored in queue for write operations are written to game data base by sending translated or transformed messages from message bus to synthetic environment and one or more of game servers . In some examples game servers may also be referred to as synthetic environmental servers or synthetic environment servers. 

As shown data transferred exchanged transmitted received or otherwise between message bus and synthetic environment are formatted according to data communication protocols such as TCP or UDP. Likewise data exchanged between message bus and web application server may be similarly formatted using TCP or UDP. However data exchanged between web application server and web clients may be formatted according to data communication protocols suitable for rendering and displaying content in web browsers e.g. HTTP persistent HTTP or others . Other types of protocol may be used apart from those shown and described. In other examples system and the above described elements may be varied and are not limited to the descriptions provided.

Here message bus is configured to route data to and from synthetic environment system which uses network communications module to communicate with other elements. In some examples data transmitted to synthetic environment system may be converted i.e. translated transformed adapted encapsulated or otherwise modified by native protocol conversion adapter using property class objects for data transmission using TCP UDP or the like. Conversely data sent from synthetic environment system e.g. game data to a web client not shown may be converted by message bus and native protocol conversion adapter for transmission to a web application server in accordance with one or more data communication protocols such as HTTP persistent HTTP and others. In other examples synthetic environment system and message bus may be implemented differently and are not limited to the examples shown and described.

As shown web application server is configured to translate or transform data to from web protocols to other data communication protocols using web protocol conversion module . Further network communications module provides input output facilities that enable web application server to transmit or receive data across various types of data communication networks. Regarding cache data may be stored temporarily if a data communication link between web application server and for example a synthetic environment e.g. synthetic environment is unavailable. When data communication links are unavailable a web client may interact with cached game data in cache without interruption in synthetic environment interaction e.g. game play . In other examples web application server and the above described elements may be varied in function structure implementation or other aspects without limitation to the examples shown and described.

Regarding game client emulation module web application server may be configured to emulate a game client as part of a synthetic environment. When emulating a game client web application server may be configured to communicate directly with synthetic environment system without the need or use of a message bus instead relying upon native protocol conversion module and game client emulation module to translate or transform messages as necessary. In some examples game client emulation module and native protocol conversion module may be implemented to understand and use property class objects in order to interpret i.e. translate transform or the like data sent to or received from synthetic environment module . By being in direct data communication although there may be intermediate data networking components services and structures with synthetic environment system web application server is configured to handle conversion of data for various protocols between web clients and synthetic environments. Further web application server as described herein and with regard to all other web application servers described provide support features and functionality to enable data to be requested retrieved presented displayed rendered or otherwise operated upon within a web browser. In other examples web application server and the above described elements may be varied and are not limited to the examples shown and described.

Here synthetic environment system generates a synthetic environment using native game protocols such as property class. Web application server provides features and functions to translate and transform data from synthetic environment system for presentation in a web environment e.g. web browser on web client . In some examples application server API may be implemented to provide protocol conversion i.e. translation transformation of data from a first protocol to a second protocol as used herein protocol and protocol format may be used interchangeably of messages transmitted between synthetic environment system and web client . In other words as game events i.e. events that occur within a synthetic environment and web events i.e. events that occur on or are directed by web client occur messages are generated by synthetic environment system and web client respectively that are translated or transformed by application server API . As described herein application server API may be any type of application server or database management system that is used to manage read write store or perform other operations to data stored in databases which may be implemented using any type of data storage facility or repository. As shown game databases which may be similar or substantially similar to game database and configured to translate or transform data i.e. messages between synthetic environment system and web client . Data stored in game databases may be persisted i.e. stored written etc. by using data stored in game databases from within a synthetic environment e.g. game database . Various types of rules e.g. when a data network connection is present immediately after restoring a data network connection periodic e.g. every hour day or the like and others may be used to determine when data should be persistent from game database to game databases . Further the number of game databases may be varied and is not intended to be a limiting feature of the techniques described. In other examples topology may be varied in function structure implementation or other aspects without limitation to the examples shown and described.

After retrieving updates to a web client from a synthetic environment updates associated with web events are processed for updating synthetic environment system . In other examples the order in which updates are checked for web clients or synthetic environment s may be varied and are not limited to the order presented in the present examples. Here updates associated with web events are retrieved from web clients for pushing to synthetic environment system . Once retrieved a determination is made as to whether a synthetic environment server e.g. game servers respond to a call request i.e. function call . If no answer is received from a synthetic environment server then updates intended for synthetic environment system are cached until a response is received . If a response is received then messages associated with the updates intended for updating the synthetic environment are sent . In other examples the above described processes in may be varied in order steps operation or other aspects are not limited to the examples shown and described.

According to some examples computer system performs specific operations by processor executing one or more sequences of one or more instructions stored in system memory . Such instructions may be read into system memory from another computer readable medium such as static storage device or disk drive . In some examples hard wired circuitry may be used in place of or in combination with software instructions for implementation.

The term computer readable medium refers to any tangible medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media and volatile media. Non volatile media includes for example optical or magnetic disks such as disk drive . Volatile media includes dynamic memory such as system memory .

Common forms of computer readable media includes for example floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge or any other medium from which a computer can read.

Instructions may further be transmitted or received using a transmission medium. The term transmission medium may include any tangible or intangible medium that is capable of storing encoding or carrying instructions for execution by the machine and includes digital or analog communications signals or other intangible medium to facilitate communication of such instructions. Transmission media includes coaxial cables copper wire and fiber optics including wires that comprise bus for transmitting a computer data signal.

In some examples execution of the sequences of instructions may be performed by a single computer system . According to some examples two or more computer systems coupled by communication link e.g. LAN PSTN or wireless network may perform the sequence of instructions in coordination with one another. Computer system may transmit and receive messages data and instructions including program i.e. application code through communication link and communication interface . Received program code may be executed by processor as it is received and or stored in disk drive or other non volatile storage for later execution.

Although the foregoing examples have been described in some detail for purposes of clarity of understanding the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed examples are illustrative and not restrictive.

