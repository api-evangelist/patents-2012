---

title: APIs to test a device
abstract: APIs to test a device are described. In one or more implementations, a device includes a housing, one or more sensors supported by the housing, and one or more modules disposed within the housing that are implemented at least partially in hardware. The one or more modules are configured to process inputs detected using the one or more sensors and expose one or more application programming interfaces to a robot to cause the robot to perform one or more operations that are detectable by the one or more sensors, the one or more operations usable to test detection performed by the one or more sensors and the processing of the inputs performed by the one or more modules.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08806280&OS=08806280&RS=08806280
owner: Microsoft Corporation
number: 08806280
owner_city: Redmond
owner_country: US
publication_date: 20120227
---
Display and input techniques utilized by computing devices are ever evolving. For example initial computing devices were provided with monitors. A user interacted with the computing device by viewing simple text on the monochrome monitor and entering text via a keyboard that could then be viewed on the monitor. Other techniques were then subsequently developed such as graphical user interfaces and cursor control devices.

Display and input techniques have continued to evolve such as to sense touch using a touchscreen display of a computing device to recognize gestures. A user for instance may interact with a graphical user interface by inputting a gesture using the user s hand that is detected by the touchscreen display or other touch sensitive device. However traditional techniques that were utilized to test touchscreen displays and other touch sensitive devices were often inaccurate and therefore were typically inadequate to test the touchscreen displays as suitable for intended use of the device.

APIs to test a device are described. In one or more implementations a device includes a housing one or more sensors supported by the housing and one or more modules disposed within the housing that are implemented at least partially in hardware. The one or more modules are configured to process inputs detected using the one or more sensors and expose one or more application programming interfaces to a robot to cause the robot to perform one or more operations that are detectable by the one or more sensors the one or more operations usable to test detection performed by the one or more sensors and the processing of the inputs performed by the one or more modules.

In one or more implementations one or more application programming interfaces are exposed by a device under test to a robot to cause a robot to perform one or more operations. The one or more operations performed by the robot are detected using one or more sensors of the device under test. An ability of the device under test is tested to process inputs received from the one or more sensors of the device under test.

In one or more implementations a system includes a robot configured to perform one or more operations and a device under test having a touchscreen and one or more modules that are implemented at least partially in hardware. The one or more modules are configured to expose one or more application programming interfaces to the robot to cause the robot to perform one or more operations that are detectable by the device under test using the touchscreen and test an ability of the one or more modules to process inputs received from the touchscreen to recognize a gesture that is usable to initiate a function of the device under test.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Conventional techniques that were utilized to test devices could be complicated. Further different techniques performed by different testers could result in inconsistencies such as to determine whether the device is configured to operate as desired.

APIs to test a device are described. In one or more implementations a device under test exposes application programming interfaces APIs to a robot to cause the robot to perform operations that are detectable by the device such as through use of one or more sensors of a touchscreen of the device. A variety of different testing may be performed through use of the robot such as to test accuracy latency and so forth. Thus the device under test may support consistency in tests that are performed on the device further discussion of which may be found in relation to the following sections.

In the following discussion an example environment is first described that may employ the panning latency measurement techniques described herein. Example procedures are then described which may be performed in the example environment as well as other environments. Consequently performance of the example procedures is not limited to the example environment and the example environment is not limited to performance of the example procedures.

In the illustrated example the device includes one or more sensors and a sensor module . The sensor module is configured to process inputs detected using the sensors . As the device may be configured in a variety of ways the sensors may also be configured in a variety of ways. For example the sensors may be configured as part of a display device of the device such as to form a touchscreen. Accordingly the sensors may be configured to detect proximity e.g. contact with the display device such as proximity of one or more fingers of a user s hand to the sensors . Sensors are typically used to report actual contact with the sensors of the display device such as when being touched with a finger of a user s hand although other sensors are also described.

Examples of such sensors include capacitive touch sensors. For instance in projected capacitance an X Y grid may be formed across a surface of the display device using near optically transparent conductors e.g. indium tin oxide to detect contact at different X Y locations on the display device . Other capacitance techniques are also contemplated such as surface capacitance mutual capacitance self capacitance and so on. Further other sensors are also contemplated in other instances such as infrared optical imaging dispersive signal technology acoustic pulse recognition resistive sensors e.g. detect pressure sensor in a pixel and so on. Thus the sensors may be configured to detect proximity and not actual physical contact e.g. hovering of a stylus or other object.

Regardless of the type of sensors used inputs detected by the sensors may then be processed by the sensor module to detect characteristics of the inputs which may be used for a variety of purposes. For example the sensor module may recognize that the input indicates selection of a particular object may recognize one or more inputs as a gesture usable to initiate an operation of the device e.g. navigate through a user interface and so forth. However this processing may rely upon the accuracy of the inputs and therefore conventional techniques that were utilized to test the device and more particularity the sensors and sensor module could result in an inaccurate testing and therefore inconsistencies between devices which could also lead to an inconsistent user experience.

In one or more implementations described herein the device includes a test module . The test module for instance may be configured as a stand alone module as part of an operating system installed on the device and so on. The test module is representative of functionality to cause a test to be performed to test functions of the device . The test module for instance may include one or more application programming interfaces APIs that are exposed to the robot to cause the robot to perform one or more operations.

The robot for instance is illustrated as including an operation module and a physical operation device . The operation module is representative of functionality of the robot to cause the physical operation device to perform one or more operations. The physical operation device for instance may be configured as a robotic arm include a step motor and so on that is configured to engage in physical movement that is detectable using the one or more sensors .

The test module may expose commands and other data via the APIs to cause the operation module of the robot to move the physical operation device to test the device as desired and therefore may be made extensible to a variety of different types of robots to perform the test. Thus inclusion of the test module on the device may be employed to support consistent testing of the device . Although the test module is illustrated as included on the device however it should be readily apparent that the test module may be implemented on a variety of other devices such as a computing device that is communicatively coupled to the robot and or device by the robot and so on. An example of testing performed using the robot and device may be found beginning in relation to the following figure.

In the illustrated example the contact is illustrated as following a path that is circular across the display device that is detectable by the touch sensors . It should be readily apparent that although the path is shown as being circular other shapes are also contemplated including linear e.g. back and forth movement contact at a single point and so on. Detection of the path by the touch sensors and subsequent processing by the touch module is used to generate data that is evaluated by the test module to generate a report that describes a result of the test.

A variety of different types of tests may be performed using the system . The test module for instance may generate a report that describes latency of the device in detecting and or processing of the contact by the touch sensors and touch module . This may include measuring hardware latency of the device end to end latency of the device e.g. to detect the contact by the touch sensors and subsequently process a corresponding input by the touch module and so forth. In another instance the test may include a measurement of accuracy of the device . This may include positional accuracy of the device to measure a position on the display device at which the contact occurs. A variety of other examples of tests are also contemplated further discussion of which may be found in relation to the following example.

A test and or test run may be initiated in a variety of ways such as by the test module itself from another device e.g. a computing device that is in communication with the robot and the device and so forth. In response the test module may be made ready to communicate with the operation module of the robot .

The operation module of the robot may then query the test module for tests and corresponding operations to be performed by the physical operation device of the robot as part of the tests. The test module and the operation module of the robot may then communicate to initiate a test. The test for instance may involve mimicking a gesture and thus the operation module may query the test module via the APIs for a gesture object which is then verified by the operation module . The operation module may then cause the physical operation device to perform the gesture described by the gesture object such as to move the contact along a path that is generally linear to mimic a panning gesture as illustrated may specify an acceleration profile e.g. speed at different points of the gesture and so on.

In response the touch sensors of the display device may detect the movement of the contact and the touch module may process the inputs to recognize the gesture. Results of this recognition may be communicated to the test module as data for processing as part of the test such as to determine accuracy of location detection measure latency e.g. hardware and or end to end latency and so forth. This process may be repeated such as to move on to another test as part of the run repeat this test a predefined number of times and so forth.

Accordingly the test module may support a variety of different APIs . These may include APIs to query a current version and state of the test module . Other APIs may relate to information regarding the tests such as which tests are available APIs to start and exits tests status of the tests and so forth.

The APIs may also support interaction objects which define interactions e.g. a gesture expected as part of a test for the device to pass the test an example of which is as follows 

In some instance more than one interaction type may cover an interaction that is performable by the robot e.g. a tap may be performed as part of a line gesture type. Accordingly the test module may expose a type having greater specificity to hint at an intent of the test examples of which are described in the following table 

The following discussion describes testing techniques that may be implemented utilizing the previously described systems and devices. Aspects of each of the procedures may be implemented in hardware firmware or software or a combination thereof. The procedures are shown as a set of blocks that specify operations performed by one or more devices and are not necessarily limited to the orders shown for performing the operations by the respective blocks. In portions of the following discussion reference will be made to the environment of and the systems of respectively.

The one or more operations performed by the robot are detected using one or more sensors of the device under test block . The device may then utilize sensors e.g. touch sensors to detect proximity of the contact employed by the physical operation device of the robot .

An ability of the device under test is tested to process inputs received from the one or more sensors of the device under test block . The test module for instance may receive data from the touch module and use this data in conjunction with the test parameters to test the device . As previously described a variety of different tests may be performed such as positional accuracy latency and so forth.

An ability of the one or more modules to process inputs received from the touchscreen is tested to recognize a gesture that is usable to initiate a function of the device under test block . The test module for instance may expose a plurality of different gesture objects to test an ability of the device to recognize gestures. In this way suitability of the device to operate as intended may be determined through leveraging the device itself.

The example computing device as illustrated includes a processing system one or more computer readable media and one or more I O interface that are communicatively coupled one to another. Although not shown the computing device may further include a system bus or other data and command transfer system that couples the various components one to another. A system bus can include any one or combination of different bus structures such as a memory bus or memory controller a peripheral bus a universal serial bus and or a processor or local bus that utilizes any of a variety of bus architectures. A variety of other examples are also contemplated such as control and data lines.

The processing system is representative of functionality to perform one or more operations using hardware. Accordingly the processing system is illustrated as including hardware element that may be configured as processors functional blocks and so forth. This may include implementation in hardware as an application specific integrated circuit or other logic device formed using one or more semiconductors. The hardware elements are not limited by the materials from which they are formed or the processing mechanisms employed therein. For example processors may be comprised of semiconductor s and or transistors e.g. electronic integrated circuits ICs . In such a context processor executable instructions may be electronically executable instructions.

The computer readable storage media is illustrated as including memory storage . The memory storage represents memory storage capacity associated with one or more computer readable media. The memory storage component may include volatile media such as random access memory RAM and or nonvolatile media such as read only memory ROM Flash memory optical disks magnetic disks and so forth . The memory storage component may include fixed media e.g. RAM ROM a fixed hard drive and so on as well as removable media e.g. Flash memory a removable hard drive an optical disc and so forth . The computer readable media may be configured in a variety of other ways as further described below.

Input output interface s are representative of functionality to allow a user to enter commands and information to computing device and also allow information to be presented to the user and or other components or devices using various input output devices. Examples of input devices include a keyboard a cursor control device e.g. a mouse a microphone a scanner touch functionality e.g. capacitive or other sensors that are configured to detect physical touch a camera e.g. which may employ visible or non visible wavelengths such as infrared frequencies to recognize movement as gestures that do not involve touch and so forth. Examples of output devices include a display device e.g. a monitor or projector speakers a printer a network card tactile response device and so forth. Thus the computing device may be configured in a variety of ways as further described below to support user interaction.

Various techniques may be described herein in the general context of software hardware elements or program modules. Generally such modules include routines programs objects elements components data structures and so forth that perform particular tasks or implement particular abstract data types. The terms module functionality and component as used herein generally represent software firmware hardware or a combination thereof. The features of the techniques described herein are platform independent meaning that the techniques may be implemented on a variety of commercial computing platforms having a variety of processors.

An implementation of the described modules and techniques may be stored on or transmitted across some form of computer readable media. The computer readable media may include a variety of media that may be accessed by the computing device . By way of example and not limitation computer readable media may include computer readable storage media and computer readable signal media. 

 Computer readable storage media may refer to media and or devices that enable persistent and or non transitory storage of information in contrast to mere signal transmission carrier waves or signals per se. Thus computer readable storage media refers to non signal bearing media. The computer readable storage media includes hardware such as volatile and non volatile removable and non removable media and or storage devices implemented in a method or technology suitable for storage of information such as computer readable instructions data structures program modules logic elements circuits or other data. Examples of computer readable storage media may include but are not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage hard disks magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or other storage device tangible media or article of manufacture suitable to store the desired information and which may be accessed by a computer.

 Computer readable signal media may refer to a signal bearing medium that is configured to transmit instructions to the hardware of the computing device such as via a network. Signal media typically may embody computer readable instructions data structures program modules or other data in a modulated data signal such as carrier waves data signals or other transport mechanism. Signal media also include any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

As previously described hardware elements and computer readable media are representative of modules programmable device logic and or fixed device logic implemented in a hardware form that may be employed in some embodiments to implement at least some aspects of the techniques described herein such as to perform one or more instructions. Hardware may include components of an integrated circuit or on chip system an application specific integrated circuit ASIC a field programmable gate array FPGA a complex programmable logic device CPLD and other implementations in silicon or other hardware. In this context hardware may operate as a processing device that performs program tasks defined by instructions and or logic embodied by the hardware as well as a hardware utilized to store instructions for execution e.g. the computer readable storage media described previously.

Combinations of the foregoing may also be employed to implement various techniques described herein. Accordingly software hardware or executable modules may be implemented as one or more instructions and or logic embodied on some form of computer readable storage media and or by one or more hardware elements . The computing device may be configured to implement particular instructions and or functions corresponding to the software and or hardware modules. Accordingly implementation of a module that is executable by the computing device as software may be achieved at least partially in hardware e.g. through use of computer readable storage media and or hardware elements of the processing system . The instructions and or functions may be executable operable by one or more articles of manufacture for example one or more computing devices and or processing systems to implement techniques modules and examples described herein.

As further illustrated in the example system enables ubiquitous environments for a seamless user experience when running applications on a personal computer PC a television device and or a mobile device. Services and applications run substantially similar in all three environments for a common user experience when transitioning from one device to the next while utilizing an application playing a video game watching a video and so on.

In the example system multiple devices are interconnected through a central computing device. The central computing device may be local to the multiple devices or may be located remotely from the multiple devices. In one embodiment the central computing device may be a cloud of one or more server computers that are connected to the multiple devices through a network the Internet or other data communication link.

In one embodiment this interconnection architecture enables functionality to be delivered across multiple devices to provide a common and seamless experience to a user of the multiple devices. Each of the multiple devices may have different physical requirements and capabilities and the central computing device uses a platform to enable the delivery of an experience to the device that is both tailored to the device and yet common to all devices. In one embodiment a class of target devices is created and experiences are tailored to the generic class of devices. A class of devices may be defined by physical features types of usage or other common characteristics of the devices.

In various implementations the computing device may assume a variety of different configurations such as for computer mobile and television uses. Each of these configurations includes devices that may have generally different constructs and capabilities and thus the computing device may be configured according to one or more of the different device classes. For instance the computing device may be implemented as the computer class of a device that includes a personal computer desktop computer a multi screen computer laptop computer netbook and so on.

The computing device may also be implemented as the mobile class of device that includes mobile devices such as a mobile phone portable music player portable gaming device a tablet computer a multi screen computer and so on. The computing device may also be implemented as the television class of device that includes devices having or connected to generally larger screens in casual viewing environments. These devices include televisions set top boxes gaming consoles and so on.

The techniques described herein in relation to the test module and even the device under test may be supported by these various configurations of the computing device and are not limited to the specific examples of the techniques described herein. This functionality of the test module may also be implemented all or in part through use of a distributed system such as over a cloud via a platform as described below.

The cloud includes and or is representative of a platform for resources . The platform abstracts underlying functionality of hardware e.g. servers and software resources of the cloud . The resources may include applications and or data that can be utilized while computer processing is executed on servers that are remote from the computing device . Resources can also include services provided over the Internet and or through a subscriber network such as a cellular or Wi Fi network.

The platform may abstract resources and functions to connect the computing device with other computing devices. The platform may also serve to abstract scaling of resources to provide a corresponding level of scale to encountered demand for the resources that are implemented via the platform . Accordingly in an interconnected device embodiment implementation of functionality described herein may be distributed throughout the system . For example the functionality may be implemented in part on the computing device as well as via the platform that abstracts the functionality of the cloud .

Although the invention has been described in language specific to structural features and or methodological acts it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as example forms of implementing the claimed invention.

