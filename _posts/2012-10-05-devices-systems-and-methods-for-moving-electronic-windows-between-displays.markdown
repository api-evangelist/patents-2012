---

title: Devices, systems, and methods for moving electronic windows between displays
abstract: Methods, systems, and devices are provided for moving electronic windows between multiple electronic displays. In one exemplary embodiment, a plurality of displays can each be configured to display a portion of a desktop. A duplicate can be created of a window displayed on a first one of the displays. In response to an instruction to move the window from the first one of the displays to a second one of the displays, the duplicate can be programmatically moved on the second one of the displays in unison with movement of the window on the first one of the displays.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09026924&OS=09026924&RS=09026924
owner: Lenovo (Singapore) Pte. Ltd.
number: 09026924
owner_city: New Tech Park
owner_country: SG
publication_date: 20121005
---
The present invention relates generally to devices systems and methods for moving electronic windows between displays.

Traditional computer systems include a single display e.g. a single screen. The display can display data to a user via a desktop e.g. a graphical user interface GUI upon which objects e.g. windows computer icons etc. can be placed. Computer systems have been developed that include multiple displays e.g. multiple screens which can each display a portion of a desktop such that a single desktop can be displayed over multiple displays. The desktop can thus often be larger than available with a single display which can allow for visualization of a greater amount of data and or provide a better user experience by allowing a user to better organize data across the multiple displays e.g. arrange one type of a data on a first one of the displays arrange a second type of data on a second one of the displays etc. Data can be organized by moving windows between different ones of the displays. A window displayed on the desktop can be moved between portions of the desktop e.g. between displays in any number of ways as will be appreciated by a person skilled in the art such as by user manipulation of a touch screen to drag and drop the window a user dragging and dropping the window using an input output device e.g. a mouse a stylus a touchpad etc. user input keyboard instruction etc.

In a conventional computer system including multiple displays one of the displays is designated as a primary display while the other display s are designated as secondary display s . The primary display is the display with which a user first and primarily interacts e.g. logs onto sets and changes system settings on etc. Traditionally a computer system considers the primary display as being physically located to the left of a secondary display. Thus moving a window displayed on the primary display toward the right in a logical direction physically toward the secondary display moves the window to the secondary display. However in some instances a primary display may actually be physically located to the right of the secondary display due to e.g. office space considerations a physical desk setup electrical outlet proximity user preference etc. If the primary display is actually physically located to the right of the secondary display when a user moves a window displayed on the primary display toward the left in a direction physically toward the secondary display the window will not move to the secondary display because the secondary display is presumed to not be in the left direction in which the window is moving. Moving the window in the left direction is intuitive to a user because of the physical locations of the primary and secondary displays. Yet the user is forced to move the window in a counter intuitive right direction in order to move the window off the primary display and onto the secondary display thereby providing a frustrating and counter intuitive user experience.

Accordingly there remains a need for improved devices and methods for moving windows or other user interface objects back and forth between displays.

In one embodiment a system is provided that includes a first display device configured to display a first portion of a desktop a second display device configured to display a second portion of the desktop and a processor. The processor is configured to operatively connect to the first display device and the second display device create a duplicate of a window displayed on the first portion of the desktop and display on the second portion of the desktop a partial portion of the duplicate that corresponds to a partial portion of the window displayed on the first portion of the desktop that has been moved off the first portion of the desktop in response to an instruction to move the window from the first portion of the desktop to the second portion of the desktop. The duplicate can include at least one of an outline of the window and a snapshot view of contents of the window.

The processor can be configured to create the duplicate in response to the window being displayed on the first portion of the desktop prior to the instruction to move the window from the first portion of the desktop to the second portion of the desktop the processor can be configured to create the duplicate in response to the instruction to move the window from the first portion of the desktop to the second portion of the desktop or the processor can be configured to create the duplicate in response to the window being displayed on the first portion of the desktop in a forefront thereof.

The processor can vary in any number of ways. For example the processor can be configured to display on the second portion of the desktop an entirety of the duplicate in response to an entirety of the window displayed on the first portion of the desktop having been moved off the first portion of the desktop in response to the instruction to move the window from the first portion of the desktop to the second portion of the desktop. For another example the processor can be configured to move the duplicate or a portion thereof displayed on the second portion of the desktop in unison with movement of the window or a portion thereof displayed on the first portion of the desktop. For yet another example in response to a second instruction to move the duplicate displayed on the second portion of the desktop from the second portion of the desktop to the first portion of the desktop the processor can be configured to display on the first portion of the desktop a partial portion of the window that corresponds to a partial portion of the duplicate displayed on the second portion of the desktop that has been moved off the second portion of the desktop. For another example in response to a pointer moving the window from the first portion of the desktop to the second portion of the desktop crossing over to the second portion of the desktop the processor can be configured to cause a second partial portion of the duplicate to be displayed on the first portion of the desktop cause a second partial portion of the window to be displayed on the second portion of the desktop and in response to an instruction to manipulate data in the second partial portion of the duplicate displayed on the first portion of the desktop cause the partial portion of the window to be displayed on the first portion of the desktop and cause the partial portion of the duplicate to be displayed on the second portion of the desktop to allow manipulation of the window on the first portion of the desktop. For yet another example the processor can be configured to cause the duplicate to be displayed on the first portion of the desktop in an invisible state. The processor can be configured to cause the duplicate to be displayed on the first portion of the desktop in the invisible state prior to any portion of the duplicate being displayed on the second portion of the desktop. The processor can be configured to make the duplicate visible on the first portion of the desktop and display the partial portion of the duplicate on the second portion of the desktop in response to the instruction to move the window from the first portion of the desktop to the second portion of the desktop.

Various edges of the first and second portions of the desktop can be programmatically connected. At least two of a left edge of the first portion of the desktop can be programmatically connected with a right edge of the second portion of the desktop such that in response to the first partial portion of the window being moved off the left edge of the first portion of the desktop the processor can cause a corresponding portion of the duplicate to be moved onto the second portion of the desktop from the right edge of the second portion of the desktop a right edge of the first portion of the desktop can be programmatically connected with a left edge of the second portion of the desktop such that in response to the first partial portion of the window being moved off the right edge of the first portion of the desktop the processor can cause a corresponding portion of the duplicate to be moved onto the second portion of the desktop from the left edge of the second portion of the desktop a top edge of the first portion of the desktop can be programmatically connected with a bottom edge of the second portion of the desktop such that in response to the first partial portion of the window being moved off the top edge of the first portion of the desktop the processor can cause a corresponding portion of the duplicate to be moved onto the second portion of the desktop from the bottom edge of the second portion of the desktop and a bottom edge of the first portion of the desktop can be programmatically connected with a top edge of the second portion of the desktop such that in response to the first partial portion of the window being moved off the bottom edge of the first portion of the desktop the processor can cause a corresponding portion of the duplicate to be moved onto the second portion of the desktop from the top edge of the second portion of the desktop.

In another aspect a method is provided that includes displaying a first portion of a desktop on a first display device displaying a second portion of the desktop on a second display device displaying a window on the first portion of the desktop creating a duplicate of the window and moving a first partial portion of the window off the first portion of the desktop such that a second partial portion of the window is displayed on the first portion of the desktop and a duplicate of the first partial portion of the window is displayed on the second portion of the desktop. The duplicate can be created prior to moving the first partial portion of the window off the first portion of the desktop and prior to receiving an instruction to move the first partial portion of the window off the first portion of the desktop.

The method can have any number of variations. For example the method can include receiving an instruction to move the first partial portion of the window off the first portion of the desktop. The duplicate can be created in response to receiving the instruction. For another example the method can include displaying the duplicate on the first portion of the desktop in an invisible state. A second partial portion of the window can be displayed on the first portion of the desktop and the first partial portion of the duplicate can be displayed on the second portion of the desktop in a visible state. The duplicate can be displayed on the first portion of the desktop in the invisible state prior to any portion of the duplicate being displayed on the second portion of the desktop.

In another aspect a computer readable storage medium having a program stored thereon is provided. The program when executed can cause a computer to perform a method the method comprising displaying a first portion of a desktop on a first display device displaying a second portion of the desktop on a second display device displaying a window on the first portion of the desktop creating a duplicate of the window and moving a first partial portion of the window off the first portion of the desktop such that a second partial portion of the window is displayed on the first portion of the desktop and a duplicate of the first partial portion of the window is displayed on the second portion of the desktop.

Certain exemplary embodiments will now be described to provide an overall understanding of the principles of the structure function manufacture and use of the devices and methods disclosed herein. One or more examples of these embodiments are illustrated in the accompanying drawings. Those of ordinary skill in the art will understand that the devices and methods specifically described herein and illustrated in the accompanying drawings are non limiting exemplary embodiments and that the scope of the present invention is defined solely by the claims. The features illustrated or described in connection with one exemplary embodiment may be combined with the features of other embodiments. Such modifications and variations are intended to be included within the scope of the present invention.

Various exemplary methods systems and devices are provided for emulating moving electronic windows between displays. In general the methods systems and devices can allow seamless movement of electronic windows back and forth between multiple electronic displays. In one embodiment a plurality of displays can each be configured to display a portion of a desktop e.g. a graphical user interface GUI upon which objects e.g. windows computer icons etc. can be placed. A duplicate can be created of a window displayed on a first one of the displays. In response to an instruction to move the window from the first one of the displays to a second one of the displays the duplicate can be programmatically moved on the second one of the displays in unison with movement of the window on the first one of the displays. In this way a partial portion of the window moved off the first one of the displays can appear on the second one of the displays by displaying on the second one of the displays a partial portion of the duplicate that corresponds to the partial portion of the window that has moved off the first one of the displays. The window can therefore be seamlessly displayed to a user. User experience can thus be improved by allowing a user to visualize an entirety of a window including during movement of the window between displays and including a situation in which a pointer moving the window on the first one of the displays does not move off the first one of the displays. The duplicate can be displayed on the second one of the displays in a logical position relative to the first one of the displays such that a user can intuitively move the window physically toward the second one of the displays to move the window thereto. In other words if the primary display is located physically to the right of the secondary display a user can move a window displayed on the primary display to the left physically toward the secondary display to move the window thereto if the primary display is located physically to the left of the secondary display a user can move a window displayed on the primary display to the right physically toward the secondary display to move the window thereto if the primary display is located physically above the secondary display a user can move a window displayed on the primary display down physically toward the secondary display to move the window thereto and if the primary display is located physically below the secondary display a user can move a window displayed on the primary display up physically toward the secondary display to move the window thereto. Additionally since the duplicate displayed on the second one of the displays can be moved in unison with the window displayed on the first one of the displays user experience can be improved by allowing the user to continually and accurately adjust position of the window on the second one of the displays including before the window has been fully moved onto the second one of the displays.

A person skilled in the art will appreciate that the devices systems and methods disclosed herein can be implemented using one or more computing systems. The term computing system as used herein refers to any of a variety of digital data processing devices e.g. laptop or notebook computers tablet computers server computers cell phones PDAs gaming systems televisions radios portable music players and the like. The systems and methods disclosed herein can also be implemented in part or in full using software which can be stored as an executable program or programs on one or more non transitory computer readable storage mediums. The term display as used herein refers to any of a variety of display devices e.g. a liquid crystal display LCD a light emitting diode LED screen a cathode ray tube CRT screen a touchscreen a 3D screen and the like. Additionally the term display as used herein can refer to a display that is mounted in the same chassis or package as one or more other displays in the system as well as to a display that is physically separate from one or more other displays in the system. A computing system can thus include multiple displays in a single chassis or package or a computing system can include at least one display in a single chassis or package having one or more additional displays removably and replaceably operatively coupled to the single chassis or package e.g. by cord by wire by wireless electronic connection etc. The term window as used herein refers to a visual object on a display. The visual object can have any shape e.g. rectangular ovular trapezoidal irregular etc. and can optionally contain a user interface allowing input thereto by a user e.g. input by keyboard by mouse by touch by electronic stylus etc. Non limiting examples of a window include a box listing electronic file folder contents a GUI display area for a program running on a computer e.g. a music player a video player an image editor an image viewer a word processing program etc. a MICROSOFT Windows GUI display area and a warning pop up box.

Elements discussed herein with reference to a computing system can generally be configured similar to like named elements discussed herein.

The system can include any of a variety of software and or hardware components. In addition although an exemplary system is depicted and described herein a person skilled in the art will appreciate that this is for sake of generality and convenience. In other embodiments the computing system may differ in architecture and operation from that shown and described with respect to any of the illustrated embodiments. Additional information on computer systems can be found in U.S. Patent Publication No. 2009 0150779 entitled Method And Apparatus For Displaying Help Information filed Dec. 5 2008 which is hereby incorporated by reference in its entirety.

As shown in the illustrated system includes a processor which controls the operation of the system for example by executing an operating system OS a basic input output system BIOS device drivers application programs and so forth. The processor can include any type of microprocessor or central processing unit CPU including programmable general purpose or special purpose microprocessors and or any one of a variety of proprietary or commercially available single or multi processor systems. The system also includes a memory which can provide temporary storage for code to be executed by the processor or for data that is processed by the processor . The memory can include read only memory ROM flash memory one or more varieties of random access memory RAM and or a combination of memory technologies. The various elements of the system are coupled to a bus system . The illustrated bus system is an abstraction that represents any one or more separate physical busses communication lines interfaces and or multi drop or point to point connections connected by appropriate bridges adapters and or controllers.

The system also includes the first display the second display a network interface an input output I O interface a storage device and a display controller . The network interface can enable the system to communicate with remote devices e.g. other computing devices over a network. The I O interface can facilitate communication between one or more I O units . A person skilled in the art will appreciate that the system can be configured to communicate with a variety of I O units . Non limiting examples of input units include a keyboard a touch screen a mouse and a pointing device. Non limiting examples of output units includes a speaker a printer a scanner a removable memory and the various other components of the system . The storage device can include any conventional medium for storing data in a non volatile and or non transient manner. The storage device can thus hold data and or instructions in a persistent state i.e. the value is retained despite interruption of power to the system . The storage device can include one or more hard disk drives flash drives universal serial bus USB drives optical drives various media disks or cards and or any combination thereof and can be directly connected to the other components of the system or remotely connected thereto such as over a network. The display controller can include a video processor and a video memory and can generate images to be displayed on the primary and secondary displays in accordance with instructions received from the processor .

Although the primary display in the illustrated embodiment includes a laptop or notebook computer and the secondary display in the illustrated embodiment includes a standalone LCD monitor the primary and secondary displays can include other types of displays as discussed above. The secondary display in the illustrated embodiment is configured to be wirelessly operatively connected to the primary display as will be appreciated by a person skilled in the art but primary and secondary displays can be configured to operatively connect in other ways such as with a wired connection or a combination of wired and wireless connections as will also be appreciated by a person skilled in the art. The primary display in the illustrated embodiment has the processor integrally formed therewith e.g. disposed in a chassis or package thereof. A person skilled in the art will appreciate that the processor need not be permanently disposed in the chassis or package to be integrally formed therewith e.g. the processor can be configured to be removed from the chassis or base such by removing a motherboard including the processor from the chassis or base. In other embodiments a secondary display can have a processor integrally formed therewith and a primary display can be configured to operatively connect to the second display e.g. the secondary display including a first tablet and the primary display including a second tablet a processor can be integrally formed with primary and secondary displays e.g. a notebook computer having two display screens or primary and secondary displays e.g. each a standalone monitor can be configured to operatively connect to a computing system including the processor.

In the illustrated embodiment the primary display e.g. the chassis or package thereof also includes the memory the bus system the network interface the I O interface the storage device and the display controller . In other embodiments as will be appreciated by a person skilled in the art any one or more of the memory the bus system the network interface the I O interface the storage device can be included in a secondary display e.g. a chassis or package thereof or can be located external to a device s chassis or package e.g. an external storage device plugged into a USB port etc.

The first display can be operatively coupled to the display controller which can provide images to be displayed on the first display . The first display can be coupled to the IO interface such that inputs performed on or recognized or detected by the first display e.g. touch inputs can be received and processed by the processor . Software executed by the processor can recognize or interpret inputs performed on or recognized or detected by the first display as any of a variety of predetermined gestures such as a tap gesture a multi tap gesture a flick gesture a drag gesture a tap and hold gesture a pinch gesture a spread gesture and so forth. Similarly the second display can be operatively coupled to the display controller which can provide images to be displayed on the second display and or the second display can be coupled to the I O interface such that inputs performed on or recognized or detected by the second display can be received and processed by the processor .

One or more software modules can be executed by the system to facilitate user interaction with the system . The software modules can be part of a single program or one or more separate programs and can be implemented in a variety of contexts e.g. as part of an operating system a device driver a standalone application and or combinations thereof. A person skilled in the art will appreciate that any software functions disclosed herein as being performed by a particular software module can also be performed by any other module or combination of modules. In an exemplary embodiment the processor can be configured to execute the one or more software modules various embodiments of modules being shown in .

Although two displays are shown in the system a computing system can include any plural number of displays configured to be operatively connected to one another such that a window can be seamlessly moved as discussed herein between the different displays. Additionally although only one window is shown displayed on the first display in any number of windows can be simultaneously displayed on the first display . Similarly although no windows are shown on the second display in any number of windows can be simultaneously displayed on the second display

The system can be configured to cause movement of the window from the first display to the second display in response to an instruction received by the system . The window can be moved as discussed herein by the window movement processing module and or one or more other modules. The instruction can be received in any number of ways as will be appreciated by a person skilled in the art such as by a user manipulating the window using at least one I O unit e.g. dragging and dropping the window . The I O interface can detect receive and or interpret input provided by the user via the I O unit s and communicate the input to a window movement processing module . If the first display is configured as a touch screen the instruction can be triggered by e.g. a user touching the window on the first display and moving the window toward the second display . The display controller can detect receive and or interpret input provided by the user via the first display and communicate the input to the window movement processing module .

The first display is physically positioned to a right of the second display in the illustrated embodiment. In such a physical setup an instruction by a user to move the window from the first display to the second display will typically intuitively include a movement of the window in a direction of an arrow A1 shown in toward and off a left edge of the first portion of the desktop on the first display e.g. movement of the window in a direction toward the second display as shown by the arrow A1. The angular direction that the arrow A1 is pointing is a non limiting example and the window can be moved toward and off the left edge of the first portion of the desktop on the first display in another angular direction toward the second display . As mentioned above a computer system traditionally considers a primary display as being physically located to the left of a secondary display such that moving a window toward and off a left edge of a desktop on the primary display would not result in the window being moved from the primary display to the secondary display. Instead the window gets stuck at the left edge of the primary display s desktop. As shown for example in a window displayed on a primary display moved in a horizontal left direction of arrow A2 toward and off a left edge of the desktop of the primary display and toward a secondary display is stuck and does not appear on the secondary display . In contrast as shown in and the computer system can be configured to allow the window to move from the primary display to the secondary display in response to the window being moved toward and off the left edge of the of the first portion of the desktop on the primary display . In an exemplary embodiment the system can allow such movement by having various edges of the desktop on the primary and secondary displays being programmatically connected.

Generally the primary and secondary displays can be programmatically connected by mapping coordinates from an edge of one of the displays to an edge of the other of the displays . In other words the edges can be virtually e.g. electronically connected. For non limiting example in a setup as the illustrated embodiment in which the primary display is physically positioned to the right of the secondary display though the system considers the primary display as being physically located to the left of the secondary display a left most X coordinate on the primary display is zero. A right most X coordinate of the secondary display is a positive number e.g. a number equal to a number of X pixels of the primary display s monitor plus a number of X pixels of the secondary display s monitor. Thus if a user attempts to move an object window pointer on the primary display to the left beyond X coordinate zero of the primary display the coordinate can be translated to the right most X coordinate of the secondary display . In this way the edges can be programmatically connected thereby allowing objects to pass along non contiguous edges.

The system can be configured to programmatically connect various edges of the desktop on the primary and secondary displays in a variety of combinations. The various edges can be pre programmed in the system as being connected e.g. be pre programmed in the memory as will be appreciated by a person skilled in the art. In an exemplary embodiment as shown in the left edge of the first desktop portion can be programmatically connected to a right edge of the second desktop portion such that a window can be moved contiguously between the left and right edges a right edge of the first desktop portion can be programmatically connected to a left edge of the second desktop portion such that a window can be moved contiguously between the left and right edges a top edge of the first desktop portion can be programmatically connected to a bottom edge of the second desktop portion such that a window can be moved contiguously between the top and bottom edges and a bottom edge of the first desktop portion can be programmatically connected to a top edge of the second desktop portion such that a window can be moved contiguously between the top and bottom edges .

In this way regardless of the physical locations of the primary and secondary displays relative to one another a user intuitively moving a window displayed on one of the displays in a physical direction toward the other of the displays can allow the window to be moved to the other of the displays . The primary and secondary devices can thus be initially positioned at any physical relation relative to one another with the system being configured to seamlessly move windows as disclosed herein between the primary and secondary devices . Additionally the primary device can be repeatedly physically arranged in a variety of different physical positions relative to the secondary device e.g. as a user determines a most convenient physical setup of the user s desk while maintaining the capability of seamlessly moving windows as disclosed herein between the primary device and the secondary device s . Similarly the primary device can be repeatedly physically arranged in a variety of different physical positions relative to the secondary device and or one or more additional secondary devices in different physical locations e.g. in different cities as a user travels with the primary device and connects the primary device to different secondary devices in the different cities while maintaining the capability of seamlessly moving windows as disclosed herein between the primary device and the secondary device s .

For non limiting example the primary device can be moved between different rooms in which the primary device may not be in the same physical position relative to a secondary display in each room because each room can have a different setup. The primary display can nevertheless be configured to seamlessly move windows to from the different secondary displays because the processor can be configured to programmatically connect multiple edges of the primary and secondary displays.

For another non limiting example the primary display can be positioned physically below the secondary display . Moving the window on the primary display off the top edge can seamlessly move the window onto the secondary display from the bottom edge .

For yet another non limiting example shown in an embodiment of a primary display can be positioned physically to the left of a secondary display . A window displayed on the primary display can be moved right in a direction toward the secondary display as shown by arrow A3 such that the window moves off a right edge of the primary display and onto the secondary display from a left edge thereof. A duplicate of the window is displayed on the secondary display in a partial portion of the duplicate is displayed on the secondary display in and a partial portion of the window is displayed on the primary display in . Creation and display of duplicates of windows and display of partial portions of duplicates and windows are discussed further below.

Referring again to the embodiment of in response to the instruction to move the window from the primary display to the secondary display the window can be so moved by the window movement processing module and or one or more other modules. For convenience of discussion herein the window is described as being moved by the window movement processing module . The window movement processing module can be configured to move the window using a duplicate created by a duplicate creation module illustrated in . The duplicate can be a copy of the window such that if the duplicate is displayed on the primary display and or secondary display the duplicate appears to be the same as the window to a user viewing the duplicate. If a computing system includes more than two secondary displays the duplicate creation module can be configured to create one duplicate for use with all of the secondary displays or the duplicate creation module can be configured to create an individual duplicate for each the secondary displays. The duplicate can be stored in the memory and or in the storage device . In an exemplary embodiment the duplicate creation module can be configured to store the duplicate in the memory e.g. in temporary storage.

The duplicate creation module can create the duplicate in a variety of ways using software hardware or a combination of software and hardware. In an exemplary embodiment the duplicate creation module can use one or more application programming interfaces APIs such as low level graphic APIs to gather an image of the window or to gather data used to render a graphical representation of the window . The duplicate creation module can then use the gathered image data to render the duplicate using at least one API. As will be appreciated by a person skilled in the art the one or more APIs can be specific to the system such that different systems can have similar yet different API s provided by a graphics card vendor provided by an operating system OS developed by a software implementor etc.

The duplicate creation module can be configured to create the duplicate of the window prior to the window being moved in response to an instruction to move the window from the first display to the second display . In an exemplary embodiment the duplicate creation module can be configured to create the duplicate of the window in response to the window being displayed in a forefront of the first display . The duplicate can thus be created for a window most likely to be next moved from the first display to the second display because it is likely the window that the user is actively viewing. As different windows move to the forefront of the first portion of the desktop the duplicate creation module can be configured to create a duplicate for each of the forefront windows. Each of the duplicates can be stored e.g. in the memory and or the storage device for later use. Alternatively only the most recently created duplicate can be stored e.g. in the memory and or the storage device which can help conserve storage space.

In another exemplary embodiment the duplicate creation module can be configured to create the duplicate of the window in response to the window being displayed on the first display e.g. in response to an initial instruction to display the window such as by a user double clicking on an icon displayed on the desktop to open a program. A duplicate can be created for each window displayed on the first display . The duplicate can thus be ready for display on the secondary display either without updating the duplicate as initially created e.g. if the window includes static content e.g. still image files a system warning box etc. and or if the duplicate creation module is configured to not dynamically update contents of the duplicate until the duplicate is fully or partially displayed on the secondary display or with updating the duplicate as initially created e.g. if the duplicate creation module is configured to dynamically update contents of the duplicate prior to the duplicate being fully or partially displayed on the secondary display . In other words the duplicate can be a live view of the window such that if data changes in the window data can similarly change in the duplicate and vice versa. The duplicate can thus be a pixel for pixel duplicate of the window .

Alternatively the duplicate can be a single static snapshot view of the window such that if data changes in the window data does not similarly change in the duplicate. The duplicate can thus be a pixel for pixel duplicate of the window . If the system detects that a user is attempting to manipulate a static duplicate e.g. attempting to click thereon and or type therein using the I O unit attempts to manipulate the duplicate using touch screen functionality of the second display if the second display is configured for touch etc. the system can be configured to swap the partial window on the first display and the duplicate on the second display thereby allowing the user to manipulate the window on the second display . The window and the duplicate can be swapped between the displays any number of times in response to the user attempting to manipulate the duplicate. The swap can take place as the window passes from one of the displays to the other of the displays for e.g. as soon as the dragging device e.g. mouse pointer etc. crosses over from an edge of one of the displays to the other of the displays . This in effect better readies the window for interaction by the user since it is more likely that the user will operate on the window in the display to which the window was dragged instead of the display from which the window was dragged. A live duplicate that is a series of updated snapshots can be similarly swapped.

The system can be configured to create a live duplicate for one window displayed on the first display and to create a snapshot duplicate for each other window displayed on the first display . The system can therefore save processing resources and or storage space because a snapshot duplicate can occupy less storage space and use less processing resources than a live duplicate. The system can determine which of a plurality of windows on the first display to create the live duplicate for based on any one or more factors such as creating the live duplicate for a forefront window and a snapshot duplicate for every other window.

In some embodiments the duplicate creation module can be configured to create the duplicate of the window in response to the window being displayed on the first display only if the window excludes a certain type of predetermined content. The predetermined content can vary. In an exemplary embodiment the predetermined content includes content that is continually updated by the system e.g. a moving image file such as a video a dynamically updated program e.g. a music player a task manager performance meter a video player etc. showing continually updated information etc. In other words the duplicate creation module can be configured to generate a duplicate of only static content in response to the window being displayed on the first display and be configured to generate a duplicate of non static content in response to the instruction to move the window from the first display to the second display . In this way the created duplicate can be ready to be displayed on the secondary display e.g. without the duplicate having to be updated by the duplicate creation module to reflect current contents of the window. System resources can thus be conserved.

In response to the system receiving an instruction to move the window from the first display to the second display the window movement processing module can be configured to determine if a duplicate of the window exists e.g. has already been created. If the duplicate exists the window movement processing module can be configured to retrieve the duplicate from storage e.g. from the memory or the storage device . If the duplicate does not exist the window movement processing module can be configured to cause the duplicate creation module to create a duplicate of the window .

Also in response to the system receiving an instruction to move the window from the first display to the second display the window movement processing module can be configured to cause the window to move in the direction indicated by the instruction e.g. in the direction of the arrow A1 in . As shown in in response to a partial portion not shown in of the window moving off the first portion of the desktop on the first display e.g. off the left edge in the illustrated embodiment of the window movement processing module can cause a partial portion of a duplicate corresponding to the window and created by the duplicate creation module as discussed above to be displayed on the second portion of the desktop on the secondary display . The partial portion of the duplicate displayed on the second portion of the desktop on the secondary display can correspond to the partial portion of the window moved off the first portion of the desktop on the first display such that the contents of the window can be fully displayed on the desktop with a partial portion of the window on the first portion of the desktop on the first display and a remainder part e.g. the partial portion of the duplicate on the second portion of the desktop on the second display . Although the partial portion of the window that has been moved off the first portion of the desktop on the first display is technically not displayed on the second portion of the desktop on the second display to a user viewing the displays the partial portion of the duplicate appears to be the moved off portion of the window . The window can thus appear to the user as being fully displayed on the desktop thereby allowing the user to fully visualize information.

The window movement processing module can be configured to position the partial portion of the duplicate displayed on the second portion of the desktop on the secondary display in correspondence with the window as shown in . In other words the window movement processing module can be configured to move the partial portion of the duplicate onto the second portion of the desktop on the second display from the right edge of the second portion of the desktop that is programmatically connected to the left edge of the first portion of the desktop from which the window has been moved. The partial portion of the duplicate on the second display can be located at a vertical top bottom or up down position on the second display corresponding to a vertical position of the partial portion of the window on the first display as shown in which can ease user viewing of the window as a whole even if the portions of the desktop are separated by a physical space as in the illustrated embodiment.

The window movement processing module can be configured to move the partial portion of the duplicate on the second display in unison with the partial portion of the window on the first display . Thus as the window moves off the first portion of the desktop the partial portion of the duplicate on the second portion of the desktop can be updated such that to a user visualizing the displays the window appears to be seamlessly moving from the first display to the second display . In other words if the system receives an instruction e.g. a user instruction via the I O unit to move the partial portion of the window in a vertical direction e.g. up and or down as indicated by arrow A4 shown in the window movement processing module can be configured to move the partial portion of the duplicate in a corresponding vertical direction as indicated by arrow A5 in . The arrows A4 A5 in point in illustrative directions only. The partial window and the partial duplicate can be moved together in unison in any combination of horizontal vertical and diagonal directions. The window movement processing module can be configured to move the partial portion of the duplicate on the second display in unison in a variety of ways such as by continually capturing e.g. using at least one API a position or coordinates of the window or partial portion thereof on the first display and or a position or coordinate of a pointer manipulating the window and moving the duplicate or partial portion thereof by a same position or coordinate translation on the second display . A person skilled in the art will appreciate that although movement of the window from the first display to the second display may visually appear to be seamless a processing delay that is substantially visually imperceptible may exist in moving the window off the first display in updating the partial portion of the window on the display and in updating the partial portion of the duplicate on the second display

Once the window has been fully moved off the first portion of the desktop on the first display as shown in the duplicate can be fully displayed on the secondary device . To a user visually observing the duplicate on the second display the duplicate appears to be the window previously visible on the first display . The duplicate can be moved around the second display by a user and or otherwise manipulated on the second display by a user e.g. allow data to be input thereto by one or more I O unit s etc. similar to the movement and manipulation provided by the system for the window displayed on the first display . The duplicate in the illustrated embodiment cannot be operated on e.g. allow data to be input clicks to be registered etc. since it is a pixel for pixel image copy of the original window but the duplicate can be acted upon by being swapped as discussed above. The window can be updated in the background by a window updating module such that in response to an instruction to move the duplicate from the secondary display to the primary display the window can be ready for a partial portion and or a full portion thereof to be displayed on the first display . Alternatively the window updating module can be configured to update the window for at least partial display on the first display in response to an instruction to move the duplicate from the secondary display to the primary display

In another exemplary embodiment once the window has been fully moved off the first portion of the desktop on the first display the window can be fully displayed on the second display and the duplicate can be removed from the second display and can be disposed of e.g. deleted or marked for deletion from its storage location in the memory and or the storage device . In this way the system need not store and or dynamically update two windows e.g. the window and the duplicate instead of one window e.g. the window which can conserve processing resources. The duplicate can however be maintained in its storage location with or without being dynamically updated by the processor which can facilitate movement of the window from the second display to the first display in the event an instruction is received for such movement. If the duplicate is maintained in its storage location the duplicate can be subsequently used in moving the window from the second display to the first display similar to that discussed herein in moving a window from a first display to a second display.

Whether the system is configured to display the duplicate or the window on the second display the window and the duplicate can be moved any number of times between the primary and secondary displays . The system may thus be configured to create multiple duplicates of the window e.g. when the system is configured to dispose of a duplicate after the window has been fully moved onto the one of the first and second displays to which it is being moved and the window is subsequently moved again between the first and second displays 

The duplicate created by the duplicate creation module and stored in the memory and or the storage device can optionally be displayed in an invisible state on the first display or on the second display . Displaying the duplicate in the invisible state can speed up display of the duplicate on the second display . The window movement processing module can be configured to cause the invisibly displayed duplicate to be visibly displayed on the second display partially e.g. as in and or fully e.g. as in in connection with movement of the window from the first display to the second display . In an exemplary embodiment the duplicate creation module can cause the duplicate to be displayed in the invisible state on the first display or on the second display prior to any portion of the window being moved off the first portion of the desktop and prior to the system receiving an instruction to move the window from the first display to the second display

If the system is configured to maintain the duplicate in its storage location once the window has been fully moved off the first portion of the desktop on the first display and remove the duplicate from the second display the system can be configured to display the duplicate on the first portion of the desktop on the first display or on the second display while the window is displayed on the second display . Invisibly displaying the duplicate in this way can facilitate movement of the window from the second display to the first display if an instruction to do so is received.

In some embodiments the system can be configured to display a representative duplicate of the window on the second display during movement of the window from the first display to the second display until the window is fully moved. Once the window has been fully moved off the first display the representative duplicate of the window can be visually removed from the second display e.g. deleted therefrom or displayed thereon in an invisible state and the window or the duplicate if created can be fully displayed on the second display . Displaying a representative duplicate of the window can conserve processing resources and or allow faster movement of the window to the second display because the representative duplicate of the window can include less functionality than the window e.g. can omit some or all data visible in the window . If the system is configured to display the representative duplicate of the window the duplicate creation module can be configured to create the representative duplicate of the window instead of the duplicate .

The system can be configured to create a duplicate for one window displayed on the first display and to create a representative duplicate for each other window displayed on the first display . The system can therefore save processing resources and or storage space because a representative duplicate can occupy less storage space and use less processing resources than a duplicate. The system can determine which of a plurality of windows on the first display to create the duplicate for based on any one or more factors such as creating the duplicate for a forefront window and a representative duplicate for every other window.

The representative duplicate of a window can have a variety of configurations. In an exemplary embodiment a representative duplicate of a window can include a solid or at least partially filled shape having same dimensions as the window. In another exemplary embodiment illustrated in a representative duplicate of a window can include an outline or wireframe having same dimensions as the window. illustrates a partial portion of the outline or wireframe displayed on a second portion of a desktop on a second display corresponding to a partial portion of the window already having been moved off a first portion of the desktop on a first display which has a remaining portion of the window displayed thereon. As mentioned above once the window has been fully moved off the first display the representative duplicate of the window can be visually removed from the first display and the window or a duplicate if created can be fully displayed on the second display

In some embodiments a computing system can be configured to jump a window from a first display to a second display by not showing the window on the second display until a pointer moving the window on the first display has moved from the first display to the second display e.g. without displaying a partial portion of the duplicate on the second display which can accommodate for limited processing capability and or be faster than displaying a partial portion of the duplicate on the second display. The computing system can thus be configured to not create a duplicate of the window and be configured to display the window on the second display once the pointer moving the window on the first display has moved from the first display to the second display. illustrates am embodiment of a first display having a partial portion of a window displayed on a first portion of a desktop thereon the window being moved to a second display . Once a pointer moving the window has moved from the first display to the second display the window can be fully or partially displayed on the second display so as to jump thereon.

The devices systems and methods disclosed herein are not limited to manipulating windows but rather can be used to manipulate any of a variety of user interface objects such as text icons controls etc.

Although the invention has been described by reference to specific embodiments a person skilled in the art will understand that numerous changes may be made within the spirit and scope of the inventive concepts described. A person skilled in the art will appreciate further features and advantages of the invention based on the above described embodiments. Accordingly the invention is not to be limited by what has been particularly shown and described except as indicated by the appended claims. All publications and references cited herein are expressly incorporated herein by reference in their entirety.

