---

title: Method and system for enabling secure one-time password authentication
abstract: An approach for facilitating a one-time password (OTP) authentication procedure is described. A dedicated validation appliance receives a one-time password authentication request via an application programming interface, which is a single point of access to the dedicated validation appliance. The dedicated validation appliance then determines a validity of the request based on the correlating of a submitted OTP against OTP values independently generated by the dedicated validation appliance based on a large secret key exclusive to a client device that initiated the request. The single point of access to the dedicated validation appliance as well as exclusive sharing of the secret key with only another dedicated validation appliance or one-time with the client device reduces the likelihood of attackers discovering the secret keys.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09230084&OS=09230084&RS=09230084
owner: Verizon Patent and Licensing Inc.
number: 09230084
owner_city: Basking Ridge
owner_country: US
publication_date: 20121023
---
Service providers and enterprises are continually challenged to deliver value and convenience to consumers and employees by providing compelling network services and advancing the underlying technologies. Many such network services depend critically upon robust secure authentication systems and techniques for use by requesting client devices. One time password OTP methods provide a common approach to user authentication especially in enterprise contexts and are often combined with other user verification elements to form multi factor authentication systems. The concept of a shared secret key is central to common OTP systems. Typical OTP systems require the generation of a unique secret key for each end user. In addition the user s secret key must be installed on a device in the possession of the user for the purpose of generating a sequence of OTPs that are unique to the user. In order for the authentication system to perform validation of the one time passwords entered by the users an inventory of all the users secret keys must be maintained on the server side whether in the authentication system itself or within an adjunct OTP validation service. Unfortunately the authentication system or adjunct OTP validation service could be vulnerable to attacks and hack attempts. The authentication system may be compromised in instances where the attacker is able to access the inventory of secret keys assigned to different users of requesting client devices. The authentication system would be similarly compromised if the attacker could by any means anticipate deduce or predict the secret keys assigned to users or if the attacker could intercept a user s secret key while it is in transit to the end user during an initialization or provisioning phase.

Based on the foregoing there is a need for an effective user authentication system that includes measures to restrict access to its inventory of authentication secret keys.

An apparatus method and software for facilitating a one time password OTP authentication procedure are described. In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It is apparent however to one skilled in the art that the present invention may be practiced without these specific details or with an equivalent arrangement. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.

Although the various exemplary embodiments are described with respect to one time password authentication systems it is contemplated that these embodiments have applicability to any data protocols methodologies or systems for provisioning accessing or activating one or more resources in a secure time sensitive manner.

As mentioned previously typical authentication systems require the user of a requesting user device to enter a password via the authentication service to facilitate the authentication procedure. In some instances the passwords are conveyed to the user via a dedicated hardware key fob device issued to them by a third party vendor or directly by a provider owner e.g. an enterprise of the resource requiring authentication. Alternatively the password may be conveyed to the user via a software utility for generating a seemingly random integer of digits. Once this password is entered the authentication system determines whether it matches the value expected for that user and or requesting client device during a defined time window e.g. 10 minutes .

Such approaches to authentication depend upon the backend authentication function and system maintaining an inventory of shared user profiles wherein each user profile specifies at least a secret key unique to the user a very large random serial number SN unique to the user s soft token application and a unique identifier of the user. The authentication function also contains one or more cryptographically secure hash functions which map secret key clock time pairs onto OTP values that are in effect for the indicated user at the specified time. Clock times may be fairly granular i.e. measured in minutes relative to some reference time point. As such the OTP values are virtually indistinguishable from random values and effectively unpredictable given that a cryptographically secure hash function is used. Per this approach the security of the authentication system need not depend upon the cryptographic algorithm of the hash function being kept secret. Rather the integrity of the authentication system rests upon the secret key strings remaining secret and being of sufficient length that a guessing attack is not feasible.

Also the authentication system may allow for successive generations or versions of hash algorithms to be introduced into the system over the lifetime of the system. For example the system may be implemented to accommodate different users employing different hash functions. In such embodiments the user profile must contain the quadruplet of secret key serial number SN user identifier and identification of the hash function version in order that the proper algorithm be run when authenticating a specific user. In such an OTP system the end user s device employs the secret key and hash function algorithm which are embedded in the client OTP program along with the clock time to generate a sequence of seemingly random one time password values with a new OTP value refreshing the display periodically. During user authentication the user passes the current displayed OTP value to the authentication service. The user s claim of identity can then be validated on the server side by looking up the user profile for the claimed user identity and applying the same hash function to that user s secret key and the current server clock time. To allow for user device clocks and server clocks not being precisely in sync the authentication procedure may further allow some grace in time by running the hash computation for the user for several time values centered about the current server clock time e.g. specify clock times as an integral number of minutes past the beginning of a current epoch .

The user authentication succeeds if any of these several hash values within the grace time window match the OTP value the user submitted. Hence in the case of a match this serves as validation that the user is in possession of a device containing the correct secret key. Such authentication systems often augment this OTP technique where the user proves they possess something with entry of a secret personal identifier that allows the user to prove they know something an attacker would not know. The combination of these factors help ensure security under circumstances where a client device is stolen or misplaced by the authentic user.

While the approaches described above are helpful the authentication system may still be subject to breach. One such instance is when the random number generator which is used to generate the user secret keys is compromised thus enabling an attacker to deduce the generated keys and achieve advantage in a secret key guessing attack. In addition the authentication system can be compromised in instances where the attacker gains access to the inventory of secret keys assigned to different users. Unfortunately developing an authentication mechanism that facilitates a time and password sensitive authentication scheme while preventing breaches by inside and outside attackers is not readily achieved by current systems.

To address this issue system presents a network of dedicated validation appliances for generating and or maintaining the user profiles required to generate authentic one time passwords OTPs for facilitating an authentication request. As discussed above each user profile may specify at least the user identifier a large serial number the user s secret key and in some instances the hash function algorithm version that the user s client device or program employs. The dedicated validation appliances referred to herein collectively as appliances may be implemented as computing devices embedded controllers or the like. In addition the appliances may feature a communication interface for interacting with one another to perform specific authentication functions. Still further the appliances may interact with an authentication service and administration service for carrying out a limited set of authentication and or device administration functions respectively in connection with a calling service or user device .

By way of example the appliances may be configured to expose a requesting service or user device to only a narrow set of functions dedicated to the specific mission of one time password validation e.g. per the authentication service . Validation of the one time password may be further based upon validation of a secret key as associated with a given user profile . Still further a limited set of functions may be exposed for appliance configuration and management e.g. per the administration service . It is noted that highly constrained access to the functions and features of appliances prevents the likelihood of inside or outside breach of the system including access to the inventory of user profiles including secret keys maintained by the appliances . Hence the highly constrained access pertains to network physical and access restrictions imposed upon or by the appliances . Under this scenario proprietary third party internal and or external systems and devices are also limited in their exposure to the inventory of user profiles.

As another example the highly constrained access also applies to means for eliminating conventional user login sessions. This includes for example login attempts associated with standard computer operating systems such as Windows Linux OS X or the like. Moreover the appliances are configured such that conventional login sessions at either an ordinary user level of privilege or at a super user or root level of privilege are restricted. Rather the narrow set of functions exposed by the appliance s remote interface includes no operations that support discovery of the inventory of secret keys.

As another example the highly constrained access pertains to a limited means of sharing exchanging looking up or accessing the inventory of user profiles via a communication network e.g. service provider network . This is the case even by persons and or systems directly associated with the resource or provider owner thereof for which authentication is required. Still further per system the storing and sharing of user profiles is limited to only a select few devices at a time namely at a user device or one or more dedicated validation appliances . The one time passwords OTPs generated based on the secret keys i.e. per a hash function are valid for only a limited period of time further reducing the applicability of a given OTP for performing authentication.

Still further the appliances are only able to share the inventory of user profiles including secret keys among themselves to serve the purpose of keeping the appliances information stores in sync with one another. However other entities in the environment even an enterprise authentication system that makes use of the appliances are not able to obtain user profiles via the functions exposed in the appliance interface. Precautions are taken e.g. challenge response handshakes to ensure no entity in the environment that is not a validation appliance is able to impersonate an appliance and trick one of the actual validation appliances into divulging user profiles . The appliance function invoked by the authentication server is restricted to a request for validation that a user identifier to OTP pair is valid for the specified user and one time password at the given time period when the request is made. As will be discussed further later on the only exchange of a secret other than between appliances is during a one time soft token application initialization procedure.

As another example the constrained access requirement of the appliances pertains to the physical maintenance of the appliances . For example the appliances may be deployed throughout a facility at disparate locations of an enterprise. Furthermore the appliances may be housed in a secured room or cage i.e. barrier . This imposes a physical constraint for limiting access to the inventory of user profiles and the secret keys contained therein as maintained by the appliances . This also limits the ability of attackers to reverse engineer an appliance or introduce an imposter appliance into the network for intercepting user profiles .

It is noted that various additional safeguards may be employed by different enterprises for use in connection with the highly constrained access features described above. This may include for example the implementation of various different delivery protocols or policies. In one example the enterprise may require that appliances be deployed and configured based on customer department geography or characteristic type specific challenge response handshaking mechanism. Hence a custom handshaking protocol implemented for the Region network of appliances would differ from that of the Region network of appliances. This customization at different levels of granularity would therefore further contain breaches to a single customer department geography etc. thus assuring attacks do not affect the network of appliances as a whole.

Based on the above described constraint and security approaches it is noted the appliances facilitate restricted access to the user profiles for specifying the secret keys while the keys are at rest e.g. as stored within one or more appliances or while the keys are in motion e.g. as a secret key is in transit to a user device for activating a soft token application of a device .

In one embodiment the appliances operate in connection with the authentication service to authenticate a requesting user device and or user. The authentication may include for example validation of a one time password originating from the end user by comparing it with candidate one time passwords generated by the appliance according to the secret key and hash function stored in the applicable user profile . For the purpose of illustration the authentication service may be implemented as a web service hosted application or other module accessed over the network for handling authentication requests. Requests may be submitted to the authentication service by way of an application referred to herein collectively as application of a user device . Also the application may be a browser web portal or other utility for pointing a user to a network location of the authentication service . As such the user may enter a Uniform Resource Locator of the authentication service into the application in connection with a user login procedure resource provisioning procedure resource access procedure or other scheme requiring authentication. Alternatively the application may call for execution of the authentication service via the device operating system.

The authentication service may be provided by a third party vendor or directly by a provider owner of the resource for which authentication is required e.g. an enterprise . As will be discussed more fully later on the authentication service need only have access to an application programming interface API for communicating with the appliances regardless of whether the service is a direct or third party solution. Moreover the appliances may be physically distributed throughout an area defined by the provider owner of the resource such as one or more secure data centers. Distribution of appliances may correlate to the distribution of various network nodes and devices within a premise enterprise of the provider owner. For example the distribution scheme for the appliances may be to accommodate mobile authentication across different departments and or group locations within a facility of an enterprise a geographic region etc.

In certain embodiments the appliances may be configured to interact with the authentication service via a network i.e. service provider network . For example the appliances may communicate with each other via secure encrypted channels to ensure their data e.g. user profiles is synchronized. Replication of data amongst the mesh of peer appliances enables robustness against failures as the appliances back up the data to each other and allows the authentication service to be scaled to any required volume of OTP validation requests. Hence data exchange is significantly privatized as the sharing of secret data e.g. user profiles and associated secret keys is limited to the mesh of appliance peers and not specific people services or institutions. This ensures that a trust relation is established among the mesh of appliance peers machines rather than based upon people.

In another embodiment the appliances may also be configured to operate in connection with an administration service . The administration service provides a limited network and user interface for enabling a provider owner of the resource to configure and maintain the network of appliances . By way of example the administration service enables the provider owner to add new appliances remove appliances power down specific appliances or other functions. It is noted the administration service may render a user interface to a computing device not shown of the provider owner for presenting the aforementioned administrative tasks as different selection options.

In addition the administration service also presents various selection options for facilitating deployment and initialization of a soft token application . By way of example the deployment pertains to delivery and storing of the soft token applications at respective user devices . The initialization procedure facilitates secure activation of the soft token applications referred to herein collectively as applications wherein the activation includes uploading of a secret key specific to the application. The soft token applications are software utilities configured to present OTPs the user may enter at the authentication service based on an authentic secret key for the requesting user and or user device . Deployment of the soft token application for installation at a user device may be fulfilled via push technology email physical mailing of the software or other means.

By way of example the soft token application is distributed with a serial number encoded into the executable software file but without being armed with a secret key value a priori. As such a default or estimated secret key value cannot be determined by an unauthorized user of a soft token application . Once installed at a user device however the soft token application interacts with an initiation gateway to engage in a secure dialog with one of the appliances to conduct the one time initialization procedure. As noted above the initialization pertains to arming of the soft token application with a secret key value specific to the given user for enabling subsequent generation of one time password sequences at the user device locally . In addition in cases where the authentication service supports multiple generations of hash algorithms the initialization procedure may include loading of the hash algorithm to be employed for generating OTPs. Hence it is noted that during initialization the secret key and or hash algorithm is shared between the soft token application and at least one of the appliances e.g. the appliance within a certain physical or network proximity of the user device .

During initialization the soft token application passes via the initiation gateway a user identifier along with the assigned serial number of the application to the appliance . This exchange may correspond to a handshake procedure between the application and the appliance . Upon receipt of the user identifier and serial number the appliance cross references the user identifier and or serial number of the application against user profile data maintained for the user to determine per the user identifier which soft token applications per the serial number has been provisioned with a specific secret key value. The initiation gateway serves as an additional mechanism device layer for brokering the initialization interaction and credential exchange between user devices and appliances .

The initialization handshake happens over a Transport Layer Security TLS encrypted session or similar secured private channel thus ensuring no person can eavesdrop on the handshake protocol exchange. During this initialization handshake the end user may enter their user identifier into the soft token application user interface. The soft token device then transmits this data along with the embedded SN to the appliance . Upon receipt the appliance then looks up the user profile associated with the specified user identifier and verifies the SN stored in that profile matches the SN which the soft token application communicated. If the SN values match the appliance sends the user s secret key to the soft token application thus facilitating successful arming of the application .

The privacy of this exchange is critical for ensuring no attacker whether insider or outsider can intercept the user s secret key during transit. For example in the case of an end to end TLS session or similar end to end secured channel the TLS secured transport could be layered over other secured transports e.g. IPsec based virtual private network VPN session . Such details can depend upon how the user s device is connected to the corporate or provider network at the time when the soft token application is armed. In the case where the user device is connected directly to a corporate LAN during the initialization handshake the TLS session could be layered directly over TCP IP and need not necessarily be mediated by the initialization gateway . Alternatively the user might be located remotely during the initialization process and connect to their corporate network over a VPN connection that is already available to them. Under this scenario the secured TLS session could be riding over an IPsec based VPN session which also provides its own encryption. In such scenarios there would be two layers of encryption.

The appliances generate user profiles which in turn supports execution of the above described initialization procedure. For the purposes of illustration generation of a user profile for indicating a secret key may be carried out by at least one appliance within the network as follows i create a large random serial number SN to be uniquely associated with that user s soft token application ii create a large random secret key to be associated with that user iii choose a hash algorithm to be used during all OTP generation and validation operations for that user iv store the user identifier SN secret key and hash algorithm identifier as a data record for maintenance as a user profile for the user and to be stored on the appliance and v create a custom executable code instance to embody that user s soft token application program wherein the customization is comprised of embedding the unique SN into the executable program but not the user identifier as well as embedding the hashing algorithm to be employed for that user.

In certain embodiments the system accommodates different enterprise level network access schemes including those where OTP authentication is required to access a virtual private network VPN prior to activation of the soft token application for enabling the authentication. For such a scenario the soft token application may still be securely armed with a secret key while the user is connected remotely to the corporate or provider network over the Internet as follows if the user is remote and does not have VPN access the initiation gateway generates a VPN like private communication channel for executing initial exchange. The private channel is transient such that it is generated for the specific user one time and only for the duration of the secret key exchange protocol. As such the user profile for specifying the serial number user identifier and secret key are transmitted over the private channel i.e. via a tunneling protocol between the appliance and the soft token application requiring initialization by the initiation gateway . This transient connection is depicted by way of example as dashed line .

It is noted the transient connection as mediated by the initiation gateway can be based on any known means of tunneling data over an IP based network. As in the case of ordinary VPN access the communication procedure from client to proxy would be encrypted point to point this is in addition to the end to end encryption of the TLS session being tunneled . However the transient connection may be implemented in a VPN like manner i.e. the connection is limited for the duration of the initialization exchange and no other session is allowed to commence in association with the same serial number. In one embodiment the appliance that generates the unique SN for that user s soft token application would add the SN to a sort of job list of outstanding soft token applications that remain to be initialized armed . Thus when the transient connection is set up via the initiation gateway the gateway verifies with the appliance that the SN sent from the user device is on this job list.

If the SN is not featured on the list the transient connection is terminated by the initiation gateway . If the SN is featured on the job list however the transient connection proceeds such that the soft token application may carry out the initialization handshake with the appliance . Upon completion the SN may also be removed from the job list thus ensuring further attempts to impersonate the requesting soft token application cannot be engaged. This approach ensures that the transient connection for enabling an initialization session is one time only. In addition an aging mechanism is incorporated per automatic removal of the SN values from the job list in cases where the initialization does not commence within a prescribed time limit. This further ensures that soft token application activation tasks that are abandoned do not leave stale data in the system.

The VPN like access session i.e. as facilitated per the transient connection is distinguished from traditional VPN communication as the initiation gateway need only direct traffic from the user to one specific appliance address. This is in contrast to traditional VPN communication wherein the remote client can send packets through the VPN gateway to virtually any destination IP address that would be available to the client in instances where the client is connected locally rather than remotely.

As an additional security feature in certain embodiments the soft token application installed on the user device need not be provided the IP addresses or DNS names of the validation appliances e.g. the soft token application could possess only a pseudo dummy address for the appliance . In such embodiments the initiation gateway may perform a network address translation ensuring the packets from the application get forwarded to one of the validation appliances rather than the dummy address during the initialization protocol exchange. This approach obscures the actual addresses of validation appliances themselves from the user devices which are only provided information for connecting with the initialization gateway s . Furthermore such an approach ensures a rogue soft token application modified by an attacker cannot communicate with any device in the corporate or provider network other than the validation appliance .

In certain embodiments once the soft token application is initialized no further secret key exchange is required. Furthermore no additional communication between an appliance and the requesting soft token application commences. Rather the soft token application is able to process the secret key as armed via the hash function to enable the generation of OTPs. OTPs are generated periodically with the periodicity being established as a parameter during implementation or configuration of the authentication service e.g. rollover every 60 seconds . For the purpose of illustration this period of time corresponds to an approximate time of use of the OTP wherein the time also permits a grace window to allow for clock variances between a user device and the appliance . Information for indicating the time of use may be presented by the soft token application along with the OTP to indicate the time remaining before another OTP value is to be generated and presented. By way of this approach the time frame for presentment of the OTP value via the soft token application may also be employed as a variable for authenticating the password and or user device as discussed more fully later herein .

In certain embodiments the above described functions of the appliances are exposed to the calling authentication service and or administration service by way of application programming interfaces APIs and respectively. The APIs and may include one or more instructions for initiating and or calling a specific function. By way of example the API may include instructions for calling and or executing the initialization process per the administration service or other configuration options. As another example the API may include commands for enabling the powering down rebooting or synchronizing of appliances . Under this scenario the administrative functions may be activated to remedy a performance or operational malfunction accommodate expansion or contraction of the network of appliances or the like. For the above described approach all communications between the calling service e.g. the authentication service administration service or initiation gateway and the appliance may be carried over a secure encrypted channel such as that provided by a TLS session.

As noted the API may also be called upon by the authentication service . Under this scenario when a user enters a one time password at the user interface of the authentication service the service calls upon the API to submit a request to an appliance for performing one time password validation. By way of example the API submits a signal to the appliance via a controlled communication channel. In response the appliance verifies e.g. YES or NO whether a specific OTP value for a specific user identity is valid for the requesting user at the time at which the API function is called. This includes determining whether the OTP corresponds to a user profile and especially a secret key and hash algorithm pair for the user. In addition the determination includes validating whether the current timing information is within the allowed period of time for performance of the authentication i.e. a number of discrete clock times centered about the authentication service clock time are attempted to be matched. Hence it is noted the validation result is based on multiple variables factors being determined valid concurrently namely clock time and user identity. This time limited authentication approach serves to prevent replay attacks. Furthermore as mentioned previously the basic OTP authentication technique can be combined with additional authentication factors including user entry of a personal identifier at the user interface of the authentication service or through the providing of biometric data related to the user.

In one embodiment the appliances generate secret key values with which the user soft tokens are armed during the initialization phase discussed above based on a true or hardware based random number generator. The random number generator not shown may be implemented as an executable component of each of the appliances which is called upon by an appliance per the initialization procedure. The hardware based generator true generator is employed by the appliances as opposed to a software based pseudo random number generator PRG which may be susceptible to guessing or partial derivation of the generation algorithm by an insider. As mentioned previously if an attacker is aware of the PRG algorithm employed for generating secret keys and was able to steal the key used by a company or security provider to seed the PRG the attacker would gain knowledge of the set of secret keys. As such even if the attacker did not know the precise order in which the pseudo random generated secret keys were doled out to specific users the attacker would be able to realize an advantage beyond what would be statistically expected in a blind guessing attack. In the case of a hardware based scheme however random values used for generating secret keys can be generated based on random analog processes occurring in nature. This may include for example Johnson thermal noise shot noise junction noise or the like which may be generated by one or more processors.

By way of example one technique for random value generation is to amplify Johnson thermal noise in a resistor and capture analog signal values with some form of sample and hold technique. Another option may be to capture the signal output of unstable inverter circuits wherein the output serves as the generated secret key. It is noted the appliances may employ numerous different random value generation and cryptographic approaches all of which provide a level of unpredictability randomness in generation of secret keys. Of note the random values obtained through random analog processes occurring in nature as mentioned above could be further conditioned e.g. to remove bias by passing the random values through well known software Key Derivation Function KDF . Secret key values as generated are shared between the appliances periodically for synchronization purposes and with the user device one time for initialization purposes.

In certain embodiments new appliances are added to the network of existing appliances via a bootstrapping procedure. Under this scenario the operations staff associated with the resource to be authenticated or the appliances only know the MAC address of the appliance hardware a priori. By way of example the new appliance is first assigned an internet protocol IP address. This is accomplished by temporarily connecting a configuration device such as a bootstrapping computer not shown to the appliance via an Ethernet cable or other connection means. The bootstrapping computer executes an installation utility program that communicates directly with the appliance at the data link layer via the appliance s Media Access Control MAC address. By way of example the communication can be carried out between the bootstrapping computer and the new appliance via point to point protocol Ethernet PPP . The utility program also allows administration credentials to be established for the new appliance as required for enabling the above described administration functions via the remote API

After initializing the appliance s IP address various known procedures can be employed to register the host in the domain name server DNS of the provider owner of the resource. During the bootstrapping process the appliance also generates a certificate signing request CSR file which is transmitted to the calling utility program for creation of an X.509 certificate by a third party certification authority CA . Once created the certificate may then be uploaded to the new appliance via the utility program thus readying the appliance for validation and or recognition by the other appliances and for secure TLS communication to be established. It is noted that the certification serves as a precursor to enabling secure communication between the newly added device and the existing network. This tightly controlled bootstrapping process also allows a new validation appliance to be made operational in the corporate or provider network environment without customary administrator login at the operating system level.

The existing appliances are informed of the addition of a new appliance peer by way of a notification message being sent to the existing devices. In certain embodiments the notification is invoked through execution of the API of the administration service wherein the API invokes a remote appliance joining function. In response the existing appliances and the new appliance instance establish a secure TLS communication and through a challenge response handshaking procedure confirm the new appliance is a valid addition to the network. This challenge response validation prevents a process or device other than a genuine validation appliance from acting as an imposter and spoofing the appliances into sharing secret key values with the imposter. As such this validation enables the store of shared user profiles to be replicated from the existing appliances to the new appliance accordingly. It is noted the above described configuration procedure is executed without an ordinary operating system level administrative login action.

In certain embodiments the appliances further interact with the administration service to prevent the theft of a user s soft token application by way of various approaches. For example in addition to entry of a PIN as mentioned previously an alternative PIN approach is to require the user to enter their PIN into the user interface of authentication service along with the OTP read off of the soft token display. As another example the application may time out after a predetermined period of inactivity of the application or the user device thus providing an additional means of thwarting unwarranted access. As another example the administration service may provide a secure web interface including the requirement of the user to enter a credential for enabling the user to perform the initial download of the application to their device . Still further the administration service may employ a single sign on SSO access scheme for enabling application access.

In either case the administration service may facilitate communication with a requesting user device via a transient connection thus minimizing the likelihood of interception of the application . The transient connection and sign in procedure introduces an additional layer of security for facilitating the deployment transmittal of the software in its physical or digital form.

In certain embodiments a security scheme may be employed to mitigate unwarranted access to a soft token device or application code intercepted by an adversary while in transit e.g. via mail to a legitimate user. Under this scenario a third party activation scheme may be employed wherein a first user e.g. manager or supervisor of an enterprise that owns the resource to be accessed initiates provisioning of the soft token application on behalf of a second user e.g. employee of the enterprise . The administration service provides the first user with a one use password then stores that one use password in the user profile within the appliances corresponding to the second user. The first user can then relay the one use password to the second user via an out of band communication mechanism e.g. a phone call. When the second user e.g. employee first launches their soft token application it requests entry of the one use password. Once provided the one use password entered by the user is processed to determine if it matches the originally generated one use password that was stored in the given user s profile in relation to the first user. When a match is determined and the secret key is transferred from the appliance to the application per the aforementioned initialization procedure the application becomes activated.

Based on the above described approach an attacker that intercepts the physical medium containing the application will not possess the one time use password. Consequently the attacker would not be able to activate the application even though they may physically possess it. Also various other highjack prevention theft prevention and secure soft token application delivery approaches may be employed accordingly.

It is noted that user devices may be any type of mobile terminal fixed terminal or portable terminal including a mobile handset station unit device multimedia computer multimedia tablet Internet node communicator desktop computer laptop computer Personal Digital Assistants PDAs smartphone or any combination thereof. It is also contemplated that the user devices can support any type of interface for supporting the presentment or exchanging of data. In addition user devices may facilitate various input means for receiving and generating information including touch screen capability keyboard and keypad data entry voice based input mechanisms and the like. Any known and future implementations of user devices are applicable.

In certain embodiments user devices the appliances and other elements of system may be configured to communicate via a service provider network . According to certain embodiments one or more networks such as data network telephony network and or wireless network can interact with the service provider network . Networks may be any suitable wireline and or wireless network and be managed by one or more service providers. For example telephony network may include a circuit switched network such as the public switched telephone network PSTN an integrated services digital network ISDN a private branch exchange PBX or other like network.

Networks may employ various technologies for enabling wireless communication including for example code division multiple access CDMA long term evolution LTE enhanced data rates for global evolution EDGE general packet radio service GPRS mobile ad hoc network MANET global system for mobile communications GSM Internet protocol multimedia subsystem IMS universal mobile telecommunications system UMTS etc. as well as any other suitable wireless medium e.g. microwave access WiMAX wireless fidelity WiFi satellite and the like. Meanwhile data network may be any local area network LAN metropolitan area network MAN wide area network WAN the Internet or any other suitable packet switched network such as a commercially owned proprietary packet switched network such as a proprietary cable or fiber optic network.

Still further the communication provider network may embody circuit switched and or packet switched networks that include facilities to provide for transport of circuit switched and or packet based communications. It is further contemplated that networks may include components and facilities to provide for signaling and or bearer communications between the various components or facilities of system . In this manner the communication network may embody or include portions of a signaling system 7 SS7 network Internet protocol multimedia subsystem IMS or other suitable infrastructure to support control and signaling functions.

It is noted though not shown in the figure that in certain embodiments user devices may be configured to establish peer to peer communication sessions with each other using a variety of technologies including near field communication NFC Bluetooth ZigBee infrared etc. Also connectivity can be provided via a wireless local area network LAN . By way of example a group of user devices may be configured to a common LAN so that each device can be uniquely identified via any suitable network addressing scheme. For example the LAN may utilize the dynamic host configuration protocol DHCP to dynamically assign private DHCP internet protocol IP addresses to each user device i.e. IP addresses that are accessible to devices connected to the service provider network as facilitated via a router.

In addition the appliance also maintains a data store for maintaining the inventory of user profiles required to perform validation of an OTP entered via the authentication service . Each secret key may also specify or be associated with a cryptographically secure hash function and user identifier such as in connection with a user profile.

In one embodiment the request handler interprets application programming interface API requests as received from the authentication service and the administration service . The requests are generated by the API and via a calling service for specifying calls for execution of specific functions of the appliance . Hence the functions include those to be performed by the various other components of the appliances . By way of example the requests are received by the communication interface which serves as a single point of access constrained access to the appliance for enabling administrative or authentication actions.

When a request call is received via the communication interface it passes the request to the request handler . The request handler then interprets the request type and initiates execution of the administration module . The administration module in certain embodiments processes the input variables specified per an administration request and subsequently executes a command function or protocol based on the input. By way of example a request to power down the appliance as interpreted by the request handler may be correlated with a void powerDown appliance command function of the administration module . As another example a command function of void restart of the administration module may be correlated by the request handler with a request to restart the appliance . As another example the command function boolean wipeClean may be correlated with a request to clear all data stored by an appliance and set the appliance s state to essentially what it was when first received from the vendor before being made operational. It is noted the above described requests are initiated from a user interface rendered by the administration service .

Requests for specifying authentication related command functions may also be interpreted by the request handler . For example when a user enters a one time password at the authentication service as specified via a soft token application the request handler correlates this with a validation request. In response the request handler forwards the password entry to the validator which in turn validates the one time password along with other variables. By way of example the validation request may correlate to a boolean isOnetimePasswordValidForUser String userId String tokenValue command function executed by the validator wherein the tokenValue string input corresponds to a value of the OTP. Under this scenario the validator determines whether the OTP and user identifier submitted as string inputs per the validation request match the secret key. The matching is performed based on a cross referencing of an expected OTP value from the given user identifier against a corresponding user profile data record.

Still further the validator performs a check to determine if the OTP is still active for the limited authentication time period. This check is performed based on timestamp information associated with the request a time period for enabling authentication and time of use information associated with the OTP. In addition to limiting the period of usefulness of a generated OTP the authentication time period also enables a window or grace period for instances where the clocks of the requesting device s and appliances are not precisely synchronized.

It is noted the validator determines the validity of multiple variables factors concurrently. In certain implementations the validator may be an executable component resident at an appliance i.e. as a set of appliance instances running in one or more of the resource provider owner s data centers. Alternatively the validator may be resident in appliances that are hosted in a security service provider s cloud environment and accessed from the customer s authentication systems as a remotely called service to the cloud. Under this scenario a cloud based solution for performing the validation at the location of the provider owner of the resource to be authenticated is called. The latter approach may be useful in cases where the provider owner already runs other systems such as the authentication service or administration service as hosted solutions.

In one embodiment the configuration module facilitates the bootstrapping of appliances . The bootstrapping procedure pertains to the adding and activating of new appliances to an existing network of appliances for enabling secret key generation and sharing accordingly. By way of example the configuration module operates in connection with the communication interface to detect the attaching of a bootstrapping computer to the appliance . The connection may be detected by way of a port of the appliance for supporting an Ethernet cable connection or other means. As such the bootstrapping computer may execute an installation utility program that communicates directly with the appliance at the data link layer via the Ethernet connection. Per interaction of the configuration module with the utility program an IP address may be set for the appliance along with establishing an entry for a domain name server of the provider owner of the resource to be authenticated.

The configuration module also enables a provider owner of the appliance to establish administrative credentials for the appliance . This may include for example activating the appliance such that it may interact interface with an administration service . In addition during the bootstrapping procedure the configuration module generates a certificate signing request CSR file and sends this to the utility program at the bootstrapping computer. Under this scenario the administrator e.g. associated with the provider owner of the resource can request an X.509 certificate from a certification authority then upload the generated certificate to the appliance via the bootstrapping computer.

The configuration module also informs the existing appliances that a new appliance device has been configured. This may include for example directing a notification message or user interface signal to the various other appliances via the user interface module . By way of example the configuration module may call upon the user interface module to render a web based configuration interface to the existing appliances . Alternatively the notification may be invoked remotely via the administration service or programmatically by invoking the API call e.g. boolean newPeerJoining String dnsName String ipAddress . In this example function the DNS entry and IP address are provided as inputs variables for invocation of the command.

Once this call is made the existing appliances and new appliance establish a secure communication channel via transport layer security TLS . The configuration module then facilitates a challenge response handshaking procedure to confirm the new appliance is a valid addition to the existing network of appliances. By way of example the handshaking procedure may include use of a challenge response protocol. The configuration module then initiates replication of the store of user profiles at the existing appliance to the new appliance . Of note the configuration module may also facilitate the removal of appliances from the existing network mesh of appliances when necessary including decoupling of the IP address removal of the DNS entry erasure wiping of the store of secret keys etc.

In certain embodiments the enroller facilitates installation and activation of soft token applications at a user device . This execution is performed in conjunction with the administration module and initiation gateway . By way of example the enroller facilitates deployment of the soft token application such as by way of push technology. Also the enroller maintains a record of the serial number encoded within the soft token application as well as engages the initiation gateway to facilitate initial arming activation of the soft token application upon request. Under this scenario the enroller facilitates a handshaking procedure between the soft token application and an appliance to provide the secret key for arming of the application. This may include cross referencing of a provided user identifier and serial number of the soft token application against user profile data records for identifying a corresponding secret key and or hash algorithm to provide to the soft token application . Once identified the enroller submits the secret key to the soft token application via the initiation gateway .

In certain embodiments the serial number is a unique long random appearing number as generated via execution of the generator . The generator is configured to generate user profiles including a secret key according to a hardware based random value generation scheme. In addition the generator may further employ various output conditioning techniques for generating the inventory of secret keys . Operating in connection with the generator is the user profile sharing engine which is triggered to enable the user profile and secret keys contained therein to be exchanged with the other appliances comprising the network i.e. those that are not involved in the initialization procedure.

As this data is exchanged the enroller also records an identifier associated with the user user identifier the assigned serial number of the soft token application as well as the secret key. This corresponds to an updating of the user profile data records across all appliances . By way of this approach the enroller is able to maintain accurate details regarding the various user devices equipped to generate authentic OTPs based via the user profile sharing engine . It is noted that the enroller may facilitate updating of the user profile after successful completion of the handshaking procedure with the soft token application for confirming its activation.

In one embodiment the user interface module enables presentment of a graphical user interface in response to application programming interfaces APIs corresponding to the various modules of the appliance . As such the user interface module permits rendering of various graphics primitives and media elements to a display in connection with a given command. In addition the user interface module may generate an administration interface for displaying the various administrative functions of the administration module . In certain embodiments the administration interface may be activated directly by the user interface module in lieu of the administration service or may operate in tandem with the administration service for affecting appliance operation.

In one embodiment a communication interface enables formation of a session over a network between an appliance and the administration service or the authentication service . Also the communication interface may facilitate a limited one time communication with a soft token application via the initiation gateway during the initialization phase of the soft token application . The session may be generated in connection with a user profile sharing engine such as to enable the transmission of user profiles amongst appliances. Alternatively the session may be initiated by the enroller . By way of example the communication interface executes various protocols and data sharing techniques including virtual private networking secure peer to peer communication and the like. It is noted that the communication interface supports only a limited set of communications as exposed via select API functions. Hence the communication interface may further interact with the request handler for receiving API requests accordingly.

In step the dedicated validation appliance receives via an application programming interface a one time password authentication request. The application programming interface API is a single point of access to the dedicated validation appliance for maintaining one or more secret keys. As noted previously the secret keys may be associated with user profile data for specifying a corresponding user identifier and or hash algorithm to which the secret key is associated. It is noted also that the user profile may specify a serial number that is associated with a soft token application resident at a client device of the user corresponding to the user identifier.

In step the dedicated validation appliance receives per the request a one time password and an identifier of a user for which the one time password is exclusively generated for a limited period of time for completion of the authentication procedure. Per step the dedicated validation appliance determines a validity of the request based on a correlation between the identifier of the user and the one time password with at least one of the one or more secret keys within the limited period of time. As noted previously the limited period of time corresponds to a limited duration window of opportunity for the user to perform authentication of a resource.

In step the dedicated validation appliance authenticates the user based on the determined validity of the request. As mentioned the authentication may be facilitated by way of an authentication service which is configured to receive user provided input for initiation of an authentication request. By way of example the authentication service may present the user with an interface for enabling entry of the one time password. The user may also provide their user identifier as input to the interface for correlating their limited time of use password with their user identifier. The time of use may be a time period before generation of an updated one time password but before expiration of the limited time period for completion of the authentication procedure. Of note the embodiments described herein may be performed in connection with any known or developing authentication services and techniques accordingly.

In step of process the dedicated validation appliance generates a secret key. The secret key is generated based on a hardware random number generation scheme. By way of this approach the secret key is as random and unpredictable as naturally occurring phenomenon. Also while the identifier may be a user identifier in certain embodiments it may also be a device identifier customer identifier or service identifier associated with the user.

In step the dedicated validation appliance replicates the secret key as generated at another dedicated validation appliance associated with the dedicated validation appliance. Under this approach each appliance is synchronized for maintaining the inventory of secret keys. The synchronization also includes replication of the associated hash algorithms and user identifier values associated with the inventory of secret keys e.g. full user profile synchronization . As noted previously the dedicated validation appliance and the other dedicated validation appliance communicate with each other via a secure peer to peer communication channel.

Per step the dedicated validation appliance receives a request to activate a soft token application of a client device associated with a user. As noted previously the activation corresponds to a one time initialization procedure between the requesting soft token application and an appliance. In another step the dedicated validation appliance transmits a secret key associated with a user identifier of the user or a one time password generation algorithm to the soft token application. The secret key and or the one time password generation algorithm e.g. hash algorithm are used to generate a one time password to be presented via the soft token application in association with a time of use of the one time password.

In step of process the dedicated validation appliance determines the activation of a new dedicated validation appliance at a network location of a provider of the one time password authentication service or the dedicated validation appliance. As noted previously activation of a new validation appliance in the operational network environment may proceed in two main stages. The first stage corresponds to a direct Ethernet connection to a bootstrapping computer communicating with the appliance at the data link layer via the appliances MAC address wherein the appliance is assigned an IP address and additionally initialized with a DNS name and an X.509. By way of this configuration activation means the appliance is enabled to be active on the enterprise or provider network. The second stage corresponds to a secure exchange between an existing appliance if any and the new appliance once the new appliance is operational on the network. Per this approach a handshaking procedure or challenge response protocol is employed such that the new appliance can validate it is a legitimate validation appliance and not an imposter.

Once this challenge response verification completes the existing appliance can then share its inventory of user profiles with the new appliance whereupon the new appliance becomes a fully functioning member of the mesh of peer validation appliances. Per step the dedicated validation appliance receives notification of the activation based on interaction with the new dedicated validation appliance from the network location.

It is noted that the dedicated validation appliances are distributed throughout an area defined by a provider of the authentication service and or throughout a network of the provider of the one or more dedicated validation appliances. As a security measure each of the appliances are maintained in a secured container or secured room. By way of this approach as well as the limited means of interaction with the appliances the inventory of user profiles are not able to be breached even by attackers directly employed by and or associated with the provider owner of the resource requiring authentication.

Also as noted previously the dedicated validation appliances feature no logins for access by internal and or external users. Hence with no ordinary logins to an appliance even an administrator or super user associated with the provider owner of the resource cannot gain entry to the appliance for accessing the inventory of user profiles and the secret keys contained therein. Still further the appliances are configured to adhere to a strict limited vocabulary of interactions with only the administration service the authentication service the initiation gateway the soft token applications one time or each other through API calls.

In the administration interface is accessed by way of a browser application. The browser accepts as input a pointer or uniform resource locator for accessing the administration interface via a network. In this example the location corresponds to a secure internal network location of the enterprise corresponding to the location of the administration service . It is noted however that the administration interface may be generated directly by an appliance i.e. via a web server configured to the appliance.

The administration interface presents various action buttons for invoking an administrative feature of the one or more appliances. Each action button corresponds to an API call that is transmitted to the appliance i.e. via a web services interface. In addition to the action buttons the interface also presents a listing and a count of the appliances actively deployed by the enterprise within the facility. By way of example a user e.g. administrator of the enterprise may highlight select one or more of the appliances within the list to specify which appliances are to be affected through selection of one or more of the action buttons . Hence under this scenario when Appliance 2 at the IP address location of 134.54.613 is highlighted within the list e.g. as list entry only this appliance is affected by the corresponding administrative functions.

By way of example when the administrator selects the POWER DOWN action button an API call is submitted to the selected appliance to cause it to power down. As another example when the administrator selects the WIPE action button an API call is submitted to cause the inventory of user profiles maintained by the selected appliance to be wiped deleted. The appliance can then be resynchronized with the other appliances accordingly. As yet another example selection of the RESTART action button causes an API call to be submitted to the selected appliance for shutting it down and restarting it e.g. reboot .

When the administrator selects the DROP APPLIANCE action button an API call is submitted to disconnect the selected appliance from the existing network of appliances on the list . This may include for example removing the allocated network location of the appliance as well as removal of the appliance from the listing e.g. removal from a domain name system DNS . Upon removal the other appliances are also notified of the removal of the selected appliance.

When the NEW APPLIANCE NOTIFY action button is selected this activates an API call for notifying the other appliances of an addition to the network. This action button may be selected following the bootstrapping procedure of the selected appliance. By way of example when a new appliance labeled Appliance 12 not shown is added and present on the list the administrator selects this button to notify the other appliances. The appliances may then engage in a handshaking procedure with the new appliance as well as a user profile e.g. secret key sharing replication procedure accordingly.

The interface also presents EXIT and CLIENT LIST action buttons and respectively. By way of example selection of the EXIT action button enables the administrator to exit the administration interface . Selection of the CLIENT LIST action buttons causes a list of current users and or client devices to be presented not shown in . The list may include any devices and associated users that enrolled with the appliances of the enterprise via an initialization procedure. This includes those devices that have installed and activated a soft token application for generating OTP values to be used in connection with a one time password authentication procedure.

It is noted that the administration interface is limited to only the specific set of functions as shown via the interface . As such interaction between the administration service a client device of a user the soft token application and the appliances are limited to only the API calls provided. Such confined access to the functions of the appliance as well as to the store of user profiles and the secret keys contained therein minimizes susceptibility of the appliances to attack.

By way of the procedure the various administration functions described above with respect to are activated for the new appliance . In addition the new appliance is able to interact with the other appliances to share user profiles and hence secret keys. It should be noted that once the bootstrapping process is completed and the appliance knows its IP address and DNS name and the X.509 certificate is installed the bootstrapping computer can be disconnected from the appliance and the appliance can be connected to the data center network. At this point the appliance s ability to communicate via TCP IP is now activated.

In the soft token application is presented to the display of the mobile device of the employee. Under this scenario the soft token application has already been activated at the mobile device per an initialization procedure. As such the soft token application presents a password data field for specifying an OTP to be used for performing an authentication procedure in connection with the proprietary database. This data field is generated by the soft token application of the device based on processing of a secret key via a hash algorithm or other OTP generation scheme. The generation of the one time password values happens autonomously via the client soft token application without any network communication being required between the soft token application and the appliance instances. The one time passwords are generated algorithmically on the user device by passing the shared secret key and user device clock time to the hash function.

Also presented in connection with the password data field is time of use data . The time of use data is presented as a countdown timer for indicating the amount of time remaining before the password changes. Of note when the time of use expires a new different password is generated and subsequently presented. The periodicity of generation of a new OTP may be established by the authentication service . It is noted that any means of representing the time of use may be implemented.

Once the one time password is acquired i.e. it has been generated and displayed and the user has entered it into an independent authentication interface the user may exit the soft token application by selecting the EXIT action button . Alternatively the soft token application may feature an AUTHENTICATE action button for launching an authentication service of the enterprise. By way of example the launch may include invocation of a browser application of the device with a corresponding web address URL for accessing an interface of the authentication service. The authentication interface is depicted by way of example in .

In a password entry data field is presented as well as a user identifier entry data field . The employee enters the password as acquired via the soft token application . In addition the employee enters their user identifier i.e. an employee identifier alias network handle etc. To exit the browser application and thus end the authentication procedure the employee can select the EXIT action button . To initiate the authentication procedure however the employee selects the GO action button . It is noted that selection of the GO action button initiates an API call for execution of the OTP value validation procedure by an appliance. The appliance performs authentication based upon validation of a whether or not the OTP matches a candidate OTP value independently generated by the appliance b whether or not the user identifier matches a user profile record and c whether or not the OTP value is still active for the limited authentication time period. This combination of factors enhance the reliability and security of the OTP authentication procedure.

Once the password user identifier and time variables are validated by the appliance the authentication procedure is complete. In response the authentication service renders an authentication confirmation message to the display of the device as depicted in . Resultantly the resource subject to the authentication procedure may also be loaded and or retrieved as a result of successful authentication.

The exemplary techniques and systems presented herein enables a highly secure authentication framework to be employed in connection with one or more resources. As a first advantage the authentication system is not susceptible to external or internal attack due to highly constrained physical and network access to a group of dedicated validation appliances. As another advantage the core secret key generation algorithm can be made immune from guessing attacks by using a large secret key size and by employing sophisticated cryptographically secure hash algorithms that produce unpredictable sequences of generated OTP values. As yet another advantage the inventory of secret keys and serial numbers of client soft token instances are generated and maintained only by the dedicated validation appliances which synchronize their inventories only amongst themselves over secure encrypted communication channels.

The processes described herein for facilitating a one time password OTP authentication procedure may be implemented via software hardware e.g. general processor Digital Signal Processing DSP chip an Application Specific Integrated Circuit ASIC Field Programmable Gate Arrays FPGAs etc. firmware or a combination thereof. Such exemplary hardware for performing the described functions is detailed below.

The computer system may be coupled via the bus to a display such as a cathode ray tube CRT liquid crystal display active matrix display or plasma display for displaying information to a computer user. An input device such as a keyboard including alphanumeric and other keys is coupled to the bus for communicating information and command selections to the processor . Another type of user input device is a cursor control such as a mouse a trackball or cursor direction keys for communicating direction information and command selections to the processor and for adjusting cursor movement on the display .

According to an embodiment of the invention the processes described herein are performed by the computer system in response to the processor executing an arrangement of instructions contained in main memory . Such instructions can be read into main memory from another computer readable medium such as the storage device . Execution of the arrangement of instructions contained in main memory causes the processor to perform the process steps described herein. One or more processors in a multiprocessing arrangement may also be employed to execute the instructions contained in main memory . In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the embodiment of the invention. Thus embodiments of the invention are not limited to any specific combination of hardware circuitry and software.

The computer system also includes a communication interface coupled to bus . The communication interface provides a two way data communication coupling to a network link connected to a local network . For example the communication interface may be a digital subscriber line DSL card or modem an integrated services digital network ISDN card a cable modem a telephone modem or any other communication interface to provide a data communication connection to a corresponding type of communication line. As another example communication interface may be a local area network LAN card e.g. for Ethernet or an Asynchronous Transfer Mode ATM network to provide a data communication connection to a compatible LAN. Wireless links can also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information. Further the communication interface can include peripheral interface devices such as a Universal Serial Bus USB interface a PCMCIA Personal Computer Memory Card International Association interface etc. Although a single communication interface is depicted in multiple communication interfaces can also be employed.

The network link typically provides data communication through one or more networks to other data devices. For example the network link may provide a connection through local network to a host computer which has connectivity to a network e.g. a wide area network WAN or the global packet data communication network now commonly referred to as the Internet or to data equipment operated by a service provider. The local network and the network both use electrical electromagnetic or optical signals to convey information and instructions. The signals through the various networks and the signals on the network link and through the communication interface which communicate digital data with the computer system are exemplary forms of carrier waves bearing the information and instructions.

The computer system can send messages and receive data including program code through the network s the network link and the communication interface . In the Internet example a server not shown might transmit requested code belonging to an application program for implementing an embodiment of the invention through the network the local network and the communication interface . The processor may execute the transmitted code while being received and or store the code in the storage device or other non volatile storage for later execution. In this manner the computer system may obtain application code in the form of a carrier wave.

The term computer readable medium as used herein refers to any medium that participates in providing instructions to the processor for execution. Such a medium may take many forms including but not limited to computer readable storage medium or non transitory i.e. non volatile media and volatile media and transmission media. Non volatile media include for example optical or magnetic disks such as the storage device . Volatile media include dynamic memory such as main memory . Transmission media include coaxial cables copper wire and fiber optics including the wires that comprise the bus . Transmission media can also take the form of acoustic optical or electromagnetic waves such as those generated during radio frequency RF and infrared IR data communications. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM CDRW DVD any other optical medium punch cards paper tape optical mark sheets any other physical medium with patterns of holes or other optically recognizable indicia a RAM a PROM and EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave or any other medium from which a computer can read.

Various forms of computer readable media may be involved in providing instructions to a processor for execution. For example the instructions for carrying out at least part of the embodiments of the invention may initially be borne on a magnetic disk of a remote computer. In such a scenario the remote computer loads the instructions into main memory and sends the instructions over a telephone line using a modem. A modem of a local computer system receives the data on the telephone line and uses an infrared transmitter to convert the data to an infrared signal and transmit the infrared signal to a portable computing device such as a personal digital assistant PDA or a laptop. An infrared detector on the portable computing device receives the information and instructions borne by the infrared signal and places the data on a bus. The bus conveys the data to main memory from which a processor retrieves and executes the instructions. The instructions received by main memory can optionally be stored on storage device either before or after execution by processor.

In one embodiment the chip set or chip includes a communication mechanism such as a bus for passing information among the components of the chip set . A processor has connectivity to the bus to execute instructions and process information stored in for example a memory . The processor may include one or more processing cores with each core configured to perform independently. A multi core processor enables multiprocessing within a single physical package. Examples of a multi core processor include two four eight or greater numbers of processing cores. Alternatively or in addition the processor may include one or more microprocessors configured in tandem via the bus to enable independent execution of instructions pipelining and multithreading. The processor may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors DSP or one or more application specific integrated circuits ASIC . A DSP typically is configured to process real world signals e.g. sound in real time independently of the processor . Similarly an ASIC can be configured to performed specialized functions not easily performed by a more general purpose processor. Other specialized components to aid in performing the inventive functions described herein may include one or more field programmable gate arrays FPGA not shown one or more controllers not shown or one or more other special purpose computer chips.

In one embodiment the chip set or chip includes merely one or more processors and some software and or firmware supporting and or relating to and or for the one or more processors.

The processor and accompanying components have connectivity to the memory via the bus . The memory includes both dynamic memory e.g. RAM magnetic disk writable optical disk etc. and static memory e.g. ROM CD ROM etc. for storing executable instructions that when executed perform the inventive steps described herein to facilitate a one time password OTP authentication procedure. The memory also stores the data associated with or generated by the execution of the inventive steps.

While certain exemplary embodiments and implementations have been described herein other embodiments and modifications will be apparent from this description. Accordingly the invention is not limited to such embodiments but rather to the broader scope of the presented claims and various obvious modifications and equivalent arrangements.

