---

title: Bit rate stream switching
abstract: Embodiments for changing bit rates in streaming media are provided. As portions of a streaming media file are downloaded for playback, the size of the portion is compared with an expected size determined prior to initiating playback of streaming AV data. The portion of the media file may be padded such that the size of the portion matches the size specified prior to initiating playback of streaming AV data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09319696&OS=09319696&RS=09319696
owner: Netflix, Inc.
number: 09319696
owner_city: Los Gatos
owner_country: US
publication_date: 20120705
---
This application is a continuation of co pending U.S. patent application Ser. No. 12 642 529 filed Dec. 18 2009 which itself claims priority to i provisional patent application titled Seamless Bit Rate Stream Switching filed on Dec. 22 2008 having Ser. No. 61 140 032 and ii provisional patent application titled Seamless Bit Rate Stream Switching filed on Mar. 27 2009 having Ser. No. 61 164 327. Each of these related applications is incorporated by reference in its entirety.

Embodiments of the present invention generally relate to playing streaming digital media such as digital video or digital audio. More specifically embodiments of the present invention relate to bit rate stream switching on networked client devices.

Digital content distribution systems typically include a content server a content player and a communications network connecting the content server to the content player. The content server is configured to store digital content files available for download from the content server to the content player. The digital content files correspond to e.g. movies televisions shows sporting events music productions etc. The digital content file typically provides sequential content data organized according to playback chronology including audio data and or video data.

The content player e.g. a Blu ray disc player is configured to download and play a digital content file in response to a user request. The process of playing the digital content file includes decoding and rendering audio and video data to generate audio and video signals sent to audio speakers and a display screen. Playback typically involves a technique known as streaming where the content server transmits digital content to the content player which plays the digital content file while content data is being received. To account for variable latency and bandwidth within the communications network a content buffer queues the incoming content data ahead of the content data actually being played. During moments of network congestion which leads to lower available bandwidth less content data is added to the content buffer which may drain down as content data is being de queued to support playback at a certain playback bit rate. However during moments of high network bandwidth the content buffer is replenished and additional buffer time is added until the content buffer is generally full again. In practical systems the content buffer may queue content data corresponding to a time span ranging from seconds to more than a minute.

Streaming digitally encoded audiovisual AV programs over the Internet including feature length films and television programs has become increasingly popular as the availability of high bandwidth Internet communication has increased. AV programs are digitally encoded using a compression algorithm executed by a coder decoder unit or codec. The visual and auditory quality of a program when played by the content player depends significantly on the bit rate at which the program is encoded by a codec. In digital audio and video applications bit rate refers to the number of data bits used per unit of playback time to represent audio and video. In general the higher the bit rate the higher the visual and auditory quality of a program and the longer it takes to download a portion of the program over a data network at a fixed bandwidth or transmission rate. In practice each digital content file stored on the content server may be encoded using a variety of different bit rates. That is the content server may encode the same media title using a variety of bit rates and encoding schemes . Prior to initiating playback the content player may measure available bandwidth from the content server and select a digital content file having a bit rate that can be supported by the measured available bandwidth. To maximize playback quality the content player may select to stream the digital content file with the highest bit rate that does not exceed the measured bandwidth.

One embodiment of the present invention includes a method for seamlessly switching a bit rate at which audiovisual data is streamed over a data communications network from a media delivery system to a client device. The method may generally include prior to initiating playback of the audiovisual data configuring a decoder on the client device to decode and playback a plurality of portions of the audiovisual data. Each portion of audiovisual data may be specified as having a size corresponding to an encoding of the portion at a first bit rate. The method may further include receiving over the data communications network a first portion of the audiovisual data. The first portion of audiovisual data may be encoded at a second bit rate different from first bit rate specified for the first portion. The method may further include padding the first portion of the audiovisual data such that the size of the first portion of the audiovisual data matches the specified size corresponding to the encoding of the portion of the audiovisual data encoded at the first bit rate.

In particular embodiments configuring the decoder may include receiving a plurality of file headers each associated with one of the encodings of the audiovisual data. For example a file header associated with the encodings of the audiovisual data at the first and second bit rates may be received. Each file header may specify a size for each portion of audiovisual data present in the corresponding encoding. Configuring the decoder may also include generating from the plurality of file headers a playlist information file describing one or more clip information files. In turn each clip information file may describe one of the portions of audiovisual data to be streamed from the media delivery system. For example each clip information file may store an indication of the largest encoded size for each sequential portions of the audiovisual data as specified by the plurality header files. Additionally each clip information file may indicate a sequence of one or more groups of pictures GOPs in the portion of the audiovisual data corresponding to a respective clip information file. Further the step of padding the first portion of the audiovisual data may include padding at least one GOP in the portion of the audiovisual data such that the size of each GOP matches the size specified in the respective clip information file.

Other embodiments include without limitation a computer readable medium that includes instructions that enable a processing unit to implement one or more aspects of the disclosed methods as well as a system configured to implement one or more aspects of the disclosed methods.

Embodiments of the invention provide an improved playback experience for media content streamed over a communications network to a networked client device such as a set top box PC mobile telephone video gaming platform or Blu ray Disc Player. More specifically embodiments of the invention provide for adjusting streaming media bit rates during playback of an AV program without disrupting the streaming of the AV program to the user. During playback of AV programs downloaded over a data network bandwidth may periodically change. Thus it becomes desirable to seamlessly switch between audio and video streams of varying bit rates e.g. to reduce the streaming bit rate when prevailing network bandwidth deteriorates. Seamless bit rate stream switching during playback balances a viewer s desire for a high quality viewing experience and efficient use of the available network bandwidth of the network connection over which AV programs are downloaded. For example the first few seconds of a program sent over a network to a digital media player after the viewer initiates playback may be digitally encoded at a low bit rate so as to reduce the transmission time of program content over the network and hence minimize the delay between initiating playback and presenting content to the viewer. Thereafter as playback continues the bit rate of encoded content sent to the digital media player may be increased to take advantage of available network bandwidth and to present the highest quality audiovisual content to the viewer.

However certain prevalent techniques for switching bit rates in some digital media players are awkward and result in significant degradation in the viewer s viewing experience. For example the Blu ray Disc Association BDA an industry consortium responsible for establishing format standards for Blu ray disc technology has established standards known collectively as the Blu ray Disc Format Specifications that include the Blu ray Disc Read Only Memory ROM Format the Blu ray Disc recordable Format and the Blu ray Disc Rewritable Format. For ease of reference these specifications are referred to herein as a collection as the Blu ray specification. 

The Blu ray specification includes specifications for a Blu ray Disc Player BD Player to playback digitally encoded AV programs downloaded over a data network such as the Internet. According to the Blu ray specification portions of an AV program that are downloaded to a BD Player may be stored in a local storage of the BD Player as one or more AV stream files subsequently delivered to the decoder of the BD Player as a stream of AV data for playback. Effectively the downloaded AV program is presented to the decoder as a virtual Blu ray disc. However the Blu ray specification requires configuring the decoder of the BD Player with a size and a time length of all portions of an AV program contained in the AV stream files before playback of the AV program can begin. Thus switching bit rates during playback of an AV program requires that the decoder of the BD Player be reconfigured because the size or number of portions of the AV program changes when the bit rate is switched. Reconfiguring the decoder during playback is not an optimal solution for achieving bit rate switching because reconfiguring the decoder often noticeably disrupts an otherwise smooth presentation of audio and video. Other protocols for streaming AV content over data networks may have similar requirements for configuring size or length of portions of an AV program prior to content streaming and playback.

Note however although a particular embodiment of the invention is described using a BD Player which implements the Blu ray specifications as an example of a client device it should be understood that embodiments of the invention may be adapted to for a broad variety of streaming media protocols. Accordingly references to the Blu ray specifications or a BD Player are made as an illustrative example and not intended to be limiting of the present invention. Further in the following description numerous specific details are set forth to provide a more thorough understanding of the present invention. However it will be apparent to one of skill in the art that the present invention may be practiced without one or more of these specific details. In other instances well known features have not been described in order to avoid obscuring the present invention.

The playlist information file for an AV program such as playlist information file for AV program at 1000 kbps specifies a collection of playing intervals within one or more AV stream files. In an alternative embodiment rather than store the playlist information file on server the playlist information file may be generated by the BD player using information describing the encodings e.g. using a file header associated with each collection of AV stream files . A collection of playing intervals defined in a playlist information file when played back sequentially by a BD Player can be used to present for example a feature length file or television program to a viewer. In one embodiment a playing interval represents approximately 2 to 20 seconds of playback. Each playing interval is identified in the playlist information file with reference to an IN point and an OUT point position on a time axis of an AV stream file. The IN point indicates the starting point of a playing interval and the OUT point indicates the ending point of the playing interval. Each AV stream file referenced in a playlist information file together with its associated clip information file is considered by the Blu ray specification to be one data object referred to as a clip. Each AV stream file stores a transport stream contained in a data structure compliant with the Blu ray specification.

Each AV stream file has a corresponding clip information file that stores the byte location of the access points into the corresponding AV stream file that are referenced in the playlist information file. During playback of an AV program and in particular during playback of a portion of the AV program that corresponds to a playing interval defined in the playlist information file the BD Player reads the clip information file to find out the position where it should begin to read data from the AV stream file corresponding to the playing interval.

As shown BD Player includes playback logic and local storage . The Blu ray specification standard provides specifications for playback logic to download and write files to local storage including playlist information files clip information files and AV stream files. In effect the Blu ray specification standard allows playback logic to use local storage to create a virtual Blu ray Disc that includes AV program content downloaded from a server over a network. To create such a virtual Blu ray Disc using local storage playback logic must store playlist information files clip information files and AV stream files in accordance with the Blu ray specification.

In particular according to the Blu ray specification playback of an AV program e.g. AV program cannot start until the corresponding playlist information file e.g. playlist information file all corresponding clip information files e.g. clip information files and at least one AV stream file e.g. AV stream file are completely downloaded to local storage . Once these files are present in local storage playback logic can cause BD Player to begin playback of the AV program. After playback starts playback logic can continue to cause BD Player to download the remaining AV stream files e.g. AV stream flies . So long as the next AV stream file needed at BD Player is completely downloaded to local storage before the BD Player has finished playing the current AV stream file playback of an AV program will be presented to the viewer without any momentary stops or flickers or other playback events that cause a noticeable interruption of smooth audio and video playback.

However as discussed above it may be desirable to switch bit rates during playback of an AV program. For example if BD Player is connected to HTTP server through a typical home Digital Subscriber Line DSL or cable modem which can download data at approximately 1500 kbps concurrent usage of the home DSL or cable modem for example by another family member can cause BD Player to fall behind in downloading AV stream files from server . That is BD Player can no longer download AV stream files from server as fast as the rate at which the AV stream files are being streamed to the decoder of the BD Player. In such a case it would be useful to be able to seamlessly switch for example from playing AV stream files at 1500 kbps to playing AV stream files at 1000 kbps.

Unfortunately to switch bit rates according to the Blu ray specification the playlist information file all the clip information files and at least one AV stream file for the new bit rate must be completely downloaded to local storage before playback of the AV program at the new bit rate can begin. For example to switch from playback of AV program at 1500 kbps to playback of AV program at 1000 kbps playlist information file clip information files and at least one AV stream file must be completely downloaded to local storage before BD Player can switch to playback of AV program at 1000 kbps. If the streaming bit rate were switched during playback of AV program encoded at 1500 kbps visible interruptions may occur as switching to a different playlist information file is not seamless for media processed according to the Blu Ray specification. Instead switching to a different playlist information file results in a visible interruption in viewing a program that may last several seconds causing a poor user experience.

In one embodiment a BD Player may be configured with additional playback logic to allow for seamless bit rate switching during playback without requiring the BD Player to be reconfigured with changed size data and without causing a noticeable interruption of smooth audio and video playback. In particular as clip files are downloaded for playback the size of the clip file or the size of groups of pictures GOPs in the clip file is compared with a clip information file. The clip information file may be used to configure the BD Player prior to initiating playback of streaming AV data. The playback logic may pad the clip file or one or more GOPs in the clip file such that the size of the clip file matches the configured size specified in the clip information file.

Thus the decoder of a BD Player may be configured to process audiovisual data of an AV program at a first bit rate. And during playback of the AV program portions of the AV program encoded at a second bit rate may be downloaded to the BD Player from a server over a data network. The downloaded portions are stored in a memory of the BD Player as one or more AV stream files. Each stored AV stream file may include data downloaded from the server and additionally include padding data in an amount allowing the decoder to process the stored AV stream file at the first bit rate.

Storing AV stream files with an appropriate amount of padding data after downloading a portion of an AV program and before the portion is streamed to the decoder enables downloading portions of an AV program configured to be processed at varying bit rates to effectively utilize available network bandwidth and enables seamlessly switching the bit rate of the stream of AV data delivered to the decoder without causing a noticeable interruption of smooth audio and video playback. That is the padding techniques described herein may be applied in a BD Player to seamlessly achieve adaptive streaming. In particular a noticeable interruption of smooth audio and video playback caused by a temporary decrease in available network bandwidth may be avoided by detecting the temporary decrease in bandwidth at the BD Player and thereafter seamlessly switching to playback of content configured to be processed at a lower bit rate while the temporary decrease persists and seamlessly returning to playback of content configured to be processed at the original higher bit rate upon detecting that the temporary decrease has subsided.

Illustratively media delivery system includes a media library that comprises AV programs . The term audiovisual program or AV program as used herein refers broadly to any audio video or audiovisual information that can be delivered using a streaming media protocol over a data network. Examples of AV programs include music recordings of spoken words movies sports programs television series episodes documentary motion pictures instructional programs or any other form of program. AV program comprises a stored set of files that can be delivered on demand over a network connection to a computer such as BD Player . In a practical embodiment there may be thousands of AV programs stored in or managed by the media delivery system . AV programs may include multiple encodings of a given title where each encoding is made at a different bit rate. Further in one embodiment the AV programs may include separate audio and video streams for one or more titles. In such a case when a user requests a particular title the audio and video streams may be multiplexed together in order to be streamed to the user.

As shown media delivery system also includes media server coupled to the media library . Media server generally is configured to retrieve a selected or specified file or files that comprise an AV program from the media library in response to a request from BD Player and deliver the files using a streaming media protocol to the BD Player in response to the request. In one embodiment media server is configured to deliver files stored in media library using the HyperText Transfer Protocol HTTP and or HTTP over Secure Socket Layer HTTPS through data network to BD Player . However embodiments are not limited to any particular network protocol and any suitable network protocol may be used to deliver AV program content from media delivery system to BD Player.

Also as shown media selection service includes a presentation server one or more application servers and a database server . The media selection service may be integrated into or co located with the media delivery system as a single system and the media delivery system may be implemented as an application on the application servers or otherwise contained within the media selection service . In the media selection service the one or more application servers are coupled to the presentation server and database server .

The database server maintains a user account for a user of the service including a media queue . The user account is associated with a user at the ordering location and the viewing location . The database server is configured with an inventory of audiovisual programs that are available for delivery using the media delivery system . Application servers and database server is coupled through network to media server and other elements of media delivery system not shown to enable the media delivery system to determine which AV programs are in media queue for delivery to the viewing location . The presentation server is configured with programs for generating a user interface display receiving user input selecting audiovisual programs for rental or viewing and other functions.

The media queue may provide a list of AV programs that a particular user or user account has rented or requested to download or view. The queue may include a list of both tangible media for rental such as DVD titles and AV programs for instant watching i.e. streaming or for downloading. Media queue also may represent multiple associated queues so that the service may maintain one queue of tangible media for rental and a separate but associated queue of audiovisual programs for instant watching or downloading. Further one user account may be associated with multiple user profiles each having a separate queue in any of the foregoing queue arrangements. In one embodiment the media selection service is the Netflix service commercially available from Netflix Inc. Los Gatos Calif.

Illustratively viewing location includes the BD Player an input device and a display . For purposes of illustrating a clear example shows one viewing location but in a practical embodiment there may be at least many thousands of viewing locations concurrently served by one or more media delivery systems .

BD Player includes any digital media player that complies with one or more of the video based player profiles specified in the Blu ray specification. At present the Blu ray specification includes three video based player profiles known as Profile 1.0 Profile 1.1 and Profile 2.0 Profile 2.0 is referred to commercially as BD Live . However embodiments are not limited to digital media players that implement existing versions of the Blu ray specification and include digital media players that implement any future version of the Blu ray specification or other protocols for streaming media to a networked client device. In addition BD Player may implement some or all portions of the Advanced Access Content System AACS standard for secure content distribution and digital rights management.

In one embodiment BD Player is a computer system configured as a set top box coupled to data network and configured to receive AV programs and generate corresponding video output for a display at viewing location . Non limiting examples of set top boxes include Blu ray Disc player devices streaming video playback boxes such as the Netflix Player by Roku digital satellite television set top boxes video game consoles digital video recorder DVR devices cable converter boxes or a set top box device configured to support one or more video player profiles of the Blu ray specifications. In another embodiment BD Player is a desktop or workstation computer system configured coupled to data network and configured with a digital media player application that implements one or more video player profiles of the Blu ray specifications or other streaming media protocols and that is configured to receive AV programs and generate corresponding video output for a display at the viewing location .

Input device is any user input device suitable for controlling the operation of BD Player . In an embodiment input device is a remote control device that uses infrared light emitting diode emissions radio frequency signals or wired signals to communicate with player and input device comprises one or more control buttons for operating functions of the player . For example input device comprises a play button a fast forward button a rewind button and a selection button. In another embodiment input device is an alphanumeric keyboard and mouse combination of the kind commonly connected to a personal computer or workstation computer

Display is any display device capable of displaying motion picture or video images according NTSC PAL ATSC or other standards for conventional video HD video or other format. In an embodiment display comprises a television monitor or other similar suitable video display.

Ordering location may provide a computer that can connect to presentation server through data network . For purposes of illustrating a clear example shows one ordering location but in a practical embodiment there may be many thousands of ordering locations concurrently served by one or more media selection services . In an embodiment computer is configured with a browser or other interface program that can connect to a complementary web server or other server program to interact with functions provided by media selection service . The ordering location and the viewing location may be the same location or different locations in various embodiments. Further the functionality of computer may be included in BD Player . For example BD Player may be configured with a browser or other user interface program that can connect to a web server or other server program to interact with functions provided by media selection service.

The CPU retrieves and executes programming instructions stored in the memory . Similarly the CPU stores and retrieves application data residing in the memory . The interconnect facilitates transmission of programming instructions and application data between the CPU I O devices interface storage network interface and memory . CPU is included to be representative of a single CPU multiple CPUs a single CPU having multiple processing cores and the like. And the memory is generally included to be representative of a random access memory. The storage may be a disk drive storage device. Although shown as a single unit the storage may be a combination of fixed and or removable storage devices such as fixed disc drives floppy disc drives tape drives removable memory cards optical storage network attached storage NAS or a storage area network SAN .

Illustratively the memory includes the media server . As noted above the media server may generally be configured to stream the AV program to a client device e.g. BD player using a streaming media protocol. In one embodiment the media server may stream the AV program to the client device using one of multiple bit rate encodings available in storage . Each encoding may provide a copy of the same general media file encoded at a different bit rate. Further while each encoding may generally be referred to as having a bit rate using a fixed value e.g. a bit rate of 1500 k per second the actual bit rate may vary at different points within a given encoding . As is known variable bit rate VBR encoding techniques adjust the bit rate of an encoding depending on the content being encoded. For example if there is little change in a visual scene the bit rate at which content is encoded may be decreased. Conversely if there is rapid change in the scene the bit rate may increase up to the maxim specified for the encoding. VBR offers a higher audio visual quality at a smaller file size.

In one embodiment the particular encoding and thus the bit rate used to stream data may be determined by the client device or media server as a function of the prevailing bandwidth conditions. For example the client may be configured to initially request the lowest available bit rate encoding and then increase the bit rate up to the greatest rate supportable by the prevailing bandwidth between the client device and the media delivery system . Further as the available bandwidth changes the bit rate at which the AV program is streamed may be changed. In such a case the media server may change from streaming one encoding to the client to another. However rather than reconfigure the client device each time the streaming bit rate is changed i.e. each time the media server changes from streaming one encoding to another the client device may pad portions of the downloaded encoding such that the size of a given portion matches the configured size of that portion specified to the client device prior to streaming.

For example as described in greater detail below each encoding may provide a sequence of groups of pictures GOPs and a set of sequential GOPs from an encoding may be grouped together to form a complete set of video data e.g. a file storing an encoding of video data for a complete movie . Corresponding GOPs in different encodings represent the same sequence of pictures which may be decoded and played back frame by frame. Similarly an encoding may store the audio data associated with a given media title e.g. audio encodings may store the audio for a given movie in a variety of languages . Portions of an audio encoding may correspond to a sequence of video in multiple video encodings. In one embodiment an encoding may include multiplexed audio and video data. Alternatively however separate encodings may be used to store video data encoded at a particular bit rate and video data encoded at a particular sampling frequency . In such a case a client device may stream a video encoding and an audio data encoding from the media delivery system and multiplex the streams on the client device directly.

Each encoding for a given AV program may also include a file header describing the particular collection of audio or video data stored in a given encoding . For example in the case of video data the file header may refer to the byte or packet offset of each GOP in the encoding list the byte or packet size of each GOP in the encoding and or provide offsets for multiplexing audio with video i.e. specify insertion points within each GOP for interleaving portions of audio data with video data as well as specify a playing interval or duration for each GOP. However the information stored in a given file header also be stored in a separate file. In such a case the header for an encoding may include a reference to the associated file describing the contents of that encoding .

In any case the client device may retrieve the information describing each encoding available for a given AV program e.g. the file headers for encodings of the AV program at each distinct video bit rate and each available audio track . The client device may use the information describing the size and playback intervals of a given encoding to generate a playlist information file itself used to configure the client device for playback. For example the playlist information file may subdivide the encodings into a number of clip files and each clip file may reference a sequential set of GOPs regardless of which encoding is streamed to the client. However as the encodings are generated at different bit rates the size in bytes or packets or both of the GOPs referenced by a given clip file may vary even though the duration or playing interval of corresponding GOPs in different encodings remains the same. By aligning playback along a GOP boundary a client device may switch streaming playback from one encoding to another without disrupting the playback save for a change in audio video quality resulting from the changed bit rate . Further by padding the GOPs to match the size used to configure the client device visible interruptions in playback are avoided as the client device need not switch to a different playlist information file when switching among clip files streamed from different encodings .

More generally each encoding may include a file header indicating the byte offset of each group of pictures GOP in that encoding . From this information the size of each GOP may be determined. Alternatively the file header may indicate the size of each GOP allowing the byte offset for each GOP to be determined . Further as noted the playlist information file generated by the client may subdivide the AV program into a sequence of clip files each containing a number of GOPs. In one embodiment the number of GOPs in each clip file may be constant for a given AV program . The client device may use data from the file headers associated with the encodings to generate a playlist information file used to configure the client device for playback. As the clip files are downloaded the client device may compare the size of each GOP in a clip to a reference size specified in the corresponding clip information file generated prior to initiating streaming playback and pad each GOP as necessary so that the size of each GOP is the same as specified in the client information file.

Playback logic provides one or more sequences of computer executable instructions for performing various functions that are described further herein. The instructions comprising playback logic may be stored on a non volatile memory of BD player such as for example a hard disk flash memory or firmware of BD player . Alternatively instructions comprising playback logic may be read by player from a removable non volatile computer readable storage medium e.g. a Blu ray Disc using removable media device . Still further instructions comprising playback logic may be received over data network via network interface .

The combination of network interface and data network broadly represent any of the following an Ethernet port configured to couple BD player to a router hub DSL modem or adapter or cable modem an integrated DSL modem or adapter or cable modem an Ethernet port configured to couple BD player to a wireless access point and any other electronic interface to a source of audiovisual program data.

In one embodiment playback logic is an executable Blu ray Disc Java BD J application Xlet that is either read from a Blu ray Disc inserted into player and or downloaded over network from media server . In another embodiment logic is stored in firmware of player for example in a flash ROM of player . In another embodiment a bootstrap portion of logic is stored in firmware of player and the bootstrap portion when executed by CPU downloads an application portion of logic e.g. an BD J Xlet from media server . The application portion of logic when executed by CPU performs the various functions that are described further herein. CPU may comprise one or more processors and or one or more processor cores.

Local storage or memory is a hard disk or flash memory for storing files including playlist information files clip information files and AV stream files downloaded from media server by playback logic .

Decoder refers broadly to a collection of hardware and or software components within BD player that takes as input a transport stream contained in one or more AV stream files stored in local storage and produces as output decompressed video images and audio data for display device and audio device . In one embodiment decoder is compatible with the model Transport Stream System Target Decoder T STD described in the international standards document ISOIIEC 183818 1. In general a transport stream is a data format for multiplexing and synchronizing the output of one or more video and audio elementary streams. In general an elementary stream is typically the output of a video or audio encoder produced when digitally recording an audiovisual program. Example elementary video streams include video digitally encoded according to the SMPTE VC I video stream MPEG 4 AVC video stream and MPEG2 video stream formats. Example elementary audio streams include audio digitally encoded according to the Linear PCM audio stream Dolby Digital audio stream Dolby Digital Plus audio stream Dolby lossless audio stream DTS digital surround audio stream and DTS HD audio stream formats.

Audio and video elementary streams may be divided into packets and encapsulated in one or more packets of a transport stream. By interleaving multiplexing transport stream packets containing video data and audio data audio and video elementary streams encoded at varying bit rates may be synchronized. For example a transport stream may synchronize video encoded in an elementary stream at 2 Mbps with audio encoded in an elementary stream at 640 kbps. In one embodiment the transport stream contained in an AV stream file stored in local storage is a Moving Picture Experts Group 2 MPEG 2 Transport Stream ISO IEe 13818 1 contained in a structure compliant with the Blu ray specification referred to in Blu ray specification as a BDAV MPEG 2 Transport Stream .

Decoder may include any combination of sub components such as a buffer for queuing transport stream packets read from an AV stream file a de multiplexer for de multiplexing the stream of transport stream packets into separate elementary audio and video streams and an audio decoder and a video decoder for decompressing elementary audio and video streams respectively.

Further decoder may be configured to process a transport stream at a particular bit rate. The bit rate at which decoder processes a transport stream may be indicated by the time lengths of the playing intervals i.e. of the clips specified in the playlist information file and the sizes of the playing intervals. In one embodiment the size of the playing intervals may be indicated in a set of clip information files each corresponding to a distinct clip file downloaded as part of the AV stream files contained in the transport stream. However as noted above when the bit rate at which the clips are downloaded changes the bit size of each clip may not match the size specified in the corresponding clip information file. Accordingly in one embodiment the playback logic may pad the playback intervals in a clip to match the bit size specified in the corresponding clip information file.

In one embodiment playback logic may configure decoder to process a transport stream at a particular bit rate by causing player to store a playlist information file and a collection of clip information files identified in the playlist information file to local storage . Thereafter logic may initiate playback of the playlist by invoking a playback function provided by an application programming interface API offered by a system layer of player . That is the playback logic may be begin downloading the sequential clip files corresponding to the clip information files and once the first clip file is fully downloaded send it to the decoder for decoding and playback on the display device and audio device .

User input processing unit processes input signals received from input device . An input signal processed by user input processing unit may result in an event notification to a program or process executing instructions included in playback logic . Logic may be configured to handle various types of event notifications from user input processing unit . For example playback logic may receive an event notification when a user uses input device to initiate playback of an AV program or perform a seek function within an AV program. In response to receiving such an event notification playback logic may configure decoder of player to process the AV program at a particular bit rate by downloading and storing in local storage the playlist information file and clip information files of the AV program.

From the information obtained at step the client device may generate a playlist information file used to configure the client device for playback step . In one embodiment e.g. the playlist information file may describe multiple clips i.e. sequences of GOPs as well as the size in bytes or packets of the GOPs in each clip. Once generated the playlist information file may be used to configure the client device e.g. a Blu ray disc player for streaming media playback. As noted the size of the clips specified in the clip information files may be determined by selecting the largest size GOP present in any of the available encodings. This process may generally be repeated to generate a clip information file for each clip file specified in the playlist. This results in clip information files which specify the largest possible size for the GOPs in the corresponding clip file. Thus when a clip file e.g. a sequence of GOPs is downloaded at any particular bit rate the GOPs in that clip file may be padded if needed to match the size of the clip file specified by the playlist information file used to configure the client device for playback.

Returning to the method shown in at step after the clip information files for an AV program have been generated and a particular encoding has been selected the client device begins downloading the first clip file from the media delivery system. Once downloaded streaming playback may begin. Further as additional clip files are downloaded the GOPs included in those clip files may be padded as needed to match the clip information files generated at step .

At step after evaluating each GOP in the clip file downloaded at step the client device may determine whether to change the encoded bit rate at which the next clip file should be downloaded i.e. to change which encoding of is used to stream data to the client device . For example the client device may identify a change in prevailing bandwidth conditions that justifies increasing or decreasing the then current streaming bit rate. In a particular embodiment the client device may be begin streaming playback by requesting the first clip file of an AV program using the lowest available bit rate encoding. Doing so may allow the streaming playback to begin more rapidly then by downloading a clip file encoded at a higher bit rate. However as the prevailing bandwidth conditions allow the client device may request clip files at progressively higher bit rate encodings improving audio video quality.

More generally by changing the bit rate encodings in the clip files downloaded from the media delivery system and by padding the clip files as appropriate the client device may seamless switch between different bit rate encodings without having to reconfigure the client device each time the streaming bit rate is changed. If the client device determines that a change in bit rate is appropriate then at step the current bit rate is updated. The method then returns to step where the client device requests the next clip file from the media delivery system. The process illustrated in may generally repeat to download the complete set of clip files for a given AV program.

As shown each of the encodings includes a file header specifying the bit size or offsets of each GOP in that encoding. As described above the client device may be configured to obtain the file header for each available encoding e.g. encodings . In one embodiment the client device may store this information in a data structure such as GOP size table . That is the client device may generate a table aligning each GOP across multiple bit rates. For example GOP size table shows that GOP1 the first group of pictures in the AV program is 16 k bytes in size in encoding 15 k bytes in size in encoding 12 k bytes in size in encoding and 10 k bytes in size in encoding . Note however the highest encoded bit rate does not always result in the largest GOP size. For example table shows that the size of GOP2 in encoding encoded at 1000 kbps is larger then the size of this GOP in encoding encoded at 1500 kpbs . The may result form the approach taken by different bit rates in generating a variable bit rate encoding for the same media content.

Assume for this example that GOPs 1 4 correspond to a clip file as specified by a playlist for the media file encoded by media file encodings . In such a case the client device may generate the clip information file from the GOP size table that includes a GOP size for GOPs 1 4. As shown the clip information file indicates a GOP size corresponding to the largest COP size in any of the available encodings . In this specific example a byte size of 16 k bytes 16 k bytes 17 k bytes and 17 k bytes for GOP1 GOP2 GOP3 and GOP4 respectively. Thus when the clip file corresponding to clip information file is streamed to the client device the actual GOPs will either match the size in the clip information file or may be padded as needed to do so.

This result is shown in which illustrates an example of groups of pictures GOPs in a clip file being padded to match a GOP size indicated in a corresponding clip information file according to one embodiment of the invention. In this example the client device e.g. BD player has downloaded clip file from the media delivery system using the 500 kbps encoding i.e. encoding form . As shown the clip file includes a first GOP at 12 k bytes in size a second GOP at 12 k bytes in size a third GOP at 13 k bytes in size and a fourth GOP at 12 k bytes in size. The size of each GOP in clip file matches the size specified in the file of encoding . However each of these GOPs is smaller in size then specified in the clip information file . Accordingly in one embodiment the playback logic pads each GOP in clip file as necessary so that each GOP in padded clip file matches the GOP size specified in clip information file . As shown once the playback logic has padded the GOPs in clip file the resulting padded clip file may be passed to decoder for decoding and playback on display device and audio device .

In sum techniques are disclosed for providing seamless bit rate switching in streaming media bit rates accomplished in part by padding individual portions of streamed content so as to match an expected size for each individual portion. Doing so allows e.g. a BD player to seamlessly change bit rates during playback i.e. to change bit rates without requiring the BD player to be reconfigured with changed size data or causing a noticeable interruption of smooth audio and video playback each time the streaming bit rates are changed. As clip files are downloaded for playback the size of the clip file or the size of GOPs in the clip file is compared with a corresponding clip information file. The clip information file may be used to configure the BD Player prior to initiating playback of streaming AV data. The playback logic may pad the clip file or one or more GOPs in the clip file such that the size of the clip file matches the configured size specified in the clip information file.

One embodiment of the invention may be implemented as a program product stored on computer readable storage media within the client device. In this embodiment the content client device may be embedded within a computing device such as a set top box or BD player. An alternative embodiment may be implemented as a program product that is downloaded to a memory within a computer system for example as executable instructions embedded within an internet web site. In this embodiment the client device comprises the computer system.

While the forgoing is directed to embodiments of the present invention other and further embodiments of the invention may be devised without departing from the basic scope thereof. For example aspects of the present invention may be implemented in hardware or software or in a combination of hardware and software. One embodiment of the invention may be implemented as a program product for use with a computer system. The program s of the program product define functions of the embodiments including the methods described herein and can be contained on a variety of computer readable storage media. Illustrative computer readable storage media include but are not limited to i non writable storage media e.g. read only memory devices within a computer such as CD ROM disks readable by a CD ROM drive flash memory ROM chips or any type of solid state non volatile semiconductor memory on which information is permanently stored and ii writable storage media e.g. floppy disks within a diskette drive or hard disk drive or any type of solid state random access semiconductor memory on which alterable information is stored. Such computer readable storage media when carrying computer readable instructions that direct the functions of the present invention are embodiments of the present invention.

