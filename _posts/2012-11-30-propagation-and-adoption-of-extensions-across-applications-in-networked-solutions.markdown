---

title: Propagation and adoption of extensions across applications in networked solutions
abstract: The present disclosure describes methods, systems, and computer program products for adoption of an extension of a service across networked applications. One process includes receiving, by a target platform operating a target networked application, a data package associated with the extension, the data package comprising data specifying the service to be extended and information associated with a technology of a source platform at which the data package was created, extracting a portion of the data from the data package, and implementing the extracted portion of the data in the service of the target application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09077717&OS=09077717&RS=09077717
owner: SAP SE
number: 09077717
owner_city: Walldorf
owner_country: DE
publication_date: 20121130
---
The present disclosure relates to software computer systems and computer implemented methods for adoption of an extension of a service across networked applications.

Modern networked applications can enable customers to access and leverage updates efficiently. In many instances customers can access data from a single networked application for example from a single business product. For data exchange between different networked applications or business products data may need to be copied transferred or manipulated in other means to be used. For example customer data stored in a sales order business product may be read and copied or duplicated to be useable in another business application or system. In some other instances a central database e.g. held by a third party may also be used to provide copies of the business data to multiple applications or business products.

The present disclosure describes methods systems and computer program products for adoption of an extension of a service across networked applications.

In a general aspect 1 a computer implemented method for adoption of an extension of a service across networked applications the method comprising receiving by a target platform operating a target networked application a data package associated with the extension the data package comprising data specifying the service to be extended and information specifying the source platform at which the data package was created extracting a portion of the data from the data package and implementing the extracted portion of the data in the service of the target application.

Aspect 2 according to aspect 1 is further comprising creating the data package at the source platform wherein the source platform operates a source networked application that is communicatively coupled to the target networked application or to a cloud solution directory.

Aspect 3 according to any one of aspects 1 to 2 wherein the data and the information of the data package are arranged in a data structure configured to be propagated across the networked applications the networked applications comprising the source networked application and the target networked application.

Aspect 4 according to any one of aspects 1 to 3 wherein the information specifying the source platform specifies a technology the source platform is based on wherein the target networked application is operated by a target platform and wherein the source platform and the target platform are based on different technologies wherein the technologies are different by at least one of operating system hardware infrastructure and software development platform.

Aspect 5 according to any one of aspects 1 to 4 wherein the networked applications comprise the target networked application and the source networked application and the networked applications being distributed within a network wherein the network is a cloud computing environment including a cloud solution directory and the method is further comprising announcing that the data package was created and discovering that the data package being announced.

Aspect 6 according to any one of aspects 2 to 5 wherein upon creating the data package at the source platform the data package being transmitted to the target networked application that is connected via a peer to peer connection with the source networked application.

Aspect 7 according to any one of aspects 2 to 6 wherein upon creating the data package at the source platform the data package being transmitted to the cloud solution directory where the data package being accessible on demand by the target networked application or where the data package being accessible during the discovering when the associated service is accessed by the target networked application.

Aspect 8 according to any one of aspects 1 to 7 further comprising collecting or creating the data by the source networked application and collecting or creating the information specifying the technology of the source platform wherein the technology is at least one of operating system hardware infrastructure and software infrastructure.

Aspect 9 according to any one of aspects 1 to 8 wherein the information is header information that describes the technology of the source platform and or the source networked application wherein the technology is at least one of operating system hardware infrastructure and software development platform.

Aspect 10 according to any one of aspects 1 to 9 further comprising arranging at least a portion of the data of the data package in a data structure configured to be implemented in the service within the target networked application by extracting the portion and subsequently forwarding of the portion to the service.

Aspect 11 according to any one of aspects 1 to 10 the data package further comprising additional data associated with an entity related to the service wherein the additional data specifying an extension of the entity and wherein the additional data being configured to be implemented in the target networked application.

Aspect 12 according to any one of aspects 1 to 11 wherein the service to be extended may be a generic extension of a service interface of the networked applications within the network environment and the related entities may be one or more business objects and or one or more user interface extensions wherein the business object is a representation of an intelligible business or non business entity such as an account an order employee an invoice or a financial report.

Aspect 13 according to any one of aspects 1 to 12 further comprising announcing within a network comprising the source networked application and the cloud solutions landscape directory that the data package was created.

Aspect 14 according to any one of aspects 1 to 12 further comprising announcing within a network comprising the source networked application and at least one of the target networked applications that the data package was created.

Aspect 15 according to aspect 13 further comprising discovering within a network comprising the target networked application and the cloud solutions landscape directory that the data package was created.

Aspect 16 according to aspect 14 further comprising discovering within a network comprising the source networked application and the target networked applications that the data package was created.

A general aspect 17 comprising creating by a source networked application operated by a source platform a data package associated with the extension the data package comprising data specifying the service to be extended and information specifying with the source platform wherein the data and the information of the data package are arranged in a data structure configured to be propagated across the networked applications the networked applications comprising the source networked application and a target networked application and wherein the source networked application is communicatively coupled to the target networked application or to a cloud solution directory.

A general aspect 18 comprising creating by a source networked application operated by a source platform a data package associated with the extension the data package comprising data specifying the service to be extended and information specifying the source platform wherein the data and the information of the data package are arranged in a data structure configured to be propagated across the networked applications the networked applications comprising the source networked application and a target networked application and wherein the source networked application is communicatively coupled to the target networked application or to a cloud solution directory announcing that the data package was created discovering that the data package being announced receiving by a target platform operating the target networked application the data package associated with the extension extracting a portion of the data from the data package and implementing the extracted portion of the data in the service of the target application.

Aspect 19 according to any one of aspects 1 to 18 further comprising implementing of extracted portion of the data of the data package based at least on one of the information specifying the source platform the extracted portion of the data and a technology of the target platform operating the target networked application.

Aspect 20 according to any one of aspects 1 to 19 wherein at least the portion of the data of the data package is arranged in a data structure configured to be implemented in the service within the target networked application by extracting the portion and subsequently forwarding of the portion to the service.

Aspect 21 according to aspect 20 wherein the data of the data package further comprises additional data associated with at least one entity related to the service wherein the additional data specifying an extension of the entity and wherein the additional data being configured to be implemented in the target networked application.

Aspect 22 according to aspect 21 further comprising extracting a second portion of the additional data associated with the entity related to the service and subsequently forwarding the second portion to the entity within the target networked application.

Aspect 23 according to any one of aspects 1 to 22 wherein the data specifying structure and or implementation logic of the service to be extended.

Aspect 24 according to any one of aspects 1 to 23 wherein the data in the data package being written in Extensible Markup Language XML .

Aspect 25 according to any one of aspects 1 to 24 wherein the information specifying the source platform specifies a technology the source platform is based on wherein the technology of the source platform is different from a technology of the target platform by at least one of operating system hardware infrastructure and software development platform.

Aspect 26 according to aspect 25 wherein an amount of data from the data package implemented in the target networked application depends on a degree of similarity between technologies the source and target application are based on.

Aspect 27 according to any one of aspects 1 to 26 wherein the data specifying the service to be extended comprises metadata of the extension of the service.

Aspect 28 according to any one of aspects 11 12 22 and 23 wherein all other entities related to the service are implemented in the target networked application in case of similar technology of target and source networked application and some of the entities are implemented in the target networked application in case of partially similar technology of target and source networked application.

Aspect 29 according to any one of aspects 1 to 28 wherein the extension of the service is an extension of a functionality or attribute associated with a service interface a business logic a business object or a user interface within a networked application.

While generally described as computer implemented software embodied on tangible media that processes and transforms the respective data some or all of the aspects may be computer implemented methods or further included in respective systems or other devices for performing this described functionality. The details of these and other aspects and embodiments of the present disclosure are set forth in the accompanying drawings and the description below. Other features objects and advantages of the disclosure will be apparent from the description and drawings and from the claims.

Reference numbers and designations in the various drawings indicate exemplary aspects implementations or embodiments of particular features of the present disclosure.

This disclosure generally relates to software computer systems and computer implemented methods for adoption of an extension of a service across networked applications. Specifically propagation and adoption of service extensions across networked applications is provided that are especially adapted to cloud computing network environments. Implementations of the present disclosure described herein may provide one or more of the following advantages 

First service extensions natively created in a networked application may be propagated and deployed to other networked applications in an easy and rapid manner with near zero propagation and adoption efforts.

Second a flexible service extension independent of platform technology or location of the platform is provided.

Third the aspects described herein are not restricted to service interfaces but may support other entities even in case that networked applications are based on different development technology.

Fourth a cloud computing environment especially adapted to multiple platform technologies is provided that allows on demand service extensions across networked applications.

Software products e.g. networked applications can be built upon a platform where the platform is used as a basis upon which multiple applications are developed on top of or based upon the platform. As one example proprietary on demand business process platforms can be used to create many on demand products as well as networked applications NWAs built using at least a portion of the platform. In certain implementations on demand products can be a fully integrated enterprise resource planning ERP or business management software solutions. The on demand products can be a complete software as a service SaaS system in which software and its associated data are hosted centrally for example in a cloud computing environment and are accessed by users using a thin client e.g. a web browser over the internet.

An on demand product may include functionality for integrated end to end business processes across several modules including Customer Relationship Management CRM Financial Management FM Project Management PM Supply Chain Management SCM Supplier Relationship Management SRM Human Resources Management HRM Executive Management Support EMS and Compliance Management CM . CRM supports processes that span marketing sales and service activities. FM can be another module that helps provide companies with a single up to date view of the financial condition by integrating core business processes and financials that span financial management accounting and cash flow management. PM can contain an integrated project management solution. SCM can cover supply chain setup management supply chain planning and control and manufacturing warehousing and logistics. SRM focuses on relationships with supplies procurement processes aimed at reducing cost and to perform self service procurement. HRM spans organizational management human resources and employee self service. EMS can empower management with more control over the business and better decision making with real time analytics for tracking business aspects. CM helps companies maintain compliance with changing laws and regulations and to meet regulatory standards. Some all or other modules or functionalities may exist in particular on demand products.

As users are engaging the on demand products in their businesses data in various aspects of the modules and functionalities are generated. Some of the data may be shared to promote their businesses and or product uses. For example data can be shared with other business partners to streamline supply and demand. Other data can be shared to attract future collaboration partners. By using a common platform among users of on demand business applications establishment of a business network can be facilitated between two or more of those users. The common platform may include use of an identical platform different versions of the common platform and different applications based on the common platform among others. For example collaboration data sharing and business network capabilities can be provided as embedded functionality in the on demand business applications based on the common platform. Customers that are willing to participate in the network can be automatically visible to other network participants. Two or more customers can be connected to each other if both of them accept to establish a network relationship which enables data sharing without restriction to specific data information and other collaboration materials.

The data sharing can be performed between connected systems associated with the same business application or from several networked business applications based on the common platform. Multiple networked applications are built upon the common platform that enables integrated infrastructure for data implementation and generation. In some implementations a master copy of the data is stored in one application and can be accessed in another application without any data replication. For example a first application may need data from a second application for certain business operations. The first application through its interfaces and network connections sends a data request to the second application. The second application can provide the requested data to the first application by first locking the master copy of the data and providing an access connection. The first application can then interact with the master copy of the data via the access connection. After using the data in the first application the access connection is terminated and the data is unlocked in the second application so that requests of access can be accepted from other applications or from the first application.

At a high level various business applications running on different systems or tenants can be enabled to share the same business data in a flexible manner to tailor different scenarios. For each networked application administrators or where appropriate customers or other users may individually define which business data can be shared. The administrators may also individually define which networked application should be declared as the master application for the defined shared business data. The master networked application is a property related to a combination of application and business data used by the applications in a federation context or networked solutions instead of a property related to system or application. For example a networked solution can be made of several networked applications each of which may have the role of master application for specific business data. The business data in a federation context may be assigned only to one single master application. When an application is classified as master application for specific business data that business data is persisted on the primary persistency or database of this networked application. The business data may be changed directly and without the usage of replication or proxy data by other networked applications. The changes can be updated to the primary database in the master application. In some implementations administrators or customers may assign a master application for one or more business objects and or other particular data objects at the time of application deployment. The business object encapsulates the business data where changes made to the business data are made in or are associated with the corresponding business object as well. The assignment can be performed based on an optimization strategy and rules defined by the customers for optimizing the networked solution. In an aspect the business object is a representation of an intelligible business or non business entity such as an account an order employee an invoice or a financial report.

The illustrated environment of includes one or more front end clients . The front end client may be associated with a particular business application or development context as well as a particular platform based application system. The front end client may be any computing device operable to connect to or communicate with at least one of the backend servers using a wireline or wireless connection via the network or another suitable communication means or channel. In some instances the front end client may be a part of or associated with a business process involving one or more business applications or alternatively a remote developer associated with the platform or a related platform based application.

In general the front end client includes a processor an interface a networked application or application interface a graphical user interface GUI and a memory. In general the front end client includes electronic computer devices operable to receive transmit process and store any appropriate data associated with the environment of . The networked application or application interface can enable the front end client to access and interact with applications and modules in backend server systems using a common or similar platform. It will be understood that there may be any number of front end clients associated with or external to environment . For example while illustrated environment includes one front end client alternative implementations of environment may include multiple clients communicably coupled to the one or more of the systems illustrated. In some instances one or more front end clients may be associated with administrators of the environment and may be capable of accessing and interacting with the settings and operations of one or more business applications and or other components of the illustrated environment . Additionally there may also be one or more additional front end clients external to the illustrated portion of environment capable of interacting with the environment via the network . Further the terms client customer and user may be used interchangeably as appropriate without departing from the scope of this disclosure. Moreover while the front end client is described in terms of being used by a single user this disclosure contemplates that many users may use one computer or that one user may use multiple computers. In general clients may usually belong to one customer or company. Several employees of the customer called users can use the applications deployed on the corresponding client. For instance the term client refers to a system providing a set of business applications belonging to or rented by a particular customer or business entity. Several employees of that particular customer or business entity can be users of that client and use the business applications provided by or available on this client.

The backend servers represent dedicated and or ad hoc systems built using the platform technology for coordinating collaboration with other systems associated with and executing on platform related technology. The coordinating system is used to manage and operate the system and clients belonging to the cloud computing environment providing knowledge of and connections to the various systems clients and clients therein. The backend servers are enhanced to support data sharing and collaboration capabilities. The front end client can access certain business applications built upon a similar or common on demand platform. For example the front end client may request certain data or data objects in a business application running in the backend server and the request may be executed via the first backend server at the second backend server where the requested data is stored as a master copy. The data stored in the second backend server may be locked and accessed by the first backend server and interacted with the front end client . In other instances the data may be used by an application associated with one of the other backend servers for processing applications associated with those systems. The environment is an example and in alternative implementations the elements illustrated in may be included in or associated with different and or additional servers clients networks and locations other than those as shown. For example one or more of the components illustrated within the backend servers may be located in multiple or different servers cloud based or cloud computing networks or other locations accessible to the backend servers e.g. either directly or indirectly via network .

In general the backend servers can be any server or system that stores manages and executes functionality associated with an on demand platform including assisting in establishing ad hoc collaboration business networks between two or more users or entities executing applications based on a common platform. In some instances the backend servers may execute one or more business applications e.g. of . For example each backend server may be a Java 2 Platform Enterprise Edition J2EE compliant application server that includes technologies such as Enterprise JavaBeans EJB J2EE Connector Architecture JCA Java Messaging Service JMS Java Naming and Directory Interface JNDI and Java Database Connectivity JDBC . In some instances each of the backend servers may store a plurality of various applications while in other instances the backend servers and may be dedicated servers meant to store and execute certain business applications built based on the on demand platform using the on demand platform technology and on demand platform business content. In some instances the backend servers may include a web server or be communicably coupled with a web server where one or more of the business applications associated with the backend servers represent web based or web accessible applications accessed and executed through requests and interactions received on the front end client operable to interact with the programmed tasks or operations of the corresponding on demand platform and or business applications.

At a high level the backend servers include an electronic computing device operable to receive transmit process store or manage data and information associated with the environment . The backend servers illustrated in can be responsible for receiving requests from one or more front end clients as well as any other entity or system interacting with the backend servers including desktop or mobile client systems responding to the received requests by processing said requests in an on demand platform and or an associated business application and sending the appropriate responses from the appropriate component back to the requesting front end client or other requesting system. Components of the backend servers can also process and respond to local requests from a user locally accessing the backend servers . Accordingly in addition to requests from the front end client illustrated in requests associated with a particular component may also be sent from internal users external or third party customers and other associated business applications business processes as well as any other appropriate entities individuals systems or computers. In some instances either or both an on demand platform and or a business application may be web based applications executing functionality associated with a networked or cloud based business process.

As used in the present disclosure the term computer is intended to encompass any suitable processing device. For example although illustrates three backend servers environment can be implemented using any number of servers as well as computers other than servers including a server pool. Indeed the backend servers may be any computer or processing device such as for example a blade server general purpose personal computer PC Macintosh workstation UNIX based workstation or any other suitable device. In other words the present disclosure contemplates computers other than general purpose computers as well as computers without conventional operating systems. Further the illustrated backend servers may be adapted to execute any operating system including Linux UNIX Windows Mac OS or any other suitable operating system.

The first backend server is illustrated in details in . The first backend server includes an interface a processor a memory a business application and other components further illustrated in . In some instances the backend servers and its illustrated components may be separated into multiple components executing at different servers and or systems. For example while illustrates the business application and the processor as separate components other example implementations can include the processor within a separate system as well as within as part of the business application s inherent functionality. Thus while illustrated as a single component in the example environment of alternative implementations may illustrate the backend servers as comprising multiple parts or portions accordingly.

In the interface is used by the first backend server to communicate with other systems in a client server or other distributed environment including within environment connected to the network e.g. one of the front end clients as well as other clients or backend servers communicably coupled to the network . The term interface generally includes logic encoded software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interface may comprise software supporting one or more communication protocols associated with communications such that the network or the interface s hardware is operable to communicate physical signals within and outside of the illustrated environment . Generally the backend servers may be communicably coupled with a network that facilitates wireless or wireline communications between the components of the environment i.e. among the backend servers and or one or more front end clients as well as with any other local or remote computer such as additional clients servers or other devices communicably coupled to network including those not illustrated in . In the illustrated environment the network is depicted as a single network but may be comprised of more than one network without departing from the scope of this disclosure so long as at least a portion of the network may facilitate communications between senders and recipients. In some instances one or more of the components associated with the backend servers may be included within the network as one or more cloud based services or operations.

The term network refers to all or a portion of an enterprise or secured network while in another instance at least a portion of the network may represent a connection to the Internet. In the illustrated example at least a portion of the network includes a portion of a cellular or mobile data network or other network capable of relaying SMS messages. In some instances a portion of the network may be a virtual private network VPN . Further all or a portion of the network can include either a wireline or wireless link. Example wireless links may include 802.11a b g n 802.20 WiMax and or any other appropriate wireless link. In other words the network encompasses any internal or external network networks sub network or combination thereof operable to facilitate communications between various computing components inside and outside the illustrated environment . The network may communicate for example Internet Protocol IP packets Frame Relay frames Asynchronous Transfer Mode ATM cells voice video data and other suitable information between network addresses. The network may also include one or more local area networks LANs radio access networks RANs metropolitan area networks MANs wide area networks WANs all or a portion of the Internet and or any other communication system or systems at one or more locations.

As illustrated in the first backend server includes a processor . Although illustrated as a single processor in the backend server two or more processors may be used in the backend server according to particular needs desires or particular embodiments of environment . The backend servers and as well as other backend systems may similarly include one or more processors. The term processor refers to a central processing unit CPU a blade an application specific integrated circuit ASIC a field programmable gate array FPGA or another suitable component. Generally the processor executes instructions and manipulates data to perform the operations of the backend server and specifically the functionality associated with the corresponding business application . In one implementation the server s processor executes the functionality required to receive and respond to requests and instructions from the front end client as well as the functionality required to perform the operations of the associated business application and an on demand platform among others.

At a high level the term business application and networked application described in this specification refer to any application program module process or other software that may execute change delete generate or otherwise manage information associated with the backend server or the client device and in some cases a business process performing and executing business process related events. In particular business processes communicate with other users applications systems and components to send receive and process events. In some instances a particular business application may operate in response to and in connection with one or more requests received from an associated client or other remote client. Additionally a particular business application may operate in response to and in connection with one or more requests received from other business applications external to the backend server . In some instances the business application can be a networked application for example the business application is built on a common platform with one or more applications in either or both of the backend servers and . In some instances the business application may request additional processing or information from an external system or application. In some instances each business application may represent a web based application accessed and executed by the front end client via the network e.g. through the Internet or via one or more cloud based services associated with the business application .

Further while illustrated as internal to the backend server one or more processes associated with a particular business application may be stored referenced or executed remotely. For example a portion of a particular business application may be a web service that is remotely called while another portion of the business application may be an interface object or agent bundled for processing at a remote system not illustrated . Moreover any or all of a particular business application may be a child or sub module of another software module or enterprise application e.g. the backend servers and without departing from the scope of this disclosure. Still further portions of the particular business application may be executed or accessed by a user working directly at the backend servers as well as remotely at corresponding front end client 

Regardless of the particular implementation application may include computer readable instructions firmware wired or programmed hardware or any combination thereof on a tangible and non transitory medium operable when executed to perform at least the processes and operations described herein. Indeed each software component may be fully or partially written or described in any appropriate computer language including C C Java Visual Basic assembler Perl any suitable version of 4GL as well as others. It will be understood that while portions of the software illustrated in are shown as individual modules that implement the various features and functionality through various objects methods or other processes the software may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate. In the illustrated environment the processor executes the corresponding business application stored on the associated backend servers . In some instances a particular backend server may be associated with the execution of two or more business applications and other related components as well as one or more distributed applications executing across two or more servers executing the functionality associated with the backend servers.

The memory may store various objects object models and data including classes frameworks applications backup data business objects jobs web pages web page templates database tables process contexts repositories storing services local to the backend server and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto associated with the purposes of the backend server and its functionality. In some implementations including in a cloud based system some or all of the memory may be stored remote from the backend server and communicably coupled to the backend server for usage. As described above memory can include one or more meta models associated with various objects included in or associated with the underlying platform. Specifically memory can store items and entities related to the business application and or other collaboration related entities or components. Some or all of the elements illustrated within memory may be stored external to the memory . These items may be made accessible to the business application as illustrated in .

As used in this disclosure in the front end client is intended to encompass a personal computer touch screen terminal workstation network computer kiosk wireless data port smart phone personal data assistant PDA one or more processors within these or other devices or any other suitable processing device. For example the front end client may comprise a computer that includes an input device such as a keypad touch screen mouse or other device that can accept user information and an output device that conveys information associated with the operation of one or more business applications on demand platforms and or the front end client itself including digital data visual information or GUI. Both the input and output device may include fixed or removable storage media such as a magnetic storage media CD ROM or other suitable media to both receive input from and provide output to users of front end client through the display namely the GUI. The clients processors interfaces and memories may be similar to or different from those described in connection with the other components illustrated in although alternative implementations of one or more of these components may be used as well as implementations where additional components may also be included.

In general the business network coordinator system is any server or system that stores manages and executes functionality associated with an on demand platform including assisting in the establishing ad hoc collaboration business networks between two or more users or entities executing applications based on a common platform. In some instances the business network coordinator system may execute one or more business applications . For example each business network coordinator system may be one of the backend servers and illustrated in . In some instances each business network coordinator system may store a plurality of various applications while in other instances business network coordinator systems may be dedicated servers meant to store and execute the business applications which is built based on the on demand platform technology and business content on demand platform using the on demand platform technology and on demand platform business content. The coordinator or central system may be one or more dedicated servers for managing all systems tenants that are part of a cloud computing environment. In some instances the business network coordinator system may comprise a web server or be communicably coupled with a web server where one or more of the business applications associated with the business network coordinator system represent web based or web accessible applications accessed and executed through requests and interactions received on the tenants A and B i.e. via application on platform operable to interact with the programmed tasks or operations of the corresponding on demand platform and or business applications

The business network coordinator system illustrated in can be responsible for receiving application requests from one or more tenants A and B as well as any other entity or system interacting with the business network coordinator system including desktop or mobile client systems responding to the received requests by processing said requests in the on demand platform and or the associated business application and sending the appropriate responses from the appropriate component back to the requesting tenants A and B or other requesting system. The business network coordinator system may perform a central landscape server s functionality e.g. the functionality of the cloud solutions landscape directory described in context of . Such functionality may comprise storing data packages associated with service extensions making available the data packages to various platforms that are based on various technologies and monitoring the network landscape by the system landscape monitor .

Components of the business network coordinator system can also process and respond to local requests from a user locally accessing the business network coordinator system . Accordingly in addition to requests from the tenants A and B illustrated in requests associated with a particular component may also be sent from internal users external or third party customers and other associated business applications business processes as well as any other appropriate entities individuals systems or computers. In some instances either or both of the on demand platform and or the business application may be web based applications executing functionality associated with a networked or cloud based business process.

In the illustrated implementation of the business network coordinator system includes an interface a processor a memory a business application and the on demand platform . In some instances the business network coordinator system and its illustrated components may be separated into multiple components executing at different servers and or systems. For example while illustrates the business application and the on demand platform as separate components other example implementations can include the on demand platform within a separate system as well as within as part of the business application s inherent functionality. Thus while illustrated as a single component in the example environment of alternative implementations may illustrate the business network coordinator system as comprising multiple parts or portions accordingly.

As illustrated in the interface enables an identity management system to connect with the business network coordinator system via a registry connection . The identity management system may be used to identify users e.g. tenants A or B to whom access to shared data is granted when they access shared data across systems or tenants. The usage of one or more identity management systems provides support for single sign on services to be supported avoiding a need for users to re authenticate when they access shared data on other tenants. To avoid re authentication the identity management system can provide the required user mapping. The business network coordinator system may further include registry collaboration models and on demand modules .

The identity management system can identify and manage users related to particular tenants in a system such as a country a network or an organization and control access to the resources in that system by placing restrictions on the established identities of the tenants. The identity management system can be multidisciplinary and covers many dimensions such as technical legal security and organizational dimensions. In some implementations an identity can be constructed from a small set of axiomatic principles. For example all identities in a given abstract namespace may be unique and distinctive and or such identities can bear a specific relationship to corresponding entities in the real world. An axiomatic model of this kind can be considered to express pure identity in the sense that the model is not constrained by the context in which it is applied. In general an entity and or user can have multiple identities and each identity can consist of multiple attributes or identifiers some of which are shared and some of which are unique within a given name space. The identity management system can perform and or support user mapping to the same identity removing a need to re authenticate uses when the same identity attempts access over a particular tenant or system such as when accessing collaboration data on different systems. In some instances the identity management system may be communicably coupled to the business network coordinator system via network .

Generally the business network coordinator system may be communicably coupled with a network that facilitates wireless or wireline communications between the components of the environment i.e. between the business network coordinator system and or one or more tenants A and B as well as with any other local or remote computer such as additional clients servers or other devices communicably coupled to network including those not illustrated in

Regardless of the particular implementation software may include computer readable instructions firmware wired or programmed hardware or any combination thereof on a tangible and non transitory medium operable when executed to perform at least the processes and operations described herein. Indeed each software component may be fully or partially written or described in any appropriate computer language including C C Java Visual Basic assembler Perl any suitable version of 4GL as well as others. It will be understood that while portions of the software illustrated in are shown as individual modules that implement the various features and functionality through various objects methods or other processes the software may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate. In the illustrated environment each processor executes the corresponding on demand platform and the business application stored on the associated business network coordinator system . In some instances a particular business network coordinator system may be associated with the execution of two or more business applications and other related components as well as one or more distributed applications executing across two or more servers executing the functionality associated with the business network coordinator system .

Further while illustrated as internal to the business network coordinator system one or more processes associated with a particular business application may be stored referenced or executed remotely. For example a portion of a particular business application may be a web service that is remotely called while another portion of the business application may be an interface object or agent bundled for processing at a remote system not illustrated or a particular tenant A or B e.g. the application on platform . Moreover any or all of a particular business application may be a child or sub module of another software module or enterprise application not illustrated without departing from the scope of this disclosure. Still further portions of the particular business application may be executed or accessed by a user working directly at the business network coordinator system as well as remotely at corresponding tenants A and B

The illustrated business application may be created and developed based on an underlying software platform or platform layer which can be used to provide functionality defined by the platform as well as additional functionality available by building software applications upon the platform layer using components and entities designed or adapted for use with the platform. By creating the additional functionality the platform can be extended and added to by a plurality of developers providing for a fluid means of enhancement. In an aspect the business application are enhanced by a networked applications extension manager NAEM as described below in context of that is a processing device that manages extension of services across the business applications . In an aspect the NAEM provides a harmonization means for different extensibility mechanisms of services in the different business applications and may rely on capabilities and features of the business network coordination system e.g. cloud solution landscape directory in a cloud computing environment to propagate the extensions easily to the different business applications that may be communicatively coupled in the network . In an implementation the NAEM may comprise a platform specific extensibility adapter for creating the data package associated with the service extension a connectivity manager for announcing and discovering that a service extension was created and a platform specific extension injector for implementing the service extension in a business application as described below in context of .

In some instances additional applications can be built on top of the original system by many different developers and development teams to create new products and software. The on demand platform and its corresponding consolidated on demand platform can maintain a metadata repository storing information on the various models and their associated definitions and metadata across an entire development ecosystem while the on demand platform may be used on which to create or to base newly developed applications.

The on demand platform may include multiple components of functionality including those illustrated in example . For example the on demand platform of includes three components a customer control center a system landscape monitor and a tenant and system operation manager . In general the customer control center provides one or more application programming interfaces APIs to the tenants A and B for accessing the operations of the on demand platform remotely. In some instances use of one or more APIs at the Customer control center can allow for pre publishing of one or more models to and or from the business network coordinator system of .

The customer control center allows tenants such as the tenants A and B access to the on demand platform and vice versa. The customer control center may include a graphical user interface for selection of administration tools. For example the tenants may monitor system health retrieve system information execute maintenance program analyze system performance improve execution procedure organize files and information and perform other control tasks via the customer control center . In some aspects the customer control center enables collaboration functionalities when tenants such as the tenants A and B access and operate on the on demand platform via the customer control center .

The system landscape monitor can monitor operations modules and activities of the business network coordinator system as well as those systems associated with the business network coordinator system including the tenants and other systems and applications. The system landscape monitor may be accessed by tenants such as the tenants A and B to access the published registry data and collaboration content. Further details regarding the communication between the system landscape monitor and the tenants will be descried in detail in . In some implementations the system landscape monitor can collect and present a list of active tenants using the on demand platform . The system landscape monitor may categorize the active tenants by areas of business technology market orientation and other aspects of the tenants. In some implementations the system landscape monitor can show resource distribution or allocation or both within the business network coordinator system and enable administrators or tenants with administrator rights to modify and improve the resource distribution or allocation or both.

The tenant and system operation manager supports communications between tenants such as tenants A and B and the business network coordinator system . The tenant and system operation manager can manage central instances of network establishments between tenants and enable the business network coordinator system to monitor the network upon establishment agreement from all participants. For example tenant A may publish certain data to the business network coordinator system . Tenant B may receive the published data registry and send an invitation or request that an invitation be sent to the tenant A to establish a business network. The tenant and system operation manager enables these operations performed by the tenants A and B . If tenant A accepts the invitation from tenant B then a business network can be established between tenant A and tenant B

The memory includes several components associated with a collaboration and data sharing adapter illustrated external to memory which includes registry collaboration models registry on demand modules and database . The collaboration and data sharing adapter enables tenants to publish and search shared registry data. For example the tenants using the shared on demand platform have access to the embedded functionality for collaboration data sharing and network establishment. The tenants that are willing to participate in network establishment can select so and automatically publish their data via the registry collaboration models in the collaboration and data sharing adapter . When some tenants search for collaboration partners they can send or receive invitation for data sharing and collaboration by other tenants. The registry collaboration models identify the tenants that agree to a business network establishing relationship.

The on demand modules in the memory may include various functionalities of the business network coordinator system and can be selectively provided to some or all of the tenants. As previously described the on demand modules in the business network coordinator system may include CRM FM PM SCM SRM HRM EMS CM and others. For example tenant A may request services of a subset of the on demand modules from the application on platform such as CRM HRM and EMS. Tenant B may request a different subset of the on demand modules on the application platform such as FM HRM and EMS.

The shared data created by both the tenants A and B can be stored at the database while the on demand modules remain standard to the on demand platform . As part of SaaS the database may provide secure efficient and reliable performance to the tenants. The tenants may specify a certain portion of data to be published in the registry and shared in the business network coordinator system . The registry collaboration models the on demand modules and the database enable the collaboration and data sharing adapter to supply a frame work for different tenants to publish and search data as well as establish tenant to tenant network without requirement of a central website or server.

The illustrated environment of also includes one or more tenants A and B e.g. one or more of the front end clients illustrated in . The tenants A and B may be associated with a particular business application or development context as well as a particular platform based application system. Each tenant A and B may be any computing device operable to connect to or communicate with at least one of the business network coordinator system using a wireline or wireless connection via the network or another suitable communication means or channel. In some instances the tenants A and B may be a part of or associated with a business process involving one or more of the business applications or alternatively a remote developer of associated with the platform or a related platform based application. In general each tenant A and B includes a processor an interface an application on platform a graphical user interface GUI and a memory . In some instances tenants A and B may be located on a single server in a co tenancy environment. In those instances the tenants may share some or all of the resources of the server to perform their corresponding operations. In general the tenants A and B comprise electronic computer devices operable to receive transmit process and store any appropriate data associated with the environment of . It will be understood that there may be any number of tenants A and B associated with or external to environment . For example while illustrated environment includes two tenants A and B alternative implementations of environment may include multiple tenants communicably coupled to the one or more of the systems illustrated. In some instances one or more tenants A and B may be associated with administrators of the environment and may be capable of accessing and interacting with the settings and operations of the on demand platform one or more business applications a particular application development module and or other components of the illustrated environment . Additionally there may also be one or more additional tenants A and B external to the illustrated portion of environment capable of interacting with the environment via the network . Further the terms tenant client customer and user may be used interchangeably as appropriate without departing from the scope of this disclosure. Moreover while each tenant A and B is described in terms of being used by a single user this disclosure contemplates that many users may use one computer or that one user may use multiple computers. In general tenants may usually belong to one customer or company. Several employees of the customer called users can use the applications deployed on the corresponding tenant. For instance the term tenant refers to a system providing a set of business applications belonging to or rented by a particular customer or business entity. Several employees of that particular customer or business entity can be users of that tenant and use the business applications provided by or available on this tenant.

The GUIs associated with each tenant A and B may comprise a graphical user interface operable to for example allow the user of a tenants A and B to interface with at least a portion of the business application the on demand platform and their associated operations and functionality. Generally the GUI provides the particular user with an efficient and user friendly presentation of business data provided by or communicated within the system. The GUI may comprise a plurality of customizable frames or views having interactive fields pull down lists and buttons operated by the user. For example the GUI may provide interactive elements that allow a user to interact with a particular component within and or external to environment . Different portions of the corresponding component s functionality may be presented and accessible to the user through the GUI such as through an application on platform e.g. a web browser . Generally the GUI may also provide general interactive elements that allow a user to access and utilize various services and functions of a particular component. In some instances the application on platform may be used to access various portions of different platform based application systems or the business network coordinator system . In some instances the application on platform may be an agent or client side version of the business application or other suitable component. The GUI may present the information of the application on platform for viewing and interaction. In general the GUI is often configurable supports a combination of tables and graphs bar line pie status dials etc. and is able to build real time portals where tabs are delineated by key characteristics e.g. site or micro site . Therefore the GUI contemplates any suitable graphical user interface such as a combination of a generic web browser intelligent engine and command line interface CLI that processes information in the platform and efficiently presents the results to the user visually.

As used in this disclosure each tenant A and B is intended to encompass a personal computer touch screen terminal workstation network computer kiosk wireless data port smart phone personal data assistant PDA one or more processors within these or other devices or any other suitable processing device. For example each tenant A and B may comprise a computer that includes an input device such as a keypad touch screen mouse or other device that can accept user information and an output device that conveys information associated with the operation of one or more business applications on demand platforms and or the tenants A and B itself including digital data visual information or the GUI . Both the input and output device may include fixed or removable storage media such as a magnetic storage media CD ROM or other suitable media to both receive input from and provide output to users of tenants A and B through the display namely the GUI . The tenants processors interfaces and memories may be similar to or different from those described in connection with the other components illustrated in although alternative implementations of one or more of these components may be used as well as implementations where additional components may also be included.

The applications on platform may comprise applications based on the common platform for coordinating the described business network. As illustrated in tenants A and B respectively contain a built in collaboration and data sharing system for example the built in collaboration and data sharing system of tenant A . The built in collaboration and data sharing system may further include components such as a discovery manager registry a business network builder and business network coordinator agents . The discovery manager registry enables tenant A to find available shared data in the registry. The business network builder enables the tenant A to establish a business network after the tenant A discovers useful shared data. For example the discovery manager registry may access published shared data in the business network coordinator system .

In some instances the discovery manager registry may actually collect published shared data and or metadata describing a set of shared data for inspection at the corresponding tenant allowing each tenant to view the set of information available for sharing and collaboration. In an aspect the discovery manager registry may perform operations of checking other platforms including a central repository for additional service extensions to be associated with their own applications. Tenant A can send invitations via the business network builder to other tenants of which the shared data are discovered by the tenant A . If the invited tenant accepts the invitation a business network between the two tenants can then be established. The business network coordinator agents can enables various components to work with central collaboration capabilities to allow for sharing. The Although in only one built in collaboration and data sharing system is shown in some instances every tenant may include an application based on the on demand platform having a built in collaboration and data sharing system.

In the example system may include the tenants A and B of the example environment . The tenants A and B are using business applications based on the on demand platform such as the on demand platform of the business network coordinator system in . In some implementations the business applications can include multiple functionalities and modules. For example the business applications may include CRM FM PM SCM SRM HRM EMS CM and others.

Each of the tenants A and B includes a business application on platform and . The business application on platform and can be realized on a web browser running on a remote computer. As an end user of an SaaS the tenants A and B can access various modules of the business applications without previous local installation of the business applications as components of the business application on platforms or can be downloaded based on the demand of the tenant A and B . The business application on platforms and as illustrated include built in collaboration and data sharing . The built in collaboration and data sharing locally determines data publication and discovery in the tenants A and B . For example tenant A may access a registry as illustrated by across a network boundary to communicate registry data and collaboration content. The registry data and collaboration content may reach the business network coordinator system . The business network coordinator system may include several components to manage the registry data and collaboration content.

In some implementations the business network coordinator system may include a customer control center a system landscape monitoring a tenant and system operations manager and a collaboration and data sharing adapter . The tenant A can publish and share some data with the tenant B by providing certain access to the shared data via the business network coordinator system . The access can be provided via different channels and entities provided by the platform for example a user interface view web services core services of business object report etc. The tenant B can be connected to the business network coordinator system as a potential collaboration partner. The exact released and accessible data are defined and controlled via a user authorization mechanism provided via the on demand platform on which the business applications are based. The business network coordinator system may include the on demand platform. For example a user of the tenant B can be provided access to at least a portion of the information stored at and owned by tenant A once a business network of data sharing is established between tenant A and tenant B . A functional and instance based authorization module which is part of the on demand platform can ensure that users can access only the data published as shared data where the particular user is authorized to view the shared data. The shared data and services can be managed centrally via the collaboration and data sharing work center provided in the business applications 

In some implementations tenants using an on demand platform can access an on demand platform registry which can show other tenants that are using the same on demand platform and have agreed to publish certain information in the on demand platform business network that is supported by the business network coordinator system . The tenants can use standard search and browsing functions and retrieve header information entered by the tenants as they publish the information in the on demand platform registry. For example tenant A publishes registry data as illustrated by where the registry data is managed by the business network coordinator system . The collaboration and data sharing adapter of the business network coordinator system can allow tenants to send explicit invitation for collaboration or data sharing to one or several other tenants founded in the registry. If invited tenants accept the invitation a relationship between both tenants can be established and both tenants can be shown as collaboration partners. For example the business network coordinator system may replicate metadata models and propagate authorizations as illustrated by that connect to tenant B . In some instances metadata models provided to the business network coordinator system can be replicated to at least a portion of the built in collaboration and data sharing systems such that those systems have relevant information on the data and information shared by the other users entities applications related to potential collaboration. The tenants A and B can form a business network via the business network coordinator system .

Until the business network is established via the business network coordinator system the collaborating tenants may not access each other s data or share information except in some instances standard header information entered in the on demand platform registry and published by the tenants. The on demand platform registry can have access to the data collected by the business network coordinator system that performs as a central component to allow monitoring and administration operations associated with connected tenants.

In a general aspect the networked applications are enhanced by a networked applications extension manager NAEM that manages extension of services across the networked applications. In an aspect the NAEM provides a harmonization means for different extensibility mechanisms of services in the different networked applications and may rely on capabilities and features of cloud computing environments e.g. cloud solution landscape directory e.g. business network coordination system in to propagate the extensions easily to the different networked applications 

In a general aspect the environment comprises one or more computers in the platforms and a computer readable medium e.g. memory illustrated in coupled to the one or more computers having instructions stored thereon which when executed by the one or more computers cause the one or more computers to perform operations for adoption of at least one extension of a service e.g. a functionality or attribute associated with service interface business logic business object or user interface within a networked application across the networked applications the operations comprising creating by a source networked application e.g. by an extension adapter interfacing with an extension tool of the source networked application operated by a source platform e.g. tenant client or back end servers as described in a data package associated with the extension the data package comprising data specifying the service to be extended and or information e.g header information associated with a technology on which the source platform is based on wherein the data and the information of the data package may be arranged in a data structure configured to be propagated across the networked applications the networked applications comprising the source networked application and at least one target networked applications and wherein the source networked application is communicatively coupled to the at least one target networked applications or to a cloud solution directory e.g. business network coordination system in . In an aspect the data package is configured to be propagated across the networked applications and either via the cloud solutions landscape directory or via peer to peer network connections within the network environment .

In an aspect the operations for adoption of an extension of a service across the networked applications further comprise collecting or creating the data by the source networked application and collecting or creating the information specifying the technology of the source platform. For example the header information may be text or markup language.

In an aspect the header information may describe the technology of the source platform and or the source networked application . In an aspect the data in the data package may be written in Extensible Markup Language XML .

In an aspect the operations for adoption of an extension of a service across the networked applications further comprise arranging at least a portion of the data of the data package in a data structure configured to be implemented in the service within the target networked application by extracting the portion and subsequently forwarding of the portion to the service.

In an aspect the data of the data package further comprises additional data associated with an entity related to the service wherein the additional data specifying an extension of the entity and wherein the additional data being configured to be implemented in the target networked application

In an implementation the NAEM of the networked applications comprises a platform extensibility adapter that is configured to execute the creating of the data package in the source networked application . In an aspect the extensibility adapter is implemented specific to the technology of the platform on which the source networked application is operated. For example for each supported platform and extensibility mechanism a specific variant of the adapter is provided that is especially adapted to the platform and service extension. In an implementation the adapter is interfacing with an extension tool of the source networked application and platform and collects metadata or data from the source networked application wherein the metadata or data is associated with the service to be extended. In an aspect the adapter augments the collected data or metadata by information e.g. in header information about the technology the source platform is based on and about networked application entities related to the service and to be extended as well. For example the service to be extended may be a generic extension of a service interface of the networked applications within the network environment and the related entities may be one or more business objects and or one or more user interface extensions . In an aspect the adapter provides a platform specific and a generic set of operations.

In an aspect during the creating process mentioned above the used extension tool of the source networked application invokes the adapter to perform its specific operations in order to create a cross networked applications service extension package e.g. the mentioned data package . In this context extension data or metadata specify structure and or implementation logic of the service to be extended. In an aspect the data or metadata may also specify structure or implementation logic of service interface business logic entities e.g. business object or user interface entities . Optionally business logic or user interface entities may be extended in parallel to the service interface extension e.g. to support end to end extensibility across networked applications in case that source and target networked application are based on the same development technology. Optionally the platform extensibility adapter implementations may differ within the environment but cover at least the service interface extension

In an aspect the operations performed by the adapter may be called and executed at several times during the service extension process in the source networked application. In an implementation the adapter is interfacing during the injection process outlined below with the extension injector the connectivity manager or with the cloud solutions landscape directory .

In an aspect the operations for adoption of an extension of a service across the networked applications further comprise announcing within a network comprising the source networked application and the cloud solution landscape directory that the data package was created.

In an aspect the operations for adoption of an extension of a service across the networked applications further comprise announcing within a network comprising the source networked application and at least one of the target networked applications that the data package was created.

In an aspect the operations for adoption of an extension of a service across the networked applications further comprise discovering within a network comprising at least one of the target networked applications and the cloud solution landscape directory that the data package was created.

In an aspect the operations for adoption of an extension of a service across the networked applications further comprise discovering within a network comprising the source networked application and at least one of the target networked applications that the data package was created.

In an aspect the operations for adoption of an extension of a service across the networked applications further comprise announcing e.g. by the connectivity manager configured to publish and or discover service extensions that the data package was created within the environment and discovering that the data package being announced within the environment .

In an aspect the operations for adoption of an extension of a service across the networked applications further comprise upon creating the data package at the source platform the data package being transmitted to the one or more target networked applications that are connected via a peer to peer connection with the source networked application

In an aspect the operations for adoption of an extension of a service across the networked applications further comprise upon creating the data package at the source platform the data package being transmitted to the cloud solution directory where the data package being stored and or being accessible on demand by at least one of the target networked applications . In an aspect at the cloud solutions landscape directory e.g. a central server providing information about the network landscape the data package being accessible during the discovering process mentioned above when the associated service is accessed by the target networked application . In an aspect the data package is shown immediately when the associated service is accessed by a networked application during the discovering process within the cloud solution landscape directory . In an aspect the connectivity manager may offer services to import or export the data package across networked applications . In an aspect the cloud solution directory may notify a networked application e.g. the target networked application about the available service extension data package based on e.g. by identifying or receiving notice of services already used by the networked application. In an aspect the cloud solutions landscape directory may be especially adapted to offer automated services related to the data package such as explicitly notifying some networked applications about availability of the data package or new version of the service. This may also include services for browsing discovering storing and administrating of published or announced.

In an aspect the technology of the source platform is different from a technology the target platform is based on. In an aspect the technology of the target platform is different from the technology of the source platform by at least one of operating system hardware infrastructure and software development platform.

In an aspect the cloud solutions landscape directory may register services and record data required to enable accessing the services so as to process service requests or service extension requests submitted by the networked applications . In an aspect registration of services may be performed automatically by having the networked applications send requests to the directory. In an aspect registration requests may be sent to specific networked applications in response to networked applications selecting a service they wish to add to their system configurations or applications. Details of the cloud solutions landscape directory are described below in context of and in related U.S. utility application with application Ser. No. 12 953 300 filed Nov. 23 2010 the content of which is incorporated by reference herein in its entirety.

Further referring to . In an aspect the operations for adoption of an extension of a service across the networked applications further comprise receiving by the target platform operating the target networked application the data package associated with the service extension extracting a portion of the data from the data package and implementing the extracted portion of the data in the service of the target application 

In an aspect the receiving extracting and implementing may be performed by the extension injector of the target networked application . In an aspect the injector may interface with the adapter and or the manager of the networked application . In an aspect the injector may extract the relevant data and information needed for partial or complete implementation of the extension data package in the target networked application . In an aspect the injector may interface with services that are specific of the target platform 

In an aspect the operations for adoption of an extension of a service across the networked applications further comprise performing the implementing of the extracted portion of the data of the data package based at least on one of the information e.g the header information in the data package associated with a technology on which the source platform is based on the extracted portion of the data and a technology of the target platform operating the target networked application. In an aspect the technology of the source platform is different from a technology the target platform is based on. In an aspect the technology of the target platform is different from the technology of the source platform by infrastructure or models employed.

In an aspect at least the portion of the data of the data package is arranged in a data structure configured to be implemented in the service within the target networked application by extracting the portion and subsequently forwarding of the portion to the service. In an aspect the data of the data package further comprises additional data associated with at least one entity related to the service wherein the additional data specifying an extension of the entity and wherein the additional data being configured to be implemented in the target networked application

In an aspect the entity is one of service interface business logic and user interface . In an aspect the service to be extended is associated to one of service interface business logic and user interface 

In an aspect the operations for adoption of an extension of a service across the networked applications further comprise extracting a second portion of the data e.g. the additional data mentioned above associated with the entity related to the service and subsequently forwarding the second portion to the entity within the target networked application 

In an aspect the injector may identify the structure of the data in the data package and or the technology the source platform is based on prior to implementing the service extension into the target networked application and prior to forwarding the extensions of the service and potentially related entities to the associated location within the target networked application . In an aspect the injector may be especially adapted to the target platform and or to the service and the related entities to be extended.

In an implementation the extension data package may not necessarily be restricted to service interfaces that are per design and by default harmonized between all networked applications independent of the used technology e.g. basic or system technology . The data package may also include extension metadata for other entities e.g. business object or floor plan that are not harmonized per default in all of the networked applications but at least in the networked application using or based on the same technology.

In an aspect the metadata mentioned above may contain a specific section e.g. within the structure of the data in the data package for each additional entity beyond the service interface . In an aspect the harmonization across the networked applications may be achieved by harmonizing the platform specific operations of the extensibility adapter and the corresponding extension injector . In an aspect extensions of platform specific entities are implemented specifically in the extension adapter so that the metadata for specific platforms may be created during the operations for adoption of an extension of the service across the networked applications . This may provide a coherent specific implementation in both subcomponents of the NAEM in the platform extensibility adapter and the extension injector .

Turning to which describes further details of the cloud solutions landscape directory e.g. business network coordinator system of especially adapted for the solutions described in this specification In an aspect the cloud solution directory may notify a networked application e.g. the target networked application about the available service extension data package based on e.g. by identifying or receiving notice of services already used by the networked application. This notification may be applied to various networked applications that are based on different technologies or the same technology. In an aspect the cloud solutions landscape directory may be especially adapted to offer automated services related to the data package such as explicitly notifying some networked applications about availability of the data package or new version of the service. This may also include services for browsing discovering storing and administrating of published or announced. illustrates a service e.g. the service to be extended as described in context of identified as Service 1 being registered in the landscape directory e.g. via a registration interface coupled to the landscape directory and further shows Service 3 also being registered in the landscape directory . In the example illustrated in Service 1 may be an on premise service e.g. a custom made application for use by a specific platform tenant or client device referred to in this example as Customer 1 that may be implemented at a local server operated by or on behalf of Customer 1 and which may be connected to the cloud computing environment. Service 3 may be an on demand service that may be operated by a third party and may be implemented at some remote server s which may also be connected to or included in the cloud and which enables processing of service requests from multiple platforms tenants or client devices on a per use basis.

Subsequent to registration of services with such registration optionally including recording registration data of services in for example individual landscapes of networked applications e.g target networked applications wishing to use the registered services and or individual landscapes of the source networked applications a service request may be submitted for example by Customer 1 that requires processing on Service 1 and Service 3. In some implementations accessing of the relevant services may be performed based on the data included in the individual landscape stored in the landscape directory of Customer 1 or based on data stored in areas of the directory that are shared by multiple networked applications . Thus Customer 1 s landscape data may be accessed e.g. by communicating Customer 1 s identity information and information pertaining to the service request to one of the landscape directory s interfaces to determine retrieve data required for accessing Service 1 and Service 3 for example obtaining the Uniform Resource Locator URL of Service 1 and Service 3 . The access data obtained from the landscape of Customer 1 may also include connectivity information between Service 1 and Service 3 and or data or information included in the data package associated with the service.

In the example illustrated in Service 3 is to communicate with Service 1 to process the service request. Thus Service 3 accesses the solution landscape directory e.g. accessing Customer s 1 landscape in the directory to determine for example location information and other information needed to contact and communicate with Service 1. The information required by Service 3 is then determined or retrieved from the landscape directory and is communicated back to Service 3. Having received the information required to contact Service 1 e.g. URL location information Service 3 initiates communication with Service 1 by for example establishing a peer to peer link with Service 1. In the course of communicating with Service 1 Service 3 may send to Service 1 data commands etc. that are needed by Service 1 to perform its portion of processing to service the request. Data resulting from processing performed at Service 1 as well as signaling information required for the communication link with Service 3 is communicated to Service 3.

As further shown in and as described above in some implementations the various services may communicate access data to the landscape directory including data about the services status and availability. Such communicated data may then be recorded in areas of the directory shared by multiple networked applications and or in individual landscapes of networked applications using the respective applications sending the access data. In the example of Service 3 sends a heartbeat message at a pre determined frequency to indicate that Service 3 is still active. The landscape directory is subsequently updated based on the heartbeat message e.g. the records corresponding to Service 3 in Customer 1 s landscape are updated with data indicating that Service 2 is still active. Service 1 on the other hand sends a notification of a planned downtime to the landscape directory and that information is likewise used to update the directory e.g. the record s corresponding to Service 1 in Customer 3 s landscape is updated with data representative that the downtime scheduled for Service 1 Service 1 may also send periodic heartbeat message during times at which it is not down .

Subsequent to the sending by Service 1 of the notification of the downtime Service 1 becomes unavailable i.e. the service is down as depicted in . As a result as shown at an on going or a new attempt to establish communication between Service 3 and Service 1 fails. In response to detection of communication failure Service 3 contacts the solution landscape directory to check the availability information of Service 1 communication between Service 3 and the landscape directory may be performed using the landscape directory s interfaces . In response the landscape directory sends to Service 3 data about the availability of Service 1 based on the access data stored in the directory the stored access data includes in the example of data representative of the downtime of Service 1 that was stored in the directory in response to the notification the directory received from Service 1 at . The data sent at to Service 3 includes data indicative of the fact that Service 1 is presently down and may also include information about when Service 1 is expected to become available again. Based on the data Service 3 receives regarding the availability of Service 1 Service 3 may re establish e.g. at a time instance when Service 1 become available again the communication link with Service 1 at . Data signaling information and or commands are communicated by Service 1 back to Service 3.

As described in relation to in some embodiments system landscape monitor may be used to monitor at least some of the networked applications or services and to determine for example status and availability of the at least some of the networked applications or services. Thus as further shown in the system landscape monitor may initially retrieve from the solution landscape directory a list of services such as Service 1 and Service 3 with respect to which it is to determine status and availability information. To retrieve such a list the system landscape monitor may send a request to the solution landscape directory to determine and send back the list that includes at least one service that is to be monitor. In response to receiving the request for the list the solution landscape directory transmits back to the system landscape monitor the determined list. The list may be determined based on data stored in areas of the directory shared by multiple networked applications as well as networked application specific data stored in the individual landscapes in the directory.

Having retrieved the list of services to be monitored in the example of the list includes Service 1 and Service 3 the system landscape monitor accesses and communicates with the services to be monitored and retrieves relevant monitoring data which may include status and availability data e.g. whether the system landscape monitor service are still active whether any downtime is scheduled at some later point whether the services have malfunctions current workload information etc. Thus for example the system landscape monitor accesses and communicates with Service 1 and Service 3 to retrieve and their respective monitoring data including the respective status or availability data for Service 1 and Service 3. Retrieved monitoring data including retrieved status or availability data are then used to update the solution landscape directory. For example the records in Customer s 1 landscape corresponding to Service 1 and Service 3 may be updated with the retrieved monitoring data. Each of the various components and operations depicted in may be implemented using at least one processor based device e.g. a computer .

Turning to illustrates an exemplary method or process for creating an extension of a service for adoption across networked applications. After the process is started a service extension is defined at step at the source networked application being operated by a source platform.

At a data package associated to the service extension at the source platform is created wherein the source networked application is communicatively coupled to the target networked application or to a cloud solution landscape directory. In an aspect the data package comprises data specifying the service to be extended e.g. metadata of the extension of the service and header information collected at the source networked application wherein the data and the header information are arranged in a data structure configured to be propagated across the network environment e.g. networked applications and cloud solutions landscape directory and configured to be implemented by another networked application e.g. the target networked application . In an aspect the extension of the service is an extension of a functionality or attribute associated with a service interface a business logic a business object or a user interface within a networked application e.g. the target networked application .

In an aspect the data includes metadata of the extension of the service or data associated to an entity that is related to the service to be extended and may also be extended upon extension of the service. In an aspect the data e.g. the metadata of the extension of the service may specify the service to be extended and the header information may identify a technology of the source platform at which the data package was created. In an aspect the entity is one of service interface business logic and user interface and wherein the service is associated to one of service interface business logic and user interface.

In an aspect the structure or format of the data may be identified by the source networked application so that the service extension is configured to be implemented by another networked application e.g. the target networked application . In an aspect the data may be in XML format.

At a location is identified e.g. a location within the network environment in to propagate the data package. In an aspect the identified location may be another networked application e.g. the target networked application or the cloud solution landscape directory.

At the data package is propagated to a cloud solution landscape directory where the data package may be stored in a memory. In an aspect upon creating the data package at the source platform the data package being propagated to the cloud solution directory.

At the data package is propagated via e.g. a peer to peer connection to another networked application e.g. the target networked application for on demand or on premise usage.

At the data package is made accessible to various networked platforms being based on different or same technology. In an aspect the data package being accessible immediately at the cloud solution landscape directory by the target networked application or the data package being accessible when the service associated to the data package is accessed by the target networked application on demand. In an aspect the technology of the target networked application is different from the technology of the source networked application by infrastructure or models employed.

In an aspect process may comprise announcing e.g. by the connectivity manager at the source networked application that the data package was created.

After these operations the process may end or may continue with the steps described below in context of .

Turning to illustrates an exemplary method or process for retrieving an extension of a service for adoption across networked applications. After the process is started a service extension is identified at e.g. by the connectivity manager discovering that a data package associated to the service extension was announced . In an aspect process may comprise discovering that the creation of the data package associated with a service extension being announced.

At a data package associated with the service extension is retrieved either directly e.g. via a peer to peer network connection from another networked application e.g. the source networked application where the data package was created or from the cloud solution landscape directory. The data package may be retrieved at a target platform operating a target networked application. The data package may comprise e.g. data specifying the service to be extended e.g. metadata of the extension of the service and header information associated with a technology of a source platform at which the data package was created.

At a portion of the data from the data package that is associated to the service to be extended is extracted. In an aspect the extracted data may be translated by the process from one data format e.g. XML do another data format specified by the target networked application.

At the extracted portion of the data is implemented or injected in the service of the target networked application.

In an aspect the data of the data package further comprises additional data associated with an entity related to the service wherein the additional data specifying an extension of the entity and wherein the additional data being configured to be implemented in the target networked application.

At a portion of the data from the data package that is associated if available with an entity related to the service to be extended may optionally be extracted. In an aspect the extracted data may be translated by the process from one data format e.g. XML do another data format specified by the target networked application.

At the extracted data associated with the entity may optionally be implemented or injected into the entity of the target application.

In an aspect wherein at least the extracted data of the data package is arranged in a data structure configured to be implemented in the service within the target networked application by extracting the portion and subsequently forwarding of the portion to the service and or the entity.

In an aspect the implementing of the service extension and potential entity extension may be based at least on one of the header information the extracted data and a technology of the target platform operating the target networked application.

The preceding figures and accompanying description illustrate example processes and computer implementable techniques. But environment or its software or other components contemplates using implementing or executing any suitable technique for performing these and other tasks. It will be understood that these processes are for illustration purposes only and that the described or similar techniques may be performed at any appropriate time including concurrently individually or in combination. In addition many of the steps in these processes may take place simultaneously concurrently and or in different orders than as shown. Moreover environment may use processes with additional steps fewer steps and or different steps so long as the methods remain appropriate.

In other words although this disclosure has been described in terms of certain embodiments and generally associated methods alterations and permutations of these embodiments and methods will be apparent to those skilled in the art. Accordingly the above description of example embodiments does not define or constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure.

