---

title: Device and method for split DNS communications
abstract: Automatically configuring split DNS operation in a wireless network device connected to a network. The wireless network device snoops one or more exchanged DHCP messages to obtain domain name(s) associated with the organization that are now used as target domain name suffix(es) for split DNS operations. For subsequent DNS queries, information within the message is analyzed to determine if the request includes a domain delimiter. If no delimiter, the DNS query message is sent to an internal DNS server that is located within an organization. If a delimiter exists, but the domain name in the message matches one of the target domain name suffixes, the DNS query message is sent to the internal DNS server as well. Otherwise, the DNS query message is routed over a different communication path.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09515988&OS=09515988&RS=09515988
owner: Aruba Networks, Inc.
number: 09515988
owner_city: Sunnyvale
owner_country: US
publication_date: 20120228
---
This application is a continuation in part application of U.S. patent application Ser. No. 13 282 291 filed Oct. 26 2011 the entire contents of which are incorporated herein by reference.

Embodiments of the invention relate to remote access in digital networks and more particularly to split communications in remote access to networks.

Digital networks have become the backbone of many organizations and enterprises. Within an organization private networks can be secured with provisions that securely provide members of the organization access to resources within the organization.

In many cases members of an organization wish to access these resources securely from remote locations such as from home or on the road.

One approach to providing such remote access is to provide members of the organization with remote access points hereinafter singularly referred to as a RAP . Although connected to a public network such as the Internet for example a RAP provides a secure connection to organization resources. In operation a RAP establishes a secure tunnel over the public network which is terminated inside the organization firewall.

The RAP provides wired or wireless access through the tunnel providing secure access to organization resources by routing all client network activity through the tunnel and through the infrastructure located at the organization.

But routing all client network activity through the tunnel and through the organization has performance penalties.

As an example consider a RAP user at home connected to the organization infrastructure. When the client connects to an organization e mail server that connection goes through the tunnel established by the RAP to the e mail server in the organization.

But when the client uses a web browser to visit a news website such as cnn.com or slashdot.org for example that request and subsequent traffic are also directed through the tunnel and through the organization s infrastructure.

To alleviate this issue the concept of a split tunnel was developed. For split tunnel operations certain traffic directed to a set of addresses and or services are directed through the tunnel while traffic to other addresses and or services are routed directly to a public network that the RAP is attached to. So in the case of a split tunnel when the RAP client accesses slashdot.org that request is not sent through the secure tunnel but directly out to the Internet.

One implementation of the split tunnel mechanism is Domain Name System DNS based. As is known in the art the DNS mechanism maps domain names such as slashdot.org to an IP address such as 216.34.181.45. The split tunnel DNS mechanism is configured to recognize a particular domain suffix or pattern matches part of the domain name within a DNS request and upon detecting a match routes the DNS request through the tunnel.

As an example if an organization s domain name is acmesprockets.com the split tunnel DNS mechanism would route all DNS requests containing acmesprockets or the suffix acmesprockets.com through the tunnel to the organization s DNS for resolution to an IP address. However other DNS requests not matching the pattern acmesprockets would be routed to the DNS associated with the Internet connection. Any failed DNS lookups based on DNS requests through the tunnel may also be re routed to the DNS associated with the Internet connection.

In the example given a DNS request for mail.acmesprockets.com will be routed through the tunnel while a DNS request for groklaw.net will be routed to the DNS associated with the Internet connection.

A problem exists however in configuring the operation of the split tunnel. The set of suffixes or pattern matches to be used in split tunnel operation must be configured and managed for each and every RAP in use.

Embodiments of the invention relate to a network device and method configured to perform split Domain Name System DNS communications as described below. According to one embodiment of the invention a network device e.g. an access point AP learns domain suffixes for split DNS communications through information exchanges during an initial phase of operation. For instance one or more domain name suffixes may be provided within Dynamic Host Configuration Protocol DHCP options namely fields in a DHCP message. Once known the DNS server that is part of an organization hereinafter referred to as the internal DNS server may be queried for other suffixes. For messages that include either i a full form domain suffix e.g. acmesprockets.com acmesprockets.org etc. that matches at least one stored domain name suffix learned during a prior DHCP message exchange or ii no domain name suffix whatsoever those messages are passed through a first communication path. The first communication path may be a secure path such as a secure tunnel. Otherwise these messages are routed through another communication path.

Herein certain terminology is used to describe features for embodiments of the invention. For example a network device generally refers to a device that includes logic adapted to transmit and or receive signaling and to process information within such signaling. Different embodiments of a network device may include but are not limited or restricted to an access point a base station a data transfer device e.g. network switch router controller brouter etc. or the like.

It is contemplated that the network device may include hardware logic including one or more of the following i a processor ii one or more radios if wireless communications are supported e.g. component that handles the wireless data transmission reception iii one or more physical connectors to support wired connectivity and iii a non transitory computer readable storage media e.g. a programmable circuit a semiconductor memory such as a volatile memory such as random access memory RAM or non volatile memory such as read only memory power backed RAM flash memory phase change memory or the like a hard disk drive an optical disc drive or any connector for receiving a portable memory device such as a Universal Serial Bus USB flash drive .

Additionally the term logic is generally defined as hardware and or software. As hardware logic may include processing circuitry e.g. a controller a microprocessor a programmable gate array an application specific integrated circuit etc. semiconductor memory combinatorial logic or the like. As software logic may be one or more software modules such as executable code in the form of an executable application an application programming interface API a subroutine a function a procedure an object method implementation an applet a servlet a routine a source code an object code a shared library dynamic load library or one or more instructions. These software modules may be stored in any type of a suitable non transitory storage medium described above or transitory computer readable transmission media e.g. electrical optical acoustical or other form of propagated signals such as carrier waves infrared signals digital signals .

The terms connection is broadly defined as a logical or physical communication path. One type of communication path may involve a non transitory medium such as for instance electrical wire optical fiber cable bus trace or a wireless channel using infrared radio frequency RF or any other wireless signaling mechanism. Similarly the term connected is broadly used to describe a communicative coupling between two network devices. The term message constitutes any grouping of data in the form of a packet an Asynchronous Transfer Mode ATM cell a frame or any series of bits having a prescribed format.

Lastly the terms or and and or as used herein are to be interpreted as an inclusive or meaning any one or any combination. Therefore A B or C and A B and or C mean any of the following A B C A and B A and C B and C A B and C. An exception to this definition will occur only when a combination of elements functions operations or acts are in some way inherently mutually exclusive.

According to one embodiment of the present invention and as shown in a first network device client connects through a second network device e.g. access point AP to a network e.g. Internet or other public network . As shown second network device is an access point AP although it may also be a remotely located switch or a remotely located controller. Network provides access to a private network managed for a particular entity e.g. an organization . Organization comprises a controller and a dedicated internal DNS server . It is contemplated that AP along with client may be implemented physically separated from the private network as shown but may be considered to be logically implemented within the private network.

According to one embodiment AP is a purpose built digital device containing a processor a memory hierarchy and input output interfaces. Such devices typically operate under the control of an operating system such as Linux running specific programs to provide for access point operation. A MIPS class processor such as one from Cavium or NetLogic RMI may be used. Wired network interfaces typically are IEEE 802.3 Ethernet interfaces. Wireless interfaces are typically IEEE 802.11 WiFi interfaces. The memory hierarchy of the device typically contains fast read write memory for holding programs and data during device operation and a hierarch of persistent memory such as ROM EPROM and Flash for holding instructions and data needed for device startup and a file system for device operation.

Similarly controller and internal DNS server are also purpose built digital devices containing a processor a memory hierarchy and input output interfaces. Such devices typically operate under the control of an operating system such as Linux running specific programs to provide for access point operation. A MIPS class processor such as one from Cavium or NetLogic RMI may be used. Wired network interfaces typically are IEEE 802.3 Ethernet interfaces. Wireless interfaces are typically IEEE 802.11 WiFi interfaces. The memory hierarchy of the device typically contains fast read write memory for holding programs and data during device operation and a hierarch of persistent memory such as ROM EPROM and Flash for holding instructions and data needed for device startup and a file system for device operation.

While DNS server is shown as a separate device in communication with network it may also be implemented as a process running for example on controller or on another suitable network device such as a server switch or router.

Client is also a purpose built digital device such as a laptop notebook computer tablet handheld device smartphone or other digital device containing processor memory hierarchy and input output interfaces such as a display speaker microphone and radios typically for 802.11 Wi Fi communications.

For clarity does not show other typical network devices such as switches routers firewalls and the like which are well understood by the art.

According to one embodiment of the present invention AP is connected to network . This connection may be direct or may be through a device such as a cable modem DLS modem wireless bridge or through other similar mechanism.

As part of initialization AP uses a DNS server associated with network e.g. hereinafter referred to as external DNS server to look up the Internet Protocol IP address of controller . Assume for this example that organization may be identified as acmesprockets.com. AP issues a message e.g. DNS Request for acmesprockets.com and in return receives a message including an IP address for example 212.77.8.1 . In an alternate embodiment AP may be configured with this IP address eliminating the need to perform the initial DNS lookup.

AP may be adapted to use this address to establish a communication path such as a secure tunnel for example to controller . Controller is adapted to terminate a connection with AP and provide client access to services inside organization including DNS server . Of course it is contemplated that a tunnel may not be necessary as the availability of two communication paths directed to external DNS server and internal DNS server may be sufficient to practice the invention as set forth in below.

For client to use services inside organization it should first obtain an IP address for internal DNS server . According to one embodiment of the invention this may be accomplished using Dynamic Host Configuration Protocol DHCP . For instance as shown in client issues a request message e.g. DHCP Request across a connection to controller . DHCP is described for example in RFC 2131 for IPv4 networks and in RFC 3315 and RFC 3633 for IPv6 networks.

According to this embodiment of the present invention when performing operations in accordance with DHCP AP snoops request message e.g. DHCP Request from client and a response message e.g. DHCP Offer from controller . AP ensures that request message properly requests a domain name from controller by using DHCP options namely one or more fields within DHCP Request as defined in RFC 2132 in order to request a domain name for organization from controller as well as the IP address of internal DNS server . In this example returned to client DHCP Offer comprises DHCP options that include an address of internal DNS server e.g. 10.1.1.50 as the IPv4 address and at least one full form domain name e.g. acmesprockets.com . Note that multiple DNS server addresses may be returned.

According to this embodiment of the invention AP snoops DHCP Offer returned by internal DNS server and utilizes its domain name suffix returned by DHCP options namely acmesprockets.com for split DNS communications as shown in operation .

According to one embodiment of the invention subsequent DNS queries e.g. DNS Request messages matching the domain name suffix acmesprockets.com are sent to internal DNS server as shown in operations and . DNS queries which do not match the domain name suffix are sent to external DNS server associated with network as shown in operation and .

In an embodiment of the invention a DNS query message e.g. DNS Request message may have domain name suffix appended and a DNS lookup is sent to internal DNS server . If this DNS query fails then the DNS query is redirected to the external DNS server of network . This allows as an example the client to issue a browser request for intranet and have a DNS query sent to internal DNS server as intranet.acmesprockets.com .

According to another embodiment of the invention a DNS query matching the domain name suffix acmesprockets.com is sent to internal DNS server . Also when the DNS query does not contain a domain delimiter such as . the domain name suffix e.g. .acmesprockets.com is appended so the resultant DNS request such as intranet or mailserver undergo a lookup operation through internal DNS server . A DNS query which does not match the domain name suffix e.g. requests such as cnn.com or slashdot.org is sent to external DNS server associated with network .

In an embodiment of the invention once the address of internal DNS server is known DNS server can be queried by AP for other domains and subdomains also available. As an example while the primary domain served by controller is acmesprockets.com it may also serve the domains sprocketsbymail.com and elitesprocketsbyfred.com . By querying DNS server AP can obtain these domain name suffixes as well and add them to the list of suffixes to be recognized in split DNS operation.

It should be understood that since the request message e.g. an initial DHCP DISCOVER request sent by client to controller contains the hardware MAC address of client the IP address allocated to client for its secure tunnel is allocated based on the MAC address of client . This allows for split DNS communications to be set up on a per client basis. As an example a client MAC recognized as a member of the engineering staff would be assigned an address providing access to engineering services such as servers and the like while not providing access to finance or operations servers.

It is contemplated that the split DNS communications may be enhanced for use by other network devices remotely located from AP such as first network device client . This enhancement is to cover a situation were first network device is never brought into trusted network. First network device establishes a secure connection e.g. secure tunnel to controller and is implemented with logic so that if another network device performs a DHCP message exchange in private network first network device is adapted to snoop and acquire and store domain name s from DHCP offers for use in split DNS communications at first network device . This enables first network device to also snoop DHCP messages to produce a listing of one or more domain name suffixes for use in deciding whether to route subsequent DNS queries to an external DNS server or an internal DNS server on a trusted network as describe above.

Referring now to an illustrative embodiment of communications handled by a network device to determine one or more domain suffixes or character patterns for selecting a DNS server is described. Initially a network device receives an initial DNS request message that includes an identified domain name for a targeted network i.e. organization as illustrated in block . In response to the initial DNS request message the network device accesses a first DNS server associated with a network to which the network device is connected in order to receive an address associated with a controller associated with the organization block . According to one embodiment the address is Internet Protocol IP address such as an IPv4 or IPv6 address.

Upon receipt of the IP address the IP address is stored by the network device and is used to establish a communication path such as a secure tunnel for example to a controller that monitors access to a private network associated with the domain name and controls access to services within the private network such as an organization including an internal DNS server for the private network block .

More specifically for a device client to use services inside the organization it should first obtain an IP address for the internal DNS server. According to one embodiment of the invention this may be accomplished through a DHCP message exchange in which a domain name suffix for organization e.g. acmesprockets.com and the IP address of the dedicated DNS server are retrieved from the controller block .

Once the internal host DNS server is known this DNS server may be queried for other domain name suffixes to be routed over the communication path. For instance where the internal DNS server is a Windows based server the controller may be adapted to transmit a command similar to an executable dnscmd which when executed by internal DNS server locates all domain name suffixes used by the organization and outputs the results to the controller. Of course this would require the IP address of the controller to be added as an authorized IP address for internal DNS server as such servers typically will not respond to anonymous unauthorized requests. From the output the domain name suffixes can be parsed for use in split DNS communications. For instance an output of this command when executed by the internal DNS server is the following 

Thereafter for subsequent messages e.g. DNS query etc. received by the network device that include either i a full form domain suffix corresponding to the domain name of the organization or ii no domain suffix whatsoever those messages are passed through a communication path to controller for subsequent receipt by the dedicated DNS server blocks and . Otherwise these messages are routed through another communication path such as to the Internet block .

It is contemplated that the operations set forth by the network device in may be conducted manually with user control or may be performed automatically without user intervention.

The present invention may be realized in hardware software or a combination of hardware and software. A typical combination of hardware and software may be a network server or access point with a computer program that when being loaded and executed controls aspects of the host device such that it carries out the methods described herein.

For instance as shown in a block diagram illustrating network device for supporting split DNS communications is shown. Operating as a device in a wireless digital network network device includes at least one or more radio antennas capable of either transmitting or receiving radio signals or both a network interface capable of communicating to a wired or wireless network a processor capable of processing computing instructions and a memory capable of storing instructions and data. Moreover network device further includes a split DNS determination mechanism that is adapted to automatically configure the network device for enabling performance of the split DNS operations described above in .

Radio antenna may be any combination of known or conventional electrical components for receipt of signaling including but not limited to transistors capacitors resistors multiplexers wiring registers diodes or any other electrical components known or later become known.

Network interface can be any communication interface which includes but is not limited to a modem token ring interface Ethernet interface wireless IEEE 802.11 interface cellular wireless interface satellite transmission interface or any other interface for coupling network devices.

Processor can include one or more microprocessors and or network processors. Memory can include storage components such as Dynamic Random Access Memory DRAM Static Random Access Memory SRAM etc.

Split DNS determination mechanism is optionally adapted to automatically obtain IP addresses for DNS servers located within various organizations in order to provide secure communications with and utilize resources within such networks. Furthermore to avoid unnecessary traffic loads over a communication path to the organization especially where the communication path is secure split DNS determination mechanism learns the domain name associated with a targeted organization and utilizes the full form domain suffix as a comparison value for routing purposes. In particular for subsequent messages received by the network device that include either i a full form domain suffix corresponding to the domain name of the organization or ii no domain suffix whatsoever those messages are passed by split DNS determination mechanism through the communication path to a controller associated with the organization. Otherwise split DNS determination mechanism routed the messages through another communication path such as to the Internet.

Referring now to a second illustrative embodiment of communications supported by network device to determine one or more domain name suffixes for selecting a DNS server is shown. Herein network device is adapted to learn domain name suffixes e.g. acmesprockets.com through DHCP message exchanges initiated by another client network device . According to one embodiment of the invention a domain name suffix or perhaps multiple domain name suffixes may be included within a portion of a message prompted by an event by network device . For instance a domain name suffix may be included within a portion of a DHCP response message such as within the DHCP Options section with a DHCP Offer message.

As network device learns one or more domain name suffixes these domain name suffixes may be stored within network device itself e.g. stored as part of the device profile or within a memory device accessible by network device . Thereafter in response to a subsequent DNS message e.g. DNS Request network device is configured to decide whether to establish communications with external DNS server located in public network over a first communication path or with internal DNS server located in private network over a second communication path . First communication path and or second communication path may be secure e.g. secure tunnel etc. .

Referring to a second illustrative embodiment of a network device adapted to perform the split DNS communication scheme is shown. Herein as an optional operation IP address es for DNS logic within a private network e.g. internal DNS server and one or more domain name suffixes associated with the private network are stored by a network device block . Also IP address es for one or more external DNS server which is are usually programmed by administrator may be stored by the network device. Of course it is contemplated that such information may be merely available to the network device and is not stored therein.

Upon detecting an incoming DNS message block such as a DNS Request message for example the network device optionally determines if the DNS message includes a domain delimiter block . If not the network device recognizes that the DNS message is directed to DNS logic within the private network and sends the DNS message to this DNS logic e.g. internal DNS server of as shown in block .

In the event that the incoming DNS is not checked for a domain delimiter or a check is performed and the incoming DNS message features a domain delimiter the network device determines whether the DNS message features a domain name that matches a domain name suffix that is stored by or at least accessible to the network device block . If not the DNS message is sent to the DNS logic e.g. external DNS server located in the public network over the first communication path block . If the network device determines that the domain name in the DNS message matches a recognized domain name suffix the DNS message is sent to DNS logic e.g. internal DNS server located on the private network block .

This invention may be embodied in other forms without departing from the spirit or essential attributes thereof. Accordingly reference should be made to the following claims rather than to the foregoing specification as indicating the scope of the invention.

