---

title: Fixed phrase detection for search
abstract: A set of search requests may be analyzed to detect fixed phrases suitable for inclusion in a search index. Sets of candidate phrases may be identified among the search requests. Fixed phrases may be detected among the candidate phrases using statistical techniques, for example, by identifying phrases having a relatively high pointwise mutual information (PMI) with respect to component keywords. Fixed phrase detection may include keyword and/or phrase clustering. Clusters may correspond to topics defined using a latent Dirichlet allocation (LDA) procedure. Fixed phrase detection may include identifying phrases having relatively high PMI within particular clusters.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08751518&OS=08751518&RS=08751518
owner: A9.com, Inc.
number: 08751518
owner_city: Palo Alto
owner_country: US
publication_date: 20120507
---
This application is a continuation of and claims priority to allowed U.S. patent application Ser. No. 12 712 081 filed Feb. 24 2010 entitled Fixed Phrase Detection for Search which is hereby incorporated herein by reference for all purposes.

It has become commonplace for people to use computer systems to search large collections of electronically indexed content. Typically as part of a search a person or more generally a searcher interacts with a computer system user interface e.g. a graphical user interface or an application programming interface to submit one or more search requests and view corresponding sets of search results search result sets . The following description will be concerned with search requests that at least in part use strings of text e.g. strings of Unicode characters to indicate searcher interest in portions of a collection of content. Such strings of text are typically interpreted by a search engine as one or more search terms. For example search terms may include words of a language such as English and logical operators such as and and or .

The collection of content searched by a search engine is typically large and a typical goal of the search engine is to present to the searcher the most relevant content with respect to a particular search request. However there are many tradeoffs that may take place as a part of determining relevance of content for example with respect to a set of search terms and conventional search engines incorporating such tradeoffs may be sub optimal in one or more of a variety of contexts. Such sub optimality with respect to relevance isn t insignificant. At least it may be detrimental to searching efficiency. In commercial contexts for example sub optimal surfacing of relevant content may result in significant commercial penalties such as lost sales.

One such tradeoff typically involves deciding how to index the collection of content and or parse search terms from search requests. For example a collection index may include information corresponding to a matrix associating search terms e.g. each row may correspond to a particular search term with content in the collection e.g. each column may correspond to a particular item of content in the collection with each position in the matrix including a relevance score quantifying a relevance of the search term for the item of content. A smaller collection index may reduce computing resource requirements on the other hand additional search terms and thus a larger index may enhance a relevance of search results to the searcher. Determining which search terms to include in the collection index and or parse from search requests may be further complicated by the fact that a phrase i.e. multiple words in a particular order may indicate an interest different to interests indicated by its component words. For example a search request using Newton Baker may indicate a subject matter interest different to search requests using Newton or Baker alone.

Same numbers are used throughout the disclosure and figures to reference like components and features but such repetition of number is for purposes of simplicity of explanation and understanding and should not be viewed as a limitation on the various embodiments.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

In at least one embodiment a set of search requests e.g. a set of historical search requests may be analyzed to detect fixed phrases suitable for inclusion in a search index e.g. an index of a collection of content and or for parsing from further search requests. For the purposes of this description it will be helpful to distinguish between a single word utilized to index content in the search index hereinafter keyword and a plurality of words in a particular order utilized to index content in the search index distinct from keywords hereinafter fixed phrase . For example Newton and Baker may be keywords in the search index and Newton Baker a fixed phrase while Baker Newton would be considered a distinct fixed phrase if added to the search index. In the example of the matrix associating search terms with content in the collection each keyword and each fixed phrase may correspond to a distinct row of relevance scores with respect to items of content in the collection. Keywords and fixed phrases included in the search index indexed keywords and indexed fixed phrases may be targeted in particular for parsing from search requests. Furthermore relevance scores may have a searcher feedback component. For example searcher interaction with items of content e.g. accessing the items responsive to search requests including particular fixed phrases may increase associated relevance scores.

A set of candidate phrases may be identified in the set of search requests and grouped by phrase length i.e. number of words . For example the raw search query strings may be processed to remove stop words logical operators and so on. Statistically significant phrases may be detected among the candidates of each group and added to the search index as fixed phrases. For example a candidate phrase having a pointwise mutual information with respect to its component words that is greater than a threshold may be detected as statistically significant relative to the candidates of a particular group. The threshold may be determined for each set of candidate phrases and or each group. For example the threshold may be based on a greatest pointwise mutual information for the set and an exponential model.

In at least one embodiment fixed phrase detection may be further enhanced by first clustering keywords with respect to the collection of content. For example a latent Dirichlet allocation LDA may be utilized to cluster the keywords into a specified number of topics defined by the keywords that they cluster . Such topics may be referred to herein as automatically allocated topics unsupervised topics and or LDA topics to distinguish them from categories and or groups into which keywords are manually placed and or allocated. Sets of candidate phrases candidate phrase clusters may then be identified with respect to the clusters. For example a particular candidate phrase may be considered in a particular cluster if each of its component keywords is in the cluster. Statistically significant phrases may be then be detected with respect to the candidate phrase clusters and added to the search index as fixed phrases. In at least one embodiment such detection of fixed phrases with respect to clusters may significantly enhance a user search experience for example by returning more relevant results.

Various approaches may be implemented in various environments for various applications. For example illustrates an example of an environment for implementing aspects in accordance with various embodiments. As will be appreciated although a Web based environment may be utilized for purposes of explanation different environments may be utilized as appropriate to implement various embodiments. The environment shown includes both a testing or a development portion or side and a production portion. The production portion includes an electronic client device which may include any appropriate device operable to send and receive requests messages or information over an appropriate network and convey information back to a user of the device . Examples of such client devices include personal computers cell phones handheld messaging devices laptop computers set top boxes personal data assistants electronic book readers and the like. The network may include any appropriate network including an intranet the Internet a cellular network a local area network a wide area network a wireless data network or any other such network or combination thereof. Components utilized for such a system may depend at least in part upon the type of network and or environment selected. Protocols and components for communicating via such a network are well known and will not be discussed herein in detail. Communication over the network may be enabled by wired or wireless connections and combinations thereof. In this example the network includes the Internet as the environment includes a Web server for receiving requests and serving content in response thereto although for other networks an alternative device serving a similar purpose could be utilized as would be apparent to one of ordinary skill in the art.

The illustrative environment includes at least one application server and a data store . It should be understood that there may be several application servers layers or other elements processes or components which may be chained or otherwise configured which may interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term data store refers to any device or combination of devices capable of storing accessing and or retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment. The application server may include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device and may even handle a majority of the data access and business logic for an application. The application server provides access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the Web server in the form of HTML XML or another appropriate structured language in this example. The handling of all requests and responses as well as the delivery of content between the client device and the application server may be handled by the Web server . It should be understood that the Web and application servers are not required and are merely example components as structured code discussed herein may be executed on any appropriate device or host machine as discussed elsewhere herein. Further the environment may be architected in such a way that a test automation framework may be provided as a service to which a user or application may subscribe. A test automation framework may be provided as an implementation of any of the various testing patterns discussed herein although various other implementations may be utilized as well as discussed or suggested herein.

The environment may also include a development and or testing side which includes a user device allowing a user such as a developer data administrator or tester to access the system. The user device may be any appropriate device or machine such as is described above with respect to the client device . The environment may also include a development server which functions similar to the application server but typically runs code during development and testing before the code is deployed and executed on the production side and becomes accessible to outside users for example. In some embodiments an application server may function as a development server and separate production and testing storage may not be utilized.

The data store may include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect. For example the data store illustrated includes mechanisms for storing production data and user information which may be utilized to serve content for the production side. The data store also is shown to include a mechanism for storing testing data which may be utilized with the user information for the testing side. It should be understood that there may be many other aspects that are stored in the data store such as for page image information and access right information which may be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server or development server and obtain update or otherwise process data in response thereto. In one example a user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and may access the catalog detail information to obtain information about items of that type. The information then may be returned to the user such as in a results listing on a Web page that the user is able to view via a browser on the user device . Information for a particular item of interest may be viewed in a dedicated page or window of the browser.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable medium storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

It will be helpful to have reference to an example system in accordance with at least one embodiment. depicts aspects of an example computerized system in accordance with at least one embodiment. The system may include a data store an index maintenance module a fixed phrase detector and a search module . The data store may include a collection of content a content index utilized by the search module to search the collection of content and a search history . The index maintenance module may include a search history analysis module that utilizes and or is utilized by the fixed phrase detector to analyze the search history and facilitate maintenance of the content index . The search module may include a search user interface UI module capable of facilitating user interaction with the system . The search module may utilize the fixed phrase detector to detect fixed phrases for example in search requests. The arrows between the modules in indicate that the modules are communicatively coupled for example by a communication network with a computer and or between a plurality of computers such as the servers of . For example the search module may be hosted and or implemented at least in part by the application server the data store may incorporate and or be incorporated at least in part by the data store the index maintenance module may be hosted and or implemented at least in part by the development server and the fixed phrase detector may be hosted and or implemented at least in part by the application server and or the development server .

The collection of content may include any suitable items of content. Examples of suitable items of content include electronic records data structures data objects representations including representations of goods such as physical goods and commercial goods and representations of services such as commercial services documents document collections and suitable combinations thereof. The content index may index the collection of content . For example the content index may include one or more data structures collectively corresponding to a relevance matrix associating keywords and fixed phrases e.g. each row may correspond to a particular keyword or fixed phrase with content in the collection e.g. each column may correspond to a particular item of content in the collection with each position in the matrix including a relevance score quantifying a relevance of the key word or fixed phrase for the item of content. As will be apparent to one of skill in the art a variety of conventional data structures may be utilized in this role and further details of such data structures need not be described herein. The relevance matrix may be implemented and or represented by any suitable such data structure and references to the reference matrix below are to be understood as also referencing the data structure s .

The search UI module may provide information from the search module for presentation. For example the search UI module may generate a search user interface UI presentation specification and provide the specification to the client device through the network . The search UI module may specify the search UI presentation with any suitable presentation specification language including suitable hypertext markup languages e.g. HTML and suitable programming and or scripting languages e.g. JavaScript . The search UI module may receive information responsive to the search UI presentation. For example the search UI module may receive search requests including one or more search terms from the client device . The search UI module may process received requests and activate associated search module functionality in response.

A search request may include a string of text a search string for example a string of characters in accordance with a Unicode standard such as The Unicode Standard Version 5.0 5th Edition authored by The Unicode Consortium and published by Addison Wesley Professional on Nov. 19 2006. The search module may identify one or more keywords and or fixed phrases in the string of the search request. The search module may identify fixed phrases in the string of the search request based at least in part on inclusion of the fixed phrases in the content index and or utilizing a parsing interface e.g. a programmatic interface of the fixed phrase detector . The search module may then utilize the content index to identify items of content in the collection having a relatively high relevance score with respect to the identified keywords and or fixed phrases. For example the search module may perform any suitable matrix operation and or equivalent operation to lookup relevance scores for content in the collection indexed by keywords and or fixed phrases. The search module may determine a search result set for the identified keywords and or fixed phrases. For example the search result set may include a set of items of content in the collection having a relevance score above a relevance score threshold and or ranked according to relevance score. The search result set or a reference thereto may be provided to the search UI module which may format the search result set for presentation to the user and or searcher.

Details of each search request handled by the search module may be recorded in the search history . In particular the search module may record the search string search terms keywords and or fixed phrases included in search requests along with any suitable metadata including for example a timestamp corresponding to a time and or a date that the search request was received by the search module . In at least one embodiment duplicate search requests are not removed and or at least duplicates are counted and or otherwise suitably summarized.

The index maintenance module may establish and or maintain the content index . For example the index maintenance module may utilize the search history analysis module to analyze the search history to identify keywords and fixed phrases suitable for inclusion in the content index . The index maintenance module may determine relevance scores for each identified keyword and or fixed phrase with respect to content in the collection . The search history analysis module may perform any suitable analysis on the search history . Examples of suitable analysis operations include counting summarizing determining distributions such as statistical distributions of keywords and or fixed phrases and probability distributions of keywords and or fixed phrases and suitable combinations thereof. As described below in more detail the fixed phrase detector may detect fixed phrases in the search history that are suitable for inclusion in the content index .

The description now turns to example steps that may be performed in accordance with at least one embodiment. depicts example steps for facilitating a search in accordance with at least one embodiment. At step search terms may be clustered. For example the fixed phrase detector of may cluster search terms in the search history with respect to the collection of content . Any suitable search term clustering technique may be utilized at step . The search terms may be clustered automatically algorithmically and or independent of human supervision i.e. utilizing an unsupervised clustering technique . For example the search terms may be allocated to topics in accordance with an LDA procedure and or as described below in more detail with reference to . Alternatively search terms in the search history may be clustered into a single cluster with respect to the collection of content. As a further alternative or in addition the collection of content may be categorized in accordance with a content category hierarchy and the search terms may be clustered with respect to categories categorizing content of the collection having relatively high relevance with respect to the search terms e.g. having a relevance score above a threshold .

At step a next e.g. a first cluster of search terms may be selected for processing. At step one or more fixed phrases may be detected in the selected cluster. For example the fixed phrase detector may identify statistically significant phrases among phrases having their component search terms in the selected cluster. Any suitable statistical test may be utilized to identify such statistically significant phrases. For example a phrase having a pointwise mutual information with respect to its component words above a threshold may be identified as statistically significant. An example of fixed phrase detection in accordance with at least one embodiment is described in more detail below with reference to . At step it may be determined whether each of the clusters identified at step have been processed for example at step . If there are more clusters to process a procedure incorporating step may progress to step . Otherwise the procedure may progress to step .

At step one or more relevance scores may be updated. For example the index maintenance module may determine a relevance score for each item of content in the collection with respect to each fixed phrase detected at step and update the content index for example by adding new rows to the relevance matrix corresponding to each detected fixed phrase. At step a search request may be received. For example the search module may receive the search request from the client device of . At step search results may be provided. For example the search module may provide search results responsive to the search request as described above with reference to .

When associating search terms to clusters at step a particular search term may be associated with more than one cluster. For example an associative measure between the search term and each topic may be determined with an LDA procedure. However in at least one embodiment each search term is allocated to no more than one cluster. It will be helpful to have reference to an example in which each keyword is allocated to no more than one topic. depicts example steps for associating keywords with topics in accordance with at least one embodiment.

At step a set of keywords may be determined. For example the search history analysis module may identify search terms and or keywords in the search history . As a part of step the search history analysis module may extract the identified search terms and or keywords from the search history for further analysis. At step a number of topics may be specified. For example the fixed phrase detector may be configured to specify the number of topics e.g. on the order of hundreds or thousands for the LDA procedure. At step an allocation of keywords into topics with respect to the collection of content may be performed in accordance with the LDA procedure. For example the fixed phrase detector may determine an associative measure between each keyword in the set determined at step and each of the number of topics specified at step in accordance with the LDA procedure. The LDA procedure may allocate keywords to topics with respect to one or more query strings in the search history and or with respect to one or more items of content such as documents and content metadata including text strings in the collection . Any suitable LDA procedure or portion thereof may be incorporated into step . Examples of suitable LDA procedures include procedures described in Blei et al Latent Dirichlet Allocation Journal of Machine Learning Research March 2003.

At step a next e.g. a first keyword of the set determined at step may be selected. At step a best topic for the keyword may be determined. For example the search history analysis module may select one of the topics having a highest associative measure with respect to the keyword as the best topic. The best topic determination may be with respect to the LDA procedure performed at step for example with respect to the one or more query strings and or items of content. At step it may be determined whether there are more keywords in the set for which to determine a best topic. If there are more keywords in the set a procedure incorporating step may progress to step . Otherwise the procedure may progress to a step not shown in for example step of .

Associating keywords to topics may be considered as clustering the keywords by topic. A particular phrase may be considered in a particular cluster if each of the component keywords of the phrase is in the cluster. Alternatively the phrase may be considered in the cluster if at least one of its component keywords is in the cluster. In at least one embodiment fixed phrases are detected with respect to keyword clusters. However in at least one embodiment there is a single keyword cluster for each collection of content such as the collection of content of . depicts example steps for detecting fixed phrases in accordance with at least one embodiment.

At step a set of candidate phrases may be identified. For example the fixed phrase detector may identify each phrase in a particular cluster as part of the set of candidate phrases. In at least one embodiment the set of candidate phrases may be selected so that it contains phrases having a particular length and or a length less than a threshold phrase length. At step a next e.g. a first candidate phrase may be selected. At step a measure of pointwise mutual information PMI may be determined for the selected candidate phrase. For example the fixed phrase detector may determine a normalized pointwise mutual information score for the selected candidate phrase with respect to its component keywords among candidate phrases of a same length. A more detailed example will be helpful.

Suppose the selected candidate phrase is Newton Baker and that each of Newton and Baker is an identified keyword belonging to a first topic T1. It will be helpful to denote these keywords as Newton T1 and Baker T1 to distinguish them from same keywords identified as belonging to different topics. For example the keyword Newton in the search phrase Isaac Newton might be identified as belonging to a second topic T2 and be denoted Newton T2 . The fixed phrase detector may determine a first count n x y for a number of occurrences of the phrase Newton Baker in the search history . The fixed phrase detector may further determine a second count n x for the number of phrases like Newton T1 K in the search history where K is any identified keyword. Still further the fixed phrase detector may determine a third count n y for the number of phrases like K Baker T1 in the search history where again K is any identified keyword. The fixed phrase detector may then determine the normalized pointwise mutual information score based at least in part on the first count n x y the second count n x and the third count n y . For example the normalized pointwise mutual information score may be based at least in part on a ratio of the first count n x y to a product of the second count n x and the third count n y and or any suitable conventional measure of pointwise mutual information.

In at least one embodiment the normalized pointwise mutual information score may alternately be based at least in part on weighted versions m x y m x and m y of the first count n x y the second count n x and the third count n y respectively. For example the weighted versions m x y m x m y of the counts n x y n x n y may be determined as a product of the counts n x y n x n y and weights k x y k x k y respectively. The weights k x y k x k y may be any suitable weights and or in accordance with any suitable weighting scheme. For example each contributor to the counts n x y n x n y may be associated with an age e.g. a difference in time between a time of occurrence of the contributor and a current time and the weights k x y k x k y may be based at least in part on an age profile of contributors to the respective counts n x y n x n y . In at least one embodiment the weight of each contributor to the counts n x y n x n y decays exponentially with respect to age. For example contributors having an age less than an age threshold may contribute a full count whereas older contributors may contribute a decayed count having a value diminished from the full count according to a relevance half life. To continue the example if the relevance half life was set to be 1 month a contributing event such as a search request with an age of 1 month would be weighted so as to contribute a half count to the appropriate one or more of the weighted versions m x y x m y of the counts n x y n x n y .

At step it may be determined if there are more candidate phrases for which to determine a pointwise mutual information measure. If there are more candidate phrases a procedure incorporating step may progress to step . Otherwise the procedure may progress to step .

At step a maximum pointwise mutual information score may be determined. For example the fixed phrase detector may identify a greatest one of the pointwise mutual information scores determined at step for the candidate phrases of the cluster. At step a pointwise mutual information threshold or fixed phrase threshold may be determined. The fixed phrase detector may determine the fixed phrase threshold based at least in part on the maximum pointwise mutual information score determined at step . For example the fixed phrase detector may determine the fixed phrase threshold based at least in part on a specified fraction of the maximum pointwise mutual information score. In at least one embodiment the fixed phrase threshold may be further based at least in part on a model of exponential decay from the maximum pointwise mutual information score. For example the pointwise mutual information scores of the set of candidate phrases identified at step when sorted from greatest to least may be assumed to conform to an exponential decay curve. The fixed phrase threshold PMImay then be calculated according to a formula such as exp where PMIis the maximum pointwise mutual information score determined at step exp is the conventional exponential function k is an empirically determined curve fitting constant and is a decay constant e.g. in the range 2 3 chosen depending on a desired quantity of detected fixed phrases.

At step one or more of the candidate phrases having a determined pointwise mutual information score greater than the fixed phrase threshold may be selected as fixed phrases. For example the fixed phrase detector may compare each of the set of candidate phrases identified at step with the fixed phrase threshold determined at step . Alternatively or in addition the fixed phrase detector may at least partially sort the set of candidate phrases based at least in part on the pointwise mutual information scores determined at step before identifying a subset of the set of candidate phrases as fixed phrases based at least in part on the fixed phrase threshold.

Example steps for facilitating a search in accordance with at least one embodiment were described above with reference to . Some of the steps depicted in may be relatively remote in time from others of the steps. For example the clustering step the detecting step and the step updating relevance scores may occur during a build mode of search engine operation e.g. as part of building the content index of while the receiving step and the providing step may occur during a live mode of search engine operation e.g. as part of servicing search requests by the search module . Build and live modes of search engine operation may occur concurrently however the search module may restrict itself to old and or stable versions of the content index while the content index is being updated and or undergoing a build process. The content index may be updated regularly e.g. periodically and or as scheduled . Furthermore a particular content index update may take into account detected searcher behavior such as content interactions since a previous content index update. depicts example steps for further facilitating searches in accordance with at least one embodiment.

At step a search request may be received for example at the search module of . At step search results based at least in part on the search request received at step may be provided. For example steps and may correspond to steps and respectively of . At step interaction with content at least referenced by the search results provided at step may be detected. For example the search results provided at step may be provided to the client device of . A user of the client device may interact with one or more portions of the provided search results at least referencing content of the collection and the client device may notify the search module of the interaction s . Any suitable search result and or content interactions may be detected. For example interactions suitable for detection may include indications of interest in one or more portions of the provided search results with an input device of the client device such as moving a display pointer over or near a search result portion and selecting a search result portion as well as accessing and or viewing content at least referenced by the provided search results.

At step search history may be updated. For example the search history of may be updated with the search request received at step the search results provided at step the content interaction s detected at step and or summaries characterizations combinations and sub combinations thereof. At step one or more fixed phrases may be detected. For example the search history analysis module may utilize the fixed phrase detector as described above with reference to and to detect fixed phrases in the search history . Alternatively or in addition the search module may detect fixed phrases in search requests for example utilizing the fixed phrase detector and record them as fixed phrases in the search history for example utilizing suitable indicia.

At step one or more relevance scores may be updated. For example the index maintenance module may update relevance score s of fixed phrases detected at step for content for which interactions were detected at step . In at least one embodiment detection of one or more of a set of types of interaction with content at least referenced by search results provided in response to a search request including a particular fixed phrase is an indication that the fixed phrase is relevant with respect to the content. Such an indication may result in a higher relevance score for the fixed phrase with respect to the content. Steps and may occur during a build mode of search engine operation. Alternatively or in addition step may occurring during a live mode of search engine operation and or responsive to detection of content interaction s at step . Relevance scores may be updated based at least in part on interaction statistics summarizing interactions by multiple searchers with respect to fixed phrases and or items of content. For example a click count may be determined for each fixed phrase and item of content pair corresponding to a count of occurrences of at least a reference to the item of content being selected from search results provided responsive to search requests including the fixed phrase.

The various embodiments described herein may be implemented in a wide variety of operating environments which in some cases may include one or more user computers computing devices or processing devices which may be utilized to operate any of a number of applications. User or client devices may include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also may include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also may include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. Such a network may include for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof. The network may furthermore incorporate any suitable network topology. Examples of suitable network topologies include but are not limited to simple point to point star topology self organizing peer to peer topologies and combinations thereof.

In embodiments utilizing a Web server the Web server may run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers. Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Peri Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment may include a variety of data stores and other memory and storage media as discussed above. These may reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device may include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also may include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader may be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules including program modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be utilized and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code may include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which may be utilized to store the desired information and which may be accessed by the a system device. Program modules program components and or programmatic objects may include computer readable and or computer executable instructions of and or corresponding to any suitable computer programming language. In at least one embodiment each computer readable medium may be tangible. In at least one embodiment each computer readable medium may be non transitory in time. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

The use of the terms a and an and the and similar referents in the context of describing embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments and does not pose a limitation on the scope unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of at least one embodiment.

Preferred embodiments are described herein including the best mode known to the inventors. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for embodiments to be constructed otherwise than as specifically described herein. Accordingly suitable embodiments include all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is contemplated as being incorporated into some suitable embodiment unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

