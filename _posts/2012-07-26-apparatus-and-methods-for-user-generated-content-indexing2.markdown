---

title: Apparatus and methods for user generated content indexing
abstract: A method and client device is disclosed for indexing content of a multimedia file. The method comprises using a client device to segment the content of the multimedia file into a plurality of segments and to determine structure-searchable data for each segment. Determining structure searchable data for a segment comprises (1) identifying one or more features of respective multimedia types in the segment; (2) correlating each of the identified features to one or more respective keywords; and (3) calculating one or more respective relevance factors for each of the keywords, where at least one of the relevance factors is based on one or more characteristics of the client device. The method also comprises the client device transmitting the structure-searchable data (including the keywords, relevance factors, and respective media types of the identified features) to an indexing server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09633015&OS=09633015&RS=09633015
owner: Telefonaktiebolaget LM Ericsson (PUBL)
number: 09633015
owner_city: Stockholm
owner_country: SE
publication_date: 20120726
---
Embodiments relate generally to digital search techniques and more specifically to indexing of multimedia content.

As the available amount of multimedia content grows so does the need for effective search and retrieval systems. Search and retrieval systems search engines typically operate by receiving e.g. from a user a textual query of terms and or phrases. The search engine compares the search terms keywords against a body of searchable content and returns an indication of the most relevant items in that content. The classic example of a search engine is an Internet search engine that uses user provided keywords to find relevant web pages and returns a listing of the most relevant ones.

As the amount of digital data increases search engines are being deployed not only for Internet search but also for proprietary personal or special purpose databases such as personal multimedia archives user generated content sites proprietary data stores workplace databases and others. For example personal computers may host search engines to find content on the entire computer or in special purpose archives e.g. personal music or video collection . User generated content sites which host multimedia and or other types of content may provide custom search functionality tailored to that type of content.

To facilitate efficient search and retrieval search engines typically pre process content by creating indices. Once created indices allow a search engine to map search terms to relevant content without need to rescan all of the content on each search. Therefore the quality of search results is heavily dependent on the quality of the index generated. Accordingly more effective techniques for generating accurate search indices are needed.

A method is disclosed for indexing content of a multimedia file. The method comprises using a client device to segment the content of the multimedia file into a plurality of segments and to determine structure searchable data for each segment. Determining structure searchable data for a segment comprises 1 identifying one or more features of respective multimedia types in the segment 2 correlating each of the identified features to one or more respective keywords and 3 calculating one or more respective relevance factors for each of the keywords where at least one of the relevance factors is based on one or more characteristics of the client device. The method also comprises the client device transmitting the structure searchable data including the keywords relevance factors and respective media types of the identified features to an indexing server. In some embodiments the client device may transmit the multimedia file in response to receiving a request from the indexing server.

In some embodiments the one or more characteristics of the client device may comprise at least one of a content of one or more other multimedia files stored on the client device b a type of the client device and c a user specified relevance of the client device. In some embodiments the one or more relevance factors may comprise a degree of confidence that a given keyword describes the one or more features that were correlated with that keyword.

In some embodiments transmitting the structure searchable data to the indexing server may further comprise transmitting data usable by the indexing server to identify a group of devices to which the client device has been registered.

Also disclosed is a client device for indexing content of a multimedia file. The client device comprises a computer processor and a memory that is coupled to the processor and stores program instructions executable by the processor to implement 1 segmenting the content of the multimedia file into a plurality of segments 2 determining structure searchable data for each segment and 3 transmitting the structure searchable data to an indexing server. The step of determining structure searchable data comprises a identifying one or more features of respective multimedia types in the segment b correlating each of the identified features to one or more respective keywords and c calculating one or more respective relevance factors for each of the keywords where at least one of the relevance factors is based on one or more characteristics of the client device. The structure searchable data transmitted to the indexing server includes the keywords relevance factors and respective media types of the identified features.

Also disclosed is a method for creating a content index of multimedia content. The method comprises receiving by an indexing server structure searchable data from a plurality of remote client devices where the structure searchable data describes content of multimedia files stored on the remote client devices. For each of the client devices the indexing server 1 identifies a respective client device group to which the client device has been registered and 2 updates a content index of the client device group using the structure searchable data received from the client device. The updating is dependent on a weighting scheme specific to the client device group. In some embodiments the weighting scheme comprises applying respective weights to content features of different multimedia types.

In some embodiments the updating is also dependent on one or more relevance factors received in the structure searchable data where at least one of the relevance factors is based on 1 one or more characteristics of the client device or 2 a measure of confidence that a given keyword describes one or more features correlated with that keyword in the structure searchable data.

In some embodiments the one or more characteristics of the client device corresponds to at least one of a content of one or more other multimedia files stored on the client device b a type of the client device and c a user specified weight for the client device.

In some embodiments the method may further comprise responding to a content query received by the indexing server from one of the remote client devices. In some embodiments the indexing server may respond by 1 determining that the remote client device is a member of the device group 2 determining a content index corresponding to the client device group and 3 using the determined content index to identify one or more portions of the content responsive to the content query.

Also disclosed is an indexing server for indexing content of a multimedia file. The indexing server comprises a computer processor and a memory that is coupled to the processor and stores program instructions executable by the processor to implement 1 receiving structure searchable data from a plurality of client devices where the structure searchable data describes content of multimedia files stored on the client devices and 2 for each of the client devices a identifying a respective client device group to which the client device has been registered and b updating a content index of the client device group using the structure searchable data received from the client device where the updating is dependent on a weighting scheme specific to the client device group.

In recent years there has been a proliferation of client devices capable of capturing and or storing multimedia content. Such client devices include smartphones tablet computers laptop computers digital cameras and other computing devices. The proliferation of such client devices has created a new content environment where an ever growing share of the content is multimedia and such content is stored remotely on distributed client devices.

In the new content environment traditional search and retrieval techniques are inadequate. First traditional indexing techniques are ill suited for indexing multimedia content. Having been developed for textual content search traditional search engines often index only textual metadata such as filenames or associated text and ignore the actual content stored in multimedia files. Such an approach is inherently limited because it considers only secondary indicators and ignores primary content.

Second search and retrieval techniques have not been adequately adapted to leverage an environment where content is created by and stored on distributed end user client devices. Although traditional indexing techniques might consider metadata associated with multimedia files e.g. Global Positioning System GPS information filename etc. they largely overlook the potential of metadata that could be associated with the client device used to capture and or store the multimedia files.

According to various embodiments a search engine may be configured to facilitate effective search and retrieval functionality in the new content environment where distributed client devices create and or store multimedia content. Some embodiments of the systems and techniques disclosed herein may address or more of the shortcomings discussed above by building a search index based on primary content of multimedia files and or utilizing device specific data to determine content relevance.

In some embodiments indexing software is provided and may comprise a client software component for execution on client devices e.g. cameras laptops smartphones etc. and a server software component for execution on an indexing server. The client software component may be configured to automatically detect multimedia content created or otherwise obtained by the client device on which the client software component runs and to analyze that content. In some embodiments the analysis may depend on characteristics of the client device such as the device s type the content stored on and or previously created using the device and or on one or more user specified settings. The client software component may report the content and analysis results to the server software component which adds the results to a content index.

In some embodiments the server software component may maintain a separate content index for different groups of devices. For example members of a family may register their respective client devices with the server as a single group. The server may be configured to maintain a separate index for that group of devices and to allow members of the family to query the group s index. Thus the family members may query and discover content across their respective client devices.

The client device groupings may be formed logically by registering various client devices with an indexing service e.g. implemented on indexing server . For instance a family that wishes to share a content index for content stored on their multiple client devices may have registered the three client devices in logical group . In the illustrated embodiment device group includes a laptop computer a desktop computer and a smartphone . A device group may include any number of client devices capable of storing multimedia files and accessing network . Furthermore any number of client device groups is possible.

Each client device in groups may execute an indexing client application or indexing client for short see which may execute in the background and or be invoked on demand. The indexing client may monitor the client device for new and or modified multimedia files. In response to finding a new or modified file the indexing client may analyze the content of the multimedia file and report its analysis to the indexing server . For example when a new picture is loaded onto the personal computer in group the indexing client executing on personal computer may detect the new picture analyze it to identify various features and send the analysis results over network to indexing server . The analysis results and detailed methods for performing the analysis are discussed below in relation to .

Network may correspond to any type or combination of communication networks including local area networks wide area networks wireless networks cellular networks etc. Without loss of generality network may be described herein as the Internet.

Indexing server may correspond to any number or type of computers usable to execute the indexing server component. For instance indexing server may correspond to a single computer a cluster of computers a distributed architecture and or any other hardware configuration usable to implement the indexing functionality described herein.

Software executing on indexing server may maintain a logically separate index for each group of devices. That is when indexing server receives content analysis from a device in group the indexing server may update only the index corresponding to device group . Similarly when indexing server receives a query for content from a client device in group the indexing server may satisfy the query using the index corresponding to that group i.e. not using an index corresponding to another group .

According to the illustrated embodiment client device includes one or more content obtaining applications which are usable to create or otherwise obtain multimedia content . Multimedia content may include pictures movies audio recordings or any other type of multimedia files. Content obtaining software may include any programs or applications for creating multimedia content e.g. picture software movie software hardware drivers etc. or for otherwise obtaining multimedia content e.g. web browser with which multimedia files may be downloaded driver software for a hardware device through which multimedia files may be received etc. .

Client device may also include indexing client which may facilitate the indexing of content on indexing server . In various embodiments indexing client may be configured to monitor content for changes e.g. new files modified files etc. to analyze the new updated content and to report the analysis results to indexing server through a network interface such as . Network interface may include any networking software and or hardware that enables indexing client to communicate with a remote indexing server over a network.

In some embodiments the analysis results sent to the indexing server may comprise structure searchable data SSD as described herein. Among other types of information SSD may include device specific weight parameters which may be based on the device type on content on user specified parameters and or on other types of device specific information.

According to the illustrated embodiment indexing server includes a network interface which enables the server to communicate with client devices such as over a network.

Indexing server may include server logic which may be configured to receive requests from client devices and to service those requests. For example server logic may include a web server web application server web application s and or any number of other remote service components. To accept requests from client devices server logic may expose various interfaces such as various web services and or other programmatic APIs that may be invoked by indexing client .

In response to receiving a request for service server logic may invoke one or more backend components such as query logic indexing logic and content index . In various embodiments backend components may be implemented as part of one or more web applications as separate libraries and or as any other combination of software.

In the illustrated embodiment indexing server includes indexing logic which may be configured to analyze SSD received from indexing clients e.g. executing on one or more remote devices. In response to receiving SSD from a given device indexing logic may determine the group to which the device belongs and identify group specific indexing parameters as described herein. Indexing logic may then use the group specific indexing parameters and received SSD to update content index . In some embodiments the group specific weight parameters may include group specific weights for different feature types in the multimedia content.

Indexing server may include query logic which may be configured to query content index in response to client requests. For example server logic may receive a query for content from client . The query may specify various parameters describing the content such as one or more keywords. In response to receiving the query server logic may invoke query logic . Query logic may respond by querying content index to discover content that best matches the client s query. In response to identifying the most appropriate content query logic may notify server logic of the content and sever logic may forward indications of the content back to the client device. A method for servicing a client query e.g. locating and returning an indication of content responsive to the query is discussed below in relation to .

In various embodiments content index may be implemented in many forms. For example content index may be implemented as one or more files one or more file systems as one or more databases as in memory objects that are periodically written back to persistent storage and or any other index implementation.

The components of client device and indexing server are broken out logically in for explanatory purposes. In various implementations however functionality of different components may be broken down further and or combined. It is intended that this disclosure cover all such embodiments.

According to indexing method begins in when one or more users register devices with the indexing service. For each device registration step may include downloading indexing client onto the client device and or installing the indexing client onto the client device . In some embodiments registration step may comprise creating authentication credentials e.g. username password specifying a group of devices to which the device belongs and or other setup steps.

Device groups correspond to groups of devices whose owners wish to share content stored on those devices. For instance members of a family may register their devices as one group in order to share pictures stored on those devices. To enable sharing and searching of content across multiple devices in a group the indexing server may create a logically separate index for the content in each group. One or more users of devices in the group may set group specific indexing parameters to guide the indexing logic e.g. in creating and maintaining the group s index.

In step the indexing client discovers new or updated multimedia files such as picture or movie files. In some embodiments the indexing client may be configured to search periodically or on demand one or more storage locations e.g. file system directories for new or recently updated files. A new or updated file may correspond to a file that has been created stored modified after the client s most recent report to the indexing server.

In indexing client analyzes the content of the new updated files to create structure searchable data SSD . As used herein the term structure searchable data corresponds to data that identifies various features in a piece of multimedia content. The term feature refers to any identifiable aspect of the content that can be used to index the content and thereby to determine the relevance of the content to a user query. Examples of features may include particular images sounds text voices or other features present in the content.

In many embodiments described herein SSD also includes respective keywords associated with each identified feature and device specific indexing parameters. Device specific indexing parameters may affect the way in which the server s indexing logic uses the SSD to update the device group s index. For example in various embodiments the SSD may specify one or more device specific weights. An example of a method for creating SSD is described in more detail with relation to .

In step the indexing client sends the SSD to the indexing server for incorporation into the device group s index. Subsequent steps and may therefore be performed by indexing server e.g. using indexing logic .

In indexing server analyzes the SSD to determine the relevance of various keywords to the features identified in the SSD. In some embodiments the SSD already indicates the keywords and the features and or feature types with which each keyword was associated. In such embodiments the server need only determine the relevance of each keyword to the content containing the associated features. In some embodiments the relevance determination step of may depend on device specific parameters and or on group specific parameters. A detailed method for determining relevance of keywords is discussed with relation to .

In the indexing server updates the device group s content index to reflect the received SSD data and relevance determinations. Thus method is operable to create and update a content index which can later be used to query distributed content.

Method begins when indexing client discovers a new or updated multimedia file as in . As described above indexing client may be configured to monitor a given directory for new updated files and or may be invoked manually. For purposes of explanation the multimedia file in the examples below is a movie file. However it should be noted that the techniques described herein are applicable to any multimedia file.

In the indexing client extracts metadata from the file. Such file metadata may include date time location file name user generated tags and or other secondary indicia of the content s subject matter.

In the multimedia file is segmented. For example the file may be segmented e.g. by time scene etc. into multiple time frames. In such embodiments the time frames may be of a predefined length i.e. static or of a length that varies depending on file attributes i.e. dynamic . The length of a dynamic time frame may be vary depending on different attributes such as the overall length of the movie the number of features identified in each segment degree of feature change and or other characteristics. For example a movie file may be segmented into contiguous segments such that there is at least a minimum degree of difference between the features of each segment. Dynamic segmentation may also combine various criteria e.g. minimum degree of difference and minimum length .

For each segment of the file the indexing client executes steps . In the indexing client analyzes the segment to identify features that appear in the segment. As noted above the term feature may refer to any recognizable pattern within the file s content that can be associated with a keyword. A feature may be of any of various media types such as a visual feature e.g. image of a bird an audio feature e.g. call of the bird a textual feature e.g. image text describing the bird a voice feature e.g. narration describing the bird or others.

In the indexing client identifies keywords associated with the features identified in . For example if an identified feature is an image of a pelican the feature may be associated with the keywords pelican bird animal beak and or other keywords.

To identify features as in and associate those features with keywords as in the indexing client may employ various artificial intelligence techniques including image recognition face recognition voice recognition sound recognition pattern recognition and or other techniques. Many such techniques are known in the art and any combination of such known and or future techniques may be utilized. For example video shot segmentation may be performed using known digital video retrieval techniques. In some embodiments keywords associated with those features may be determined using known machine learning techniques such as support vector machines SVM and or statistical approaches such as hidden markov models HMM and Bayesian Belief Networks BBNs . In some embodiments Audio feature detection may be performed by known voice recognition techniques.

Once all the features in the segment have been identified and associated with one or more respective keywords the indexing client may evaluate each keyword to determine relevance factors and to create an SSD entry for the keyword segment combination. The iteration over each keyword associated with the segment is indicated by the dashed box.

In the indexing client determines one or more relevance factors for the keyword. The particular relevance factors may vary across embodiments. For instance in some embodiments the relevance factors of may include an indication of the types of features e.g. image text voice sound etc. with which the keyword was associated in .

In some embodiments the relevance factors may include a prominence score indicating how prominently the features associated with the keyword are present in the segment. Such a prominence score may be based on any number of factors such as duration of a feature whether a feature appeared in the foreground or background and or others.

In some embodiments the relevance factors determined in may include a confidence interval i.e. degree of confidence indicating how strongly the keyword is correlated with the associated features. For example the confidence interval may be expressed as a faction between 0 and 1. When a manual scan or automatic algorithm indicates the utmost confidence that the keyword can be associated with its respective features the confidence interval may be 1. A scan or algorithm with lower confidence may indicate a confidence interval of 0.5 and so forth.

In some embodiments the relevance factors determined in may be based on one or more characteristics of the client device i.e. device specific characteristics . Such device specific characteristic may dependent on any number of factors such as the type of device user specified device weights other content stored on the device and or others. For instance the indexing client may determine a factor based on device type by attaching higher weight to pictures taken by cameras than to pictures taken by laptops. In another example the indexing client may determine a factor based on user specified weights by allowing users to set the overall importance of media stored on the given device or of a given type of media stored on the given device.

In some embodiments the indexing client may calculate a device specific relevance factor for a given keyword based on other content stored on the client device . For instance the indexing client may track the features and keywords associated with other content stored on and or created by the client device . The indexing client may then assign greater weight to keywords and or features that are frequently associated with other content on the same device. For example if a particular camera stores many pictures of its owner s son Olle it is more likely that new pictures found on the device will also be of Olle. Accordingly when the indexing client on the device associates the keyword Olle with a new picture the client may recognize that the keyword is also associated with many other pictures on the device and in response attach a high device specific weight to the particular keyword.

In the indexing client records the SSD data for the keyword segment combination in an SSD data structure. In some embodiments described herein the SSD data structure for a keyword segment combination is an entry in an SSD table as illustrated in . However it should be recognized that the SSD table is exemplary only and that the same data can be stored in other configurations in other embodiments.

In the illustrated embodiment each row of the SSD table represents a respective entry corresponding to a given keyword segment combination. The indexing client may record such an entry in step of method . In various embodiments the indexing client may send each row separately or may optimize the transmission by sending a collection of rows together and omitting redundant data.

Each SSD entry in table includes fifteen fields. Fields contain metadata of the file from which the SSD was derived. The indexing client may have gathered such data from the file in step of method . In the illustrated example the metadata includes the name of the file the date at which the file was created or modified and the location where the file was created e.g. GPS data . In other embodiments the SSD entry may contain any other file metadata.

Fields and contain metadata that identify the origin of the file including the user and device that has sent the SSD entry. The UID field may contain a username identifying the user who created the file and or the username of the user who submitted the SSD entry. The DevID field may identify the particular device used to capture or store the media file. For example in the illustrated embodiment the file was captured using a device assigned the identifier myPhone. In various embodiments any other metadata describing the origins of the file may be sent. For example such metadata may identify the device that created the file and or the SSO the owner of such devices the operator of such devices etc.

Fields and indicate the segment and keyword. The segment field indicates the file segment to which the entry corresponds. The keyword field indicates a keyword that the indexing client associated with one or more features in that segment e.g. in steps . The combination of file segment keyword for a given entry is therefore unique across all entries. That is each entry describes the relationship of a given keyword to a given segment of a particular file.

Fields indicate whether or not a given type of feature in the file segment has been associated with the keyword. For example in segment the keyword Lisa has been associated with at least one image feature and at least one voice feature. In segment the same keyword was associated with a text feature and with a voice feature. In some embodiments the entry may further include a dominant defining characteristic of each type of feature. For example if the file segment contains a video type feature and color is the defining characteristic for video then the entry may include an indication of the dominant color of the video feature e.g. blue . In another example if the file segment contains an audio feature and tonality or sharpness roughness etc. is the defining characteristic for audio feature then the entry may include an indication of the dominant tonality for the audio feature.

MOM Fields indicate relevance factors for the keyword e.g. those determined in of method . In the illustrated embodiment the relevance factors include a feature prominence Prom a confidence interval WRel and a device specific weight WFact as described above. For instance the prominence field Prom may indicate the number of seconds during which the features associated with the keyword were present. The confidence interval WRel may indicate the confidence with which the keyword was associated with the indicated features. In the illustrated embodiment WRel is represented as a fraction between 0 and 1. The device specific weight WFact may indicate an increased weight for keywords that are heavily represented on the device. In the illustrated embodiment the WFact weight is represented as a scaling factor between 1 and 2. Additional fields containing additional relevance factors calculated by the client are possible. Finally field is the relevance score which indicates the relevance of the keyword to the file segment. In some embodiments the indexing client may leave the relevance score field blank permitting the indexing server to determine the relevance score based on the SSD s relevance factors and on one or more parameters specific to the device group. The group specific parameters may be stored on the indexing server and applied uniformly to all SSD entries received from devices in the group.

In some embodiments an SSD entry may include additional fields not shown in table . For instance a quality factor WQual indicating the media quality of the segment may be included which may be based on MOS Mean Opinion Score for the segment and normalized within a given range e.g. 0 1 . In such embodiments the MOS may be calculated using a parametric audiovisual model such as the P.NAMS model from ITU currently being standardized in SG12 Q14 of ITU T .

Method begins in where the indexing server receives SSD from indexing client on a given device . The SSD may include any number of SSD entries such as those of table . For example the indexing server may receive a message from indexing client that includes data representing a given SSD entry e.g. given row of SSD table . Such a message which may be in the form of an HTTP message may include a respective field for various columns of the SSD entry such as a file identifier field a date field a location field a UID field a DevID field a segment field a keyword field an img field a text field a sound field a voice field a prom field a WRel field a WFact field and or other fields. In some embodiments the indexing server may receive the SSD in through a programmatic web API e.g. web service RESTful service etc. . The SSD request of may include authentication information e.g. username password etc. which may be authenticated in to identify the appropriate account.

Once the indexing server has received an SSD request and authenticated the requesting user the indexing server may iterate over the received SSD entries and calculate a respective relevance score for each. The iteration is indicated in by the dashed box.

In various embodiments a device group may be associated with a respective set of weights where each weight corresponds to a different feature type e.g. image sound text voice etc. and reflects how important that type of feature is to the relevance of a keyword. In various embodiments the weights may be default presets user defined dynamically determined and or determined in other ways. Each device group may be associated with a respective set of feature type weights.

In the indexing server identifies the group specific feature weights associated with the device group to which the sending device belongs and uses those weights to determine an initial relevance score for the keyword. For example in some embodiments the indexing server may determine an initial relevance score for a given entry by summing the weights of every type of feature denoted in the entry. Thus if a given entry indicates that the keyword was associated with a visual feature and with an audio feature indexing server may calculate the initial weight for the entry as the weight assigned to visual type features plus the weight assigned to audio type features.

In the indexing server determines the final relevance score by scaling the initial relevance score using the SSD supplied relevance factors e.g. Prom WRel WFact etc. . The scaling may correspond to any function of the initial relevance score and SSD supplied relevance factors. For example in some embodiments a final relevance score for an entry in SSD table might be calculated as the initialScore Prom WRel WFact. Thus degrees of prominence confidence and or device specific relevance may each affect the final relevance score. Although one augmentation function has been proposed here other functions are possible in other embodiments. Additionally in embodiments where an SSD entry includes additional factors e.g. WQual the final relevance score may be dependent on those factors e.g. initialScore Prom WRel WFact WQual .

In the indexing server records the final relevance score in the score field of the SSD entry. Once a final relevance score has been determined for an SSD entry the SSD entry is complete and the indexing server may use the entry to update the logical index associated with the device group.

In some embodiments the index may be implemented as any combination of in memory data structures files in a file system tables and or entries in one or more databases or other storage formats. The index may be used to service queries by correlating keywords with file names and or segments most relevant to that keyword.

In SSD table comprises the same data as SSD table of except that the indexing server has calculated respective relevance scores for each entry. The indexing server may calculate the relevance scores by performing method of . According to method the indexing server first identifies a set of group specific feature weights such as those in weight table . Weight table lists the weight of each media type for the group. Each entry includes a groupID field because different groups may assign different respective weights to the same media type. Weight table lists only the weights for group 6 .

For each entry in SSD table the indexing server calculates an initial relevance score based on the feature types marked in the entry and on the respective weights of those media types as noted in weight table . For instance the uppermost entry in SSD table i.e. F 1 Lisa denotes that the keyword Lisa is associated with an image type feature and with a voice type feature. According to weight table those two feature types have a weight of 10 and 2 respectively in the group. Accordingly the initial weight e.g. calculated in may be a function of 10 and 2 e.g. 10 2 12 .

As in the indexing server may then determine a respective final relevance score for each entry based on the entry s initial relevance score and the relevance factors e.g. Prom WRel WFact listed in that row. In the final relevance scores are calculated as initialScore Prom WRel WFact.

Once the indexing server calculates the final relevance scores for each entry the indexing server may add the entries to an index such as index . The index may be optimized for quick retrieval and or entry. In the illustrated embodiment index lists for each entry only the final relevance score and the fields that uniquely identify the entry.

According to the illustrated embodiment query method begins in when the query logic receives the query. As described above the query may comprise one or more keywords and or multimedia content. For example a user may query the database for videos that are similar to a given query video.

In the query logic identifies one or more keywords from the query. If the query is provided in the form of text then identifying the keywords in may simply involve identifying the keywords indicated by the text. Identifying keywords indicated by text may include parsing the text interpreting regular expressions and or other parsing interpretation activity. If the query is provided as a multimedia file e.g. another movie a picture etc. then identifying the keywords in may comprise extracting features from the query multimedia and identifying keywords associated with the extracted features. The feature extraction may be performed similarly to the feature extraction used to create SSD e.g. method of .

In the query logic uses the index e.g. to identify files and or segments that are most relevant to the identified query keywords. In the query logic returns an indication of the most relevant files and or segments identified in . In some embodiments the query logic may simply return an indication of the desired content and where it is stored. In some embodiments the query logic may send the querying client a URL where the result may be downloaded. The URL may point the remote device on which the content resides to a location on the indexing server where the content is stored or to another location. In some embodiments the indexing server may request that the remote device that hosts the content transmit the desired content to the indexing server and or to the querying device. Other means of delivering the results are possible.

In embodiments where data processing system includes a microprocessor a indexing computer program product is provided. Such a computer program product may include computer readable program code which implements a computer program stored on a computer readable medium . Computer readable medium may include magnetic media e.g. a hard disk optical media e.g. a DVD memory devices e.g. random access memory etc. In some embodiments computer readable program code is configured such that when executed by data processing system code causes the processing system to perform steps described above e.g. steps described above with reference to the flow charts of .

In other embodiments indexing computer may be configured to perform steps described above without the need for code . For example data processing system may consist merely of specialized hardware such as one or more application specific integrated circuits ASICs . Hence the features of the present invention described above may be implemented in hardware and or software. For example in some embodiments the functional components of collaboration server described above may be implemented by data processing system executing computer instructions by data processing system operating independent of any computer instructions or by any suitable combination of hardware and or software.

While various embodiments of the present invention have been described above it should be understood that they have been presented by way of example only and not limitation. Thus the breadth and scope of the present invention should not be limited by any of the above described exemplary embodiments. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the invention unless otherwise indicated herein or otherwise clearly contradicted by context.

Additionally while the processes described above and illustrated in the drawings are shown as a sequence of steps this was done solely for the sake of illustration. Accordingly it is contemplated that some steps may be added some steps may be omitted the order of the steps may be re arranged and some steps may be performed in parallel.

