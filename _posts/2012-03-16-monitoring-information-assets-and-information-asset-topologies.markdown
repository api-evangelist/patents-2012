---

title: Monitoring information assets and information asset topologies
abstract: According to one embodiment of the present invention, a computer system monitors information assets providing data for constructing a logical entity. The information assets are dependent upon each other for data and form a topology. The computer system receives an event message associated with an information asset. The event message includes information relating to one or more conditions of that information asset. The computer system processes the received event message to determine the presence of a change within the associated information asset that affects the topology. The change is determined based on the information relating to the one or more conditions within the received event message. The computer system further transmits a notification of the change to one or more entities in response to determining the presence of the change. Embodiments of the present invention further include a method and computer program product for monitoring information assets.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08935709&OS=08935709&RS=08935709
owner: International Business Machines Corporation
number: 08935709
owner_city: Armonk
owner_country: US
publication_date: 20120316
---
This application is a continuation of U.S. patent application Ser. No. 12 604 664 entitled Monitoring Information Assets and Information Asset Topologies and filed Oct. 23 2009 the disclosure of which is incorporated herein by reference in its entirety.

The present invention embodiments relate to live monitoring of information assets for information governance and more specifically to determining a status of an information asset and an information asset topology and to dynamically detecting changes in the information asset topology.

Information assets are generally entities that provide data and may include physical information assets and logical information assets. Physical information assets typically refer to physical machines e.g. computer systems etc. that store and or process e.g. transform etc. data. These physical machines may be associated with data quality characteristics pertaining to the quality of data being provided and operational characteristics pertaining to the underlying physical machine. Logical information assets generally refer to data entities providing data e.g. a report a document an e mail etc. and may be associated with data quality characteristics since there is no physical machine for operational characteristics .

A logical information asset may receive data from various physical and or other logical information assets. For example a logical information asset in the form of a report may be constructed from data provided from various physical e.g. computer systems database systems etc. and or logical e.g. reports documents etc. information assets. The data for the report may be processed for formatting or other purposes by various physical information assets prior to insertion in the report. The logical and physical information assets providing the data for the report basically form a hierarchy or topology that indicate the dependencies or connectivity of those information assets and the manner in which data flows from the information assets to the report.

The integrity of the resulting report is dependent on the integrity of the data received from the logical and physical information assets providing the data within the topology. When an information asset within the topology encounters a degradation of data quality this degradation of data quality spreads to other information assets in the topology through which the data flows to the report. Accordingly a degradation of data quality within one or more of the information assets in the topology causes the integrity of the resulting report to be degraded.

According to one embodiment of the present invention a computer system monitors information assets providing data for constructing a logical entity. The information assets are dependent upon each other for data and form a topology. The computer system comprises at least one storage system for storing at least one computer program and at least one processor for processing the at least one computer program. The computer system receives an event message associated with an information asset. The event message includes information relating to one or more conditions of that information asset. The computer system processes the received event message to determine the presence of a change for the associated information asset that affects the topology. The change is determined based on the information relating to the one or more conditions within the received event message. The computer system further transmits a notification of the change to one or more entities in response to determining the presence of the change. Embodiments of the present invention further include a method and computer program product for monitoring information assets providing data for constructing a logical entity in substantially the same manner described above.

The features and advantages of the present invention will become apparent upon consideration of the following detailed description of example embodiments thereof particularly when taken in conjunction with the accompanying drawings wherein like reference numerals in the various figures are utilized to designate like components.

The present invention embodiments relate to live monitoring of information assets for information governance. This is accomplished by determining a status of an information asset and by dynamically detecting changes in an information asset topology.

Initially information assets are generally entities that provide data and may include physical information assets and logical information assets as described above. Physical information assets typically refer to physical machines e.g. computer systems etc. that store and or process e.g. transform etc. data. These physical machines may be associated with data quality characteristics pertaining to the quality of data being provided and operational characteristics pertaining to the underlying physical machine. Logical information assets generally refer to data entities providing data e.g. a report a document an e mail etc. and may be associated with data quality characteristics since there is no physical machine for operational characteristics . A logical information asset may be produced by data received from various physical and or other logical information assets. The logical and physical information assets providing the data basically form a hierarchy or topology that indicate the dependencies or connectivity of the information assets and the manner in which data flows through the information assets.

An example information asset topology for a report is illustrated in . Specifically topology includes logical and physical information assets providing data to construct a logical information asset in the from of a report . The report is based on data from information assets in the form of databases e.g. a DB2 type database and e.g. an ORACLE type database . Database receives data from information assets each in the form of a Datastage Extract Transform Load ETL job . Similarly information assets in the form of Datastage Extract Transform Load ETL job and Data Integrator Extract Transform Load ETL job provide data to database .

Datastage Extract Transform Load ETL jobs and Data Integrator Extract Transform Load ETL job each process data e.g. transform the data to a desired form standardize the data etc. received from other information assets and provide the processed data to databases . In particular an information asset in the form of database e.g. a TERADATA type database provides data to Datastage Extract Transform Load ETL jobs while an information asset in the form of a software system e.g. SAP system provides data to Datastage Extract Transform Load ETL job and Data Integrator Extract Transform Load ETL job . In addition information assets in the form of a SQL server and a database e.g. a SYBASE type database each provide data to Data Integrator Extract Transform Load ETL job . Thus topology indicates the hierarchy or data dependencies of each of the logical and physical information assets providing data utilized to construct report . In other words the topology indicates for each information asset providing data for the report the one or more other information assets providing data to that particular asset and or the one or more other assets receiving data from that particular asset.

The data quality and trustworthiness of report depends on the status of all the information assets physical and logical information assets in topology . When an information asset within topology encounters an adverse operational or data quality condition the quality of data provided from that information asset has been degraded. This degradation of data quality spreads to other information assets in the topology through which the data flows to the report. Accordingly an adverse operational or data quality condition causing low quality data within one or more of the information assets in topology causes the integrity of resulting report to be degraded.

By way of example only Datastage Extract Transform Load ETL job and database e.g. a SYBASE type database each encounter an adverse operational or data quality condition e.g. as indicated by the triangular symbol in thereby providing data of low quality. In the case of Datastage Extract Transform Load ETL job the low quality data is provided from Datastage Extract Transform Load ETL job to database thereby potentially corrupting data provided from database to report and degrading the integrity of the report.

Similarly low quality data is provided from database e.g. a SYBASE type database to Data Integrator Extract Transform Load ETL job . The low quality data potentially corrupts data provided from the Data Integrator Extract Transform Load ETL job thereby further potentially corrupting data provided from database to report and degrading the integrity of the report.

Accordingly embodiments of the present invention provide real time monitoring of status for information assets and for an information asset topology. The status for an information asset is determined by monitoring conditions for that asset e.g. all conditions associated with the asset user enabled conditions for the asset based on a given topology etc. . The monitored conditions include operational and data quality characteristics. Thus the status for a logical information asset e.g. report may be based on both the operational and data quality characteristics of the physical information assets in the information asset topology e.g. topology .

The status for an information asset topology is determined by an aggregated status of the information assets in the topology. Notifications may be sent to users or applications to indicate that a change in status has occurred for an information asset or an information asset topology.

In addition a present invention embodiment dynamically detects changes in the information asset topology and informs users and applications of these changes e.g. asset and or relationship additions and deletions . This provides users and or applications with insight into an information asset change in the enterprise and enables appropriate actions to be performed.

An example network environment for a present invention embodiment is illustrated in . Specifically the environment includes a monitored information assets server a database server a data quality server a computer system a data transformation server a reports server and one or more information assets providers . These components are coupled via a network and may be implemented by any conventional or other computer systems preferably equipped with a display or monitor a base e.g. including the processor memories and or internal or external communications devices e.g. modem network cards etc. and optional input devices e.g. a keyboard mouse or other input device . Network may be implemented by any quantity of any suitable communications media e.g. WAN LAN Internet Intranet etc. .

Reports server accesses one or more data providing servers or computer systems to retrieve data to perform the analysis necessary to produce a report or other logical information asset . Reports server includes a corresponding agent module that sends event messages to monitored information assets server pertaining to the report and related information. Reports server may retrieve information from various information assets or sources within an information asset topology e.g. as described above for in order to generate reports or other logical information assets e.g. documents etc. . By way of example reports server may produce logical information asset or report in the topology described above for .

Monitored information assets server receives and processes event messages including information pertaining to information assets. Event messages are received from other computer systems over network as described below and include a payload of information that indicate occurrence of certain conditions pertaining to information assets e.g. addition and or removal of an information asset results in the addition and or removal of an asset from the corresponding information asset topology addition and or removal of an information asset relationship results in the addition and or removal of a relationship amongst information assets that form the asset topology information asset operational status and or conditions information asset data quality metrics etc. . Monitored information assets server includes a monitored information assets catalog database that stores entries for information assets that may be monitored and records relationships amongst information assets within an information asset topology. In addition monitored information assets server includes or is associated with an import module . The import module imports an XML or other suitable file e.g. via a command line or other user interface including a specification of information asset entries and any relationships amongst those information assets to enable this information to be stored in monitored information assets catalog database . In other words import module enables importation of information asset topology specifications into the monitored information assets catalog database.

The monitored information assets server further includes one or more applications e.g. a Web Application accessible by a client browser to enable a user to view and monitor information asset status information asset topology status and event messages. The monitored information assets server provides this information to one or more client computer systems each including a browser to enable a user to view and monitor information assets status information asset topology status and event messages. Client devices display a graphical user interface or dashboard for interaction with the user. The information assets and corresponding topologies are preferably monitored by monitored information assets server on a subscription basis. Accordingly monitored information assets server enables users to subscribe and indicate e.g. via the graphical user interface the particular information assets and or topologies with which the users desire to be affiliated.

In addition the monitored information assets server provides notifications to subscribed clients to indicate information asset activities e.g. information asset status changes information asset topology status changes information topology changes any certain event message types etc. . For example monitored information assets server may provide notifications e.g. directly or over network or other network to one or more RSS clients each in the form of a computer system with an RSS client to monitor notifications. Further the monitored information assets server may provide notifications e.g. directly or over network or other network to one or more electronic mail E mail clients each in the form of a computer system with an electronic mail E mail client to receive electronic mail notifications. In addition the monitored information assets server may provide notifications e.g. directly or over network or other network to one or more application server clients each preferably in the form of a computer system executing application server software hosting applications that listen e.g. via Application Programming Interfaces API for notifications e.g. via the Java Messaging Service JMS protocol .

Monitored information assets server may receive event messages from various sources e.g. database server data quality server computer system data transformation server reports server and other information assets providers over network to monitor an information asset topology. For example database server may include one or more databases containing data for reports server . The database server includes a corresponding agent module that collects and sends database operational and or actual data content event messages over network to monitored information assets server . By way of example database server may correspond to one or more of information assets of the information asset topology described above for .

Data quality server may be associated with database servers each including one or more databases containing data for reports server . Data quality server performs data analytics and data profiling against multiple data sources and types e.g. database servers and produces data quality metrics. The resulting data quality metrics are sent over network to monitored information assets server in the form of event messages. By way of example database servers may correspond to one or more of information assets of the information asset topology described above for while data quality server may function similar to an agent module .

Computer system includes a corresponding agent module that retrieves operational and or actual data content information from a remote database server including one or more databases containing data for reports server . Agent module sends event messages pertaining to computer system database server and the information handled by database server over network to monitored information assets server . By way of example computer system and database server may correspond to one or more of information assets of the information asset topology described above for .

Data transformation server performs Extract Transform Load ETL tasks against data located at a database server and a file server . Database server includes one or more databases containing data for reports server while file server includes one or more files containing data for reports server . Data transformation server includes a corresponding agent module that sends ETL task execution results in the form of event messages over network to monitored information assets server . By way of example data transformation server may correspond to one or more of information assets of the information asset topology described above for .

Information assets providers may be implemented by any suitable computer system including an information asset with information for reports server . The information assets providers each include a corresponding agent module to send operational data quality and other data content type information about the information assets in the form of event messages over network to monitored information assets server . By way of example information assets providers may correspond to one or more of information assets of the information asset topology described above for .

The information assets and information assets providers may be implemented by any suitable data storing structure and or corresponding data storing unit e.g. documents reports files databases database servers computer systems e.g. general processing servers clients etc. file server and systems memory devices etc. .

A present invention embodiment provides real time monitoring of status for information assets and a corresponding information asset topology dynamically detects changes in the information asset topology and informs users and applications of topology and status changes. This provides users and or applications with insight into an information asset change in the enterprise and enables appropriate actions to be performed as described above. An aspect of the present invention embodiment is to leverage real time monitoring capabilities to provide notifications for changes in the actual information asset topologies dependencies that dynamically surface in an information asset enterprise in real time. The monitored information assets server depends on real time information for information asset and relationship changes received from various agent modules in the form of event messages. When a topology undergoes changes notifications to subscribed users or applications are initiated to provide notice about the changes.

A change to an information asset topology may occur in various manners. For example a user can manipulate an information asset topology e.g. adding and or removing relationships etc. manually via a user interface described below . Further import module may import an XML or other file that contains relationship additions and or removals. In addition event messages may be received indicating a topology change. In this case monitored information assets server receives event messages including information pertaining to information assets and processes those received event messages to dynamically detect a change in the information asset topology. Monitored information assets server includes various software and or hardware modules to detect the topology changes e.g. from the interface imported file and event messages and to incorporate the topology changes into monitored information assets catalog database .

In addition agent modules or other software and or hardware modules on remote computer systems on network are providing continuous event messages e.g. addition and or removal of information assets and relationships to monitored information assets server . The manner in which relationships e.g. addition and or removal of an asset addition and or removal of an asset relationship etc. are being determined by the agent modules or being provided by another software solution are dependent on the purpose of the particular software on that remote computer system.

Agent modules preferably transmit event messages in response to determination of information for the monitored conditions and changes to the information asset topology e.g. determining an added or removed relationship or dependency for the associated information asset from the conditions or properties of the information asset . The agent modules typically periodically poll the corresponding computer system device or software of an information asset to ascertain measurements of or otherwise determine information relating to operational and or data quality conditions and properties of the information asset e.g. dependencies relationships etc. . The information relating to the monitored conditions is typically provided in the form of a score numeric value while the score values and or topology change information are inserted into an event message for transmission to monitored information assets server . Agent modules may examine log files generated by the computer system device and or software and or utilize APIs to communicate with software to ascertain the conditions and or to determine topology related changes. By way of example agent modules may include a database agent module that provides information for conditions relating to databases a transformation agent module that provides information for conditions relating to data transformations or other processing and a detection agent module that examines a host system to determine the presence of information assets e.g. databases applications etc. . However any suitable types or quantity of agent modules may be employed that provide information relating to any suitable conditions or properties.

Alternatively the agent module may be embedded or built in an application or computer system. In this case a user may enable real time monitoring of conditions where event messages are generated and transmitted in response to an analysis initiated by the user. The user may further control the analysis by specifying various rules e.g. rules for sources etc. . The agent module pushes data during the analysis for transmission to monitored information assets server .

The manner in which monitored information assets server dynamically detects a change in the information asset topology is illustrated in . In particular monitored information assets server detects one of an importation of a file a manipulation of an information asset topology via the user interface and reception of an event message at step . Monitored information assets server may receive event messages by way of example from data quality server and or various agent modules with each event message providing information pertaining to the associated information asset e.g. database servers computer system data transformation server file server reports server and other information assets providers etc. .

The monitored information assets server determines the presence of the addition and or removal of an information asset from the information asset topology at step . In the case of the user interface this can be derived based on the actions performed by the user e.g. insertion or removal of an information asset from the information asset topology via the interface or Web application. With respect to the file importation a topology change may be derived from the contents of the imported file specifying the topology e.g. a comparison of the topology specified by the imported file with the previous topology structure . In addition an event message may contain information indicating a topology change.

When an event message has been received monitored information assets server examines the information contained in the event message to determine the presence of an addition and or removal of an information asset. In particular an event message provided to monitored information assets server preferably includes a defined format. The event message includes a number of properties or fields wherein the fields are mandatory and or optional based on the type and subtype of the event message. For example an event message may include the following fields 

eventTime a timestamp determined by an agent module to indicate the time an event message was created wherein the time is preferably in the form of Greenwich Mean Time GMT 

eventLang a two character language identifier for descriptive data in the event message e.g. en English fr French jp Japanese wherein English is the default value 

eventDesc descriptive text about the event message in the language specified by the eventLang field for intended display by the user interface e.g. as a high level description of an incoming event message 

eventSource descriptive text about the source of the event message in the language specified by the eventLang field e.g. this is preferably a user friendly name of the agent module intended to be user visible informational detail on an event message and may be a combination of the computer system that hosts the agent module and the type of agent module such as InformationAnalyzer Machine Address URL 

eventGroupID a temporary identifier used to group multiple incoming event messages into a single logical event wherein this is a mechanism for grouping a set of events together that occurred logically as a single logical event. This enables a user examining a single event message in the user interface to see the set of event messages that came in with the current event message. The agent module may leave this blank or set a value indicating transmission of multiple change event messages as a logical group. The value should be unique within the event message type or event messages delivered by a given agent module may be identified by the agentUniqueID field described below. For example the value may be set to a monotonically increasing number e.g. each time the agent module initiates and sends a group of event messages a counter is incremented and sets the same value for all the event messages in that group 

agentUniqueID a unique Identifier for the agent module delivering the event message and is preferably a globally unique identifier GUID or other identifier that uniquely identifies the agent module proxy in the asset store or computer system storing the information asset e.g. this value is typically retrieved from a configuration file 

assetID a unique identifier assigned to an information asset by monitored information assets server and is used for an exact match e.g. may be a globally unique identifier GUID 

assetName a name of the asset for intended display on the user interface as part of event message details 

assetNativeID a unique identifier native to the information asset outside of the monitored information assets server. When this identifier is supplied the identifier is used to match an event message with a registered information asset within the asset store. If this identifier is absent a match is attempted based on the values of incoming properties within an event message e.g. an event message indicating that properties are being identified 

assetIdentifierXML an optional XML or other payload that supplies the names and values of properties of the information asset which are defined as identifiers. These properties are used to match an existing information asset in the asset store when the assetNativeID field is not specified. The XML is preferably formatted as a simple element where the element name is the property name and the element value is the value of the property. This XML should include the full set of properties and values which uniquely identify the asset. An example payload may be 

assetXML an optional XML or other payload that supplies the names and values of properties of the information asset which are not identifiers. An example payload may be 

Metric Fields one or more e.g. and may be on the order of one hundred event message type specific metric properties that are typically numeric and represent a score value.

Event message views share the same set of fixed properties described above along with a variable set of event message type specific properties. For example an event message may further include the following fields for relationships e.g. the eventType field indicates a Relationship 

relatedAssetID an identifier e.g. substantially similar to the assetID field described above that identifies the related information asset 

relatedAssetName specifies the name e.g. substantially similar to the assetName field described above of the related information asset 

relatedAssetNativeID an identifier e.g. substantially similar to the AssetNativeID field described above that identifies the related information asset 

relatedAssetIdentifierXML indicates properties of the related information asset that are identifiers e.g. substantially similar to the assetIdentifierXML field described above 

relatedAssetXML indicates properties of the related information asset that are not identifiers e.g. substantially similar to the AssetIdentifierXML field described above 

relationshipLabel a user friendly name for the relationship in the language specified by the eventLang field and

Event message types e.g. eventType field typically include Property e.g. indicating that the event message includes information pertaining to an addition or removal of an information asset and Relationship e.g. indicating that the event message includes information pertaining to a relationship between information assets where the subtypes e.g. eventSubtype field for each of these types include Add and Drop. Accordingly an event message indicating the addition of an information asset includes by way of example fields with the following values 

Similarly an event message indicating the removal of an information asset includes by way of example fields with the following values 

The monitored information assets server examines the type and subtype fields e.g. eventType and eventSubtype of a received event message to determine the presence of an addition and or removal of an information asset from the information asset topology.

When no addition or removal of an information asset is present monitored information assets server determines the presence of an addition and or removal of a relationship e.g. a connection or link between information assets within the information asset topology at step . A change in the information asset topology e.g. addition and or removal of an information asset relationship may be created in various manners as described above. In the case of the user interface this can be derived based on the actions performed by the user e.g. altering the connectivity within the topology insertion or removal of an information asset or relationship from the information asset topology etc. via the interface or Web application. With respect to the file importation a relationship change may be derived from the contents of the imported file specifying the topology e.g. a comparison of the topology specified by the imported file with the previous topology structure . In addition an event message may contain information indicating a relationship change.

When an event message has been received monitored information assets server examines the information contained in the event message to determine the presence of an addition and or removal of a relationship within the information asset topology. An event message provided to monitored information assets server preferably includes a defined format as described above. Accordingly an event message indicating the addition of a relationship between information assets may include by way of example fields with the following values 

Similarly an event message indicating the removal of a relationship between information assets may include by way of example fields with the following values 

The monitored assets server examines the type and subtype fields e.g. eventType and eventSubtype of a received event message to determine the presence of an addition and or removal of a relationship between information assets in the information asset topology.

Once monitored information assets server determines the presence of an addition and or removal of an information asset e.g. step or of a relationship between information assets e.g. step e.g. based on the user interface file importation and or received event messages as described above the monitored information assets server identifies the existing topologies in monitored assets catalog database that are impacted by the topology change e.g. addition and or removal of an information asset or relationship at step and incorporates the change for the identified topologies into that database. In the case of a topology change being initiated from the user interface or imported file monitored information assets server receives information from the user interface or imported file and stores the topology change in monitored assets catalog database .

With respect to a topology change received in an event message the monitored information assets server processes the received event message to determine and store the topology change in monitored assets catalog database . For example with respect to event messages with types of Property or Relationship monitored information assets server interprets the event message subtype field and if the event message subtype field is set to ADD and the assetXML or relatedAssetXML fields include property value pairs e.g. an old property value and a new property value the monitored information assets server attempts to match the incoming event message with information assets e.g. via the various identifiers and or properties indicated in the event message described above and replace the current values of existing matching properties with the corresponding new property values in the event message. If matching property values are not found the corresponding new property values from the event message are added to the information asset. When the event message subtype field is set to ADD e.g. with event message types of Property or Relationship and a new property value in the assetXML field without property value pairs and a matching property is found monitored information assets server creates and adds a new property with the same name and the new property value to the information asset. In this way the property becomes multivalued. The property values within the event message may effectively add an information asset or relationship to the topology.

When the event message subtype field is set to DROP e.g. with event message types of Property or Relationship and there are property values in the assetXML field monitored information assets server removes the property with the matching value from the information asset. This in effect allows removal of an individual entry e.g. from a multivalued field . In addition when the event message subtype field is set to DROP and there are no properties defined in the assetXML field monitored information asset server removes the entire information asset e.g. when the event message eventType field is set to Property or relationship between information assets e.g. when the event message eventType field is set to Relationship .

Information assets and corresponding topologies are preferably monitored on a subscription basis. Accordingly monitored information assets server enables users to subscribe to and indicate e.g. via the user interface described below the particular information assets and or topologies with which the users desire to be affiliated as described above. Once the impacted topologies have been identified e.g. step monitored information assets server identifies each subscriber associated with each identified topology e.g. each topology impacted by the change at step and sends a change notification to each of the identified subscribers indicating the change at step . The notification may be provided to subscribers in various manners. For example monitored information assets server may provide notifications to subscribers e.g. directly or over network or other network via an RSS feed e.g. place a notification on an RSS queue etc. electronic mail E mail and or applications that listen e.g. via APIs for notifications e.g. via the Java Messaging Service JMS protocol by adding the notification to a JMS queue . The notifications typically include information indicating the topology the added or removed asset the relationship and the information assets associated with the relationship based on the type of actions occurring. However the notifications may include any desired information may be of any suitable format and may be sent via any conventional or other data communication techniques e.g. e mail RSS JMS fax pager cellular telephone text or message etc. .

An embodiment of the present invention further determines the status for an information asset by monitoring conditions for that asset. An aspect of the present invention embodiment includes enabling users and applications to establish and understand a status for an information asset representing a logical entity e.g. a report etc. based on a combination of operational and data quality conditions. The present invention embodiment represents both physical and logical information assets and their dependency relationships while determining and representing an information asset status based on data quality and operational conditions of other information assets from which the information asset depends. The monitored information assets server depends on real time information for information assets received from the agent modules in the form of event messages. The agent modules or other software on remote computer systems on network are providing continuous event messages e.g. condition information in the form of score values etc. to monitored information assets server in substantially the same manner described above. These event messages each include a payload of operational status conditions and or data quality metrics e.g. score values etc. for a corresponding information asset. The event message may be associated with a physical information asset e.g. a database etc and or a logical information asset e.g. a report My Envelope etc. .

Thus the present invention embodiment combines representation of a topology of physical and logical information assets to monitor status with processing of status for a logical information asset based on operational and data quality event messages that agent modules are providing for dependent information assets. An example of data quality event messages includes data analytics results from an execution of a data analysis tool. The metrics that result from this execution and are associated with the desired information assets are sent to the monitored information assets server to determine the status for the desired information assets based on the metrics.

Monitored information assets server includes various software and or hardware modules to receive event messages including information pertaining to information assets and to process those received event messages to determine a status for individual information assets and the corresponding information asset topology. A status for an information asset or an information asset topology by way of example may be represented by various states including compliant good non compliant suspect and undetermined. The good state indicates that no data quality nor operational issues are being detected while the suspect state indicates that data quality and or operational issues may have been detected and investigation should be performed. The undetermined state indicates that no event messages for data quality nor operational conditions have ever been received for the information asset e.g. thereby providing an unknown or undetermined state . Alternatively the status may be represented by a more refined value such as a status value in a particular value range e.g. zero to one hundred .

An information asset is associated with one or more monitored conditions each resolving to a boolean status or value e.g. True or False one or zero etc. . Each monitored condition is further associated with metrics including a lower bound value an upper bound value and a current value. An event message associated with an information asset and including a score value for a monitored condition is initially received by monitored information assets server . The score value represents a numerical value associated with the monitored condition as described above. The score value of this initial event message is used as the initial value of the current value metric for the associated monitored condition.

The upper and lower bound metrics represent the acceptable range from the current value metric of a received score value for the monitored condition. When a received score value for a monitored condition is outside the acceptable range e.g. indicated by the current upper and lower bound values a status for the monitored condition is set to False while the status is set to True in response to the received score value being within the acceptable range. An initial variance of 10 of the current value metric is utilized as the initial acceptable range. Since the initially received score value is always in the acceptable range e.g. of 10 of that score value the status for the monitored condition is initialized to a good state.

A user may set the lower and upper bound values via the user interface . Once this occurs the absolute range indicated by the user specified upper and lower bound values is utilized to determine the status for the monitored condition. For example a user may set the lower bound value to zero thereby indicating that no score value less than the current or base value metric is within the acceptable range to provide a boolean status of True for the monitored condition. Further the user may set the upper bound value to zero thereby indicating that no score value greater than the current or base value metric is within the acceptable range to provide a boolean status of True for the monitored condition. Moreover the user may set both the upper and lower bound values to zero where a score value must equal the base or current value metric to be within the acceptable range to provide a boolean status of True for the monitored condition. In addition the user may reset the current value for a monitored condition via the user interface. This enables the current value to be set via event messages or by the user in order to override score values received in the event messages e.g. from an agent module .

An information asset may be associated with numerous monitored conditions. However in the context of a topology a user may only be interested in a portion of those conditions which pertain to or are relevant for the topology. Thus the user may want the status of an information asset to be based on certain conditions for a particular situation or topology. Accordingly the user may enable and or disable conditions for an information asset via the user interface. An embodiment of the present invention may determine the status for an information asset outside the context of a topology e.g. based on all associated conditions and within the context of a topology e.g. based on the relevant or enabled conditions .

The manner in which monitored information assets server determines a status for individual information assets outside the context of a topology is illustrated in . Specifically monitored information assets server determines receipt of event messages associated with information assets e.g. from corresponding agent modules or other monitoring units at step . If no event messages are received for an information asset the status of that information asset is set to an undetermined state at step . However when monitored information assets server receives event messages each event message includes one or more score values for corresponding monitored conditions of an associated information asset. For example monitored information assets server may receive event messages from data quality server and or various agent modules with each event message providing information pertaining to the associated information asset e.g. database servers computer system data transformation server file server reports server other information assets providers etc. .

A monitored condition may relate to the operational condition of an information asset or data quality of data provided by an information asset. Various metrics may be associated with the operational and data quality conditions to produce a score value for the corresponding monitored condition that is inserted into an event message for transmission to monitored information assets server . The operational condition metrics may be provided by corresponding agent modules or by various conventional or other diagnostic type tools and may include the monitored information asset e.g. a computer system or other device being in an operational state a percentage of memory capacity utilized by the monitored information asset etc. The data quality metrics may be provided by corresponding agent modules or by various conventional or other data analysis tools and may include a percentage of data that did not meet one or more rules a mean number of rules not met per record a mean percentage of rules not met per record a standard deviation of the number of rules not met per record a standard deviation of the percentage of rules not met per record a percentage of validity variance a number of validity variance a percentage of confidence variance a number of confidence variance a percentage of confidence of rules not met a confidence of the maximum records allowed over the limit a confidence of the actual records over the limit number passed percent passed number failed percent failed baseline variance etc.

Monitored information assets server retrieves score values from the received event message for all monitored conditions of the associated information asset at step and determines the status for the information asset based on the retrieved score values at step . In particular monitored information assets server compares the retrieved score value for each monitored condition to the corresponding acceptable range for that monitored condition at step . If the score value for a monitored condition is within the corresponding acceptable range the boolean status for that monitored condition is set to True at step . Otherwise the boolean status for that monitored condition is set to false at step .

Monitored information assets server examines the boolean status of each of the monitored conditions for an information asset at step and sets the asset status to a good state at step in response to each monitored condition for the information asset attaining a boolean status of True. If one or more of the monitored conditions attains a boolean status of False the status for the asset is set to a suspect state at step .

The status of an individual information asset outside the context of a topology may alternatively be determined based on a weighting of the monitored conditions. The weighting permits users to control the influence of factors affecting trustworthiness of the data from an information asset. For example occurrence of a monitored asset condition of lesser weight may indicate the resulting data from that asset is suspect but the trustworthiness of the resulting data may still be acceptable. In the case of weighted score values each of the monitored conditions is associated with a weighting factor that is applied to the corresponding score value for that condition at step . Alternatively a weighting scale may be utilized by an agent module in producing the score value for that condition received within an event message. The weighted score values for the monitored conditions of the information asset are summed to produce a sum asset score at step . The status of the information asset is determined by comparing the sum asset score against an asset score threshold. If the sum asset score exceeds the asset score threshold as determined at step the status for the information asset is set to a good state at step . Otherwise the status for the information asset is set to a suspect state at step .

Information assets and corresponding topologies are preferably monitored on a subscription basis as described above. Accordingly monitored information assets server enables users to subscribe to and indicate e.g. via the user interface described below the particular information assets and or topologies with which the users desire to be affiliated as described above. Once a status for the asset is determined monitored information assets server determines the presence of a change of status for the information asset. If the status of the information asset has changed as determined at step monitored information assets server identifies each subscriber associated with the information asset and sends a change notification to the subscribers indicating the change of status at step . The notification may be provided to subscribers in various manners. For example monitored information assets server may provide notifications to subscribers e.g. directly or over network or other network via an RSS feed e.g. place a notification on an RSS queue etc. electronic mail E mail and or applications that listen e.g. via APIs for notifications e.g. via the Java Messaging Service JMS protocol by adding the notification to a JMS queue . The notifications typically include information indicating the change in status e.g. old and new status etc. . However the notifications may include any desired information may be of any suitable format and may be sent via any conventional or other data communication techniques e.g. e mail RSS JMS fax pager cellular telephone text or message etc. .

The monitored information assets server further determines the status for individual information assets within the context of a topology as illustrated in . Initially the status for information assets within the context of a topology is determined based on monitored conditions a user has enabled for the information asset in the context of that topology as described above. Specifically monitored information assets server determines receipt of event messages associated with information assets e.g. from corresponding agent modules or other monitoring units at step . If no event messages are received for an information asset the status of that information asset is set to an undetermined state at step . However when monitored information assets server receives event messages each event message includes one or more score values for corresponding monitored conditions of an associated information asset. For example monitored information assets server may receive event messages from data quality server and or various agent modules with each event message providing information pertaining to the associated information asset e.g. database servers computer system data transformation server file server reports server and other information assets providers etc. .

An enabled monitored condition may relate to the operational condition of an information asset or data quality of data provided by an information asset. Various metrics may be associated with the operational and data quality conditions to produce a score value for the corresponding enabled monitored condition that is inserted into an event message for transmission to monitored information assets server . The operational condition and data quality metrics may be provided by corresponding agent modules or by various conventional or other diagnostic type tools and may be substantially similar to those described above.

Monitored information assets server retrieves a score value from the received event message for each enabled monitored condition of the associated information asset at step and determines the status for the information asset based on the retrieved score values at step . In particular monitored information assets server compares the retrieved score value for each enabled monitored condition to the corresponding acceptable range for that monitored condition at step . If the score value for an enabled monitored condition is within the corresponding acceptable range the boolean status for that enabled monitored condition is set to True at step . Otherwise the boolean status for that enabled monitored condition is set to false at step .

Monitored information assets server examines the boolean status of each of the enabled monitored conditions for an information asset at step and sets the asset status to a good state at step in response to each enabled monitored condition for the information asset attaining a boolean status of True. If one or more of the enabled monitored conditions attains a boolean status of False the status for the asset is set to a suspect state at step .

The status of an individual information asset within the context of a topology may alternatively be determined based on a weighting of the enabled monitored conditions. The weighting permits users to control the influence of factors affecting trustworthiness of the data from an information asset. For example occurrence of an enabled monitored condition of lesser weight may indicate the resulting data is suspect but the trustworthiness of the resulting data may still be acceptable. In the case of weighted score values each of the enabled monitored conditions is associated with a weighting factor that is applied to the corresponding score value for that condition at step . Alternatively a weighting scale may be utilized by an agent module in producing the score value for that condition received within an event message. The weighted score values for the enabled monitored conditions of the information asset are summed to produce a sum asset score at step . The status of the information asset is determined by comparing the sum asset score against an asset score threshold. If the sum asset score exceeds the asset score threshold as determined at step the status for the information asset is set to a good state at step . Otherwise the status for the information asset is set to a suspect state at step .

Information assets and corresponding topologies are preferably monitored on a subscription basis as described above. Once a status for the asset is determined monitored information assets server determines the presence of a change of status for the information asset. If the status of the information asset has changed as determined at step monitored information assets server identifies each subscriber associated with the information asset and sends a change notification to the subscribers indicating the change of status at step . The notification may be provided to subscribers in various manners. For example monitored information assets server may provide notifications to subscribers e.g. directly or over network or other network via an RSS feed e.g. place a notification on an RSS queue etc. electronic mail E mail and or applications that listen e.g. via APIs for notifications e.g. via the Java Messaging Service JMS protocol by adding the notification to a JMS queue . The notifications typically include information indicating the change in status e.g. old and new status etc. . However the notifications may include any desired information may be of any suitable format and may be sent via any conventional or other data communication techniques e.g. e mail RSS JMS fax pager cellular telephone text or message etc. 

Once the status for information assets within an information asset topology have been determined monitored information assets server determines a status for the information asset topology as illustrated in . Specifically monitored information assets server examines the status of each information asset in the information asset topology at step and determines the status of the topology at step . In particular when the status of each information asset in the topology is in a good state as determined at step monitored information assets server sets the topology status to a good state at step . If one or more of the information assets within the topology have a suspect status the status for the topology is set to a suspect state at step .

The status of an information asset topology may alternatively be determined based on the weighted scores for the information assets. The weighting permits users to control the influence of factors affecting trustworthiness of the data from an information asset as described above. In the case of weighted score values the status of the information asset topology may be determined based on the sum asset scores of the information assets within the information asset topology. In particular the monitored information assets server sums the asset scores for the information assets to produce a total asset score at step . The status of the information asset topology is determined by the monitored information assets server comparing the total asset score against a topology threshold. If the total asset score exceeds the topology threshold as determined at step the status for the information asset topology is set to a good state at step . Otherwise the status for the information asset topology is set to a suspect state at step .

Information assets and corresponding topologies are preferably monitored on a subscription basis as described above. Once a status for the topology is determined monitored information assets server determines the presence of a change of status for the topology. If the status of the topology has changed as determined at step monitored information assets server identifies each subscriber associated with the topology and sends a change notification to the subscribers indicating the change of status at step . The notification may be provided to subscribers in various manners. For example monitored information assets server may provide notifications to subscribers e.g. directly or over network or other network via an RSS feed e.g. place a notification on an RSS queue etc. electronic mail E mail and or applications that listen e.g. via APIs for notifications e.g. via the Java Messaging Service JMS protocol by adding the notification to a JMS queue . The notifications typically include information indicating the change in status e.g. old and new status etc. . However the notifications may include any desired information may be of any suitable format and may be sent via any conventional or other data communication techniques e.g. e mail RSS JMS fax pager cellular telephone text or message etc. .

In addition the status for an information asset or the information asset topology may be determined by utilizing status rules providing logic based on relationship types between information assets.

An example graphical user interface for information asset monitoring according to an embodiment of the present invention is illustrated in . Initially interface may be provided by monitored information assets server and displayed by a browser on a client device. The interface provides various information to a user enables the user to create subscribe to and or modify topologies subscribe to information assets and specify or subscribe to desired monitored conditions for an information asset. Specifically interface includes a map area an asset detail area an event area an event detail area a user monitor area a monitor detail area a task area a task detail area and an interface area . Map area generally displays an information asset topology. The topology is displayed utilizing various icons or symbols representing an information asset e.g. storage container or grid as viewed in and a compliance indication e.g. exclamation point as viewed in indicating a problematic information asset . Any suitable symbols icons or other indicators may be utilized to represent the information assets and compliance indicators. The topology is displayed in map area preferably in diagrammatic form e.g. symbols or icons representing the various information assets interconnected by arrows as viewed in and is manipulable by a user e.g. via a mouse or other input devices for modification of the topology structure information assets and relationships between those assets.

A user may select an information asset displayed in map area e.g. via a mouse or other input device where details of the selected information asset are displayed in asset detail area positioned below map area . In addition a user may select and enable conditions for the selected asset and specify the various thresholds upper and lower bounds current values and weighting factors for the conditions e.g. via a mouse or other input device . The user may further subscribe to the selected asset or a topology and enter various information including destinations for notifications e.g. via a mouse or other input device . Event area is disposed below asset detail area and displays information e.g. event message name asset type event message type time date etc. relating to various event messages pertaining to the information assets. A particular event message may be retrieved based on a search or filter. A user may select an event message displayed in event area e.g. via a mouse or other input device where details of the selected event message are displayed in event detail area positioned below event area .

User monitor area is disposed adjacent an upper portion of map area and displays information e.g. name of information asset or topology status etc. of various information assets or topologies being monitored by a user. A user may select an item displayed in user monitor area e.g. via a mouse or other input device where details of the selected item are displayed in monitor detail area positioned below user monitor area . For example if Job is selected from user monitor area e.g. as viewed in monitor detail area provides information e.g. status type administrator job indicator job indicator value etc. pertaining to that selected job. By way of example jobs may include ETL or other jobs on physical information assets.

Task area is disposed below monitor detail area and includes information e.g. task name task status task priority or severity etc. pertaining to tasks monitored by the user. A user may select a task displayed in task area e.g. via a mouse or other input device where details of the selected task are displayed in task detail area positioned below task area . Tasks are generally activities assigned to the user accessing the user interface. For example when an information asset attains a suspect status and needs to be investigated the user is typically responsible for the investigation and utilizes their task list e.g. in task area to provide the investigations needed to be performed. In addition the user may change the status of a task e.g. within task area and or task detail area via a mouse or other input device . For example the user may accept the task e.g. if someone created the task and assigned it to the user create a new task e.g. for the user or another user complete the task close the task etc.

Interface area is disposed between a side edge of screen and map area . Interface area maintains interface views created by the user for various topologies and or information assets. The views may be selected by the user e.g. via a mouse or other input device for display.

It will be appreciated that the embodiments described above and illustrated in the drawings represent only a few of the many ways of implementing embodiments for monitoring information assets and information asset topologies.

The environment of the present invention embodiments may include any quantity of computer or other processing systems e.g. database application or other server systems client systems databases general processing devices etc. in the form of logical and or physical information assets and arranged in any desired fashion. The computer or other processing systems employed by the present invention embodiments may be implemented by any quantity of any personal or other type of computer or processing system e.g. IBM compatible Apple Macintosh laptop palm pilot etc. and may include any commercially available operating system e.g. Windows OS 2 Unix Linux etc. and any commercially available or custom software e.g. browser software communications software server software agent module import module modules of the monitored information assets server e.g. handling status and topology changes and providing the user interface etc. . These systems may include any types of monitors and input devices e.g. keyboard mouse voice recognition etc. to enter and or view information.

It is to be understood that the software e.g. agent module import module modules of the monitored information assets server e.g. handling status and topology changes and providing the user interface etc. for the computer systems of the present invention embodiments may be implemented in any desired computer language and could be developed by one of ordinary skill in the computer arts based on the functional descriptions contained in the specification and flow charts illustrated in the drawings. Further any references herein of software performing various functions generally refer to computer systems or processors performing those functions under software control. The computer systems of the present invention embodiments may alternatively be implemented by any type of hardware and or other processing circuitry. The various functions of the computer systems may be distributed in any manner among any quantity of software and or hardware modules or units processing or computer systems and or circuitry where the computer or processing systems may be disposed locally or remotely of each other and communicate via any suitable communications medium e.g. LAN WAN Intranet Internet hardwire modem connection wireless etc. . For example the functions of the present invention embodiments may be distributed in any manner among the various client and server systems. The software and or algorithms described above and illustrated in the flow charts may be modified in any manner that accomplishes the functions described herein. In addition the functions in the flow charts or description may be performed in any order that accomplishes a desired operation.

The software of the present invention embodiments may be available on a recorded medium e.g. magnetic or optical mediums magneto optic mediums floppy diskettes CD ROM DVD memory devices etc. for use on stand alone systems or systems connected by a network or other communications medium.

The communication network may be implemented by any quantity of any type of communications network e.g. LAN WAN Internet Intranet VPN etc. . The computer systems of the present invention embodiments e.g. client systems database application or other server systems etc. may include any conventional or other communications devices to communicate over the network via any conventional or other protocols. The computer systems e.g. client system database application or other server system etc. may utilize any type of connection e.g. wired wireless etc. for access to the network.

The databases may be implemented by any conventional or other databases data stores or storage structures e.g. files databases data structures etc. . The databases may be remote from or local to each other the client systems and or the server systems.

The present invention embodiments may be utilized for any information asset topology including any quantity or type of logical and or physical information assets. The information asset topology may have any suitable structure including any quantity of hierarchy levels or tiers where the information assets may include any types of dependencies or other relationships. The information assets may provide any suitable data for constructing any type of logical information asset e.g. document report etc. . The physical information assets may perform any desired processing on the data e.g. transformations formatting standardization etc. .

The agent module may be located on any suitable computer or processing system remote or local to an information asset to monitor conditions. The agent module may monitor any quantity of any types of conditions associated with an information asset e.g. operational data quality various metrics etc. . The agent module may provide monitoring results in any suitable form e.g. score or other value etc. where the results may be weighted or otherwise processed e.g. normalized different formats different scales or scaling etc. . The score value may be of any suitable types or values e.g. boolean numeric states alphanumeric any continuous domain or range of any types of values e.g. zero to one hundred A to Z etc. etc. and may be associated with any suitable range. The agent module may monitor and or provide event messages at any desired time intervals. Alternatively the agent module may be embedded within or part of another module or tool e.g. an analysis module and provide event messages as data is gathered during an analysis or other function of that other module or tool.

An event message may include any quantity of any types of fields and be arranged in any suitable fashion. The fields may each include any information of any suitable type e.g. metrics conditions topology information properties etc. . The event message may utilize any desired information or be arranged in any fashion to indicate any type of topology change e.g. addition removal or update of an information asset or relationship etc. .

The import module may import any suitable file or other structure containing a topology specification. The file may include any desired information and be arranged in any suitable format.

The determination of a topology change or status may be performed at any suitable time intervals e.g. periodically as event messages are received etc. . The notifications may include any desired information e.g. topology status etc. may be of any suitable format and may be sent via any conventional or other data communication techniques e.g. e mail RSS JMS fax pager cellular telephone text or message etc. .

The status for an information asset or topology may include any quantity of any types of states or values e.g. good suspect undetermined any intermediate levels between those states numeric alphanumeric any continuous domain or range of any types of values e.g. zero to one hundred A to Z etc. etc. . An information asset may be associated with any quantity of any types of conditions e.g. operational data quality etc. . The monitored conditions may receive a status of any suitable types or values e.g. boolean numeric states alphanumeric any continuous domain or range of any types of values e.g. zero to one hundred A to Z etc. etc. and may be associated with any suitable range. The status for a monitored condition may be determined in any manner based on the score value e.g. comparisons arithmetic or other computation weighting statistics logic etc. . The lower and upper bounds may be of any suitable values e.g. numeric alphanumeric etc. to define any desired acceptable range. The conditions may include any desired weighting factors where the weighting factors may be applied in any suitable fashion. The various thresholds may be set to any desired values to control the status of the asset or topology.

The status of the monitored conditions e.g. boolean or other states weighted or other score values domain or range values etc. may be combined in any suitable fashion to determine a status for the asset e.g. logically arithmetically weighting normalization scaling statistically etc. . The status of the information assets e.g. states weighted or other score values domain or range values etc. may be combined in any suitable fashion to determine a status for the topology e.g. logically arithmetically weighting normalization scaling statistically etc. . The status for an asset outside or within the context of a topology may be determined based on any quantity of any monitored conditions. These conditions may be specified in any manner e.g. user specified predetermined etc. . The conditions may be enabled and or disabled in any desired fashion while weights or other factors may be assigned to the conditions in any desired manner.

The present invention embodiments may employ any quantity or type of user interface e.g. Graphical User Interface GUI command line prompt etc. where the interface may include any information arranged in any fashion. The interface may include any quantity of any types of input or actuation mechanisms e.g. buttons icons fields boxes links etc. disposed at any locations to enter display information and initiate desired actions via any suitable input devices e.g. mouse keyboard etc. . The topologies may be displayed utilizing any quantity of any suitable symbols icons or other graphics objects for information assets connections and other characteristics e.g. arrows boxes etc. and any suitable indicators e.g. symbols objects highlighting flashing etc. to indicate problematic assets.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises includes including has having and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiments were chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module unit or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

