---

title: Cloud resource placement using placement pivot in physical topology
abstract: In one embodiment, a method comprises retrieving a request graph specifying request nodes identifying respective requested cloud computing service operations, and at least one request edge specifying a requested path requirements connecting the request nodes; identifying a placement pivot among feasible cloud elements identified in a physical graph representing a data network having a physical topology, each feasible cloud element an available solution for one of the request nodes, the placement pivot having a maximum depth in the physical topology relative to the feasible cloud elements; ordering the feasible cloud elements, according to increasing distance from the placement pivot to form an ordered list of candidate sets of feasible cloud elements; and determining an optimum candidate set, from at least a portion of the ordered list, based on the optimum candidate set having an optimized fitness function in the physical graph among the other candidate sets in the ordered list.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08856386&OS=08856386&RS=08856386
owner: Cisco Technology, Inc.
number: 08856386
owner_city: San Jose
owner_country: US
publication_date: 20120821
---
The present disclosure generally relates to allocating data center resources in a multitenant service provider SP data network for implementation of a virtual data center vDC providing cloud computing services for a customer.

This section describes approaches that could be employed but are not necessarily approaches that have been previously conceived or employed. Hence unless explicitly specified otherwise any approaches described in this section are not prior art to the claims in this application and any approaches described in this section are not admitted to be prior art by inclusion in this section.

Placement of data center resources e.g. compute network or storage can be implemented in a variety of ways to enable a service provider to deploy distinct virtual data centers vDC for respective customers i.e. tenants as part of an Infrastructure as a Service IaaS . The placement of data center resources in a multitenant environment however can become particularly difficult if a logically defined cloud computing service is arbitrarily implemented within the physical topology of the data center controlled by the service provider especially if certain path constraints have been implemented within the physical topology by the service provider.

In one embodiment a method comprises retrieving for a cloud computing service a request graph specifying request nodes identifying respective requested cloud computing service operations and at least one request edge specifying a requested path requirements connecting the request nodes identifying a placement pivot from among feasible cloud elements identified in a physical graph representing a data network having a physical topology each feasible cloud element an available solution for one of the request nodes the placement pivot having a maximum depth in the physical topology relative to the feasible cloud elements ordering the feasible cloud elements within candidate sets of feasible cloud elements identified as available solutions for the at least one request edge according to increasing distance from the placement pivot to form an ordered list of candidate sets of feasible cloud elements and determining an optimum candidate set from at least a portion of the ordered list based on the optimum candidate set having an optimized fitness function in the physical graph from among the other candidate sets in the ordered list.

In another embodiment an apparatus comprises a memory circuit and a processor circuit. The memory circuit is configured for storing a request graph for a cloud computing service the request graph specifying request nodes identifying respective requested cloud computing service operations and at least one request edge specifying a requested path requirements connecting the request nodes. The processor circuit is configured for identifying a placement pivot from among feasible cloud elements identified in a physical graph representing a data network having a physical topology each feasible cloud element an available solution for one of the request nodes the placement pivot having a maximum depth in the physical topology relative to the feasible cloud elements ordering the feasible cloud elements within candidate sets of feasible cloud elements identified as available solutions for the at least one request edge according to increasing distance from the placement pivot to form an ordered list of candidate sets of feasible cloud elements and determining an optimum candidate set from at least a portion of the ordered list based on the optimum candidate set having an optimized fitness function in the physical graph from among the other candidate sets in the ordered list.

In another embodiment logic encoded in one or more non transitory tangible media for execution and when executed operable for retrieving for a cloud computing service a request graph specifying request nodes identifying respective requested cloud computing service operations and at least one request edge specifying a requested path requirements connecting the request nodes identifying a placement pivot from among feasible cloud elements identified in a physical graph representing a data network having a physical topology each feasible cloud element an available solution for one of the request nodes the placement pivot having a maximum depth in the physical topology relative to the feasible cloud elements ordering the feasible cloud elements within candidate sets of feasible cloud elements identified as available solutions for the at least one request edge according to increasing distance from the placement pivot to form an ordered list of candidate sets of feasible cloud elements and determining an optimum candidate set from at least a portion of the ordered list based on the optimum candidate set having an optimized fitness function in the physical graph from among the other candidate sets in the ordered list.

Particular embodiments enable optimized placement of a request graph within a physical topology of a service provider data network. The request graph provides a logical representation or logical definition of a virtual data center to be implemented within the service provider data network for a tenant in a multitenant environment. The request graph specifies request nodes and at least one request edge specifying a requested path requirements connecting the request nodes. Each request node of the request graph provides a logical identification or definition of a corresponding cloud computing service operation in the virtual data center where the cloud computing service operation can be a compute storage or networking service or can implement a service provider based policy or constraint. Each request edge specifies a corresponding requested path requirements connecting two request nodes and can specify path requirements based on required bandwidth or quality of service connection type etc. Each requested path may require one or more hops between network devices in the physical topology.

The particular embodiments optimize the placement of the request graph within the physical topology based on identifying feasible cloud elements within a physical graph representing the service provider data network having the physical topology. The feasible cloud elements from the physical graph satisfy specified constraints of the request nodes. A fitness function describes the available resources in the physical graph such that placement of the request graph within the physical topology results in a reduction or decrease in the fitness function due to the corresponding consumption of physical resources within the physical graph by the newly placed virtual graph.

A placement pivot is identified among the feasible cloud elements the placement pivot is chosen as providing the greatest influence in affecting existing resources within the data network in other words the placement pivot provides the greatest influence in affecting the fitness function describing the available resources in the physical graph in one example the placement pivot can have a maximum depth in the physical topology relative to the feasible cloud elements. The placement pivot is used to order the resources of the data network based on proximity to the placement pivot for example the feasible cloud elements can be ordered according to increasing distance from the placement pivot to form an ordered list of candidate sets of feasible cloud elements. Any of the feasible cloud elements or candidate sets of feasible cloud elements can be filtered to remove those that do not satisfy any service provider policies e.g. bandwidth constraint policies overlay constraint policies prescribed path constraint policies . At least a portion K of the remaining candidate sets of feasible cloud elements in the ordered list can be evaluated relative to a fitness function describing the available resources in the physical graph in order to heuristically determine the optimum candidate set having an optimized fitness function among the other candidate sets in the ordered list. The heuristic determination of the optimum candidate set having the optimized fitness function results in a sequence of physical network nodes implementing the request graph in the physical topology in a manner that optimizes the placement of the request graph within the physical graph for example minimizing consumption of bandwidth in the physical topology minimizing fragmentation of data streams in the virtual data center etc.

Hence the virtual data center requirements that are logically defined by a tenant and or constrained by service provider policies can be optimally implemented within the service provider data center based on heuristic optimization of the fitness function relative to an ordered list of candidate sets of feasible cloud elements from a placement pivot providing the greatest influence to the heuristic optimization. Moreover the placement of the request graph based on heuristic optimization of data center resources maintains compliance with any prescribed path constraints that may be specified in advance by the service provider.

The apparatus is configured for implementing virtual data centers for respective customers i.e. tenants in a multitenant environment where virtual data centers can be implemented within the service provider data network using shared physical resources while logically segregating the operations of the virtual data centers to ensure security etc. Each virtual data center added to the service provider data network consumes additional physical resources moreover logical requirements for a virtual data center either by the customer or by service provider policies need to be reconciled with physical constraints within the service provider data network e.g. bandwidth availability topologically specific constraints hardware compatibility etc. . Moreover arbitrary allocation of physical resources in the service provider data network for a virtual data center may result in inefficient or unreliable utilization of resources.

According to an example embodiment heuristic optimization of data center resources relative to a placement pivot providing the greatest influence to the heuristic optimization enables the efficient placement within the data center of the request graph that logically defines virtual data center will preserving service provider policies and constraints.

As illustrated in the physical topology can include at least one provider edge router PEA at least one data center edge router DCE1 26 aggregation switches e.g. AGG1 AGG2 data service nodes e.g. DSN1 DSN2 load balancer devices e.g. LB1 LB2 32 firewall nodes physical devices or virtualized e.g. FW1 FW2 access switches e.g. ACS1 to ACS4 and compute elements e.g. C1 to C32 . The devices illustrated in the physical topology can be implemented using commercially available devices for example the access switches can be implemented using the commercially available Cisco Nexus 7000 or 5000 Series Access Switch from Cisco Systems San Jose Calif. various physical devices can be used to implement the compute elements depending on the chosen virtual data center service or cloud computing service operation to be provided e.g. compute storage or network service . An example compute element providing compute services could be a unified computing system e.g. the Cisco UCS B Series Blade Servers commercially available from Cisco Systems.

Although not illustrated in the physical graph representing the data network also includes an identification of attributes of each of the network devices in the data network including not only hardware configurations e.g. processor type but also identification of the assigned service type to be performed e.g. network service type of aggregation firewall load balancer etc. virtual data center service type of web server Web back end application server App or back end database server DB available resources that have not yet been assigned to a virtual data center e.g. bandwidth memory CPU capacity etc. . Other attributes that can be specified within the attributes include particular capabilities of a network device for example whether a network switch is layer 3 aware for performing layer 3 e.g. Internet protocol operations. Hence the physical graph includes an example inventory and attributes of the network devices in the physical topology for use by the apparatus in identifying feasible cloud elements based on performing constrained parsing and filtering of the network devices relative to logical constraints specified by a request graph or service provider based constraints and policies described below.

The apparatus can include a network interface circuit a processor circuit and a non transitory memory circuit . The network interface circuit can be configured for receiving from any requestor a request for a service such as a request graph from a customer . The network interface circuit also can be configured for sending requests initiated by the processor circuit to targeted network devices of the service provider data network for example XMPP requests for configuration and or policy information from the management agents executed in any one of the network devices of the service provider data network the network interface also can be configured for receiving the configuration and or policy information from the targeted network devices. The network interface also can be configured for communicating with the customers via the wide area network for example an acknowledgment that the request graph has been deployed and activated for the customer . Other protocols can be utilized by the processor circuit and the network interface circuit for example IGP bindings according to OSPF IS IS and or RIP protocol logical topology parameters for example BGP bindings according to BGP protocol MPLS label information according to Label Distribution Protocol LDP VPLS information according to VPLS protocol and or AToM information according to AToM protocol the AToM system is a commercially available product from Cisco Systems San Jose Calif. that can transport link layer packets over an IP MPLS backbone .

The processor circuit can be configured for executing a Cisco Nexus platform for placement of the request graph into the physical topology described in further detail below. The processor circuit also can be configured for creating storing and retrieving from the memory circuit relevant data structures for example the physical graph etc. The memory circuit can be configured for storing any parameters used by the processor circuit described in further detail below.

Any of the disclosed circuits including the network interface circuit the processor circuit the memory circuit and their associated components can be implemented in multiple forms. Example implementations of the disclosed circuits include hardware logic that is implemented in a logic array such as a programmable logic array PLA a field programmable gate array FPGA or by mask programming of integrated circuits such as an application specific integrated circuit ASIC . Any of these circuits also can be implemented using a software based executable resource that is executed by a corresponding internal processor circuit such as a microprocessor circuit not shown and implemented using one or more integrated circuits where execution of executable code stored in an internal memory circuit e.g. within the memory circuit causes the integrated circuit s implementing the processor circuit to store application state variables in processor memory creating an executable application resource e.g. an application instance that performs the operations of the circuit as described herein. Hence use of the term circuit in this specification refers to both a hardware based circuit implemented using one or more integrated circuits and that includes logic for performing the described operations or a software based circuit that includes a processor circuit implemented using one or more integrated circuits the processor circuit including a reserved portion of processor memory for storage of application state data and application variables that are modified by execution of the executable code by a processor circuit. The memory circuit can be implemented for example using a non volatile memory such as a programmable read only memory PROM or an EPROM and or a volatile memory such as a DRAM etc.

Further any reference to outputting a message or outputting a packet or the like can be implemented based on creating the message packet in the form of a data structure and storing that data structure in a tangible memory medium in the disclosed apparatus e.g. in a transmit buffer . Any reference to outputting a message or outputting a packet or the like also can include electrically transmitting e.g. via wired electric current or wireless electric field as appropriate the message packet stored in the tangible memory medium to another network node via a communications medium e.g. a wired or wireless link as appropriate optical transmission also can be used as appropriate . Similarly any reference to receiving a message or receiving a packet or the like can be implemented based on the disclosed apparatus detecting the electrical or optical transmission of the message packet on the communications medium and storing the detected transmission as a data structure in a tangible memory medium in the disclosed apparatus e.g. in a receive buffer . Also note that the memory circuit can be implemented dynamically by the processor circuit for example based on memory address assignment and partitioning executed by the processor circuit .

The request graph specifies request nodes e.g. and and at least one request edge e.g. and . Each request node identifies or defines at least one requested cloud computing service operation to be performed as part of the definition of the virtual data center to be deployed for the customer. For example the request node specifies the cloud computing service operation of web for a virtualized web server the request node specifies the cloud computing service of app for virtualized back end application services associated with supporting the virtualized web server the request node specifies the cloud computing service of db for virtualized database application operations responsive to database requests from the virtualized back end services. Each request node can be associated with one or more physical devices within the physical topology where typically multiple physical devices may be used to implement the request node .

Each request edge specifies a requested path requirements connecting two or more of the request nodes . For example a first request edge vDC NW front end specifies logical requirements for front end applications for the virtual data center including firewall policies and load balancing policies plus a guaranteed bandwidth requirement of two gigabits per second 2 Gbps the request edge specifies a requested path requirements connecting the front end to the request node associated with providing virtualized web server services including a guaranteed bandwidth requirement of 2 Gbps the request edge specifies a requested path providing inter tier communications between the virtualized web server and the virtualized back end application services with a guaranteed bandwidth of 1 Gbps and the request edge specifies a requested path providing inter tier communications between the virtualized back and application services and the virtualized database application operations with a guaranteed bandwidth of 1 Gbps. Hence the request graph provides a logical definition of the virtual data center to be deployed for the customer .

Depending on implementation the request edges of the request graph may specify the bandwidth constraints in terms of one way guaranteed bandwidth requiring the service provider to possibly double the bandwidth requirements between physical network nodes implementing the request nodes . Further the physical topology may include many different hardware configuration types for example different processor types or switch types manufactured by different vendors etc. Further the bandwidth constraints in the physical topology must be evaluated relative to the available bandwidth on each link and the relative impact that placement of the request graph across a given link will have with respect to bandwidth consumption or fragmentation. Further service provider policies may limit the use of different network nodes within the physical topology an example overlay constraint may limit network traffic for a given virtual data center within a prescribed aggregation realm such that any virtual data center deployed within the aggregation realm serviced by the aggregation node AGG1 can not interact with any resource implemented within the aggregation realm service by the aggregation node AGG2 an example bandwidth constraint may require that any placement does not consume more than ten percent of the maximum link bandwidth and or twenty five percent of the available link bandwidth.

In addition to the foregoing limitations imposed by the customer request graph and or the service provider policies arbitrary placement of the customer request graph within the physical topology may result in reversal of network traffic across an excessive number of nodes requiring an additional consumption of bandwidth along each hop.

According to an example embodiment the processor circuit can determine in operation of an optimum candidate set of feasible cloud elements resulting in the optimized placement of the customer virtual data center according to the request graph . The processor circuit identifies a placement pivot that provides the greatest influence in affecting existing resources within the data network as described in further detail below the processor circuit identifies the compute node C19 as a feasible cloud element for the request node the processor circuit also identifies compute node C19 as having the greatest influence in affecting existing resources within the data network for example based on having the maximum depth e.g. five hops within the physical topology . The processor circuit also identifies the compute node C21 as a feasible cloud element for the request node and the compute node C30 as a feasible cloud element for the compute node

As described further detail below the processor circuit orders the feasible cloud elements according to increasing distance from the placement pivot in order to form an ordered list of candidate sets of feasible cloud elements. The processor circuit determines an optimized fitness function in the physical graph from the ordered list enabling the identification of the optimum candidate set including the sequence of feasible cloud elements that establish the network paths for reaching the feasible cloud elements. As illustrated in the identification of the optimum candidate set results in the request edge being deployed along the multi hop network path the request edge being deployed along the network path the request edge being deployed along the network path and the request edge being deployed along the network path

Referring to the processor circuit retrieves in operation the request graph for example from the memory circuit from another data storage node in the service provider data network or directly from the customer via the wide area network . The processor circuit in operation finds from the physical graph feasible cloud elements CEs that are identified as possible solutions for the request nodes.

As illustrated in the processor circuit in operation can identify feasible cloud elements from the physical topology that are determined to be a possible solution for a corresponding request node based on the request node specifying service requirements on at least one prescribed attribute type e.g. processor type virtual data center service type network service type etc. . For example the processor circuit can identify e.g. from the list of attributes in that the computing nodes C1 through C9 and C17 through C20 of each are configured to provide the virtualized Web server services requested by the request node the computing nodes C10 through C12 and C21 through C24 each are configured to provide the virtualized backend application services requested by the request node and the computing nodes C13 through C16 and C25 through C32 each are configured to provide the virtualized database application operations requested by the request node . The processor circuit also can identify that the network nodes LB1 and LB2 and FW1 and FW2 can provide at least some of the network services requested in the request edge and that the aggregation nodes AGG1 and AGG2 can provide the network service type of aggregation service requested in the aggregation agg request node where the request node can be added by the service provider based on prescribed policies and constraints imposed by the service provider.

The processor circuit in operation also can filter from the possible solutions those network nodes that do not satisfy any customer constraints or service provider constraints for the request nodes. For example if a customer requests one provider edge router while the service provider data network includes multiple service provider edge routers for connecting to the wide area network then if the customer specifies multiprotocol label switching MPLS the processor circuit will filter out any provider edge router that does not offer MPLS services assume in this example that the provider edge router PEI offers MPLS services and another provider edge router not shown does not provide MPLS services . In addition the customer may request that the compute nodes utilizes Intel processor cores hence ARM or AMD processor cores would be removed resulting in the feasible cloud elements that serve as available solutions for the request nodes based on multiple request attributes.

The processor circuit in operation attempts to locate candidate sets of feasible cloud elements for example based on generating a sequence of feasible cloud elements that are chosen from each of the sets of available solutions for the corresponding request node . In one example embodiment permutations of sequences may be generated by the processor circuit in another embodiment operation can be deferred until after the placement pivot is chosen in operation .

The processor circuit in operation can choose a placement pivot within the physical graph as illustrated in the physical topology as the compute node C19 . The placement pivot is chosen by the processor circuit as providing the greatest influence in affecting the fitness function described below. After choosing a placement pivot the processor circuit in operation can order the feasible cloud elements within candidate sets of feasible cloud elements according to increasing distance from the placement pivot i.e. the closest node first ordered according to increasing distance . Hence the ordering in operation can form an ordered list of candidate sets of feasible cloud elements illustrated in . The ordered list represents a list of potential solutions for the request graph starting with a solution providing a minimal impact or influence in adversely affecting i.e. degrading the fitness function for example the list of potential solutions can start with solutions that potentially provide minimal reduction in the fitness value of the physical data center topology. Hence the entire set of candidate sets in the ordered list need not be parsed to exhaustively identify an optimal solution since the first K members of the ordered list can provide the best results in providing minimal adverse impact e.g. minimal reduction to the fitness function of the physical graph with a high probability subject to filtering any infeasible candidates in the ordered list that cannot satisfy all required constraints by the request graph or the service provider based constraints and policies.

Hence the processor circuit in operation can calculate the fitness function for the first K feasible candidate sets in the ordered list in order to identify in operation the optimum candidate set having the optimized fitness function i.e. the best heuristically determined fitness function value that provides the least reduction in the fitness function upon placement of the request graph into the physical graph during deployment in operation using the feasible cloud elements identified in the optimum candidate set . As illustrated in the optimum candidate set includes the sequence of feasible cloud elements C19 for the request node C21 for the request node and C30 for the request node resulting in the optimized placement illustrated in .

The processor circuit retrieves in operation the customer request graph e.g. of that specifies the request nodes and specified by the customer and the request edges and specified by the customer . The processor circuit can optionally add service provider based request nodes e.g. of and or request edges that represent policies implemented in the physical graph by the cloud service provider for a cloud computing service resulting in the request graph Gof .

The processor circuit in operation identifies potential request node placement based on identifying feasible cloud elements using constrained parsing and filtering for each attribute type specified by a request node . For example the request node can request a processor type e.g. an Intel based processor core an ARM based processor core and AMD based processor core etc. the request node also can specify a prescribed virtual data center service type for example a compute service storage service or a networking service the request node also can specify a prescribed network service type for example a provider edge service a data service node a firewall service etc. Other attributes can be specified by a request node for example media streaming online collaboration etc.

Hence the request graph illustrated in precisely defines the virtual data center to be implemented for the customer including the policies and constraints imposed by the service provider within the data network .

The processor circuit in operation can identify possible request edge placement based on building sets of possible solutions for feasible cloud elements . The sets of possible solutions for feasible cloud elements are identified based on identifying respective paths in the physical graph for connecting the associated feasible cloud elements where one possible solution is the set specifying the sequence of feasible cloud elements AGG1 C1 C10 and C13 for the respective request nodes and another possible solution is the sets specifying the sequence of feasible cloud elements AGG1 C1 C10 and C21 for the respective request nodes and etc. The processor circuit can filter in operation the sets of possible solutions based on the service provider based constraints and policies for example bandwidth constraint policies overlay constraint policies etc. in order to generate or determine the candidate sets of feasible cloud elements.

Referring to the placement pivot is chosen from the feasible cloud elements in operation by the processor circuit . For example the placement pivot can have a maximum depth in the physical topology relative to the set of identified feasible cloud elements in other words the maximum depth relative to the provider edge of all the feasible cloud element is four hops. The placement pivot also can be chosen alternately or in addition to maximum depth based on identifying the network node having the maximum available link bandwidth e.g. uplink bandwidth relative to the other feasible cloud elements having the same maximum depths and or performing the same request node service .

The processor circuit in operation orders the candidate sets of feasible cloud elements as illustrated in starting with the shortest distance to the placement pivot in order by increasing distance from the placement pivot in other words the processor circuit orders the feasible cloud elements by starting with the feasible cloud element causing the minimal consumption of bandwidth by traveling the least number of hops to the placement pivot . Other heuristics can be used for ordering the candidate sets of feasible cloud elements relative to the placement pivot for example ordering based on minimal fragmentation. Further although only one placement pivot is disclosed additional placement pivot can be utilized for multidimensional ordering.

The ordered list of candidate sets can be pruned in operation by the processor circuit based on removing any candidate sets including infeasible segments. For example if the processor circuit determines that a path from the compute node C20 or C22 to C30 is infeasible then the processor circuit can remove from consideration any candidate set that includes the path from the compute node C20 to C30 or that includes the path from the compute node C22 to C30.

The processor circuit in operation begins calculating the fitness function for each of the first K candidate sets in the ordered list of starting with the first candidate set in the ordered list to heuristically determine the fitness function value e.g. the relative amount of bandwidth to be consumed by the candidate set . As illustrated with respect to the processor circuit in operation of identifies the optimum candidate set having the optimized fitness function for example based on determining a minimum sum of residual bandwidth. Hence the optimum candidate set is heuristically determined to provide a sequence of physical network nodes that implement the request graph in the physical topology with minimal consumption of bandwidth in the physical topology.

According to the example embodiments cloud resource placement in a physical topology of a service provider data network can be optimized based on ordering candidate sets of feasible cloud elements relative to a placement pivot identified as providing the greatest influence in affecting the fitness function describing the available resources in the physical graph. Hence the optimized placement can be identified to maximize the fitness function over the residual physical data center s capacity while satisfying service provider constraints and policies.

While the example embodiments in the present disclosure have been described in connection with what is presently considered to be the best mode for carrying out the subject matter specified in the appended claims it is to be understood that the example embodiments are only illustrative and are not to restrict the subject matter specified in the appended claims.

