---

title: Legacy application migration to real time, parallel performance cloud
abstract: A system and method  that provides legacy software applications  to be incorporated into a massively parallel and distribution processing model in the Cloud, with a high performance parallel and distributed computing (cloud) “wrapper”  around legacy and current systems to enable, without legacy product code change or invasive addition/editing, the legacy product to access and fully utilize the power and ability of distributed computing within the cloud through a Pneuron “cortex” platform virtual server . The system and method also provides the ability to distribute multiple, concurrent instances of the legacy applications, dynamically manage the load volumes, and automatically create and remove new virtual machines based upon demand requirements.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09558441&OS=09558441&RS=09558441
owner: Pneuron Corp.
number: 09558441
owner_city: Nashue
owner_country: US
publication_date: 20120409
---
This application is a continuation in part of U.S. patent application Ser. No. 12 870 348 filed on Aug. 27 2010 and entitled System and Method For Employing The Use Of Neural Networks For The Purpose Of Real Time Business Intelligence And Automation Control and claims the benefit of U.S. Provisional Patent Application No. 61 472 812 entitled Legacy Application Migration To Real Team Parallel Performance Cloud which was filed on Apr. 7 2011 both of which are incorporated herein by reference

The present invention relates to cloud computing parallel processing distributed computing fault tolerance and load balancing and more particularly relates to a system and method for providing legacy software applications to be incorporated into a massively parallel and distribution processing model in the Cloud

Cloud computing is considered one of the top transformational IT changes and trends in 2010 and onwards. Cloud computing provides a scalable dynamic and distributed infrastructure for enabling applications to dynamically obtain and utilize computing resources on demand.

Most businesses have existing computer software applications that are not engineered or architected for cloud computing. Many existing applications cannot perform distributed and parallel processing and are unable to be deployed on an elastic cloud computing environment without significant changes to the existing applications source code and application architecture. The challenge is applying a cost effective and simple migration and transformation process for legacy applications and products so that they can be incorporated into the cloud computing environment.

A legacy system or application program is a previously deployed third party or internally developed customer application that continues to be used typically because it still functions for the users needs or is too expensive to replace even though newer technology or more efficient methods of performing a task are now available. Legacy applications include programs having JAVA command lines client and server applications based on JAVA thin client MICROSOFT thin client and server based applications Client Server applications Client workstation applications third party independent software vendor applications and proprietary client applications running on proprietary architectures and operating systems. Legacy application programs are typically serially programmed linear in performance residing in only one data center and with a limited number of users constrained by geographic or business location.

To implement an existing legacy application in the cloud computing environment and enable the application to be distributed parallel and demand elastic is a very expensive and time consuming activity. The existing application architecture and source code needs to be re factored and significantly rewritten tested extensively and re integrated with its existing applications.

The cost and time to implement such a legacy application re write can exceed the original cost and development time. Given these impediments businesses are unable to adapt their existing applications to the cloud computing environment. The new Cloud paradigm offers huge business and technical value including parallel processing distributed use anywhere high performance high resiliency high accessibility and high availability.

This significant divergence in technology deployment and accessibility creates a significant challenge the cost effective and manageable ability to migrate applications best processes and institutionalized intellectual property from serial linear data center or application confined applications to a new technology paradigm of agile competitive massively performed use anywhere and broadly distributed accessible functions. It is this challenge that the invention specifically addresses.

Accordingly the objective of the present invention is to provide a non intrusive and assimilation model which enables these legacy applications to be transformed from standalone serial based computing to highly distributed parallel processing and cooperating cloud application services. The innovation combines the cloud centric distributed and parallel processing Pneuron platform infrastructure with a suite of Pneuron legacy wrapper libraries to assimilate or wrap and encapsulate legacy applications and enable them to operate within the Pneuron cloud computing platform.

The present invention incorporates technology and process innovation using the assignee s distributed Pneuron platform computing design and high performance highly resilient virtual server for the migration of legacy applications to cloud that is simple quick and a fraction of the cost of traditional migration and porting solutions and referred to herein as the Pneuron platfom or Pneuron Platform and technology or Pneuron technology or simply Pneuron .

The present invention relates to cloud computing parallel processing distributed computing fault tolerance and load balancing and more particularly relates to a system and method for providing legacy software applications to be incorporated into a massively parallel and distribution processing model in the Cloud having the ability to provide simple real time high performance parallel and distributed computing cloud wrapper around legacy and current systems to enable without legacy product code change or invasive addition editing the legacy product to access and fully utilize the power and ability of distributed computing within the cloud through the Pneuron cortex platform virtual server.

The present invention also provides a system and method to distribute multiple concurrent instances of the legacy applications dynamically manage the load volumes and automatically create and remove new virtual machines based upon demand requirements.

The system and method of the present invention facilitates inter processing connections between distributed applications enabling the passing of information and execution of processing across participating application nodes. Also disclosed is and innovative process for incorporating these applications into its distribution framework and enables comprehensive processing from work initiation through completion.

The present invention further features a system and method for the alignment of a business process for the use of the Pneuron platform and technology to enable refactoring and migration of legacy applications and traditional products systems into a high availability fault tolerant load balancing parallel and distributed processing within a cloud virtualization computing environment. Adding to the original distributed data and analysis this addition adds the ability to incorporate and distribute entire applications using Pneuron technology and enable existing applications to realize quickly and cost effectively the value of modern distributed cloud computing.

One key to the design of the present invention is the ability to rapidly encapsulate and incorporate any and all non cloud computing applications into a highly elastic virtual infrastructure within the Cloud without significantly modifying the application source or applying invasive changes to the application.

The unique process combined with the integration to the Pneuron platform enable speed in deployment and rapid ability to apply a parallel distributed cloud processing model to a current legacy application with no reprogramming requirements combined with industrial strength security agility resiliency and consumerability that forms one of the basis of this invention.

The attached drawings and description beginning with highlight the Pneuron server Cortex environment in accordance with the present invention and its ability quickly cost effectively and seamlessly wrap existing products with a high performance API and connect seamlessly to the Pneuron Cloud Virtual Server Cloud Cortex . The Pneuron server has an interface to commercial cloud management systems . Different cloud management systems and environments can be supported by extending the cloud management adapter library and not affecting the overall Pneuron platform. In this manner cloud services can be monitored and adjusted while also enabling cloud services to be configured .

The external interface wrapper API enables an existing software product to fully leverage massively parallel highly distributed horizontally and vertically resilient and available scale and so increase in performance through Pneuron parallel processing automatically clone multiple instances of the same application to ensure volume and load is managed in parallel rather than serially in current solutions and enable access and instantiation of the application anywhere within the cloud while maintaining automatic demand and elasticity and fault tolerance .

The present invention features an innovative process and technology within its Pneuron platform service that enables legacy third party non cloud designed software applications to be incorporated into a massively parallel and distribution processing model in the Cloud. The process is made up of a number of simple steps using the Pneuron technology wherein 

A. Existing legacy applications are wrapped with a Pneuron service Interface or Wrapper Exoskeleton . These wrappers are incorporated into a Pneuron wrapper library and preconfigured and enable off the shelf available interface instantiations specifically mapped to the target application s API. The wrapper is best considered an exoskeleton connection service which includes an encapsulation of an API all base Pneuron functions and characteristics security logic specific to the technology and services enabling the connection to the hyper fast resilient clustered Pneuron cortex Platform residing in the cloud. Wrappers are off the shelf and aligned to the specific type of technology including 

Each wrapper once deployed allows applications to be cloud enabled including parallel processing on demand vertical and horizontal scale auto cloning to enable load sharing and deep resiliency high availability and clustering in either private or public cloud.

The Pneuron solution is agnostic to the interface type or application requirements Database a Service an abstract table interface HTTP sniffer or any number of methods to ensure maximum performance and connectivity.

These wrappers in simple terms enable different applications to interact transparently with the Pneuron platform.

If required the present invention can store partial results from previous executions and use those as parameters depending on the complexity of the operation at hand. The invoke method shown in is based on the reflection process. In this way the client can provide JAR files or provide from the beginning a collection of JAVA source files that will be incorporated in the project from an early stage or simply have them added at runtime as a JAR type file import. In this way the client has the possibility to use different calls from different class instances actually object instances for those classes and organize those in a way instruction code block that will allow the client to organize the logic and create the proper integration of the code.

Once the applications are wrapped the applications are represented as Pneurons within the Pneuron Platform. The applications can then be incorporated into Pneuron networks and linked to the different Pneuron applications including the Design Studio Enterprise Control Manager and the Admin application . The wrapped legacy Pneurons now have configuration plans established. During the runtime processing the Pneuron cortex platform orchestrates the remote instances of the configured Pneuron networks and enables the target legacy application to initiate multi threaded requests transmit and fully utilize a high availability elastic and resilient architecture.

This cortex platform is a high performance cloud enabled virtual server that enables the wrapped legacy application to dynamically create and remove new cloud nodes and automatically deploy new application images with remote instances of the legacy application operating within the Pneuron platform. Specific functions applied include auto load share distribution and accessibility across multiple data centers to utilize capacity anywhere within the cloud auto clone as and when necessary for automated capacity and performance balancing scale vertically and horizontally without manual initiation auto restart in different location if the application encounters critical errors or failure to operated and seamlessly integrates with other applications within the cloud as if the application has been fully and completely reconfigured for distributed virtualized cloud operation.

The API Wrapper Pneuron provides a common interface and facility for receiving and processing external application requests. The API Pneuron marshals these requests to the Dispatcher Pneuron for evaluation and processing.

The Dispatcher Pneuron transmits the durable messaging requests to the Intelligent Load Balance and Queue Management Pneurons which are monitoring the Pneuron remote worker instances and work queues and assigning work to the legacy applications. Based on load evaluation the Intelligent Load Balance and Queue Management Pneurons instantiates new cloud nodes based on demand and automatically propagate another remote instance and distributes work.

The legacy application wrapped Pneuron performs its work and then interacts with external applications automatically. The API Wrapper Pneuron interacts with Master Pneuron components which manage requests keep counts of work in process perform load balancing marshal work to distributed wrapped legacy application instances instantiate new instances of the legacy applications and remove instancesased on load and threshold levels.

External transaction requests occur through HTTP requests . External transaction requests will initiate an API request to the Web Service Client JAR . The Web Service Client takes the WSDL and turns it into a Java call . The JAVA call request message will be stored in the database. All units of work are persisted in a Pneuron persisted queue for resilience elasticity and high availability.

The Web Service Client sends a JMS broadcast to subscribed Master and Slave Dispatchers . There can be any number of Masters and Slaves and generally the number is a result of the amount of volume at any given time. This enables a dynamic creation and destruction of Pneurons which in turn allows real time volume spikes to be managed simply allows for maximum use of available system resources no matter where within the cloud they reside and enables real time application management. A more detailed view of the master slave and worker pneuron relationship is shown in .

The Master API obtains an instruction from the wrapped application a message a volume spike a system crash request to access from a location or any number of other instructions and forwards it to the Dispatcher Pneuron. The Dispatcher Pneuron communicates with the Load and Queue Manager. If the Dispatcher is no longer the primary master for example it goes down or the Hardware or data center supporting it is no longer accessible the Slave will take over applying the required units of work or activity spooling up more processing power moving a message cloning the application providing secure access to the application to the requesting remote user.

The Load and Queue Manager keeps a running count of all units of work or instructions and activities and has to figure out which Pneuron Server to hand it to for processing. Based on round robin and thresholds it will hand the message to a Worker Instance. If all workers are busy or otherwise not available for any reason the Load and Queue Manager instantiates a new remote instance and server in real time. Based on thresholds low work volume would remove remote instances and servers. The real time creation and destruction of instances servers and nodes is a direct calibration to the volume of instructions and activities within the platform.

Inter process communications occurs between the Master Dispatcher and the Slave Dispatcher to ensure the viability of the Dispatcher. If the communications are disrupted the Slave Dispatcher will become the new Master dispatcher and a second take Slave over as Dispatcher the Master will be instantiated. This auto hierarchy enables deep resiliency if the Master fails a server failure or data center crash and the Master can no longer communicate and control the network its queue functions and all activities are instantly passed to a Slave which automatically becomes a Master.

The only time the Slave Dispatcher will get involved is switching from the master and it will use the persisted queue checkpoint to start processing. When the slave becomes the master it just re queues everything.

The unit of work is passed from the Master Pneuron Server to the Remote Pneuron Server and the legacy wrapped Pneuron. The legacy wrapped Pneuron will perform the work. Multiple requests in flight are units of work. You can have applications or activities and have multiple Pneuron Servers. within a Pneuron Servers.

The Pneuron network will do the work directly. The load and capacity increasing and decreasing the Remote Pneuron Servers will similarly destroy and instantiate new Remote Pneuron Servers and un persist the message from the queue apply a dual message . The complete message Pneuron decrements the in flight count to 1 the in memory queue .

Wrapped legacy applications communicate and interface through Pneuron messaging protocols and initiates external transaction updates.

The benefits of the present invention include the ease of wrapping and incorporating existing applications into Cloud and distributed parallel processing infrastructure rapid migration and transition to cloud infrastructures automatic load and distribution of processing with platform enabled instantiation of work queues applications and parallel processing on demand and the ability to simultaneously process multiple concurrent applications sessions reducing bottlenecks and accelerating complex high resource processing into significantly shorter turnaround processing jobs that take days can be reduced to hours and less .

Modifications and substitutions by one of ordinary skill in the art are considered to be within the scope of the present invention which is not to be limited except by the allowed claims and their legal equivalents.

