---

title: Dynamic trap for detecting malicious applications in computing devices
abstract: A trap is dynamically created in a computing device to detect a malicious application. The trap may be a fake e-mail address created in response to detecting running of an application in the computing device. The fake e-mail address includes a local-part that identifies the application and identifies the mobile computing device (e.g., by user identifier). A backend system receives e-mails that are addressed to fake e-mail addresses. The backend system parses a recipient address of a received e-mail to identify an application associated with the e-mail and the computing device where the fake e-mail address was generated. The backend system informs a user of the computing device of a data leakage occurring in the computing device and the application that may be responsible for the data leakage.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08677495&OS=08677495&RS=08677495
owner: Trend Micro Incorporated
number: 08677495
owner_city: Tokyo
owner_country: JP
publication_date: 20120524
---
The present invention relates generally to computer security and more particularly but not exclusively to methods and apparatus for detecting malicious applications.

Malicious codes may be detected using traditional antivirus algorithms such as pattern matching and behavior monitoring. Pattern matching involves using a scanner to match contents of a file or other data against signatures of known malicious codes. Although effective in detecting malicious codes pattern matching is processor intensive and requires a relatively large storage space to store the signatures. Like pattern matching behavior monitoring consumes a relatively large amount of computing resources to be able to monitor and make decisions on particular activities of application programs applications being monitored. In addition behavior monitoring may result in a large number of false positives i.e. declaring an application to be malicious when it is actually not.

The above problems are exacerbated when pattern matching or behavior monitoring is employed in a low resource computer such as a mobile computing device. Compared to a regular computer such as a desktop or laptop computer a typical mobile computing device has low memory and processing resources. As a result algorithms for detecting malicious codes in regular computers may not be suitable for use in mobile computing devices.

In one embodiment a trap is dynamically created in a computing device to detect a malicious application. The trap may be a fake e mail address created in response to detecting running of an application in the computing device. The fake e mail address may include a local part that identifies the application and identifies the mobile computing device e.g. by user identifier . A backend system receives e mails that are addressed to fake e mail addresses. The backend system parses a recipient address of a received e mail to identify a detected application and the computing device where the fake e mail address was generated. The backend system informs a user of the computing device of a data leakage occurring in the computing device and the name of the application that may be responsible for the data leakage.

These and other features of the present invention will be readily apparent to persons of ordinary skill in the art upon reading the entirety of this disclosure which includes the accompanying drawings and claims.

In the present disclosure numerous specific details are provided such as examples of apparatus components and methods to provide a thorough understanding of embodiments of the invention. Persons of ordinary skill in the art will recognize however that the invention can be practiced without one or more of the specific details. In other instances well known details are not shown or described to avoid obscuring aspects of the invention.

Referring now to there is shown a schematic diagram of a computer that may be employed with embodiments of the present invention. The computer may be employed as any of the computers described below. The computer may have fewer or more components to meet the needs of a particular application. The computer may include a processor . The computer may have one or more buses coupling its various components. The computer may include one or more user input devices e.g. touch screen keyboard mouse one or more data storage devices e.g. hard drive optical disk USB memory a display monitor e.g. LCD flat panel monitor CRT a communications interface e.g. network adapter modem cellular interface and a main memory e.g. RAM . The communications interface may be coupled to a computer network which in this example includes the Internet.

The computer is a particular machine as programmed with software modules . The software modules comprise computer readable program code stored non transitory in the main memory for execution by the processor . For example the software modules may comprise a monitor agent a mobile operating system and one or more applications when the computer is employed as a mobile computing device see . As another example the software modules may comprise a mail server when the computer is employed as a backend system see .

The computer may be configured to perform method steps by executing the software modules . The software modules may be loaded from the data storage device to the main memory . The software modules may also be made available on other computer readable storage medium including optical disk flash drive and other memory devices.

The mobile computing device may be a mobile phone or a tablet for example. The mobile computing device may be running the monitor agent the mobile operating system and one or more applications . The mobile operating system may comprise the ANDROID operating system for example. More specifically the mobile computing device may comprise an ANDROID mobile phone or ANDROID tablet.

In general a mobile operating system is designed to be suitable for computing devices that are constrained in terms of memory and processor speed. Embodiments of the present invention are especially useful when employed in mobile computing devices as they allow for detection of malicious codes even with the constraints of a mobile operating system and low computing resources. It is to be noted however that embodiments of the present invention may also be employed in regular computers.

In the example of the mobile computing device receives the monitor agent from a computer system hosting an application store arrow . The mobile computing device may also receive the monitor agent from other sources. The monitor agent may comprise computer readable program code configured to register with the backend system to monitor for and detect a running application and to dynamically create a trap associated with the application in response to detecting that the application is running. The trap may comprise a fake e mail address .

Upon installation in the mobile computing device the monitor agent connects to the backend system for registration arrow . The computing device the backend system and other computing devices shown in may communicate over the Internet. In one embodiment as part of the registration process the monitor agent provides that backend system a user identifier such as a User ID for identifying the mobile computing device where the monitor agent is installed. Also as part of the registration process the monitor agent provides the backend system the contact information of the user of the mobile computing device . The contact information may be an e mail address of the user for example. The contact information allows the mail server hosted by the backend system to warn the user of data leakage and a possible malicious application in the mobile computing device when the mail server receives an e mail that is addressed to the fake e mail address . The monitor agent may prompt the user for a user identifier and an e mail address both of which are provided by the monitor agent to the backend system .

An application comprises an application program which may or may not be malicious. Applications for mobile computing devices which are also referred to as APPs may be obtained from a variety of sources including APP stores. Because of a large number of available free APPs there is a tendency for mobile computing device users to download and try APPs on impulse often ignoring the security ramifications of receiving APPs over the Internet. A growing concern is the increase in the number of malicious APPs that steal data from mobile computing devices. Examples of data that may be stolen include e mail addresses from contact lists credit card information and passwords. Stolen e mail addresses may be sold to or used by spammers to send spam e mail. Worse stolen e mail addresses may be used for phishing or to perpetrate other frauds on the owner of the e mail address because the e mail address may have been stolen by the malicious APPs along with the actual name and other contact information of the e mail address owner.

The monitor agent monitors for an application that is running on the mobile computing device . In the example of the monitor agent detects running of an application arrow which is newly launched in the mobile computing device . The monitor agent may detect running applications by using an application programming interface API of the mobile operating system for example. A running application may be identified by its process name which may be obtained by hooking monitoring or enumerating process management for example. In response to detecting launching of the application the monitor agent creates a fake e mail address associated with the application arrow . As can be appreciated an e mail address comprises a local part before the sign and a domain name to which the e mail will be sent to after the sign. In one embodiment the monitor agent creates the fake e mail address with the domain name of the mail server and a local part that identifies the mobile computing device and the detected running application . In the example of the fake e mail address has the format 

where APP identifies the detected running application UserID identifies the mobile computing device and fakemail.com is the domain name of the mail server . The application may be identified by its process name in the local part.

The fake e mail address is a fake in that it is a fictitious e mail that has been created to detect malicious applications. The fake e mail address does not belong to any contact of the user. Because the fake e mail address has been dynamically created by the monitor agent for detecting malicious applications and is not an e mail address of a contact of the user there is no legitimate reason for seeing the fake e mail address outside of the mobile computing device . That is receiving an e mail having the fake e mail address as a recipient address indicates that the fake e mail address has somehow been stolen from the mobile computing device and that data leakage is occurring in the mobile computing device . In the example of the fake e mail address has the domain name of the mail server to allow the mail server to receive e mails addressed to the fake e mail address . The monitor agent stores the fake e mail address in the mobile computing device . In one embodiment the monitor agent includes the fake e mail address in a contact list in the mobile computing device .

In one embodiment the monitor agent does not create the fake e mail address before detection of a running application . This helps ensure that the fake e mail address is made available only after an application has been detected to be running making it easier to correlate theft of the fake e mail address with the running of the application .

In the example of the detected running application comprises malicious code configured to steal data from the mobile computing device . The running application finds the fake e mail address arrow e.g. from a contact list and retrieves or copies the fake e mail address along with other stolen data. The application forwards the stolen data which include the fake e mail address to a malicious site hosted by a computer system arrow . The fake e mail address may be sold or otherwise provided to a spammer site hosted by a computer system arrow . The spammer site sends one or more spam or phishing e mails having the fake e mail address as the recipient address. In the example of the spammer sent a spam e mail addressed to the fake e mail address arrow .

The backend system may comprise one or more computers. The backend system may comprise a server computer system hosting the mail server for example. The mail server may comprise computer readable program code configured to receive e mails addressed to fake e mail addresses created by a monitor agent and to analyze the recipient address of received e mails to identify the mobile computing device where the fake e mail address was created and the application associated with the fake e mail address.

In the example of the mail server receives the e mail sent by the spammer arrow . The mail server parses the e mail to extract its recipient address which in this example is the fake e mail address . In one embodiment the mail server analyzes the fake e mail address by extracting its local part which in this example includes an identifier of the application associated with the fake e mail address and a user identifier. Because the fake e mail address is not an e mail address of a real contact of the user receiving the e mail addressed to the fake e mail address indicates that data leakage is occurring in the mobile computing device . Furthermore because the application identified in the fake e mail address was the application that was running in the mobile computing device when the fake e mail address was created by the monitor agent the identified application is highly suspicious.

In one embodiment the mail server deems the application identified in the fake e mail address to be malicious. Accordingly the mail server retrieves the contact information of the user of the mobile computing device identified in the fake e mail address and sends a notification to the user arrow . For example the mail server may send an e mail with the notification to the e mail address of the user provided during registration of the monitor agent . The notification may inform the user that data leakage is occurring in the mobile computing device and that the application identified in the fake e mail address may be malicious. As can be appreciated there is much value to the user in knowing that data in the mobile computing device are compromised. The user may take a responsive action to scan for malicious codes not just the identified application but also other applications on the mobile computing device .

As a particular example the monitor agent may detect that an application APP1 is running on the mobile computing device . In response to the detection the monitor agent may create a fake e mail address associated with the application APP1 as follows 

where APP1 identifies the application APP1 UserID identifies the mobile computing device and fakemail.com is the domain name of the mail server . The mail server does not receive an e mail that has the fake e mail address associated with the application APP1 as a recipient address.

It is to be noted that a typical malicious application may steal data after a relatively short period of time so the fake e mail address associated with an application does not have to be kept for a long time. For example after 10 minutes or shorter of creating the fake e mail address the fake e mail address may be changed to be associated with another application. In that embodiment only one fake e mail address the last one created is present in the mobile computing device at any time. This helps alleviate any performance issues that may result in keeping track of multiple fake e mail addresses .

After a period of time the user may install and run another application APP2. In response to detecting the running of the application APP2 the monitor agent may change the fake e mail address to be associated with the application APP2 instead of with the application APP1 as follows 

where APP2 identifies the application APP2 UserID identifies the mobile computing device and fakemail.com is the domain name of the mail server . This time however the mail server receives a spam e mail having the recipient address APP2 UserID fakemail.com . The mail server parses the local part of the recipient address to identify the application APP2 and the UserID of the user of the mobile computing device . The mail server sends an e mail to the user notifying the user that the application APP2 may have stolen data from the computing device and that it is advisable to check the mobile computing device for malicious codes.

In the example of the monitor agent monitors for a running application step . In response to detecting a newly launched application running in the mobile computing device the monitor agent creates a fake e mail address associated with the detected running application step to step . Otherwise the monitor agent continues monitoring for a running application step to step . In one embodiment the monitor agent does not create a fake e mail address associated with an application until after that application has been detected by the monitor agent to be running. This increases the probability that the application is the application that stole the fake e mail address when an e mail addressed to the fake e mail address is received by the mail server . The monitor agent continues monitoring for other running applications .

In the example of the mail server monitors for e mails addressed to a fake e mail address step . In response to receiving an e mail addressed to a fake e mail address step to step the mail server extracts the recipient address of the received e mail which is a fake e mail address to determine the affected computing device and the application involved step . In one embodiment the mail server parses the recipient address to extract the user identifier and name of the application from the local part of the fake e mail address . The user identifier identifies the user allowing the mail server to obtain the contact information of the user which may have been obtained through a registration process. The name of the application identifies the particular application that may have stolen the fake e mail address from the computing device of the user. The mail server notifies the user about the data leakage occurring in his computing device and the application that may be responsible for the data leakage step . The mail server continues to monitor for other e mails having a fake e mail address as a recipient to detect data leakage in other computing devices.

Optionally information obtained by the mail server by analyzing received e mails may be employed for other computer security functions including for anti spam anti phishing etc. This is particularly advantageous in this instance because e mails that are addressed to fake e mail addresses are highly likely to be malicious e mails. As a particular example the mail server may identify characteristics of a received e mail step including the e mail s subject line message body recipient addresses sender address and so on. The mail server or other module may provide the characteristics to computing devices that subscribe to receive updates to computer security functions step . A computing device receiving the characteristics e.g. as an update to a pattern file may use the characteristics to perform a computer security function step . For example the monitor agent may receive the characteristics and use the characteristics to determine whether or not an e mail received in the mobile computing device is spam by comparing the characteristics to the subject line message body recipient addresses and or sender address of the received e mail.

While specific embodiments of the present invention have been provided it is to be understood that these embodiments are for illustration purposes and not limiting. Many additional embodiments will be apparent to persons of ordinary skill in the art reading this disclosure.

