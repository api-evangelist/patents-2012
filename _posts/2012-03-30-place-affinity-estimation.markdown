---

title: Place affinity estimation
abstract: A system and method for estimating a place affinity for a user is disclosed. The system comprises a gathering module, a communication module and a scoring module. The gathering module receives a place and retrieves rich place data associated with the place. The communication module retrieves user profile data associated with a user and a place affinity model associated with the user. The scoring module estimates an affinity score for the place using the place affinity model based at least in part on the rich place data and the user profile data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09026364&OS=09026364&RS=09026364
owner: Toyota Jidosha Kabushiki Kaisha
number: 09026364
owner_city: Toyota-shi, Aichi-ken
owner_country: JP
publication_date: 20120330
---
This application claims priority under 35 USC 119 e to U.S. Application No. 61 569 460 entitled Place Affinity Estimation filed Dec. 12 2011 the entirety of which is herein incorporated by reference.

The specification relates to data processing systems. In particular the specification relates to a system and method for estimating a place affinity for a user.

It is helpful to learn a user s preference or affinity to different places e.g. places that the user likes or dislikes etc. so that a navigation system may provide personalized navigation services to the user. Existing systems in a vehicle that model a place affinity or place preference for a user require an explicit input of the preference from the user. For example a user may add a place to a list of Favorites or give an explicit feedback describing that he or she likes or dislikes a place. However this manual mode of entering a liked place in existing systems has been proven to be deficient and problematic in eliciting the place preference from the user since the user usually ignores the request and does not provide any input.

The specification overcomes the deficiencies and limitations of the prior art at least in part by providing a system and method for estimating a place affinity for a user. The system comprises a gathering module a communication module and a scoring module. The gathering module receives a place and retrieves rich place data associated with the place. The communication module retrieves user profile data associated with a user and a place affinity model associated with the user. The scoring module estimates an affinity score for the place using the place affinity model based at least in part on the rich place data and the user profile data.

The specification also provides a system and method for generating a place affinity model associated with a user. The system comprises a communication module gathering module and a modeling module. The communication module receives a place associated with a user and retrieves user profile data for the user. The gathering module retrieves rich place data associated with the place. The modeling module retrieves a previous state of the place affinity model associated with the user and generates the place affinity model associated with the user based at least in part on the rich place data and the previous state of the place affinity model.

The specification provides another method for generating a place affinity model associated with a user. The method comprises receiving a place associated with a user retrieving rich place data associated with the place retrieving user profile data for the user retrieving a default standard user place affinity model pre computed for one or more groups of users and generating a place affinity model associate with the user based at least in part on the rich place data and the default standard user place affinity model.

The specification provides yet another method for generating a place affinity model associated with a user. The method comprises receiving a place associated with a user retrieving rich place data associated with the place retrieving user profile data for the user retrieving an average user place affinity model generated by aggregating individual place affinity models for a group of users and generating a place affinity model associate with the user based at least in part on the rich place data and the average user place affinity model.

Furthermore the specification provides a system and method for personalizing a place search result for a user. The system comprises a communication module a personalization module and a scoring module. The communication module receives a search request from a user. The personalization module determines one or more matching places matched to the search request. The scoring module estimates one or more affinity scores for the one or more matching places. The personalization module then personalizes the one or more matching places based at least in part on one or more affinity scores.

The specification provides a system and method for estimating a currently visited place for a user. The system comprises a communication module and a place estimation module. The communication module receives sensor data for a vehicle associated with a user. The sensor data describes a current vehicle location. The communication module retrieves candidate place data describing one or more candidate places within a range of the current vehicle location. The communication module also retrieves historical place data describing one or more places visited by the user in the past. The place estimation module estimates a currently visited place for the user based at least in part on the one or more of the current vehicle location the candidate place data and the historical place data.

A system and method for estimating a place affinity for a user is described below. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the specification. It will be apparent however to one skilled in the art that the embodiments can be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to avoid obscuring the specification. For example the specification is described in one embodiment below with reference to user interfaces and particular hardware. However the description applies to any type of computing device that can receive data and commands and any peripheral devices providing services.

Reference in the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The specification also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks compact disc read only memories CD ROMs magnetic disks read only memories ROMs random access memories RAMs erasable programmable read only memories EPROMs electrically erasable programmable read only memories EEPROMs magnetic or optical cards flash memories including universal serial bus USB keys with non volatile memory or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

Some embodiments can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. A preferred embodiment is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore some embodiments can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modems and Ethernet cards are just a few of the currently available types of network adapters.

Finally the algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition the specification is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the various embodiments as described herein.

Although illustrates one navigation system one social network server one search server one client device one mobile device one web server and one knowledge server persons skilled in the art will appreciate that the description applies to any system architecture having any number of navigation systems social network servers search servers client devices mobile devices web servers and knowledge servers . Furthermore although only one network is coupled to the navigation system the social network server the search server the client device the mobile device the web server and the knowledge server in practice any number of networks can be connected to the entities.

In the illustrated embodiment the social network server is communicatively coupled to the network via signal line . The search server is communicatively coupled to the network via signal line . The client is communicatively coupled to the network via one or more of signal lines and . The mobile device is communicatively coupled to the network via one or more of signal lines and . The web server is communicatively coupled to the network via signal line . The knowledge server is communicatively coupled to the network via signal line . The navigation system is communicatively coupled to the network via one or more of signal lines and . In one embodiment a network interface comprised within the navigation system is communicatively coupled to the network via one or more of signal lines and . A global positioning system GPS comprised within the navigation system is communicatively coupled to the network via signal line . In one embodiment each of signal lines and represents one of a wired connection e.g. a connection via a cable and a wireless connection e.g. a wireless local area network LAN connection . Each of signal lines and represents a wireless connection e.g. a wireless LAN connection a satellite connection etc. .

The network is a conventional type of network wired or wireless and may have any number of configurations such as a star configuration token ring configuration or other configurations known to those skilled in the art. In one embodiment the network comprises one or more of a local area network LAN a wide area network WAN e.g. the Internet and or any other interconnected data path across which multiple devices communicate. In another embodiment the network is a peer to peer network. The network is coupled to or includes portions of a telecommunications network for sending data in a variety of different communication protocols. For example the network is a 3G network or a 4G network. In yet another embodiment the network includes Bluetooth communication networks or a cellular communications network for sending and receiving data such as via short messaging service SMS multimedia messaging service MMS hypertext transfer protocol HTTP direct data connection wireless application protocol WAP email etc. In yet another embodiment all or some of the links in the network are encrypted using conventional encryption technologies such as secure sockets layer SSL secure HTTP and or virtual private networks VPNs .

The navigation system is a system for providing navigation information. For example the navigation system is an on board navigation system embedded in a vehicle. The navigation system includes a processor a memory a network interface a GPS a place affinity module a storage device a sensor and a display . The place affinity module and the storage are depicted using dashed lines to indicate that in one embodiment the place affinity module and the storage are comprised within the knowledge server .

Although only one processor one memory one network interface one GPS one storage one sensor and one display are illustrated in the navigation system one skilled in the art will recognize that any number of these components are available in the navigation system . One skilled in the art will also appreciate that the navigation system may include any other components not shown in such as an input device an audio system and other components conventional to a navigation system.

The processor comprises an arithmetic logic unit a microprocessor a general purpose controller or some other processor array to perform computations retrieve data stored on the storage etc. The processor processes data signals and may comprise various computing architectures including a complex instruction set computer CISC architecture a reduced instruction set computer RISC architecture or an architecture implementing a combination of instruction sets. Although only a single processor is shown in multiple processors may be included. The processing capability may be limited to supporting the display of images and the capture and transmission of images. The processing capability might be enough to perform more complex tasks including various types of feature extraction and sampling. It will be obvious to one skilled in the art that other processors operating systems sensors displays and physical configurations are possible.

The memory stores instructions and or data that may be executed by the processor . The instructions and or data may comprise code for performing any and or all of the techniques described herein. The memory may be a dynamic random access memory DRAM device a static random access memory SRAM device flash memory or some other memory device known in the art. In one embodiment the memory also includes a non volatile memory or similar permanent storage device and media such as a hard disk drive a floppy disk drive a CD ROM device a DVD ROM device a DVD RAM device a DVD RW device a flash memory device or some other mass storage device known in the art for storing information on a more permanent basis.

The network interface is an interface for connecting the navigation system to a network. For example the network interface is a network adapter that connects the navigation system to the network . The network interface is communicatively coupled to the network via one or more of signal lines and . In one embodiment the network interface receives data from one or more of the social network server the search server the client the mobile device the web server and the knowledge server via the network . The network interface sends the received data to one or more components of the navigation system e.g. the place affinity module etc. . In another embodiment the network interface receives data from one or more components of the navigation system e.g. the place affinity module etc. and sends the data to one or more of the social network server the search server the client the mobile device the web server and the knowledge server via the network .

In one embodiment the network interface includes a port for direct physical connection to the network or to another communication channel. For example the network interface includes a universal serial bus USB a category 5 CAT 5 cable or similar port for wired communication with the network . In another embodiment the network interface includes a wireless transceiver for exchanging data with the network or with another communication channel using one or more wireless communication methods such as IEEE 802.11 IEEE 802.16 BLUETOOTH near field communication NFC or another suitable wireless communication method. In one embodiment the network interface includes a NFC chip that generates a radio frequency RF for short range communication.

The GPS is a system for providing location data and timestamp data. For example the GPS is a conventional GPS that locates a vehicle in real time and provides timestamp data describing the current time. In one embodiment the GPS sends the location data and the timestamp data to the place affinity module . One skilled in the art will recognize that the GPS may provide driving information e.g. driving instructions to a destination estimated time of arrival etc. and other information such as information about gas stations restaurants hotels etc. to a user.

The place affinity module is code and routines for modeling and estimating a place affinity for a user. In one embodiment the place affinity module includes code and routines stored in an on chip storage not pictured of the processor . In another embodiment the place affinity module is implemented using hardware such as a field programmable gate array FPGA or an application specific integrated circuit ASIC . In yet another embodiment the place affinity module is implemented using a combination of hardware and software.

The place affinity for a user is data describing the user s preference for one or more places. For example the place affinity for a user includes data describing one or more characteristics for one or more places that the user likes. For example a user prefers places with certain brands such as Toyota X Coffee etc. The place affinity is also referred to as a place preference hereinafter. The place affinity module is described below in more detail with reference to .

The storage device is a non transitory memory that stores data. For example the storage device is a dynamic random access memory DRAM device a static random access memory SRAM device flash memory or some other memory device known in the art. In one embodiment the storage device also includes a non volatile memory or similar permanent storage device and media such as a hard disk drive a floppy disk drive a compact disc read only memory CD ROM device a digital versatile disc read only memory DVD ROM device a digital versatile disc random access memories DVD RAM device a digital versatile disc rewritable DVD RW device a flash memory device or some other non volatile storage device known in the art.

In one embodiment the storage stores identification data for authenticating one or more users historical place data describing one or more places that a user has visited also referred to as one or more points of interest POIs that the user has visited liked place data describing one or more places that a user likes a geospatial place look up table model data describing one more place affinity models for a user affinity score data describing one or more affinity scores for one or more places rich place data for one or more places and user profile data describing a user s interests hobbies etc. One skilled in the art will recognize that the storage may store any other data for providing the functionality described herein.

In one embodiment the storage incorporates an ontology defining a concept hierarchy of places based on their categories and the properties associated with each of those place types. All concepts and properties in the ontology belong to the ontology namespace. In one embodiment the data stored in the storage is identified by Uniform Resource Identifiers URIs and represented in Resource Description Framework RDF . For example the rich place data is retrieved from multiple sources and incorporated into the ontology in the storage . In another embodiment the storage provides more sophisticated data structures including one or more of lists stacks and queues. For example the storage provides a sorted list of places to a requesting component of the system such as the navigation system . The storage will be described in further detail below with reference to .

The display is any device for displaying data to a user. For example the display is one of a touch screen display device a liquid crystal display LCD and any other conventional display device known to one skilled in the art.

The sensor is any type of conventional sensor configured to collect any type of data for a traveling vehicle. For example the sensor is one of the following a light detection and ranging LIDAR sensor an infrared detector a motion detector a thermostat and a sound detector etc. Persons having ordinary skill in the art will recognize that other types of sensors are possible.

In one embodiment the system includes a combination of different types of sensors . For example the system includes a first sensor for determining a current time and a second sensor for locating a vehicle in real time. In another embodiment the system includes a sensor for estimating a time spent at a place. For example the sensor determines a first timestamp that a user leaves a vehicle and a second timestamp that a user returns to the vehicle. The sensor determines the time spent at the place based at least in part on the time difference between the first timestamp and the second timestamp.

The social network server is any computing device having a processor not pictured and a computer readable storage medium not pictured storing data for providing a social network to users. Although only one social network server is shown persons of ordinary skill in the art will recognize that multiple social network servers may be present. A social network is any type of social structure where the users are connected by a common feature. The common feature includes friendship family work an interest etc. The common features are provided by one or more social networking systems such as those included in the system including explicitly defined relationships and relationships implied by social connections with other users where the relationships are defined in a social graph. The social graph is a mapping of all users in a social network and how they are related to each other.

For clarity and convenience hereinafter the social connection of a user is also referred to as another user connected to the user by one or more of the common features.

In the depicted embodiment the social network server includes a social network application . The social network application includes code and routines stored on a memory not pictured of the social network server that when executed by a processor not pictured of the social network server causes the social network server to provide a social network accessible by a client device and or a mobile device via the network . In one embodiment a user publishes comments on the social network. For example a user of the social network application provides a status update and other users make comments on the status update. In another embodiment a user in a vehicle interacts with the social network via a social feature added to the navigation system . For example a user clicks on a social graphic such as a share button shown on a graphical user interface GUI GUIs presented by a display of the navigation system to share a liked place in the social network.

The search server is any computing device having a processor not pictured and a computer readable storage medium not pictured storing data for providing a search service to users. In the depicted embodiment the search server includes a search module . The search module is code and routines for providing one or more search results to a user. In one embodiment the search module receives a search request from a user operating on the navigation system via the network searches a plurality of data sources e.g. a data source included in the search server a data source from the social network server etc. for one or more results matching to the search request and sends the results to the navigation system .

For example the search module receives an input to search for a bank near a current location of a user operating on the navigation system . The search module searches a plurality of data sources for matching banks and sends the banks to the navigation system via the network causing the display to present the matching banks to the user. In one embodiment the place affinity module personalizes the results for the user before presenting the results to the user as described below with reference to . GUIs for presenting search results to a user will be described below with reference to .

The client is any computing device that includes a memory not pictured and a processor not pictured . For example the client is a personal computer PC a cell phone e.g. a smart phone a feature phone etc. a tablet computer or tablet PC a laptop etc. One having ordinary skill in the art will recognize that other types of clients are possible. In one embodiment the system comprises a combination of different types of clients .

In the illustrated embodiment the client comprises a browser . In one embodiment the browser is code and routines stored in a memory of the client and executed by a processor of the client . For example the browser is a browser application such as Mozilla Firefox. In one embodiment the browser presents a GUI to a user on a display device not pictured of the client and allows the user to input information via the GUI.

The mobile device is any mobile computing device that includes a memory not pictured and a processor not pictured . For example the mobile device is a cell phone e.g. a smart phone a feature phone etc. a tablet computer or tablet PC a laptop etc. One having ordinary skill in the art will recognize that other types of mobile devices are possible. In one embodiment the system comprises a combination of different types of mobile devices .

In the illustrated embodiment the mobile device comprises a thin application . In one embodiment the thin application is code and routines stored in a memory of the mobile device and executed by a processor of the mobile device . For example the thin application is an application that provides a GUI for a user to interact with the navigation system .

The web server is a hardware server device. The web server comprises a website module . The website module is code and routines that when executed by a processor not pictured generates a website not pictured that is hosted by the web server . For example the web server hosts a website generated by the website module and the website is accessed by one or more of the navigation system the mobile device and the browser operating on the client device via the network . In one embodiment the website module is stored on a non transitory memory not pictured associated with the web server .

The knowledge server is any computing device having a processor not pictured and a computer readable storage medium storing data for learning a place affinity for a user. For example the knowledge server is a semantic web knowledge system for providing the functionality described herein also referred to as an IKCoN system described below . In the depicted embodiment the knowledge server includes an access control module and an endpoint module . In one embodiment the knowledge server also includes a place affinity module and a storage . These components of the knowledge server are communicatively coupled to each other.

The access control module is code and routines for controlling access to the knowledge server . For example the access control module is an access control application programming interface API . In one embodiment the access control module authenticates a user or a navigation system embedded in a vehicle before authorizing the user or the navigation system to access any data in the knowledge server . For example the access control module authenticates a user or a navigation system based on an identifier and a secret passkey or a combination of both.

In one embodiment the access control module controls access to the knowledge server based at least in part on namespaces. For example the access control module controls access to the knowledge server based on one or more of an ontology namespace an instance namespace a namespace for each user a namespace for each platform service and a subspace for each platform service within a user s namespace etc. In one embodiment the access control module establishes different access control rules for the different namespaces. For example all user specific data e.g. the user s home or work address etc. not owned by any components in the system belongs to the user s namespace. The access control module grants an access to any component in the system such as the client as long as the component provides identification data for the user matching the user authentication data.

The endpoint module is code and routines for providing an interface through which an application interacts with the place affinity module and the storage . For example the endpoint module is an endpoint conforming to representational state transfer REST constraints such as a RESTful endpoint for providing one or more RESTful services. In one embodiment the endpoint module determines whether to provide the services synchronously or asynchronously. For example the endpoint module determines that an application executed in the client proceeds accessing the knowledge server while the place affinity module updates the place affinity model.

Referring now to depicted is a block diagram of a computing system including a place affinity module in more detail according to one embodiment. In one embodiment the computing system is the navigation system . In another embodiment the computing system is the knowledge server . In the illustrated embodiment the place affinity module includes a communication module an identification module a place estimation module a liking module a gathering module a modeling module a scoring module an updating module and a personalization module . In one embodiment these components of the place affinity module are communicatively coupled to each other via a bus . The computing system also includes storage .

In the illustrated embodiment the communication module is communicatively coupled to the bus via signal line . The identification module is communicatively coupled to the bus via signal line . The place estimation module is communicatively coupled to the bus via signal line . The liking module is communicatively coupled to the bus via signal line . The gathering module is communicatively coupled to the bus via signal line . The modeling module is communicatively coupled to the bus via signal line . The scoring module is communicatively coupled to the bus via signal line . The updating module is communicatively coupled to the bus via signal line . The personalization module is communicatively coupled to the bus via signal line . The storage is communicatively coupled to the bus via signal line .

The communication module is code and routines for handling communications between components of the place affinity module and other components of the system . For example the communication module receives location data and timestamp data from one or more of the GPS and the sensor and sends the location data and the timestamp data to one or more of the place estimation module the modeling module and the scoring module . In one embodiment the communication module also handles communications among components of the place affinity module . For example the communication module receives place data describing an estimate of a currently visited place from the place estimation module and sends the place data to the liking module .

The identification module is code and routines for identifying a user. In one embodiment a sensor reads identification data for a user and sends the identification data to the identification module . For example the sensor reads the identification data via a card wiping or a radio frequency identification RFID card. In another embodiment a user inputs the identification data via a graphical user interface GUI generated by the navigation system . The identification module compares the received identification data to user authentication data stored in the storage and verifies the identity of the user. If the identification data matches to the user authentication data for the user the identification module sends the identification data associated with the user to other components of the place affinity module such as the place estimation module the gathering module etc.

In one embodiment the identification data is one of a user name and a password a proxy device for a user such as a card or a handheld device and or a vehicle that the user is registered to etc. One skilled in the art will recognize that other forms for the identification data are possible.

The place estimation module is code and routines for estimating a currently visited place for a user. The place estimation module receives sensor data such as GPS location data describing a current vehicle location and timestamp data describing the time of the day from one or more of the GPS and the sensor . In one embodiment the place estimation module estimates a currently visited place for a user when the vehicle is stationary at the location. The place estimation module retrieves candidate place data describing one or more candidate places close to the vehicle location e.g. within a predetermined range e.g. 100 meters of the location from a geospatial look up table stored in the storage . The place estimation module retrieves historical place data describing one or more places visited by the user in the past that are close to the vehicle location e.g. within a predetermined range e.g. 100 meters of the location based at least in part on the identification data for the user.

In one embodiment the place estimation module estimates a currently visited place based at least in part on one or more of the vehicle location the time the identification data the historical place data and the candidate place data. In one embodiment the place estimation module selects a place as the currently visited place from the historically visited places by the user. For example from the one or more candidate places the place estimation module selects a place that has been visited by the user. In another embodiment the place estimation module chooses a place as the currently visited place based on the time spent on it and the time of the day. For example the place estimation module determines a restaurant from the one or more candidate places as the currently visited place based on that it is the noon and the user spent one and a half hour at the place. In yet another embodiment the place estimation module determines a candidate place within a walkable distance to the vehicle location as the currently visited place.

The place estimation module stores place data describing the currently visited place in the storage as a part of the historical place data for the user.

The liking module is code and routines for determining like data indicating if a user likes a place. The liking module receives place data describing a currently visited place from the place estimation module and identification data from the identification module . In one embodiment the liking module receives new visited place data describing a newly visited place from the place estimation module . The liking module receives sensor data describing the time spent at the place for the current visit to the place from a sensor . The liking module retrieves a visiting frequency to the place and the past time spent at the place for each past visit to the place from the historical place data stored in the storage .

In one embodiment the liking module determines like data for the place based at least in part on one or more of the identification data the place data the time spent for the current visit the visiting frequency and the time spent for each past visit. In one embodiment the like data describes that the user likes the place and the place is referred to as a liked place or a preferred place . The liking module stores the liked place data describing the liked place in the storage . Alternatively the like data describes that the user does not like the place and the place is referred to as a not liked place or a not preferred place . In one embodiment the like module stores the like data for the place in the storage .

The gathering module is code and routines for collecting data for a place. The gathering module receives the identification data from the identification module and place data describing a liked place from the liking module . The gathering module collects a variety of data associated with the liked place for a user from a plurality of data sources. In one embodiment the gathering module retrieves data associated with the liked place from the historical place data stored in the storage .

In one embodiment the gathering module additionally collects data for the liked place from one or more of the search server the web server the mobile device the client and the social network server etc. For example the gathering module collects data describing that friends of the user on a social network have visited the place. As another example the gathering module collects data describing one or more reviews for the place from a web server . One skilled in the art will recognize that the gathering module may collect any other data for the liked place from any data sources. The data collected from a plurality of data sources for a place is referred to as rich place data.

In another embodiment the gathering module receives place data describing a place e.g. a liked place or a not liked place from the place estimation module and collects rich place data for the place as described above. In either embodiment the gathering module stores the rich place data in the storage . In one embodiment the gathering module also sends the rich place data to the modeling module and or updating module .

In one embodiment the place is marked with an affinity value by the user based on inputs from different sources. For example the user marks a place with an affinity value based on inputs from an interactive dialog a survey retrieved personal data from social networks etc. The affinity value for the place indicates how the user likes the place. The gathering module receives the affinity value for the place marked by the user and includes the affinity value for the place in the rich place data and stores it in the storage . In one embodiment the affinity value for the place marked by the user is used to generate a place affinity model for the user.

The modeling module is code and routines for generating a place affinity model for a user. In one embodiment the modeling module receives identification data from the identification module and rich place data from the gathering module . In another embodiment the modeling module receives place data describing places from one or more of other components in the system via the communication module . For example when a driver searches POIs on a desktop at home and sends the POIs from the desktop to the in vehicle navigation system via the network before getting into the car the modeling module receives the POIs via the communication module and the network . As another example a driver selects a place from a smart phone using an installed application and sends the place to the vehicle as a destination for the navigation system . The modeling module receives place data describing the place via the communication module and the network . In yet another example the modeling module retrieves places that a user has visited from the historical place data in the storage . The modeling module then instructs the gathering module to retrieve rich place data for the places and builds a place affinity model for the user as described below.

The modeling module retrieves user profile data e.g. user s address interests hobbies etc. from the storage for adding context to the rich place data. For example the ontology for representations of data helps an automatic extrapolation of context. The modeling module adds the user profile data as context to the rich place data based on certain rules programmed in the modeling module . For example if the user profile data includes the user s home or work address the modeling module adds a distance from home or a distance from work context to the rich place data.

The modeling module also retrieves sensor data from one or more sensors and determines situation data describing a situation for a user based on the sensor data. For example the modeling module retrieves timestamp data describing that the time is noon and location data describing that the vehicle has parked on a plaza from a sensor . The modeling module estimates a situation that the user is out for lunch based on the timestamp data and the location data. In one embodiment the modeling module adds the situation to the rich place data as context. For example the modeling module determines whether a driver accessed an Automated Teller Machine ATM of a bank or actually had to stop by the bank for a longer time based on whether the time of the day was in the morning or evening and that the time spent at the bank. The modeling module adds the situation such as that the driver accessed the ATM only to the context of the rich place data for the bank.

The modeling module uses the rich place data and the context to generate a place affinity model. In one embodiment the modeling module generates a place affinity model for the user based at least in part on the user profile data the rich place data the situation data and the sensor data describing the time and the location etc. In one embodiment a place affinity model is a model characterizing a place preference for a user. Accordingly the place affinity model is also referred to as a preference model. For example the place affinity model includes model data describing all the favorite places for the user and the common characteristics for the favorite places.

In one embodiment the modeling module retrieves a previous state of the place affinity model for the user from the model data described below with reference to . In one embodiment the modeling module generates a place affinity model associated with the user based at least in part on the rich place data and the previous state of the place affinity model as described below with reference to .

In one embodiment the modeling module pre computes a default standard user place affinity model for one or more groups of users. For example the modeling module pre computes the default standard user place affinity model based at least in part on empirical evidence such as experiences and observations. The modeling module stores the default standard user place affinity model in the storage as model data. In one embodiment a standard user place affinity model is a pre computed and or pre configured place affinity model for a standard user. For example a standard user is a user having general preferences as a human being e.g. preferring places that are nearer than farther. In one embodiment the modeling module uses the standard user place affinity model as a seed place affinity model by customizing the standard user place affinity model to an individual place affinity model for a user. For example the modeling module retrieves the default standard user place affinity model from model data in the storage and generates a place affinity model associated with a user based at least in part on the rich place data and the default standard user place affinity model.

In one embodiment the modeling module generates an average user place affinity model and publishes the average user place affinity model periodically. For example the modeling module comprised in the knowledge server retrieves one or more individual place affinity models e.g. user preference models for a group of users from the model data described below with reference to and builds an average user place affinity model by aggregating the one or more individual place affinity models for the group of users. In one embodiment the modeling module generates average user place affinity models for multiple groups of users. For example people in the bay area prefer smaller distance while people in the Midwest can accept larger distance. The modeling module builds an average user place affinity models for each of these two groups of people by aggregating individual place affinity models for users in each group.

In one embodiment the modeling module publishes the average user place affinity model to components of the system periodically. For example the modeling module comprised in the knowledge server periodically retrieves individual place affinity models from other components of the system such as navigation systems for other users and periodically feeds an average user place affinity model back to the components of the system . In one embodiment the modeling module retrieves an average user place affinity model from the model data described below with reference to and generates a place affinity model associated with the user based at least in part on the rich place data and the average user place affinity model.

In one embodiment the modeling module applies machine learning techniques to generate the place affinity model for the user. The modeling module converts the data e.g. data represented in RDF used to generate the place affinity model into a suitable representation e.g. machine learnable data . Different sources have different representations for the data such as rich place data. The modeling module converts the data from different sources into machine learnable data. The machine learnable data will be described in further detail below with reference to . The modeling module then applies machine learning methods to the data and generates the place affinity model for the user. In one embodiment the modeling module stores model data describing the place affinity model for the user in the storage .

The scoring module is code and routines for estimating an affinity score for a place. In one embodiment the scoring module receives place data describing a place from one of a user the place estimation module and any other components of the system . In one embodiment the place is a place that the user has visited. In another embodiment the place is a place that the user has not visited before. The scoring module receives rich place data for the place from the gathering module . In one embodiment the scoring module also receives user profile data situation data and sensor data from one or more of the storage and other components of the system . The scoring module adds the user profile data and situation data to the rich place data as context. The scoring module retrieves a place affinity model for the user from the storage and estimates an affinity score for the place using the place affinity model based at least in part on the rich place data the user profile data the situation data and sensor data describing the time and the location etc. In one embodiment the scoring module stores the affinity score in the storage .

In another embodiment the scoring module receives data describing a matching place from the personalization module as described below with reference to personalization module and estimates an affinity score for the matching place. A matching place is a place matching to a search request from a user. The scoring module sends the affinity score for the matching place to the personalized module .

The scoring module estimates an affinity score for a place as described below. In one embodiment the scoring module converts the received data describing a place to machine learnable data and applies a score function to estimate an affinity score for the place. For example the scoring module uses a score function that computes the Euclidean distance in a way similar to the nearest neighbor calculation in unsupervised classification algorithms. In one embodiment the score function is based on a distance from unity metric as described below.

For a place to be scored the scoring module projects the likelihood probabilities for the values of its attributes or properties on orthogonal axes. In one embodiment the place s attributes or properties are represented as values as depicted in the machine learnable table . For a value of a property the scoring module calculates the likelihood probability as P value preferred based on the frequency count table of that column. On each axis the likelihood probability is projected as a continuous numeric function with a maximum possible score of 1.0 for a value that is always preferred and a minimum score of 0.0 for a value that is absent from the table . The scoring module projects the place as a point in the multi dimensional space. The scoring module assumes that a place always preferred by the user will have its likelihood value 1.0 on all axes. The point representing the place has the co ordinates 1.0 1.0 1.0 1.0 1.0 . . . in the multi dimensional space. The scoring module defines this point as Unity and calculates a Euclidean distance between a projected point for a place to be scored and the Unity point. In one embodiment the scoring module uses the Euclidean distance as the affinity score for the place and a place with a minimum distance to the Unity is the most preferred place for the user.

The properties of the place are represented as values including numeric values string values and nominal values as depicted in the machine learnable table . The scoring module calculates probabilities for numeric values using a Gaussian distribution. In one embodiment the scoring module also normalizes the probability density function by dividing it by the probability density of the mean. This scales the distance to a range between zero and one. The scoring module calculates probabilities for the string values as similar to a Na ve Bayes probability based document similarity metric. The scoring module calculates probabilities for the nominal values as the probabilities of the symbol occurring in the column of the table.

In one embodiment the scoring module explodes the attribute or property into its own hyperspace and calculates the distance of the inner objects to the Unity point in the hyperspace. The scoring module then normalizes the distance to a value between zero and one by dividing it by the distance from origin to the unity point in the hyperspace. The scoring module collapses the hyperspace for the attribute back to a single axis and the normalized distance becomes a distance from the Unity point on the single axis in the original multi dimensional space. For a multivalued property the scoring module takes the average of the distances of all its values.

The following is an example of scoring an affinity for a place based on the method discussed above according to one embodiment. Taking advantage of the data describing banks depicted in the table the scoring module calculates an affinity score or a distance for the ABC Bank. The calculation is shown as follows 

In another embodiment the scoring module applies another scoring function based on Na ve Bayes classification algorithms to score an affinity for a place. For one place to be scored the scoring module calculates the Na ve Bayes probability of it being preferred. For two places to be scored the scoring module compares the probabilities of them being preferred and determines which one of them is more likely to be preferred by the user. For example the scoring module calculates the probability for ABC Bank being preferred in the example shown in as follows 

The updating module is code and routine for updating a place affinity model. In one embodiment instead of building the entire preference model from scratch every time when a new place is added the updating module applies an incremental approach to build the preference module. For example once a new place is received the updating module retrieves a place affinity model for a user from the storage and updates the place affinity model for the user based at least in part on place data describing the new place that a user has visited.

In one embodiment the updating module retrieves a previous state of the place affinity model for the user from the model data described below with reference to . In one embodiment the updating module generates a place affinity model associated with the user based at least in part on the rich place data and the previous state of the place affinity model as described below with reference to . In another embodiment the updating module retrieves a default standard user place affinity model from model data described below with reference to and generates a place affinity model associated with the user based at least in part on the rich place data and the default standard user place affinity model. In yet another embodiment the updating module retrieves an average user place affinity model from the model data described below with reference to and generates a place affinity model associated with the user based at least in part on the rich place data and the average user place affinity model.

In one embodiment the updating module optimizes the place affinity model so that it only contains a certain number of most recent preferred places. In this way the performance of the model would not start degrading due to the increasing size of the model. The updating module also does optimization to reduce disk writes by using a delayed write of the preference model. The updating module is described in more detail below with reference to .

The personalization module is code and routines for providing a personalized search result to a user. The personalization module provides a personalized result to a user based on the user s request. For example a user searches for banks nearby using the navigation system when in a place the user does not know much about. The personalization module cooperates with other components in the system to provide a personalized search result to the user.

The personalization module receives a search request from a user to search for a place e.g. a bank a gas station etc. and inquires the search server for one or more matching results. The search server returns one or more matching places matched to the search request to the personalization module . In one embodiment the personalization module searches one or more data sources to determine one or more matching places matched to the search request. The personalization module sends the matching places to the scoring module and instructs the scoring module to generate an affinity score for each matching place. The personalization module personalizes the matching places based at least in part on the affinity scores and presents a personalized result to the user. The personalization module is described below in more detail with reference to .

In one embodiment the number of matching places displayed to a user driving a vehicle is restricted for safety considerations to minimize distractions for the user. The personalization module sorts the matching places in an order based at least in part on the affinity scores and determines one or more matching places with the highest affinity scores as the personalized results presented to the user.

In one embodiment the system is particular advantageous since for example the place estimation module automatically estimates any place that a user has visited based at least in part on a location of the vehicle. In one embodiment the location of the vehicle is different from the place the user visits since for example the user may park a vehicle on a street and visits a store across the street. Furthermore the liking module automatically determines whether the user likes the visited place and does not require any manual inputs from the user. In one embodiment the place affinity module establishes a place affinity model that is able to estimate an affinity score for both a historical place that the user has visited and a new place that the user has not visited before.

The sensor data includes location data and timestamp data from one or more of the GPS and the sensor . The location data describe a location of a vehicle. The timestamp data describes different times of the day that can be used to estimate a time spent at a place. For example the sensor determines a time spent at a place based on the time difference between a first timestamp and a second timestamp. In one embodiment the location data and timestamp data are used to determine a situation for a user.

The user data includes one or more of the identification data the user authentication data and user profile data. The identification data and the user authentication data are used to authenticate one or more users. The user profile data describes a user s interests hobbies etc. In one embodiment the user profile data also describes one or more social connections of the user. The user profile data for a user can be added to the context of the rich place data for generating a place affinity model for the user.

The historical place data describes one or more places that a user has visited. The one or more places that a user has visited are also referred to as one or more POIs that the user has visited. In one embodiment the historical place data also includes like data associated with the one or more visited places indicating if a user likes them or not. For example the historical place data includes data describing one or more of each place visited by a user a visiting frequency to the place a time spent at the place for each visit to the place and like data for the place. In one embodiment the historical place data also includes liked place data describing one or more places that a user likes.

The geospatial place look up table is a table used to look up for candidate places associated with a vehicle location. For example the place estimation module receives location data describing a vehicle location from the sensor and queries the geospatial place look up table for candidate places within a certain range e.g. 100 meters of the vehicle location.

The like data is data indicating if a user likes a place or not. In one embodiment the liking module determines the like data for a place. If the liking module determines that a user likes a place the place is referred to as a liked place or a preferred place. Alternatively the like data describes that the user does not like a place. The like data is depicted using a dashed line in the to indicate that it can be stored along with one or more places included in the historical place data .

The liked place data describes one or more liked places that a user likes. In one embodiment the liking module determines one or more liked places and stores them in the storage . The liked place data is depicted in the using a dashed line to indicate that it can be alternatively stored in the historical place data .

The rich place data is a variety of data associated with a place for a user from a plurality of data sources. For example the gathering module retrieves data for a liked place from one or more of the historical place data stored in the storage the search server the web server the mobile device the client and the social network server etc. The rich place data as well as other data such as the sensor data is used to generate a place affinity model for a user. In one embodiment the rich place data includes an affinity value for a place marked by a user based on inputs from different sources.

The model data describes one or more place affinity models for a user. For example a place affinity model characterizes a place preference for a user and includes model data describing all the favorite places for the user and the common characteristics for the favorite places. In one embodiment the model data includes a default standard user place affinity model pre computed for one or more groups of users based on empirical evidence. In another embodiment the model data includes an average user place affinity model built by aggregating one or more individual place affinity models for a group of users.

The affinity score data describes one or more affinity scores for one or more places that can be either visited by the user or not visited by the user. In one embodiment the scoring module estimates an affinity score for a place using a place affinity model for a user based at least in part on the rich place data the user profile data the situation data and sensor data describing the time and the location etc. In another embodiment the scoring module generates the affinity scores for matching places to a search request from a user.

Elements are graphic representations of data types describing a grocery store a movie theatre a bank and a gas station respectively. They are on a lower level than the POI . In other words they are different types of POIs. Element is a graphic representation of data describing properties associated with the bank . Element is a graphic representation of data describing properties associated with the gas station .

The identification module retrieves user authentication data for the user from the user data included in the storage and compares the identification data to the user authentication data. The identification module identifies the user based on the comparison. If the identification module determines that the identification data matches the user authentication data based on the comparison then the identification module identifies the user and sends the identification data to other components of the place affinity module such as the place estimation module .

The place estimation module receives identification data for a user from the identification module and retrieves historical place data based on the identification data for the user. For example the retrieved historical place data includes one or more places visited by the user in the past that are close to the vehicle location.

The place estimation module estimates a currently visited place based at least in part on one or more of the vehicle location the time the identification data the historical place data and the candidate place data. For example the place estimation module selects a place from the one or more candidate places as a currently visited place based on the time of the day and the time spent at the place. The place estimation module stores the estimated currently visited place in the storage as a part of the historical place data for the user.

The liking module determines like data for the currently visited place based at least in part on one or more of the place data the identification data the time spent for the current visit the visiting frequency and the time spent for each past visit. In one embodiment the like data describes that the user likes the currently visited place and the place is referred to as a liked or preferred place. In another embodiment the like data indicates that the user does not like the place and the place is referred as a not liked or not preferred place. The liking module stores the like data in the storage .

The gathering module collects data associated with the one or more liked places from a plurality of sources. For example the gathering module retrieves data for the one or more liked places from one or more of the search server the web server the mobile device the client and the social network server etc. For example the retrieved data includes data describing social connections e.g. friends of the user on a social network that have visited one or more of the liked places.

In one embodiment the gathering module receives an affinity value for a place marked by the user. For example the user marks a place with an affinity value based on inputs from an interactive dialog a survey retrieved personal data from social networks etc. The gathering module forms rich place data based on the retrieved data from a plurality of sources and the affinity value from the user.

The modeling module determines situation data describing a situation of the user based on the sensor data. For example the modeling module determines that the user is out for shopping based on that the time spent at the place is more than two hours and the vehicle location is at a parking lot of a shopping mall. In one embodiment the modeling module retrieves a previous state of a place affinity model from the model data . The modeling module estimates a place affinity model for the user based at least in part on the user profile data the rich place data the situation data and the previous state of a place affinity model etc. For example a place affinity model describes a place preference for a user.

The scoring module receives identification data for the user from the identification module and receives rich place data for the place from the gathering module . The scoring module also retrieves user profile data from the storage and sensor data and situation data from the sensor .

The scoring module retrieves a place affinity model for the user from the storage and estimates an affinity score for the place using the place affinity model based at least in part on the rich place data the user profile data the situation data and sensor data etc.

Referring to the communication module receives identification data from a user and sends the identification data to the identification module . The identification module identifies the user based at least in part on the identification data. For example the identification module identifies the user by comparing the identification data to the user authorization data stored in the storage .

The communication module receives sensor data describing a current location for a vehicle and a current time and sends the sensor data to the place estimation module . The communication module retrieves candidate place data from a geospatial look up table of places based at least in part on the location of the vehicle. In one embodiment the candidate place data includes one or more candidate places within a pre determined distance to the location of the vehicle. The communication module retrieves historical place data associated with the user from the storage . The communication module sends the candidate place data and the historical place data to the place estimation module .

The place estimation module estimates a currently visited place for the user based at least in part on one or more of the sensor data the candidate place data and the historical place data. The place estimation module stores the currently visited place in the storage . In one embodiment the place estimation module sends the currently visited place to the liking module . The sensor estimates a time spent at the currently visited place for the user.

Referring now to the liking module retrieves a visiting frequency for the currently visited place and the time spent at the place for each past visit from the historical place data stored in the storage . The liking module determines like data for the currently visited place based at least in part on the visiting frequency and the time spent for each visit to the place. The liking module stores the like data in the storage .

The gathering module collects additional data for the one or more liked places from a plurality of data sources e.g. a social network provided by the social network application the search server the web server etc. to form rich place data for the one or more liked places. The gathering module sends the rich place data to the modeling module .

The communication module retrieves user profile data for the user from the storage and sends the user profile data to the modeling module . The communication module receives sensor data describing one or more of a vehicle location and a current time etc. In one embodiment the sensor data includes other data such as temperature data traffic condition data etc. The communication module sends the sensor data to the modeling module . The modeling module determines situation data describing a situation for the user based at least in part on the sensor data. The modeling module generates a place affinity model for the user based at least in part on one or more of the rich place data the user profile data the sensor data and the situation data etc. The modeling module stores the place affinity model in the storage .

Referring to the communication module receives identification data for a user and sends the identification data to the identification module . The identification module identifies the user based at least in part on the identification data and sends the identification data for the user to the gathering module and the updating module . The gathering module receives place data describing a new place that the user has visited. In one embodiment the gathering module receives the place data from the place estimation module . In another embodiment the gathering module retrieves the place data from the historical place data stored in the storage via the communication module .

The gathering module collects data from a plurality of data sources to form rich place data for the new place and sends the rich place data to the updating module . The communication module retrieves user profile data from the storage and sends the user profile data to the updating module . The communication module receives sensor data from the sensor and sends the sensor data to the updating module . The updating module determines situation data describing a situation for the user based at least in part on the sensor data.

Referring now to the communication module retrieves model data describing a place affinity model associated with the user from the storage and sends the model data to the updating module . In one embodiment the communication module retrieves a previous state of a place affinity model associate with the user from the storage and sends it to the updating module . In another embodiment the communication module retrieves a pre computed default standard user place affinity model from the storage and sends it to the updating module . In yet another embodiment the communication module retrieves an average user place affinity model from the storage and sends it to the updating module .

The updating module updates the place affinity model associated with the user based at least in part on one or more of the rich place data for the new place the user profile data the sensor data and the situation data. The updating module stores the updated place affinity model in the storage .

Referring to the communication module receives identification data for a user and sends the identification data to the identification module . The identification module identifies the user based at least in part on the identification data and sends the identification data for the user to one or more of the gathering module the modeling module and the scoring module . In one embodiment the gathering module receives place data describing the place from one of a user the communication module the personalization module etc. The gathering module collects data from a plurality of data sources to form rich place data for the place and sends the rich place data to the scoring module .

The communication module retrieves user profile data from the storage and sends the user profile data to the scoring module . The communication module receives sensor data from the sensor and sends the sensor data to the modeling module . The modeling module determines situation data describing a situation for the user based at least in part on the sensor data and sends the situation data to the scoring module .

Referring now to the scoring module loads a place affinity model for the user from the storage . The scoring module applies the place affinity model to estimate an affinity score for the user based at least in part on one or more of the rich place data the sensor data the situation data and the user profile data. The scoring module stores the affinity score for the place in the storage .

The communication module receives a search request from the user searching for one or more POIs. The communication module sends the search request to the personalization module . The personalization module determines one or more matching places matched to the search request. For example the personalization module instructs the search module to search for one or more matching places and receives the matching places from the search module . The personalization module sends the one or more matching places to the scoring module .

The scoring module loads a place affinity model associated with the user from the storage . The scoring module applies the place affinity model to determine an affinity score for each matching place and sends the one or more affinity scores for the one or more matching places to the personalization module . The personalization module orders the one or more matching places based at least in part on the one or more affinity scores. The personalization module presents a personalized result to the user. For example the personalization module presents to the user a personalized result that includes one or more matching places having the highest affinity scores.

Element are graphic crosses representing candidate places close to the vehicle location in the example B. Element is a graphic solid cross representing a determined currently visited place for the user in the example B. In the illustrated example B the place estimation module selects the place from the candidate places as the currently visited place based on that the place is within a walkable distance to the vehicle location .

Element are graphic crosses representing candidate places close to the vehicle location in the example C. Element is a graphic solid cross representing a determined currently visited place for the user in the example C. In the illustrated example C the place estimation module determines the currently visited place from the candidate places based on the current time of the day and the time spent at the place. For example the current time is noon and the time spent at the place is one hour. Then the place estimation module determines that the restaurant is most likely the place currently visited by the user.

Columns in the table include properties for the banks. For example column includes names for the banks Column includes locations for the banks. In the illustrated embodiment another table is linked to the column describing the locations for the banks e.g. including addresses cities etc. Column includes distances from work to the banks Column includes a property of having a drive through ATM. Column includes ratings for the banks.

Class Column includes class values for the banks. For example the class values include a preferred that indicates a user likes or prefers the bank as well as a not preferred that indicates a user does not like or prefer the bank. In one embodiment if the bank is a place visited by the user before it is marked as preferred. In another embodiment the modeling module determines a place as belonging to the class not preferred if it is not selected by the user while performing a POI search.

The chart includes a y axis representing accuracies of the two scoring methods and a chart legend . The chart legend describes profiles for the dummy users. For example a dummy user having a Brand profile always selects certain brands such as X Coffee Toyota etc. A Categories profile indicates that the user always selects places belonging to certain sub categories e.g. Japanese restaurant etc. . A user with a Highest Rated profile always selects the highest rated places a user having a Nearest profile always selects the nearest places. A user having a Person profile is modeled based on the preferences of a real person after interviewing the real person with a set of questions. A user having a System order profile always trusts the system and selects the first item in the place list sorted by the system . The chart legend also include an Average item indicating that the Average bars in the chart describe average accuracies over all other bars for the same scoring method.

The chart includes two groups of bars indicating accuracies for the Distance from Unity Scoring method and the Na ve Bayes Probability Scoring method respectively. The accuracy represents the percentage of successful searches. For example a list of matching places for a search is provided and sorted based on either scoring method. If the dummy user selects the first place in the list then the search is counted as a successful one. In the illustrated chart each group of bars describes different accuracies for different kinds of dummy users e.g. users with different profiles based on either of the two scoring methods.

The place search result provides the matching banks when the user searches banks in a new area. In the illustrated embodiment the place search result shows top three matching banks among which two banks are preferred by the user. For example the two preferred banks are both ABC Banks in different locations. The user prefers a specific banking company and the place search result proves that the underlying place affinity model e.g. preference model for the user is able to detect the preference of the user and can be used to personalize the place search result for the user.

In the forgoing description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the specification. It will be apparent however to one skilled in the art that the embodiments can be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to avoid obscuring the specification. For example the specification is described in one embodiment below with reference to user interfaces and particular hardware. However the description applies to any type of computing device that can receive data and commands and any peripheral devices providing services.

Reference in the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The specification also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks compact disc read only memories CD ROMs magnetic disks read only memories ROMs random access memories RAMs erasable programmable read only memories EPROMs electrically erasable programmable read only memories EEPROMs magnetic or optical cards flash memories including universal serial bus USB keys with non volatile memory or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

Some embodiments can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. A preferred embodiment is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore some embodiments can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modems and Ethernet cards are just a few of the currently available types of network adapters.

Furthermore the algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition the specification is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the various embodiments as described herein.

Finally the foregoing description of the embodiments has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the specification to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the embodiments be limited not by this detailed description but rather by the claims of this application. As will be understood by those familiar with the art the examples may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise the particular naming and division of the modules routines features attributes methodologies and other aspects are not mandatory or significant and the mechanisms that implement the description or its features may have different names divisions and or formats. Furthermore as will be apparent to one of ordinary skill in the relevant art the modules routines features attributes methodologies and other aspects of the specification can be implemented as software hardware firmware or any combination of the three. Also wherever a component an example of which is a module of the specification is implemented as software the component can be implemented as a standalone program as part of a larger program as a plurality of separate programs as a statically or dynamically linked library as a kernel loadable module as a device driver and or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming. Additionally the specification is in no way limited to implementation in any specific programming language or for any specific operating system or environment. Accordingly the disclosure is intended to be illustrative but not limiting of the scope of the specification.

