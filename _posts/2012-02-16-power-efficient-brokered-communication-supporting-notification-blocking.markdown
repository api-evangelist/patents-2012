---

title: Power efficient brokered communication supporting notification blocking
abstract: A notification service receives messages including various data from application services, and provides notifications including that data to the appropriate computing devices. Each computing device includes a notification system that receives notifications from the notification service and provides those notifications to the appropriate applications on the computing device. If an application is not allowed to run on a computing device, the notification system on the computing device provides an indication to the notification service to block notifications for the application on the computing device. The notification service ceases providing notifications to a computing device targeting applications for which notifications are blocked on the computing device until an indication is received from the computing device to unblock notifications for the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09317344&OS=09317344&RS=09317344
owner: Microsoft Technology Licensing, LLC
number: 09317344
owner_city: Redmond
owner_country: US
publication_date: 20120216
---
As computers have become increasingly commonplace and interconnected application services have been developed to provide various support functionality to applications running on the computers. The application services oftentimes desire to communicate messages including various data to the applications running on the computers. Allowing such communication however is not without its problems. One such problem is that building and maintaining application services that support persistent connections between the application services and the various instances of applications with which communication is desired can cost significant amounts of money which can prevent application developers from creating the applications and application services they desire.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

In accordance with one or more aspects in a notification service a message targeting an application on a computing device is received from an application service. A determination is made based at least in part on a previously received indication from the computing device whether notifications for the application on the computing device are blocked. A notification targeting the application and including data from the message is provided to the computing device only in response to determining that notifications for the application on the computing device are not blocked.

In accordance with one or more aspects a notification targeting an application on a computing device is received from a notification service. A determination is made as to whether the application is allowed to run on the computing device e.g. is currently running or is allowed to be started in response to receipt of the notification . If the application is allowed to run on the computing device then the notification is provided to the application. However if the application is not allowed to run on the computing device then a blocked indication is sent to the notification service indicating that notifications targeting the application are not to be sent to the computing device.

Power efficient brokered communication supporting notification blocking is discussed herein. A notification service receives messages including various data from one or more application services and provides notifications including that data to the appropriate computing devices. Each computing device includes a notification system that receives notifications from the notification service and provides those notifications to the appropriate applications on the computing device. Situations can arise in which an application is not allowed to run at a particular time on a computing device e.g. because the application is not running at that particular time and is not permitted to run as a background application . The notification system on the computing device provides an indication to the notification service to block notifications for an application on the computing device if the application is not allowed to run on the computing device. Notification system ceases providing notifications to a computing device targeting applications for which notifications are blocked on the computing device until an indication is received from the computing device to unblock notifications for the application.

Each computing device can be any of a variety of different types of devices such as a physical device or a virtual device. For example a computing device can be a physical device such as a desktop computer a server computer a laptop or netbook computer a tablet or notepad computer a mobile station an entertainment appliance a set top box communicatively coupled to a display device a television or other display device a cellular or other wireless phone a game console an automotive computer and so forth. A computing device can also be a virtual device such as a virtual machine running on a physical device. A virtual machine can be run on any of a variety of different types of physical devices e.g. any of the various types listed above . Thus computing devices may range from full resource devices with substantial memory and processor resources e.g. personal computers game consoles to low resource devices with limited memory and or processing resources e.g. traditional set top boxes hand held game consoles . Multiple ones of different computing devices can be the same and or different types of devices.

Services and can each be implemented using one or more of a variety of different types of computing devices. Similar to the discussion of computing devices these different types of computing devices can range from full resource devices with substantial memory and processor resources to low resource devices with limited memory and or processing resources.

Each computing device includes an operating system . Operating system is configured to abstract underlying functionality of computing device to one or more applications that are executable on computing device . For example operating system may abstract processing memory network file system user interface UI display and or or other presentation functionality of computing device such that applications may be written without knowing how this underlying functionality is implemented. Each application for instance may provide data to operating system to be rendered and displayed by a display device without understanding how this rendering will be performed.

Operating system and applications can receive user inputs from a user of computing device . User inputs can be provided in a variety of different manners such as by pressing one or more keys of a keypad or keyboard of device pressing one or more keys of a controller e.g. remote control device mouse trackpad touchpad etc. of device pressing a particular portion of a touchpad or touchscreen of device making a particular gesture on a touchpad or touchscreen of device and or making a particular gesture on a controller e.g. remote control device mouse trackpad touchpad etc. of device . User inputs can also be provided via other physical feedback input to device such as tapping any portion of device bending or twisting device an action that can be recognized by a motion detection component of device such as shaking device rotating device etc. and so forth. User inputs can also be provided in other manners such as via voice or other audible inputs to a microphone via motions of hands or other body parts observed by an image capture device and so forth.

Operating system is also illustrated as including a brokered communication notification system . Application services provide data to notification service targeting applications on particular computing devices . The application to which particular data is provided by an application service is also referred to as the target application. Notification service receives this data and provides a notification that includes this data to the appropriate computing device operating as a broker e.g. an intermediary for communications between application service and application . Brokered communication notification system on that computing device receives the notification and provides the notification to the appropriate application assuming the application is allowed to run on the computing device as discussed in more detail below. Brokered communication notification system can also communicate a blocked indication and or an unblocked indication to notification service . A blocked indication indicates that a particular one of more applications are not to be sent notifications and can be communicated to notification service at various times such as in response to a notification received from notification service as discussed in more detail below. In response to a blocked indication notification service ceases providing notifications blocks notifications targeting those particular one of more applications until an unblocked indication for those particular one or more applications is received. These blocking and unblocking indications are discussed in more detail below.

Notification service can provide notifications to computing devices in a variety of different manners. Notification service can be for example a Windows Push Notification Service WNS . Additional information regarding WNS is available from Microsoft Corp. of Redmond Wash. In one or more embodiments notification service provides notifications to computing devices using a push model e.g. as supported by WNS . Using the push model notification service stores notifications including data received from application services in a notification queue and sends the notifications in the queue to computing device in response to a triggering event. The triggering event for sending the notifications can take various forms such as expiration of a batch interval reaching a queue threshold receiving a high priority notification and so forth. In some situations notifications may also bypass the notification queue such as if computing device is in a state where power savings e.g. battery life is unimportant if a type of the notification indicates that the notification queue is to be bypassed and so forth. Thus notification service can send notifications asynchronously and computing device need not and typically does not know when the next notification will be received from service . Alternatively other models can be used such as a polling model in which computing devices query notification service at various intervals to check for notifications.

In one or more embodiments for each computing device a single communication link or connection is established between notification service and the computing device . Notifications including data received from multiple different application services targeting any of the applications on a particular computing device are communicated to that particular computing device via the single communication link or connection. Although different communication channels can be established as discussed in more detail below notifications for these different communication channels are multiplexed onto the single communication link or connection. Thus a computing device need not expend power to maintain multiple communication links or connections between that computing device and notification service regardless of the number of application services sending data to applications via the notification service and regardless of the number of applications on that computing device . Although discussed with reference to a single communication link or connection between notification service and computing device alternatively multiple although typically less than a threshold number communication links or connections can be used to provide notifications to a computing device .

Additionally although brokered communication notification system is discussed with reference to incorporation of system in operating system functionality of system can be implemented at least in part in one or more other modules of computing device or another device. For example an additional module included as part of computing device but external to operating system can implement at least part of brokered communication notification system . By way of another example system can be implemented at least in part by the device of notification service .

Applications can also communicate directly with an application service allowing applications to receive data from an application service while bypassing notification service and brokered communication notification system . In one or more embodiments all or a large portion of communications from application service are sent by way of notification service . Alternatively notifications with a small amount of data e.g. no more than a threshold amount of data are sent by way of notification service and larger amounts of data e.g. greater than the threshold amount of data are sent directly to application by passing notification service .

Although applications can communicate directly with application services notification service can still be used to facilitate this communication. Application services need not be configured to maintain persistent communication connections or links with applications but can rely on notification service to notify applications when a communication or link between the application and an application service is to be established. For example application service can send a notification to an application by way of notification service informing the application that an event has occurred for which the application should check the application service . This event can take various forms depending on the application and the application service such as an input from another user a change to a document a request from another device or service and so forth. In response to such a notification the application establishes a communication connection or link with or otherwise accesses the application service to respond to the event. After responding to the event the communication connection or link between the application and the application service can be terminated although the communication connection or link between notification service and the computing device executing that application remains .

When an application service desires to send data to application e.g. which is then also referred to as the target application service sends a message to notification service . Message includes a target identifier ID portion a payload portion and optionally a priority portion. The target ID portion identifies application on computing device . The payload portion includes the data that service desires to send to application . The priority portion indicates to notification service a priority level of message or of the data in the payload portion of message .

Notification management module receives message and generates a notification based on message . Notification includes a target ID portion that identifies application on computing device as the target of notification and which can include at least part of the target ID portion from message . The target ID identifies a particular computing device and a particular application on the computing device and optionally a particular user of the computing device. The target ID can be a single value encompassing multiple identifications e.g. identification of the particular computing device identification of the particular application and identification of the particular user or can be multiple separate values for identifications e.g. three ID values a device ID identifying the particular computing device an application ID identifying the particular application and a user ID identifying the particular user .

Notification also includes a payload portion which includes the data in the payload portion of message . Notification service need not be concerned with the nature of the data in the payload portion of message rather notification service simply passes the data on to the computing device in notification without altering the data. Notification management module can determine when to send notification to computing device in various manners as discussed above. The priority level indicated in message can optionally be used in making this determination e.g. data in higher priority level messages may be communicated to computing device more quickly than data in lower priority level messages . Although message and notification are illustrated in as being different e.g. one including an optional priority portion and the other not alternatively notification can be message . For example notification service can pass through message to computing device without altering message .

Brokered communication notification system can also communicate an indication to notification service to block or unblock notifications for application . Indication includes a command portion indicating to block or unblock notifications and a target ID portion identifying application on computing device . Notification service maintains an application status store in which information that identifies the status of applications on computing devices is stored. This status refers to whether notifications for the applications are blocked and or unblocked. For example store can maintain a list or other record identifying particular applications on particular computing devices for which notifications are blocked. By way of another example store can maintain a list or other record identifying particular applications on particular computing devices for which notifications unblocked.

It should be noted that different copies of the same application e.g. the same program on different computing devices or on the same computing device but associated with different users are treated separately and can have different application statuses. For example notifications for an application on one computing device can be blocked while notifications for another copy of the same application on another computing device can be unblocked. By way of another example notifications for an application associated with one user on one computing device can be blocked while notifications for another instance of the same application on the same computing device but associated with a different user can be unblocked.

Notification service uses application status store in determining if and or when to send a notification to computing device . Prior to sending notification targeting application to computing device notification service checks application status store to determine whether notifications for application on computing device e.g. as identified by the target ID portion of message and or notification are blocked. If notifications for application on computing device are not blocked then notification service sends notification to computing device .

However if notifications for application on computing device are blocked then notification service does not send notification to computing device . Notification service can store notification and or message until notifications for application are unblocked or alternatively can delete or otherwise ignore notification and message . In one or more embodiments if a notification and or message is stored or deleted an indication of such is returned to the application service from which message was received thereby informing that service that the data in the message has been stored or deleted rather than sent to the target application. Alternatively if a notification and or message is stored or deleted no indication of such need be returned to the application service from which message was received.

The target ID can be determined in a variety of different manners. In one or more embodiments application submits a request to brokered communication notification system for a communication channel. In response notification system and or notification service generates an identifier e.g. a Uniform Resource Indicator URI that allows service and system to distinguish communication channels from one another. This identifier is returned to application which in turn communicates the identifier to application service . This identifier serves as the communication channel and is used as the target ID for message and notification . Thus each instance of an application on a computing device is assigned its own identifier so different instances of the same application on the same computing device and or different computing devices will have different identifiers.

Alternatively the target ID can be determined in other manners. For example different computing devices and or users of computing devices can be assigned a device and or user ID and each application can be assigned an application ID. This combination of device ID and or user ID and application ID can be used to distinguish applications on different computing devices or different instances of applications on the same computing device from one another.

Communication module manages communication between brokered communication notification system and the notification service e.g. notification service of or . Communication module receives notifications from the notification service and provides the received notifications to notification handling module . Communication module also sends communication channel requests received from applications on the computing device to the notification service. Communication module also sends indications to block and or unblocked notifications for particular applications based on requests from blocking determination module as discussed in more detail below.

Application interface is an interface allowing applications e.g. applications of or to submit requests to brokered communication notification system . In one or more embodiments application interface is an application programming interface API exposing one or more methods that can be invoked by the applications. Alternatively various other data communication techniques can be employed to submit requests to notification system such as writing data describing the requests in a common storage location accessible to both notification system and the applications sending data describing the requests via various messaging or event communication systems and so forth.

In one or more embodiments an application submits a request to brokered communication notification system via application interface for a communication channel. Notification system returns an identifier e.g. a URI to the application that serves as the communication channel as discussed above. Additionally the application provides a callback that is maintained by notification system e.g. by notification handling module . The callback is used by notification handling module to provide to the application notifications that are received from the notification service and that target the application. The callback can take various forms such as a function or procedure that is invoked a method of an API exposed by the application that is invoked by system and so forth.

Notification handling module manages providing each notification received from the notification service to the proper application the application identified by targeted by the notification . Notification system is aware of the identifier for each application e.g. having provided the identifier serving as the communication channel to the application . For an application notification system maintains the identifier for the application and associates with that identifier an indication of how to provide notifications to the application e.g. the callback provided by the application . Thus when a notification is received from the notification service notification handling module can readily identify how to provide the notification to the identified application. Whether the notification is actually provided to the application depends on whether the application is allowed to run as determined by blocking determination module and as discussed in more detail below.

Returning to in one or more embodiments operating system implements various power saving functionality. Part of this power saving functionality is to reduce the number of applications that are running at any given time. Operating system can terminate an application or suspend an application e.g. the application may remain in memory of computing device but is not scheduled for execution by the processor of computing device at various times based on any of a variety of different criteria.

Part of this power saving functionality is also to restrict the number of applications that can run in the background. An application displaying data on a screen or other display device of computing device at a particular point in time is referred to as a foreground application at that particular point in time. Other applications that are not displaying data on the screen or other display device of computing device at that particular point in time are referred to as background applications at that particular point in time. It should be noted that over time different applications can switch between being foreground applications and being background applications.

Operating system permits only particular applications to run as background applications other applications are not permitted to run as background applications and will not be run by operating system unless a user request to run the applications and thus making them foreground applications is received. It should be noted that the instructions of a background application that is not permitted to run as a background application can remain in memory but the instructions are not scheduled for execution by a processor of computing device e.g. the application is suspended . Operating system can be configured with an indication of which applications are permitted to run as background applications or can determine which applications are permitted to run as background applications in other manners e.g. obtain an indication of which applications are permitted to run as background applications from another device or service determine which applications are permitted to run as background applications by applying particular rules or criteria and so forth .

In one or more embodiments applications are referred to as background enabled applications applications that are background enabled or non background enabled applications applications that are not background enabled . A background enabled application refers to an application that is permitted to run as a background application and a non background enabled application refers to an application that is not permitted to run as a background application.

Referring again to when brokered communication notification system receives a notification from the notification service the notification targets an application as discussed above. This target application can be an application that is currently running e.g. a foreground application or a background application. If the application is a background application then it can be a background enabled application or a non background enabled application. Applications that are currently running are also referred to as applications that are allowed to run because they are currently running Background applications that are background enabled are also referred to as applications that are allowed to run because the operating system permits the applications to run as background applications. However background applications that are non background enabled are also referred to as applications that are not allowed to run because the operating system does not permit the applications to run as background applications.

In response to receiving a notification from the notification service blocking determination module determines whether the target application of the notification is allowed to run. If the target application is not allowed to run blocking determination module directs communication module to send an indication to the notification service that notifications for the target application are to be blocked. Communication module sends this indication e.g. an indication of to the notification service resulting in the notification service sending no more notifications for the target application to the computing device as discussed above.

Blocking determination module maintains a record that an indication to block notifications for the target application was sent to the notification service. If the target application were to be run e.g. in response to a user request to run the application or otherwise become allowed to run e.g. in response to a user input indicating that the application is background enabled then the target application becomes an application that is allowed to run. Accordingly blocking determination module directs communication module to send an indication to the notification service that notifications for the target application are no longer to be blocked e.g. are to be unblocked . Communication module sends this indication e.g. an indication of to the notification service resulting in the notification service resuming sending notifications for the target application to the computing device as discussed above. It should be noted that if no block notification for the target application was previously sent to the notification e.g. since the target application started running or an unblock notification was last sent to the notification service for the target application then no unblock notification need be sent to the notification service when the target application becomes an application that is allowed to be run. For example the target application can be a non background enabled application that stops running e.g. due to a user request to run another application and then later resumes running e.g. due to a user request to run the target application . In this example if no notifications are received between the time the target application stops running and resumes running then no unblock notification need be sent to the notification service.

Blocking determination module can determine when an application is run in various manners. For example module can obtain an indication of an application that is running from one or more modules of an operating system of the computing device e.g. operating system of by monitoring various events or messages on the computing device and so forth. Thus module can readily determine when an application for which an indication to block notifications was sent to the notification service is run and thus that an indication is to be sent to the notification service that notifications for the target application are no longer to be blocked.

Notification handling module communicates with blocking determination module . If blocking determination module determines that the target application is not allowed to run then notification handling module does not provide the notification to the target application. Notification handling module can delete or otherwise ignore the notification or alternatively store the notification until the target application is running and provide the notification to the target application at that time. However if blocking determination module determines the target application is allowed to run then notification handling module provides the notification to the target application.

Thus if the notification received by brokered communication notification system targets an application that is running or that is background enabled notification system provides the notification to the target application. If the target application is not running but is background enabled then notification system wakes up resumes or otherwise starts running the target application. The target application can then process the data included in the notification as the application sees fit. However if the target application is not running and is not background enabled then the notification is not provided to the target application. Furthermore an indication is provided to the notification service that notifications for the target application are to be blocked so that no additional notifications are sent to that computing device for that target application. The notification service thus blocks notifications for the target application on the computing device. By blocking notifications for the target application additional data bandwidth between the notification service and the computing device need not be consumed for notifications that will not be delivered to the target application by notification system . Also by blocking notifications for the target application the computing device need not expend power to receive notifications that will not be delivered to the target application by notification system .

In the discussions above brokered communication notification system is discussed as providing an indication to the notification service to block notifications for an application in response to receiving a notification for the application. In these discussions the block notification is not sent to the notification service until a notification is received for an application that is not allowed to run a block notification is not sent to the notification service simply because an application stops running. Alternatively notification system can provide indications to block or unblock notifications for applications proactively. For example each time a non background enabled application is run notification system can provide an indication to the notification service to unblock notifications for that application. Additionally each time a non background enabled application is no longer running and is a background application notification system can provide an indication to the notification service to block notifications for that application. By way of another example in situations in which all applications are known to be not allowed to run notification system can provide a block all indication to the network service indicating that all of the applications are to be blocked. Similarly in situations in which all applications are known to be allowed to run notification system can provide an unblock all indication to the network service indicating that all of the applications are to be unblocked.

Returning to system sending indications in response to notifications to block notifications for applications that are not allowed to run provides robust brokered communication functionality. If notification service were to experience a power failure or other hardware and or software error significant harm on system is avoided despite the possible deletion or other loss of information in application status store . Notification service continues to operate as discussed above and receives block notifications for applications as appropriate from computing device thus repopulating or rebuilding the appropriate information in application status store regarding which applications are blocked and or unblocked.

Similarly in one or more embodiments notification service maintains information identifying the status of an application in application status store for a threshold amount of time. This threshold amount of time can be a fixed amount of time e.g. a particular number of hours a particular number of days etc. or can be a variable amount of time based on other events or criteria e.g. no message from an application service targeting the application has been received for a particular number of hours a particular number of days etc. . After this threshold amount of time elapses the information indicating the status of the application is deleted from store . Notification service continues to operate as discussed above and if service sends a notification to computing device for an application the status of which was removed from store then service will receive a block notification for the application from computing device allowing service to rebuild the deleted information. By not maintaining the status of applications on computing devices for more than the threshold amount of time particularly for applications that are not actively receiving notifications notification service can reduce the storage space used by application status store .

Furthermore in one or more embodiments the information identifying the statuses of applications on a particular computing device is deleted from application status store each time computing device disconnects from notification service . This disconnection can take various forms such as computing device shutting down computing device logging out of notification service the communication link or connection between computing device and notification service being terminated and so forth. Notification service thus need not maintain information identifying the statuses of applications on computing devices that have disconnected from notification service reducing the storage space used by application status store and reducing situations in which notification service may become out of synchronization with computing device .

Additionally application service need have no knowledge of whether application is background enabled or non background enabled. Alternatively in one or more embodiments application service is aware of whether application is background enabled or non background enabled and provides an indication e.g. as part of message of of such to notification service . Notification service can maintain e.g. in application status store a record of which applications are background enabled and which applications are non background enabled and use this record in various manners.

For example if a display device of computing device is powered off then notification system can assume that no application can be a foreground application and thus that no non background enabled application can be running. Accordingly notification system sends an indication to notification service that notifications for all non background enabled applications on computing device are to be blocked. When the display device is subsequently powered on notification system can send an indication to notification service that the notifications for a non background enabled application that is running are to be unblocked as discussed above.

In other alternatives application service need have no knowledge of whether application is background enabled or non background enabled but notification service can nonetheless be aware of whether application is background enabled or non background enabled. The knowledge of whether application is background enabled or non background enabled can be obtained in different manners. For example when obtaining a communication channel for application notification system can provide an indication to notification service of whether application is background enabled or non background enabled. Notification service can maintain e.g. in application status store a record of which applications are background enabled and which applications are non background enabled and use this record in various manners as discussed above.

Various power efficiencies can be obtained using the techniques discussed herein. Power is not expended to communicate numerous notifications to a computing device for target applications that are not allowed to run. Additionally a computing device need not expend power to maintain multiple communication links or connections between applications on the computing device and application services but can rely on notifications from the notification service to inform the applications when a communication link or connection with an application service is to be established.

In process a message targeting an application of a computing device is received act . The message is received from an application service and includes data intended for the application as discussed above.

A determination is made as to whether notifications for the application on the computing device are blocked act . The determination is made based at least in part on a previously received indication from the computing device indicating that notifications for the application are to be blocked or unblocked as discussed above.

A notification targeting the application and including the data from the message is provided to the computing device only in response to determining that notifications for the application on the computing device are not blocked act . If notifications for the application on the computing device are blocked then the notification is not provided to the computing device.

In process a notification targeting an application is received at the computing device from a notification service act . The notification targets one of multiple applications on the computing device.

A determination is made as to whether the application is allowed to run on the computing device act . In one or more embodiments the application is allowed to run on the computing device if the application is running or is permitted to run as a background application on the computing device and the application is not allowed to run on the computing device if the one application is not running and is not permitted to run as a background application on the computing device as discussed above.

If the application is allowed to run on the computing device then the notification is provided to the application act . If the application is not already running then the application is woken up and begins running to process the data in the notification. The notification can be provided to the application in different manners such as using a callback as discussed above.

However if the application is not allowed to run on the computing device then a blocked indication is sent to the notification service act . The blocked indication indicates to the notification service that notifications targeting the application are not to be sent to the computing device as discussed above.

After sending the blocked indication to the notification service the determination can be made that the one application is allowed to run on the computing device act . This determination can be made in various manners for example in response to various user inputs e.g. a user request to run the application a user request to change a configuration setting so that the application is background enabled etc. as discussed above.

In response to the determination that the one application is allowed to run on the computing device an unblocked indication is sent to the notification service act . The unblocked indication indicates to the notification service that notifications targeting the application are to be sent to the computing device as discussed above.

Various actions such as communicating receiving sending maintaining storing generating obtaining and so forth performed by various modules are discussed herein. A particular module discussed herein as performing an action includes that particular module itself performing the action or alternatively that particular module invoking or otherwise accessing another component or module that performs the action or performs the action in conjunction with that particular module . Thus a particular module performing an action includes that particular module itself performing the action and or another module invoked or otherwise accessed by that particular module performing the action.

Computing device as illustrated includes a processing system one or more computer readable media and one or more I O Interfaces that are communicatively coupled to one another. Although not shown computing device may further include a system bus or other data and command transfer system that couples the various components to one another. A system bus can include any one or combination of different bus structures such as a memory bus or memory controller a peripheral bus a universal serial bus and or a processor or local bus that utilizes any of a variety of bus architectures. A variety of other examples are also contemplated such as control and data lines.

Processing system is representative of functionality to perform one or more operations using hardware. Accordingly processing system is illustrated as including hardware elements that may be configured as processors functional blocks and so forth. This may include implementation in hardware as an application specific integrated circuit or other logic device formed using one or more semiconductors. Hardware elements are not limited by the materials from which they are formed or the processing mechanisms employed therein. For example processors may be comprised of semiconductor s and or transistors e.g. electronic integrated circuits ICs . In such a context processor executable instructions may be electronically executable instructions.

Computer readable media is illustrated as including memory storage . Memory storage represents memory storage capacity associated with one or more computer readable media. Memory storage may include volatile media such as random access memory RAM and or nonvolatile media such as read only memory ROM Flash memory optical disks magnetic disks and so forth . Memory storage may include fixed media e.g. RAM ROM a fixed hard drive and so on as well as removable media e.g. Flash memory a removable hard drive an optical disc and so forth . Computer readable media may be configured in a variety of other ways as further described below.

Input output interface s are representative of functionality to allow a user to enter commands and information to computing device and also allow information to be presented to the user and or other components or devices using various input output devices. Examples of input devices include a keyboard a cursor control device e.g. a mouse a microphone a scanner touch functionality e.g. capacitive or other sensors that are configured to detect physical touch a camera e.g. which may employ visible or non visible wavelengths such as infrared frequencies to detect movement that does not involve touch as gestures and so forth. Examples of output devices include a display device e.g. a monitor or projector speakers a printer a network card a tactile response device and so forth. Thus computing device may be configured in a variety of ways as further described below to support user interaction.

Computing device also includes a notification module . Notification module can be for example brokered communication notification system of or or brokered communication notification system of . By way of another example notification module can be a notification service of or .

Various techniques may be described herein in the general context of software hardware elements or program modules. Generally such modules include routines programs objects elements components data structures and so forth that perform particular tasks or implement particular abstract data types. The terms module functionality and component as used herein generally represent software firmware hardware or a combination thereof. The features of the techniques described herein are platform independent meaning that the techniques may be implemented on a variety of commercial computing platforms having a variety of processors.

An implementation of the described modules and techniques may be stored on or transmitted across some form of computer readable media. The computer readable media may include a variety of media that may be accessed by the computing device . By way of example and not limitation computer readable media may include computer readable storage media and computer readable signal media. 

 Computer readable storage media may refer to media and or devices that enable persistent and or non transitory storage of information in contrast to mere signal transmission carrier waves or signals per se. Thus computer readable storage media refers to non signal bearing media. The computer readable storage media includes hardware such as volatile and non volatile removable and non removable media and or storage devices implemented in a method or technology suitable for storage of information such as computer readable instructions data structures program modules logic elements circuits or other data. Examples of computer readable storage media may include but are not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage hard disks magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or other storage device tangible media or article of manufacture suitable to store the desired information and which may be accessed by a computer.

 Computer readable signal media may refer to a signal bearing medium that is configured to transmit instructions to the hardware of the computing device such as via a network. Signal media typically may embody computer readable instructions data structures program modules or other data in a modulated data signal such as carrier waves data signals or other transport mechanism. Signal media also include any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

As previously described hardware elements and computer readable media are representative of instructions modules programmable device logic and or fixed device logic implemented in a hardware form that may be employed in some embodiments to implement at least some aspects of the techniques described herein. Hardware elements may include components of an integrated circuit or on chip system an application specific integrated circuit ASIC a field programmable gate array FPGA a complex programmable logic device CPLD and other implementations in silicon or other hardware devices. In this context a hardware element may operate as a processing device that performs program tasks defined by instructions modules and or logic embodied by the hardware element as well as a hardware device utilized to store instructions for execution e.g. the computer readable storage media described previously.

Combinations of the foregoing may also be employed to implement various techniques and modules described herein. Accordingly software hardware or program modules and other program modules may be implemented as one or more instructions and or logic embodied on some form of computer readable storage media and or by one or more hardware elements . Computing device may be configured to implement particular instructions and or functions corresponding to the software and or hardware modules. Accordingly implementation of a module that is executable by the computing device as software may be achieved at least partially in hardware e.g. through use of computer readable storage media and or hardware elements of the processing system. The instructions and or functions may be executable operable by one or more articles of manufacture for example one or more computing devices and or processing systems to implement techniques modules and examples described herein.

In various implementations computing device may assume a variety of different configurations such as for computer mobile and television uses. Each of these configurations includes devices that may have generally different constructs and capabilities and thus computing device may be configured according to one or more of the different device classes. The techniques described herein may be supported by these various configurations of computing device and are not limited to the specific examples of the techniques described herein. For instance computing device may be implemented as the computer class of a device that includes a personal computer desktop computer a multi screen computer laptop computer netbook and so on.

Computing device may also be implemented as the mobile class of device that includes mobile devices such as a mobile phone portable music player portable gaming device a tablet computer a multi screen computer and so on. Computing device may also be implemented as the television class of device that includes devices having or connected to generally larger screens in casual viewing environments. These devices include televisions set top boxes gaming consoles and so on.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

