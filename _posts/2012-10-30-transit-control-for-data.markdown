---

title: Transit control for data
abstract: A method for an apparatus which operates in a data cloud includes requesting trust information from a service cloud, receiving the trust information from the service cloud, performing a trust assessment of the service cloud based on the trust information, and controlling transmission of data to the service cloud according to a result of the trust assessment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09015845&OS=09015845&RS=09015845
owner: Samsung SDS Co., Ltd.
number: 09015845
owner_city: Seoul
owner_country: KR
publication_date: 20121030
---
Apparatuses methods systems and computer program products consistent with exemplary embodiments relate to cloud computing and more particularly to enabling secure inter cloud data transfer.

Recently cloud computing technology has been developed as a useful way for individuals and businesses to store and transfer data across networks such as the Internet. In the cloud environments protection and security of data is of prime importance for data owners. However it can be difficult to protect data which is stored in a cloud system because the data storage facilities of the cloud system are typically located in remote locations far away from the data owners.

The difficulty of protecting data in a cloud environment becomes even greater when a data owner wishes to transfer data from one cloud system to another cloud system. For example an organization which is a data owner may use a private cloud system a virtual private cloud system and a public cloud system concurrently. The business processes of the organization might involve data transfer between these different types of clouds. Furthermore a data owner may desire to use a service to analyze the data owner s data where the service is located in a cloud system a service cloud that is separate from the cloud system which stores the data owner s data a data cloud . In this case the data owner may wish to temporarily provide the data stored in the data cloud to the service cloud in order to use the service provided by the service cloud. Such an inter cloud data transfer further reduces the data owner s control and visibility of the data.

Related art cloud security solutions concentrate on various sub components of the cloud environment. However these related art cloud security solutions only attempt to secure one end of communication e.g. data cloud which is not enough to ensure security considering that the other communicating entity e.g. service cloud may be vulnerable to attacks. A process to evaluate the security and trustworthiness of the target cloud system to which data is to be sent does not exist in the related art cloud security solutions.

Accordingly there is a need in the art to provide a technique which is capable of evaluating the security and trustworthiness of a target cloud system involved in an inter cloud data transfer thereby enabling a more secure inter cloud data transfer.

One or more exemplary embodiments may overcome the above disadvantages and other disadvantages not described above. However it is understood that one or more exemplary embodiments are not required to overcome the disadvantages described above and may not overcome any of the problems described above.

Exemplary embodiments relate to methods and apparatuses to enable secure inter cloud data transfer by performing a trust evaluation of a target service in a target cloud system.

Exemplary embodiments further relate to methods and apparatuses to enable secure inter cloud data transfer by providing data from a data cloud system to a target cloud system on a minimal need to know basis.

Therefore as part of the transit control framework a mechanism to perform a trust evaluation of a target cloud system and data filtering before data is sent from one cloud to another is proposed.

According to an exemplary embodiment there is provided a method for an apparatus which operates in a data cloud the method including requesting trust information from a service cloud receiving the trust information from the service cloud performing a trust assessment of the service cloud based on the trust information and controlling transmission of data to the service cloud according to a result of the trust assessment.

The method may further include transmitting the data to the service cloud when the result of the trust assessment indicates that the service cloud is trustworthy the data to be used with the target service provided by the service cloud.

The data cloud may include a data trust application programming interface API and the requesting of the trust information may include the data trust API requesting the trust information from a service trust API of the service cloud.

The method may further include the data trust API requesting service description information from the service trust API the service description information describing the target service.

The method may further include receiving by the data trust API the service description information from the service trust API.

The service trust API may retrieve the service description information from a service description database which operates in the service cloud.

The method may further include the data trust API transmitting a request to a Target System Security Posture Retrieval TSSPR host agent HA which operates in the data cloud to identify a security parameter to be used for performing the trust assessment of the service cloud the request being based on the service description information.

The security parameter may include at least one type of information selected from among information related to an antivirus system implemented by the service cloud information related to a log file implemented by the service cloud and information related to at least one of a platform and an operating system OS implemented by the service cloud.

The information related to the platform may include at least one of information related to hardware configuration information server information networking information and storage information.

The requesting of the trust information may include transmitting the security parameter to the service trust API the security parameter being used by the service trust API to request a TSSPR remote agent RA which operates in the service cloud to initiate a security data compiler for gathering information related to the security parameter.

The receiving of the trust information may include the data trust API receiving the information related to the security parameter from the service trust API and the performing of the trust assessment may include the data trust API requesting the TSSPR HA to initiate a trust verifier based on the information related to the security parameter to thereby start the trust assessment.

The method may further include the data trust API instructing a view filter server residing in the data cloud to create a filter rule when the trust verifier indicates that the service cloud is trustworthy.

The method may further include the view filter server obtaining the information related to the policy from a policy database.

The view filter server may further create the filter rule based on metadata associated with the data.

The method may further include filtering the data using the filter rule and directly transmitting the filtered data to the service cloud the filtered data to be used with the target service of the service cloud.

The method may further include filtering the data using the filter rule and providing a URL to the service cloud to enable the service cloud to access the filtered data via the URL the filtered data to be used with the target service of the service cloud.

The view filter server may create a plurality of the filter rules which are a combination of atomic filter rules and categorized filter rules.

The atomic filter rules may include ADD REPLACE or REMOVE rules which respectively add replace or remove designated types of information from the data.

The data trust API may include a plurality of layers and the method may further include the data trust API requesting the TSSPR HA to identify a plurality of the security parameters corresponding to the plurality of layers.

The plurality of layers may further include an infrastructure as a service IaaS layer a platform as a service PaaS layer and a software as a service SaaS layer.

The requesting of the trust information from the service cloud the receiving of the trust information from the service cloud and the performing of the trust assessment of the service cloud based on the trust information may be performed via a third party trust orchestrator.

A user may have a first service level agreement SLA with the data cloud and a second SLA with the service cloud.

According to another exemplary embodiment a method to be performed by an apparatus which operates in a service cloud which provides a target service requested by a user the method being used to receive data of the user stored in a data cloud includes receiving a request for trust information from the data cloud transmitting the trust information to the data cloud and receiving the data from the data cloud according to a result of a trust assessment performed by the data cloud based on the trust information.

According to another exemplary embodiment a data trust application programming interface API server includes a processor a storage and an input output unit the storage storing instructions that enable the processor to carry out operations including requesting via the input output unit trust information from a service cloud which provides a target service requested by a user receiving via the input output unit the trust information from the service cloud performing a trust assessment of the service cloud based on the trust information and controlling transmission of data to the service cloud via the input output unit according to a result of the trust assessment.

According to another exemplary embodiment a service trust application programming interface API server includes a processor a storage and an input output unit the storage storing instructions that enable the processor to carry out operations including receiving via the input output unit a request for trust information from a data cloud transmitting the trust information to the data cloud and receiving data from the data cloud according to a result of a trust assessment performed by the data cloud based on the trust information the received data to be used with a target service stored in a service cloud.

According to another exemplary embodiment a view filter server includes a processor a storage and an input output unit the storage storing instructions that enable the processor to carry out operations including receiving via the input output unit an indication indicating whether a service cloud is trustworthy and if the indication indicates that the service cloud is trustworthy creating a filter rule to filter data of a user stored in a data cloud filtering the data using the filter rule and transmitting via the input output unit the filtered data.

According to another exemplary embodiment a trust verifier includes a processor a storage and an input output unit the storage storing instructions that enable the processor to carry out operations including receiving via the input output unit information related to a security parameter of a service cloud performing a trust assessment of whether the service cloud is trustworthy based on the information and transmitting an indication of a result of the trust assessment to a view filter server to be used by the view filter server to determine whether to create a filter rule to filter data stored in a data cloud.

According to another exemplary embodiment a security data compiler includes a processor a storage and an input output unit the storage storing instructions that enable the processor to carry out operations including receiving via the input output unit a request from a Target System Security Posture Retrieval TSSPR Remote Agent RA requesting that the security data compiler gather information related to a security parameter of a service cloud gathering the requested information and transmitting via the input output unit the requested information to the TSSPR RA to enable the TSSPR RA to transmit the requested information to a data cloud.

According to another exemplary embodiment a Target System Security Posture Retrieval TSSPR Host Agent HA includes a processor a storage and an input output unit the storage storing instructions that enable the processor to carry out operations including receiving via the input output unit a request from a data trust application programming interface API server requesting identification of a security parameter to be used for performing a trust assessment of a service cloud identifying the security parameter and transmitting via the input output unit the identified security parameter to the data trust API server.

According to another exemplary embodiment a Target System Security Posture Retrieval TSSPR Remote Agent RA includes a processor a storage and an input output unit the storage storing instructions that enable the processor to carry out operations including receiving via the input output unit a request from a service trust application programming interface API server requesting initiation of a security data compiler for gathering information related to a security parameter initiating the security data compiler receiving via the input output unit information gathered by the security data compiler and transmitting via the input output unit the information gathered by the security data compiler to the service trust API server.

Embodiments will be described below in more detail with reference to the accompanying drawings. The following detailed descriptions are provided to assist the reader in gaining a comprehensive understanding of the methods apparatuses and or systems described herein. Accordingly various changes modifications and equivalents of the systems apparatuses and or methods described herein will be suggested to those of ordinary skill in the art. Also descriptions of well known functions and constructions may be omitted for increased clarity and conciseness.

The terms used in the description are intended to describe embodiments only and shall by no means be restrictive. Unless clearly used otherwise expressions in a singular form include a meaning of a plural form. In the present description an expression such as comprising or including is intended to designate a characteristic a number a step an operation an element a part or combinations thereof and shall not be construed to preclude any presence or possibility of one or more other characteristics numbers steps operations elements parts or combinations thereof.

Exemplary embodiments enable secure inter cloud data transfer by performing a trust evaluation of a target service and then providing required data to the target service on a minimal need to know basis. To achieve this exemplary embodiments provide a technique in which certain security information is gathered at the target service platform and additional processing is performed in the data cloud that hosts user data. Therefore both of the cloud systems are actively involved in ensuring a secure inter cloud data transfer.

In an exemplary embodiment the cloud customer is one of an individual user or a corporate entity such as an Enterprise entity. For example the cloud customer can be an individual data owner that stores his her data in the data cloud . Alternatively the cloud customer can be a corporate entity such as for example a health insurance company which maintains medical records in the data cloud . The cloud customer may access the data cloud and service cloud in various ways for example through a World Wide Web WWW interface.

When the cloud customer is an individual Internet user the cloud customer may access the data stored in the data cloud and the services provided by the service cloud through a user interface e.g. WWW interface provided on a personal electronic device of the user such as a desktop computer a laptop computer a mobile phone etc.

When the cloud customer is a corporate entity such as an Enterprise entity the cloud customer may access the data stored in the data cloud and the services provided by the service cloud through a cloud provider interface accessible from a client computer or through a cloud broker interface. Access can also be provided in many other ways according to the requirements of the Enterprise entity.

In an exemplary embodiment the data cloud the service cloud or a third party entity may perform a verification procedure on the device of the cloud customer to verify the identity of the cloud customer requesting the inter cloud data transfer. The verification may be performed using many different techniques for example inputting passwords etc.

According to an exemplary embodiment the cloud customer and the data cloud via a representative of the data cloud enter into an agreement whereby the cloud customer is granted access to use the data storage services offered by the data cloud . The agreement may be for example a Service Level Agreement SLA . The SLA may have various different types of provisions. For example the SLA may authorize the cloud customer to store data in storage facilities owned or operated by the representative of the cloud customer in exchange for a fee.

The cloud customer accesses the data cloud through the connection . In an exemplary embodiment the connection is established over the Internet using wired and or wireless connection devices. The cloud customer can transmit and or receive data to and or from the storage facilities of the data cloud via the connection .

According to an exemplary embodiment the cloud customer and the service cloud via a representative of the service cloud enter into an agreement whereby the cloud customer is granted access to use the services offered by the service cloud . For example the cloud customer and the representative of the service cloud may enter into a Service Level Agreement SLA . The SLA may have various different types of provisions. For example the SLA may authorize the cloud customer to use various services provided by the service cloud in exchange for a fee.

The cloud customer accesses the service cloud through a connection . In an exemplary embodiment the connection is established over the Internet using wired and or wireless connection devices. The cloud customer can requests services to be performed by the service cloud via the connection and can further receive results of the service via the connection .

The data cloud and the service cloud communicate with each other over a connection . In an exemplary embodiment the connection is established over the Internet using wired and or wireless connection devices. The data cloud and the service cloud communicate with each other and exchange requested information over the connection .

The data server is configured to store data of the cloud customer . The data server can be implemented in various ways such as for example as a plurality of memory devices. Many different types of information may be stored in the data server . For example when the cloud customer is a health insurance company the data server may be utilized to store and maintain medical records of customers insured by the health insurance company.

Additionally in an exemplary embodiment the data server stores metadata which is data related to the stored data of the cloud customer . In an exemplary embodiment the metadata indicates a policy or group of policies which the stored data corresponding to the metadata is required to comply with. The stored data may be required to comply with different types of policies. Certain types of data are very sensitive and may be legally required to comply with specific policies. For example the medical record of a patient is very sensitive information and may be required to comply with certain medical regulations such as the Health Insurance Portability and Accountability Act of 1996 hereinafter also referred to as HIPAA . HIPAA regulates various aspects of medical records including for example whether and to what extent certain types of external entities may be granted access to a patient s medical records. Therefore when for example the cloud customer is a health insurance company and stores medical records of patients insured by the health insurance company the metadata corresponding to the stored data indicates that the stored data includes medical records and further indicates that the medical requires must comply with HIPAA.

The data trust API serves as an interface for communication between the data cloud and the service trust API residing in the service cloud . In an exemplary embodiment the data trust API includes modular pieces of software which contain the logic for establishing intra and inter cloud communications. The data trust API may further include various pieces of hardware such as processors to execute the modular pieces of software. The data trust API is configured to control various processes within the data cloud by directly or indirectly initiating various components of the data cloud .

The data trust API is configured to exchange messages with the service trust API in the service cloud to obtain service description information describing the target service . The data Trust API is further configured to exchange messages with the TSSPR HA to determine the security parameters also referred to as trust information required to perform the trust assessment of the target service . In an exemplary embodiment this process of identification of security parameters is carried out with respect to the different layers including the IaaS PaaS and SaaS layers in the service cloud .

According to exemplary embodiments the data trust API may be implemented as either a layered trust API or a non layered trust API. For example the data trust API can be implemented as a layered trust API having three layers which correspond to the software as a service SaaS layer platform as a service PaaS layer and infrastructure as a service IaaS layer respectively. The layers are used to classify security parameters required for trust evaluation from SaaS PaaS and IaaS service providers for making a trust assessment of the target service . The data trust API may send a consolidated list of security parameters that the data trust API requires to the service trust API . Alternatively the list of security parameters that the data trust API requests from the service trust API may include a subset of the IaaS PaaS and or SaaS service framework components.

The TSSPR HA identifies security parameters for trust evaluation of the target service and assists in the process of trust assessment by invoking the trust verifiers .

The TSSPR HA may use several different methods to determine which security parameters to request from the target service . For example specific legal regulatory and other enterprise or user policies may be associated with corresponding security parameters. In this case after analyzing the data requested by the target service or the metadata associated with the data if the TSSPR HA determines that the provision of the requested data needs to comply with specific legal regulatory and other enterprise or user policies the TSSPR HA can then determine the corresponding security parameters to be requested from the target service . Alternatively varying security levels of data e.g. confidential secret top secret etc. may be associated with corresponding security parameters. In this case after determining the security level of the data the TSSPR HA can then determine the corresponding security parameters to be requested from target service . Many other types of correspondences are also possible. The correspondences between security parameters and other criteria e.g. policies security levels etc. may be stored in the TSSPR HA or in another database.

For example when the target service requests medical records from the data server the TSSPR HA may determine based on specific policies e.g. HIPAA that the following security parameters are to be requested from the target service hardware configuration information server information on which the SaaS is hosted operating system integrity software version anti virus software and version security patch updates information networking information and storage information. Furthermore the security parameters that are identified by the TSSPR HA may be categorized into parameters of Iaas PaaS and SaaS layers by the data trust API . In this case the data trust API classifies hardware configuration information server information on which the SaaS is hosted networking information and storage information as IaaS layer security parameters classifies operating system integrity and anti virus software and version as PaaS layer security parameters and classifies software version and security patch updates information as SaaS layer information. After classifying the security parameters by layer the data trust API transmits a request to the service trust API requesting the security parameters and requesting the initiation of specific security data compilation processes.

The TSSPR HA is able to make a decision about the security posture of the target service based on the results of the verification process which are obtained from the trust verifiers . This decision also referred to as a trust assessment determines whether the data transfer will continue or cease. If the decision is positive then the process of view filter creation is initiated by the data trust API by sending the trust assessment results service description and pointers to the requested data to the view filter server .

The trust verifiers are responsible for performing the trust assessment of the service cloud using trust information transmitted from the service cloud and inputted to the trust verifiers from the TSSPR HA . In an exemplary embodiment the trust verifiers perform verification processes of specific security related information with respect to different layers of the service cloud for example the platform as a service PaaS layer the infrastructure as a service IaaS layer and the software as a service SaaS layer. Each of these layers may include different types of information although it is understood that certain types of information may overlap between layers.

For example one of the trust verifiers may be configured to perform trust verification with respect to security parameters classified in the infrastructure as a service IaaS layer and may verify security related information related to various IaaS layer parameters such as for example hardware configuration information server information networking information or storage information.

Further the trust verifiers may perform verification processes with respect to platform as a service PaaS layer specific security information of the service cloud . The PaaS layer specific security information may include for example information related to antivirus Intrusion Detection System IDS firewalls of the service cloud . For example a trust verifier may check the last updated date of the reported antivirus definitions and check the antivirus tool report for any unwanted content e.g. whether malware has been identified .

The PaaS layer specific security information may include for example information related to antivirus Intrusion Detection System IDS firewalls of the service cloud . For example a trust verifier may check the last updated date of the reported antivirus definitions and check the antivirus tool report for any unwanted content e.g. whether malware has been identified .

The trust verifiers may further perform log file checking. The log files of the service cloud may contain two different kinds of information access logs showing which users have accessed systems files and processes of the service cloud and program launch and status logs which contain information about programs and applications running on the service cloud . These log files are example of SaaS layer security information. In the case of static platform configuration information reporting e.g. hardware components interfaces connections bandwidth and storage capabilities log file checking can also cover IaaS layer related information.

These two types of information access logs and program launch and status logs may be evaluated by a trust verifier . For access log files the trust verifier checks that each access to databases has been authenticated and authorized so that an audit trail can be generated.

For program status and launch log files the trust verifier verifies if the software is updated to a safe version. The trust verifier may perform this verification in several ways. For example the trust verifier may be able to query the available databases and or other information sources which include information related to known vulnerabilities such as the CVE Common Vulnerabilities and Exposures database NVD National Vulnerabilities Database US CERT alerts and OSVDB Open Source Vulnerability Database . If any of the software packages reported as being used by the service cloud are identified by the databases information sources as having an active or unpatched vulnerability or exploit the target service should be considered untrustworthy and data should not be sent to the target service . The trust verifier may further keep track of the reported software versions check the vulnerability databases information sources on a regular basis and alert the cloud consumer if any of the previously reported software packages indicates a vulnerability.

The trust verifiers may also perform continuous log file monitoring. In this case a trust verifier may be configured to continuously monitor log file changes for a predetermined time period after the data has been transmitted to the service cloud . This feature enables the trust verifier to continuously obtain an up to date view of the system log files of the service cloud . This may for example be performed by the service cloud sending notification updates to the data cloud the notification updates indicating log file changes. Continuous monitoring verification of log files enables the data cloud to quickly react to uncommon behavior patterns in access logs or to software changes in software logs. According to exemplary embodiments information is either posted from the service cloud to the trust verifiers or pulled by the trust verifiers from a service cloud log information endpoint.

The trust verifiers may also perform platform and operating system OS trust state reporting and evaluation. In an exemplary embodiment the platform and operating system trust state reporting and evaluation procedure performed by the trust verifiers is similar to the Trusted Computing Group system remote attestation methods. In this case a trust verifier may verify all of the IaaS layer specific security posture information such as hardware configuration information server information networking information storage information etc. and may build a base for elevating the level of trust that can be gained from other security posture information for example the trustworthiness of logfile information may be higher on a trusted and attested PaaS .

Therefore according to exemplary embodiments the verification system is built in a modular way so that there can be separate modules trust verifiers which perform the verification for each data type. This extensible architecture allows a user to plug in different trust verifiers as needed. In an exemplary embodiment the results of a trust verifier may either be a binary result passed failed for binary decisions or a more detailed return value indicating 1 a need for additional security posture data 2 missing verification information 3 other errors in trust verification which need attention 4 or provide additional inputs to the filtering process for the creation of filters.

The view filter server performs functions of filtering data stored in the data server and providing the filtered data to the data trust API to enable the data trust API to deliver the filtered data to the target service . The view filter server generates at least one data view filter also referred to as a filter rule based on various types of information and uses the data view filter to filter the data stored in the data server . In an exemplary embodiment the view filter server filters the data in order to ensure that only a minimally necessary quantity of data is sent from the data cloud to the service cloud .

Based on the result of the trust assessment the view filter server receives a command from the data trust API to start the creation of the filter rule . The view filter server generates the filter rule based on various criteria including for example the service description information describing the target service the trust assessment results determined by the trust verifiers and the policies which are indicated by the metadata . The view filter server fetches the requested data and the corresponding metadata from the data server . Then the view filter server dynamically generates the filter rules based on inputs provided by the data trust API . In an exemplary embodiment the view filter server may also generate additional rules obtained as a result of mapping the metadata of the requested data to the policy database .

In an exemplary embodiment the view filter server generates the filter rules by combining basic atomic filters with categorized filters. Examples of basic atomic filters include REMOVE ADD and REPLACE which for example remove add and replace the name of a person in a data record respectively. Examples of categorized filters are filters which are specific to certain policies that are associated with the data. Additional new filter rules can also be generated in combination with the atomic filters based on the inputs for the view filter function. For example this may be information for the required data from the service description.

For example the view filter server may generate a filter rule based on service description information describing the target service . For example the cloud customer may be a health insurance company which desires to obtain a statistical analysis provided by the target service e.g. statistics on the number of patients who have undergone surgeries. In this case the target service may request that the data cloud provides the health records of all the insurance customers. However from the service description information the view filter server determines that in order to perform the desired service the target service only needs the medical records of the sub set of insurance customers who have made visits to a hospital and may filter out all other medical records. Therefore the view filter server generates an initial set of filter rules e.g. filter rules removing the insurance customers who have not made visits to a hospital based on the service description information describing the target service .

Furthermore the view filter server may generate the filter rule based on policies stored in the policy database . For example health records about patients are very sensitive information and such data may be associated with certain metadata which specifies the policies to which such data set is required to comply with. For example the metadata may indicate that the data must comply with HIPAA. So this information from the metadata is mapped to the policy database and all the underlying sub policies associated with HIPAA are retrieved. For example a HIPAA sub policy may require that the first middle and last names of the patients must be removed before the health records are provided to another party e.g. target service . These policy based filters are the categorized filters. Once the relevant policies and the associated rules are retrieved the basic filter rules are customized as required and thus form the final set of filter rules to filter the data.

The policy database is a database configured to store policies which may be used to filter the data stored in the data server before the data is transmitted to the target service . The policies may be many different kinds including legislative and regulatory compliance policies and associated sub policies user policies etc. In an exemplary embodiment the policies and sub policies stored in the policy database are matched to metadata associated with the data requested by the target service . The view filter server generates filter rules based on a result of the policy metadata matching operation. For example when the metadata indicates that the stored data includes medical records required to comply with HIPAA the policy database matches the metadata with the specific policies sub policies of HIPAA which are stored in the policy database .

The service level agreement SLA database stores SLAs established between the data cloud and other entities such as an SLA formed between the cloud customer and the data cloud . According to exemplary embodiments there are various service level agreement standards that may be implemented and stored in the SLA database . For example the Web Service Agreement WS Agreement from the Open Grid Framework Web Service Level Agreement WSLA language and framework from IBM and Unified Service Description from World Wide Web Consortium are the major standards to consider for SLAs related to web services. The WS Agreement and WSLA can be used in coordination with WSDL which may also be used as one of the possible standards for the service description specification whereas the USDL may combine the specifications of service descriptions and the SLA. All of these standards may use XML for the specification although are not limited thereto.

The connections which connect the various components residing in the data cloud can be various types of wired and or wireless connections such as connections over the Internet Local Area Network LAN connections ethernet a combination thereof etc. The connections are not limited to being implemented as shown in .

As shown in the service cloud includes a target service a target system security posture retrieval TSSPR remote agent RA security data compilers a service description database a service trust application programming interface API a service level agreement SLA database and a plurality of connections which connect the various components within the service cloud .

The target service is a service which is desired to be used by the cloud customer . In an exemplary embodiment the target service is an SaaS layer service. The target service performs a service on the data owned by the cloud customer which is stored in the data server and outputs a result of the performance to the cloud customer . The target service can be a very wide variety of different types of services and may be either a single service or a plurality of services. The target service may be for example a statistical analysis service which generates a statistical analysis of data may be a data searching service which searches data based on specific criteria etc. For example when the cloud customer is a health insurance company the target service may be a statistical analysis service which analyzes certain types of information related to the medical records of people insured by the health insurance company e.g. the number of patients undergoing surgeries the number of patients visiting a dentist etc.

The service trust API serves as an interface for communication between the service cloud and the data trust API residing in the data cloud . The service trust API responds to the requests transmitted from the data trust API by triggering the functions among the various components in the service cloud and then relays the requested information to the data trust API . The service trust API consolidates the trust information to be sent to the data trust API . Furthermore optionally the service trust API may translate the trust information to another format. For example in an exemplary embodiment the service trust API converts the trust information into XML data and transmits the converted trust information to the data trust API .

Based on the identified security parameters the service trust API resolves any issues in the gathering of security information from different layers. For example the service cloud may utilize different SaaS PaaS and IaaS providers in which case the SLAs between the different providers may be used to respond to the requests for security parameter information appropriately. After having resolved the issues the service trust API instructs the TSSPR RA to request initiation of the security data compilers to gather all the required security parameters.

According to exemplary embodiments the service trust API may be implemented as either a layered trust API or a non layered trust API. For example as shown in the service trust API can be implemented as a layered trust API having three layers and which correspond to the software as a service SaaS layer platform as a service PaaS layer and infrastructure as a service IaaS layer respectively. The layers and each include security parameters required for trust evaluation. The service trust API may receive a consolidated list of security parameters requested from the data trust API . Alternatively the list of security parameters requested from the data trust API may include a subset of the SaaS PaaS and IaaS layers and

In an exemplary embodiment the service trust API is owned by an SaaS provider. This SaaS provider may also own the underlying PaaS and IaaS services in which case all the necessary security parameters can be easily measured. If the PaaS and IaaS services belong to another provider or a plurality of other providers then the SaaS provider may enter an SLA or a plurality of SLAs with the other provider or the plurality of the other providers to define the limitations of the information that the SaaS provider can access from the underlying PaaS or IaaS providers.

The target system security posture retrieval TSSPR remote agent RA is responsible for initiating and consolidating security parameter information in the service cloud . Specifically the TS SPR RA receives a request for security parameter information and based on the received security parameter information the TSSPR RA initiates the security data compilers to begin the process of compiling the requested security information.

Each of the security data compilers is responsible for retrieval of specific security related information of the service cloud . The security data compilers may retrieve the security information in a layer by layer manner.

In an exemplary embodiment security related information may be collected by the security data compilers on a hardware level by using trusted computing technology such as for example a Trusted Platform module TPM a virtual TPM vTPM Trustzone enabled hardware or other security anchors which are able to measure and securely store platform configuration information.

A typical process of gathering security related information by the security data compilers may include for example the creation of a chain of trust by measuring using a calculation of a hash value each hardware and software component before its start up. The measured data is then stored securely in secured storage of the security anchor. If the secure storage is limited technology such as for example an extend operation used in the TPM Platform configuration registers may additionally be used. In this case measurements are cryptographically bound and collated into a single hash value by calculating the new value of a secure storage register as new val hash old val hash file where hash is a hash function such as SHA1 old val refers to the old value in the storage register file refers to the actual file to be executed or measured and is the concatenation of the values. A measurement log file is created alongside this operation which contains the clear text representation of each measurement value the corresponding filename and the register in which the measurement value is stored. The measurement process results in a structured and cryptographically secured representation of the machine state where the clear text log is protected by the secured value in the security anchor. The information may then be sent to the trust verifiers which in turn may use the clear text log to re calculate the values of the storage registers from the clear text log and compare the result with the cryptographically protected reported value form the security anchor. If the values do not match the trust verifier determines that the clear text log has been tampered with and determines that the service cloud is untrustworthy. The trust verifiers may also check the clear text log with the help of an appropriate service or database of reference measurement values for files which have a different hash measurement value reported from the expected value which is in the database of known good values. As a result the trust verifiers have a specific detailed and trusted view on the software and hardware configuration of the target service under evaluation. It is understood that this description is exemplary only.

The service description database stores information describing the functionality of services offered by the target service . In an exemplary embodiment the services offered by the target service are web based services. In this case the target service is configured to be compatible with Web Services Description Language WSDL . WSDL is the standard format for describing a web service in Extensible Markup Language XML format. A WSDL description of a web service also referred to as a WSDL file provides a machine readable description of what the target service is called what parameters are expected by the target service and what data structures the target service returns.

According to exemplary embodiments WSDL may be used in combination with SOAP and XML Schema to provide web services over the Internet. A client program connecting to a web service can read the WSDL to determine what functions are available from the target service . Any special datatypes used are embedded in the WSDL file in the form of XML Schema. The client can then use SOAP to actually call one of the functions listed in the WSDL.

According to an exemplary embodiment WSDL 2.0 may be used for the service description. WSDL 2.0 is a W3C recommendation for specifying service descriptions for web services. According to other exemplary embodiments the Unified Service Description Language USDL may be used for the service description as the USDL is a comprehensive language in terms of describing business operational and technical parameters of services and therefore may be beneficial for cloud computing scenarios. In USDL service descriptions may include information such as for example pricing legal notices service providers interaction methods service level agreements and so on. USDL may further allow for comparison of services by price.

The service level agreement SLA database stores the SLAs formed between the service cloud and other entities such as the SLA formed between the service cloud and the cloud customer . The SLA database may also store other SLAs as well. For example when the PaaS and IaaS services are owned operated by other providers the SLA database may store the SLAs with these other providers.

The connections which connect the various components residing in the service cloud can be various types of wired and or wireless connections such as connections over the Internet Local Area Network LAN connections ethernet a combination thereof etc.

According to exemplary embodiments each member entity of the transit control framework may be equipped with a private public key pair which is used as authentication keying material. When two entities need to communicate and exchange data e.g. in the discovery of communication endpoints in data requests and responses etc. the entities may perform a TLS authentication handshake based on their key pairs. Communication security may be provided by session keys established during the TLS handshake and message integrity can be generated by the use of message authentication codes MACs .

According to exemplary embodiments for two member entities of the transit control framework to discover endpoints RFC5785 based Uniform Resource Identifiers URI are used.

In operation the cloud consumer requests a service from the service cloud . In an exemplary embodiment the cloud consumer requests the service over an Internet connection by using a user interface e.g. a website provided by the service cloud . For example when the cloud consumer is a health insurance company the health insurance company may wish to request that the service cloud perform a service which identifies each of the health insurance company s customers who have undergone surgery during the past year. As part of operation the service cloud authenticates the identity of the cloud consumer using any of various authentication techniques e.g. passwords tokens etc. .

In operation the service cloud provides the cloud consumer with a list of data clouds supported by the service cloud to enable the cloud customer to select the data cloud which hosts the cloud consumer s data from among the list of data clouds . As part of operation the service cloud also requests the data required to perform the service initially requested by the cloud consumer . For example the service cloud requests the medical records of the health insurance company.

In operation the service cloud transfers control from the user interface of the service cloud to the user interface of the data cloud selected in operation to enable the cloud consumer to authenticate itself to the selected data cloud .

In operation the cloud consumer authenticates itself using the interface provided by the data cloud in operation . Furthermore in operation the cloud consumer selects the data requested by the service cloud .

In operation the data cloud transfers control from the user interface of the data cloud to the data trust API to invoke the transfer of the cloud customer s records to the service cloud and also provides the URI of the service cloud .

In operation the data trust API and the service trust API mutually authenticate each other in order to ensure the secure exchange of sensitive trust information.

In operation the data trust API requests the service description information describing the service requested by the cloud customer from the service trust API .

In operation the service trust API initiates the retrieval of the service description information requested in operation and then transmits the retrieved service description information to the data trust API .

In operation the data trust API invokes processes to identify security parameters required for the trust evaluation of the service provided by the service cloud .

In operation the service trust API invokes processes to retrieve the security parameters requested in operation .

In operation once the requested parameters are retrieved the service trust API transmits the requested parameters to the data trust API .

In operation the data trust API starts the process of trust assessment and then initiates a data filtering process based on the trust assessment having a positive result.

In operation the data trust API transmits the filtered data to the user interface of the data cloud . In operation the user interface of the data cloud transmits the filtered data to the service cloud and the service cloud performs the desired service using the filtered data.

In operation the user interface of the service cloud outputs a result of the service to the cloud customer . For example the service cloud outputs a statistical analysis of patients who have undergone surgery during the past year.

According to an exemplary embodiment the method shown in is a more detailed description of the operations and shown in the method of . However it is understood that the method shown in is not required to be implemented as part of the method shown in and may alternatively be implemented independently from the method shown in .

In operation the data trust API requests service description information from the service trust API . For example when the cloud consumer is a health insurance company the health insurance company may wish to request that the service cloud perform a service which identifies each of the health insurance company s customers who have undergone surgery during the past year.

In operation the service trust API requests the service description information from the service description database .

In operation the service description database retrieves the service description information requested in operation and transmits the service description information to the service trust API .

In operation the service trust API transmits the service description information to the data trust API .

In operation the data trust API transmits the service description information to the TSSPR HA and then the TSSPR HA analyzes the service description information to identify security parameters necessary to perform the trust assessment of the target service based on the service description information.

In operation the TSSPR HA transmits the security parameters identified in operation to the data trust API . In an exemplary embodiment operation includes an operation of the TSSPR HA classifying the security parameters transmitted from the TSSPR HA on a layer by layer basis such as for example the IaaS PaaS and SaaS layers.

In operation the data trust API transmits a request to the service trust API requesting the security parameters sent from the TSSPR HA in operation .

In operation the service trust API transmits a request to the TSSPR remote agent to initiate processes to retrieve the information related to the security parameters requested in operation .

In operation the TSSPR remote agent initiates the security data compilers which are configured to compile information related to the security parameters requested in operation . In an exemplary embodiment each of the security data compilers compiles security parameter information corresponding to a different layer for example the IaaS PaaS and SaaS layers.

In operation the security data compilers transmit the compiled security parameter information to the TSSPR remote agent .

In operation the TSSPR remote agent consolidates the compiled security parameter information and transmits the consolidated security parameter information to the service trust API .

In operation the service trust API transmits the security parameter information received in operation to the data trust API .

In operation the data trust API transmits the security parameter information received in operation to the TSSPR HA .

In operation the TSSPR HA transmits the security parameter information received in operation to the trust verifiers and then the trust verifiers perform verification processes based on the security parameter information.

In operation the trust verifiers transmit a verification response based on the result of the verification processes to the TSSPR HA and based on the verification response the TSSPR HA makes a decision as to the security posture of the target service . The decision indicates whether the TSSPR HA has determined that the target service is trustworthy and therefore determines the sequence of steps that follow operation . If the decision indicates that the target service is trustworthy the method moves to operation .

In operation the TSSPR HA transmits the decision to the data trust API and then in operation the data trust API communicates with the view filter server to initiate the creation of view filter rules to filter the data to be transmitted to the target service .

According to an exemplary embodiment the method shown in is a more detailed description of the operation shown in . However it is understood that the method shown in is not required to be implemented as part of the method shown in and may alternatively be implemented independently from the method shown in .

In response to receiving a decision from the TSSPR HA indicating that the target service is trustworthy in operation the data trust API communicates with the view filter server to initiate the view filter creation process. In an exemplary embodiment the data trust API initiates the creation of the view filter rules by providing the trust assessment outputs service description information and a pointer to the requested data to the view filter server .

In operation the view filter server transmits a request to the data server requesting the data requested by the target service and further requests the metadata corresponding to the data requested by the target service .

In operation the data server retrieves the data and corresponding metadata requested in operation and transmits the data and corresponding metadata to the view filter server .

In operation the view filter server then transmits a request to the policy database requesting that the policy database map the policies specified in the metadata to the policy information stored within the policy database . For example when the metadata indicates that the stored data includes medical records required to comply with HIPAA the policy database matches the metadata with the specific policies sub policies of HIPAA which are stored in the policy database . In this case for example HIPAA may require that certain information not be disclosed or be disclosed on a minimal basis.

In operation the policy database transmits the specific policies sub policies which match the metadata back to the view filter server .

In operation the view filter server generates one or a plurality of data view filters also referred to as view filter rules based on the specific policies sub policies transmitted from the policy database and the service description information.

In operation the view filter server transmits the filtered data to the data trust API to enable the data trust API to deliver the filtered data to the target service . The data trust API may deliver the filtered data to the target service in several ways. For example the data trust API may directly transmit the filtered data to the target service . Alternatively the data trust API may store the filtered data in a secure storage facility which is accessible via a specified URL and may provide the target service with access to the stored data by providing the target service with the specified URL. The filtered data from the view filter server can also be transmitted to other entities inside or outside of the data cloud as well as the data trust API .

The third party trust orchestrator manages the process of trust verification for the data cloud . According to this other exemplary embodiment the third party trust orchestrator has SLAs with both the data cloud and the service provider . The third party trust orchestrator may perform all or a sub set of the trust assessment operations described above with respect to the cloud computing system shown in .

The devices and or services illustrated in for example may be concretely implemented using one or more devices of the type shown at and may interface with one or more such computing devices. Devices may include but are not limited to a computer e.g. a laptop computing device a mobile device e.g. smartphone or tablet a television with one or more processors embedded therein and or coupled thereto a device associated with a vehicle a server computer computing devices and storage devices e.g. an attached storage device and e.g. a network accessible storage device .

Although the exemplary embodiments mentioned above may appear to focus on services and operations that are today provided by high speed servers the continuous advances in computing devices are foreseen to make it possible for such services and operations to be carried out between computing devices of types such as devices which today are often thought of as user devices e.g. devices used by users to access services and or issue requests such as on a network . Such user devices may provide a source for requests that initiate the need for communication between a data cloud and a service cloud.

Devices on the other hand are certainly appropriate for operations and services mentioned above but could likewise provide a source for requests that initiate the need for communication between a data cloud and a service cloud. When carrying out the operations and services mentioned above such devices may be more typically associated with service providers e.g. used by service providers to provide services and or store data and carry out the operations such as those illustrated in .

For example a user may initiate a request for some type of information for accessing viewing and or sharing content using user devices or . Such a request may travel through network to a server such as devices or that support the API . The communications described above such as those illustrated in may take place between devices such as . On the other hand it is not required that the APIs be supported only by devices such as and the other devices shown in may be used as is appropriate to the technical situation.

Computing device can be communicatively coupled to input user interface and output device interface . Either one or both of input user interface and output device interface can be a wired or wireless interface and can be detachable. Input user interface may include any device component sensor or interface physical or virtual that can be used to provide input e.g. buttons touch screen interface keyboard a pointing cursor control microphone camera braille motion sensor optical reader and or the like . Output device interface may include a display television monitor printer speaker braille or the like. In some example implementations input user interface and output device interface can be embedded with or physically coupled to the computing device . In other example implementations other computing devices may function as or provide the functions of input user interface and output device interface for a computing device .

Examples of computing device may include but are not limited to highly mobile devices e.g. smartphones devices in vehicles and other machines devices carried by humans and animals and the like mobile devices e.g. tablets notebooks laptops personal computers portable televisions radios and the like and devices not designed for mobility e.g. desktop computers other computers such as servers or rack mounted devices information kiosks televisions with one or more processors embedded therein and or coupled thereto radios and the like .

Computing device can be communicatively coupled e.g. via I O interface to external storage and network for communicating with any number of networked components devices and systems including one or more computing devices of the same or different configuration. Computing device or any connected computing device can be functioning as providing services of or referred to as a server client thin server general machine special purpose machine or another label.

I O interface can include but is not limited to wired and or wireless interfaces using any communication or I O protocols or standards e.g. Ethernet 802.11x Universal System Bus WiMax modem a cellular network protocol and the like for communicating information to and or from at least all the connected components devices and network in computing environment . Network can be any network or combination of networks e.g. the Internet local area network wide area network a telephonic network a cellular network satellite network and the like .

Computing device can use and or communicate using computer usable or computer readable media including transitory media and non transitory media. Transitory media include transmission media e.g. metal cables fiber optics signals carrier waves and the like. Non transitory media include magnetic media e.g. disks and tapes optical media e.g. CD ROM digital video disks Blu ray disks solid state media e.g. RAM ROM flash memory solid state storage and other non volatile storage or memory.

Computing device can be used to implement techniques methods applications processes or computer executable instructions in some example computing environments. Computer executable instructions can be retrieved from transitory media and stored on and retrieved from non transitory media. The executable instructions can originate from one or more of any programming scripting and machine languages e.g. C C C Java Visual Basic Python Perl JavaScript and others .

Processor s can execute under any operating system OS not shown in a native or virtual environment. One or more applications can be deployed that include logic unit API unit input unit output unit host agent unit trust verifier unit view filter unit and inter unit communication mechanism for the different units to communicate with each other with the OS and with other applications not shown . For example host agent unit trust verifier unit and view filter unit may implement one or more processes shown in the figures described previously. The described units and elements can be varied in design function configuration or implementation and are not limited to the descriptions provided.

In some example implementations when information or an execution instruction is received by API unit it may be communicated to one or more other units e.g. logic unit input unit output unit host agent unit trust verifier unit and view filter unit . To carry out such an execution instruction the processor s must refer to a set of instructions stored in internal storage memory or external storage and such a set of instructions are what enables the processor s to carry out the operations intended by the information or execution instruction received by API unit .

In some instances logic unit may be configured to control the information flow among the units and direct the services provided by API unit input unit output unit host agent unit trust verifier unit and view filter unit in some example implementations described above. For example the flow of one or more processes or implementations may be controlled by logic unit alone or in conjunction with API unit .

The various units just described may in some exemplary embodiments be implemented on the same computing equipment or different computing equipment as the technical situation directs.

Although a few example implementations have been shown and described these example implementations are provided to convey the subject matter described herein to people who are familiar with this field. It should be understood that the subject matter described herein may be implemented in various forms without being limited to the described example implementations. The subject matter described herein can be practiced without those specifically defined or described matters or with other or different elements or matters not described. It will be appreciated by those familiar with this field that changes may be made in these example implementations without departing from the subject matter described herein as defined in the appended claims and their equivalents.

