---

title: Hardware management interface
abstract: A management controller of a computing device is identified on a network and queried for attributes of the computing device. The management controller is securely implemented in hardware of the computing device and is independent of a central processing unit (CPU) of the computing device. Data is received from the management controller that identifies one or more attributes of the computing device. A security policy of the network is implemented for the computing device based on the one or more attributes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09015793&OS=09015793&RS=09015793
owner: McAfee, Inc.
number: 09015793
owner_city: Santa Clara
owner_country: US
publication_date: 20121221
---
This disclosure relates in general to the field of computer management and more particularly to hardware based computer management.

Computer systems management within modern enterprises and networks can include the use of tools and techniques and tools for discovering attributes of the respective sub systems in the network. Security tasks and management can be performed for example by assigning and enforcing security policies against devices in the network. Policies can be assigned to particular devices based on known attributes of the devices for instance. Further gaining access to and or communicating with various devices in a network can include software based tools configured to enable communication of various data between different operating systems and devices. Further software based agents can be installed on various devices within a system to provide administrators with the ability to inspect control and perform tasks on the devices including security related tasks. Traditionally software based agents are installed through the operating system of the host device and the operating system is booted when the agent is active and able to communicate with management services utilizing and performing tasks through the agent. In such instances management of the host device can be considered dependent on the presence and operability of the host device s operating system and or the presence and operability and security of the installed agent.

Each of networks or domains can include a respective management system each management system including functionality for identifying a hardware based management controller of system devices interfacing with the network. A management system can additionally interface and communicate with the management controller of system devices e.g. to perform device management tasks for or on the system device utilizing the management controller . A management controller e.g. can be present on the motherboard or chipset of the system device and be embodied on a microcontroller or dedicated processor independent of the central processing unit CPU and any operating system of the system device in some implementations. A management system can thereby access at least some data and controls of the system device through the management controller and perform tasks and scans of the system device through a trusted hardware based controller .

In some instances a management system can provide an application programming interface API adapted to allow the management controller of the system device to interface with and receive and respond to instructions and requests of the management server . For instance a management system can provide system security related APIs with the management server performing security related tasks for a network through a management controller of the system device. Further a management controller e.g. of a system device can expose an API into the system device to a management system e.g. . Such APIs make use of hardware based communication channels between the hardware based management controller of a system device and the management system of the corresponding domain. Such communication channels can be secured communication channels secured via encryption for instance. Additionally an API can be based on authentication of the management controller with the management system and or the management system with the management controller. In some implementations authentication of the management controller can be based on a secure identifier of the system device derived out of private data of the hardware based management controller. For instance secure identifiers can be utilized according to principles described in U.S. patent application Ser. No. 13 726 140 now issued as U.S. Pat. No. 8 850 543 entitled Hardware Based Device Authentication U.S. patent application Ser. No. 13 726 148 entitled Hardware Based Device Authentication and or U.S. patent application Ser. No. 13 726 167 entitled Trusted Container which are each respectively incorporated by reference herein in their entirety.

In general servers clients computing devices network elements hosts system type system entities and systems including system devices in example computing environment e.g. etc. can include electronic computing devices operable to receive transmit process store or manage data and information associated with the computing environment . As used in this document the term computer processor processor device or processing device is intended to encompass any suitable processing device. For example elements shown as single devices within the computing environment may be implemented using a plurality of computing devices and processors such as server pools including multiple server computers. Further any all or some of the computing devices may be adapted to execute any operating system including Linux UNIX Microsoft Windows Apple OS Apple iOS Google Android Windows Server etc. as well as virtual machines adapted to virtualize execution of a particular operating system including customized and proprietary operating systems.

Further servers clients network elements systems and computing devices e.g. etc. can each include one or more processors computer readable memory and one or more interfaces among other features and hardware. Servers can include any suitable software component or module or computing device s capable of hosting and or serving software applications and services e.g. management systems services and applications of server etc. including distributed enterprise or cloud based software applications data and services. For instance in some implementations a management system server or other sub system of computing system can be a cloud implemented system configured to remotely host serve or otherwise manage data software services and applications interfacing coordinating with dependent on or used by other services and devices in system . In some instances a server system subsystem or computing device can be implemented as some combination of devices that can be hosted on a common computing system server server pool or cloud computing environment and share computing resources including shared memory processors and interfaces.

User endpoint or client computing devices e.g. etc. can include traditional and mobile computing devices including personal computers laptop computers tablet computers smartphones personal digital assistants feature phones handheld video game consoles desktop computers internet enabled televisions and other devices designed to interface with human users and capable of communicating with other devices over one or more networks e.g. . Computer assisted or smart appliances can include household and industrial devices and machines that include computer processors and are controlled monitored assisted supplemented or otherwise enhance the functionality of the devices by the computer processor other hardware and or one or more software programs executed by the computer processor. Computer assisted appliances can include a wide variety of computer assisted machines and products including refrigerators washing machines automobiles HVAC systems industrial machinery ovens security systems and so on.

Attributes of user computing devices computer assisted appliances servers and computing devices generally e.g. etc. can vary widely from device to device including the respective operating systems and collections of software programs loaded installed executed operated or otherwise accessible to each device. For instance computing devices can run execute have installed or otherwise include various sets of programs including various combinations of operating systems applications plug ins applets virtual machines machine images drivers executable files and other software based programs capable of being run executed or otherwise used by the respective devices.

Some system devices can further include at least one graphical display device and user interfaces supported by computer processors of the system devices that allow a user to view and interact with graphical user interfaces of applications and other programs provided in system including user interfaces and graphical representations of programs interacting with applications hosted within the system devices as well as graphical user interfaces associated with management systems etc. Moreover while system devices may be described in terms of being used by one user this disclosure contemplates that many users may use one computer or that one user may use multiple computers.

While is described as containing or being associated with a plurality of elements not all elements illustrated within computing environment of may be utilized in each alternative implementation of the present disclosure. Additionally one or more of the elements described in connection with the examples of may be located external to computing environment while in other instances certain elements may be included within or as a portion of one or more of the other described elements as well as other elements not described in the illustrated implementation. Further certain elements illustrated in may be combined with other components as well as used for alternative or additional purposes in addition to those purposes described herein.

Detecting identifying tracking and managing assets in computing systems has traditionally been a significant challenge facing system administrators particularly as it relates to security of the system. A single unknown poorly understood or poorly monitored device connected to a network can potentially expose the entire system to a variety of security threats and vulnerabilities including malware unauthorized data access rogue users etc. In some instances agents can be installed on system devices to assist administrators in obtaining a view of the attributes of the system device easily detect and communicate with the device on the network and enforce particular security policies on the system device. Unmanaged devices i.e. devices that do not possess an installed agent however may remain outside the communication control and monitoring of management systems designed to enable inter device communication and operation detect devices as they enter and leave the network apply policies to various devices and enforce security on the network. Indeed installing agents on some devices can be difficult with the provisioning of agents jeopardized by the very dearth of information concerning the unmanaged device. Further unmanaged devices in some instances rather than being able to integrate into a network and be a benefit to the user or the network at large may be sent to a quarantined or managed sub network until the unmanaged device can be more carefully inspected by administrators have an agent installed better understood etc. Additionally the universe of potentially unmanaged devices continues to increase as more and more devices become smart in that they are increasingly controlled by computing processors include network communication adapters and are able to communicate with other systems.

At least some of the systems described in the present disclosure such as the systems of can include functionality that in some cases overcomes the above discussed deficiencies as well as others not explicitly described herein. For instance management systems can be equipped with functionality for interfacing with hardware based management controllers on chipsets of system devices joining or already on a network or domain managed by the management system. The system devices management controller hardware interfaces can be leveraged by management systems to authenticate and or pair the management controller to the management system allow inspection by the management system of critical system elements of the system device establish secure communication between the management system and system device enable security provisioning on the system device attest state of the system device and perform metrics and monitoring of the system device among other functions. Further by communicating with the system device through the management controller of the system device a management system can speak directly to the device out of band or through channels otherwise outside the view influence access or control of the operating system of the system device and or system device CPU and independent of the presence of an agent on the system device.

Turning to the example of a simplified block diagram is shown illustrating an example system including management systems managing networks including respective system devices some of which having management controllers e.g. that can be leveraged by management systems in their management of networks e.g. and environments including the system devices e.g. etc. .

In some implementations a variety of different management systems can be provided that are able to interface and communicate with hardware implemented management controllers e.g. etc. of a variety of different system devices. In some instances management controllers can be embodied on a variety of different system devices and chipsets including chipsets of various manufacturers. Such chipsets can include system motherboards application specific integrated circuits ASIC field programmable gate arrays FPGA and in connection with other chipsets microprocessors and microcontrollers. In some instances management controllers can be implemented according to a particular standard or interface allowing any management system adapted to interface with the defined management controller standard to be compatible with and interface with system entities using the management controllers.

Turning to a simplified block diagram is shown of an example system device chipset of an example system device including an example hardware based management controller e.g. . As noted above a system device can include at least some computing processing hardware e.g. utilized to at least partially automate provide computer assisted control monitoring or other computer assisted functions in connection with the system device . In this particular example a system chipset can provide at least in part the computer assisted functions of a system device including allowing the system device to connect to and communicate with one or more networks e.g. through chipset . A system chipset in one particular example can include a central processing unit utilizing system memory to execute an operating system and one or more software programs in system memory . The system chipset can further include management microcontroller subsystem embodying a hardware implemented management controller separate from the central processing unit CPU . In the particular example of management microcontroller can be implemented for instance as an embedded microcontroller e.g. on a northbridge chip of chipset as a dedicated management controller chip etc. on hardware of system chipset .

An example management microcontroller in some implementations can run a lightweight microkernel operating system that provides a low power out of band management controller. Management microcontrollers can be functionally segregated from the CPU and its operations in a restricted trusted and secure environment. In some implementations management microcontroller can utilize memory separate from system memory such as a flash memory component of the management microcontroller from which the management controller instruction code can be loaded. Additionally secure memory can also be used to store authentication data secure identifiers of the system device and attribute information data of the system device and or chipset that can be accessed and used by the management controller. Such implementations can permit management microcontroller to be running and operational when the CPU operating system and or other hardware and software components of system device are powered down sleeping hibernating not loaded into system memory or otherwise not available. Indeed in some implementations power states of the management microcontroller can be independent of power states of other hardware including the CPU of the chipset .

Management microcontroller can further be configured to access networks while the operating system of the system device is unavailable. Accordingly management microcontroller can have direct access to network interfaces of the system device. In some implementations management microcontroller can run a fully independent out of band communication channel such as through a dedicated TCP IP stack allowing the microcontroller to inspect and receive packets not processed by the CPU as well as inspect inbound and or outbound traffic before the CPU has access to it. Effectively two logical network connections can be maintained on a single physical networking connector e.g. at one in band through the CPU and the other out of band through the management microcontroller . Network filters in network controller s can be utilized to programmatically redirect traffic to either a host operating system interface or the interface of the management controller at micromanagement controller for instance based on port numbers. An independent network communication channel can allow the management microcontroller and management controller implemented using the management microcontroller to perform a variety of communications and remote management functions that can take place effectively at all times without regard to the state of the operating system for example.

Management microcontroller can utilize its independent and or dedicated network communication channel s to communicate with outside systems including management system over network . Identification data can be maintained on management controller accessible memory e.g. and can be exchanged or used to derive secure identifiers exchanged with a management system e.g. to authenticate the management controller to the management system as well as or alternatively to authenticate the management system to the management controller e.g. through a comparison of a certificate received from the management system with a certificate maintained in identification data among other examples . Attribute data can also be maintained in management controller accessible memory e.g. . Such attribute data can be communicated to an authenticated management system e.g. in a secure session between the management controller and management system. The management controller can expose the attribute data to a management system for instance via an API provided between the management system and management controller providing a communication interface for messaging between the management microcontroller and the management system .

Management controller accessible memory e.g. can also be written to by the management microcontroller. In some implementations management controller accessible memory e.g. can be non volatile protected memory in that other hardware components of system device and the operating system of the system device cannot access the memory thereby ensuring the integrity and confidentiality of information stored on the memory . In some implementations modifications to management controller accessible memory e.g. resources e.g. can be limited to delete requests of identification data thereby allowing a user to clear identification data e.g. prior to selling or recycling the system device or in an effort to preserve the user s privacy . Further in addition to protected management controller accessible memory e.g. management microcontroller can in some implementations additionally access system memory itself allowing additional information concerning system device to be accessed and exposed through interfaces of the management controller. For instance the management microcontroller can be used to inspect other components of the system device to identify and collect attribute information of the system device including attributes discoverable in system memory e.g. applications on the system device historical activity on the system device device status network connections user profiles of the system device etc. . In other implementations management microcontroller can be provided with functionality and interfaces allowing the management microcontroller to write to or otherwise access system memory and perform such tasks as loading agents other programs and data onto the system device among other examples.

Returning to the examples of in some example implementations of a management system the management system can be tailored to provide security management and other services for a domain such as an enterprise network e.g. . For instance security management system can include a processor and memory elements as well as one or more hardware and software components including a controller manager agent manager asset manager and policy administrator engine among other potential components.

In some implementations a controller manager can include functionality for interfacing with hardware implemented manager controllers e.g. on system devices e.g. in the domain . For instance a controller manager can be used to interface with a management controller of laptop computer out of band to pair to the management controller . This can include mutual authentication between the management controller e.g. and management system . In some implementations certificates secured identifiers and other authentication data e.g. can be exchanged between the management system and management controller e.g. . In some instances certificates or other authentication data used in the pairing of management system and the management controller can be specific to the pairing i.e. in that the management controller uses and expects different authentication data in communications and transactions with other management systems e.g. thereby serving to assist in the preservation of privacy and security of the system device e.g. accessible at least in part through a management controller e.g. . For instance mutual authentication of a management system and management controller can be accomplished according to principles described in U.S. patent application Ser. No. 13 726 140 now issued as U.S. Pat. No. 8 850 543 entitled Hardware Based Device Authentication and or U.S. patent application Ser. No. 13 726 148 entitled Hardware Based Device Authentication incorporated by reference herein. By authenticating the management controller to the management system and vice versa in some instances the management system and management controller can pair and a secure communication channel or API can be established between them allowing the management system to query and request data of the management controller receive data from the management controller and send instructions to the management controller among other examples.

A controller manager can further interface with a management controller to obtain attribute information of at least a portion of the computing functionality of a system device such as through management controller of laptop computer . Such attribute information can include data stored in memory accessible to the management controller e.g. separate from system memory that identifies the make model and or manufacturer of the computing device as well as for instance the software e.g. operating system of the laptop computer its version etc. Attribute information can be used by the management system to better understand and manager the corresponding system device. For examples controller manager can identify one or more device drivers e.g. based on the attribute information that can be used by the management system to communicate with the laptop computer including in band through the central processor and operating system of the laptop computer . Further attribute information can include information usable by the management system in assessing security of the corresponding system device e.g. . In one example attribute information can include one or more device identifiers IDs of the system device security provisioning status of the device e.g. whether the device have an agent installed or otherwise operable on the device security history of the device since the last interrogation of the management controller by the management system the network gateways the system device has connected to over a particular time period the network status of the device e.g. whether it is on off currently live on a network etc. among other information and data the management controller can access or identify including when the system device is hibernating or powered off or has an inoperable operating system etc.

Pairing to a management controller as noted above can permit the management system to communicate with and receive data from the management controller. Device controller manager can utilize information obtained from the management controller e.g. to trigger additional actions by the management system relating to the security of the domain managed by the management system . For example management system can operate cooperatively with or manage a set of security tools deployed locally on the target system device and or remote from the system device within the domain such as for instance firewalls web gateways mail gateways host intrusion protection HIP tools network intrusion protection NIP tools anti malware tools data loss prevention DLP tools system vulnerability managers system policy compliance managers asset criticality tools intrusion detection systems IDS intrusion protection systems IPS and or a security information management SIM tools among other examples. Security policies can be defined governing how and what operations are to be employed by the security tools on the system devices. Nonetheless security enforcement is also possible locally on a target system device for instance through security tools running loaded or otherwise interfacing directly with the system device and providing management system in some instances with an interface for enforcing policy directly at the target device. For instance in some examples agents e.g. on the system devices can serve as a security enforcement tool for instance blocking particular activities locally at the device according to one or more security policies applied to the particular system device passing policy instructions to other security tools on the particular system device among other examples. Security policies can be applied to system devices based on the attributes of the system devices. Such attributes as noted above can be identified and collected using agents installed on the devices and or a hardware based management controller of the system device among other examples.

In some instances management system can determine whether and what type s of agents are installed on the system device e.g. of the management controller e.g. as well as determine whether and what type of agent could be installed on the corresponding system device e.g. to provide the management system with even more tools for scanning communicating with and enforcing security on the system device e.g. outside of the management controller . Indeed in some examples controller manager can provision a system device using management controller with an agent. In other examples attribute information and or device drivers e.g. obtained or identified for the system device based on information obtained from the management controller e.g. can be used to install an agent on the system device for instance through the operating system of the system device. In some cases an agent provisioned on a system device e.g. can be a dissolvable or otherwise temporary agent such as an agent that is temporarily provisioned while the system device e.g. is on the managed network e.g. and is torn down when the system device leaves the network .

As shown in the example of an example management system can further include an agent manager adapted to interface with agents of system devices on network . Agents e.g. including agents provisioned on system devices based on and or through a management controller of the respective system device can include software based agents that permit management system to inspect particular attributes configurations and activity of the corresponding system device. Such agents can make the detection of corresponding devices on the network monitoring of particular important device attributes and enforcement of particular security policies at the system device quite simple. In some instances a management system can supplement the interface provided through a software based agent e.g. to its host e.g. with interfaces provided through a hardware based management controller e.g. also on the system device to obtain pertinent security information and perform particular security tasks on the system device. Indeed a management controller can provide a form of failsafe against failure of a system device s operating system and thereby also any agents on the system device providing the management system with another view into the workings of the system device.

An example management system can further include an asset manager . A management system can catalogue the system devices detected as on or otherwise using the network together with known attributes of each respective system device. Such information relating to the set of system devices detected on the network can be recorded within an asset repository or other database data structure s etc. . Such an asset repository can be built supplemented and otherwise managed for instance by asset manager . Further the management system can utilize an asset repository to track the system devices within the network and automatically apply particular policies to particular detected system devices e.g. based on attributes of the system devices catalogued in the asset repository . Further attribute information of the various system devices obtained from interrogations of and communications with corresponding management controllers e.g. of the system devices can be stored and used in asset repository informing how policies are applied to and enforced against system devices in the network .

In some implementations a policy administrator engine can provide the functionality for assigning policies to particular system devices and enforcing the policies. Further in some implementations policy administrator engine can further include functionality for defining new policies modifying existing policies establishing rules and criteria for applying policies to particular system devices e.g. based on detected attributes of the devices and so on. A policy administrator engine can operate in cooperation with one or more various security tools deployed within the network and locally on the system devices themselves. For instance some security tools can be deployed remote from a system device allowing for policy enforcement to take place remote from and behalf of the target system device application or person thereby allowing security enforcement without the policy or enforcement being pushed to the target itself. This can be useful for instance in the security enforcement of mobile devices that move on and off of a monitored network as well as unmanaged devices such as devices not including agents or other local security tools capable enforcing important security policies.

Other management systems e.g. of other domains e.g. private network can include functionality focused on assisting management and interoperability of different devices within a computing environment. For instance device management system can include a processor and memory elements and one or more components embodying functionality of the management system including for example a controller manager association manager reference engine inter device communication engine and so on. A controller manager of management system can be adapted to interface with management controllers on network . The controller manager of management system can possess functionality similar to that in the above described controller manager of management system . This can be particularly so for instance when each of different management systems are adapted to each interface with and communicate with a common type or standard of controller managers included on various system devices in the respective networks . For instance controller manager can include functionality for detecting a system device through its controller manager and identifying whether the system device is on the network . Further controller manager can be used to authenticate and pair to management controllers e.g. etc. and establish a communication protocol and secure communication channels for messaging between the respective management controller and controller manager .

Further attribute information stored at the system device and accessible to a manager controller can be communicated to an authenticated management system using a controller manager of the management system . Such information can include information identifying the type of system device and computing equipment on the system device allowing the management system to either identify and or retrieve device drivers corresponding to the system device. Such information can further include a secure identifier of the system device derived in hardware of the device.

As an illustrative example attribute information can be sent to management system using a management controller of a particular smart television device on a private network such as a home network. The attribute information in this particular example can include the identification of the make model and manufacturer of the system device s computing equipment and or the system device itself. The attribute information can also include identification of firmware operating systems and other software used by the system device s computing equipment including version information. Using the attribute information management system e.g. using controller manager can identify source e.g. serving device drivers for the system device and or its computing equipment. For instance in one illustrative example controller manager can interface with a management controller of an in dash computing system of a car and obtain information such as the car s make model and manufacturer as well as in some cases the make model manufacturer and software version of the in dash computing system. A controller manager can similarly interface with management controllers e.g. of more traditional computing devices such as a personal laptop computer among other examples. In either case the controller manager can use information obtained from the management controller to query sources over the internet for instance to identify device drivers for download onto the management system for use by the management system in communicating with the system device e.g. as well as exposing available functions interoperability and features of the system device e.g. .

In addition to using attribute information of the system device obtained from the management controller of the system device to identify and obtain device drivers for the system device attribute information can be further used by the management system to identify additional information regarding the system device from third party sources. For example continuing with the example of an in vehicle computer in automobile the make model and manufacturer of the automobile and or the in vehicle computer can be determined through out of band communications with controller manager and used by management system to identify a source server e.g. hosting additional information about the automobile. For instance source server can include a server associated with the manufacturer of the automobile a vehicle history database automobile maintenance providers associated with the automobile etc. Through communication with source server management system can share at least a portion of the information obtained from management controller with the source server such as the make and model of the automobile vehicle identification number VIN of the automobile etc. and can obtain additional information from the source server relating to the particular automobile. Such additional information could include recall alerts from the manufacturer oil change records and status mileage information maintenance information and other information. Information obtained by the management system can be used for instance to generate and push alerts and other messages concerning the automobile to a user e.g. through another system device such as smart phone or tailor other tasks and communications of management system to the particular attributes of the automobile. Appropriate sources and types of supplemental data can similarly be identified and used by the management system based on attribute information obtained from any of the compatible management controllers e.g. of other devices e.g. in the domain among other examples.

In some examples a system manager can include functionality for associating two different system devices on a network that otherwise are not adapted to communicate or pair with the other. As noted above in some examples management system can identify information relating to one system device in a private network and communicate the information to another system device for use by the other system device. Associations e.g. can be generated for instance using association manager of management system identifying or defining a relationship between two or more system devices in a private network . Such associations can be defined based on a user request to associate two or more of the user s system devices received by the management system from the user via one or more user interfaces of the management system for example. In other instances management system can automatically identify and in some cases define an association between two or more system devices . For instance management system can identify categories of different system devices that have been identified as having some utility in associating with other categories of system devices. For instance an interoperation involving a smart household appliance and a smart TV or other display device can be defined allowing in one example messages to be communicated to a user of the display concerning the status of an appliance e.g. laundry is done no ice cream is in the refrigerator air conditioner is on etc. while the user is observing or otherwise using the display device. A variety of other relationship types and interoperations can be defined and made available to association manager to identify that two different system devices in network are of categories that lend themselves to a pairing according to the pre defined relationship or interoperation among other examples.

An association defined by association manager between two different system devices can cause at least one of the associated system devices to be subscribed to messages relating to the other device in the association. Using controller manager information can be obtained from the respective management controller of each system device in network and further information can be obtained by management system using device drivers obtained for the devices e.g. based on information obtained through management controllers . For instance management system can query each system device in band or out of band or both to interrogate a system device for attribute information for use in identifying and establishing relationships between devices. In other instances system devices can be configured to push alerts attribute changes and other information to management system . A device manager of management system can manage information drivers communication protocols state and detection of system devices on the network .

Device manager can further be responsible for using information obtained from the system devices for instance to query outside sources e.g. for additional system device information or information providing context for messages received by a system device e.g. to determine the definition of a particular error code specification value or other system device attribute . Where an association pairing or subscription between two system devices has been defined management system e.g. using inter device communication engine can identify attribute information regarding a first system device in an association identify types of information subscribed to or useable by a second system device in the association identify capabilities of the device from the information and convert the information to a form usable by the second system device for instance in accordance with a device driver obtained for the second system device e.g. based on an inspection of the second system device through a management controller of the second device . In some instances messaging between associated system devices can be through a uniform messaging format established by the management system and negotiated between the management system and each system device in the network among other examples.

In some instances messages communicated to a first system device from a management system based on data obtained from a second system device can be acted upon by the first system device resulting in the first device inter operating through the management system with the second device. As but one example an in dash computer of an automobile can track various attributes of the automobile including whether the vehicle is locked its fuel level its oil levels its temperature GPS data and other features and diagnostics. The API of the management system can be provisioned on the management controller of the in dash computer drivers of the in dash computer can be obtained by the management system and a pairing and communication between the management system and in dash computer of automobile can be established. Management system can thereby query the in dash computer for particular attribute information of the automobile . Further a similar pairing and communication channel e.g. through a management system API drivers etc. can be established between management system and smart TV . While the in dash computer of automobile may not support direct communication or interoperability with smart TV and vice versa the ability of each of smart TV and in dash computer of automobile to interface and communicate with management system can permit management system to format and push data from one associated device to another for use by the other device. For instance on screen notification display functionality of the smart TV exposed through a device driver of the smart TV obtained by the management system can be used by the management system to develop messages usable by the smart TV for display as on screen notifications including messages developed from attribute information obtained by the management system for automobile . In some implementations the message derived from automobile can be presented as notification on smart TV through communications received through management system allowing a user while they watch a program on smart TV to see notifications relating to the automobile such as notifications indicating that the GPS location of the automobile whether the automobile has been left unlocked has windows open is low on gas among other attributes. It should be appreciated that this example of an association between a smart TV and an automobile i.e. it s internal computing system is but one of a potentially limitless variety of examples that could be achieved through a management system leveraging hardware implemented management controllers of a variety of in some cases very different devices to obtain insights into the functionality and communication protocols and languages of the devices and facilitate some degree of interoperability between them.

In addition to facilitating communication and interoperability between different devices within a private network managed by the management system management system can also facilitate e.g. using inter device communication engine interoperability between a system device and an external server device application service or other resource remote external to the network for instance over the internet or another network. As noted above data obtained from a system device by a management system e.g. through a management controller of the system device can be communicated at least in part to an outside source server for use in providing additional information for the device. Such information can also be communicated by the management system in connection with the performance of various services on behalf of the system device at a remote server. Additionally results returned by the source server can be communicated to the system device over the management system for use by the system device among other examples.

While the examples of present two distinct management systems managing two distinct networks it should be appreciated that in some implementations features described in connection with a consumer focused device management centric management system e.g. could be implemented on top of or in addition to enterprise focused system security centric functionality of management system and vice versa . Indeed a variety of different management systems can be developed. Such management systems can include all or a portion of the features described in connection with management system while being adapted to interface with and communicate with management controllers of various system devices to perform particular management tasks. Further as noted above a single system device with an embedded management controller can migrate between owners networks and domains and accordingly migrate between management by and communication with multiple different management systems such as a home management system and an office management system among many other examples.

Turning to the examples of simplified block diagrams are shown illustrating example operations including an example management system e.g. interfacing with management controllers e.g. of system devices e.g. in a network e.g. . In this particular example a plurality of managed system devices are provided on a network each system device having one or more respective agents installed on the system device. A security management system can include functionality for detecting the presence of system devices on the network retrieving system device attribute data from the system devices identifying activity of the system devices on the network provisioning system security policies on the system devices and enforcing assigned policies through the respective agents of the system devices .

An unknown device can enter the network and be detected by management system . In this example management system can attempt to communicate with a management controller on the unknown device and determine based on the result of the attempt whether the unknown device includes a management controller. The management system can also attempt to communicate or otherwise identify an agent on the unknown device. In some implementations upon identifying that the unknown device includes an agent the management system can skip the attempt to identify and communicate with a management controller instead engaging the unknown device through the agent. Further failure to identify an agent on a device can prompt an attempt to communicate with a hardware based management controller of the device.

In the particular example of the unknown device is determined by the management system not to possess an agent and is further identified to have a management controller the management system is adapted to interface with. Accordingly management system can attempt to authenticate to the management controller of the unknown device and pair to the management controller for instance based on establishing that the management system is a trusted entity and that the management controller is in fact a secure hardware based management controller. For instance the management system can send a certificate to the management controller issued by a mutually trusted certificate authority and the management controller can verify that the management system is a valid holder of the certificate. The pairing of the management system and management controller can further include establishing a secure interface or communication channel e.g. through an API of the management system and attribute data accessible through management controller can be exposed or sent to management system . Such attribute data can identify a unique device identifier of the unknown device identify network gateways the devices has connected to in a recent period of time identify applications and hardware of the device identify other agents security tools countermeasures etc. deployed on the device among other potential device attributes.

Using attributes obtained from the unknown device the security management system can determine the identity of the unknown device and authenticate e.g. the device . The identity and attributes received from the management controller can be regarded by the management system as being of higher quality trustworthiness or security than other data otherwise received from the device in some instances. Further in some examples the management system can identify attributes of the device sufficient to identify additional information concerning the device from one or more sources e.g. . Such attributes can include the manufacturer and model of the device a serial number of the device services provided through the device among other examples. In some instances the management system can identify a remote source associated with the device from the attributes communicated in security posture data . The management system can utilize this additional information from source to better inform its interaction with the device as well as enhance services provided to the device and or its user . Additionally in still other examples a driver of the unknown device can be identified from the attribute information such as by querying an identified source . The management system can identify that it already possesses the driver of the unknown device as well as download the driver from the source or another source for instance over a wide area network such as the internet . The management system can utilize the driver to better communicate with and perform actions involving the unknown device as well as coordinate operation of the device within the enterprise network domain .

Turning to upon authenticating the unknown device a security API can be provided allowing for the management system to interface with the device to perform one or more security related tasks on the device apply enterprise security and compliance policies on the device among other tasks based on the attributes identified for the device . In one example illustrated in it can be discovered e.g. through communication with the management controller or pinging the device that the device is unmanaged in that it does not have an agent compatible with the management system and or other security tools scanners etc. of the corresponding enterprise domain . Accordingly the management system can provision an agent onto the device through the management controller . In some implementations the provisioned agent can be a persistent agent that is present on the device each time the device enters the enterprise domain at least until the agent is removed by the user or other facility of the device . In other examples a dissolvable agent can be loaded onto the device through the management controller for use by the management system during a current session with the device . At the conclusion of the session or some other period of time the agent can be automatically deactivated deconstructed and or deleted.

Turning now to having established communication with a management controller and or provisioned device with an agent e.g. the management system can enforce one or more security policies through the management controller . Additionally based on the attributes of the device as communicated to the management system via the management controller the management system can determine which security policies of the enterprise are relevant to the device and additionally employ security tools network elements and other elements of the enterprise domain to enforce such policies. As an example a data access policy can exist within the enterprise domain governing the access rights and use of data assets stored on one or more servers e.g. within the domain. In the example of from information obtained from the management controller and or agent attributes of the device can be identified that are relevant to this example data access policy. Accordingly the management system can enforce the policy e.g. by way of routers data access controls etc. in the enterprise domain on the device in accordance with the reported device attributes. For example the management system can cause an access attempt to be blocked based on the policy among many other potential examples.

For instance in another example illustrated in in addition to enforcing policies involving a device s direct interactions with assets of the enterprise domain e.g. data assets of system asset the management system can additionally enforce policies defining the ability of assets to utilize networks of the domain as well as access resources outside the domain over the network . For instance an internet connection of the enterprise network can be exploited by a system device to introduce threats and vulnerabilities to the enterprise domain from web based sources. For instance sensitive data can be leaked or otherwise communicated sharing data private to the domain with sources e.g. outside the domain. Additionally resources served by outside sources e.g. can also threaten a domain such as viruses worms malware spyware and other exploits introduced to the domain.

In the example of device can attempt to access an online resource hosted by a particular server over the internet while connected to the enterprise network . As in the example of the management system can discover policies applicable to the device from attribute information received from the device s management controller and or agent and apply the policies to the device using security tools such as internet gateways firewalls and other tools. Additionally in some implementations the management system can interface with the management controller to enforce such policies on the device . In one example a policy applying to attempts to access the resource of server using a device with attributes shared by device can result in the attempt being blocked at least while the device is still on the enterprise network managed by management system . When the device leaves the enterprise network however in some instances the device may be permitted to access the resources of server such as when the device uses a private home network to connect to the internet as shown in the example of . In alternative implementations the management controller can allow for some of the policies of the enterprise domain to persist on the device even after the device leaves the enterprise domain among other examples.

Turning to the examples of simplified block diagrams are shown illustrating additional example operations including an example management controller of a system device. Indeed in the example of a private home network can include a security management system capable of communicating over the network with one or more smart devices including personal computing devices e.g. smart televisions e.g. in vehicle computing devices e.g. an in vehicle infotainment IVI system among potentially many other examples. Devices e.g. in the home network can include chipsets equipped hardware based management controllers e.g. capable of connected to and communicating with the management system .

In one example illustrated in an unknown device can attempt to interface with the private network and be identified by the management system . The management system can attempt to identify whether the device includes a management controller or other facilities allowing coordination between the management system and the device . In this particular example the management system requests a secure hardware based connection with the device through a management controller . The management system and management controller can establish a secure communication channel and mutually authenticate . In the case of the management controller a hardware based secure identifier of the management controller can be shared with the management system to authenticate the device and management controller at the management system . Further the management controller can supply trustworthy attribute data to the management system identifying at least some attributes of the system device to assist the management system in understanding what type of device has entered the network . Attribute data can also include a unique secure identifier of the system device and the management system can identify from the secure identifier that the system device is a known device and can further associate previously generated or obtained profile data with the system device based on the transmission of the trustworthy secure identifier of the system device .

In one example shown in the management system can identify information from the attribute data or profile data maintained for the device such as a model number manufacturer name or other information and identify one or more sources including remote source servers e.g. of additional information relating to the device . In one example the management system can determine that it lacks a device driver for the device and identify for instance through a search or other query of internet resources a source of a driver for the device based on the attributes of the device . Accordingly the management system can communicate with the source of the driver e.g. over the Internet to obtain the driver for the device . The driver can then be used by the management system to better communicate with the device as well as facilitate translate and enable communications between different devices on the private network that would otherwise be unable to communicate and cooperatively operate with the other.

In addition to drivers the management system can also identify sources of other information relating to the device based on attributes of the device and communicate with the source e.g. to obtain additional information for the device . The management system can use this information to supplement other information obtained for the device such as the information obtained in attribute data or profile data maintained by the management system for the device . In the example of the management system can identify the previously unknown device as a smart appliance such as a refrigerator located within range of the home network and possessing a computing module that includes a management controller . In one particular example the management system can obtain a driver for use in communicating a certain set of instructions to the smart appliance . Additionally the management system can identify a server e.g. associated with a manufacturer retailer etc. of the smart appliance . The management system can communicate with the source to obtain additional information concerning the smart appliance model such as security features warranty information maintenance information error codes and additional specification and configuration information of the appliance from the identified source . The management system can further apply this information in its interactions with the appliance .

Further the management system can in some instances also perform or assist in transactions using information gleaned from the outside source . For instance a management system can assist in a maintenance ticket warranty audit or claim product recall software or hardware update etc. by communicating attribute information collected or otherwise known to the management controller of the appliance and shared e.g. with the management system . Additionally the management system can also communicate e.g. information obtained from the source with the appliance such as information usable by the appliance in improving its functionality. Through the coordination of a source management system and management controller the management system can utilize a secure and trusted connection with the management controller to assist in providing services and performing tasks involving the appliance including but not limited to remote diagnostics performance monitoring e.g. identifying users tendencies using the device energy performance of the device typical load placed on the device etc. remote maintenance and other features. Indeed still other services can be imagined and enabled utilizing data from third parties such as in the example of a smart refrigerator an online shopping service refrigerator maintenance provider or other service that can utilize information obtainable from the device e.g. or deliverable to the device through a management controller e.g. in connection with a secure session with a management system among other examples.

Turning now to a management system can additionally serve as a facilitator or enabler of communication and interoperation of two or more system devices in a domain including devices otherwise not designed enabled or configurable for intercommunication and interoperation. As an example as shown in the a set of commands and capabilities of a particular system device e.g. an in vehicle computing system can be identified by a management system based on information received from the device s management controller as well as other sources e.g. sources including a driver obtained for the device by the management system . Similarly the management system can also obtain attribute information of other devices in the domain such as the commands operations features functionality etc. of a smart appliance .

In but one illustrative example an example management system can coordinate operation of the in vehicle computer and the smart appliance or potentially between any combination of two or more different devices in the domain having management controllers . For instance an interoperation can be identified or defined. For instance a pre defined interoperation can be identified for instance in memory of the management system or an outside server cataloguing potential interoperations and relationships between various device combinations. In other instances a user can define an interoperation between two devices e.g. using an interface presenting identified capabilities and functions of the two or more devices and allowing the user to define a dependency between the respective operations among other examples . As an illustrative example an interoperation can be defined that triggers an alert at the in vehicle computer when a lack of capacity is determined in the smart refrigerator using for instance the management controller e.g. data obtained from a scale or other functionality included in the refrigerator identifying when a particular refrigerator compartment e.g. a milk holder butter holder etc. is running low or empty . A management controller in a secure session with the management system can communicate that a low capacity condition has been identified in the refrigerator through a hardware based API between the management controller and management system . By itself the refrigerator may lack the capability to communicate such a condition to other devices much less the particular in vehicle computer . However in this example the management system in another secure session between the management system and in vehicle computer can translate e.g. based on a driver of the in vehicle computer the message received by the management controller of the refrigerator into a command that comports with the communication capabilities protocols available routines and available functions of the in vehicle computer . For instance the management system can send a translated message to the in vehicle computer . The message can be interpretable by the in vehicle computer to cause the in vehicle computer to render an alert or instruction for instance on a display of the in vehicle computer . For example the display can indicate to a user the condition of the refrigerator to the user as the user starts up the car assisting the user in understanding that a trip to the grocery store might be desirable to address the findings at the smart refrigerator .

Turning to communication between different and otherwise incompatible or less compatible devices in a domain e.g. can be uni or bi directional in that devices can communicate back and forth utilizing the management system as an interpreter and coordinator for the interoperation. For instance in an in vehicle computer can send a message to the management system in connection with an interoperation involving the in vehicle computer and refrigerator handled by the management system . The management system can identify a corresponding message type for the interoperation and generate a message of this type e.g. based on a driver obtained for the refrigerator computer based on the content of the message received from another device in the interoperation. The refrigerator can then receive the message and process the message to perform a function or task performable by the refrigerator . As but one of potentially countless examples a query message e.g. can be sent from the in vehicle computer requesting information relating to attributes of the refrigerator e.g. refrigerator capacity water filter status light bulb status etc. for instance in response to a request from a user at the in vehicle computer relating to a user s shopping trip using the vehicle. The example query can be translated into a format and routine compatible with the refrigerator which the refrigerator computer can process and respond to e.g. according to principles of the example of .

It should be appreciated particularly as the selection of computer enhanced devices and appliances expand that a potentially limitless combination of interoperations can be enabled between two or more devices within a domain through management controllers of the devices and a management system e.g. of the domain. Further while various combinations of devices have been referenced in some of the above examples it should be appreciated that these are but non limiting examples presented merely for the sake of illustrating certain principles and that any device having a compatible management controller e.g. can be potentially utilized in interoperations with another device managed through a management system of a domain. Additionally while some interactions between a management system and hardware based management controllers e.g. can take place over a local area network such as a private home WiFi network in other instances a tunnel or other secure channel can be established between a management system and a management controller over one or more other networks including cellular broadband data networks and other networks such as wide area networks further enhancing the array of interoperations that can be defined and enabled between devices.

Other interoperations can include the enhancement of existing interoperations between devices. For instance hardware based sessions between management controllers e.g. and the management system can be utilized to supplement or replace other functionality of the devices that already allow at least a portion of such interoperation. Through the utilization of a central management system and secure hardware based communications authentication and data gathering the security of existing or alternative inter device operations can be enhanced. Further the management system can serve as a gateway for inter device communications and operations assisting in protecting against vulnerabilities threats and other security issues being introduced through a web of different inter device communication channels types networks etc. used in the various different inter device operations among other advantages.

Turning to in addition to facilitating interoperation between devices e.g. within a domain managed by the management system the management system can in some implementations also facilitate transactions between a system device having a management controller and devices and systems outside the domain. For instance the management system can serve as a gateway or proxy for communications with devices and systems outside the domain including web based systems e.g. . For example as shown in rather than communicating directly over a broadband WiFi or other internet connection a system device e.g. can communicate with a web server via the management system . The management system for instance can receive messages from the system device and interpret the messages for instance according to information obtained from the system device management controller or another source such as a source of a driver for the device . The management system in some examples may translate the messages originating from the device e.g. into a format and protocol compatible with communications with the web server over the Internet e.g. according to protocols of the Internet Protocol suite etc. . In other instances the management system can receive messages already at least partially formatted for delivery over the Internet to the web server . However the management system can provide domain security through firewall intrusion prevention malware detection gateway security and other services to packets constructed from or originating as messages received over secure sessions with management controllers e.g. of the devices e.g. . Indeed the management system can serve as a proxy for communications with any device in the domain thereby insulating and providing additional security for the devices. Accordingly the management system can also receive messages from an outside web server process the messages e.g. perform security scans etc. and in some cases translate the messages to comply with the functionality protocols and routines of the system device e.g. as determined from attribute data from the system device . Such processed messages can then be forwarded to the system device e.g. within the domain among other examples.

Turning to the example of a hardware based management controller of a device can be identified and the management controller can be queried for attribute data describing attributes of the device. Attribute data can be received in response to the query and can be used to identify a device driver of the device. In some instances identifying the device driver can include identifying the device driver in memory of a management system of the domain while in other instances the device driver can be identified as being hosted by a remote source prompting acquisition of the driver from the remote source. The device driver can then be used to communicate with the device. The device can be communicated with through the device driver and or the management controller. Further the driver can be leveraged to define or identify pre defined interoperations that can be facilitated between the device and at least one other device. Such interoperations can include interoperations between devices that are otherwise incompatible. For instance a management system can translate messages received from a first device according to a device driver of a second device to generate a message for the second device that is actionable by the second device and responsive to the message received from the potentially otherwise incompatible first device among other examples.

Although this disclosure has been described in terms of certain implementations and generally associated methods alterations and permutations of these implementations and methods will be apparent to those skilled in the art. For example the actions described herein can be performed in a different order than as described and still achieve the desirable results. As one example the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve the desired results. Systems and tools illustrated can similarly adopt alternate architectures components and modules to achieve similar results and functionality. For instance in certain implementations multitasking parallel processing and cloud based solutions may be advantageous. Other systems and tools can also make use of principles of this disclosure. Additionally diverse user interface layouts and functionality can be supported. Other variations are within the scope of the following claims.

Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs i.e. one or more modules of computer program instructions encoded on computer storage medium for execution by or to control the operation of data processing apparatus. Alternatively or in addition the program instructions can be encoded on an artificially generated propagated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium can be or be included in a computer readable storage device a computer readable storage substrate a random or serial access memory array or device or a combination of one or more of them. Moreover while a computer storage medium is not a propagated signal per se a computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium can also be or be included in one or more separate physical components or media e.g. multiple CDs disks or other storage devices including a distributed software environment or cloud computing environment.

While this specification contains many specific implementation details these should not be construed as limitations on the scope of any inventions or of what may be claimed but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

In general subject matter of the present disclosure includes methods software computer executable instructions and systems capable of performing such tasks as identifying a first management controller of a first computing device on a network querying the first management controller for attributes of the first computing device and receiving from the first management controller data identifying one or more attributes of the first computing device. The first management controller can be implemented in hardware of the first computing device and can be independent of a central processing unit CPU of the first computing device. A security policy of the network can be implemented for the first computing device based on the one or more attributes.

In one example a system can be implemented to include at least one processor device at least one memory element and a management system adapted when executed by the at least one processor device to identify the first management controller of the first computing device on a network query the first management controller for attributes of the first computing device and implement a security policy of the network on the first computing device based on the one or more attributes received from the first management controller.

In some instances implementing the security policy can cause access to at least some resources of a domain by the first computing device to be limited according to the security policy. The security policy can be a policy of an enterprise computing system. A first device driver can be identified for the first computing device the security policy implemented through communication with the first computing device using the first device driver. In some examples attributes of the first computing device can include such examples as a model identifier a manufacturer of the first computing device hardware attributes of the first computing device and or software attributes of the first computing device.

In some instances an agent can be caused to be installed on the first computing device. For example the agent can be installed through the first management controller. The agent can be installed on an operating system of the first computing device. The security policy can be implemented using the installed agent and data describing additional attributes of the first computing device can be obtained using the agent. In some cases the agent can be a dissolvable agent. In some cases communication with the first management controller can reveal whether an agent is installed on the first computing device.

In some instances a first device driver can be identified for the first computing device. The security policy can be implemented through communication with the first computing device using the first device driver. One or more capabilities of the first computing device can be discovered based on the first device driver. Further the first computing device can be authenticated based on an identifier derived from secure data embedded in hardware of the first computing device. The identifier can be unique to a pairing of the first computing device and a particular domain. The secure data can be stored in secure memory of the first management controller. Additionally authentication data can be sent to the first management controller to mutually authenticate at the first management controller.

In some instances in addition to communications with a first management controller of a first computing device a second management controller of a second computing device can be identified on the network the second management controller implemented in hardware of the second computing device and independent of a CPU of the second computing device. The second management controller can be queried for attributes of the second computing device and receive from the second management controller data identifying one or more attributes of the second computing device. Additionally another security policy of the network can be implemented on the second computing device based on the one or more attributes of the second computing device. The attributes of the first computing device may be different from the attributes of the second computing device and the security policy applied to the first computing device can be different from the security policy applied to the second computing device. For instance the first computing device may be of different type than the second computing device among potentially many other examples as well as combinations of the foregoing.

Thus particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results.

