---

title: Redundant pixel mitigation
abstract: Among other things, one or more techniques and/or systems are provided for mitigating redundant pixel texture contribution for texturing a geometry. That is, the geometry may represent a multidimensional surface of a scene, such as a city. The geometry may be textured using one or more texture images (e.g., an image comprising color values and/or depth values) depicting the scene from various view directions (e.g., a top-down view, an oblique view, etc.). Because more than one texture image may contribute to texturing a pixel of the geometry (e.g., due to overlapping views of the scene), redundant pixel texture contribution may arise. Accordingly, a redundant textured pixel within a texture image may be knocked out (e.g., in-painted) from the texture image to generate a modified texture image that may be relatively efficient to store and/or stream to a client due to enhanced compression of the modified texture image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09214138&OS=09214138&RS=09214138
owner: Microsoft Technology Licensing, LLC
number: 09214138
owner_city: Redmond
owner_country: US
publication_date: 20121228
---
Many users may interact with image data such as a multidimensional image generated by a rendering technique. In an example geometry such as a digital surface model may represent a three dimensional surface of a scene e.g. a scene depicting a city . Initially the geometry may comprise one or more non textured pixels e.g. a pixel with a depth value but not a color value . Accordingly one or more texture images may be used to texture the geometry to create textured geometry e.g. color values may be assigned to pixels within the geometry based upon one or more texture images . In this way the scene may be rendered based upon the textured geometry.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description. This summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Among other things one or more systems and or techniques for mitigating redundant pixel contribution for texturing a geometry are provided herein. That is a geometry may comprise a multi dimensional representation of a scene. It may be appreciated that the scene may illustrate a person a city a location a business a house a digitally rendered video game character grass water etc. Initially pixels within the geometry may comprise depth values but may not comprise texture values such as color values. Accordingly the geometry may be textured using one or more texture images that depict the scene from various view directions. It may be appreciated that more than one texture image may contribute a texture value for a pixel within the geometry e.g. a first photo of a highway from a northern viewpoint may depict a portion of a construction barrel and a second photo of the highway from a northeastern viewpoint may depict that same portion of the construction barrel . In this way redundant pixel texture contribution may occur which may result in inefficient data storage and or inefficient bandwidth utilization during streaming due to using redundant data for texturing e.g. an image based service such as a mapping service may stream multiple texture images to a client map application for use in texturing a geometry which may result in transmission of redundant texture information .

As provided herein redundant pixel texture contribution for texturing a geometry may be mitigated. In an example a geometry may represent a three dimensional surface of a scene such as a scene depicting a city. A first texture image depicting the scene from a first view direction e.g. a top down view of the city a second texture image depicting the scene from a second view direction e.g. an oblique view of the city and or other texture images may be used to texture e.g. assign color values to pixels within the geometry. For example the first texture image may be applied to the geometry to identify a first pixel texture contribution by the first texture image to the geometry e.g. an identification of pixels within the geometry that are textured by the first texture image . The first pixel texture contribution may identify a textured geometry pixel within the geometry that is textured by the first texture image. In this way texture contribution for the geometry by the first texture image may be identified e.g. an identification of pixels within the geometry that can be assigned texture values by the first texture image .

The second texture image may provide redundant pixel texture contribution for one or more pixels of the geometry that are already textured by the first texture image. For example the second texture image may provide a redundant textured pixel that textures a pixel within the geometry that is already textured by the first texture image. Because the textured geometry pixel is already textured by the first texture image the redundant textured pixel may be knocked out from the second texture image to generate a modified second texture image. For example the redundant textured pixel may be in painted e.g. assigned a color that may be efficient for compression such as a color that blends the redundant textured pixel with other pixels . In this way the modified second texture image may be efficiently compressed to mitigate storage resources and or bandwidth used to store and or stream the modified second texture image e.g. compressed to a client for texturing of the geometry by the client.

It is to be appreciated that in an example a pixel as used herein may comprise one or more pixels and is not limited to a single pixel. In an example a pixel may comprise an arbitrarily sized superpixel. For example the superpixel may correspond to an 8 8 block of pixels e.g. a jpg block of pixels used during compression . In this way a redundant superpixel may be knocked out from a texture image which may improve compression e.g. knocking out the 8 8 block of pixels as opposed to merely a single pixel e.g. where knocking out multiple pixels may further promote compression .

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are generally used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide an understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are illustrated in block diagram form in order to facilitate describing the claimed subject matter.

An embodiment of mitigating redundant pixel texture contribution for texturing a geometry is illustrated by an exemplary method of . In an example the geometry may represent a three dimensional surface of a scene e.g. a scene depicting a portion of a city . The geometry may comprise one or more pixels having depth values e.g. at times referred to as 3D points . The geometry may be textured using one or more texture images. For example an RGB texture image may comprise one or more pixels having color values and or depths values e.g. at times referred to as locations . A 3D point of the geometry may be projected to a location within the RGB texture image during texturing based upon the 3D point and the location having similar depth values. A color value at the location may be assigned to the pixel of the geometry thus texturing the pixel to generate a textured geometry pixel. It may be appreciated that the geometry may be textured using more than one texture image which may result in redundant pixel texture contribution e.g. a first location within a first texture image and a second location within a second texture image may both provide color values for a pixel within the geometry such that texture imagery may not be efficiently stored and or streamed to a client due to redundant data.

Accordingly a first texture image may be applied to the geometry to identify a first pixel texture contribution by the first texture image to the geometry at . The first texture image may depict the scene represented by the geometry according to a first view direction e.g. the first texture image may comprise a NADIR image and the first view direction may comprise a plumb line view direction of the scene such as a top down view of the city . The first pixel texture contribution may identify a textured geometry pixel within the geometry that is textured by the first texture image. In an example a first 3D point associated with a first pixel of the geometry may be projected to a first location within the first texture image. First texture information associated with the first location e.g. a color value of the first location may be identified as contributing to the first pixel. Responsive to a depth of the first pixel corresponding to a depth of the first location the first texture information may be included within the first pixel textured contribution e.g. the color value and or an indication that the first location contributed to texturing of the first pixel . In this way the first pixel texture contribution may identify that the first pixel was textured e.g. thus generating the textured geometry pixel by the first texture imagery e.g. the first pixel was textured by a color value associated with the first location .

At a redundant textured pixel provided by a second texture image for the geometry may be identified based upon the redundant textured pixel corresponding to the textured geometry pixel e.g. the first pixel within the geometry that was already textured by the first texture imagery . The second texture image may depict the scene represented by the geometry according to a second view direction e.g. the second texture image may depict the city from a substantially oblique view direction . In an example the first 3D point associated with the first pixel of the geometry may be projected to a second location within the second texture image. Second texture information associated with the second location e.g. a color value of the second location may be identified as contributing to the first pixel. Responsive to the depth of the first pixel corresponding to a depth of the second location the second texture information may be included within a second pixel texture contribution e.g. the color value and or an indication that the second location contributed to texturing of the first pixel . In this way the second pixel texture contribution may identify that the first pixel was textured e.g. the textured geometry pixel by the second texture image e.g. the first pixel was textured by a color value associated with the second location . In an example of determining the redundant textured pixel the first pixel texture contribution and the second pixel texture contribution may be evaluated to determine that the first texture image and the second texture image both contributed to texturing the first pixel thus creating a redundant pixel texture contribution. That is the redundant textured pixel may be identified as the second location within the second texture image because the second location contributed to the first pixel of the geometry that was already contributed to by the first location within the first texture image.

At the redundant textured pixel e.g. the second location may be knocked out from the second texture image to generate a modified second texture image. It may be appreciated that a variety of image modification techniques may be used to knock out the redundant textured pixel. In an example the redundant textured pixel may be in painted which may assign a color value to the redundant textured pixel that may result in efficient compression of the redundant textured pixel. In another example an occlusion metric e.g. whether the first pixel is occluded within the first and or second texture image a viewing direction metric e.g. whether a viewing direction of the scene by the first texture image or second texture image is more desirable a surface normal metric e.g. whether the first texture image and or the second texture image depict a surface of the scene from a perpendicular view and or a variety of other image modification techniques and or metrics may be used to generate the modified second texture image. In this way one or more redundant textured pixels may be knocked out from the second texture image to generate the modified second texture image which may be efficiently compressed for storage and or streaming to a client.

In an example the modified second texture image may be compressed to generate a compressed second texture image. The first texture image the compressed second texture image e.g. or the modified second texture image in an uncompressed format and or the geometry may be streamed to a client for texturing of the geometry by the client during rendering of the scene represented by the geometry. For example an image based service may pre process the second texture image to generate the modified second texture image which may be optionally stored as the compressed second texture image. In this way the image based service may stream the texture imagery and or the geometry to a client such as a client mapping application that may texture the geometry using the texture imagery.

In an example multiple texture images such as a third texture image depicting the scene from a third view direction may be used to texture the geometry. Accordingly redundant pixel texture contribution by the third texture image and or other texture images may be mitigated. For example a second redundant textured pixel provided by the third texture image for the geometry may be identified based upon the second redundant textured pixel corresponding to one or more textured geometry pixels within the first pixel texture contribution e.g. and or within a second pixel textured contribution . In this way the second redundant textured pixel may be knocked out from the third texture image to generate a modified third texture image. In an example redundant textured pixel contribution may be blended during texturing e.g. as opposed to being knocked out . For example a pixel texture contribution overlap may be identified between the modified second texture image and the modified third texture image e.g. the modified second and third texture images may depict a side of a building from slightly different oblique view directions . In this way the modified second texture image and the modified third texture image may be streamed to a client for blended texturing of at least a portion of the geometry by the client based upon the pixel texture contribution overlap. For example the side of the building may be textured based upon a blend e.g. a temporal blending technique a view blending technique etc. of pixel textured contribution by the modified second texture image and the modified third texture image. At the method ends.

The redundancy detection component may be configured to detect one or more redundant textured pixels e.g. redundant textured pixel that provide overlapping texture contribution to the geometry . For example the redundancy detection component may obtain the geometry and or texture imagery such as the first texture image and the second texture image . The redundancy detection component may apply the first texture image to the geometry to identify a first pixel texture contribution for the first texture image to the geometry . The first pixel texture contribution may identify a textured geometry pixel within the geometry that is textured by the first texture image e.g. the textured geometry pixel and a first location within the first texture image may have relatively similar depth values such that a color value of the first location may be used to texture the textured geometry pixel within the geometry . The redundancy detection component may identify the redundant textured pixel provided by the second texture image for the geometry based upon the redundant textured pixel corresponding to the textured geometry pixel e.g. the textured geometry pixel and a second location within the second texture image may have relatively similar depth values such that a color value of the second location may be used to texture the textured geometry pixel within the geometry . Because the first location within the first texture image and the second location within the second texture image both contribute to texturing the textured geometry pixel the second location may be identified as the redundant textured pixel .

The compression component may be configured to modify texture imagery so that storage and or streaming bandwidth may be improved. In an example the compression component may knockout the redundant textured pixel from the second texture image e.g. by an in painting technique to generate a modified second texture image that may be efficiently compressed. In another example the compression component may compress the modified second texture image to generate a compressed second texture image. In this way the compressed second texture image may be efficiently stored within the repository and or streamed to a client for texturing of the geometry e.g. .

In an example the geometry may represent a three dimensional surface of a scene such as a city comprising a store and a tower. The first texture image may depict the city from a top down view direction. For example the first texture image may depict a square rooftop of the store and a circular rooftop of the tower. The second texture image may depict the city from an oblique view direction. For example the second texture image may depict a portion of the square rooftop of the store a northern fa ade of the store e.g. the northern fa ade may comprise a sign STORE and an eastern fa ade of the store. The second texture image may depict a portion of the circular rooftop of the tower and a northeastern fa ade of the tower e.g. the northeastern fa ade may comprise a sign TOWER . The first texture image and the second texture image may be used to texture the geometry e.g. color values within the first and or second texture images may be assigned to corresponding pixels within the geometry . However one or more pixels within the geometry may be textured by locations within both the first texture image and the second texture image which may result in redundant pixel texture contribution e.g. the portion of the square rooftop of the store and or the portion of the circular rooftop of the tower may be textured by both the first texture image and the second texture image .

In an example the redundancy detection component may be configured to apply the first texture image to the geometry to identify the first pixel texture contribution . For example locations within the first texture image may provide color values for the square rooftop of the store and or the circular rooftop of the tower. The redundancy detection component may identify one or more redundant texture pixels provided by the second texture image e.g. a first redundant contribution for the portion of the square rooftop provided by the second texture image and or a second redundant contribution for the portion of the circular rooftop provided by the second texture image . For example the second texture image may provide color values for the portion of the square rooftop and the portion of the circular rooftop which may redundantly texture the geometry because such portions may also be textured by the square rooftop and the circular rooftop depicted by the first texture image e.g. by at least a portion of the first pixel texture contribution such as a first contribution for the square rooftop and or a second contribution for the circular rooftop . In this way the redundancy detection component may identify the redundant textured pixels comprising the first redundant contribution and the second redundant contribution provided by the portions and of the second texture image .

The compression component may be configured to knockout e.g. in paint one or more redundant textured pixels such as pixels within the second texture image corresponding to the first redundant contribution e.g. pixels depicting the portion of the square rooftop and or the second redundant contribution e.g. pixels depicting the portion of the circular rooftop . In an example the compression component may take into account occlusion e.g. occlusion metric relating to visibility of a redundant textured pixel a viewing direction e.g. a viewing direction metric taking into account a desired view of a scene depicted by geometry that is to be textured by the second texture image and or a surface normal e.g. a surface normal metric identifying whether a pixel texture contribution is provided along a view direction that is tangential to a surface of the scene depicted by the geometry .

In an example of knocking out one or more redundant textured pixels the compression component may in paint pixels depicting the portion of the square rooftop a texture value e.g. a color value that is substantially similar to surrounding pixels e.g. background pixels of the second texture image. The compression component may in paint pixels depicting the portion of the circular rooftop a texture value e.g. a color value that is substantially similar to surrounding pixels e.g. background pixels . In this way the compression component may generate the modified second texture image which may be efficiently compressed for storage and or streaming to a client for client side texturing and or rendering of the geometry.

The system may comprise a compression component and or a streaming component . The compression component may be configured to compress one or more texture images stored within a repository . In an example the repository may comprise the geometry representing a three dimensional surface of a scene such as an outdoor location. The repository may comprise a first texture image depicting the outdoor location from a top down point of view a modified second texture image depicting the outdoor location from a first oblique view e.g. a second texture image comprising one or more in painted portions that may have overlapped with the first texture image a modified third texture image depicting the outdoor location from a second oblique view e.g. a third texture image comprising one or more in painted portions that may have overlapped with the first texture image and or other texture images. In an example the compression component may compress one or more of the texture images such as the modified second texture image and or the modified third texture images because the in painted portions of such texture images may result in efficient compression.

The streaming component may be configured to obtain image data such as the geometry the first texture image the modified second texture image the modified third texture image etc. For example the image data may be obtained based upon a request from the client e.g. a client mapping application may request the image data corresponding to the outdoor location so that the client mapping application may texture and or render the outdoor location . In this way the streaming component may stream the image data to the client . A texture component may texture the geometry using the first texture image the modified second texture image and or the modified third texture image . A blending component may blend overlapping contributions between modified texture images e.g. the modified second texture image and the modified third texture image may both contribute texture values for a fa ade of a building . A rendering component may render the textured geometry as a rendered image .

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to one or more of the principles set forth herein. In one such embodiment the processor executable computer instructions may be configured to perform a method such as at least some of the exemplary method of for example. In another such embodiment the processor executable instructions may be configured to implement a system such as at least some of the exemplary system of least some of the exemplary system of least some of the exemplary system of and or at least some of the exemplary system of for example. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In an embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In an embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via a network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In an embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form. Also at least one of A and B and or the like generally means A or B or both A and B.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

