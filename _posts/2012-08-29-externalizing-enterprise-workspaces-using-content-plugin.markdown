---

title: Externalizing enterprise workspaces using content plug-in
abstract: The present disclosure describes methods, systems, and computer program products for externalizing an enterprise workspace to business applications. One computer-implemented method includes indicating data within an application to be included in a new module, initiating a command to create the new module using the indicated data, transmitting the command to create the new module to an external server, receiving from the external server a list of available enterprise workspaces for adding the new module, selecting at least one available enterprise workspace from the list of available enterprise workspaces, transmitting the selected enterprise workspace to the external server, and receiving a confirmation of the new module creation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09165273&OS=09165273&RS=09165273
owner: SAP AG
number: 09165273
owner_city: Walldord
owner_country: DE
publication_date: 20120829
---
An enterprise portal also known as an enterprise information portal EIP or corporate portal is a framework for integrating information people and processes across organizational boundaries. The enterprise portal can provide a secure unified access point often in the form of a web based user interface e.g. a web portal realized using an internet browser on a computing device and can be designed to aggregate and personalize information through application specific portlets. One significant feature of enterprise portals is de centralized content contribution and content management which can keep enterprise portal information organized and updated. Fundamental features of an enterprise portal may include a single sign on log in application integration content federation environment customization information personalization access control and or enterprise search support among others.

The enterprise portal can include an enterprise workspace plug in to provide a flexible intuitive environment. The enterprise workspace plug in enables business users to integrate organize and use various content such as applications reports dashboards web content and documents from various sources. The enterprise workspace can also provide different types of user environments for example a personal workspace a shared workspace or others. Users can organize content for their own purposes in a personal workspace or share the content with a team or group of colleagues in a shared workspace. The workspace can enable quick and easy re combination of existing corporate assets with emphasis on structured content such as reports and applications among others. Users may also collaborate using an enterprise workspace for easy integration of services.

The present disclosure relates to computer implemented methods systems and computer readable media for externalizing an enterprise workspace using plug ins. One computer implemented method includes indicating data within an application to be included in a new module initiating a command to create the new module using the indicated data transmitting the command to create the new module to an external server receiving from the external server a list of available enterprise workspaces for adding the new module selecting at least one available enterprise workspace from the list of available enterprise workspaces transmitting the selected enterprise workspace to the external server and receiving a confirmation of the new module creation.

Other implementations of this aspect include corresponding computer systems apparatus and computer programs recorded on one or more computer storage devices each configured to perform the actions of the methods. A system of one or more computers can be configured to perform particular operations or actions by virtue of having software firmware hardware or a combination of software firmware or hardware installed on the system that in operation causes or causes the system to perform the actions. One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that when executed by the data processing apparatus cause the apparatus to perform the actions.

The foregoing and other implementations can each optionally include one or more of the following features 

A first aspect combinable with the general implementation wherein the command is initiated by a plug in associated with the application.

In a second aspect combinable with any of the previous aspects wherein the transmitted command is received by an operating system extension and forwarded to the external server.

In a third aspect combinable with any of the previous aspects wherein the forwarded command is received by a module generator on the external server.

In a fourth aspect combinable with any of the previous aspects wherein the list of available enterprise workspaces is generated by the module generator.

A fifth aspect combinable with any of the previous aspects further comprising confirming the selected available enterprise workspace.

A sixth aspect combinable with any of the previous aspects further comprising creating the new module on the external server in the selected available enterprise workspace.

The subject matter described in this specification can be implemented in particular implementations so as to realize one or more of the following advantages. An enterprise workspace is normally created in a dedicated environment where the structure modules members and other parameters can be defined for the enterprise workspace. A user is usually required to enter the dedicated environment to create or modify the workspace. The dedicated environment may require the user to temporarily exit a current working environment which contains content the user wants to add to the workspace. Externalizing the workspace to the current working environment for example an operating system local applications a web browser or others saves the user from the need to change environments and therefore improves productivity and efficiency. For example the workspace can offer a plug in to a current working environment which creates new modules in a particular workspace without disconnecting from the current working environment. In addition externalizing the workspace can enhance and improve the collaboration and the ability of multi device access for data concepts in the enterprise workspaces.

While generally described as computer implemented software embodied on tangible and non transitory media that processes and transforms the respective data some or all of the aspects may be computer implemented methods or further included in respective systems or other devices for performing this described functionality. The details of these and other aspects and embodiments of the present disclosure are set forth in the accompanying drawings and the description below. Other features objects and advantages of the disclosure will be apparent from the description and drawings and from the claims.

This specification describes computer implemented methods systems and computer readable media for externalizing an enterprise workspace using plug ins. At a high level an enterprise workspace can integrate organize and provide various content to users through an associated enterprise workspace page such as applications reports dashboards web content and documents from various sources. The various content is integrated into the enterprise workspace in the form of modules which can be inserted arranged and defined in the enterprise workspace environment. For example the modules can be displayed on the enterprise workspace page in a specific orientation or visible only for users with a specific role or permission level. Modules may include a URL an application a link to a website among others. On the enterprise workspace page the target of the URL the application and the link can be displayed using associated modules. Besides creating and managing the modules in a dedicated enterprise workspace environment the enterprise workspace can insert plug ins into data sources permitting direct addition of modules with associated content from the data sources into the enterprise workspace.

Plug ins can be installed in an operating system for example by modifying the operating system registry and into system and or business applications. Users can interact with the plug ins to add content associated with an associated plug in to a desired enterprise workspace. The plug in allows users to remain within a current working environment as opposed to leaving the current working environment to enter an enterprise workspace environment to add content. For example a user may indicate data within an application to include in a new module to be added to an enterprise workspace. A command is initiated by the user to create the new module using the indicated data. In some implementations the user initiated command can be transmitted to an external server to create the new module. In some implementations a list of available enterprise workspaces can be received from the external server in which to add the new module. After selecting at least one enterprise workspace from the received list of available enterprise workspaces creation of the new module on the selected enterprise workspace can be confirmed.

At a high level the enterprise workspace server can be connected with one or more clients such as the client . For example the enterprise workspace server can host a list of enterprise workspaces that can be accessed and viewed at the client . The enterprise workspace server can send a requested enterprise workspace page to the client and enable the client to install an enterprise workspace plug in . The enterprise workspace plug in can be associated with the operating system of the client a client application or other applications of the client e.g. system or web applications . The installation of the enterprise workspace plug in can be similar to software installations using common installation or setup programs that modifies a registry for example system registry and then launches the installed enterprise workspace plug in as the applications are launched. The installed enterprise workspace plug in can be integrated into the menus of the applications an icon or other selectable user interface components. The user can use the installed enterprise workspace plug in to add content from the associated operating system and or applications to the enterprise workspace.

In the illustrated implementation of the enterprise workspace server includes an interface a processor memory a business application a module generator an application programming interface API and a service layer . The interface is used by the enterprise workspace server to communicate with other systems in a client server or other distributed environment including within environment connected to the network e.g. the client as well as other systems communicably coupled to the network . The interface generally includes logic encoded in software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interface may include software supporting one or more communication protocols associated with communications such that the network or the interface hardware is operable to communicate physical signals within and outside of the illustrated environment .

The processor can be any appropriate processing unit or units to enable computation in the enterprise workspace server . Although illustrated as a single processor in the enterprise workspace server two or more processors may be used in the enterprise workspace server according to particular needs desires or particular embodiments of environment . Generally the processor executes instructions and manipulates data to perform the operations of the enterprise workspace server and specifically the functionality associated with the corresponding business application and or module generator . In one implementation the server s processor executes the functionality required to receive inbound communications from and send outbound communications to the client as well as the functionality required to perform the operations of the associated business application and or module generator among others.

The memory of the illustrated enterprise workspace server stores at least a list of enterprise workspaces the associated enterprise workspace pages a number of modules the associated module content the associated module template user properties the plug in and other data and program instructions. Some or all of the elements illustrated within memory may be stored external to the memory . In some implementations including a cloud based system some or all of the memory may be stored remote from the enterprise workspace server and communicably coupled to the enterprise workspace server for usage. Specifically the memory can store the enterprise workspaces created by the client and the enterprise workspace page generated at the enterprise workspace server . The enterprise workspaces are created using modules that can be predefined at the enterprise workspace server or locally and or remotely created and or added to the enterprise workspace server . The modules can include the module content and the module template that may be stored and or retrieved locally and or remotely. The memory also stores user properties for example a user s role preferences and or other data associated with an enterprise portal enterprise workspace and or the client application .

At a high level the business application can be any software for performing business and or non business functions on a particular enterprise workspace server . For example the business application can communicate with client applications for performing specific functionalities such as generating an enterprise workspace page adding modules associated with business application content to a particular enterprise workspace page etc. The business application may poll data from multiple client applications and systems and generate an enterprise workspace page based on the data. In some implementations the business application may operate in response to and in connection with one or more requests received from an associated client or other remote client . Additionally the business application may operate in response to and or in connection with one or more requests received from other applications not illustrated external to the enterprise workspace server . For example the operation of the business application to externalize the enterprise workspace by permitting the addition of modules from external client applications to an enterprise workspace page may be initiated by a request to install a particular enterprise workspace plug in and to transfer desired content to be added to the enterprise workspace page to the enterprise workspace server . In some implementations the business application may communicate with one or more of the client applications that represent a web based application accessed and executed by remote clients using the network e.g. through the Internet or using one or more cloud based services associated with the business application .

The module generator generates new modules for the enterprise workspace enterprise workspace page based on content selected at the client . For example the enterprise workspace plug in is installed on the client application . The installation allows the plug in to register with the operating system registry and to be embedded natively in the client application . At the launch of the client application the enterprise workspace plug in is loaded with the client application and can then be used by a user to indicate data within the client application to be included in a new module on an enterprise workspace page . In some embodiments the plug in can be integrated within the menus of the client application . In other instances the plug in can be presented as a quick launch button or other suitable user interface component.

In some implementations a user for example can select within the menu or using the quick launch button to add content data destination and or other sources to be included in a new module . In this specification the term data is used to encompass the mentioned content data destination and other sources. The selection can include operations such as hold and drag right click for a pop up menu and or clicking on a menu option to open a selection dialog or to save default content to destination. In some implementations selecting a menu item or clicking the launch button triggers a request for the enterprise workspaces component Workspace Explorer . The request can be sent with the current browser URL as a parameter and by selecting the desired workspace from a list presented by the workspace explorer component . A module is being created updated using Enterprise Workspaces API with the data i.e. current browser URL sent as a parameter in the request for enterprise workspace server.

The selection can initiate a command at the client to create the new module with the module generator using the indicated data. The command is transmitted to the enterprise workspace server . The module generator then receives the command and the indicated data of the client application . Based on the received data the module generator can generate the new module formatted for one of the enterprise workspaces enterprise workspace pages . For example the new module may be a Link list module a URL module a text pad module or other appropriate module adding to a particular enterprise workspace page .

In some implementations the enterprise workspace server sends a list of available enterprise workspaces enterprise workspace pages to the client . The user at the client can select one or more enterprise workspaces and an associated enterprise workspace page from the list on which to include the new module . The selected enterprise workspace enterprise workspace page is transmitted back to the enterprise workspace server . The new module created in the selected enterprise workspace enterprise workspace page and can then be confirmed by the enterprise workspace server to the client with a confirmation indicator. The confirmation indicator may include a pop up dialog an email a sound a temporarily displayed user interface component and or other suitable confirmation indicator. The API can enable a user to access and use the module generator to generate the new module without necessarily launching an enterprise workspace development environment from the client . The API can include specifications for routines data structures object classes and variables at the enterprise workspace server . The interaction of selection is further described at the mediator utilities of the client .

The service layer can provide middleware that serves the plug in and the client application at a higher application layer. The service layer can provide capability servers owned by a telecommunication network service provider accessed through open and secure API by application layer servers owned by content providers. The service layer can also provide an interface to core networks at a lower resource layer which may be a control layer or transport layer. In some implementations the service layer and the API can manage the module content determined from the data indicated in the client application e.g. the data can be indicated by the current loaded data a selection of the current loaded data or a link to the data . The module generator can use the determined module content and the module template stored in the memory to generate the module . The module can then be associated with and displayed on the enterprise workspace page of an associated enterprise workspace . The module template may be selected from a module template database based on the user property . For example a set of module templates may be predefined for a particular user property such as a user s role preference group or member information. These predefined set of module templates can then be associated with particular data type selected at the plug in .

The enterprise workspace server is any server or system that stores manages and executes functionality associated with the business application and or module generator . In some instances each enterprise workspace server may store and or execute a plurality of various other applications and components not illustrated while in other instances the enterprise workspace server may be a dedicated server meant to store and execute the business application and or module generator for a particular platform or application and its related functionality. In some instances the enterprise workspace server may include a web server or be communicably coupled with a web server where one or more of the business applications and or module generators associated with the enterprise workspace server represent web based or web accessible applications accessed and executed through requests and interactions received by the client .

The enterprise workspace server can include an electronic computing device operable to receive transmit process store or manage data and information associated with the environment . The enterprise workspace server illustrated in can be responsible for receiving application related requests from one or more clients as well as any other entity or system interacting with the enterprise workspace server including desktop or mobile client systems responding to the received requests by processing said requests in the associated business application and or module generator and sending the appropriate responses from the appropriate component back to the requesting client or other requesting system. Components of the enterprise workspace server can also process and respond to local requests from a user locally accessing the enterprise workspace server . Accordingly in addition to requests from the client illustrated in requests associated with a particular component may also be sent from internal users external or third party customers and other associated business applications business processes as well as other appropriate entities individuals systems or computers. In some instances the business application and or the module generator may be a web based application executing functionality associated with a networked or cloud based business process.

Referring now to the client illustrated in the client may be any computing device operable to connect to or communicate with the enterprise workspace server using a wireline or wireless connection directly or using the network or another suitable communication means or channel. For example the client can be a desktop computer a notebook computer a tablet computer or a smartphone . In some instances the client may be a part of or associated with a business process involving one or more of a remote developer or user associated with the enterprise workspace server . It will be understood that there may be any number of clients associated with or external to environment . For example while the illustrated environment includes a single client alternative implementations of environment may include multiple clients communicably coupled to one or more of the systems illustrated. In some instances one or more clients may be associated with administrators of the environment and may be capable of accessing and interacting with the settings and operations of one or more portal systems and or other components of the illustrated environment . Additionally there may also be one or more additional clients external to the illustrated portion of environment capable of interacting with the environment using the network .

The illustrated client includes an interface a processor the client application a mediator utility and a memory . The interface is used by the client for communicating with other systems in a distributed environment including within the example environment connected to the network for example the enterprise workspace server as well as other systems communicably coupled to the network not illustrated . The interface may also be consistent with the above described interface of the enterprise workspace server or other interfaces within the example environment . The processor may be consistent with the above described processor of the enterprise workspace server or other processors within the example environment . Specifically the processor executes instructions and manipulates data to perform the operations of the client including the functionality required to send requests to the enterprise workspace server and to receive and process responses from the enterprise workspace server . The memory may be consistent with the above described memory of the enterprise workspace server or other memories within the example environment by storing objects and or data associated with the purposes of the client .

Further the representative client illustrates a GUI applicable to the client in general. The GUI provides a visual interface with at least a portion of the example environment . Generally through the GUI enterprise workspace server users are provided with an efficient and user friendly presentation of data provided by or communicated within the example environment . For example the GUI may be associated with the client application and used to view navigate and or configure content of the enterprise workspace server navigation lists and other associated content served by enterprise workspace server . In some implementations the client application may be used to access various portions of the enterprise workspace server . In some instances the client application may be an agent or client side version of the enterprise workspace server or other suitable component of the enterprise workspace server .

The mediator utility can manage the plug ins that are associated with the client application . For example the mediator utility can provide utilities for the plug ins to define data or content to be selected in the new module. For example the utilities can include hold and drag selection of text or graphic information right click menus for pop up menu selection or quick launch icons and drop down menus for selecting the currently displayed content. In some implementations the mediator utility can include data selection tools and access to the module template . The selection tools can incorporate the plug ins into pop up menus of the operating system. In some instances the mediator utility can enable the module generator to generate new modules directly in the operating system without the use of a particular client application . The mediator utility can also enable users to select from the list of available enterprise workspace sent from the enterprise workspace server .

As used in this disclosure each client is intended to encompass a personal computer touch screen terminal workstation network computer kiosk wireless data port smart phone personal data assistant PDA one or more processors within these or other devices or any other suitable processing device. For example each client may include a computer that includes an input device such as a keypad touch screen mouse or other device that can accept user information and an output device that conveys information associated with the operation of one or more client applications and or the client itself including digital data visual information or the GUI . Both the input and output device may include fixed or removable storage media such as a magnetic storage media CD ROM or other suitable media to both receive input from and provide output to users of client through the display namely the GUI . As will be appreciate to those skilled in the art alternative implementations of one or more of these components may be used as well as implementations where additional components may also be included.

Turning now to similarly an example user interface is shown with an example plug in . The example plug in can be embedded in the user interface as a menu option in the dropdown menu in this example the dropdown menu of Tools . A user may use a pointer device e.g. a touch screen a mouse a laser tracker etc. to interact with the dropdown menu and select the menu option of the plug in . Upon selection the plug in can add the current webpage as a URL module to one or more chosen enterprise workspaces. For example when the user selects the menu option of the plug in a command is initiated to create an URL module in one of the enterprise workspaces. The command is sent to an enterprise workspace server such as the enterprise workspace server illustrated in . A list of available enterprise workspaces is sent from the server to the user. The user can select one or more enterprise workspaces to incorporate the newly generated URL module. The selected workspaces are transmitted back to the server and a confirmation from the server is sent back to the user.

Turning now to an example user interface is shown with an example plug in that can be embedded in the user interface as a menu option in a pop up system menu initiated by a gesture or a click. A user may user a pointer device to select a portion of text or an area then right click or hold down the selection gesture to bring up a pop up system menu . The user can then select the menu option of the plug in on the pop up system menu . Upon selection the plug in can add the selected text as a text pad module to one or more chosen enterprise workspaces. For example when the user selects the menu option on the pop up menu a command is initiated to create a text pad module in one of the enterprise workspaces. The text pad module can include the selected text in the enterprise workspace page to be displayed. The command is sent to an enterprise workspace server such as the enterprise workspace server illustrated in . A list of available enterprise workspace is sent from the server to the user. The user can select one or more enterprise workspaces to incorporate the newly generated text pad module. The selected workspaces are transmitted back to the server and a confirmation from the server is sent back to the user. As will be apparent to those of skill in the art other implementations are possible apart from the three provided examples illustrated in .

Turning now to is a flow chart for plug in enabled externalization of an enterprise workspace. For clarity of presentation the description that follows generally describes method in the context of FIGS. and A C. However it will be understood that method may be performed for example by any other suitable system environment software and hardware or a combination of systems environments software and hardware as appropriate.

At a user can indicate data in the client applications to be included in a new module using an enterprise workspace externalization plug in that has been installed and embedded onto a client application. The data can be a link to an internet source a URL a webpage text data image data multimedia files or other suitable type of data. From method proceeds to .

At the user can select an icon a menu option or other control of the enterprise workspace plug in. The selection initiates a command to create the new module containing the indicated data. In some implementations the command can be associated with a dialog window for the user to specify details of the module creation such as choosing a module type a module template or other specifications. From method proceeds to .

At the command to generate a new module is transmitted to an enterprise workspace server. For example the command can carry module creation specifications to the enterprise workspace server module generator to generate a new module based on the module creation specifications the indicated data and available module templates. From method proceeds to .

At the user can receive a list of available enterprise workspaces workspace pages from the enterprise workspace server. The list of available enterprise workspaces workspace pages can be determined at the server based on compatibility with the newly generated module e.g. type size etc. the user s role permission level etc.

At one or more available enterprise workspaces enterprise workspace pages are selected by the user to include the newly generated module. For example the user can select a personal and a shared enterprise workspace and one or more specific enterprise workspace pages to include the new module in. From method proceeds to .

At the enterprise workspace enterprise workspace page selection is transmitted back to the enterprise workspace server. The enterprise workspace enterprise workspace page selection is confirmed at the enterprise workspace server such that when the selected enterprise workspace page is loaded at other clients the newly added module will be displayed along with existing content. From method proceeds to .

At the user can receive a confirmation indication from the enterprise workspace server regarding the successful creation of the module in the selected enterprise workspaces workspace page. Confirmation indications may include a pop up dialog an email a sound a temporarily displayed user interface component and or other suitable confirmation indicators. From method stops.

Implementations of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry in tangibly embodied computer software or firmware in computer hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Implementations of the subject matter described in this specification can be implemented as one or more computer programs i.e. one or more modules of computer program instructions encoded on a tangible non transitory computer storage medium for execution by or to control the operation of data processing apparatus. Alternatively or in addition the program instructions can be encoded on an artificially generated propagated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. The computer storage medium can be a machine readable storage device a machine readable storage substrate a random or serial access memory device or a combination of one or more of them.

The term data processing apparatus refers to data processing hardware and encompasses all kinds of apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can also be or further include special purpose logic circuitry e.g. a central processing unit CPU a FPGA field programmable gate array or an ASIC application specific integrated circuit . In some implementations the data processing apparatus and or special purpose logic circuitry may be hardware based and or software based. The apparatus can optionally include code that creates an execution environment for computer programs e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them. The present disclosure contemplates the use of data processing apparatuses with or without conventional operating systems for example LINUX UNIX WINDOWS MAC OS ANDROID IOS or any other suitable conventional operating system.

A computer program which may also be referred to or described as a program software a software application a module a software module a script or code can be written in any form of programming language including compiled or interpreted languages or declarative or procedural languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program may but need not correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code. A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network. While portions of the programs illustrated in the various figures are shown as individual modules that implement the various features and functionality through various objects methods or other processes the programs may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate.

The processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. a CPU a FPGA or an ASIC.

Computers suitable for the execution of a computer program by way of example can be based on general or special purpose microprocessors or both or any other kind of CPU. Generally a CPU will receive instructions and data from a read only memory ROM or a random access memory RAM or both. The essential elements of a computer are a CPU for performing or executing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio or video player a game console a global positioning system GPS receiver or a portable storage device e.g. a universal serial bus USB flash drive to name just a few.

Computer readable media transitory or non transitory as appropriate suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM DVD R DVD RAM and DVD ROM disks. The memory may store various objects or data including caches classes frameworks applications backup data jobs web pages web page templates database tables repositories storing business and or dynamic information and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto. Additionally the memory may include any other appropriate data such as logs policies security or access data reporting files as well as others. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user implementations of the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube LCD liquid crystal display or plasma monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse trackball or trackpad by which the user can provide input to the computer. Input may also be provided to the computer using a touchscreen such as a tablet computer surface with pressure sensitivity a multi touch screen using capacitive or electric sensing or other type of touchscreen. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input. In addition a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user for example by sending web pages to a web browser on a user s client device in response to requests received from the web browser.

The term graphical user interface or GUI may be used in the singular or the plural to describe one or more graphical user interfaces and each of the displays of a particular graphical user interface. Therefore a GUI may represent any graphical user interface including but not limited to a web browser a touch screen or a command line interface CLI that processes information and efficiently presents the information results to the user. In general a GUI may include a plurality of user interface UI elements some or all associated with a web browser such as interactive fields pull down lists and buttons operable by the business suite user. These and other UI elements may be related to or represent the functions of the web browser.

Implementations of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of wireline and or wireless digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN a radio access network RAN a metropolitan area network MAN a wide area network WAN Worldwide Interoperability for Microwave Access WIMAX a wireless local area network WLAN using for example 802.11a b g n and or 802.20 all or a portion of the Internet and or any other communication system or systems at one or more locations. The network may communicate with for example Internet Protocol IP packets Frame Relay frames Asynchronous Transfer Mode ATM cells voice video data and or other suitable information between network addresses.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specific implementation details these should not be construed as limitations on the scope of any invention or on the scope of what may be claimed but rather as descriptions of features that may be specific to particular implementations of particular inventions. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable sub combination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a sub combination or variation of a sub combination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system modules and components in the implementations described above should not be understood as requiring such separation in all implementations and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Particular implementations of the subject matter have been described. Other implementations alterations and permutations of the described implementations are within the scope of the following claims as will be apparent to those skilled in the art. For example the actions recited in the claims can be performed in a different order and still achieve desirable results.

Accordingly the above description of example implementations does not define or constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure.

