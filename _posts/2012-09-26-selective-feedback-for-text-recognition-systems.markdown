---

title: Selective feedback for text recognition systems
abstract: This specification describes technologies relating to recognition of text in various media. In general, one aspect of the subject matter described in this specification can be embodied in methods that include receiving an input signal including data representing one or more words and passing the input signal to a text recognition system that generates a recognized text string based on the input signal. The methods may further include receiving the recognized text string from the text recognition system. The methods may further include presenting the recognized text string to a user and receiving a corrected text string based on input from the user. The methods may further include checking if an edit distance between the corrected text string and the recognized text string is below a threshold. If the edit distance is below the threshold, the corrected text string may be passed to the text recognition system for training purposes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08515751&OS=08515751&RS=08515751
owner: Google Inc.
number: 08515751
owner_city: Mountain View
owner_country: US
publication_date: 20120926
---
Priority is hereby claimed to U.S. Provisional Application No. 61 540 381 which was filed on Sep. 28 2011. The contents of U.S. Provisional Application No. 61 540 381 are hereby incorporated by reference into this disclosure.

Voice recognition systems capable of detecting audio speech signals and converting them into related text have been deployed to allow users to interact with computers through voice commands. For example voice recognition systems have been used to automate the answering and processing of customer service calls.

Optical Character Recognition OCR systems capable of extracting text from images have been deployed to facilitate copying and searching of text stored in image files. For example OCR systems have been used to extract text from images stored as portable document files PDFs .

Text recognition systems e.g. voice recognition systems or OCR systems may use machine learning models that are trained using a large set of training data. For example the training data may include audio voice signals and paired text equivalents or labels. Generating the data set used to train a text recognition system may be expensive.

This specification describes technologies relating to recognition of text in various media. In general one aspect of the subject matter described in this specification can be embodied in a method that includes receiving an input signal comprising data that corresponds to one or more words. The method may further include passing the input signal to a text recognition system that generates a recognized text string based on the input signal. The method may further include receiving the recognized text string from the text recognition system. The method may further include presenting the recognized text string to a user. The method may further include receiving a corrected text string based on input from the user. The method may further include checking if an edit distance between the corrected text string and the recognized text string is below a threshold. The method may further include if the edit distance is below the threshold passing the corrected text string to the text recognition system for training purposes.

In general one aspect of the subject matter described in this specification can be embodied in a system that includes a data processing apparatus and a memory coupled to the data processing apparatus. The memory having instructions stored thereon which when executed by the data processing apparatus cause the data processing apparatus to perform operations including receiving an input signal comprising data that corresponds to one or more words. The operations may further include passing the input signal to a text recognition system that generates a recognized text string based on the input signal. The operations may further include receiving the recognized text string from the text recognition system. The operations may further include presenting the recognized text string to a user. The operations may further include receiving a corrected text string based on input from the user. The operations may further include checking if an edit distance between the corrected text string and the recognized text string is below a threshold. The operations may further include if the edit distance is below the threshold passing the corrected text string to the text recognition system for training purposes.

In general one aspect of the subject matter described in this specification can be embodied in a mobile device that includes a microphone configured to receive an input signal comprising data that corresponds to one or more words. The mobile device may further include a wireless network interface configured to transmit the input signal to a text recognition system that generates a recognized text string based on the input signal. The mobile device may further include a wireless network interface configured to receive the recognized text string from the text recognition system. The mobile device may further include a display configured to present the recognized text string to a user. The mobile device may further include a user interface configured to receive one or more edits to the recognized text string from the user. The mobile device may further include a module configured to determine a corrected text string based on the recognized text string and the edits. The mobile device may further include means for checking if an edit distance between the corrected text string and the recognized text string is below a threshold. The mobile device may further include a wireless network interface configured to if the edit distance is below the threshold pass the corrected text string to the text recognition system for training purposes.

In general one aspect of the subject matter described in this specification can be embodied in a system that includes an interface configured to receive an input signal comprising data that corresponds to one or more words. The system may further include an interface configured to pass the input signal to a text recognition system that generates a recognized text string based on the input signal. The system may further include an interface configured to receive the recognized text string from the text recognition system. The system may further include an interface configured to present the recognized text string to a user. The system may further include an interface configured to receiving a corrected text string based on input from the user. The system may further include means for checking if an edit distance between the corrected text string and the recognized text string is below a threshold. The system may further include an interface configured to if the edit distance is below the threshold pass the corrected text string to the text recognition system for training purposes.

In general one aspect of the subject matter described in this specification can be embodied in a computer readable medium storing software including instructions executable by a processing device that upon such execution cause the processing device to perform operations that include receiving an input signal comprising data that corresponds to one or more words. The operations may further include passing the input signal to the text recognition system that generates a recognized text string based on the input signal. The operations may further include receiving the recognized text string from the text recognition system. The operations may further include presenting the recognized text string to a user. The operations may further include receiving a corrected text string based on input from the user. The operations may further include checking if an edit distance between the corrected text string and the recognized text string is below a threshold. The operations may further include if the edit distance is below the threshold passing the corrected text string to the text recognition system for training purposes.

These and other embodiments can each optionally include one or more of the following features. The edit distance may represent a Levenshtein distance. The edit distance may represent the minimum number of single character insertion deletion or substitution operations required to transform the recognized text string into the corrected text string The edit distance may be a minimum number of write operations from a set of allowed operations needed to produce the corrected text string from the recognized text string wherein write operations include character insertion and character substitution and wherein character deletion is allowed but not counted in the edit distance. The edit distance may be a maximum number of consecutive characters inserted. The input signal may be an auditory speech signal. The input signal may be an image signal. The text recognition system may be executed by a remotely located server. The text recognition system may be executed by a user device. Passing the input signal to a text recognition system may include transmitting a signal encoding the input signal through a network. Checking if an edit distance between the corrected text string and the recognized text string is below threshold may include determining the edit distance and comparing the edit distance to the threshold. Checking if an edit distance between the corrected text string and the recognized text string is below threshold may include computing intermediate edit distance values until the threshold is exceeded or the edit distance is determined. Receiving a corrected text string based on input from the user may include receiving data that represents one or more user edits to the recognized text string and determining a corrected text string based on the recognized text string and the edits. The units of the edit distance may represent a number of characters. The units of the edit distance may represent a number of phonemes. The units of the edit distance may represent a number of words. The threshold may depend on a length of the corrected text string. The threshold may be approximately fifty percent of the length of the corrected text string. Presenting the recognized text string to a user may include transmitting the recognized text to a user device for display to the user. Presenting the recognized text string to a user may include displaying the recognized text on a display.

Particular embodiments of the invention can be implemented to realize none one or more of the following advantages. Some implementations may facilitate the training machine learning based text recognition systems. Some implementations may filter out less useful data from a set of training data collected from a user. Along with reducing the cost of text recognition services by providing low cost data for training purposes some implementations may improve the quality of a text recognition service by providing more reliable data for training purposes. Some implementations may facilitate adaptation of text recognition systems to the characteristics of individual users.

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the invention will become apparent from the description the drawings and the claims.

A text recognition system e.g. a speech recognition system or OCR system is used to extract text from input signals that reflect information including words or other symbols. A text recognition system may include a machine learning system e.g. a hidden markov model a feature based linear regression an artificial neural network that trains a model used to detect text in input signals by analyzing numerous example input signals that have each been paired with a known text string representing the words or symbols that are reflected in that input signal. A set of input signal and text string pairs used for this purpose may be considered training data. In some implementations additional training data may be collected from one or more users of a text recognition system and used to further refine a model used by the text recognition system. When many users e.g. thousands of users access and utilize a text recognition system through a network the users may collectively be a vast and cost efficient source of training data.

The accuracy of text recognition systems may be improved by feeding back corrections that a user made to a given recognized text string. For example a user of a speech recognition service may say pictures of the Golden Gate Bridge at sunset as part of verbal search query. The speech recognition service may recognize pictures of Golden Gate Bridge and sunset . The user could then edit the text returned from the speech recognition service and correct the mistakes made by the service. The resulting corrected text string may then be paired with the input audio speech signal to form an example that may be used by the speech recognition system underling the service as training data.

However in some cases the user may make significant changes to the recognition text or even write a completely new text. This circumstance may arise due to for example a low signal to noise ratio in the input signal user error or a user who is making the edits for a primary purpose other than training the speech recognition system i.e. inputting what the user intended to say rather than what the user actually said. In such cases it may not be helpful to feed the user s edits back into the speech recognition service for use as training data since the new text is not necessarily closely related to the originally spoken query anymore.

An edit distance between the recognized text string and a corrected text string that results from a user s edits may be used to measure the significance of user edits. The edit distance between two text strings may measure how many edit operations are required to change one text into another. For example the Levenshtein distance between the two text strings is the minimum number of single character insertion deletion or substitution operations required to transform one text string into the other. Only user corrections with edit distances that are below a pre defined threshold would typically be taken into account for future text recognition system training and improvements. All other changes may be deemed too significant to be useful. In this manner edit distance calculation and thresholding may be used to filter corrected text strings collected from users to provide a more reliable set of training data.

Users access the verbal search service from their devices e.g. smart phones tablet computing devices computers etc. . Users may use their devices to interact with the search server system by submitting application commands . For example a user of mobile device may submit a verbal search term to the search server system . The verbal search term may include an audio input signal and is received using the interface and passed to the request processor . The request processor may then send the audio portion of the received request to the speech recognition system which identifies words in the audio and returns a recognized text string that may be used as a search query. The resulting formatted search query is then passed to the search engine which searches its index and outputs a set of search results to the response formatter . The response formatter may generate a responsive webpage or other type of response e.g. text imagery etc. . The responsive webpage may be transmitted by the interface through the network to mobile device . The responsive webpage may include a display of the text search term derived from the recognized text string and search results . The user of mobile device may then perceive an error in the text search term that resulted from the user s verbal search term.

At this point the user may input corrective edits to the text search term and resubmit the query as a corrected search term . The corrected search term may be received through interface by both the request processor and a text recognition corrections filter . The text recognition corrections filter may have previously received the recognized text string that resulted from the verbal search term from the speech recognition system . The text recognition corrections filter may use one or more edit distances between the recognized text string that resulted from the verbal search term and the corrected search term to assess the likely value of the corrected search term as training data. The text recognition corrections filter may apply thresholds to the edit distances to determine whether the corrected search term should be used as training data by the speech recognition system . Corrected search terms selected in this manner may be passed to the speech recognition system possibly along with the corresponding verbal search term and stored in the storage device for use in future training to adjust the model parameters .

The text recognition corrections filter may be implemented as software hardware or a combination of software and hardware that is executed on a processing apparatus such as one or more computing devices e.g. a computer system as illustrated in .

The process can be implemented for example by the text recognition correction filter in the search server system of . In some implementations the search server system is a data processing apparatus that includes one or more processors that are configured to perform actions of the process . For example the data processing apparatus may be a computing device e.g. as illustrated in . In some implementations the process may be implemented by a text recognition correction filter that is executed by a user s mobile computing device e.g. also illustrated in . For example process may be implemented by the text recognition correction filter that is executed by the mobile device described in . In some implementations a computer readable medium can include instructions that when executed by a computing device e.g. a computer system cause the device to perform actions of the process .

An input signal including information representing one or more words or symbols is received . For example the input signal may be an audio speech signal that is input to a verbal search service. In some implementations the input signal may be an image file containing a picture of printed words e.g. a sign or a page from a book. The words or symbols represented in the input signal may be in any language the text recognition system is capable of processing e.g. English or Chinese .

The input signal may be received from a user device e.g. a cell phone . The input signal may be received via a server system interface component of the search server system . In some implementations the input signal may be received through a microphone on a user device e.g. microphone . In some implementations the input signal may be received through a camera on a user device e.g. camera .

The input signal is passed to a text recognition system. In some implementations the text recognition system runs on a remote server. For example passing the input signal may be accomplished by transmitting the input signal via a network using a network interface e.g. a wireless network interface including an antenna . In some implementations the text recognition system is integrated with and runs on the same local device as process . For example passing the input signal may be accomplished by storing the input signal in a particular memory location or passing a pointer to input signal into the text recognition system as an argument to an application programmer interface function.

A recognized text string is received from the text recognition server. The text recognition system may identify words or other symbols represented in the input signal and generate a recognized text string that is a text representation of the identified words or symbols. For example the recognized text string may be a sequence of characters encoded in accordance with a standard character encoding scheme e.g. American Standard Code for Information Interchange ASCII . The recognized text string may be received in a variety of ways e.g. from a remote server through a network by dereferencing a pointer to memory etc. .

The recognized text string may be presented to a user. The recognized text string may be presented by rendering a visual representation of the recognized text string on the display e.g. a liquid crystal display of a user device. For example the recognized text string may be presented on display of . In some implementations presentation to a user may be accomplished by transmitting the recognized text string to a user device. For example the text recognition corrections filter may present the recognized text by transmitting the recognized text to a remote user device .

A corrected text string based on input from the user may be received . The corrected text string may be a sequence of characters encoded in accordance with a standard character encoding scheme e.g. ASCII that reflects user input. For example a user presented with the recognized string may input edits to the text through a user interface e.g. a keypad or a touch screen display . The corrected text string may be determined by interpreting the user s edit commands and applying them to a copy of the recognized text string. For example a corrected text string may be derived from user edits input through keyboard on the mobile device of . In some implementations the corrected string is received in a communication signal from a remote device through a network. For example the text recognition correction filter may receive through the interface a corrected text string that has been transmitted through a network by a user device.

A check is performed to determine whether an edit distance between the recognized text string and the corrected text string is below a threshold. The edit distance may provide an indication of how similar the two text strings are. In some implementations an edit distance is determined and then compared to a threshold e.g. the data flow of . For some edit distances e.g. the Levenshtein distance algorithms for calculating the edit distance exist that have monotonic properties which may allow a determination of whether or not an edit distance will be below a threshold before the complete edit distance computation has been completed. In some implementations intermediate values may be computed in an accordance with an edit distance computation algorithm until it is determined that the edit distance must exceed the threshold or until the edit distance is determined e.g. the program listing of .

Many possible edit distances may be defined and used to assess the similarity of the strings and thus the likely utility of the corrected text string as training data for a text recognition system. One example is the Levenshtein distance between two portions of text e.g. word passage etc. which is defined as the minimum number of allowed edit operations required to transform a one of the text portions into the other. For the Levenshtein distance the allowed edit operations are typically insertion of a single character deletion of a single character and substitution of a single character. An example process for determining the Levenshtein distance between the recognized text string and the corrected text string is describe in relation to .

In some implementations a modified Levenshtein distance may be used that counts the minimum number of insertions of single character and substitutions of a single character while disregarding deletions of characters required to transform between the two texts. This modified Levenshtein distance may be a useful edit distance in a text recognition corrections filter because noisy input signals e.g. background noise in a speech audio signal may cause extra characters in the recognized text when underlying words or symbols are not present e.g. silence periods or pauses in speech . This circumstance may make deletions more common and less informative. A process for checking this edit distance is describe in relation to .

Another example of an edit distance is the maximum number of consecutive characters inserted to form the corrected text string. The maximum number of consecutive characters inserted is also checked by the process described in relation to . In some implementations multiple edit distances may be checked and a corrected text string may be selected for training if all of the edit distances are below their respective thresholds.

Edit distances and their thresholds may be measured in a variety of units. For example speech recognition systems may return a sequence of coded phonemes or coded words which in turn may be represented as sequences of characters. The edit distance used may define the set of allowable operations to be on insertion deletions or substitutions of single phonemes or of single words.

The threshold may depend on properties of the recognized text string or the corrected text string. For example the threshold for the edit distance may be set to a percentage e.g. 50 of the length of the corrected text string. In some implementations a different threshold may be used for each distance metric used. For example a fixed threshold e.g. 15 characters may be used for the maximum consecutive characters inserted edit distance. The exact value of the threshold may be determined iteratively and may remain flexible throughout the life of the system. Updates to the threshold may depend in part on a performance metric differential for a text recognition system before and after training with corrections data collected using the previous value of the threshold.

For example the edit distance may be checked by the text recognition corrections filter module of the search server system . The edit distance may be checked by the text recognition correction filter of the mobile device illustrated in .

If the edit distance is below the threshold then the corrected text string is selected for use as training data for a text recognition system. In this case the corrected text string may be passed to the text recognition system for training purposes. As with the input signal the corrected text string may be passed in a variety of ways e.g. transmitting copying to memory etc. that may depended on a nature of the system implementing process is and its relationship to the text recognition system. In some implementations a text recognition system may immediately update its model parameters based on the corrected text string. In some implementations the text recognition system may store the corrected text string for later use in training In some implementations selected corrected text strings may be stored locally before being passed to the text recognition system in batches e.g. periodically or after a certain number of strings have been selected .

If the edit distance is not below the threshold then the corrected text string may be disregarded for training purposes. Process may then terminate or wait for new input signals for a text recognition system before restarting.

For example module may be implemented as part of the text recognition correction filter of the search server system . The module may be implemented by the text recognition corrections filter of the mobile device .

For example process may be implemented by the text recognition correction filter of the search server system . The process may be implemented by the text recognition corrections filter of the mobile device .

The corrected text string and the recognized text string are retrieved and the distance matrix is initialized . The dimension of the distance matrix depends on the lengths of the two text strings and is equal to one plus the length of the corrected text string by one plus the length of the recognized text string. In the example rows of the matrix correspond to characters of the corrected text string and columns correspond to characters of the recognized text string. The first row and first column of the distance matrix both correspond to null strings i.e. strings with no characters. The element in the first row and column is set to the distance between two null strings i.e. zero. The remaining elements in the first row are set to length of the prefix of the recognized text string that ends with the character corresponding to the element s column. Similarly the remaining elements in the first column are set to length of the prefix of the corrected text string that ends with the character corresponding to the element s row.

After initialization the element values may be determined based on whether individual characters corresponding to the row and column match and the distance values for nearby elements in the matrix i.e. for prefixes of the same length or one character less. Processing starts in second row second column which corresponds to the first character of the corrected text string and the first character of the recognized text string.

The character of the corrected text string corresponding to the current row is compared to the character of the recognized text string corresponding to the current column. If the two characters are equivalent then the distance for this element is set to the value stored for the element in the previous row previous column. Otherwise the distance will typically be set to a value incremented from value stored in a previous element of the matrix. The current distance element may be set to one plus the minimum of the distances stored in previous row previous column previous row current column and current row previous column .

If there are more columns in the current row to be processed then go to the next column corresponding to the next character of the recognized text string. If not then check if there are more rows to be processed . If so go to the next row corresponding to the next character. Finally when all rows have been processed the value in the last row last column may be returned as the Levenshtein distance between the recognized text string and the corrected text string.

The second edit distance is a maximum number of consecutive character insertion operations used to derive the corrected text string from the recognized text string. The example code listing sets the threshold for the second edit distance to a fixed value e.g. characters .

The getDistance function accepts a recognized text string and a corrected text string as inputs and returns an edit distance that may saturate at the threshold or just above the threshold. A full definition of the getDistance function is provide in .

The DeltaTable class distance matrices used by the module to check whether the edit distances are below the threshold. Due to the structure of the distances matrices rows before the previous row may be discarded while the check computations are ongoing thus saving memory usage. A full definition of the DeltaTable class is provide in .

The Delta class defines the properties of objects that may be used to track the state of the module as it checks whether the edit distances are below their respective thresholds. A full definition of the Delta class is provided in .

For example module may be implemented by the text recognition corrections filter module of the search server system . The module may be implemented by the text recognition corrections filter of the mobile device .

Referring now to the exterior appearance of an exemplary mobile device that implements the text recognition correction filter shown in is illustrated. Briefly and among other things the device includes a processor configured to selectively collect user corrections to text recognition strings and pass them to a text recognition system for use as training data.

In more detail the hardware environment of the device includes a display for displaying text images and video to a user a keyboard for entering text data and user commands into the device a pointing device for pointing selecting and adjusting objects displayed on the display an antenna a network connection a camera a microphone and a speaker . Although the device shows an external antenna the device can include an internal antenna which is not visible to the user.

The display can display video graphics images and text that make up the user interface for the software applications used by the device and the operating system programs used to operate the device . Among the possible elements that may be displayed on the display are a new mail indicator that alerts a user to the presence of a new message an active call indicator that indicates that a telephone call is being received placed or is occurring a data standard indicator that indicates the data standard currently being used by the device to transmit and receive data a signal strength indicator that indicates a measurement of the strength of a signal received by via the antenna such as by using signal strength bars a battery life indicator that indicates a measurement of the remaining battery life or a clock that outputs the current time.

The display may also show application icons representing various applications available to the user such as a web browser application icon a phone application icon a search application icon a contacts application icon a mapping application icon an email application icon or other application icons. In one example implementation the display is a quarter video graphics array QVGA thin film transistor TFT liquid crystal display LCD capable of bit or better color.

A user uses the keyboard or keypad to enter commands and data to operate and control the operating system and applications that provide for interaction with text recognition systems. The keyboard includes standard keyboard buttons or keys associated with alphanumeric characters such as keys and that are associated with the alphanumeric characters Q and W when selected alone or are associated with the characters and 1 when pressed in combination with key . A single key may also be associated with special characters or functions including unlabeled functions based upon the state of the operating system or applications invoked by the operating system. For example when an application calls for the input of a numeric character a selection of the key alone may cause a 1 to be input.

In addition to keys traditionally associated with an alphanumeric keypad the keyboard also includes other special function keys such as an establish call key that causes a received call to be answered or a new call to be originated a terminate call key that causes the termination of an active call a drop down menu key that causes a menu to appear within the display a backward navigation key that causes a previously accessed network address to be accessed again a favorites key that causes an active web page to be placed in a bookmarks folder of favorite sites or causes a bookmarks folder to appear a home page key that causes an application invoked on the device to navigate to a predetermined network address or other keys that provide for multiple way navigation application selection and power and volume control.

The user uses the pointing device to select and adjust graphics and text objects displayed on the display as part of the interaction with and control of the device and the applications invoked on the device . The pointing device is any appropriate type of pointing device and may be a joystick a trackball a touch pad a camera a voice input device a touch screen device implemented in combination with the display or any other input device.

The antenna which can be an external antenna or an internal antenna is a directional or omni directional antenna used for the transmission and reception of radiofrequency RF signals that implement point to point radio communication wireless local area network LAN communication or location determination. The antenna may facilitate point to point radio communication using the Specialized Mobile Radio SMR cellular or Personal Communication Service PCS frequency bands and may implement the transmission of data using any number or data standards. For example the antenna may allow data to be transmitted between the device and a base station using technologies such as Wireless Broadband WiBro Worldwide Interoperability for Microwave ACCess WiMAX 3GPP Long Term Evolution LTE Ultra Mobile Broadband UMB High Performance Radio Metropolitan Network HIPERMAN iBurst or High Capacity Spatial Division Multiple Access HC SDMA High Speed OFDM Packet Access HSOPA High Speed Packet Access HSPA HSPA Evolution HSPA High Speed Upload Packet Access HSUPA High Speed Downlink Packet Access HSDPA Generic Access Network GAN Time Division Synchronous Code Division Multiple Access TD SCDMA Evolution Data Optimized or Evolution Data Only EVDO Time Division Code Division Multiple Access TD CDMA Freedom Of Mobile Multimedia Access FOMA Universal Mobile Telecommunications System UMTS Wideband Code Division Multiple Access W CDMA Enhanced Data rates for GSM Evolution EDGE Enhanced GPRS EGPRS Code Division Multiple Access 2000 CDMA2000 Wideband Integrated Dispatch Enhanced Network WiDEN High Speed Circuit Switched Data HSCSD General Packet Radio Service GPRS Personal Handy Phone System PHS Circuit Switched Data CSD Personal Digital Cellular PDC CDMAone Digital Advanced Mobile Phone System D AMPS Integrated Digital Enhanced Network IDEN Global System for Mobile communications GSM DataTAC Mobitex Cellular Digital Packet Data CDPD Hicap Advanced Mobile Phone System AMPS Nordic Mobile Phone NMP Autoradiopuhelin ARP Autotel or Public Automated Land Mobile PALM Mobiltelefonisystem D MTD Offentlig Landmobil Telefoni OLT Advanced Mobile Telephone System AMTS Improved Mobile Telephone Service IMTS Mobile Telephone System MTS Push To Talk PTT or other technologies. Communication via W CDMA HSUPA GSM GPRS and EDGE networks may occur for example using a QUALCOMM MSM7200A chipset with a QUALCOMM RTR6285 transceiver and PM7540 power management circuit.

The wireless or wired computer network connection may be a modem connection a local area network LAN connection including the Ethernet or a broadband wide area network WAN connection such as a digital subscriber line DSL cable high speed internet connection dial up connection T 1 line T 3 line fiber optic connection or satellite connection. The network connection may connect to a LAN network a corporate or government WAN network the Internet a telephone network or other network. The network connection uses a wired or wireless connector. Example wireless connectors include for example an INFRARED DATA ASSOCIATION IrDA wireless connector a Wi Fi wireless connector an optical wireless connector an INSTITUTE OF ELECTRICAL AND ELECTRONICS ENGINEERS IEEE Standard 802.11 wireless connector a BLUETOOTH wireless connector such as a BLUETOOTH version 1.2 or 3.0 connector a near field communications NFC connector an orthogonal frequency division multiplexing OFDM ultra wide band UWB wireless connector a time modulated ultra wide band TM UWB wireless connector or other wireless connector. Example wired connectors include for example an IEEE 1394 FIREWIRE connector a Universal Serial Bus USB connector including a mini B USB interface connector a serial port connector a parallel port connector or other wired connector. In another implementation the functions of the network connection and the antenna are integrated into a single component.

The camera allows the device to capture digital images and may be a scanner a digital still camera a digital video camera or other digital input device. In one example implementation the camera is a 3 mega pixel MP camera that utilizes a complementary metal oxide semiconductor CMOS .

The microphone allows the device to capture sound and may be an omni directional microphone a unidirectional microphone a bi directional microphone a shotgun microphone or other type of apparatus that converts sound to an electrical signal. The microphone may be used to capture sound generated by a user for example when the user is speaking to another user during a telephone call via the device . Conversely the speaker allows the device to convert an electrical signal into sound such as a voice from another user generated by a telephone application program or a ring tone generated from a ring tone application program. Furthermore although the device is illustrated in as a handheld device in further implementations the device may be a laptop a workstation a midrange computer a mainframe an embedded system telephone desktop PC a tablet computer a PDA or other type of computing device.

The CPU can be one of a number of computer processors. In one arrangement the computer CPU is more than one processing unit. The RAM interfaces with the computer bus so as to provide quick RAM storage to the CPU during the execution of software programs such as the operating system application programs and device drivers. More specifically the CPU loads computer executable process steps from the storage medium or other media into a field of the RAM in order to execute software programs. Data is stored in the RAM where the data is accessed by the computer CPU during execution. In one example configuration the device includes at least 128 MB of RAM and 256 MB of flash memory.

The storage medium itself may include a number of physical drive units such as a redundant array of independent disks RAID a floppy disk drive a flash memory a USB flash drive an external hard disk drive thumb drive pen drive key drive a High Density Digital Versatile Disc HD DVD optical disc drive an internal hard disk drive a Blu Ray optical disc drive or a Holographic Digital Data Storage HDDS optical disc drive an external mini dual in line memory module DIMM synchronous dynamic random access memory SDRAM or an external micro DIMM SDRAM. Such computer readable storage media allow the device to access computer executable process steps application programs and the like stored on removable and non removable memory media to off load data from the device or to upload data onto the device .

A computer program product is tangibly embodied in storage medium a machine readable storage medium. The computer program product includes instructions that when read by a machine operate to cause a data processing apparatus to store image data in the mobile device. In some embodiments the computer program product includes instructions that cause a data processing apparatus to collect and filtering text recognition system corrections from users of a text recognition system.

The operating system may be a LINUX based operating system such as a mobile device platform APPLE MAC OS X MICROSOFT WINDOWS NT WINDOWS 2000 WINDOWS XP WINDOWS MOBILE a variety of UNIX flavored operating systems or a proprietary operating system for computers or embedded systems. The application development platform or framework for the operating system may be BINARY RUNTIME ENVIRONMENT FOR WIRELESS BREW JAVA Platform Micro Edition JAVA ME or JAVA 2 Platform Micro Edition J2ME using the SUN MICROSYSTEMS JAVASCRIPT programming language PYTHONTM FLASH LITE or MICROSOFT .NET Compact or another appropriate environment.

The device stores computer executable code for the operating system and the application programs such as an email instant messaging a video service application a mapping application word processing spreadsheet presentation gaming mapping web browsing JAVASCRIPT engine or other applications. For example one implementation may allow a user to access the GMAIL email application an instant messaging application a video service application a mapping application or an imaging editing and presentation application. The application programs may also include a widget or gadget engine such as a TAFRITM widget engine a MICROSOFT gadget engine such as the WINDOWS SIDEBAR gadget engine or the KAPSULES gadget engine a YAHOO widget engine such as the KONFABULTOR widget engine the APPLE DASHBOARD widget engine a gadget engine the KLIPFOLIO widget engine an OPERA widget engine the WIDSETS widget engine a proprietary widget or gadget engine or other widget or gadget engine the provides host system software for a physically inspired applet on a desktop.

Although it is possible to provide for filtering of text recognition corrections using the above described implementation it is also possible to implement the functions according to the present disclosure as a dynamic link library DLL or as a plug in to other application programs such as an Internet web browser such as the FOXFIRE web browser the APPLE SAFARI web browser or the MICROSOFT INTERNET EXPLORER web browser.

The navigation module may determine an absolute or relative position of the device such as by using the Global Positioning System GPS signals the GLObal NAvigation Satellite System GLONASS the Galileo positioning system the Beidou Satellite Navigation and Positioning System an inertial navigation system a dead reckoning system or by accessing address internet protocol IP address or location information in a database. The navigation module may also be used to measure angular displacement orientation or velocity of the device such as by using one or more accelerometers.

The operating system can generally be organized into six components a kernel libraries an operating system runtime application libraries system services and applications . The kernel includes a display driver that allows software such as the operating system and the application programs to interact with the display via the display interface a camera driver that allows the software to interact with the camera a BLUETOOTH driver a M Systems driver a binder IPC driver a USB driver a keypad driver that allows the software to interact with the keyboard via the keyboard interface a WiFi driver audio drivers that allow the software to interact with the microphone and the speaker via the sound interface and a power management component that allows the software to interact with and manage the power source .

The BLUETOOTH driver which in one implementation is based on the BlueZ BLUETOOTH stack for LINUX based operating systems provides profile support for headsets and hands free devices dial up networking personal area networking PAN or audio streaming such as by Advance Audio Distribution Profile A2DP or Audio Video Remote Control Profile AVRCP . The BLUETOOTH driver provides JAVA bindings for scanning pairing and unpairing and service queries.

The libraries include a media framework that supports standard video audio and still frame formats such as Moving Picture Experts Group MPEG 4 H.264 MPEG 1 Audio Layer 3 MP3 Advanced Audio Coding AAC Adaptive Multi Rate AMR Joint Photographic Experts Group JPEG and others using an efficient JAVA Application Programming Interface API layer a surface manager a simple graphics library SGL for two dimensional application drawing an Open Graphics Library for Embedded Systems OpenGL ES for gaming and three dimensional rendering a C standard library LIBC a LIBWEBCORE library a FreeType library an SSL and an SQLite library .

The operating system runtime includes core JAVA libraries and a Dalvik virtual machine . The Dalvik virtual machine is a custom virtual machine that runs a customized file format .DEX .

The operating system can also include Mobile Information Device Profile MIDP components such as the MIDP JAVA Specification Requests JSRs components MIDP runtime and MIDP applications as shown in . The MIDP components can support MIDP applications running on the device .

With regard to graphics rendering a system wide composer manages surfaces and a frame buffer and handles window transitions using the OpenGL ES and two dimensional hardware accelerators for its compositions.

The Dalvik virtual machine may be used with an embedded environment since it uses runtime memory very efficiently implements a CPU optimized bytecode interpreter and supports multiple virtual machine processes per device. The custom file format .DEX is designed for runtime efficiency using a shared constant pool to reduce memory read only structures to improve cross process sharing concise and fixed width instructions to reduce parse time thereby allowing installed applications to be translated into the custom file formal at build time. The associated bytecodes are designed for quick interpretation since register based instead of stack based instructions reduce memory and dispatch overhead since using fixed width instructions simplifies parsing and since the bit code units minimize reads.

The application libraries include a view system a resource manager content providers and a text recognition corrections filter . The system services includes a status bar an application launcher a package manager that maintains information for all installed applications a telephony manager that provides an application level JAVA interface to the telephony subsystem a notification manager that allows all applications access to the status bar and on screen notifications a window manager that allows multiple applications with multiple windows to share the display and an activity manager that runs each application in a separate process manages an application life cycle and maintains a cross application history.

The applications include a home application a dialer application a contacts application and a browser application .

The telephony manager provides event notifications such as phone state network state Subscriber Identity Module SIM status or voicemail status allows access to state information such as network information SIM information or voicemail presence initiates calls and queries and controls the call state. The browser application renders web pages in a full desktop like manager including navigation functions. Furthermore the browser application allows single column small screen rendering and provides for the embedding of HTML views into other applications.

Some processes can be persistent. For example processes associated with core system components such as the surface manager the window manager or the activity manager can be continuously executed while the device is powered. Additionally some application specific process can also be persistent. For example processes associated with the dialer application may also be persistent.

The processes implemented by the operating system kernel may generally be categorized as system services processes dialer processes browser processes and maps processes . The system services processes include status bar processes associated with the status bar application launcher processes associated with the application launcher package manager processes associated with the package manager activity manager processes associated with the activity manager resource manager processes associated with a resource manager that provides access to graphics localized strings and XML layout descriptions notification manger processes associated with the notification manager window manager processes associated with the window manager core JAVA libraries processes associated with the core JAVA libraries surface manager processes associated with the surface manager Dalvik virtual machine processes associated with the Dalvik virtual machine LIBC processes associated with the LIBC library and text recognition correction filter processes associated with the text recognition correction filter application library .

The dialer processes include dialer application processes associated with the dialer application telephony manager processes associated with the telephony manager core JAVA libraries processes associated with the core JAVA libraries Dalvik virtual machine processes associated with the Dalvik Virtual machine and LIBC processes associated with the LIBC library . The browser processes include browser application processes associated with the browser application core JAVA libraries processes associated with the core JAVA libraries Dalvik virtual machine processes associated with the Dalvik virtual machine LIBWEBCORE processes associated with the LIBWEBCORE library and LIBC processes associated with the LIBC library .

The maps processes include maps application processes core JAVA libraries processes Dalvik virtual machine processes and LIBC processes . Notably some processes such as the Dalvik virtual machine processes may exist within one or more of the systems services processes the dialer processes the browser processes and the maps processes .

Computing device includes a processor memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . Each of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . In one implementation the storage device may be or contain a computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device memory on processor or a propagated signal.

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of functions is exemplary only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as device . Each of such devices may contain one or more of computing device and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory an input output device such as a display a communication interface and a transceiver among other components. The device may also be provided with a storage device such as a microdrive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide for example for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display may be for example a TFT LCD Thin Film Transistor Liquid Crystal Display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provide in communication with processor so as to enable near area communication of device with other devices. External interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the computing device . The memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory may also be provided and connected to device through expansion interface which may include for example a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provide as a security module for device and may be programmed with instructions that permit secure use of device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory memory on processor or a propagated signal that may be received for example over transceiver or external interface .

Device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA or GPRS among others. Such communication may occur for example through radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition GPS Global Positioning System receiver module may provide additional navigation and location related wireless data to device which may be used as appropriate by applications running on device .

Device may also communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. Audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smartphone personal digital assistant or other similar mobile device.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

A number of embodiments have been described. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the invention. For example text recognition system may be implemented on a mobile device e.g. mobile device along with a text recognition corrections filter. The local text recognition system may be adapted to speech or handwriting patterns of a particular user in part by training with corrections selected using the text recognition corrections filter.

In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other embodiments are within the scope of the following claims.

