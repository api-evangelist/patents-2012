---

title: Adaptable mass data message receipt and handling system and method
abstract: Compact event code messages are generated by sources, which may include human users, system components or any other sources. The event code messages include an event type, a source type, and a date. The messages are initially processed based on this information. The messages also include payload data that is not considered during initial processing, rendering initial processing fast and efficient. The messages may then be listed or queued and further processed by specialize event handlers, which may consider the payload data and may draw upon other resources. The system components, including the event handlers may be increased or decreased as needed and dynamically as messages are received and processed. New events, rules for event processing, event handlers and other system components may be added at any time to expend the number and types of events that can be handled, and the particular handling performed on them.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08954990&OS=08954990&RS=08954990
owner: NBCUniversal Media, LLC
number: 08954990
owner_city: Wilmington
owner_country: US
publication_date: 20121019
---
The present invention relates generally to the field of data handling systems for receiving and processing a large number of messages or events. The invention relates particularly to a fast and efficient technique based upon eventing paradigms that allow for incoming messages or events to be initially processed listed or cataloged and later processed in a manner that allows for flexible scaling expansion and contraction of available resources.

A wide array of systems and techniques have been developed for handling messages and events or more generally discrete data transmissions . These include Internet packet transmission and receipt packet handling email and text message distribution and handling and so forth. A special class of such systems has been adapted for receiving event data or messages from users in particular communities particularly users of specific games activities software and viewers and listeners who tune in to broadcast Internet and other content dissemination sources. Special challenges exist in handling this type of information. First a very wide array of sources of events may need to be accommodated. Further the range of different events may be very broad depending upon the particular sources and the activities concerned. Moreover substantial periods may go by when little or no activity is present followed by periods of greatly increased activity.

By way of example users of on and off lined gaming may interact with games in ways that create a significant number of events. These events may be transmitted to a monitoring entity cataloged tracked and so forth in ways that affect the player or other players. In the television broadcast arena popular shows such as talent competitions may call for votes from viewers that will arrive in vast numbers in a relatively short period of time. In many web environments it may be useful to detect track and analyze a myriad of events as minute as clicking on a particular link or resource. Many other examples of such massive event creation can be provided with the number and diversity of such events increasing constantly.

Challenges with this type of event creation communication cataloging and processing include the ability to respond to a vast array of different sources and events in a way that allows for the system to respond quickly with little lag time despite significant increases and decreases in the number and types of events. Systems exist for expansion and contraction of such resources but improvements are needed such as in the basis and manner of making such flexible changes in resources as well as in the manner in which the events are created communicated and initially processed to permit adequate responses and alteration of the allocated resources.

The present invention provides innovations in the creation communication and response to a wide range of events to respond such needs. In accordance with aspects of the invention a method for processing event data comprises receiving event code messages from a plurality of sources the event code messages comprising code indicative of an event type an event source a date and a payload. The event code messages are added to a list of messages to be processed. The listed messages are initially processed by applying rules to the listed messages based upon the event type the event source and the date. The initially processed messages are added to a results list. Further processing is then performed on the messages from the results list based upon the initial processing.

In accordance with another aspect of the invention a method for processing event data comprises receiving event code messages from a plurality of sources the event code messages comprising code indicative of an event type an event source a date and a payload. The event code messages are added to a list of messages to be processed and the listed messages are initially processed by applying rules to the listed messages based upon the event type the event source and the date. The initially processed messages are added to a results list. Event handler resources are dynamically increased or decreased for further processing of the initially processed events based upon a parameter derived from the list of messages or the results list. Further processing is performed on the messages from the results list by event handlers based upon the initial processing.

The invention also provides a system for processing event data that comprises an event code message initial processing subsystem comprising a component that receives event code messages from a plurality of sources the event code messages comprising code indicative of an event type an event source a date and a payload the initial processing subsystem being configured to initially process received messages by applying rules to the listed messages based upon the event type the event source and the date. A plurality of specialized event handlers are configured to perform further processing of the messages based upon the initial processing.

Turning to drawings illustrates and exemplary data processing system designed to handle large volumes of event messages from a variety of sources. In the illustration of event sources are indicated by reference numeral . These sources may be very diverse in nature and may change during use of the system making the system highly adaptable to different sources types of sources and types of events. In general the sources will interact with separate devices linked by one or more networks such as the Internet. The sources may include such devices as personal computers laptop computers tablet computers personal digital assistance cellular telephones multi function devices televisions or any other suitable device. The sources may also include however elements of the data processing system itself such as servers event handlers discussed below and so forth.

The event sources produce compact event code messages as indicated generally by reference numeral . These event code messages are highly efficient insomuch as they provide sufficient detail for initial processing of the events but may make reference to other resources to allow much more detailed analysis and processing after initial receipt and analysis. More detail is provided below regarding the compact event code messages. In presently contemplated embodiments these messages are generated by interaction of the event sources with system resources such as web services. The compact event code messages are communicated to an event communication system as indicated by reference numeral . This event communication system may provide the web services for a generation of the messages. The communication system also allows for receipt of the messages cataloging or listing of the messages and passing the messages along to an event receipt processing system for initial processing. The event communication system itself may comprise a series of servers databases and relevant software to permit creation of the event messages and receipt of the messages. As discussed in greater detail below because very high volumes of messages may occur in short durations followed by durations with relatively fewer messages the event communication system is adapted for receipt of the messages regardless of the volume as well as for rapid handling of the messages and listing or queuing of the messages for further processing. The event communication system may be dynamically expanded and contracted as also discussed below to permit substantial variation in message volume.

The event receipt processing system handles initial processing of the received messages. Essentially this system will analyze certain code contained in the messages and will write to and read from tables and lists to perform initial analysis on how the individual messages should be processed. Because the event sources and the nature of the messages may vary substantially and because these can be altered at will by system administrators the event receipt processing system is highly adaptable by reference to the tables and lists and by reference to rules which are applied to initial processing. In general the rules will be pre established and may be altered during evolution of the system. The rules may be set to apply to particular types of messages particular sources particular events particular actions and so forth. The initial processing performed by the event receipt processing system will be based upon such rules and following application of the rules the initial processing will rapidly direct the events for downstream processing.

One or more flexible downstream processing systems then perform specific actions with respect to the event messages. These actions may be defined by additional rules implemented by the downstream processing systems as well as by reference to databases tables and so forth as indicated by reference numeral . The resources drawn upon by the flexible downstream processing systems may be based upon the particular compact data that comprises the event code messages. It may also be based upon payload data that is not initially considered during the initial processing but that defines specific content activities and so forth to be performed by the processing systems. The processing systems may perform simple operations such as noting events and lists associating events with particular sources associating similar events with one another counting events monitoring events and so forth. Here again as with other resources the flexible downstream processing systems are indicated as flexible insomuch as they may be expanded and contracted at will including during real time operation of the system.

As used herein the real time expansion or contraction of resources is intended to indicate that these resources may be altered in number and capacity based upon such factors as the number of events being created in particular periods the number of events being listed and initially processed time or periods or delays for processing events and so forth. In addition real time alteration of these resources implies that the resources are changed during the receipt and processing of event messages making the system highly adaptable and dynamic in nature. For example as the number of events or the time for processing the events increases a rate of increase can be analyzed to increase the resources attributable to downstream processing. The same is true for contraction of these resources as event receipt decreases. Additional detail is provided below regarding this feature of the invention.

As indicated at reference numeral in a presently contemplated embodiment interaction for the creation of event messages begins with a web service call. The web service call draws upon an event application programming interface API as indicated at step . It should be noted that this is only one possible entry point for eventing in the system although it is contemplated that this may be a significant point particularly where human users or sources are involved. The event API and web service call interact with the source to collect necessary information from the source for generation of the event code. For example as summarized below the compact event code may include indication of the source indication of an event type indication of the date and certain other information that may be considered in a payload of the message. In the presently contemplated embodiment the API call adds a message onto a queue for initial processing. The events thus flow into a receipt sub system which comprises and eventing component . Other event sources are illustrated in such as a system source and various other sources . The system source may comprise any one of the components of the data processing system and may serve to flag errors processing loads traffic monitoring or any other function. Other sources may include for example automated sources that can also generate events independent of human participants.

The eventing component monitors the queue of event messages and extracts the messages from the queue for creation of an event table as discussed below. In a presently contemplated embodiment the eventing component draws the oldest message and proceeds accordingly in the queue. Here again it should be noted that although one eventing component and receipt sub system is illustrated more than one and indeed many such sub systems and components may be employed. Moreover these resources may also be expanded and contracted depending upon the anticipated or actual flow of events from the sources.

Initial processing continues through an initial processing sub system that makes use of a rule engine . The rule engine draws upon rules and applies these rules to the compact event code messages as they are drawn from the incoming queue. To process the events relevant rules are predefined and are related to event type source type and a date or date range as described in more detail below. The rules will typically be fairly straightforward at this point and may comprise for example simple listings counts adding of names or events to a running total and so forth. More sophisticated rules may also be envisaged and these may be defined in advance based upon the particular event definition to which the rules apply. As before the initial processing sub system and the rule engine may comprise a single system or multiple systems may be employed each being expandable or contractable depending upon the system load.

The initial processing sub system thus completes the initial processing based upon the compact event code messages and allows for subsequent typically more detailed processing to be carried out by specialized event handlers as indicated by reference numerals . These specialized event handlers will typically be specialized in the sense that they are adapted for handling specific types of events specific sources specific actions or activities to be performed based upon the event code messages and so forth. The initial processing and passing along of the messages for specialized event handling is particularly important insomuch as it allows for adaptation and expansion contraction of the system to newly created or different events rapid intake and initial processing of events followed by subsequent often slower processing by specialized event handlers application of more complex rules after initial receipt and processing of the events and so forth. In general the specialized event handlers may draw upon or write to a wide range of resources as indicated generally by reference numeral . For example based upon certain actions content facts groups and so forth encoded in the payload of the event code messages additional resources may be drawn upon such as to provide content to users log certain key events taking place as indicated by the messages and so forth. The resources may also allow for recording a wide range of activities by the users and their devices and these activities may be analyzed or processed to carry out more complex functionality such as tracking play and points of interactive game players tracking clicking events to indicated interest in certain subject matter tracking of votes in response to a competition and so forth. It should also be noted that as mentioned above as additional events become of interest or are created these may be added to the system along with one or more specialized event handlers to perform detailed processing on the events. Finally it should be noted that any of the specialized event handlers may be designated for specialized handling of certain events or the events may be handled by more than one of the handlers where appropriate. This may allow for different handling of individual events as well as for expansion and contraction of the system as desired such as in response to system load.

By way of example below are listed a series of exemplary event type codes that may comprise the compact event code messages.

In each of these exemplary event types data is provided that indicates a domain a detail or action and a namespace or site. For instance example 1 indicates that a generic video is being watched on a broadcast network. Example 2 indicates that a site article for a particular television program is being shared on a social networking site. Example 3 indicates that a human user has uploaded a profile avatar for a particular television series website of a broadcast network. Example 4 indicates that a human user is voting for a contestant in a televised talent competition program via a social networking site. Example 5 indicates that a user obtained a high score on a game oriented to a particular television series via a site for the series on a network. Example 6 indicates that an exception event has occurred on a subsystem in the environment of a television network. Finally example 7 indicates that a subsystem database has become unavailable in a television network environment. Clearly certain of these event types are illustrative of user activities while the last two are illustrative of system generated events. Each of the event types will typically be pre defined however along with rules for the events. It should be noted from these examples that many different event types may be defined for many different combinations of domains details or activities and namespaces.

Moreover source type codes may include for example a person a server a community or group a site and so forth. The date or date range component of the event messages is self explanatory.

By way of further example below are examples of XML code that may define event messages each including event types source types and date or date ranges of the types discussed above 

Continuing with at block the event messages are received processed and listed as discussed below and as discussed in greater detail below with reference to . Once initially processed and listed then specialized processing may take place as indicated at step . Based upon the initial processing and the specialized processing decisions may be made as indicated at step whether to add resources or to withdraw resources from any one of the components or processes of the system. If resources are sufficient for the present purposes the specialized processing may continue. If the resources are insufficient or superfluous the decision may result in spawning new resources or collapsing the resources as indicated at block in . It should be noted that this adaptation of the system is carried out in real time or near real time that is as the event messages are received and initially processed. It should also be pointed out that the specialized processing carried out at block occurs concurrently with the receipt of additional event messages.

Based upon this event table then the rule engine applies one or more rules that are executed to produce result entries. These results are the consequence of application of the rules on the coded messages and a result may require several event occurrences to be fully completed. Upon completion application of the rules by the rule engine then a source rule summary is created as indicated by reference numeral . In this presently contemplated embodiment if this is the first time the specific combination of the particular source and a particular rule have been applied a new entry is created into the summary otherwise and existing entry is updated. Each result is a further maintained in a list of all the events that contributed to it via a result event association table . This result event association table may be thought of as a master list that contains all events whereas in the presently contemplated embodiment the source rule summary only records the most recent result which contributed to the summary rather than all results. As the source rule summary entries are created they are placed on a rule summary update queue as indicated by reference numeral . This makes them available for further processing by downstream systems such as for monitoring tabulation analysis and so forth. As noted above this further processing is carried out by one or more event handlers as indicated by reference numeral .

The initial processing activities may be summarized as beginning with the receipt of the event code messages as indicated by reference numeral followed by listing queuing or otherwise storing the received messages. Based upon the received and stored messages then the initial rules are applied as indicated by reference numeral . As with the basic definition of the events the rules apply at step result from definition of the rules as indicated by block . Such definition will typically take place at the time the different event types are created or defined although rules may be changed added or removed during operation of the system. Finally the initial processing activities culminate with listing queuing or otherwise cataloging the initially processed event code messages and the results of application of the rules.

Specialized processing may begin with drawing the event code messages from the queue as indicated at step . Specialized processing is then performed as indicated at step and this processing is carried out by event handlers that have been created as indicated by block . As noted above the different types of handlers their activities the resources drawn upon by each of the handlers and the resources represented by the individual handlers or collection of handlers may be expanded or contracted depending upon such factors as event loads system loads time or delay in processing and so forth. The specialized processing proceeds with application of specialized rules and actions as indicated by step . Here again these rules and actions will have been defined in advance as indicated by block . The rules and actions may vary widely depending upon the nature of the event and the way in which the system designer intends the event to be handled. At block the system may monitor for the processing of the event handlers or indeed of any one or all of the various components and functions of the system. Based upon such monitoring which may be performed cyclically or continuously through operation of the components events may be prioritized resources may be expanded or contracted and so forth as indicated at step . For example certain types of events may be handled with higher priority than others and in presently contemplated embodiments events having source types that are persons or communities may be handled with higher priority than system originating events for example.

While only certain features of the invention have been illustrated and described herein many modifications and changes will occur to those skilled in the art. It is therefore to be understood that the appended claims are intended to cover all such modifications and changes as fall within the true spirit of the invention.

