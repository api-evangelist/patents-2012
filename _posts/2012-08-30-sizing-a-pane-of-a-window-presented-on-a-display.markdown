---

title: Sizing a pane of a window presented on a display
abstract: Sizing a pane of a window presented on a display. The window is presented to a user on the display. Within the window, the pane is presented at a first pane size. A user input is detected from the user resizing the window. Responsive to detecting the user input resizing the window, a new size of the window resulting from the user input resizing the window is detected. Data is accessed from a machine-readable storage device corresponding to at least one user-defined pane size previously defined by the user to whom the window is presented, wherein the user-defined pane size corresponds to a particular window size. Based on the accessed user-defined pane size(s), a second pane size of the pane at which the pane is to be presented in the newly sized window is determined. The pane is presented in the newly sized window at the second pane size.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09223591&OS=09223591&RS=09223591
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09223591
owner_city: Armonk
owner_country: US
publication_date: 20120830
---
Arrangements described herein relate to a graphical user interface and more particularly to presentation of panes within a window.

A graphical user interface GUI is a type of user interface that allows users to interact with electronic devices using images rather than text commands. GUIs can be used in computers hand held devices e.g. smart phones portable media players gaming devices office equipment small appliances etc. A GUI represents the information and actions available to a user through graphical icons and visual indicators such as secondary notation as opposed to text based interfaces typed command labels or text navigation. The actions are usually performed through direct manipulation of the graphical elements.

Typically a GUI uses windows to facilitate user interaction with the GUI. Windows are two dimensional objects arranged on a presentation plane commonly referred to as a desktop. Windows oftentimes include other graphical objects such as a menu bar toolbars controls icons and often a work area. In a main work area of the window a document image folder contents or other main object is displayed. Around the main work area for example within boundary areas of the window there may be other window areas sometimes smaller than the main work area referred to as panes or panels showing relevant information or options related to information presented in the main work area. Generally speaking the main work area of a single document interface holds a main object. Child windows in multiple document interfaces and tabs in web browsers can make several similar documents or main objects available within a single main application window.

One or more embodiments disclosed within this specification relate to sizing a pane of a window presented on a display. An embodiment can include presenting the window on the display to a user and presenting within the window the pane at a first pane size. A user input is detected from the user resizing the window. Responsive to detecting the user input resizing the window a new size of the window resulting from the user input resizing the window is detected. Data is accessed from a machine readable storage device corresponding to at least one user defined pane size previously defined by the user to whom the window is presented wherein the user defined pane size corresponds to a particular window size. Based on the accessed user defined pane size s a second pane size of the pane at which the pane is to be presented in the newly sized window is determined. The pane is presented in the newly sized window at the second pane size.

Another embodiment can include a system including a processor configured to initiate executable operations. Such operations can include presenting a window on a display to a user and presenting within the window a pane at a first pane size. The operations further can include detecting a user input from the user resizing the window and responsive to detecting the user input resizing the window detecting a new size of the window resulting from the user input resizing the window and accessing from a machine readable storage device data corresponding to at least one user defined pane size previously defined by the user to whom the window is presented wherein the user defined pane size corresponds to a particular window size The operations further can include determining via a processor based on the accessed at least one user defined pane size a second pane size of the pane at which the pane is to be presented in the newly sized window and presenting the pane in the newly sized window at the second pane size.

Another embodiment can include a computer program product for sizing a pane of a window presented on a display. The computer program product can include a computer readable storage medium having stored thereon program code that when executed configures a processor to perform executable operations. Such operations may include presenting a window on a display to a user and presenting within the window a pane at a first pane size. A user input is detected from the user resizing the window. Responsive to detecting the user input resizing the window a new size of the window resulting from the user input resizing the window is detected. Data is accessed from a machine readable storage device corresponding to at least one user defined pane size previously defined by the user to whom the window is presented wherein the user defined pane size corresponds to a particular window size. Based on the accessed user defined pane size s a second pane size of the pane at which the pane is to be presented in the newly sized window is determined. The pane is presented in the newly sized window at the second pane size.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied e.g. stored thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk drive HDD a solid state drive SSD a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM a digital versatile disc DVD an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing. Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer other programmable data processing apparatus or other devices create means for implementing the functions acts specified in the flowcharts and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowcharts and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowcharts and or block diagram block or blocks.

For purposes of simplicity and clarity of illustration elements shown in the figures have not necessarily been drawn to scale. For example the dimensions of some of the elements may be exaggerated relative to other elements for clarity. Further where considered appropriate reference numbers are repeated among the figures to indicate corresponding analogous or like features.

For purposes of explanation specific nomenclature is set forth to provide a thorough understanding of the various inventive concepts disclosed herein. However the terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the term sash means a moveable vertical or horizontal bar used to adjust a size of a pane or panel within a window presented on a display via a graphical user interface. As used herein the term window manager means system software that controls the placement and appearance of windows within a windowing system in a graphical user interface. As used herein the term windowing system means system software that supports the implementation of window managers and provides basic support for graphics hardware pointing devices e.g. mice and keyboards. As used herein the term user means a human being interfacing with a processing system. As used herein the term area means a quantity that expresses the extent of a two dimensional surface or shape in a plane. As used herein the term real time means a level of processing responsiveness that a user or system senses as sufficiently immediate for a particular process or determination to be made or that enables the processor to keep up with some external process e.g. a user input resizing a window .

In accordance with the arrangements described herein a graphical user interface GUI presents one or more windows on a display to facilitate user interactions with one or more applications. In illustration a window for a particular application may be presented on or over a desktop as is known to those skilled in the art. The application may provide a main work area. Around or within the main work area for example within boundary areas of the window the application may provide other window areas referred to as panes or panels showing relevant information or options related to information presented in the main work area. Hereinafter and in the claims that follow panes and panels collectively will be referred to as panes. Thus reference to a pane hereinafter and the claims that follow means reference to a pane and or reference to a panel.

Within a window at least one boundary of a pane is defined by a respective sash. The sash is configured to be user moveable enabling the user to move the sash to selectively adjust the size of the pane e.g. height width and or area . When the user moves the sash from an original position to a new position the user defined size of the pane resulting from the sash being moved and the size of the window when the sash is moved is recorded. Such data recordation can occur each time the user moves the sash soon after opening or resizing the window or within a particular number of user related events after the window is opened or resized by the user. Thus an understanding of the user s panel size preferences with respect to window size will be understood. Each time the user enters an input to resize a particular window in which the pane is presented the GUI will resize the pane according to the window size based on the understanding of the user s preferences gleaned from the recorded data.

In one arrangement the pane sizing service can be a component of the GUI. The pane sizing service can be exposed to applications via an application programming interface API though this need not be the case. In another arrangement the pane sizing service can be implemented as software distinct from the GUI though communicative linked to the GUI via the operating system. In illustration the pane sizing service can be executed by the operating system as a stand alone alone application or as a component of an application with which the user interfaces in the window in which the user resizable pane is presented. For web based applications the pane sizing service can be exposed using a JavaScript library for example a Dojo library.

The window pane size data table can be a data table exposed to the pane sizing service in any suitable manner. For example the window pane size data table can be a data table defined within the GUI a data table within the operating system a data table within a database or a data table hosted elsewhere.

The sash can be configured to be user moveable. For example the user can select the sash for example by placing a cursor over the sash and depressing a left mouse button and drag the sash to a desired position for example by moving the mouse left right up and or down. As the sash is moved the size of the pane will change. Thus the user can move the sash from one position to another to resize the pane . In lieu of using a mouse to move the sash the user may use a touchpad a trackball or any other suitable pointing device. In another arrangement the user can enter particular keystrokes via a keyboard to move the sash .

Referring both to and in operation the windowing system can detect the user input to move the sash within the window and can communicate data to the window manager corresponding to the user input. For example the data can indicate the type of user input and a position of a pointer as the pointer is moved. Such position can be indicated by a sash movement indicator . Based on this data the window manager knowing the position of the window on the user s desktop and the position of the sash within the window before the user input can process the data to move the sash from its original position to a new position thereby resizing the pane . As the data is received the window manager can update window presentation data communicated to the windowing system to present the window and the pane on the display as the pane is being resized.

When the user input is complete e.g. when the user releases the left mouse button the window manager can generate a pane resize event which can be detected by the pane sizing service . In response to the pane resize event the pane sizing service can determine the size of the window the size of the pane and the application with which the window presently is associated. The pane sizing service store such window pane size data including an identifier that identifies the application to the window pane size data table . To determine the size of the window the size of the pane and the application the pane sizing service can retrieve such data from the window manager for example by querying the window manager . In another arrangement the window manager can communicate the window pane size data to the pane sizing service when the pane resize event is generated.

The window pane size data can represent the respective sizes of the window and the pane in any suitable manner. For example the size of the window can be represented using one or more linear dimensions such as a width dimension A a height dimension B and or a diagonal dimension C or represented using an area value corresponding to the area of the window . The linear dimension s and or area value can be specified as numbers of pixels as percentages with respect to the desktop linear dimension s and or area of the desktop or as any other suitable values.

The size of the pane also can be represented using one or more linear dimensions such as a width dimension D a height dimension E and or a diagonal dimension F or represented using an area value corresponding to the area of the pane . In one arrangement the linear dimension s and or area value of the size of the pane can be specified as numbers of pixels. In another arrangement the linear dimension s and or area value of the size of the pane can be specified as percentages with respect to the window linear dimension s and or area of the window or with respect to the desktop linear dimension s and or area of the desktop . Still the linear dimension s and or area value can be specified using any other suitable values and the present arrangements are not limited in this regard. In an arrangement in which the sash is oriented vertically the width dimension D can identify a location of the sash in the window . In an arrangement in which the sash is oriented horizontally the corresponding height dimension can identify a location of the sash in the window . Further in an arrangement in which the pane is bounded by a plurality of sashes for example on two or more sides the size of the pane can be represented by respective dimensions that indicate the locations of the sashes though this need not be the case.

Regardless of how the window pane size data represents the respective sizes of the window and the pane the window pane size data represent a correlation between the size of the pane as selected by the user and the size of the window for the particular application . Moreover additional window pane size data can be stored to the window pane size data table each time the user resizes the pane after the window has been resized or opened. In this regard the pane sizing service can be configured to detect pane resize events for a particular period of time after the window is resized or opened within a particular number of user interactions with the window after the window is resized or opened or prior to a particular type of user interaction with the window being detected. For instance the pane sizing service can be configured to detect pane resize events prior to the user inputting data or a certain amount of data into the main work area . Thus additional window pane size data can be accumulated over time and can be used by the pane sizing service to automatically resize the pane when the window is opened or resized.

Referring both to and . The window can be presented having a particular size and the pane can be presented in the window also having a particular size. A user may choose to resize the window for example to change the width of the window change the height of the window or change the diagonal size of the window. Such resizing is represented by respective window resize indicators .

The windowing system can detect the user input resizing the window and can communicate data to the window manager corresponding to the user input. For example the data can indicate the type of user input and a position of a pointer as the pointer is moved. Such position can be indicated by a respective indicator . Based on this data the window manager knowing the position of the window on the user s desktop before the user input can process the data to resize the window from an original size to a new size. As the data is received the window manager can update window presentation data communicated to the windowing system to present the window on the display as the window is being resized.

When the user input is complete e.g. when the user releases the left mouse button the window manager can generate a window resize event which can be detected by the pane sizing service . In response to the window resize event the pane sizing service can determine the new size of the window for example by retrieving such data from the window manager . As noted the pane sizing service can query the window manager for the new window size data or the window manager can communicate the new window size data to the pane sizing service when the window resize event is generated.

Further the pane sizing service can access from the window pane size data table previously stored data pertaining to one or more user defined pane sizes previously defined by the user to whom the window is presented. Each user defined pane size can correspond to a respective particular window size and a particular application . Based on this data and the new size of the window the pane sizing service can determine a pane size for the pane that is appropriate for the new size of the window . The pane sizing service can communicate the pane size to the window manager . In response the window manager can update window presentation data communicated to the windowing system to present the pane at the indicated pane size .

In one arrangement rather than waiting for the user to complete the window resize before the window manager generates a window resize event the window manager can generate a series of window resize events as the window is being resized. The pane sizing service can access the window resize events in real time and generate a corresponding series of pane sizes which the window manager can process to update the window presentation data in real time. Accordingly as the user resizes the window the pane can be automatically resized in real time which will appear to the user as a smooth resizing of the pane as the user resizes the window .

In one arrangement to determine a pane size for the pane that is appropriate for the new size of the window the pane sizing service can access prior window pane size data corresponding to a plurality of user defined pane sizes for the particular application each of the plurality of user defined pane sizes corresponding to a respective window size. Further the pane sizing service can interpolate the new pane size for the pane from the plurality of user defined pane sizes. For example the pane sizing service can identify in the data at least one of the respective window sizes that is smaller than the newly sized window and select at least a first of the respective user defined pane sizes corresponding to that smaller window. The pane sizing service also can identify in the data at least one of the respective window sizes that is larger than the newly sized window and select at least a second of the respective user defined pane sizes corresponding to that larger window. The pane sizing service can interpolate the new pane size from the data corresponding to at least the first and second of the respective user defined pane sizes.

In another arrangement to determine a pane size for the pane that is appropriate for the new size of the window the pane sizing service can access prior window pane size data corresponding to a plurality of user defined pane sizes associated with the application each of the plurality of user defined pane sizes corresponding to a respective window size. Based on the plurality of user defined pane sizes and the respective window sizes the pane sizing service can generate an equation that correlates pane size to window size and apply the equation to determine the new pane size for the pane . The equation can be generated for example using least squares approach to fit the equation to the data or any other suitable approach to automatically generating an equation. In this regard although the equation may be linear this is not always the case. For example the equation may be a quadratic equation a cubic equation a quartic equation or any other type of equation.

By way of example there may be a minimum size of the pane the user chooses regardless of how small the window is or a maximum size of the pane the user chooses regardless of how large the window is. Moreover the user s selection of pane sizes need not directly correlate to the size of the window . For example when the window is 25 of the size of the desktop the user may select the pane to be 40 of the size of the window . When the window is 50 of the size of the desktop the user may select the pane to be 25 of the size of the window . When the window is 75 of the size of the desktop the user may select the pane to be 20 of the size of the window . The equation that correlates pane size to window size can be generated to according to such user preferences.

In some instances the user s previous selections of pane sizes may be somewhat erratic. For example at one point when the window size was 420 pixels the user may have chosen a pane size of 25 of the window size while at another point when the window size was 421 pixels the user may have chosen a pane size of 99 of the window size and so on. In this example the window sizes are approximately the same but the pane size data is radically different. To prevent radically different pane sizes from being presented in the window at various times when the window is approximately the same size statistical smoothing can be performed on the pane size data. For example pane size data for an approximate window size can be averaged or pane size data radically different than other pane size data for an approximate window size can be ignored. For instance pane size data outside of a standard deviation value can be ignored.

The memory elements can include one or more physical memory devices such as for example local memory and one or more bulk storage devices . Local memory refers to RAM or other non persistent memory device s generally used during actual execution of the program code. The bulk storage device s can be implemented as a hard disk drive HDD solid state drive SSD or other persistent data storage device. The processing system also can include one or more cache memories not shown that provide temporary storage of at least some program code in order to reduce the number of times program code must be retrieved from the bulk storage device during execution.

Input output I O devices such as a display a pointing device and optionally a keyboard can be coupled to the processing system . The I O devices can be coupled to the processing system either directly or through intervening I O controllers. For example the display can be coupled to the processing system via a graphics processing unit GPU which may be a component of the processor or a discrete device.

As pictured in the memory elements can store the components of the system of namely the windowing system the window manager the pane sizing service the window pane size data table and the application s . Being implemented in the form of executable program code these components of the system can be executed by the processing system and as such can be considered part of the processing system .

At step a user input from the user resizing the window of the window can be detected. Responsive to detecting the user input resizing the window at step a new size of the window resulting from the user input resizing the window can be detected. At step data corresponding to at least one user defined pane size previously defined by the user to whom the window is presented can be accessed from a machine readable storage device. The user defined pane size corresponds to a particular window size. At step based on the accessed at least one user defined pane size a second pane size of the pane at which the pane is to be presented in the newly sized window can be determined for example via a processor executing suitable program code. At step the pane can be presented in the newly sized window at the second pane size.

Like numbers have been used to refer to the same items throughout this specification. The flowcharts and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowcharts or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustrations can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms includes including comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

Reference throughout this specification to one embodiment an embodiment or similar language means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment disclosed within this specification. Thus appearances of the phrases in one embodiment in an embodiment and similar language throughout this specification may but do not necessarily all refer to the same embodiment.

The term plurality as used herein is defined as two or more than two. The term another as used herein is defined as at least a second or more. The term coupled as used herein is defined as connected whether directly without any intervening elements or indirectly with one or more intervening elements unless otherwise indicated. Two elements also can be coupled mechanically electrically or communicatively linked through a communication channel pathway network or system. The term and or as used herein refers to and encompasses any and all possible combinations of one or more of the associated listed items. It will also be understood that although the terms first second etc. may be used herein to describe various elements these elements should not be limited by these terms as these terms are only used to distinguish one element from another unless stated otherwise or the context indicates otherwise.

The term if may be construed to mean when or upon or in response to determining or in response to detecting depending on the context. Similarly the phrase if it is determined or if a stated condition or event is detected may be construed to mean upon determining or in response to determining or upon detecting the stated condition or event or in response to detecting the stated condition or event depending on the context.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the embodiments disclosed within this specification have been presented for purposes of illustration and description but are not intended to be exhaustive or limited to the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the embodiments of the invention. The embodiments were chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the inventive arrangements for various embodiments with various modifications as are suited to the particular use contemplated.

