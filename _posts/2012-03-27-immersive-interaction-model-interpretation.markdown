---

title: Immersive interaction model interpretation
abstract: Embodiments of the present disclosure include one or more of a method, computing device, computer-readable medium, and system for providing an immersive GUI. According to an embodiment, this may include providing a view of G&G data within at least a substantial portion of the GUI, a first GUI element, wherein transparency of the first GUI element varies depending on a location of an input device with respect to the first GUI element, and a second GUI element, wherein the second GUI element is customized based on a context.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09182879&OS=09182879&RS=09182879
owner: Schlumberger Technology Corporation
number: 09182879
owner_city: Sugar Land
owner_country: US
publication_date: 20120327
---
This application claims the benefit of U.S. Provisional Patent Application 61 468 839 filed Mar. 29 2011 entitled Immersive Interaction Model Interpretation the entirety of which is incorporated by reference herein.

Some Geology and or Geophysics G G applications provide a full screen mode which enables data views to use the entire screen to view the data. However there are no examples in the prior art of a G G application that allows a user to perform operations on the data and view the results of the operation on the data without switching back and forth between the full screen and non full screen mode. This can be a tedious way of working and can significantly reduce the value of a full screen mode because it could draw a user s attention away from visualization of the data.

One purpose of a G G software application is to allow users to visualize manipulate and or perform operations on G G data. As an example a G G application running on a workstation may include a graphical user interface GUI . The GUI may include one or more graphical data views coupled with support controls e.g. toolbars data trees and operation trees . The support controls may provide a way of performing operations on the data and selecting data to display in a data view.

The support controls may include one or more GUI elements that enable a user to activate functionality provided by the G G application. The support controls shown in GUI are merely examples other support controls are also possible. The GUI may be referred to herein as a non immersive GUI.

As shown in the data view of the non immersive GUI occupy only a portion of the computer screen due to the presence of the support controls . A non immersive GUI can present one or more of the following disadvantages 

1. The support controls occupy an increasing amount of screen space which may direct user attention away from the data view . In certain use cases the data view is the most important part of the application.

2. The support controls may be complicated with respect to navigation because of the number of buttons and options. This could increase the risk of the user acquiring repetitive strain injury RSI due to increased mouse usage. For example these interfaces might involve a large number of mouse clicks to perform certain operations. Advanced workflows can further increase the risk of RSI because advanced workflows may require adding more support controls to the GUI .

3. A non immersive GUI might not be optimized for touch screen based technologies. For example the screen space allocated for each support control may be comparatively small when reproduced on a touch device. This may make it difficult to activate certain buttons e.g. via touch . In addition with a touch based interface the user s hand may block visibility of the data view .

4. A non immersive GUI might implement non interactive workflows wherein the GUI requires the user to manually trigger a data view update when for example the user changes one or more parameters related to an algorithm performing a computation over the data. This can lead to decreased user productivity.

5. A non immersive GUI might use support controls such as non transparent and or heavy weight dialogs for interactive workflows. Such non transparent and or heavy weight dialogs support controls could block users views of the data view . The term heavy weight dialog may refer to a dialog in which the data view is not automatically updated after changes are made i.e. the user has to manually trigger an event to update the view for instance by pressing an Apply button or something similar .

6. A non immersive GUI might not differentiate between operations which are frequently performed versus operations which are seldom used. In addition a non immersive GUI might use limited assumptions e.g. no assumptions as to what a user needs at a particular step in a workflow. Since no context information about what the user is used or is being used in a limited way a non immersive GUI might need to show all options at all times. This can lead to a complicated GUI .

Accordingly there is a need for an immersive interface which allows the user to work more efficiently by using as much screen estate as possible to show data and thereby avoid blocking the data views as much as possible. Such an immersive interface may have a simple and intuitive interface which is far smarter than traditional interfaces about how the user works thereby using interactive workflows to the largest extent possible and supporting new touch screen technologies.

According to an example embodiment a method computing device computer readable media and system for providing an immersive GUI may provide a view of G G data within at least a substantial portion of the GUI a first GUI element wherein transparency of the first GUI element varies depending on a location of an input device with respect to the first GUI element and a second GUI element wherein the second GUI is customized based on a context.

An immersive GUI may also provide a third GUI element for searching a plurality of commands available from the GUI wherein the third GUI element prioritizes a search result based upon the context.

In another embodiment an immersive GUI may provide a third GUI element for controlling a light source with respect to the G G data.

According to an embodiment the second GUI element of an immersive GUI may comprise a list of attribute calculations and the immersive GUI may further allow applying a selected attribute calculation from the list of the attribute calculations to the G G data immediately after a user selects an attribute.

In another example embodiment an immersive GUI may further comprise a third GUI element for modifying a parameter in response to selection of an attribute to be applied to the G G data and may enable applying the parameter to at least a portion of the G G data immediately in response to user input to the third GUI element.

An immersive GUI may provide a third GUI element for selecting an attribute to be applied to at least a portion of the G G data and may enable adding a first attribute selected by the user to an attribute stack comprising a second attribute and applying the first and second attributes to at least a portion of the G G data immediately after the user selects the attribute.

The graphical view of G G data may comprises a three dimensional view of the G G data and a two dimensional view of the G G data and the GUI may further allow providing a third GUI element for tracking a horizon related to the G G data and switching focus between the three dimensional view and the two dimensional view.

In an example immersive GUI transparency of the first GUI element decreases when the location of the input device is within a boundary of the first element and transparency of the first GUI element increases when the location of the input is outside the boundary of the first element.

In yet another example embodiment of an immersive GUI the GUI may allow blurring at least a portion of the view when the location of the input device is within a boundary of the first element.

As discussed above a G G application that implements a non immersive GUI may fail to provide a user with an immersive experience. In contrast embodiments of the present disclosure may provide an immersive GUI that efficiently utilizes screen estate and focuses on providing GUI elements that are relevant to an operation that a user wants to perform. An advantage of this is that a user of an immersive GUI according to the present disclosure will be less distracted by GUI elements which may be less relevant in view of a context related to an operation. As a result immersive interfaces can be easier more fun more productive and less stressful to use than non immersive interfaces.

In non immersive G G interfaces the user might spend unnecessary time and energy using the support controls. An immersive interface on the other hand can improve usability of G G applications over prior art. For example in an example embodiment an immersive interface may enable a user to view edit and perform operations on G G data e.g. seismic horizon or fault interpretations structural models etc. using at least a substantial portion of the screen estate. Furthermore the control elements may be designed to prevent blocking a user s view of visualized G G data e.g. by varying the transparency of control elements based on a user s activity .

As an example one or more semi transparent panels and or toolbars may be placed on top of the data view. These panels may provide access to operations that may be performed on the data visualized in the data view. The transparency of these panels may decrease when a pointer indicating a position of an input device e.g. a mouse a finger a stylus or any other input device hovers above a predetermined area within the panel bounds and transparency of these panels may increase when the mouse is outside the predetermined area. Additionally a blurring effect may be applied to one or more GUI elements e.g. the data view when the mouse hovers over a panel or toolbar. Furthermore according to an embodiment one or more panels may be rendered in a color which blends in with the data view. Other example embodiments will be described below with reference to the Figures.

In the domain of geophysics work an embodiment of an immersive GUI may provide an at least substantially full screen view of G G data along with a toolbar to perform one or more common tasks such as 

According to another aspect of an example embodiment an immersive GUI may be adapted to make certain assumptions and or decisions about automatically applying operations to data shown in the data view. These assumptions and or decisions may be based upon information about user activity e.g. what a user may want in a certain context . For example when computing a stacked volume attribute i.e. a plurality of attributes to be applied to a seismic volume a G G application implementing an immersive interface might not require a user to select an object that a computation should be applied to. Instead the G G application might automatically apply the attribute to the data that is currently visualized. In another example the G G application might automatically apply the attribute to data that was last modified by an operation. This can reduce the amount of input needed from the user and also minimizes repeated user tasks e.g. repeatedly selecting objects and buttons to apply one or more attributes .

The GUI may include one or more GUI elements. A GUI element may include a data view which includes at least a substantial portion of the screen space e.g. the entire screen space . According to an example embodiment the data view may visualize G G data e.g. seismic data . For example the data view may show a seismic inline and or crossline view of G G data.

A GUI element may also include a toolbar . The toolbar may be placed at any position within the GUI e.g. the bottom of the GUI as shown in . According to an embodiment a transparency characteristic of the toolbar may vary depending on a position of a pointer representing a location of an input device e.g. mouse pointer a user s finger or other input device . For example the toolbar may be semi transparent when a pointer is positioned outside the bounds of the toolbar . However when the pointer is positioned within the bounds of the toolbar the transparency of the toolbar may decrease over a pre determined time interval e.g. approximately one second . Optionally another interactive visual effect may include blurring at least a portion of one or more GUI elements e.g. the data view when the pointer is positioned within the bounds of a certain GUI element e.g. the toolbar .

When a user selects an operation represented on the toolbar that involves further interaction another GUI element may appear on a portion of the screen e.g. panel on the right portion of the screen as shown in . The panel may present to the user one or more sliders that are related to one or more operation parameters. In an embodiment the transparency of the panel may vary depending on a location of a pointer positioned with respect to the bounds of the panel e.g. decreasing increasing transparency blurring at least a portion of one or more GUI elements etc. . According to an embodiment when a user adjusts operation parameters the results may be automatically and instantly applied to the currently visualized data.

When a user selects a GUI element to perform volume attributes a panel may appear and the user may select one or more attributes to compute. Upon user selection of an attribute the application may automatically apply one or more virtual volume attributes to at least a portion of the data shown in the data view e.g. a stack of virtual volume attributes . Furthermore the application may adjust one or more parameters used as inputs to the volume attribute algorithm.

A panel may appear when a user selects a GUI element to perform interactive 2D or 3D horizon tracking. In such an embodiment the panel may show tracking algorithm parameters which can be interactively adjusted. According to an embodiment the parameters may include value constraints such as seed confidence value range and or value delta. The parameters may also include wavelet parameters such as correlation quality e.g. a slide bar GUI element may be provided to modify the correlation quality and above below and length values. According to an example embodiment when algorithm parameters are modified by a user changes may be immediately rendered in the data view without further input from a user.

If the data view shows a 3D view a 2D interpretation view showing the active seismic inline or crossline can be shown along with the 3D graphics view. For example the 2D view may be a representation of the 3D view but projected into two dimensions. A user may use these views to interact with a seismic volume. According to an embodiment the user may provide input e.g. using left or right arrow keys to navigate these views of the seismic volume. According to an embodiment when an immersive GUI is initialized one or more help GUI elements may be displayed to the user so as to educate the user as to shortcuts available within the immersive interface e.g. how to use arrow keys navigate a visualized data model thereby improving the immersive experience and reducing the need for constantly presenting visual controls which could block a user s view of visualized data.

A GUI element may include a selector GUI element . A selector may appear in any portion of the GUI e.g. the top left corner of the GUI as shown in and may be used to select one or more objects to visualize in the data view . According to an embodiment the transparency of the selector may vary depending on a location of a pointer positioned with respect to the bounds of a selector e.g. decreasing increasing transparency blurring a portion of one or more GUI elements etc. .

A selector can be used to select one or more objects to visualize. In an embodiment the selector may be hidden at first and may appear at a certain portion of the GUI e.g. the top left corner of the GUI when a user selects a GUI element relating to an object shown in the data view . A selector may also be context sensitive. That is it may automatically show certain objects or allow a user to choose certain objects depending on a context of a user operation e.g. the current context .

A GUI element may include one or more additional views which appear within the data view e.g. see example below . An additional view may vary a transparency characteristic depending on a location of a pointer positioned with respect to the bounds of the additional view e.g. decreasing increasing transparency blurring a portion of GUI elements etc. .

The GUI can be used to execute a seismic interpretation workflow. The toolbar may include one or more GUI elements e.g. buttons that enable a user to execute one or more operations on the data shown in a data view . In an example embodiment the toolbar may include one or more of the following GUI elements 

GUI may also include a toolbar GUI element e.g. along the bottom of GUI as shown in . The transparency of toolbar may vary depending on a location of a pointer positioned with respect to the bounds of the toolbar e.g. as described above with respect to toolbar in . Toolbar may include an exit button GUI element that enables a user to exit the immersive GUI . In addition toolbar may also include a combo box GUI element that enables a user to select a color scheme to be applied to at least a portion of data shown in data view . When a scheme is selected the scheme may be instantly applied to the visualized data.

A compression slider GUI element may be included on the toolbar and may be used to compress decompress a color scheme. According to an embodiment the track of the slider may display the current color table. Input from the user to the slider may be instantly applied to at least a portion of the data shown in the data view . A similar slider could be present in the toolbar for controlling other visual settings such as an opacity characteristic of a visualized object.

Toolbar may further include a combo box GUI element that may be used to select a horizon to use for automatic horizon tracking. In an embodiment new horizons can also be created by pressing the New Horizon GUI element .

The toolbar may also include an Autotrack GUI element e.g. a button which a user may select to perform an autotrack operation. In an example embodiment upon selection of the Autotrack GUI element autotrack mode may be selected and the user can pick seed points related to the data in the data view . The selected seed points may be used as input to an automatic horizon tracking algorithm. By pressing and holding the mouse button for a short interval of time the user can change the autotracking mode from the default 3D mode to a different mode e.g. a 2D mode . See for an example.

The toolbar may also include an Attributes GUI element e.g. a button . According to an example embodiment when the Attributes button is selected a panel may appear e.g. the panel may behave similarly to panel described above and the panel may allow the user to apply computations over the seismic volume. See for an example.

The GUI may include a selector GUI element that enables a user to select one or more objects related to a seismic volume. According to an embodiment when the selector is selected a list may appear. The list may display one or more seismic data that the user has loaded and the user can select one or more seismic data objects to work on. This selector may or may not be present at any given time depending on a context and or application needs.

The foregoing are just some examples of the operations that may be offered by a toolbar and it should be understood that other operations may also be possible.

According to an embodiment when an attribute is selected from the attribute list the selected attribute may be added to an attribute stack that includes one or more previously selected attributes. The attribute stack may be visualized in one or more panels . shows an attribute stack that includes two attributes but other numbers of attributes are also possible. A user can remove attributes from the attribute stack by pressing a Remove button associated with an attribute e.g. located at the bottom of each attribute parameter control as shown in .

One or more parameter controls related to an attribute in an attribute stack may appear in the panels . The parameter controls can display one or more parameters such as for example numerical parameters Boolean parameters or multiple choice parameters. Some example parameter controls are shown in the panels however parameter controls are possible. According to an embodiment when a user changes a parameter by modifying a parameter control a related attribute may be immediately recomputed and an updated result may be applied to at least a portion of the data view . A help tip denoted by the question mark icons shown in panels may show information about a parameter whenever a user hovers over its bounds.

According to an embodiment of an immersive GUI a search GUI element e.g. a search bar as described herein may be activated by a user e.g. via a keyboard shortcut . In an embodiment to minimize mouse movement the search bar may appear in close proximity to a cursor when activated with mouse input. Alternatively if the search bar is activated from a keyboard e.g. by pressing a single key such as the space bar or X it may show up in a predetermined location in a GUI e.g. directly under the current position of a cursor or in the upper right corner of an active window so as to maintain focus on the ongoing work or already opened Petrel windows. Another method of activating the search bar may include recognition of a voice command.

Once the search bar is activated a user may enter one or more search terms to search for results described above e.g. commands processes tools modes objects documentation help content project content etc. . Technologies such as auto complete and object indexing may be used to quickly produce search results.

A search bar may be adapted to prompt a user with real time suggestions as characters are typed. Furthermore the search bar may include a textbox and a search icon. According to an embodiment there may be no need to click a Search button to initiate the results search as the results may be populated on the fly based on partial user input. In an embodiment as soon as the user enters characters the search bar may expand vertically into a list of results .

These results may be categorized based on the type of category each result belongs to. Each object displayed in the list may also include an icon representing the object and or a shortcut key reminder . If no matches are found then the search bar may display a message to the user indicating that no search results were found e.g. No Results . Objects in the results list may be selected by the user thereby executing the selected action object.

A search bar may also be extensible to receive search results from other components. As an example an application or plug in may be adapted to provide results from its documentation to the search bar based on the user s input.

Prior art examples of command searches do not take into consideration the context in which the user is currently working and do not discriminate between different types of commands. In contrast in an example embodiment of the present disclosure if the user is working in a geophysics context a search bar according to an embodiment of the present disclosure may prioritize results related to geophysics.

A search bar of the present disclosure may be configured to be aware of context. A context may include information about a current domain current operation current project current command etc. For example a search bar may maintain a list of commands that a user typically uses in a certain context so that results which are more frequently used can appear higher up in the results list . A context may also be used to provide search results that are related to a context e.g. either the data set the user is currently working on or a user s current step in a G G workflow . For example if a user is working on a data set where he she has performed an attribute computation using a particular attribute the search results may include other seismic attributes. This can help the user learn how to use the software. It can also monitor what the user actually does and prioritize search results which may suggest the next steps for the user higher up in the results list .

A criticism against prior art user interfaces is that it can be difficult to find commands within a GUI e.g. a MICROSOFT Ribbon . An embodiment of a search tool may index one or more interface commands and display the command differently in the result list based on the type of command. For example if a result is of the Ribbon Gallery type a Gallery can be shown when hovering over a Gallery search result. As another example if the result is a Ribbon multi option split button different options can be grouped together into a single search result. An effect is that the search bar may provide a user with access to a plurality of commands available from the Ribbon. Whereas the Ribbon may involve significant mouse usage e.g. significant mouse clicks and mouse movements to find a command within a Ribbon a search bar can reduce both the number of mouse clicks and or mouse movement and thereby reduce the time required by a user to try and find a command by navigating Within a Ribbon.

In an immersive GUI a search tool may be used to help a user efficiently find commands. In prior art commands are constantly visible to a user and he she must navigate the GUI to locate a command. In contrast a search bar may allow a user to quickly access any command available in a GUI by simply searching for the command. Accordingly in an example embodiment of the present disclosure various commands do not need to be constantly visualized as GUI elements to a user. An immersive GUI may be streamlined to offer a user easy access to frequently used commands while at the same time providing a user with a way to access additional functionality that may not be visible as a GUI element of an immersive GUI. Accordingly a search bar provides a way to access a larger portion of the functionality while retaining focus on the frequently used features.

In an example embodiment a light controller may include a label that displays the name of a selected light source one or more slider GUI elements and a ring control GUI element . The ring control GUI element may include an inner ring control GUI element and an outer ring control GUI element .

Slider may be used to choose a color of a selected light source slider may be used to set a saturation of the color of a selected light source e.g. moving slider to the left may cause the color to become more washed out and moving the slider to the right may cause the color to become more contrasted and slider may be used to set a value of the color of a selected light source. Together sliders may determine a Hue Saturation Value HSV of a selected light source.

The inner circular control may include one or more dot control GUI elements . Each of the dot controls represents a different light source. In represent three different light sources however any number of light sources may be represented by dot controls in the inner circular control . In an embodiment the dot controls may be colored to match the color of a selected light source so that the dot controls may be distinguished from each other. The dot controls may be used to control a direction of the light source. In an example operation a user may move any dot control to another position within the inner circular control in order to change the direction of the selected light source. Dot control in outer ring control may be used to modify an elevation of a currently selected light. For example once a user has selected a light source by selecting a dot control he she may move dot control to various positions within the outer circular control to control the elevation of the selected light source.

In an embodiment a currently selected dot control may be denoted by a white ring or any other colored ring around the dot control . Likewise non selected dot controls may be indicated using a black ring or any other colored ring around the dot control . According to an example operation if a dot control is currently selected and the dot control is clicked then the corresponding light source may be toggled between on and off states. A light source which is off may be denoted by black filling or any other colored filling of the corresponding dot control and a light source which is on may cause the corresponding dot control to be filled with a color of the light source.

An example light controller may include a plus button GUI element and a minus button GUI element . The plus button may be used to add a light source and thereby add a dot control to the inner circular control . The minus button may be used to remove a light source e.g. a selected light source . A light control may also include a camera button that animates one or more light sources e.g. all light sources . In an example embodiment the one or more light sources may rotate through one or more predetermined rates and or angles. An example light controller may include a rate control that allows a user to speed up slow down or stop the rate of rotation through the predetermined rates and or angles.

An example light controller may be normally semi transparent and may become more opaque when a pointer is located within the bounds of the light controller. According to an example operation of the light controller a minimized version of the light controller may be shown when a pointer is located outside the bounds of the light controller. A minimized version of the light controller might not include the label the sliders the camera and the plus and minus buttons other combinations of GUI elements are also possible . Likewise a non minimized version of the light controller might be displayed when a pointer is located within the bounds of the light controller.

According to an example embodiment keyboard shortcuts may be mapped to various operations of a light controller . For example keyboard shortcuts may allow a user to cycle through one or more light sources adjust azimuth and or elevation of a selected light as well as adjust a speed of animation e.g. to speed up slow down or stop the rate of rotation through one or more predetermined rates and or angles with respect to one or more light sources .

In an example embodiment lines may be rendered to extend from a light source to visualize a direction of the light rays. Another feature may handle overlapping controls representing the light sources by spatially separating them when a pointer is located nearby. In an immersive GUI an input device may be used to move a camera in order to adjust a view of the data view . The input device may also be used to select and relocate one or more objects visualized in the data view .

The computing system may include a central processing unit CPU a system memory and a system bus that couples various system components including the system memory to the CPU . Although one CPU is illustrated in it should be understood that in some implementations the computing system may include more than one CPU. The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus. The system memory may include a read only memory ROM and a random access memory RAM . A basic input output system BIOS containing the basic routines that help transfer information between elements within the computing system such as during start up may be stored in the ROM .

The computing system may further include a hard disk drive for reading from and writing to a hard disk a magnetic disk drive for reading from and writing to a removable magnetic disk and an optical disk drive for reading from and writing to a removable optical disk such as a CD ROM or other optical media. The hard disk drive the magnetic disk drive and the optical disk drive may be connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical drive interface respectively. The drives and their associated computer readable media may provide nonvolatile storage of computer readable instructions data structures program modules and other data for the computing system .

Although the computing system is described herein as having a hard disk a removable magnetic disk and a removable optical disk it should be appreciated by those skilled in the art that the computing system may also include other types of computer readable media that may be accessed by a computer. For example such computer readable media may include computer storage media and communication media. Computer storage media may include volatile and non volatile and removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media may further include RAM ROM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computing system . Communication media may embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and may include any information delivery media. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above may also be included within the scope of computer readable media.

A number of program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM including an operating system one or more application programs program data and a database system . The operating system may be any suitable operating system that may control the operation of a networked personal or server computer such as Windows XP Mac OS X Unix variants e.g. Linux and BSD and the like. In one implementation plug in manager oilfield application the plug in quality application and the plug in distribution application described in in the paragraphs above may be stored as application programs in .

A user may enter commands and information into the computing system through input devices such as a keyboard and pointing device . Other input devices may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices may be connected to the CPU through a serial port interface coupled to system bus but may be connected by other interfaces such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device may also be connected to system bus via an interface such as a video adapter . In addition to the monitor the computing system may further include other peripheral output devices such as speakers and printers.

Further the computing system may operate in a networked environment using logical connections to one or more remote computers . The logical connections may be any connection that is commonplace in offices enterprise wide computer networks intranets and the Internet such as local area network LAN and a wide area network WAN . The remote computers may each include application programs similar to that as described above. In one implementation the plug in quality application i.e. performing method stored in plug in quality center may be stored as application programs in system memory . Similarly the plug in distribution application i.e. performing method stored in plug in distribution center may be stored as application programs in remote computers .

When using a LAN networking environment the computing system may be connected to the local network through a network interface or adapter . When used in a WAN networking environment the computing system may include a modem wireless router or other means for establishing communication over a wide area network such as the Internet. The modem which may be internal or external may be connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the computing system or portions thereof may be stored in a remote memory storage device . It will be appreciated that the network connections shown are and other means of establishing a communications link between the computers may be used.

It should be understood that the various technologies described herein may be implemented in connection with hardware software or a combination of both. Thus various technologies or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the various technologies. In the case of program code execution on programmable computers the computing device may include a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs that may implement or utilize the various technologies described herein may use an application programming interface API reusable controls and the like. Such programs may be implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s may be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and combined with hardware implementations.

While the foregoing is directed to implementations of various technologies described herein other and further implementations may be devised without departing from the basic scope thereof which may be determined by the claims that follow. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims. Although various methods devices systems etc. have been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as examples of forms of implementing the claimed methods devices systems etc.

