---

title: Generating travel queries in response to free text queries
abstract: Methods, systems, and apparatus, including computer programs encoded on computer storage media, for generating travel queries in response to free text queries. One of the methods includes receiving a free text query; generating a travel query from the free text query, wherein the travel query expressly specifies an origin location, a destination location, and a departure date, wherein each of the origin location, the destination location, and the departure date are expressly identified as such in the travel query; and submitting the travel query to a travel search engine. Optionally the method includes obtaining user information about a user associated with the free text query, obtaining popular travel information, and deriving origin or destination locations, or departure or return dates from the free text query, the user information, and the popular-travel information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09430571&OS=09430571&RS=09430571
owner: GOOGLE INC.
number: 09430571
owner_city: Mountain View
owner_country: US
publication_date: 20121024
---
Internet travel search engines are used to plan travel. Users submit travel queries to Internet travel search engines and are presented with travel query results that satisfy the travel queries. The travel query results can include travel options that cover different aspects of travel e.g. flights hotels car rentals and activities.

Conventionally users enter specific kinds of travel constraints e.g. origin destination departure date duration of stay into corresponding fields in Internet travel search engine user interfaces in order to define a travel search query. However these travel search engines are unable to return useful travel results for travel search queries that are not adequately defined by travel constraints.

This specification describes technologies relating to generating travel queries in response to free text queries.

In general one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving a free text query generating a travel query from the free text query wherein the travel query expressly specifies an origin location a destination location and a departure date wherein each of the origin location the destination location and the departure date are expressly identified as such in the travel query and submitting the travel query to a travel search engine. Other embodiments of this aspect include corresponding computer systems apparatus and computer programs recorded on one or more computer storage devices each configured to perform the actions of the methods. A system of one or more computers can be configured to perform particular operations or actions by virtue of having software firmware hardware or a combination of them installed on the system that in operation causes or cause the system to perform the actions. One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that when executed by data processing apparatus cause the apparatus to perform the actions.

The foregoing and other embodiments can each optionally include one or more of the following features alone or in combination. In particular one embodiment may include all the following features in combination.

The methods further include obtaining user information about a user associated with the free text query obtaining popular travel information wherein the popular travel information is information about travel that is popular with users and generating the travel query from the free text query the user information and the popular travel information. The popular travel information is information about travel that is popular with users who share one or more characteristics with the user.

The user information identifies at least one of user travel preferences user location past user origin locations past user destination locations past user travel cost for travel that comprises the past user origin locations and the past user destination locations past user destination types past user departure dates past user durations of stay or user contacts and the location of the contacts. Generating the travel query includes generating a travel query for air travel and wherein when the user information identifies past user origin locations and past user destination locations the past user origin locations and past user destination locations comprise cities that have airports. When the user information identifies past user destination types the past user destination types comprise beach destinations skiing destinations mountain destinations national park destinations or romantic destinations. When the user information identifies user contacts and the location of the contacts the operations further include obtaining information identifying the user contacts and the location of the contacts from one or more social networks of the user.

The popular travel information identifies at least one of popular origin locations popular destination locations estimated travel cost for travel that comprises the popular origin locations and the popular destination locations popular destination types popular departure dates popular durations of stay or events and the location of the events. When the popular travel information identifies popular origin locations the operations further include selecting the popular origin locations from all origin locations within a predetermined maximum distance from a current user location wherein the predetermined maximum distance is measured in terms of time of travel cost of travel or distance of travel from the current user location. When the popular travel information identifies popular destination locations the operations further include selecting the popular destination locations from all destination locations outside a predetermined minimum distance from a current user location wherein the predetermined minimum distance is measured in terms of time of travel cost of travel or distance of travel from the current user location. When the popular travel information identifies popular destination types the popular destination types comprise beach destinations skiing destinations mountain destinations national park destinations or romantic destinations. When the popular travel information identifies events and the locations of the events the operations further include obtaining information identifying the events and the location of the events from an online database of events. The popular travel information further identifies weather conditions at the popular destination locations for a plurality of dates.

In general another innovative aspect of the subject matter described in this specification can be embodied in a system that includes one or more computers and one or more storage devices storing instructions that when executed by the one or more computers cause the one or more computers to perform the operations of receiving a free text query generating a travel query from the free text query wherein the travel query expressly specifies an origin location a destination location and a departure date wherein each of the origin location the destination location and the departure date are expressly identified as such in the travel query and submitting the travel query to a travel search engine. Other embodiments of this aspect include corresponding methods apparatus and computer programs recorded on one or more computer storage devices each configured to perform the operations. A system of one or more computers can be configured to perform particular operations or actions by virtue of having software firmware hardware or a combination of them installed on the system that in operation causes or cause the system to perform the actions. One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that when executed by data processing apparatus cause the apparatus to perform the actions.

The foregoing and other embodiments can each optionally include one or more of the following features alone or in combination. In particular one embodiment may include all the following features in combination.

The travel query further expressly specifies a duration of stay or a return date wherein the duration of stay or return date is expressly identified as such.

The system further includes one or more of an origin location derivation module wherein when the system includes the origin location derivation module generating the travel query includes deriving the origin location by the origin location derivation module a destination location derivation module wherein when the system includes the destination location derivation module generating the travel query includes deriving the destination location by the destination location derivation module and a departure date derivation module wherein when the system includes the departure date derivation module generating the travel query includes deriving the departure date by the departure date derivation module. The origin location derivation module the destination location module and the departure date derivation module are a single module. The origin location derivation module is configured to perform operations including obtaining user information about a user associated with the free text query obtaining popular travel information wherein the popular travel information is information about travel that is popular with users and deriving the origin location from the free text query the user information and the popular travel information. The destination location derivation module is configured to perform operations including obtaining user information about a user associated with the free text query obtaining popular travel information wherein the popular travel information is information about travel that is popular with users and deriving the destination location from the free text query the user information and the popular travel information. The departure date derivation module is configured to perform operations including obtaining user information about a user associated with the free text query obtaining popular travel information wherein the popular travel information is information about travel that is popular with users and deriving the departure date from the free text query the user information and the popular travel information. The travel query further expressly specifies a duration of stay or a return date wherein the duration of stay or return date is expressly identified as such and wherein the system further includes a return date derivation module wherein generating the travel query includes deriving the return date by the return date derivation module. The return date derivation module is configured to perform operations including obtaining user information about a user associated with the free text query obtaining popular travel information wherein the popular travel information is information about travel that is popular with users and deriving the return date from the free text query the user information and the popular travel information.

The operations further include obtaining user information about a user associated with the free text query obtaining popular travel information wherein the popular travel information is information about travel that is popular with users and deriving one or more of the origin location the destination location and the departure date from the free text query the user information and the popular travel information.

The subject matter described in this specification can be implemented in particular embodiments so as to realize one or more of the following advantages. Free text queries can be submitted in natural language. Travel constraints that define travel queries can be derived from free text queries. Travel queries can be generated from derived travel constraints. Travel search results can be returned for free text queries.

The details of one or more embodiments of the subject matter of this specification are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

A user can interact with the travel query generator system through a client device . In some implementations the client device can communicate with the travel query generator system over a network. For example the client device can be a computer coupled to the travel query generator system through one or more wired or wireless networks e.g. mobile phone networks local area networks LANs or wide area networks WANs e.g. the Internet. In some implementations the client device can communicate directly with the travel query generator system . For example the travel query generator system and the client device can be implemented on one machine. For example a user can install a desktop travel query generator system application on the client device . The client device will generally include a random access memory RAM a processor and one or more user interface devices e.g. a display or a speaker for output and a keyboard mouse microphone or touch sensitive display for input.

A user can use the client device to submit a free text query to the travel query generator system . For example the user can use the one or more user interface devices of the client device to enter the free text query in a user interface provided by the travel query generator system e.g. in a single query text input field of a web page. The free text query is text in natural language form e.g. the language the user naturally writes or speaks in. A free text query is a query that may or may not expressly state specific travel constraints. When not expressly stated in the free text query the system infers the necessary constraints from the free text query as described below. An example free text query that does expressly state some specific travel constraints would be for example depart Los Angeles on August 12 and return from San Francisco on August 19. An example free text query that does not expressly state any specific travel constraints would be for example vacations to Europe in summer. 

The travel query generator system can be implemented as for example computer programs running on one or more computers in one or more locations that are coupled to each other through a network. The travel query generator system responds to the free text query by generating a travel query . The travel query is generated from the free text query as described in more detail below with reference to . The travel query specifies an origin location a destination location and a departure date. The origin location defines a geographical location for travel to originate. For example the origin location can be any city from which travel can originate. The destination location defines a geographical location that is to be travelled to. For example the destination location can be any city that can be travelled to. The departure date defines a date of departure or a range of departure dates from the origin location. Additionally the travel query can also specify a duration of stay or return date. The return date defines a date of departure from the destination location. The travel query is transmitted to a travel search engine through the network.

In some implementations the user can submit the free text query to a search engine over a network. The free text query can be submitted to a general user interface provided by the search engine e.g. a web page with a query text input field. The search engine determines that the input is likely a travel query and transmits the free text query to the travel query generator system in addition to the other processing the search engine generally performs on query inputs. In alternative implementations the free text query is always transmitted to the travel query generator system . The travel query generator system derives an origin location a destination location a departure date and a return date to generate the travel query . The origin location destination location departure date and return date are each assigned a probability value as described in more detail below with reference to . The probability values are combined according to a combination function for example the values can be added or multiplied together. If the combined value does not satisfy a threshold value then the search engine generates search results that satisfy the free text query without using the travel search engine and provides the search results to the user . If the combined value does satisfy the threshold value then the travel query is transmitted to the travel search engine .

The travel search engine responds to the received travel query by obtaining travel query results that are responsive to the travel query . A travel query result represents a travel option e.g. a travel itinerary including departure date departure flight return date return flight that satisfies the travel constraints inferred from the free text query. The travel query results are transmitted through a network to the user device and presented in an organized fashion to the user e.g. a travel search engine results web page displayed in a web browser running on the client device . Other search results generated by the search engine can be optionally presented with the travel query results . Each travel query result can include a description of the represented travel option and a hyperlink to a site that allows the user to book the different components of the travel option. In some implementations the travel query results are transmitted through the network back to the travel query generator system . In response to receiving the travel query results travel query generator system can transmit travel query results through the network to client device for presentation to user .

The system generates a travel query from the free text query . From the free text query the system derives an origin location a destination location and a departure date. The travel query is then generated from the derived information so that the travel query expressly specifies the origin location the destination location and the departure date that is each of the origin location the destination location and the departure date are expressly identified as such in the travel query.

In some implementations the system also derives a duration of stay or return date from the free text query. The generated travel query can include the duration of stay or return date that is the duration of stay or return date is expressly identified as such in the generated travel query.

In some implementations the system further obtains user information and popular travel information in addition to the received free text query. The user information can be specific for a user associated with the free text query. The popular travel information can identify travel constraints that are commonly submitted to travel search engines by a population of users. The popularity level for a particular travel constraint can represent the number of travel queries that are submitted to travel search engines with the particular travel constraint. In other implementations the popular travel information is identified from common travel itineraries of the population of users. In some implementations each of the users of the population of users share one or more characteristics with the user associated with the free text query. From the free text query the user information and the popular travel information the system can derive an origin location destination location departure date and return date as described in more detail below with reference to . The system then generates the travel query from the travel constraints derived from the free text query user information and the popular travel information.

The system submits the travel query to a travel search engine for example as described above with reference to .

The travel query generator includes an origin location derivation module a destination location derivation module a departure date derivation module and a return date derivation module . The travel query generator receives a free text query and generates a travel query from the free text query .

The origin location derivation module receives the free text query and derives an origin location from the free text query and other information as described in more detail below with reference to .

The destination location derivation module receives the free text query and derives a destination location from the free text query and other information as described in more detail below with reference to .

The departure date derivation module receives the free text query and derives a departure date or a range of departure dates from the free text query and other information as described in more detail below with reference to .

The return date derivation module receives the free text query and derives a return date from the free text query and other information as described in more detail below with reference to .

Travel query generator generates travel query from the derived origin location destination location departure date and return date as described in more detail below with reference to .

The origin location derivation module receives a free text query . The free text query can be received from a user. The origin location derivation module also obtains user information specific to the user and popular travel information . The origin location derivation module derives origin location from a combination of the free text query user information and popular travel information . The origin location is then used to generate the travel query by the travel query generator.

The user information provides additional information to assist the origin location derivation module derive the origin location . The user information can identify a geographic location of the user. For example if origin location derivation module receives free text query summer vacation in Europe origin location derivation module can derive an origin location that is within a predetermined distance from the geographic location of the user. Additionally or alternatively the user information can include past user origin locations. The past user origin locations identify geographic locations from which the user previously originated travel e.g. cities with airports. For example the user information can identify that the user has previously flown to destinations in Europe from Los Angeles. In response to the free text query summer vacations in Europe the origin location derivation module can derive Los Angeles as the origin location. Additionally or alternatively the user information can describe past user cost for travel that originated from the user s different past origin locations. For example the user information can describes the costs incurred by the user for flights the user took from Los Angeles and San Diego to destinations in Europe. Origin location derivation module can derive the origin location by selecting the past origin location with the lowest past user cost. Alternatively a past origin location can be selected as the origin location if its associated past travel cost is below a predetermined threshold.

The popular travel information provides additional information to assist the origin location derivation module derive the origin location . The popular travel information can identify popular origin locations. The popular origin locations are selected from all possible geographic locations. In some implementations the popular origin location is selected from geographic locations that are within a predetermined maximum distance from the geographic location of the user. The distance can be measured in terms of the time of travel the cost of travel or distance of travel from the user s geographic location. For example the popular travel information can indicate that Los Angeles and San Francisco are popular origin locations. The predetermined maximum distance can be 150 miles. If the user were located in San Diego San Francisco would be outside the 150 mile maximum distance from the user. Therefore the origin location derivation module can derive Los Angeles as the origin location instead of San Francisco. In some implementations the popular travel information can identify popular origin locations that are specific for a particular destination location. For example the popular travel information can indicate that Los Angeles is a popular origin location for travel to Europe whereas Burbank is a popular origin location for travel Mexico. In response to a free text query summer vacations in Europe the origin location derivation module can derive Los Angeles as the origin location because it is a popular origin for travel to Europe. Additionally or alternatively the popular travel information can also describe estimated costs for travel that originates from the different popular origin locations. For example the user information can describe estimated costs for flights from Los Angeles and San Diego to destinations in Europe. Origin location derivation module can derive the origin location by selecting the popular origin location with the lowest estimated travel cost in response to the free text query summer vacations in Europe. Alternatively a popular origin location can be selected as the origin location if its estimated travel cost is below a predetermined threshold.

The origin location derivation module parses the free text query to identify candidate origin locations from the free text query. For example from the free text query summer vacation from Los Angeles to Europe Los Angeles is identified as a candidate origin location.

In some implementations an algorithm is used by origin location derivation module to derive the origin location. For example the algorithm can be a probability function that determines a probability for each of the candidate origin locations. The probability for a particular candidate origin location represents a certainty that a travel query submitted to the travel search engine for the user should be defined by the particular origin location constraint. The candidate origin locations include candidate origin locations parsed from the free text query popular origin locations and past user origin locations. Candidate origin locations that parsed from the free text query are assigned high probability values by the probability function. Additionally or alternatively the probability function determines probabilities for the candidate origin locations from the obtained user information and popular travel information . For example the probability function can determine the probability value for a candidate origin location from the popularity level of the origin location and the number of times the user has travelled from the origin location. The probability of a candidate origin location can be additionally weighted by the proximity of the candidate origin location to the user and the estimated travel costs or past user travel costs for travel that originates from the candidate origin location. For example if the candidate origin location is Los Angeles the number of travel searches that specify Los Angeles as the origin location and the distance between Los Angeles and a geographical location of the user can be input into the probability function. The probability function can also take into account the estimated travel cost for travel that originates from Los Angeles. Based on the inputted information the probability function outputs a probability value for Los Angeles as an origin location.

In some implementations the origin location derivation module derives a single origin location from the candidate origin locations. For example the origin location derivation module derives the candidate origin location with the greatest probability as the origin location. In other implementations the origin location derivation module derives more than one origin location from the candidate origin locations. For example the origin location derivation module derives the n candidate origin locations with the greatest probabilities as origin locations where n is an integer.

The destination location derivation module receives a free text query . The free text query can be received from a user. The destination location derivation module also obtains user information specific to the user and popular travel information . The destination location derivation module derives destination location from a combination of the free text query user information and popular travel information . The destination location is then used to generate the travel query by the travel query generator.

The user information provides additional information to assist the destination location derivation module derive the destination location . The user information can identify past user destination locations. The past user destination locations identify geographic locations that the user has travelled to in the past e.g. cities with airports. For example the user information can identify that the user has previously flown to Paris France Hamburg Germany and Tokyo Japan. In response to the free text query summer vacations in Europe the destination location derivation module can derive a destination location based on the user s past destination locations that are geographically located in Europe. The destination location can be a geographical location in Europe that the user has traveled to in the past e.g. Paris or Hamburg or a location that the user has not traveled to in the past e.g. London. Additionally or alternatively the user information can describe past user cost for travel to the past user destinations. For example the user information can describe the costs incurred by the user for flights the user took to Paris and Hamburg. Destination location derivation module can derive the destination location by selecting the past destination location with the lowest past user cost. Alternatively a past destination location can be selected as the destination location if its associated past travel cost is below a predetermined threshold.

Additionally or alternatively the user information can identify past user destination types. Past user destination types are particular types of locations that the user has travelled to in the past. The past destination types can include beach destinations skiing destinations mountain destinations national park destinations or romantic destinations. Other types of destination types can exist. For example if the user has travelled to Honolulu Hi. the destination location derivation module can identify beach destinations as a past user destination type. In some implementations past destination locations can be categorized as a combination of destination types. For example Honolulu Hi. can be identified as both a beach destination and a romantic destination. The destination location derivation module can specify a destination location that is a destination type that is the same or different from past user destination types. For example if destination location derivation module receives free text query summer vacations in Europe the destination location derivation module can derive a destination location based on the user s past beach destination type. The destination location derivation module can identify geographic locations that are known beach destinations in Europe to be specified as the destination location in the travel query or alternatively the system can identify non beach geographic locations in Europe as the destination location.

Additionally or alternatively weather conditions at the past user destination locations can be obtained by the destination location derivation module . The weather conditions can be obtained from online weather websites. Weather conditions for a range of dates for each of the past user destination locations can be obtained. This information can assist the destination location derivation module avoid deriving a destination location with inclement weather conditions for the planned travel dates. For example the destination location derivation module can derive past user destination locations as the destination location if the past user destination locations satisfy certain predetermined weather parameters e.g. temperature wind conditions humidity chance of precipitation.

Additionally or alternatively the user information can additionally identify information about the user s contacts. The destination location derivation module can obtain this information from one or more social networks that the user belongs to. The contact information can include contact names and a geographic location associated with each of the contacts. The destination location derivation module can derive destination location based on the location of the user s contacts.

The popular travel information provides additional information to assist the destination location derivation module derive the destination location . The popular travel information can identify popular destination locations. The popular destination locations are selected from geographic locations outside a predetermined minimum distance from the geographic location of the user. The distance can be measured in terms of the time of travel the cost of travel or distance of travel from the user s geographic location. For example the popular travel information can indicate that Rome and Los Angeles are popular destination locations. The predetermined minimum distance can be 150 miles. If the user were located in San Diego Los Angeles would not be outside the 150 mile minimum distance from the user. Therefore the destination location derivation module can derive Rome as the destination location instead of Los Angeles. Additionally or alternatively the popular travel information can also describe estimated cost for travel to the popular destination locations. For example the user information can describe estimated costs for flights to Rome and Los Angeles. Destination location derivation module can derive the destination location by the selecting the popular destination location with the lowest estimated travel cost. Alternatively a popular destination location can be selected as the destination location if its estimated travel cost is below a predetermined threshold.

Alternatively or additionally the popular travel information can identify popular destination types. Popular destination types are particular types of locations that are popular with a population of users. The popular destination types can include beach destinations skiing destinations mountain destinations national park destinations or romantic destinations. Other types of destination types can exist. For example if Honolulu Hi. is a popular destination location as indicated by travel queries from the population of users the destination location derivation module can identify beach destinations as a popular destination type. In some implementations popular destination locations can be categorized as a combination of destination types as described above. The destination location derivation module can derive a destination location that is the same destination type as the popular destination types. For example if destination location derivation module receives free text query summer vacations in Europe the destination location derivation module can derive a destination location in Europe that is categorized as a beach destination e.g. Ibiza.

Additionally or alternatively weather conditions at the popular destination locations can be obtained by the destination location derivation module . The system can obtain the weather information from online weather websites. Weather conditions for a range of dates for each of the popular destination locations can be obtained. This information can assist the destination location derivation module avoid deriving a destination location with inclement weather conditions for the planned travel dates. For example the destination location derivation module can derive popular destination locations as the destination location if the popular destination locations satisfy certain predetermined weather parameters e.g. temperature wind conditions humidity chance of precipitation.

Additionally or alternatively the popular travel information can additionally identify information about events. The destination location derivation module can obtain this information from online databases of events e.g. Ticketmaster. Information obtain for a given event can include event details describing the name of the event location of the event type of event cost of the event and date of the event. The destination location derivation module can derive destination location based on the location of the events.

The destination location derivation module parses the free text query to identify candidate destination locations from the free text query. For example from the free text query summer vacations in Paris Paris is identified as a candidate destination location.

In some implementations an algorithm is used by destination location derivation module to derive the destination location. For example the algorithm can be a probability function that determines a probability for each of the candidate destination locations. The probability for a particular candidate destination location represents a certainty that a travel query submitted to the travel search engine for the user should be defined by the particular destination location constraint. The candidate destination locations include candidate destination locations parsed from the free text query popular destination locations past user destination locations user contact locations and event locations. Candidate destination locations parsed from the free text query are assigned high probability values by the probability function

Additionally or alternatively the probability function determines probabilities for the candidate destination locations from the obtained user information and popular travel information . For example the probability function can determine the probability value for a candidate destination location from the popularity level of the destination location and the number of times the user has travelled to the destination location. The probability of the candidate destination location can be additionally weighted based on the estimated travel costs or past user travel costs for travel to the candidate destination location the weather conditions at the candidate destination location and whether the candidate destination location is a destination type that is popular or frequented by the user. For example if Paris is a candidate destination location the number of travel queries that specify Paris as the destination location the estimated travel cost for a flight to Paris the temperature in Paris and whether Paris is a popular destination type can be input into the probability function. Based on the inputted information the probability function outputs a probability value for Paris as a destination location.

In some implementations the destination location derivation module derives a single destination location from the candidate destination locations. For example the destination location derivation module derives the candidate destination location with the greatest probability as the destination location. In other implementations the destination location derivation module derives more than one destination location from the candidate destination locations. For example the destination location derivation module derives the n candidate destination locations with the greatest probabilities as destination locations where n is an integer.

The departure date derivation module receives free text query from a user. The departure date derivation module also obtains user information specific to the user and popular travel information . The departure date derivation module derives departure date from a combination of the free text query user information and popular travel information . The departure date is then used to generate the travel query by the travel query generator.

The user information provides additional information to assist the departure date derivation module derive the departure date . The user information can identify past user departure dates. The past user departure dates are dates where the user has departed from origin locations in past travel. For example if departure date derivation module receives free text query summer vacations in Europe departure date derivation module can derive a departure date based on the user s past summer departure dates. The derived departure date can be a date that is the same date or near the same date as the past user departure dates. The user information can also identify the number of times that the user has departed on a particular departure date. Departure dates that the user has frequently departed on can be given greater weight than departure dates that the user has infrequently departed on when deriving departure date .

The popular travel information provides additional information to assist the departure date derivation module derive the departure date . The popular travel information can identify popular departure dates. The popular departure dates are dates that are popular among a population of users to depart from origin locations. For example if departure date derivation module receives free text query summer vacations in Europe departure date derivation module can derive a departure date based on popular summer departure dates. The popular travel information can additionally identify how popular a departure date is based on the number of users in the population of users. Departure dates that are more popular can be given greater weight than departure dates that are less popular when deriving departure date .

The departure date derivation module parses the free text query to identify candidate departure dates from the free text query. For example from the free text query August 1 summer vacations in Paris August 1 is identified as a candidate departure date. In some implementations multiple candidate departure dates can be parsed from the free text query. For example from the free text query summer vacation in Paris departing August 1 15 every date between July 31and August 16can be determined to be a candidate departure date. Additionally the departure date derivation module can identify candidate departure dates from terms in the free text query that are associated with dates. The identified candidate departure dates can be the dates that are associated with the terms. For example from the free text query Thanksgiving flight to Los Angeles the departure date derivation module can identify the date of Thanksgiving as a candidate departure date. As a further example from the free text query flight to Los Angeles next Friday the departure date derivation module can identify the date represented by next Friday as a candidate departure date.

In some implementations an algorithm is used by departure date derivation module to derive the departure date. For example the algorithm can be a probability function that determines a probability for each of the candidate departure dates. The probability for a particular candidate departure date represents a certainty that a travel query submitted to the travel search engine for the user should be defined by the particular departure date constraint. The candidate departure dates include candidate departure dates parsed from the free text query popular departure dates and past user departure dates. Candidate departure dates that are parsed from the free text query are assigned high probability values by the probability function. Additionally or alternatively the probability function determines probabilities for the candidate departure dates from the obtained user information and popular travel information . For example the probability function can determine the probability value for a candidate departure date from the popularity of the departure date and the number of times the user has departed on or around the departure date. A candidate departure date that is more popular and frequently near the user s historical travel departure dates will be assigned a greater probability score than a candidate departure date that is not popular and not around when the user historically travels.

In some implementations the departure date derivation module derives a single departure date from the candidate departure dates. For example the departure date derivation module derives the candidate departure date with the greatest probability as the departure date. In other implementations the departure date derivation module derives more than one departure date from the candidate departure dates. For example the departure date derivation module derives the n candidate departure dates with the greatest probabilities as departure dates where n is an integer.

The return date derivation module receives free text query from a user. The return date derivation module also obtains user information specific to the user and popular travel information as described above in reference to . The return date derivation module derives return date from a combination of the free text query user information and popular travel information . The return date is then used to generate the travel query by the travel query generator.

The user information provides additional information to assist the return date derivation module derive the return date . The user information can identify past user return dates. The past user return dates are dates where the user has returned from destination locations in past travel. For example if return date derivation module receives free text query summer vacations in Europe return date derivation module can derive a return date based on the user s past summer return dates. The derived return date can be a date that is the same date or near the same date as the past user return dates. The user information can also identify the number of times that the user has returned on a particular return date. Return dates that the user has frequently returned on can be given greater weight than return dates that the user has infrequently returned on when deriving return date .

The popular travel information provides additional information to assist the return date derivation module derive the return date . The popular travel information can identify popular return dates and popular length of stays for particular destination locations or time periods. The popular return dates are dates that are popular among a population of users to return from destination locations. For example if return date derivation module receives free text query summer vacations in Europe return date derivation module can derive a return date based on popular summer return dates or popular lengths of stay in summer for the destination location. The popular travel information can additionally identify how popular a return date is based on the number of users in the population of users. Return dates that are more popular can be given greater weight than return dates that are less popular when deriving return date .

The return date derivation module parses the free text query to identify candidate return dates from the free text query. For example from the free text query summer vacations in Paris returning August 1 August 1 is identified as a candidate return date. In some implementations multiple candidate return dates can be parsed from the free text query. For example from the free text query summer vacation in Paris returning August 1 15 every date between July 31and August 16can be determined to be a candidate return date. Additionally the return date derivation module can identify candidate return dates from terms in the free text query that are associated with dates. The identified candidate return dates can be the dates that are associated with the terms. For example from the free text query vacation to Los Angeles returning Thanksgiving the return date derivation module can identify the date of Thanksgiving as a candidate return date. As a further example from the free text query vacation to Los Angeles returning next Friday the return date derivation module can identify the date represented by next Friday as a candidate return date.

In some implementations an algorithm is used by return date derivation module to derive the return date. For example the algorithm can be a probability function that determines a probability for each of the candidate return dates. The probability for a particular candidate return date represents a certainty that a travel query submitted to the travel search engine for the user should be defined by the particular return date constraint. The candidate return dates include candidate return dates parsed from the free text query popular return dates and past user return dates. Candidate return dates that are parsed from the free text query are assigned high probability values by the probability function. Additionally or alternatively the probability function determines probabilities for the candidate return dates from the obtained user information and popular travel information . For example the probability function can determine the probability value for a candidate return date from the popularity of the return date and the number of times the user has returned on or around the return date. A candidate return date that is more popular and frequently near the user s historical travel return dates will be assigned a greater probability score than a candidate return date that is not popular and not around when the user historically travels. In some implementations the return date derivation module derives a single return date from the candidate return dates. For example the return date derivation module derives the candidate return date with the greatest probability as the return date. In other implementations the return date derivation module derives more than one return date from the candidate return dates. For example the return date derivation module derives the n candidate return dates with the greatest probabilities as return dates where n is an integer.

In some implementations the return date derivation module determines a length of stay at the destination location. For example in response to the free text query Paris on August 17 for a week the free text query can be parsed to determine that the length of stay is one week or seven days. The return date derivation module then derives the return date by adding the length of stay to the departure date derived by the departure date derivation module. For example the seven day length of stay is added to August 17 to derive a return date of August 24.

The travel search engine interface receives origin location destination location departure date and return date . From origin location destination location departure date and return date the travel search engine interface generates a travel query and transmits the travel query to a travel search engine.

In some implementations the travel search engine interface concatenates text describing the origin location destination location departure date and return date . The travel query can be the text string that results from the concatenation. In some implementations the travel query expressly identifies the different travel parameters in the travel query. For example San Francisco can be identified as a destination location in the travel query. The text string is transmitted to a travel search engine.

In some implementations multiple travel queries can be generated from a free text query. More than one travel constraint can be derived by each of the modules in the travel query generator. For example the origin location derivation module can derive more than one origin location from the free text query. As a further example the departure date derivation module can additionally derive a number of departure dates from the free text query. The travel search engine interface can therefore receive more than one of each origin location destination location departure date and return date. The travel search engine interface can generate multiple travel queries by concatenating different combinations of the received travel constraints.

The travel search engine interface can communicate directly with the travel search engine by any programmable means. For example the travel search engine interface can transmit the travel query to the travel search engine by means of an application programming interface API implemented or supported by the travel search engine. Alternatively travel search engine interface can communicate with the travel search engine by means of a web interface associated with the travel search engine. A user agent can be utilized to enter the travel query into the web interface.

In some implementations the travel search engine interface provides a structured user interface in response to the free text query. The structured user interface can contain fields for different travel constraints e.g. origin location destination location departure date and return date. Each field can be pre populated with a respective travel constraint received by the travel search engine interface . For example the origin location field can be pre populated with the origin location that the origin location derivation module derived from the free text query. A user can modify the travel parameters pre populated in the fields to create a custom travel query. For example the user can remove the pre populated travel parameters and input different travel parameters into the fields. A custom travel query is then generated from the travel parameters in the fields and transmitted to the travel search engine.

Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry in tangibly embodied computer software or firmware in computer hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs i.e. one or more modules of computer program instructions encoded on a tangible non transitory program carrier for execution by or to control the operation of data processing apparatus. Alternatively or in addition the program instructions can be encoded on an artificially generated propagated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. The computer storage medium can be a machine readable storage device a machine readable storage substrate a random or serial access memory device or a combination of one or more of them.

The term data processing apparatus refers to data processing hardware and encompasses all kinds of apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can also be or further include special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit . The apparatus can optionally include in addition to hardware code that creates an execution environment for computer programs e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them.

A computer program which may also be referred to or described as a program software a software application a module a software module a script or code can be written in any form of programming language including compiled or interpreted languages or declarative or procedural languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program may but need not correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code. A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Computers suitable for the execution of a computer program include by way of example can be based on general or special purpose microprocessors or both or any other kind of central processing unit. Generally a central processing unit will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a central processing unit for performing or executing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio or video player a game console a Global Positioning System GPS receiver or a portable storage device e.g. a universal serial bus USB flash drive to name just a few.

Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user embodiments of the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input. In addition a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user for example by sending web pages to a web browser on a user s device in response to requests received from the web browser.

Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other. In some embodiments a server transmits data e.g. an HTML page to a user device e.g. for purposes of displaying data to and receiving user input from a user interacting with the user device which acts as a client. Data generated at the user device e.g. a result of the user interaction can be received from the user device at the server.

While this specification contains many specific implementation details these should not be construed as limitations on the scope of any invention or on the scope of what may be claimed but rather as descriptions of features that may be specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system modules and components in the embodiments described above should not be understood as requiring such separation in all embodiments and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In some cases multitasking and parallel processing may be advantageous.

