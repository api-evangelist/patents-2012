---

title: System and method for shared folder creation in a network enviornment
abstract: A method includes receiving a request over a network from a user to mount a shared folder, which is configured to store electronic data to be selectively accessed based on a policy. The method also includes evaluating whether the user is authenticated. The method also includes generating a random mount point for mounting the shared folder, and redirecting the user to the random mount point if the user is authenticated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09317671&OS=09317671&RS=09317671
owner: CISCO TECHNOLOGY, INC.
number: 09317671
owner_city: San Jose
owner_country: US
publication_date: 20120810
---
This disclosure relates in general to the field of communications and more particularly to a system and a method for shared folder creation in a network environment.

Cloud computing can provide flexibility and scalability to any Information Technology IT organization. Furthermore it can enable an organization to provision new services quickly and cost effectively by resolving common IT requirements and policies. Cloud computing can also meet high utilization demands and dynamically respond to changes in the organizational environment. Many cloud computing environments are multi tenancy multi user environments with users accessing common folders and files. Multi tenancy multi user environments may increase operational efficiency through a cost effective use of expensive infrastructure. One issue that surfaces in environments in which files are routinely shared relates to security. There are certain inefficiencies and vulnerabilities in many cloud computing and or shared file paradigms that should be resolved.

A method is provided and includes receiving a request over a network from a user to mount a shared folder which is configured to store electronic data any type of information to be selectively accessed based on a policy e.g. the policy could dictate that only certain users would have access to the shared folder . The method also includes evaluating whether the user is authenticated e.g. using any suitable authentication protocol . This could involve the use of cookies previously cached authentication credentials enterprise configurations e.g. virtual private network VPN authentications location based authentication in any form etc. The method also includes generating a random mount point for mounting the shared folder and redirecting the user to the random mount point if the user is authenticated.

The random mount point can be generated using a random number generator which can simply be reflective of any type of algorithm for generating such a random number. A path for the shared folder can be dynamically created in response to the request and the path can be destroyed i.e. taken down made inaccessible etc. in response to user signoff.

In certain example implementations the method can include creating a substantially identical copy of the shared folder at the random mount point. Certain data of the shared folder can be provided at a secondary location based on a caching policy. Additionally the method could include synchronizing the random mount point with the shared folder when the shared folder is unmounted. The request can be received during a user session where invalidating the random mount point can occur if either or both of the following events occur a expiring of the user session and b receiving a request from the user to unmount the shared folder.

Turning to is a simplified block diagram illustrating a communication system for shared folder creation in a network environment in accordance with one example embodiment. Communication system includes a user that can access a host to read and write from a storage in communication with host . The term user is inclusive of any electronic device e.g. computer smartphone iPad etc. client server peer endpoint user equipment service application process or other object capable of sending receiving or forwarding information over communication links in a network environment.

Storage may include a shared folder to which various users may have access permission. During a user session a mount point creation module may create a random mount point through which user may access shared folder . As used herein the term mount point refers to a file system object such as a locally available link directory folder or file at which a storage medium file system disk partition directory folder file or similar object can be made accessible. More generally the term mount is meant to encompass any type of provisioning creation generation construction assignment relegation allocation associated with initiating a shared folder.

For example user may request to mount shared folder which may be located on a specific fixed path e.g. host shared folder . Depending on the particular operating system of user such a request may be implemented through a command such as mount host shared folder local mount point which may mount a folder located at host shared folder to location local mount point on user . As used herein the term random mount point refers to a mount point created according to the embodiments described herein. In various embodiments random mount point may be created at a randomly generated path for example host random 1.

According to various embodiments mount point creation module may create a substantially identical copy of shared folder at random mount point and redirect user to random mount point instead of shared folder . Redirection can include sending instructions to user to connect to the redirected path e.g. host random 1 rather than the requested path e.g. host shared folder . Redirection may be transparent to user and may be effected automatically without intervention by an end user e.g. human operator . In various embodiments random mount point may be generated on storage . The mount request may be regenerated e.g. by user as host random 1 local mount point. After the mount command runs and if user has proper permissions from host user can view through appropriate commands a listing of the files in host shared folder that has been substantially copied to random mount point at host random 1.

In various embodiments random mount point can be a folder that may be substantially identical to shared folder . During the user session user may read and write from random mount point as though it were shared folder . When the user session is terminated random mount point may be unmounted from the file system of host and random mount point may be deleted destroyed erased or otherwise rendered inaccessible. When random mount point is unmounted changes made to random mount point during the user session may be propagated to shared folder . For example when the user session is terminated random mount point may be synchronized with shared folder through a synchronization process.

In various embodiments the path exposed to user for accessing shared folder may change with each new session. When user starts another user session and attempts to re mount shared folder mount point creation module may generate a second random path e.g. host random 2 for random mount point that may be different from the previously generated random path e.g. host random 1 for random mount point . Changes made to random mount point during the previous user session having been propagated to shared folder would be visible in the newly generated random mount point during the second user session.

In various embodiments communication system may facilitate dynamic mounting of shared folder for example to reduce attack surfaces and make shared folder creation and maintenance more convenient. Random paths for random mount point that may be valid merely for a specific user and corresponding user session can reduce hacking and other attacks on shared folder as the actual path of shared folder on storage may be rendered invisible to user through the random path of random mount point . In various embodiments user logins to authenticate users can also ensure optimized resource allocation.

For purposes of illustrating the techniques of communication system it is important to understand the communications in a given system such as the system shown in . The following foundational information may be viewed as a basis from which the present disclosure may be properly explained. Such information is offered earnestly for purposes of explanation only and accordingly should not be construed in any way to limit the broad scope of the present disclosure and its potential applications.

In a multi tenant and or multi user environment serving hundreds of users creation of a folder per user with user specific access controls at configuration or user provisioning time may not be ideal. At any given instant many folders may not be in use by any of the users although they may be accessible by any user. In particular shared folders that are accessible by multiple users may face security risks due to their fixed paths in the system. For example having shared folders permanently exposed increases the probability of the shared folders or the shared folder service being used as a launch pad for attack by bots e.g. a loosely organized system of computers that responds to commands issued by an attacker from a central location especially for Windows based systems. A Linux based operating system OS may be used to circumvent inherent Windows vulnerabilities. The Linux OS may firewall the Windows OS and act as a primary interface to the user. However shared folders implemented in Linux e.g. using services like Samba can also have associated vulnerabilities.

Bots e.g. malicious software can infiltrate companies by searching for vulnerable points of entry in a network such as a shared folder e.g. network share . Once a bot infects a computer the machine can be controlled by another entity outside the network and can become part of another network of infected computers. One of the bots modes of entry may arise from employees operating outside their company s network with a device that is poorly protected against direct hacking style attacks. In particular bots can use sniffers to identify sources and destinations of packets traversing the infected computer and can determine for example the location of shared folders. Once the shared folder location is known and exposed to the bots the bots can infect the shared folders and use the shared folders as launch pads for attacks deeper into the network.

Communication system is configured to address these issues and others in offering a system and a method for shared folder creation in a network environment. Embodiments of communication system can receive a request to mount shared folder e.g. host shared folder generate a random path e.g. host random 1 to mount shared folder and respond with the random path. In various embodiments a surface of attack may be mitigated by creating and exposing shared folder on a demand supply basis. A trigger for the demand could be any event that authenticates user including system login through a user interface UI page Kerberos based authentication or an application programming interface API based request.

After identity of user is confirmed embodiments of communication system may allocate and expose shared folder through random mount point which can be accessible by user . In some embodiments such accessibility may be provided through a dynamically generated path to random mount point . In various embodiments random mount point may be invalidated e.g. destroyed deleted or otherwise rendered inaccessible when at least one event occurs from a group consisting of a expiration of the user session and b a request from user to unmount shared folder . For example after user is signed off from the user session random mount point can be unmounted and optionally destroyed so that access to random mount point is terminated. A bot that may have captured the path to random mount point would have stale information as the path may not be valid after the user session has expired.

In various embodiments the user session may be initiated upon a request by user to mount shared folder and the user session may expire when user requests unmounting of shared folder e.g. by unmounting random mount point . In some embodiments the user session may be initiated when user logs into host and the user session may expire when at least one of the following events occur 1 user signs off from the user session e.g. user logs out of host user unmounts user folder etc. and 2 the user session times out e.g. after a predetermined time of inactivity . Any mechanism to initiate and expire the user session may be implemented within the broad scope of the present disclosure.

Embodiments of communication system may also make optimizations for resource allocation in a distributed environment to point to a hardware resource closest to the location of user at a given time. For example for a travelling worker e.g. mobile user the share e.g. random mount point could be physically located on a server in New York on the day the worker is in New York and the share could be moved to San Jose when the worker moves to San Jose. Simultaneously resources can be freed up for use by other system users. If the share is not to be destroyed the data can be backed up at a secondary location based on caching or other such policy.

In various embodiments shared folder access could also be enabled through HTML5 based graphical user interfaces GUIs Samba or Common Internet File System CIFS to enable drag and drop functionalities. In addition as the path to random mount point may not be fixed optimization algorithms can be implemented in addition to folder creation sharing logic to improved the shared folder access efficiency. Embodiments of communication system can present various advantages. For example dynamic shared folder creation and policy application to folder creation can reduce the attack surface. When random mount point is created policies such as access control lists ACLs can be dynamically applied automatically without any need for manual intervention. Faster shared folder access can be enabled at remote sites through dynamic folder creation at local resources. Furthermore embodiments of communication system can optimize the access and storage of data through appropriate caching policies.

In various embodiments for every session user may authenticate and mount random mount point from the random path generated post authentication for the specific user and user session. The random path may be a logical connection to physical share folder . If a particular user say user 1 requests mounting share user1 user 1 may be redirected to a random path say share 1234. Another user say user 2 requesting mounting to the same share i.e. share user1 may be redirected to share 1345. Both share 1234 and share 1345 may point to the same physical shared folder through two separate random mount points while the physical location of shared folder remains unexposed to the different users.

In various embodiments storage may be configured with appropriate protocols and applications to support ACLs. In such embodiments host may direct storage to allow permissions e.g. read or write permissions to user according to applicable ACLs. The applicable ACLs may be determined from user authentication credentials e.g. username and password in some embodiments. In other embodiments the applicable ACLs may be determined through other mechanisms e.g. IP address of user operating system of user etc. . Various mechanisms to apply ACLs may be implemented according to the broad scope of the embodiments discussed herein.

Turning to the infrastructure of communication system the network topology can include any number of users hosts storage servers routers gateways and other nodes inter connected to form a large and complex network. A node may be any electronic device user server peer service application or other object capable of sending receiving or forwarding information over communications channels in a network. Elements of may be coupled to one another through one or more interfaces employing any suitable connection wired or wireless which provides a viable pathway for electronic communications. Additionally any one or more of these elements may be combined or removed from the architecture based on particular configuration needs. Communication system may include a configuration capable of TCP IP communications for the electronic transmission or reception of data packets in a network. Communication system may also operate in conjunction with a User Datagram Protocol Internet Protocol UDP IP or any other suitable protocol where appropriate and based on particular needs. In addition gateways routers switches and any other suitable nodes physical or virtual may be used to facilitate electronic communication between various nodes in the network.

Note that the numerical and letter designations assigned to the elements of do not connote any type of hierarchy the designations are arbitrary and have been used for purposes of teaching only. Such designations should not be construed in any way to limit their capabilities functionalities or applications in the potential environments that may benefit from the features of communication system . It should be understood that the communication system shown in is simplified for ease of illustration.

The example network environment may be configured over a physical infrastructure that may include one or more networks and further may be configured in any form including but not limited to local area networks LANs wireless local area networks WLANs virtual local area networks VLANs metropolitan area networks MANs wide area networks WANs virtual private networks VPNs Intranet Extranet any other appropriate architecture or system or any combination thereof that facilitates communications in a network. In some embodiments a communication link may represent any electronic link supporting a LAN environment such as for example cable Ethernet wireless technologies e.g. IEEE 802.11x ATM fiber optics etc. or any suitable combination thereof. In other embodiments communication links may represent a remote connection through any appropriate medium e.g. digital subscriber lines DSL telephone lines T1 lines T3 lines wireless satellite fiber optics cable Ethernet etc. or any combination thereof and or through any additional networks such as a wide area networks e.g. the Internet .

In various embodiments storage may be any kind of storage medium including any type of hard disk drive floppy disk drive erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM random access memory RAM read only memory ROM flash memory optical disks CD ROMs DVD ROMs magnetic or optical drives or other types of machine readable mediums suitable for storing electronic instructions. More generally storage can be provisioned as part of any server proprietary device console database computer register table cache queue or other storage structures all of which could be referenced in any suitable timeframe.

In certain embodiments storage may be physically separated from host over a network in other embodiments storage may be physically collocated with host in a common device such as any of those identified above. In various embodiments host may be a server application running in a server computer or other such computing device. Mount point creation module may be an application running within host in one embodiment. In another embodiment mount point creation module may be a stand alone application running alongside host . In yet another embodiment mount point creation module may be located in a device separate from host and accessed by host at each mount request from user .

Turning to is a simplified sequence diagram illustrating certain example activities that may be associated with an embodiment of communication system . At user may send a request to host to mount shared folder at host shared folder. At host may create random path e.g. host and redirect user to host for random mount point . At user may request to mount random mount point at host . At host may send an authentication request for example login credentials to user . At user may respond with an authentication response for example an appropriate user name and corresponding password. Various other authentication mechanisms may be used within the broad scope of the embodiments discussed herein. For example security certificates passkey fingerprints etc. may be used as authentication mechanisms. The authentication response may indicate appropriate permissions from an associated Access Control List ACL . For example the authentication response may indicate that user has read and write permissions to the requested folder. Host may appropriate cause storage to enforce such permissions from the ACL on random mount point . Storage may mount random mount point with the appropriate permissions at .

Turning to is a simplified block diagram illustrating example details of embodiments of communication system . Mount point creation module may include a processor a memory element an authentication module a random number generator a mount module a redirect module and an ACL module . In various embodiments user may request to mount shared folder located within storage . Authentication module may respond with an authentication request and verify the authentication response from user . Random number generator may generate a random number for example random 1.

In various embodiments random number generator may be a computational or physical device designed to generate a sequence of numbers or symbols that lack any pattern. The random number may be generated through any known methods including mechanisms similar to security key generation and other authentication and or security algorithms. In many embodiments the seed for random number generation may include a combination of various session specific and user specific parameters such as user name IP address of user name of shared folder and password among other parameters.

Mount module may direct storage to create random mount point at a path that includes the generated random number e.g. host random 1 . Storage may copy all or at least substantially all contents of shared folder to random mount point at the random path. Redirect module may respond to the user request with the random path. User may thereafter directly interface with random mount point via the random path and mount random mount point appropriately. In some embodiments ACL module may direct storage to generate random mount point according to predetermined ACL policies. For example a specific user may have only read permissions to shared folder . Accordingly storage may create random mount point with read only permissions for user . In another example user may have both read and write permissions according to the ACL. Accordingly storage may create random mount point with read and write permissions for user .

Turning to is a simplified block diagram illustrating another embodiment of communication system . Shared folder may be located at a remote storage associated with a remote host . Remote host may be accessible to host and storage via public networks such as the Internet. For example host may be an enterprise server located in New York and remote host may be another enterprise server located in Los Angeles. In an example embodiment a worker may have a fixed office with an associated desktop in San Jose and may travel to New York temporarily. While at New York the worker may want to access the worker s desktop in San Jose for example to retrieve some files stored in the desktop s hard drive. Connecting directly to remote host from a laptop or other mobile device user and downloading any desired files from remote storage may take a long time and may be prone to security risks. Instead the desktop and associated files in shared folder may be accessed through local host in New York.

In various embodiments user may attempt to mount shared folder via a mount request to local host . Mount point creation module in host may generate a random path and direct storage to create random mount point locally for example in storage . Storage may create random mount point with write only permissions and permit user to mount random mount point . Storage or alternatively host may initiate a remote session e.g. through virtual private network or other such secure connection with remote host and request mounting shared folder . After shared folder is successfully mounted storage may copy substantially all contents of shared folder into random mount point . According to another embodiment storage may merely copy substantially all contents of shared folder over the remote connection without mounting shared folder . In some embodiments shared folder may be unmounted from storage after copying substantially all its contents to random mount point . The connection to remote host may also be terminated simultaneously.

Subsequently storage may allow read and write access according to applicable ACL policies . User may read and write to random mount point locally. The local connection may be faster than the remote connection. When the user session expires storage may reopen the connection or alternatively open a new connection with remote host and synchronize random mount point with shared folder on remote storage . Changes made to random mount point may be propagated to shared folder . Random mount point may be subsequently deleted destroyed or otherwise rendered inaccessible.

Turning to is a simplified sequence diagram illustrating example activities that may be associated with embodiments of communication system . At user may send a request to host to mount shared folder at host shared folder. Shared folder may be located at remote storage . At host may generate the random path and redirect user to the generated path for example host . In various embodiments the random path may point to local storage and random mount point may be created at local storage . At host may interface with remote host and request to mount shared folder at remote host shared folder. At user may send a request to mount random mount point at host .

At host may send user an authentication request. At user may respond with the appropriate authentication response. Host may cause storage to review relevant ACLs and enforce applicable policies on random mount point as appropriate. At storage may create random mount point with new write no edit or read only permissions. The new write only version may be made available until such time as shared folder is mounted successfully on storage . Thus user may mount the write only version of shared folder . At shared folder may be successfully mounted on host . After shared folder is successfully mounted on host e.g. on storage substantially all contents of shared folder may be made available at random mount point . At the process ends as shared folder is made visible to user with suitable read and write permissions according to applicable ACL policies.

Turning to is a flow diagram illustrating example operational activities that may be associated with mounting shared folder in an example embodiment of communication system . Operations may start at for example when user connects to host . At user may attempt to mount host . Host may generate a random mount point at . At host may direct storage to create a substantially identical copy of shared folder at generated random mount point and redirect user to the generated random mount point . At user may request to mount random mount point . In an example embodiment the request may be directed to storage .

At host may prompt for user authentication. For example a pop up message may be presented on a display associated with user asking for login credentials e.g. user name and password . At host may determine whether user is authenticated. If user is authenticated at host checks whether user has privileges to access e.g. read or write to shared folder . If user has privileges to access shared folder host may direct storage to mount user folder at generated mount point with the appropriate permissions and privileges. The operations may end at . Turning back to if user is not authenticated or if user does not have privileges to access shared folder at the mount request may be denied at .

Turning to is a simplified flow diagram illustrating other example activities that may be associated with mounting shared folder over a remote connection. Operations may start at for example when user logs into host . At user may attempt to mount shared folder at remote host shared folder. At host may generate random mount point e.g. host random 1 locally e.g. at local storage . At storage may create a folder at random mount point locally and host may redirect user to the generated to random mount point . At user may request to mount random mount point .

At host may prompt for user authentication. At user s authentication credentials may be checked to determine whether user is authenticated. If user is authenticated user s privileges to access shared folder may be checked at . If user has privileges to access shared folder at storage may mount user folder at the generated mount point with write only permissions. At host may open a remote connection to remote storage e.g. through remote host and mount shared folder over the remote connection. At host or storage may copy substantially all contents of shared folder to random mount point over the remote connection. At host may complete mount with all appropriate permissions e.g. read and write for example according to applicable ACL policies. The operations may end at . Turning back to if user is not authenticated or if user does not have privileges to access shared folder at the mount request may be denied at .

Turning to is a simplified flow diagram illustrating yet other example activities that may be associated with unmounting shared folder in an example embodiment of communication system . Operations may start at for example during a user session. At user may unmount random mount point e.g. through a suitable unmount request to host . Alternatively the unmount process may automatically follow a session timeout. At host may invalidate the generated path with termination of the user session. At a determination may be made whether active sessions e.g. with other users exist for shared folder . If active sessions do not exist shared folder may be unmounted from the file system of host at and the operations may end at . If active sessions exist shared folder may remain mounted on host .

Turning to is a simplified flow diagram illustrating example activities that may be associated with host according to an example embodiment of communication system . Operations may begin at at which host may receive a request from user to mount shared folder at host shared folder. At host may authenticate user e.g. with username and password or other such authenticating mechanisms . At host may generate a random path. At host may direct storage to create a substantially identical copy of shared folder at random mount point . At host may direct storage to apply applicable ACL policies for user . At host may redirect user to random mount point rather than shared folder .

Turning to is a simplified flow diagram illustrating example operational activities that may be associated with storage in embodiments of communication system . Operations may begin at at which storage may receive a command from host to create a substantially identical copy of shared folder at random mount point . At storage may create a folder at random mount point . In some embodiments e.g. where shared folder is not located at storage storage may create a folder with write only permissions until the remote shared folder can be accessed and copied. At storage may copy substantially all contents of shared folder to the newly created folder. At storage may receive the mount request from user requesting mounting of the folder at random mount point . At a determination may be made whether user has privileges to access shared folder according to applicable ACLs. At if user has access privileges storage may permit the mount request. At the operations may end. If user does not have access privileges storage may deny the mount request at .

Turning to is a simplified block diagram illustrating another example embodiment of communication system . Two clients and may request host to mount shared folder . Mount point creation module on host may generate two random mount points e.g. random mount point and e.g. random mount point . For example host may generate two random numbers random 1 and random 2 corresponding to random mount points and respectively. Mount point creation module may direct storage to substantially copy shared folder to random mount points and . Host may redirect user and user to random mount point and random mount point respectively. User may mount random mount point and user may mount random mount point and read and write thereto according to applicable ACL policies for the respective users. Changes made to random mount points and may be propagated to shared folder after termination of respective user sessions of user and user .

Note that in this Specification references to various features e.g. elements structures modules components steps operations characteristics etc. included in one embodiment example embodiment an embodiment another embodiment some embodiments various embodiments other embodiments alternative embodiment and the like are intended to mean that any such features are included in one or more embodiments of the present disclosure but may or may not necessarily be combined in the same embodiments. Note also that an application as used herein this Specification can be inclusive of an executable file comprising instructions that can be understood and processed on a computer and may further include library modules loaded during execution object files system files hardware logic software logic or any other executable modules.

In example implementations at least some portions of the sharing and or authentication activities outlined herein may be implemented in software for example provided by mount point creation module . In certain embodiments one or more of the sharing and or authentication features may be implemented in hardware provided external to these previously identified elements e.g. host storage mount point correlation module shared folder etc. or consolidated in any appropriate manner to achieve the intended functionality. Any of the various network elements of may include software or reciprocating software that can coordinate in order to achieve the operations as outlined herein. In still other embodiments these elements may include any suitable algorithms hardware software components modules interfaces or objects that facilitate the operations thereof.

Furthermore mount point creation module described and shown herein and or its associated structures may also include suitable interfaces for receiving transmitting and or otherwise communicating data or information in a network environment. Additionally some of the processors and memory elements associated with the various nodes may be removed or otherwise consolidated such that a single processor and a single memory element are responsible for certain activities. In a general sense the arrangements depicted in the FIGURES may be more logical in their representations whereas a physical architecture may include various permutations combinations and or hybrids of these elements. It is imperative to note that countless possible design configurations can be used to achieve the operational objectives outlined here. Accordingly the associated infrastructure has a myriad of substitute arrangements design choices device possibilities hardware configurations software implementations equipment options etc.

In some of example embodiments one or more memory elements e.g. memory element can store data used for the operations described herein. This includes the memory element being able to store instructions e.g. software logic code etc. in non transitory media such that the instructions are executed to carry out the activities described in this Specification. A processor can execute any type of instructions associated with the data to achieve the operations detailed herein in this Specification. In one example processors e.g. processor could transform an element or an article e.g. data from one state or thing to another state or thing. In another example the activities outlined herein may be implemented with fixed logic or programmable logic e.g. software computer instructions executed by a processor and the elements identified herein could be some type of a programmable processor programmable digital logic e.g. a field programmable gate array FPGA an EPROM an EEPROM an ASIC that includes digital logic software code electronic instructions flash memory optical disks CD ROMs DVD ROMs magnetic or optical cards other types of machine readable mediums suitable for storing electronic instructions or any suitable combination thereof.

In operation any of the components in communication system can include one or more memory elements e.g. memory element for storing information to be used in achieving operations as outlined herein. These devices may further keep information in any suitable type of non transitory storage medium e.g. RAM ROM field programmable gate array FPGA EPROM EEPROM etc. software hardware or in any other suitable component device element or object where appropriate and based on particular needs. The information being tracked sent received or stored in communication system could be provided in any database register table cache queue control list or storage structure based on particular needs and implementations all of which could be referenced in any suitable timeframe. Any of the memory items discussed herein should be construed as being encompassed within the broad term memory element. Similarly any of the potential processing elements modules and machines described in this Specification should be construed as being encompassed within the broad term processor. 

It is also important to note that the operations and steps described with reference to the preceding FIGURES illustrate only some of the possible scenarios that may be executed by or within the system. Some of these operations may be deleted or removed where appropriate or these steps may be modified or changed considerably without departing from the scope of the discussed concepts. In addition the timing of these operations may be altered considerably and still achieve the results taught in this disclosure. The preceding operational flows have been offered for purposes of example and discussion. Substantial flexibility is provided by the system in that any suitable arrangements chronologies configurations and timing mechanisms may be provided without departing from the teachings of the discussed concepts.

Although the present disclosure has been described in detail with reference to particular arrangements and configurations these example configurations and arrangements may be changed significantly without departing from the scope of the present disclosure. For example although the present disclosure has been described with reference to particular communication exchanges involving certain network access and protocols communication system may be applicable to other exchanges or routing protocols. Moreover although communication system has been illustrated with reference to particular elements and operations that facilitate the communication process these elements and operations may be replaced by any suitable architecture or process that achieves the intended functionality of communication system .

Numerous other changes substitutions variations alterations and modifications may be ascertained to one skilled in the art and it is intended that the present disclosure encompass all such changes substitutions variations alterations and modifications as falling within the scope of the appended claims. In order to assist the United States Patent and Trademark Office USPTO and additionally any readers of any patent issued on this application in interpreting the claims appended hereto Applicant wishes to note that the Applicant a does not intend any of the appended claims to invoke paragraph six 6 of 35 U.S.C. section 112 as it exists on the date of the filing hereof unless the words means for or step for are specifically used in the particular claims and b does not intend by any statement in the specification to limit this disclosure in any way that is not otherwise reflected in the appended claims.

