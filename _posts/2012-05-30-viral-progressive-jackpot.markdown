---

title: Viral progressive jackpot
abstract: Methods, systems, and computer programs are presented for executing a computer game. One method includes an operation for setting an initial value to the jackpot of a first player. The jackpot of the first player is increased based on each bet by the first player in the computer game. Additionally, the jackpot of the first player is increased based on each bet made by friends of the first player in the computer game. The friends of the first player have a social connection with the first player, and the jackpot of the first player is independent from bets in the computer game of players that are not friends of the first player. The method further includes an operation for resetting the jackpot of the first player to the initial value when the first player or when any friend of the first player wins the jackpot.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09495835&OS=09495835&RS=09495835
owner: Zynga Inc.
number: 09495835
owner_city: San Francisco
owner_country: US
publication_date: 20120530
---
The present embodiments relate to methods for executing games in a distributed environment and more particularly methods systems and computer programs for providing viral rewards in a computer game.

The popularity of casino games has extended to casino games played online. Online games such as poker slots blackjack etc. are played by a large number of users on a computer. However the enjoyment of these online games may be reduced due to the solitary nature of some of these games such as slots where a player bets against a machine and more particularly against the odds of winning offered by the machine. In a slots game the player enters a bet and spins the wheel hoping to get a winning combination that would provide a reward. However there is no typical social interaction with other players in the game.

Social interaction in online games is appealing to many users that wish to share some of their gaming experience with other friends or other potential friends that may be made online. But existing slots online games do not currently provide many opportunities for social interaction with other players nor they provide gaming interactions with other players as the game of a slots player does not relate to the game of another slots players.

Methods systems and computer programs are presented for executing a computer game. It should be appreciated that the present embodiments can be implemented in numerous ways such as a method an apparatus a system a device or a computer program on a computer readable medium. Several embodiments are described below.

In one embodiment a method includes an operation for setting an initial value to the jackpot of a first player. The jackpot of the first player is increased based on each bet by the first player in the computer game. Additionally the jackpot of the first player is increased based on each bet made by friends of the first player in the computer game. The friends of the first player have a social connection with the first player and the jackpot of the first player is independent from bets in the computer game by players that are not friends of the first player. The method further includes an operation for resetting the jackpot of the first player to the initial value when the first player or any friend of the first player wins the jackpot.

In another embodiment a system for executing a computer game includes a memory and a jackpot manager. The memory is operable to store a jackpot state for each player of the computer game. The jackpot manager includes a processor and is operable to receive jackpot updates from players. For each jackpot update from a first player the jackpot manager updates the jackpot states of the first player and of friends of the first player in the computer game. When the first player wins the jackpot the jackpot manager resets the jackpot states of the first player and of the friends of the first player while leaving unchanged the jackpot states of players that are not friends of the first player in the computer game.

In yet another embodiment a computer program embedded in a non transitory computer readable storage medium when executed by one or more processors for executing a computer game includes program instructions for setting an initial value to a jackpot of a first player and program instructions for increasing the jackpot of the first player based on each bet by the first player in the computer game. Additionally the computer program further includes program instructions for increasing the jackpot of the first player based on each bet made by friends of the first player in the computer game where the friends of the first player have a social connection with the first player and program instructions for resetting the jackpot to the initial value when the first player or any friend of the first player wins the jackpot. The jackpot of the first player is left unchanged when players that are not friends of the first player in the computer game win the jackpot.

Other aspects will become apparent from the following detailed description taken in conjunction with the accompanying drawings.

The following embodiments describe methods systems and computer programs for executing a computer game. It will be apparent that the present embodiments may be practiced without some or all of these specific details. In other instances well known process operations have not been described in detail in order not to unnecessarily obscure the present embodiments.

Embodiments provide a jackpot that has a viral component which means that the size of the jackpot is related to social activity in the game. In one embodiment the jackpot for each player is calculated independently instead of having one big jackpot that is common to all the players in the casino. In addition the size of the jackpot for each player is based on the amount bet by the player and based on the amount bet by friends of the player. In one embodiment the jackpot of a particular player is not affected by bets performed by players that are not friends of the particular player.

It is noted that the embodiments described herein are described with reference to the slots online game but the principles may be utilized in other online games as well as in real life games. The embodiments described herein should therefore not be interpreted to be exclusive or limiting but rather exemplary or illustrative.

As used herein a friend of a player refers to a person that has established a social link with the player in the game. For example a first player has invited a second player to be buddies or friends in the game and the second player has accepted which makes them friends in the game. In other embodiments the friendship in the game is established via a social network such that friends of the player in the social network become friends of the player in the online game. It is noted that although two persons may be friends in real life if the two persons have not established a friendship relationship online they will not be considered friends in the online game. Of course if two persons do not know each other in real life and they do not have an online friendship relationship the two persons will not be friends in the game. This means that in one embodiment the jackpots of the two persons that do not have an online friendship relationship will be independent from each other.

By linking the size of the jackpot with the play of friends the viral component of the slots online game becomes very relevant because the more a player plays and the more friends play the bigger the jackpot will be. Also the more friends that play the game the bigger the jackpot which encourages players to invite friends to play in the online social game to build bigger jackpots.

In one embodiment the jackpot is referred to as a viral progressive jackpot. The jackpot is progressive because the more that players play the bigger the jackpot will be and the jackpot is viral because the more friends play the bigger the jackpot will be.

In one embodiment message shows how many friends are playing at the particular machine or what the size of the player s jackpot is. At the bottom of the GUI and informational area indicates among other things how much game currency the player has e.g. 85 000 and how many stars the player has where the stars indicate how much progress has been made in the game gaining stars as the player spends more time playing the slots game.

The wheels spin when the player presses the spin button . The player is able to enter the amount of lines being bet on every time the wheels spin. Each of the lines includes a different combination of symbols from the wheels.

For example one line may include the five symbols across the center line while other lines may form different combinations of symbols such as the top symbol on the first three wheels followed by the center symbol in the fourth wheel and followed by the bottom symbol in the fifth wheel.

In one embodiment the player must get a specific combination of the wheels to win the jackpot. For example the player must get five jackpot symbols across the center line. This means that the jackpot is a random event based on the probability of obtaining the jackpot symbol in each of the wheels. Therefore in one embodiment the jackpot is based on luck and not based on other factors such as when the jackpot reaches a certain value.

In another embodiment the jackpot size may be also based on other factors besides the probability of the wheels and the probability to win the jackpot may change when the jackpot reaches a certain size or a certain age e.g. elapsed since the jackpot was initialized etc.

In yet another embodiment the odds of winning the jackpot are adjusted in the computer program by aiming to obtain a winner on average for a player that plays once a week and has three sessions per day but other odds adjusting parameters may also be utilized.

In bet field the player enters the amount being bet for each line and the total bet field indicates the total amount bet in the current spin. The total bet amount is equal to the number of lines times the bet per line . A maximum lines button provides a shortcut to the player for betting the maximum number of lines.

In one embodiment as the player spins the wheels the jackpot continuously grows based on the amount bet by the player. In one embodiment the jackpot growth also referred to as the jackpot contribution by the player is a fixed percentage of the amount bet although the percentage amount may vary from machine to machine. For example as the player progresses in the game the player may gain access to machines that provide biggest rewards including a faster jackpot growth. In one embodiment the jackpot contribution is 10 percent of the bet and in other embodiment the jackpot contribution is in the range of 2 to 15 percent although other values are also possible.

In another embodiment different formulas for jackpot growth may be utilized. For example the jackpot growth may be at a fixed percentage until the jackpot reaches a predetermined amount and then changed to a different percentage growth afterwards providing different accelerations for the jackpot growth at different times. In another embodiment the jackpot grows based on a geometric function for example growing at an exponential growth which means that the jackpot grows faster as the jackpot gets bigger or inverse exponential growth where the jackpot grows slower as the jackpot gets bigger.

After playing the game for a while the player has made a certain contribution to the jackpot e.g. 100 dollars and the same contribution is added to the jackpots of friends of the player which means that the jackpot of the friends have also gone up 100 dollars . Accordingly the more friends a player has playing the game the faster the jackpot will grow for the player. This way jackpot growth is based on the viral contribution from friends of the player. The reciprocal is also true when a player contributes to her own jackpot the jackpot of the player s friends grow at the same time.

In one embodiment the contribution Cmade by player p to the jackpot is calculated according to the following formula rate 1 

Where Bis the amount of money bet by player p since the jackpot was initialized e.g. the time when player p or a friend of player p won the jackpot and rate is a percentage value for determining contribution C. Of course if a new player pestablishes a new friendship relationship in the game the jackpot Jfor pwill include the contributions from the friends of pmade after the friendship relationship was established not including the contributions from the friends of pmade before becoming friends in the game.

The jackpot Jof player p is calculated by adding the contribution Cmade by player p and the contributions Cmade by all the friends i of player p.

The jackpot for each player is calculated independently of the jackpot calculations for other players. Therefore the jackpot for each player is independent from each other and not necessarily equal. In fact most times the jackpot of the players will be different unless two players have the same friends in the game which will mean that both players will have the same jackpot. Of course there may be other jackpot contribution factors such as level of expertise a jackpot increase bonus won by a player etc. which may make the jackpots different.

In one embodiment if two players playing the game only have each other as friends their jackpots will be identical independent of how much each of the players bet on the game. For example players K and L only have each other as friends. While player K has contributed 95 000 to the jackpot and player L has only contributed 600 to the jackpot both players have the same jackpot with a value of 95 600. It does not matter that player K has played much more than player L their jackpots are the same. Of course since player K seems to play much more than player L player K will likely have a bigger probability of winning the jackpot just because player K plays more often.

When a player wins the jackpot of the player gets reset to an initial value e.g. 100 although other values are also possible which may be different in the different theme machines. In addition when a player wins the jackpots of the friends players are also reset to the initial value. Because of this a player wants to win the jackpot before any of the player s friends do because if any friend wins then the player s jackpot gets reset. For example a player that may have played a lot e.g. the player has heated the machine does not want all her efforts to go to waste by having a friend steal the jackpot away from her. On the other hand an opportunistic player that has not played a lot may realize that a large jackpot is available and decide to start playing more in order to increase the chances of winning the jackpot. Of course parasitic players may not have long social relationships in the game as players may not like having their jackpot stolen away from players that do not contribute their share to the jackpot. Having many friends means that a player s jackpot will grow fast but it also means that there are more players competing to win the jackpot.

In the scenario where a new player starts playing the game once the player establishes friendship relationships in the game the player will start competing for the jackpot. If the friends of the new player have been playing for a while the friends may have built build a large jackpot but since the new player has recently joined the new player will have a smaller jackpot. However if the new player wins all the jackpots are reset which means that the new player will win a relatively small jackpot but the player s friends will lose the large jackpot that they had built.

The method described in outlines some of the operations related to jackpot management. In operation a player bets a certain amount X and spins the wheels. A check is made to determine if the player has won the jackpot in operation . If the player did not win the jackpot the method flows to operation where a contribution amount Y based on the amount bet X is added to the jackpot of the player and to the jackpots of the player s friends. From operation the method flows back to operation .

If the player wins the jackpot the method flows from operation to operation where the player is credited with the amount of the jackpot. After operation the method flows to operation where a reward is given to the player s friends in order to share the fortune of the player that won the jackpot. In one embodiment each friend gets a fixed reward amount e.g. 25 dollars although other amounts are also possible . In another embodiment the friends get a small percentage of the jackpot such as one percent although other percentage values are also possible.

From operation the method flows to operation where the jackpots of the player that won the jackpot and the jackpots of the player s friends are reset to the initial value.

The client state object tracks the amounts bet on one slot machine. In one embodiment there is one client state object per machine for the player. In one embodiment the client state object includes one or more of a current jackpot amount a history of one or more most recent jackpot updates jackpot contributions from the player s friends timestamps for the jackpot contribution updates history of times and duration of playing sessions time of last synchronization with server player identification a cache of the list of player s friends or any other game related data.

Every time a bet is placed a percentage of the bet is used as the added contribution for the jackpot state. Periodically e.g. every five minutes although other intervals are also possible the jackpot state kept at the client is synchronized with the server . The client state object sends information regarding bets placed and current jackpot to the jackpot manager in the server . The jackpot manager controls the state of the jackpots in each of the machines and performs the synchronization required with the client state object of all players.

The jackpot manager analyzes the received updates with game information and determines the machine associated with the update and what was the jackpot contribution. The jackpot manager queries the social manager for the social graph of user where the social graph includes the identities of the friends of player in the game. The social manager manages the friendship relationships established in the game.

The jackpot manager updates the jackpot information based on the received updates and notifies the game manager so players have access to the current jackpot information. In one embodiment the game manager access shared data structures with the jackpot manager regarding the state of the jackpots for the players of the game. In one embodiment the shared data structure includes jackpot states for the game players.

In another embodiment the jackpot states for the players have an associated update queue that holds the different jackpot updates for the respective player. Therefore every time an update is received by the jackpot manager after checking the social graph of the originating player the jackpot manager places an update in each of the friends of the jackpot contributor as well as in the queue of the jackpot contributor. In one embodiment the jackpot manager updates the jackpot state of the jackpot contributed immediately without having to plays the update in the jackpot queue.

In one embodiment the queued transactions include how much has been added to the jackpot or that the jackpot has been won by a player. In one embodiment a background process from the jackpot manager processes the queues of the different players to update the jackpot values. In one embodiment the queues of players that are not currently playing the game are not processed until a player starts playing the game. This way processing time is saved by postponing the processing of updates until the update is needed when a player is in the game. In another embodiment the background process perform some processing of the queues of players that are not playing the game when there are available resources to do so e.g. a period of low gaming activity or when the queues become large exceeding a predetermined value of items in the queue.

It is noted that some of the jackpot updates may be for a jackpot win transaction. In one embodiment the jackpot manager adds the jackpot win transaction to the end of the queues of the friends of the winner and the transaction will be processed like any other jackpot contribution transaction. In another embodiment the jackpot manager determines that a win transaction has been received and clears the queues of all the friends of the winner and then adds the win transaction to these queues. Since the win transaction resets the value of the jackpots the jackpot manager does not have to process all the queued up transactions leading up to the jackpot win transaction because the final outcome is always a jackpot reset.

When a player logs in the jackpot manager runs through the queue and tallies up the jackpot amount for the player that logged in. If a jackpot win transaction is found the jackpot manager resets the jackpot back to the starting point for the jackpot. After the jackpot manager tallies up all the transactions when a new player logs in the jackpot manager updates the jackpot amount for the player and may indicate if a friend won the jackpot.

When player is playing the game the jackpot manager sends updates to the client regarding jackpot contributions or regarding jackpot wins from friends of player that are currently playing the game at the same time. In one embodiment if the friend wins the jackpot i.e. a jackpot win transaction is received the client object resets the value of the jackpot for player .

It is noted that the embodiments illustrated in are exemplary. Other embodiments may utilize different update mechanisms different modules or combine the functionality of one or more modules into a single module. The embodiments illustrated in should therefore not be interpreted to be exclusive or limiting but rather exemplary or illustrative.

The transaction ID is a unique value associated with the message being sent and may be used to detect duplicate messages. In another embodiment not shown the transaction ID of the previous message sent is also included in order to allow the server to detect missing transactions e.g. missing jackpot updates . The player ID is a unique identifier in the online game of the player where the message originated. The timestamp includes the date and time when the message was sent to the server.

The machine field identifies the machine where a bet was made and the contribution indicates how much was added to the jackpot. The jackpot value indicates the current value of the jackpot associated with the timestamp. The timestamp on the jackpot value may be utilized in some embodiments to synchronize the jackpot value between the client and the server.

The fields in have the same meaning as the fields In except that the amount bet represents the amount bet by one or more friends of the player and the contribution represents the contribution to the jackpot by one or more friends of the player. In addition an informational message may be included provide additional information to the player e.g. 3 of your friends added 60 dollars to the jackpot . This message may be presented to the player in an informational window within the GUI or as a pop up message.

It is appreciated that the embodiments illustrated in are exemplary. Other embodiments may utilize different fields present the fields in a different order combine one or more fields into one omit one or more fields etc. The embodiments illustrated in should therefore not be interpreted to be exclusive or limiting but rather exemplary or illustrative.

From operation the method flows to operation where the jackpot of the first player is increased based on bets by the first player in the computer game. In one embodiment the increment is a fixed percentage of the amount bet by the first player e.g. see equation 1 described above with reference to .

From operation the method flows to operation where the jackpot of the first player is increased based on the bets made by friends of the first player in the computer game. In one embodiment operation and are performed utilizing equation 2 described above with reference to but other equations based on the jackpot contributions for different players may also be utilized. The first player s friends have a social connection with the first player in the game and the jackpot of the first player is independent from bets in the computer game by players that are not friends of the first player.

From operation the method flows to operation where the jackpot of the first player is reset to the initial value when the first player or when any friend of the first player wins the jackpot. In one embodiment the method is executed by a processor.

When a player provides an input into the player s client device the client device may in response send a message via the communications network to the social networking server. The social networking server may update the player profile save the message to a database send messages to other players etc. The social gaming network may include a social graph database which stores player relationships social player profiles player messages and player social data.

The gaming servers host one or more gaming applications and perform the computations necessary to provide the gaming features to the players and clients. One or more gaming databases store data related to the gaming services such as the gaming applications and modules virtual gaming environment data player gaming session data player scores player virtual gaming profiles game stage levels etc. The gaming servers may utilize the data from the gaming databases to perform the computations related to providing gaming services for the players.

Jackpot Servers manage the jackpot system in the game including the creation tracking expiration abandonment and deletion of jackpots. In addition a jackpot database holds jackpot state information such as the jackpot states of .

Each game server has access to one or more game databases for keeping game data. In addition a single database can store game data for one or more online games. Each game server may also include one or more levels of caching. Game data cache is a game data cache for the game data stored in game databases . For increased performance caching may be performed in several levels of caching. For instance data more frequently used is stored in a high priority cache while data requiring less access during a session will be cached and updated less frequently.

The number of game servers changes over time as the gaming platform is an extensible platform that changes the number of game servers according to the load on the gaming infrastructure. As a result the number of game servers will be higher during peak playing times and the number of game servers will be lower during off peak hours. In one embodiment the increase or decrease of bandwidth is executed automatically based on current line usage or based on historical data.

One or more social network management servers provide support for the social features incorporated into the online games. The social network management servers access social data from one or more social networks via Application Programming Interfaces API made available by the social network providers. An example of a social network is Facebook but it is possible to have other embodiments implemented in other social networks. Each social network includes social data and this social data or a fraction of the social data is made available via API 472. As in the case of the game servers the number of social network management servers that are active at a point in time changes according to the load on the infrastructure. As the demand for social data increases the number of social network management servers increases. Social network management servers cache user data in database and social data in database . The social data may include the social networks where a player is present the social relationships for the player the frequency of interaction of the player with the social network and with other players etc. Additionally the user data kept in database may include the player s name demographics e mail games played frequency of access to the game infrastructure etc.

It is noted that the embodiment illustrated in is an exemplary online gaming infrastructure. Other embodiments may utilize different types of servers databases APIs etc. and the functionality of several servers can be provided by a single server or the functionality can be spread across a plurality of distributed servers. The embodiment illustrated in should therefore not be interpreted to be exclusive or limiting but rather exemplary or illustrative.

One or more links couple a server or a client to network . In particular embodiments one or more links each includes one or more wired wireless or optical links . In particular embodiments one or more links each includes an intranet an extranet a VPN a LAN a WLAN a WAN a MAN a portion of the Internet or another link or a combination of two or more such links .

Each server may be a stand alone server or may be a distributed server spanning multiple computers or multiple datacenters. Servers may be of various types such as for example and without limitation jackpot server web server news server mail server message server advertising server file server application server exchange server database server or proxy server. Each server may include hardware software embedded logic components or a combination of two or more such components for carrying out the appropriate functionalities implemented or supported by server . For example a web server is generally capable of hosting websites containing web pages or particular elements of web pages. More specifically a web server may host HyperText Markup Language HTML files or other file types or may dynamically create or constitute files upon a request and communicate them to clients in response to Hypertext Transfer Protocol HTTP or other requests from clients . A mail server is generally capable of providing electronic mail services to various clients . A database server is generally capable of providing an interface for managing data stored in one or more data stores.

In particular embodiments one or more data storages may be communicatively linked to one or more severs via one or more links . Data storages may be used to store various types of information. The information stored in data storages may be organized according to specific data structures. In particular embodiments each data storage may be a relational database. Particular embodiments may provide interfaces that enable servers or clients to manage e.g. retrieve modify add or delete the information stored in data storage .

In particular embodiments each client may be an electronic device including hardware software or embedded logic components or a combination of two or more such components and capable of carrying out the appropriate functionalities implemented or supported by client . For example and without limitation a client may be a desktop computer system a notebook computer system a notebook computer system a handheld electronic device or a mobile telephone. A client may enable a network player at client to access network . A client may enable its player to communicate with other players at other clients . Further each client may be a computing device such as a desktop computer or a work station or a mobile device such as a notebook computer a network computer or a smart telephone.

In particular embodiments a client may have a web browser such as Microsoft Internet Explorer Google Chrome Or Mozilla Firefox and may have one or more add ons plug ins or other extensions. A player at client may enter a Uniform Resource Locator URL or other address directing the web browser to a server and the web browser may generate a Hyper Text Transfer Protocol HTTP request and communicate the HTTP request to server . Server may accept the HTTP request and communicate to client one or more Hyper Text Markup Language HTML files responsive to the HTTP request. Client may render a web page based on the HTML files from server for presentation to the user. The present disclosure contemplates any suitable web page files. As an example and not by way of limitation web pages may render from HTML files Extensible Hyper Text Markup Language XHTML files or Extensible Markup Language XML files according to particular needs. Such pages may also execute scripts such as for example and without limitation those written in Javascript Java Microsoft Silverlight combinations of markup language and scripts such as AJAX Asynchronous Javascript and XML and the like. Herein reference to a web page encompasses one or more corresponding web page files which a browser may use to render the web page and vice versa where appropriate.

Web browser may be adapted for the type of client where the web browser executes. For example a web browser residing on a desktop computer may differ e.g. in functionalities from a web browser residing on a mobile device. A user of a social networking system may access the website via web browser .

As example and not by way of limitation computer system may be an embedded computer system a system on chip SOC a single board computer system SBC such as for example a computer on module COM or system on module SOM a desktop computer system a laptop or notebook computer system an interactive kiosk a mainframe a mesh of computer systems a mobile telephone a personal digital assistant PDA a server or a combination of two or more of these. Where appropriate computer system may include one or more computer systems be stand alone or distributed span multiple locations span multiple machines or reside in a cloud which may include one or more cloud components in one or more networks. The one or more computer systems may perform in real time or in batch mode one or more operations of one or more methods described or illustrated herein.

In particular embodiments computer system includes a processor memory storage an input output I O interface a communication interface and a bus . Although this disclosure describes and illustrates a particular computer system having a particular number of particular components in a particular arrangement embodiments may be implemented with any suitable computer system having any suitable number of any suitable components in any suitable arrangement.

In particular embodiments processor includes hardware for executing instructions such as those making up a computer program. As an example and not by way of limitation to execute instructions processor may retrieve or fetch the instructions from an internal register an internal cache memory or storage decode and execute them and then write one or more results to an internal register an internal cache memory or storage . The present disclosure contemplates processor including any suitable number of any suitable internal registers where appropriate. Where appropriate processor may include one or more arithmetic logic units ALUs be a multi core processor or include one or more processors . Although this disclosure describes and illustrates a particular processor this disclosure contemplates any suitable processor.

In particular embodiments memory includes main memory for storing instructions for processor to execute or data that can be manipulated by processor . As an example and not by way of limitation computer system may load instructions from storage or another source such as for example another computer system to memory . Processor may then load the instructions from memory to an internal register or internal cache. During or after execution of the instructions processor may write one or more results which may be intermediate or final results to the internal register or internal cache. Processor may then write one or more of those results to memory . One or more memory buses which may each include an address bus and a data bus may couple processor to memory . Bus may include one or more memory buses as described below. One or more memory management units MMUs reside between processor and memory and facilitate accesses to memory requested by processor . Memory includes random access memory RAM .

As an example and not by way of limitation storage may include a Hard Disk Drive HDD a floppy disk drive flash memory an optical disc a magneto optical disc magnetic tape or a Universal Serial Bus USB drive or a combination of two or more of these. Storage may include removable or non removable or fixed media where appropriate. In particular embodiments storage includes read only memory ROM . Where appropriate this ROM may be mask programmed ROM programmable ROM PROM erasable PROM EPROM electrically erasable PROM EEPROM electrically alterable ROM EAROM or flash memory or a combination of two or more of these.

In particular embodiments I O interface includes hardware software or both providing one or more interfaces for communication between computer system and one or more I O devices. One or more of these I O devices may enable communication between a person and computer system . As an example and not by way of limitation an I O device may include a keyboard keypad microphone monitor mouse printer scanner speaker still camera stylus tablet touch screen trackball video camera another suitable I O device or a combination of two or more of these.

Communication interface includes hardware software or both providing one or more interfaces for communication between computer system and one or more other computer systems on one or more networks. As an example and not by way of limitation communication interface may include a network interface controller NIC or network adapter for communicating with an Ethernet or other wire based network or a wireless NIC WNIC or wireless adapter for communicating with a wireless network such as a WI FI network. As an example computer system may communicate with a wireless PAN WPAN such as for example a BLUETOOTH WPAN a WI FI network a WI MAX network a cellular telephone network such as for example a Global System for Mobile Communications GSM network or other suitable wireless network or a combination of two or more of these.

In particular embodiments bus includes hardware software or both coupling components of computer system to each other. As an example and not by way of limitation bus may include an Accelerated Graphics Port AGP or other graphics bus an Enhanced Industry Standard Architecture EISA bus a front side bus FSB a HYPERTRANSPORT HT interconnect an Industry Standard Architecture ISA bus an INFINIBAND interconnect a low pin count LPC bus a memory bus a Micro Channel Architecture MCA bus a Peripheral Component Interconnect PCI bus a PCI Express PCI X bus a serial advanced technology attachment SATA bus a Video Electronics Standards Association local VLB bus or another suitable bus or a combination of two or more of these. Bus may include one or more buses where appropriate. Although this disclosure describes and illustrates a particular bus this disclosure contemplates any suitable bus or interconnect.

Herein reference to a computer readable storage medium encompasses one or more non transitory tangible computer readable storage media possessing structure that may store a computer program or data. As an example and not by way of limitation a computer readable storage medium may include a semiconductor based or other integrated circuit IC such as for example a field programmable gate array FPGA or an application specific IC ASIC a hard disk an HDD a hybrid hard drive HHD an optical disc an optical disc drive ODD a magneto optical disc a magneto optical drive a floppy disk a floppy disk drive FDD magnetic tape a holographic storage medium a solid state drive SSD a RAM drive a Secure Digital card a Secure Digital drive or another suitable computer readable storage medium or a combination of two or more of these where appropriate. Herein reference to a computer readable storage medium excludes any medium that is not eligible for patent protection under 35 U.S.C. 101.

One or more embodiments can also be fabricated as computer readable code on a non transitory computer readable medium. Herein reference to software may encompass one or more applications bytecode one or more computer programs one or more executables one or more instructions logic machine code one or more scripts or source code and vice versa where appropriate.

The present disclosure encompasses all changes substitutions variations alterations and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend.

