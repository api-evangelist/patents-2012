---

title: Providing suggestions for optimizing videos to video owners
abstract: A computing device executing an optimizer analyzes a video. The computing device identifies one or more optimizations for the video based on the analysis. The computing device suggests the one or more optimizations to an entity associated with the video. In response to the entity accepting the one or more optimizations, the computing device implements the one or more optimizations for the video.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09143823&OS=09143823&RS=09143823
owner: GOOGLE INC.
number: 09143823
owner_city: Mountain View
owner_country: US
publication_date: 20121001
---
Implementations of the present disclosure relate to online video hosting services and more specifically to a system for identifying optimizations for videos and for suggesting such optimizations to video owners.

Many video hosting websites allow entities to post videos. Users can then view those videos. Such videos can be monetized by associating advertisements to the videos. Users who view a video may also be presented with the advertisements and the entity that uploaded the video may be paid based on the users who viewed the video. Improvements to the videos may increase a number of users who view the videos and thus increase revenues of the entity that controls the videos. However it may be difficult for the entity to determine how the video should be changed to improve it.

The following is a simplified summary of the disclosure in order to provide a basic understanding of some aspects of the disclosure. This summary is not an extensive overview of the disclosure. It is intended to neither identify key or critical elements of the disclosure nor delineate any scope of the particular implementations of the disclosure or any scope of the claims. Its sole purpose is to present some concepts of the disclosure in a simplified form as a prelude to the more detailed description that is presented later.

In an implementation of the present disclosure a computing device executing an optimizer analyzes a video. The computing device identifies one or more optimizations for the video based on the analysis. The computing device suggests the one or more optimizations to an entity associated with the video. In response to the entity accepting the one or more optimizations the computing device implements the one or more optimizations for the video.

In addition methods and systems for performing the operations of the above described implementations are also implemented. Further a computer readable storage media is provided to store instructions for performing the operations of the above described implementations.

Users and other entities that generate and upload videos to video hosting websites may not always apply best practices when generating those videos. Moreover such best practices may be unknown or difficult to identify. Accordingly described herein are a system and method for identifying optimizations for videos recommending the identified optimizations and implementing the identified optimizations. Administrators may view a video and manually select one or more video optimizations to suggest to a video owner. Examples of optimizations include enabling one or more features for the video adding a custom thumbnail editing tags a title and or a description of the video editing contents of the video and so on. Alternatively or additionally a video optimizer may analyze the video by applying one or more optimization rules to identify optimizations that may be made to the video. The video optimizer may then suggest those optimizations to the video owner. In response to the entity accepting the one or more optimizations the video optimizer may automatically modify the video to implement the suggested optimizations. The suggested optimizations may cause the video to achieve an increased viewership increased advertising revenue increased viewer time and so on.

Note that some implementations of the present disclosure are discussed with reference to videos. Such videos may be digital videos and may be encoded in numerous different formats such as the Windows Media Real Media Audio Video Standard AVS Theora VP8 WebM VC 1 Quicktime MPEG 4 also known as MP4 Flash MPEG 2 DivX audio video interlace AVI or advanced video coding AVC video file formats. Though implementations are discussed with reference to videos implementations of the present disclosure also apply to other digital media items such as images and audio files. Examples of audio files to which implementations of the present disclosure may apply include digital music and other audio clips such as moving picture experts group MPEG audio layer 3 MP3 files advanced audio coding AAC files waveform audio file format WAV files audio interchange file format AIFF files Apple Lossless m4A files etc. Examples of image files to which the implementations of the present disclosure may apply include joint photographic experts group JPEG files portable network graphics PNG files bitmap image BMP files graphics interchange format GIF files and so forth.

The client machines A N may be personal computers PCs laptops mobile phones tablet computers or any other computing devices. The client machines A N may run an operating system not shown that manages hardware and software of the client machines A N. A browser not shown may execute on the client machines e.g. on the OS of the client machines . The browser may be a web browser that can access content served by a web server . The browser may issue queries and commands to the web server such as commands to access a specific video commands to share a video commands to optimize the video and so forth. The client machines A N may also upload videos to the web server for storage in a repository .

Server machine may be a rackmount server a router computer a personal computer a portable digital assistant a mobile phone a laptop computer a tablet computer a netbook a desktop computer a media center or any combination of the above. Server machine includes web server and a video optimizer . In alternative implementations the web server and video optimizer execute on different machines. Additionally in some implementations the web server and video optimizer are combined into a single component.

Repository is a persistent storage that is capable of storing video files. As will be appreciated by those skilled in the art in some implementations repository might be a network attached file server while in other implementations repository might be some other type of persistent storage such as an object oriented database a relational database and so forth that may be hosted by the server machine or one or more different machines coupled to the server machine via the network . The video stored in the repository may include user generated content that is uploaded by client machines A N. The video may additionally or alternatively include content provided by other entities e.g. service providers such as news organizations publishers libraries and so on .

Web server may receive videos from client machines also referred to herein as clients A N and or a third party server machine and store those videos in repository . Web server may additionally serve videos from repository to client machines A N. Accordingly web server may provide a media hosting service.

Web server may receive search queries from clients A N and perform searches on the videos in the repository to determine videos that satisfy the search queries. Web server may send to a client A N those videos that match a search query. Clients A N may also browse contents of the repository . For example clients may select in a web page specific tabs or filters associated with particular categories of content. Web server may then present videos associated with those particular categories to the clients A N.

Web server may additionally select advertisements ads and send the ads to clients A N. The ads may include in stream ads in video ads overlay ads and so forth. In stream ads may include pre roll ads that are shown before a video starts mid roll or intermission ads that interrupt playback of the video momentarily and post roll ads that are shown after the video ends. Overlay ads are text and image based ads shown over a portion of a video while the video is playing. In video ads are a type of overlay ad that if accessed causes the video to pause and a video advertisement to be played after which the video resumes.

Web server may stream selected videos to clients A N or may download the videos to the clients A N. In streaming the clients A N can begin playback of the video before receiving the entire video. In contrast with downloading the video typically is not playable until a complete file is received by the client A N.

Video optimizer may analyze videos and identify modifications that may be made to analyzed videos to optimize those videos. Video optimizer may then issue optimization recommendations to entities that control the videos. Such entities may be entities that uploaded the videos or entities that otherwise have legal rights to the videos. As used herein an entity may be a user a business entity or any other individual or organization. In one implementation the optimization recommendations are delivered to the entities via email instant messages text messages e.g. SMS or MMS or other messaging mediums. Video optimizer may also post optimization recommendations to an account of the entity. Therefore the entity may see and act on the optimization recommendations when the entity next accesses the account.

Video optimizer may also provide an interface that enables administrators e.g. partner managers that help video owners to monetize their videos to provide optimization suggestions to video owners. Administrators may review a video to determine one or more properties of the videos. The video optimizer may provide an optimization template or form for the administrator to fill out via a user interface such as a graphical user interface GUI . Video optimizer may then suggest optimizations for the analyzed video to the video owner based upon the filled out optimization template.

Returning to in some implementations video optimizer provides an application programming interface API that may be accessed by client machines A N and or the third party server machine . Using the API for the video optimizer the client machines A N and or third party server machine may select videos or a single video and initiate analysis recommendation and or optimization for the videos.

Video analyzer analyzes videos to identify changes that may be made to the videos to optimize the videos. Video analyzer may be invoked by a user via user interface or may be automatically invoked by video optimizer . In one implementation video analyzer is automatically invoked when a new video is uploaded to a web server. Video analyzer may then analyze the uploaded video to identify optimizations for a video before the video is made publicly available. Video analyzer may additionally or alternatively analyze previously uploaded videos which may be stored in a repository . In one implementation video analyzer analyzes videos that have been selected by an entity via the user interface . Video analyzer may also analyze videos uploaded by a specific entity or entities or systematically analyze some or all uploaded videos e.g. based on upload date and or when the videos were last optimized . For example video analyzer may analyze videos periodically and or as new optimization rules become available or existing optimization rules are refined.

In one implementation video analyzer is a rules engine that determines optimizations for a video based on a set of optimization rules . Video analyzer may be a rules engine that processes optimization rules to produce outcomes. The video analyzer may match facts data and optimization rules and infer conclusions which may result in actions or events. In one implementation the video analyzer matches the facts data and rules using a Rete Algorithm. The video analyzer may also use a Linear Algorithm Treat Algorithm Leaps Algorithm or other algorithm. Hybrid algorithms that use combinations of for example the Leaps Algorithm and the Rete Algorithm may also be used.

Optimization rules may perform actions provide information generate recommendations etc. An optimization rule may include conditional elements e.g. and or not exists etc. constraints e.g. equal to not equal to greater than contains etc. and consequences or actions e.g. generate recommendation process next rule edit video etc. . Some optimization rules may output one or more suggestions for executable optimizations that can be accepted to implement changes to an analyzed video. Some optimization rules may output one or more suggestions for non executable optimizations that may be incorporated into future videos. Some optimization rules may output suggestions for both executable and non executable optimizations. An optimization rule may also perform other functions.

Generated optimization suggestions may be generic or specific. Generic suggestions may suggest that a user perform a particular type of optimization e.g. adding more tags improving a title or description etc . Specific suggestions may suggest that particular optimizations be performed such as adding specific tags to a video using a specific custom thumbnail for a video and so on.

Each optimization rule may check the video for one or more inefficiencies deficiencies errors and so forth. Each optimization rule may further include one or more optimizations that may be performed on the analyzed video. Optimization rules may be used to examine contents of a video e.g. image contents audio contents etc. as well as metadata associated with the video e.g. tags titles descriptions etc. . The types of analyses performed by the optimization rules may vary based on the rule and may include performing image analysis e.g. on one or more frames in the video image recognition image classification and so forth. For example an optimization rule may perform image recognition on images in the video to identify objects in the video. These object identifications may then be used by the optimization rule or as inputs for other optimization rules. In a further example say that as a result of performing image recognition an optimization rule identified dancers in the video. The optimization rule could then suggest that a dancing tag be added to the video and another optimization rule could further suggest that the term dance be added to a title of the video. The analyses may also include parsing the image s metadata. This parsed metadata may be used as an input for optimization rules which may determine whether the metadata complies with known optimal metadata parameters e.g. if enablement option selections are optimal if advertisement option selections are optimal if a description is optimal if a custom thumbnail is present if tags are optimal and so forth .

Optimization rules may be configured to optimize specific types of videos. For example there may be different optimization rules for optimizing children s videos than for optimizing music videos. Additionally some optimization rules may provide different optimization suggestions based on a type of video being analyzed. If a video s type has not been identified then optimization rules may identify the video s type and may suggest that the video be classified as a video of the identified type e.g. by adding a tag to the video .

Optimization rules may also be configured to optimize for different results. For example some optimization rules may be configured to optimize for maximum revenues while other optimization rules may be configured to optimize for maximum viewership maximum viewer time maximum discoverability and so forth.

In one implementation there are multiple different classes of optimization rules . Examples of optimization rule classes include a monetization class a video enablements class a video discoverability class an author behavior class and a video contents class. More or fewer optimization classes may also be used. Note also that the optimization rule class structure is one logical structure that can be used to organize the optimization rules . The optimization rules may alternatively be unorganized or may be organized according to some other logical structure or methodology.

Monetization class optimization rules include rules that check for types of advertisements and or optimizations of advertisements that may be used with a video. Monetization class optimization rules may include rules to check whether in video advertisements ads are enabled whether in stream ads are enabled whether overlay ads are enabled whether a monetize policy has been enabled for the video and so forth. The monetization class optimization rules may also identify optimal types of advertisements. Additionally monetization class optimization rules may identify optimal screen placement for ads optimal size for ads and so forth.

If certain types of advertisements are disabled then the monetization class optimization rules may output suggestions to enable those advertisement types. Additionally if advertising properties are sub optimal e.g. advertisement is too large too small improperly placed etc. then the monetization class optimization rules may output suggestions to modify the advertising properties.

Video enablements class optimization rules include rules to check whether one or more options are enabled for a video. Video enablements class optimization rules may include rules to check whether embedding is enabled which enables the video to be embedded in third party websites whether off web syndication is enabled which enables the video to be shown outside of an internet environment such as in a broadcast or cable television environment whether annotations are enabled which enables users to add annotations to the video whether comments are enabled which enables users to add comments to the video whether ratings are enabled which enables users to comment on the video whether captions and or subtitles are provided and or enabled whether geo tagging is enabled whether auto sharing is enabled and so forth. For some videos enabling certain of these options may increase viewership and or advertising revenues.

Video discoverability class optimization rules include rules to check how the video is presented to viewers and or how the video is discovered. Examples of video discoverability class optimization rules include rules that check for custom thumbnails and or to optimize custom thumbnails rules to check whether the video has been added to a playlist rules to check whether call to action annotations are included in or associated with the video etc. A call to action annotation may be a button that invites a user to press the button to initiate an action. The button may be present during some or all of the video e.g. for 2 12 to 5 00 and may be present at a particular region of the display. The call to action annotation may be clicked by a user to open a new web page. Other examples of optimization rules within the video discoverability class include rules to check video titles video descriptions tags e.g. for video type etc. The discovery class optimization rules may output suggestions to add or modify custom thumbnails to add or modify tags a title and or a descriptor to add or modify a call to action annotation and so forth.

Author behavior class optimization rules include rules that check for behavior of the entity that controls the video. Certain author behaviors may increase exposure of a video and may thus increase viewership and or ad revenues associated with that video. Examples of optimization rules within the author behavior class include rules to check for sharing of videos via social media platforms to check for comments on videos etc.

Video content class optimization rules include rules the analyze the contents of videos for potential improvements. Examples of optimization rules within the video content class include rules that check for optimal lighting conditions to check for blur to check for color problems to check for cropping problems to check for image stability to check for optimal video length etc. Such rules may perform image analysis on one or more frames of the videos to determine image properties of the video and compare those image properties to image properties that have been determined to be optimal. Other examples include rules that check for background noise that check for insufficient volume of one or more speakers within a video etc. Such rules may perform audio analysis on an audio portion of the video to determine audio properties for the video and compare those audio properties to audio properties that have been determined to be optimal. Video content class optimization rules may suggest that any identified problems of lighting stability audio quality blur and so forth be corrected e.g. to cause the image and or audio properties of the video to be closer to the determined optimal image and or audio properties .

Optimization rules may be managed by a rules manager . Via the user interface an administrator may organize the optimization rules add new optimization rules remove optimization rules and so forth. Rules manager may also perform automated tasks such as rule classification rule generation and so forth without user input.

In one implementation rules manager includes a machine learning module . Machine learning module analyzes numerous videos and viewership monetization statistics associated with those videos. Based on the analysis machine learning module may identify a set of properties that are indicative of increased viewership increased advertising revenues and so forth. The machine learning module then generates a set of rules that may be used to determine whether a video has particular properties that are indicative of successful monetization discoverability and or viewership. These rules may further include actions such as optimizing videos to add those properties that are indicative of success and or generating recommendations to optimize the videos.

In one implementation rules manager applies cluster analysis to group videos based on one or more similar properties and or or similar viewership statistics. Rules manager may then identify differences between those clusters associated with favorable viewership statistics and those clusters associated with unfavorable viewership statistics. Rules manager may generate rules that make recommendations that if implemented will cause a video from a cluster with unfavorable viewership statistics to be reclassified as a member of a cluster with favorable viewership statistics. Such rules may also perform recommended operations to modify the video.

Note that cluster analysis is just one category of machine learning algorithm that machine learning module may implement. Machine learning module may also include a neural network algorithm a vector machine learning algorithm an association rule learning algorithm a decision tree learning algorithm a genetic programming algorithm an inductive logic programming algorithm or other machine learning algorithm. Additionally machine learning module may use multiple different classes of machine learning algorithms and or may apply a hybrid machine learning algorithm to generate optimization rules.

Once video analyzer has identified one or more video optimizations recommender generates optimization suggestions for those optimizations. Recommender may post the optimization suggestions to a user account of an entity that controls the video. The posting may include an accept suggestions button that if pressed will cause the suggested optimizations to be implemented. The posting may additionally include a separate acceptance option for each optimization suggestion. Therefore the entity may select a subset of the suggested optimizations for implementation or may accept all suggested optimizations for implementation.

Recommender may additionally or alternatively generate a message that includes the optimization suggestions. The message may be an email message a text message an instant message or other type of message. The message may include an accept suggestions option that if selected by the entity will cause an acceptance response message to be generated and sent to recommender . The user may also send a reply message to the video optimizer identifying some or all of the suggested optimizations to be implemented.

Video editor modifies videos to implement optimization suggestions. In one implementation video analyzer invokes video editor to implement the optimization suggestions after analyzing the video. Video editor may then generate a modified video and temporarily cache the modified video or otherwise store the modified video e.g. in the repository. If an entity that controls the video accepts the suggested optimizations then an original video may be replaced with the pre generated modified video. Video editor may also edit the video in response to the entity accepting some or all of the optimization suggestions.

Video editor may edit both metadata associated with a video and content of the video to optimize the video. Video editor may perform enablement operations such as enabling in video ads enabling in stream ads enabling overlay ads enabling a monetize policy enabling embedding enabling off web syndication enabling annotations enabling comments enabling ratings enabling captions and or subtitles enabling geo tagging and so forth. Video editor may also edit metadata associated with the video such as adding or replacing custom thumbnails for the video adding the video to a playlist adding call to action buttons to the video editing the video s title e.g. to make the title more descriptive or enticing editing a description of the video editing tags associated with the video etc. Additionally video editor may make edits to the video content. Such edits may include improving lighting conditions in the video changing colors in the video stabilizing the video deleting frames from the video amplifying volume for one or more speakers in the video applying noise suppression to audio of the video and so forth.

Video optimizer may monitor a video s success after optimizations have been made. If metrics such as viewership discoverability viewing time monetization etc. of the video went up after implementing an optimization then an accuracy of that optimization may be confirmed. If one or more of these metrics stayed the same or went down after implementing the optimization then the rules manager may adjust one or more of the optimization rules.

In one implementation video optimizer includes a design of experiments DOE generator . DOE generator determines one or more changes to a video that might improve viewership and or monetization of the video. These changes may be automatically determined by invoking video analyzer and receiving optimization suggestions from the video analyzer . Alternatively or in addition a user may specify optimizations via the user interface . DOE generator may then invoke video editor to generate one or more modified videos based on the suggested or specified optimizations. Each of the modified videos may implement one or a few different optimizations.

DOE generator generates an experiment using an original video and the one or more modified videos. The experiment may case a server to present the original video to most viewers e.g. 90 of viewers and to present the modified video or videos to a small percentage of viewers. For example if two different modified videos are generated each with different optimizations DOE generator may cause a first modified video to be shown to 5 of viewers and a second modified video to be shown to 5 of viewers. DOE generator then compares viewership and or monetization results of the original video referred to as standard results to results of the modified videos referred to a experimental results .

If experimental results for a modified video are superior to standard results for the original video then recommender generates an optimization suggestion to implement the tested changes to the video. Recommender then sends the recommendations to an entity that controls the video. The recommendations may include both suggested optimizations as well as projected improvements in viewership and or monetization that will occur as a result of acceptance of the optimizations. The projected improvements may be based on the comparison of the standard results for the original video to the experimental results for the modified video or videos . Note that multiple experiments may be run in parallel each of which may apply different optimizations. Experiments may be run after receiving user acceptance of an option to run optimization experiments.

For simplicity of explanation the methods are depicted and described as a series of acts. However acts in accordance with this disclosure can occur in various orders and or concurrently and with other acts not presented and described herein. Furthermore not all illustrated acts may be required to implement the methods in accordance with the disclosed subject matter. In addition those skilled in the art will understand and appreciate that the methods could alternatively be represented as a series of interrelated states via a state diagram or events. Additionally it should be appreciated that the methods disclosed in this specification are capable of being stored on an article of manufacture to facilitate transporting and transferring such methods to computing devices. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device or storage media.

At block processing logic suggests any identified executable optimizations to an entity that controls the video. At block processing logic recommends to the entity that any non executable optimizations be implemented for future videos. The suggestion and or recommendation may be sent to the entity by posting the suggestion recommendation to an account of the entity and or by sending a message to the entity e.g. via email text message instant message etc. .

At block processing logic determines whether the entity has accepted the executable optimizations. If the entity does not accept the executable optimizations the method ends. If the entity does accept the executable optimizations the method continues to block and processing logic automatically modifies the video to implement the executable optimizations. This may include editing metadata associated with the video and or editing contents of the video.

At block processing logic determines whether any video content optimizations have been identified. Such video content optimizations may include optimizations to improve lighting conditions in the video to change colors to improve audio quality to trim the video and so forth. If video content optimizations have been identified the method continues to block and the processing logic suggests modifications to the video that will optimization the video s content. Otherwise the method continues to block .

At block processing logic determines whether any video metadata optimizations have been identified. Video metadata optimizations may include optimizations to enable one or more features for the video to update tags associated with the video to modify a title and or description of the video to modify or add a custom thumbnail to the video and so on. If a video metadata optimization is identified then at block processing logic suggests modifications to optimize the video s metadata. Otherwise the method continues to block .

At block processing logic receives acceptance of one or more of the suggested optimizations. At block processing logic automatically modifies the video s content and or the video s metadata to implement the accepted optimizations. The method then ends.

At block processing logic suggests the identified optimizations to an entity that controls the video. At block processing logic determines whether all of the suggested optimizations have been accepted. If the optimizations have all been accepted then at block processing logic replaces the current version of the video with the optimized version. If all of the optimizations have not been accepted then the method continues to block .

At block the cached optimized version of the video may be deleted. At block processing logic determines whether a subset of all suggested optimizations have been accepted. If some optimizations have been accepted then the method continues to block . Otherwise the method ends.

At block processing logic generates a new optimized version of the video incorporating the accepted optimizations. At block processing logic replaces the current version of the video with the new optimized version of the video. The method then ends.

At block processing logic compares results of the modified version to results of the original or current version. At block processing logic determines whether the modified version has superior results to the original or current version. Superior results may be increased viewership increased advertising revenue per showing or other improved metric. If the modified version has superior results the method continues to block and the optimizations associated with the modified version of the video are suggested. Otherwise the method proceeds to block .

At block processing logic determines whether there are any additional identified optimizations that have not been tested. If there are additional optimizations the method returns to block and another modified version of the video incorporating one or more of the additional optimizations is generated. Otherwise the method ends.

The exemplary computer system includes a processing device a main memory e.g. read only memory ROM flash memory dynamic random access memory DRAM such as synchronous DRAM SDRAM or Rambus DRAM RDRAM etc. a static memory e.g. flash memory static random access memory SRAM etc. and a data storage device which communicate with each other via a bus .

Processing device represents one or more general purpose processors such as a microprocessor central processing unit or the like. More particularly the processing device may be a complex instruction set computing CISC microprocessor reduced instruction set computing RISC microprocessor very long instruction word VLIW microprocessor or a processor implementing other instruction sets or processors implementing a combination of instruction sets. The processing device may also be one or more special purpose processing devices such as an application specific integrated circuit ASIC a field programmable gate array FPGA a digital signal processor DSP network processor or the like. The processing device is configured to execute instructions for performing the operations and steps discussed herein.

The computer system may further include a network interface device . The computer system also may include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse and a signal generation device e.g. a speaker .

The data storage device may include a computer readable medium on which is stored one or more sets of instructions e.g. software embodying any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory and or within the processing device during execution thereof by the computer system the main memory and the processing device also constituting computer readable media.

In one implementation the instructions include instructions for a video optimizer which may correspond to video optimizer of and or a software library containing methods that call a video optimizer. While the computer readable medium is shown in an exemplary implementation to be a single medium the term computer readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term computer readable storage medium shall also be taken to include any medium that is capable of storing a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present disclosure. The terms computer readable medium and computer readable storage medium shall accordingly be taken to include but not be limited to solid state memories optical media and magnetic media.

In the foregoing description numerous details are set forth. It will be apparent however to one of ordinary skill in the art having the benefit of this disclosure that the present disclosure may be practiced without these specific details. In some instances well known structures and devices are shown in block diagram form rather than in detail in order to avoid obscuring the present disclosure.

Some portions of the detailed description have been presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as analyzing suggesting determining enabling identifying modifying or the like refer to the actions and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical e.g. electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The present disclosure also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards or any type of media suitable for storing electronic instructions.

The words example or exemplary are used herein to mean serving as an example instance or illustration. Any aspect or design described herein as example or exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather use of the words example or exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X includes A or B is intended to mean any of the natural inclusive permutations. That is if X includes A X includes B or X includes both A and B then X includes A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims should generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form. Moreover use of the term an embodiment or one embodiment or an implementation or one implementation throughout is not intended to mean the same embodiment or implementation unless described as such.

It is to be understood that the above description is intended to be illustrative and not restrictive. Many other implementations will be apparent to those of skill in the art upon reading and understanding the above description. The scope of the disclosure should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled.

