---

title: Efficient methods and systems for allocating storage volumes
abstract: A machine implemented method and system for allocating a storage volume from among a plurality of storage volumes for storing information in a storage system is provided. The storage system maintains a plurality of groups for segregating the plurality of storage volumes based on storage volume utilization at any given time. A storage volume, when available, is selected from a group that was previously used to select another storage volume. After an end of the group has been reached for allocating the other storage volume, and a threshold value for using the same group to allocate storage volumes has been reached, then another group is used to select the next storage volume.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08725979&OS=08725979&RS=08725979
owner: Netapp, Inc.
number: 08725979
owner_city: Sunnyvale
owner_country: US
publication_date: 20120130
---
Various forms of storage systems are used today. These forms include direct attached storage network attached storage NAS systems storage area networks SANs and others. Storage systems are commonly used for a variety of purposes such as providing multiple users with access to shared data backing up data and others.

A storage system typically includes at least one computing system may also be referred to as a server or storage server executing a storage operating system configured to store and retrieve data on behalf of one or more client computing systems at one or more storage devices. The storage operating system exports data stored at storage devices as a storage volume. A storage volume is a logical data set which is an abstraction of physical storage combining one or more physical mass storage devices or parts thereof into a single logical storage object. From the perspective of a client computing system each storage volume can appear to be a single storage device. However each storage volume can represent storage space in one storage device an aggregate of some or all of the storage space in multiple storage devices.

The need for electronic storage continues to increase with the rapid growth of the Internet social media and electronic commerce. As storage space continues to grow in data centers it is desirable for a storage operating system to optimally select storage volumes for storing client data. Conventional techniques randomly select a storage volume from among a plurality of available storage volumes at any given time. The random selection may be undesirable in an environment where a large amount of information is moved to and from storage devices. Continuous efforts are being made to streamline the process for allocating and managing storage volumes.

In one embodiment a machine implemented method and system for allocating a storage volume from among a plurality of storage volumes for storing information in a storage system is provided. The storage system maintains a plurality of groups for segregating the plurality of storage volumes based on utilization of the plurality of storage volumes. A storage volume when available is selected from a group that was previously used to select another storage volume. After an end of the group has been reached for allocating the other storage volume and a threshold value for using the same group to allocate storage volumes has also been reached then another group is used to select the next storage volume.

In another embodiment a machine implemented method for allocating a storage volume from among a plurality of storage volumes for storing information in a storage system is provided. The method includes determining if a counter associated with a group used for previously selecting another storage volume has reached a threshold value after an end of the group has been reached for allocating the other storage volume. The storage system maintains a plurality of groups for segregating the plurality of storage volumes based on utilization of each of the plurality of storage volumes and the counter is used to determine a number of times the group can be used to allocate storage volumes.

The method further includes starting at a beginning of the group for selecting the storage volume when the counter has not reached the threshold value selecting a next group from among the plurality of groups after the counter has reached the threshold value and selecting a storage volume from the next group.

In yet another embodiment a machine implemented method for allocating a storage volume from among a plurality of storage volumes for storing information in a storage system is provided. The method includes maintaining a plurality of groups for segregating the plurality of storage volumes based on utilization of the plurality of storage volumes and determining if a counter associated with a group that was previously used to provide another storage volume has reached a threshold value. The counter is used to determine a number of times the group can be used to allocate storage volumes.

The method further includes starting at a beginning of the group for selecting the storage volume when the counter has not reached the threshold value selecting a next group from among the plurality of groups when the counter has reached the threshold value and selecting a storage volume from the next group.

In another embodiment a machine implemented method for allocating a storage volume from among a plurality of storage volumes for storing information in a storage system is provided. The method includes maintaining a plurality of groups for segregating the plurality of storage volumes based on utilization of the plurality of storage volumes determining if a threshold value for using a group that was previously used to select another storage volume has been reached starting at a beginning of the group for selecting the storage volume when the threshold value is not reached.

The method further includes selecting a next group from among the plurality of groups when the threshold value has been reached and selecting a storage volume from the next group.

This brief summary has been provided so that the nature of this disclosure may be understood quickly. A more complete understanding of the disclosure can be obtained by reference to the following detailed description of the various embodiments thereof in connection with the attached drawings.

As a preliminary note as used in this disclosure the terms component module system and the like are intended to refer to a computer related entity either software executing general purpose processor hardware firmware and a combination thereof. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer.

By way of illustration both an application running on a server and the server can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers. Also these components can execute from various computer readable media having various data structures stored thereon. The components may communicate via local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems via the signal .

Computer executable components can be stored for example on computer readable media including but not limited to an ASIC application specific integrated circuit CD compact disc DVD digital video disk ROM read only memory floppy disk hard disk EEPROM electrically erasable programmable read only memory memory stick or any other storage device in accordance with the claimed subject matter.

In one embodiment a machine implemented method and system for allocating a storage volume from among a plurality of storage volumes for storing information in a storage system of storage environment is provided. As described below in detail the storage system maintains a plurality of groups for segregating the plurality of storage volumes based on utilization of the plurality of storage volumes. A storage volume when available is selected from a group that was previously used to select another storage volume. After an end of the group has been reached for allocating the other storage volume and a threshold value for using the same group to allocate storage volumes has also been reached then another group is used to select the next storage volume.

Referring to the storage environment may include a plurality of client systems . .N also referred to as client storage systems A N also referred to as storage system a management console and at least one network communicably connecting client systems . .N storage systems and management console . Network may a local area network LAN wide area network WAN the Internet and others. As described herein the term communicably connecting may refer to a direct connection a network connection or other connections to enable communication between devices.

Clients . .N as described below in more detail may be general purpose computers having a plurality of components. These components may include a central processing unit CPU main memory I O devices and storage devices for example flash memory hard drives and others . The main memory may be coupled to the CPU via a system bus or a local memory bus. The main memory may be used to provide the CPU access to data and or program information that is stored in main memory at execution time. Typically the main memory is composed of random access memory RAM circuits. A computer system with the CPU and main memory is often referred to as a host system.

Each storage system may include or has access to a storage subsystem shown as A N having multiple mass storage devices A N may also be referred to as storage devices . The mass storage devices may be for example conventional magnetic disks optical disks such as CD ROM or DVD based storage magneto optical MO storage flash based storage devices or any other type of non volatile storage devices suitable for storing structured or unstructured data.

The storage system executes a storage operating system for managing storage space within storage subsystem and presenting the storage space to clients . As an example storage operating system may be the DATA ONTAP storage operating system available from NetApp Inc. that implements a Write Anywhere File Layout WAFL storage system or any other suitable storage operating system.

Storage operating system and applications running on the client systems . .N communicate according to well known protocols such as the NFS Network File System protocol or the CIFS Common Internet File System protocol to make data stored on storage device appear to users and or application programs as though the data were stored locally on the client systems . .N.

Storage operating system presents or exports data stored at storage devices as a storage volume may also be referred to as a volume to client systems . .N. In one embodiment a storage volume is a logical data set which is an abstraction of physical storage combining one or more physical mass storage devices or parts thereof into a single logical storage object.

A storage volume may be configured to store data containers scripts word processing documents executable programs and any other type of structured or unstructured data. The term data container as used herein means a block a file a logical unit of data or any other information. Each storage volume can represent storage space in one storage device an aggregate of some or all of the storage space in multiple storage devices a RAID redundant array of inexpensive disks group or any other suitable set of storage space. The process for selecting and allocating storage volumes is described below in detail.

In a typical mode of operation one of the client systems transmit one or more I O input output commands such as an NFS or CIFS request over network to the storage system . The storage system issues one or more I O commands to storage device to read or write the data on behalf of the client system. The storage system also issues an NFS or CIFS response containing the requested data over network to the client system.

The various storage devices including storage volumes can be configured and managed by using a management application executed by management console . In one embodiment as described below management console may be for example a conventional PC workstation or the like.

Communication between the management application and storage system may be accomplished using any of the various conventional communication protocols and or application programming interfaces APIs the details of which are not germane to the technique introduced herein. This communication can be enabled by network or via a direct link not shown .

Storage environment may include a plurality of client systems . .N similar to . .N a clustered storage system management console and at least a network communicably connecting the client systems . .N and the clustered storage system . As shown in the clustered storage system includes a plurality of nodes . . a cluster switching fabric and a plurality of mass storage devices . . may be referred to as and similar to storage device .

Each of the plurality of nodes . . is configured to include an N module a D module and an M Module each of which can be implemented as a processor executable module. Specifically node . includes an N module . a D module . and an M Module . node . includes an N module . a D module . and an M Module . and node . includes an N module . a D module . and an M Module ..

The N modules . . include functionality that enable the respective nodes . . to connect to one or more of the client systems . .N over the computer network while the D modules . . connect to one or more of the storage devices . .. Accordingly each of the plurality of nodes . . in the clustered storage server arrangement provides the functionality of a storage server.

The M Modules . . provide management functions for the clustered storage system . The M Modules . . collect storage information regarding storage devices and makes it available to clients and or storage operating systems. The storage device information includes storage device utilization or capacity utilization that is used to allocate storage volumes as described below in more detail.

A switched virtualization layer including a plurality of virtual interfaces VIFs is provided to interface between the respective N modules . . and the client systems . .N allowing storage . . associated with the nodes . . to be presented to the client systems . .N as a single shared storage pool.

Each of the nodes . . is defined as a computing system to provide application services to one or more of the client systems . .N. The nodes . . are interconnected by the switching fabric which for example may be embodied as a Gigabit Ethernet switch or any other type of switching connecting device.

Although depicts an equal number i.e. 3 of the N modules . . the D modules . . and the M Modules . . any other suitable number of N modules D modules and M Modules may be provided. There may also be different numbers of N modules D modules and or M Modules within the clustered storage system . For example in alternative embodiments the clustered storage system may include a plurality of N modules and a plurality of D modules interconnected in a configuration that does not reflect a one to one correspondence between the N modules and D modules.

The client systems . .N of may be implemented as general purpose computers configured to interact with the respective nodes . . in accordance with a client server model of information delivery. In the presently disclosed embodiment the interaction between the client systems . .N and the nodes . . enable the provision of network data storage services.

Specifically each client system . .N may request the services of one of the respective nodes . . . and that node may return the results of the services requested by the client system by exchanging packets over the computer network which may be wire based optical fiber wireless or any other suitable combination thereof. The client systems . .N may issue packets according to file based access protocols such as the NFS or CIFS protocol when accessing information in the form of files and directories.

Layout maintains a plurality of groups for example an empty group a regular group a full group and a reserved group . The storage volumes are assigned to a particular group based on storage volume utilization. The term storage volume utilization or utilization as used herein means a percentage of a storage volume that is used at any given time or is available at any given time. The storage volume utilization may be based on a plurality of factors for example amount of storage space used at any given time transfer rates for processing I O requests number of client systems that access storage space within storage devices and others. The storage volume utilization may be determined before an existing input output request is completed such that a next request is optimally handled.

Typically since storage operating system executes input output operations for reading and writing information it can also track storage volume utilization which is then used for maintaining layout . In one embodiment layout may be maintained as a data structure by processor executable code at an N module. The processor executable code for maintaining layout may be integrated with the storage operating system or functions as an independent module. It is noteworthy that the adaptive embodiments are not limited to where and which component maintains layout .

The empty group may include a plurality of storage volumes VE1 VEN A N. A storage volume can be categorized as empty when its utilization reaches a certain programmable threshold level of utilization. For example a storage volume that is utilized 20 or less may be considered to be empty and is assigned to the empty group.

The regular group may include a plurality of storage volumes VR1 VRN A N. A storage volume can be categorized as regular when its utilization reaches a certain programmable threshold level of utilization. For example a storage volume whose utilization is between 20 50 may be considered to be regular and is assigned to the regular group .

The reserved group includes a plurality of storage volumes VRES1 VRESN A N. The reserved storage volumes may be used by the storage operating system after attempting to select volumes from the empty group and the regular group and determining no volumes exist in those groups.

The full group includes a plurality of storage volumes VF1 VFN A N. A storage volume may be categorized as full when its utilization reaches a certain programmable threshold level of utilization. For example a storage volume with utilization greater than 80 may be considered to be full and is assigned to the full group .

In one embodiment each group is associated with a counter for example and that tracks a number of times a group is traversed for allocating a storage volume. For example counter is associated with empty group and maintains a count value . The count value indicates a number of times the storage operating system has traversed from VE1 VEN to allocate a storage volume.

Similar to counter counter is associated with regular group and maintains a count value counter is associated with the full group and maintains a count value and counter is associated with the reserved group and maintains a count value .

In one embodiment the storage operating system first traverses through the empty group for a certain number of times to select storage volumes. For example the storage operating system may select storage volumes from among VE1 VEN twice before moving on to the regular group . This enables the storage operating system to select the least utilized volumes first. After the regular group is traversed once the reserved group is traversed for selecting storage volumes. Once the reserved group has been traversed once the storage operating system starts again from the empty group . The full group is rarely used because it includes storage volumes that have already been utilized. The use of the various counters and the various groups is now described below with respect to the process flow of .

The process begins in block S after the storage operating system has allocated a storage volume at a given time and selects a next volume that can be allocated in response to a future request or for any other reason. The storage system tracks the volumes that are allocated in response to I O requests in a data structure not shown at any given time. The data structure may store an identifier for identifying each storage volume and an identifier for identifying each request. The storage system is thus aware of a current storage volume allocated for a most recent request and the next volume that it will have to allocate in response to a future request or the next request .

In block S the storage operating system determines if it has reached an end of a group from which the previous storage volume was selected in block S. The storage operating system is aware of all the volumes within each group shown in . As described above the storage operating system maintains the data structure not shown for tracking volumes that have been allocated at any given time. Since the storage operating system is also aware of all the volumes within each group it can use the data structure to determine if it has reached the end of a group. The storage operating system performs this step to determine if the next storage volume is available from the group used in block S. For example if VE1 A was allocated from the empty group for a request in block S then a next storage volume for example VE2 is considered available because the end of the empty group has not been reached.

If the end of the group has not been reached i.e. a storage volume is available from the same group then in block S the next storage volume is selected from the same group for allocation. For example if VE1 was allocated in response to the first request in block S then VE2 may be selected for allocation for the next request.

If another storage volume is unavailable i.e. the storage operating system has reached the end of the group then in block S the storage operating system determines if a current count of the counter that is associated with the group has reached a programmable threshold value. Continuing with the example above the process determines if counter value has reached its threshold value. The threshold value is used to determine whether the storage operating system can traverse or use the same group to allocate a storage volume or move to a next group.

In one embodiment the threshold value for selecting a group from a current group may be different. For example the threshold value for the empty group may be 2 indicating that the storage operating system can traverse through the empty group twice before moving on to a next group. The threshold value for a regular group may be 1 and the threshold for a reserved group may also be 1.

The various threshold values are programmable via management console and may be based on different operating conditions such as transfer rates for processing I O requests number of client systems that access storage space within storage devices and others.

If the counter value has not reached a threshold value then in block S the counter value is increased and the storage operating system selects a storage volume from the beginning of the group.

If the counter value has reached the threshold value then in block S the counter is reset and the storage operating system moves on to select another group. In one embodiment the storage operating system first selects from the empty group and then the regular group . If storage volumes are not available at either the empty group or the regular group then the reserved group may be used. Thereafter in block S a next volume is selected from the group selected in block S. The selected volume is allocated when a request for a storage volume is received or if the storage operating system decides to allocate the selected storage volume. Thereafter the process moves back to block S.

The process and system described above optimize storage volume allocation since storage volumes are allocated based on utilization. This reduces the possibility of allocating space from a storage volume that may be over utilized while other storage volumes may be available and under utilized.

Processors A B may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such hardware devices. The local storage comprises one or more storage devices utilized by the node to locally store configuration information for example in a configuration table . The configuration information may include the threshold values for the various counters described above with respect to .

The cluster access adapter comprises a plurality of ports adapted to couple node . to other nodes of cluster . In the illustrative embodiment Ethernet may be used as the clustering protocol and interconnect media although it will be apparent to those skilled in the art that other types of protocols and interconnects may be utilized within the cluster architecture described herein. In alternate embodiments where the N modules and D modules are implemented on separate storage systems or computers the cluster access adapter is utilized by the N D module for communicating with other N D modules in the cluster .

Each node . is illustratively embodied as a dual processor storage system executing a storage operating system similar to that preferably implements a high level module such as a file system to logically organize the information as a hierarchical structure of named directories and files on storage .. However it will be apparent to those of ordinary skill in the art that the node . may alternatively comprise a single or more than two processor systems. Illustratively one processor A executes the functions of the N module on the node while the other processor B executes the functions of the D module .

The memory illustratively comprises storage locations that are addressable by the processors and adapters for storing programmable instructions and data structures. The processor and adapters may in turn comprise processing elements and or logic circuitry configured to execute the programmable instructions and manipulate the data structures. It will be apparent to those skilled in the art that other processing and memory means including various computer readable media may be used for storing and executing program instructions pertaining to the invention described herein.

The storage operating system that uses the various groups for example and counters and described above in detail for allocating storage volumes portions of which is typically resident in memory and executed by the processing elements functionally organizes the node . by inter alia invoking storage operation in support of the storage service implemented by the node.

The network adapter comprises a plurality of ports adapted to couple the node . to one or more clients . .N over point to point links wide area networks virtual private networks implemented over a public network Internet or a shared local area network. The network adapter thus may comprise the mechanical electrical and signaling circuitry needed to connect the node to the network. Illustratively the computer network may be embodied as an Ethernet network or a Fibre Channel network. Each client . .N may communicate with the node over network by exchanging discrete frames or packets of data according to pre defined protocols such as TCP IP.

The storage adapter cooperates with the storage operating system executing on the node . to access information requested by the clients. The information may be stored on any type of attached array of writable storage device media such as video tape optical DVD magnetic tape bubble memory electronic random access memory micro electro mechanical and any other similar media adapted to store information including data and parity information. However as illustratively described herein the information is preferably stored on storage device .. The storage adapter comprises a plurality of ports having input output I O interface circuitry that couples to the storage devices over an I O interconnect arrangement such as a conventional high performance FC link topology.

In one example storage operating system may include several modules or layers executed by one or both of N Module and D Module . These layers include a file system manager that keeps track of a directory structure hierarchy of the data stored in storage devices and manages read write operation i.e. executes read write operation on storage in response to client . .N requests.

Storage operating system may also include a protocol layer and an associated network access layer to allow node . to communicate over a network with other systems such as clients . .N. Protocol layer may implement one or more of various higher level network protocols such as NFS CIFS Hypertext Transfer Protocol HTTP TCP IP and others as described below.

Network access layer may include one or more drivers which implement one or more lower level protocols to communicate over the network such as Ethernet. Interactions between clients . .N and mass storage devices . are illustrated schematically as a path which illustrates the flow of data through storage operating system .

The storage operating system may also include a storage access layer and an associated storage driver layer to allow D module to communicate with a storage device. The storage access layer may implement a higher level storage protocol such as RAID redundant array of inexpensive disks while the storage driver layer may implement a lower level storage device access protocol such as FC or SCSI.

As used herein the term storage operating system generally refers to the computer executable code operable on a computer to perform a storage function that manages data access and may in the case of a node . implement data access semantics of a general purpose operating system. The storage operating system can also be implemented as a microkernel an application program operating over a general purpose operating system such as UNIX or Windows XP or as a general purpose operating system with configurable functionality which is configured for storage applications as described herein.

In addition it will be understood to those skilled in the art that the invention described herein may apply to any type of special purpose e.g. file server filer or storage serving appliance or general purpose computer including a standalone computer or portion thereof embodied as or including a storage system. Moreover the teachings of this disclosure can be adapted to a variety of storage system architectures including but not limited to a network attached storage environment a storage area network and a storage device directly attached to a client or host computer. The term storage system should therefore be taken broadly to include such arrangements in addition to any subsystems configured to perform a storage function and associated with other equipment or systems. It should be noted that while this description is written in terms of a write any where file system the teachings of the present invention may be utilized with any suitable file system including a write in place file system.

The processing system includes one or more processor s and memory coupled to a bus system . The bus system shown in is an abstraction that represents any one or more separate physical buses and or point to point connections connected by appropriate bridges adapters and or controllers. The bus system therefore may include for example a system bus a Peripheral Component Interconnect PCI bus a HyperTransport or industry standard architecture ISA bus a small computer system interface SCSI bus a universal serial bus USB or an Institute of Electrical and Electronics Engineers IEEE standard 1394 bus sometimes referred to as Firewire .

The processor s are the central processing units CPUs of the processing system and thus control its overall operation. In certain embodiments the processors accomplish this by executing software stored in memory . A processor may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such devices.

Memory represents any form of random access memory RAM read only memory ROM flash memory or the like or a combination of such devices. Memory includes the main memory of the processing system . Instructions implement the process steps described above may reside in and execute by processors from memory .

Also connected to the processors through the bus system are one or more internal mass storage devices and a network adapter . Internal mass storage devices may be or may include any conventional medium for storing large volumes of data in a non volatile manner such as one or more magnetic or optical based disks. The network adapter provides the processing system with the ability to communicate with remote devices e.g. storage servers over a network and may be for example an Ethernet adapter a Fibre Channel adapter or the like. The processing system also includes one or more input output I O devices coupled to the bus system . The I O devices may include for example a display device a keyboard a mouse etc.

The techniques described above for allocating storage volumes are applicable in the upcoming cloud computing environment. Cloud computing means computing capability that provides an abstraction between the computing resource and its underlying technical architecture e.g. servers storage networks enabling convenient on demand network access to a shared pool of configurable computing resources that can be rapidly provisioned and released with minimal management effort or service provider interaction. The term cloud is intended to refer to the Internet and cloud computing allows shared resources for example software and information to be available on demand like a public utility.

Typical cloud computing providers deliver common business applications online which are accessed from another web service or software like a web browser while the software and data are stored remotely on servers. The cloud computing architecture uses a layered approach for providing application services. A first layer is an application layer that is executed at client computers. In this example the application allows a client to access storage via a cloud.

After the application layer is a cloud platform and cloud infrastructure followed by a server layer that includes hardware and computer software designed for cloud specific services. Details regarding these layers are not germane to the inventive embodiments. The storage systems described above can be a part of the server layer for providing storage services.

Thus a method and apparatus for allocating storage volumes have been described. Note that references throughout this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Therefore it is emphasized and should be appreciated that two or more references to an embodiment or one embodiment or an alternative embodiment in various portions of this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics being referred to may be combined as suitable in one or more embodiments of the invention as will be recognized by those of ordinary skill in the art.

While the present disclosure is described above with respect to what is currently considered its preferred embodiments it is to be understood that the disclosure is not limited to that described above. To the contrary the disclosure is intended to cover various modifications and equivalent arrangements within the spirit and scope of the appended claims.

