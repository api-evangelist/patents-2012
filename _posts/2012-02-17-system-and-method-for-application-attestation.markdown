---

title: System and method for application attestation
abstract: An instrumented machine or platform having a target application thereon is disclosed. An attestation service may generate an application artifact having associated therewith a name and an application statement having at least one of a plurality of attribute value assertions describing the examined runtime local execution and introspection based derived security context. The application statements may represent the level of contextual trustworthiness, at near real time, of a running application on the instrumented target platform. A runtime process and network monitor may examine the local runtime execution context of the target application, and an identity provider may authenticate a user to the web application based on a web services query for attestation of the target application. A physical or logical authorization service may control access of an authenticated user to the target application, based on a dynamic application statement and multi-factor application attestation issued by the attestation service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08327441&OS=08327441&RS=08327441
owner: Taasera, Inc.
number: 08327441
owner_city: Erie
owner_country: US
publication_date: 20120217
---
The present application claims the benefit of U.S. Provisional Appl. No. 61 443 854 entitled SYSTEM AND METHOD FOR APPLICATION ATTESTATION filed Feb. 17 2011 which is incorporated by reference herein in its entirety.

The present disclosure relates to the field of data center virtualization and more particularly to a system and method to provide attestation of applications at runtime.

One recent trend in computing is the trend towards cloud computing in which for example enterprise software is no longer owned by the customer but instead the Information Technology infrastructure can be provided by a third party and the software applications may be sold as service offerings.

The presently disclosed technology may be embodied as a method apparatus and or system to discover one or more applications and or to attest for the applications on an instrumented target platform at runtime using or based on a plurality of assertions or statements .

The presently disclosed technology also may be embodied as a method apparatus and or system for a plurality of services that enable visibility control and or compliance in a cloud computing environment with dynamic application discovery identification monitoring and or attestation based on a plurality of factors.

The presently disclosed technology also may be embodied as a further method apparatus and or system to establish user to application connections based on dynamic attestation of applications and or security controls provisioned based on context aware business logic instead of for example topology based coordinates associated with encapsulation headers in network packets.

The presently disclosed technology also may be embodied as a yet further method apparatus and or system to authorize user to application transactions and or data exchange in an established connection during the authentication phase based on dynamic attestation of applications.

The presently disclosed technology also may be embodied as an additional method apparatus and or system for a runtime monitor to inspect web and non web applications e.g. all web and non web applications running on the instrumented target platform. The system may include an attestation service or broker using an attestation server and configured to generate application artifacts and or to issue application statements or claims. The application artifact may represent an identified application instance e.g. at runtime globally unique opaquely and or in a time sensitive manner for example using an application artifact having a specified or predetermined lifetime on an instrumented platform such as but not limited to a Personal Digital Assistant PDA a tablet computing device an iPhone an iPod an iPad a device operating the Android operating system OS from Google Inc. a device running the Microsoft Windows Mobile OS a device running the Microsoft Windows Phone OS a device running the Symbian OS a device running the webOS from Hewlett Packard Inc. a mobile phone a BlackBerry device a smartphone a hand held computer a netbook computer a palmtop computer a laptop computer an ultra mobile PC a portable gaming system a gaming console or another similar type of computing device having a computer microprocessor . The application statements may include at least one statement or claim about an inspected runtime execution context and or an intelligence based security context.

The runtime monitor may be configured to inspect the execution context of the application after using a local attestation process. The execution context of each respective application may include associated files processes and or network epochs e.g. socket events . The system may include any type of identity provider configured to authenticate a user to web or non web applications for example client server or peer to peer applications based on a request for attestation of and a security context of a target application on a computing platform e.g. the instrumented target platform .

The presently disclosed technology also may be embodied as a method apparatus and or system that may include a network access enforcer for controlling the authenticated user s physical access to the target application on the instrumented target platform responsive to one or more issued application statements e.g. issued by the attestation service or another entity .

The presently disclosed technology also may be embodied as another method apparatus and or system to include an identity provider for controlling the authenticated user s authorization to commence transactions with a target application on the instrumented target platform responsive to one or more issued application statements e.g. issued by the attestation service .

The presently disclosed technology also may be embodied with an application artifact that may include at least a registered name e.g. a registered globally unique security principal name for the running application instance e.g. a user program or a service program among others . The attestation service may be configured to generate an artifact based on a runtime local execution context of the running application instance on the instrumented target platform.

The presently disclosed technology also may be embodied with one or more application statements or claims which may include at least one of 1 a registered name e.g. a registered globally unique security principal name for the running application instance 2 a digitally signed certificate 3 creation and or modification timestamps 4 assertions of a security context from a plurality of collaboration services 5 a list of active listening and or open network ports e.g. well known and or ephemeral 6 network addresses used by the application 7 a product publisher 8 a product version and or 9 other runtime local execution context information.

The presently disclosed technology also may be embodied with one or more application statements or claims which may include attribute value assertions about an introspected security context of one or more running applications. The introspected security context may be received from one e.g. any one of the plurality of collaboration services.

The presently disclosed technology may also be embodied with a plurality of collaboration services which may include 1 an application whitelisting services e.g. any application whitelisting services 2 a vulnerability assessment service 3 a patch management service 4 an anti virus service 5 a predictive and behavioral analytics engine 6 and orchestration service 7 a network intrusion detection or prevention service 8 an open flow switch controller and or 9 a malware analysis system.

The presently disclosed technology may also be embodied with 1 an identity provider that may include a single sign on service or a brokered authentication service 2 a network access enforcer which may include devices such as for example network firewalls load balancers and or VPN gateways and which may be configured as a policy enforcement point to control access based on an application statement or claim.

The presently disclosed technology also may be embodied as a method apparatus and or system for evaluating authenticity of a web application for example a servlet in a container element . The method may include requesting a runtime application artifact for the web application from an attestation service and requesting based on the application artifact an application statement from the attestation service. The method may further include requesting from a plurality of collaboration services for example by the attestation service a context e.g. an introspection based security context for the web application on the instrumented target platform. The method may also include establishing a communication channel e.g. a secure communications channel between the instrumented target platform and the server providing attestation service and generating an application statement corresponding to at least one component of the web application. The method may include generating the statement about the application components based on a parent child association and or a loader dependency and transmitting the application statement to an identity provider. The method may further include generating a multi factor confidence metric of the web application to be included with and rendered natively by a passive web client or browser.

The presently disclosed technology may be embodied as another method apparatus and or system for evaluating authenticity of a non web client server application and or a peer to peer application. The method may include requesting an application artifact for the application from an attestation service for example by a runtime monitor and requesting an application statement from the attestation service for example by network access enforcer s . The method may further include requesting by the attestation service from a plurality of collaboration services a context e.g. an introspection based security context for the application on the instrumented target platform. The method may also include requesting a notification of or subscribing to a change e.g. any change in the execution context of the application on the instrumented target platform. The method may additionally include generating and publishing one or more application statements or claims about regarding the application based on at least one of a subscription request by a plurality of identity providers and or network access enforcers. The method may further include receiving or generating and publishing a multi factor confidence metric of the application for a physical or logical access control decision.

The presently disclosed technology also may be embodied as a method apparatus and or system for client server and or peer to peer applications to evaluate the authenticity of peers prior to commencing a transaction or data exchange e.g. any transaction or data exchange . The method may include a client server application and or a peer to peer application that may request an application artifact for each of the applications from an attestation service or attestation server and further may request based on an artifact exchange one or more application statements from the attestation service for each peer application. The method may further include requesting by the attestation service from a plurality of collaboration services a context e.g. an introspection based security context for these applications on the instrumented target platforms. The method may further include a secure exchange of the issued application artifacts between the applications and a verification process such as a back channel verification of the exchanged artifacts with the attestation service . This method may further include requesting one or more application statements based on or responsive to the exchanged application artifact from the attestation service and determining by the peer applications or by the network access enforcer s receiving the one or more application statements responsive to receiving the application statements the authenticity of the other or each application in the transaction.

The presently disclosed technology also may be embodied as a method apparatus and or system for displaying and continuously updating in real time or near real time e.g. within a threshold period the identity attribution and or attestation information of executing or running e.g. all running applications hosted in the private an or public virtual data centers in a cloud computing infrastructure. The method may include displaying one or more classification based confidence metrics and active listening and or open network ports e.g. well known and ephemeral assigned on a plurality of instrumented target platforms.

The presently disclosed technology also may be embodied as a method apparatus and or system for establishing access control policies based on a user authentication method a user role a dynamically discovered and attested application running on an instrumented target platform via subscription based application statements from an attestation service. The method may also include decoupling of the business logic role based access controls authentication requirements and or line of business applications among others from the network topology based physical constraints in the network fabric e.g. IP addresses MAC addresses VLAN identifiers and or subnet addresses among others and may include context aware logical attributes user identity and or application identity among others in policy grammar. The method may further include establishing access control rules that may leverage classification based dynamic confidence metrics which may be included in an application statement used for authorization decisions.

Although the invention is illustrated and described herein with reference to specific embodiments the invention is not intended to be limited to the details shown. Rather various modifications may be made in the details within the scope and range of equivalents of the claims and without departing from the invention.

Many enterprises are moving there IT infrastructures to cloud computing environments e.g. in which third parties may provide shared computing resources and applications running on those resources are offered as services to a plurality of customers for various reasons including 1 increased computing power 2 increased storage capacity and or 3 increased network bandwidth among others. Enterprise applications and mission critical applications may be executed in the cloud. Without adequate system and application security the cloud can compromise these applications causing large financial losses. Data confidentiality data integrity and data availability can be maintained in the cloud computing environment even when such applications may be controlled by these third parties. For example enterprises are moving from self managed on premise data centers to service provider managed outsourced virtual data centers e.g. the cloud computing environments . The cloud may enable traditional information technology systems and applications to transparently execute from these service providers managed outsourced virtual data centers. As newer technologies emerge the cloud infrastructure may evolve transparent to and scalable with enterprise operations. Security in such environments may be an emerging challenge.

In certain exemplary embodiments applications may be secured by signing on or authenticating applications onto the network using an attestation process e.g. via a single factor or multi factor attestation . In a multi factor process applications may be qualified based on at least two factors. A first factor may identify one or more attributes of the application e.g. run time instance of the application such as 1 a hash of the application as an application fingerprint 2 other applications processes called by the application 3 ports used by the application 4 computing storage and network resource usage by the application and or 5 the platform executing the application among others. Such information may be available locally e.g. at the computing platform running the application in the current execution context. A second factor may identify what is known about the application based on the attributes of the application from security intelligence external to the operating environment e.g. a third party e.g. trusted third party separate from the computing platform running the application .

Applications that are hosted in self managed and in house enterprise data centers may be gradually migrating to outsourced service provider managed virtual data centers in private public clouds. There may be a loss of visibility and direct control from this migration. Various exemplary embodiments include instrumentation to monitor the applications in process to increase visibility and enable attestation of applications executing in the outsourced service provider managed virtual data centers. As web and multi tier applications proliferate in the cloud secure connectivity based on certificates issued by third party certificate authorities may be inadequate for security and compliance because a significant number of web based threats originate from trusted web sites.

Generally access control mechanisms are based on static context and physical constraints rather than logical attributes and dynamic local execution context and or a holistic security context e.g. based on both local execution context as well as security intelligence . Physical and logical access controls based on user to application bindings as an operative element of business logic and logical attributes in a virtualized and fluid network may be used in a cloud computing environment for the utility based infrastructure platform and or software as a service model to scale and or be viable for multi tenancy or shared resources with deterministic confidentiality between or among tenants.

The access control mechanism may include an instrumented target hosting computing platform a policy statement e.g. grammar based on a runtime base of the particular application a temporal and environmental context independent of physical constraints or enforcement methods an attestation broker service or server for notifying interactive users network access enforcers and identity providers.

The confluence of single sign on SSO mechanisms and multi tier applications for example the web application database tiers may introduce higher risks of non compliance in outsourced multi tenant cloud services infrastructures. In the absence of reliable application attestation methods impersonation and delegation of user s credentials may pose serious security threats in for example multi hop transitive chain of services for both intra cloud and inter cloud computing environments where inter service transactions may be based on implied trust.

Referring to the exemplary network may include a runtime monitor that may discover and identify a web based application or non web based application that may be executing or running on a computing platform or an instrumented target platform an attestation broker that may receive a request to attest to the identify of a running application and that may query one or more collaboration services to request a context e.g. a security context and or an introspection based security context of the running application. The application may be an application targeted for use by an access requestor e.g. another computing platform that may be operated by a user or end user via for example an active or passive client application that may desire an assurance or an attestation that the application is appropriate to be used.

The attestation broker or the collaboration service may be configured to generate application statements or reports which may include assertions about the running target application and may deliver the statements or reports to the requestor the third party and or end user. The platform may include any computing device and or virtual platform for example e.g. a computer microprocessor Personal Digital Assistant PDA smartphone notebook computer and or a virtual server running on hardware among others . The computing device may include a microprocessor for execution for example of computing platform software such as operating system software applications and runtime monitor software among others and a memory for data metadata and software storage.

The attestation broker may issue application artifacts e.g. that may maintain a record of the state of the discovered or identified applications running on the instrumented platform to the runtime monitor for discovered or identified applications running on the instrumented platform . The runtime monitor may use the application artifacts to generate attribute value assertions e.g. assertions regarding one or more attribute values associated with each respective running application to describe the application execution context of the applications.

For example the attestation service or apparatus may include a processing unit for 1 receiving remote from the computing platform a runtime execution context indicating attributes of the application at runtime and a security context providing security information about the application 2 generating a report indicating security risks associated with the application based on the received runtime execution context and the received security context as an attestation result and or 3 sending the attestation result associated with the application and a memory for storing the generated report.

As a second example the runtime monitor or monitoring apparatus may include a processing unit e.g. a processor shared with the computing platform or a separate processor for 1 generating a runtime execution context indicating attributes of the application at runtime 2 sending the runtime execution context to the attestation service or server 3 receiving an application artifact for tracking subsequent changes to the runtime execution context and or 5 updating and sending using the application artifact the runtime execution context as an updated execution context responsive to the attributes of the application indicating a change and a memory for storing the application artifact .

The application artifact may include previous assertions or may provide an identifier that associates the application to the previous assertions. The application execution context may include at least a base or static temporal or dynamic and or environmental aspects or attributes of the target application. A requestor for example a network access enforcer such as a network firewall a load balancer a VPN gateway and or an identity provider such as an Security Token Service STS Single Sign On SSO solution may subscribe for application statements or reports from the attestation broker .

In certain exemplary embodiments the generation of attribute value assertions for the application execution context by the runtime monitor on the instrumented platform may include for example the collection of file hash digests and or file attributes e.g. file size publisher details creation and or modification timestamps digital signings and product versions for loaded e.g. all loaded and or in process components of the running target application or . The application execution context may include parent child process associations and or loader dependencies information about active listening and or open network ports that are well known or ephemeral. The application execution context may also include the executable file binaries. The runtime monitor may generate and report the collection in a digitally signed report to the attestation broker in an application execution context notification.

In certain exemplary embodiments as an outcome of or based on the evaluation of the running target application or on the target instrumented platform using collaboration services the attestation broker may issue application statements or reports via application statement notification . The issued application statements or reports may be digitally signed and may include a name of the application instance e.g. a globally unique security principal name of the application instance or other application identifier as its application identifier. The application instance may be a user program or a service program. One example of such a name may be service hostname realm .

The application statements or reports may include attribute value assertions that may describe the runtime execution context and application security context of the application instance on the instrumented platform as a machine identifier. The application identifier may be a publisher designated product name or a registered service principle name in a services directory. The machine identifier may be an IPv4 IPv6 address a directory network services DNS hostname a MAC address a serial number e.g. an IT or manufacturer issued serial number an RFID and or other device identifiers among others. The attestation broker may provide to the requestor or a confidence metric that may include one or more ratings e.g. application confidence ratings for the targeted application .

The confidence metric may for example be classified based on 1 the vulnerability of the application 2 compliance of the application 3 referential integrity of the application and or 4 patch level of the target application. These ratings may be determined by the attestation broker based on communications or interactions with one or more of the plurality of collaboration services . The confidence metrics may include a value for each classification and or an overall value which is weighed by classification or averaged. The weighing may be predetermined preset or determined based on user input. The confidence metrics may be a numerical representation of the evaluation of one or more of the collaborative services .

In certain exemplary embodiments the application statements or reports may be used by passive clients for example a web browser to render an icon or other indicator either visual on the web page or audio indicator for example an icon at the bottom of the web page . The indicator may be an indicator or an attestation of the web application s authenticity to the user . For example the user may click on the attestation icon to view web application specific information issued by the attestation broker for the accessed web application. The attestation broker may be a third party independent and trusted entity that provides such attestation services. The user may confirm that the application attestation offered by the attestation broker is current e.g. that the lifetime of the application attestation has not expired .

The user or access requestor e.g. the computing platform of the user may ascertain from the attestation broker that the application statements or reports or claims represent a recently e.g. a most recent verified contextual assessment of the accessed web application based on timestamps and or message sequencing in the application statements . The determination that the claims represent the most recent verified contextual assessment may be based on consolidating information collected via one or more of a plurality of collaboration services .

The application statements or reports may be received and may be interpreted by one or more network access enforcers e.g. network firewalls load balancers and or VPN gateways among others one or more identity providers e.g. STS and or SSO services among others and or active clients e.g. Simple Authentication and Security Layer SASL enabled client server and or peer to peer applications among others to leverage contextual information about the target application or on the instrumented platform .

The runtime monitor may discover may identify and may track process starts e.g. all process starts process terminations e.g. all process terminations and network epochs e.g. socket events of applications on the operating system of the instrumented platform . The local execution context of the running application may be determined at runtime and may be reported as attribute value assertions over a communication channel to the attestation broker service .

In certain exemplary embodiment the communication channel may be a secure communication channel and or the communication may be secured via known encryption decryption methods. The attestation broker may request introspection based security context for example evaluations and behavioral or predictive analytics based on historic state information and measurements sampled over a period of time using a variety of inspection methods for the running application on the instrumented platform from one or more of the plurality of collaboration services .

In certain exemplary embodiments the collaboration services may perform just in time inspection e.g. an assessment scan of the target application and platform . The collaboration service may lookup the most recent inspection report based on for example an IT service management schedule and may return the requested attestations pertaining to the application execution context to the requestor or or the user .

The attestation broker may generate and may return an application artifact for the running application or to the runtime monitor as a reference for subsequent execution context change notifications see for the applications. Changes e.g. any changes in the running application s local execution context may trigger an interaction with the attestation broker e.g. a communication by the runtime monitor to the attestation broker to reissue the application statements or reports for attestation of the targeted application having the changed local execution context. For example when the hash of the targeted application changes or the file size of the targeted application changes an updated attestation may be initiated by the runtime monitor and provided by the attestation broker . The attestation broker may query one or more of the collaborative services to determine the updated application statement or report associated with the changed targeted application.

In certain exemplary embodiments the attestation broker may provide a single confidence value that represents the confidence or risk regarding the authenticity of the targeted application or a confidence metrics of a plurality of values based on different e.g. independent classifications. In other exemplary embodiments the attestation broker may provide the confidence metrics and other information in a standard format such that the requestors and or or the runtime monitor may analyze various attributes of the other information. For example the runtime monitor may store or may have access to application attestation policies and may compare the local execution context and application statement or report with the attestation policies to determine whether the targeted application is authenticated for use by the requestor. The identity provider may receive for example a web redirect from web application to perform brokered authentication ceremonies to login a user e.g. an interactive user .

In certain exemplary embodiments the web application may request via an application artifact request an application artifact from the attestation broker . The web application may include the received application artifact in a web redirect to the identity provider . The identity provider may perform a back channel query to validate that the received application artifact had been issued by the attestation broker to ascertain the authenticity of the web application . The identity provider may then receive application statements or reports for the web application . A visual audio or programmatic indication of application attestation may be provided to the access requestor or user via the access requestor .

The interactive user or requestor may receive a visual or audio attestation of application authenticity for example in the form of a visual indicator or an icon on the login form. The attestation may be accepted or rejected before proceeding with any transaction with the web application or the attestation may be automatically accepted after a predetermined or user specified time period if not rejected by the user or requestor .

A network access enforcer may subscribe with the attestation broker for application statements or reports and may discover a plurality of target applications or on a plurality of target machines or platforms . The communication protocol for the communications between the attestation broker and the network access enforcer may be any standards based protocol and message exchange data structures or schemas such as for example 1 Simple Object Access Protocol SOAP 2 Representational State Transfer REST or 3 Trusted Computing Group s TCG s Interface for Metadata Access Points IF MAP specification among others.

The attestation broker may publish notifications with real time or near real time application statements or reports for the network access enforcer to apply physical access controls e.g. controls to physically enable access to or to block access to the targeted application . The determination to enable or disable physical access by the network access enforcer may be based on attribute value assertions e.g. in the transport layer in application statements or records . The attribute value assertions may include for example static e.g. well known and or dynamic e.g. ephemeral network ports assigned to the target application or .

An active client application and or a server application e.g. using the Simple Authentication and Security layer SASL protocol may request and or use the received application statements or reports programmatically for a mutual attestation handshake. For example using SASL protocol such a mutual attestation handshake may be defined by an integrity exchange profile before initiating an authentication handshake with proof of possession of credentials.

Referring to an exemplary network may include a runtime monitor an instrumented target platform an attestation broker a metadata database and or a plurality of collaboration services .

The runtime monitor may discover may inspect may identify and or may attest to the runtime execution of applications on the instrumented target platform . The attestation broker may issue application artifacts based on a received application execution context or application execution context change notification for registered application instances . Responsive to the request from the runtime monitor or an access requestor or user the attestation broker or attestation server may initiate a query of one or more of the plurality of collaboration services or collaboration servers . The query may include a search for a security context e.g. an introspection based security context for the target application.

In certain exemplary embodiments the applications running on the instrumented target platform may be verified using one or more of the collaboration services for identification based on an application execution context received from the runtime monitor either directly or via the attestation broker .

The runtime monitor may inspect the execution context of processes on the instrumented target platform for application epochs e.g. process and or socket events . Responsive to or after detection of application process start a runtime application execution context e.g. metadata may be generated. The metadata may include 1 the file hash digest 2 file attributes for example the file size the publisher details the creation and or the modification timestamps the digital signing and or the product version for loaded components of the running target application 3 parent child process associations 4 loader dependencies and or 5 information about active listening and or open network ports that may be well known and or ephemeral and or executable file binaries. The running application may be registered by providing the generated application execution context to the attestation broker .

In certain exemplary embodiments the attestation broker may verify the authenticity of the running application on the instrumented target platform with the query . The query that may include the metadata collected from the runtime monitor may be sent from the attestation broker and received by one or more collaboration services . The query may request a security context for the running application that may indicate the level of risk of confidence associated with running the target application on the instrumented platform .

The attestation broker may generate a dynamically changing application artifact which may be time sensitive and may be globally unique. The application artifact may be based on the received application execution context and the attestation broker may return the generated application artifact to the runtime monitor . The runtime monitor may inspect each of the running applications for state changes including for example active listening and open network ports e.g. well known and ephemeral and or terminations of the applications. These inspections may occur for example at the transport layer of the open systems interconnection OSI stack.

In certain exemplary embodiments other types of state changes may be inspected such as elements related to the execution context. Any contextual state changes may be notified in real time or near real time by an application execution context change notification from the runtime monitor to the attestation broker . The attestation broker may store persistent and or transient state information e.g. including metadata in a local database or remote repository such as an IF MAP Server for example for registered applications e.g. each registered running application on one or more of the plurality of instrumented target platforms .

Referring to an exemplary network may include an interactive user an instrumented target platform a web application an identity provider an attestation broker and collaboration services . The web application may interact with the attestation broker for runtime multi factor attestation of the web application . The operational flow may enable a mechanism to apply for example at a post connect phase of a session for authorization control on an intermediate node element in the control path.

The interactive user may establish a physical connection over a network and may initiate an application access request to commence or initiate a transaction with a web application hosted on the instrumented target platform .

In certain exemplary embodiments the web application may execute a code element such as for example a web servlet or other processing element that may generate a runtime application execution context e.g. metadata and may automatically initiate a query to the attestation broker by sending the generated metadata of the runtime application execution context.

In certain exemplary embodiments the attestation broker may verify the authenticity of the running web application on the instrumented target platform by sending a verification query e.g. real time or near real time of the received metadata to one or more of the collaboration services and receiving from the queried collaboration services an application security context . The attestation broker may generate an application artifact and may send the application artifact to the web application .

The web application may include for example may embed as a markup the received application artifact as an assertion e.g. in a security assertion markup language SAML or other common form of markup to the identity provider which may use back channel communications with the attestation broker to verify the application artifact .

In certain exemplary embodiments the attestation broker or attestation server may request a collaboration service for an introspection based security context for the running application.

In various exemplary embodiments the identity provider may initiate a direct interactive authentication sequence with an interactive user in the associated domain e.g. realm . The login form or web page displayed to the user may include an application attestation . The application attestation may be in any perceivable indicator including an attestation icon for the accessed web application. For example the attestation icon may include information about the web application such as for example the identity the product version the publisher the modification timestamp and or the confidence metrics. The user may determine whether the information including the confidence metrics information is acceptable to continue with the transaction e.g. to use of the running target application and may provide proof of possession of credentials to authenticate the user to the identity provider .

Although user authentication is disclosed as occurring after the determination whether to continue the transaction to use the running application it is contemplated that user authentication may occur at any stage of the login process and may occur prior to such a determination whether to use the running application.

In certain exemplary embodiments values associated with the confidence metrics may be provided on a common scale e.g. a scale of 1 to 10 and may be presented to the user with a common visual scheme such as green to indicate a low risk for use of the target application yellow to indicate a intermediate risk for use of the target application and red to indicate a high risk for use of the target application.

In certain exemplary embodiments the identity provider may query the attestation broker to determine whether access to the web application based on an authorization profile configured for the attestation broker can be granted for the authenticated user to transact data exchanges with the web application .

In various exemplary embodiments the identity provider may return standards based authentication attribute and or authorization statements or reports to the web application . The web application may selectively grant access to the user for the target application on the instrumented platform or may selectively block access by the user to the target application on the instrumented platform based on the application statements or reports received from the attestation broker and pre established or system administrator established access or attestation policies.

The application statements or reports may include for example information about the user s identity one or more authentication factors such as password PIN smart card among others and preexisting roles in a user directory for example Active Directory among others a role based management system for example Oracle or SAP among others and or a relational database for example MS SQL MySQL or Oracle DB among others . Access may also be granted or denied blocked based on a plurality of factors.

For example the identity provider may deny access to an authenticated user based on the level of concern e.g. high in the confidence metrics for a specific classification e.g. compliance . The level of concern for a classification of the confidence metrics may be expressed in user to application policy bindings provisioned for the attestation broker . The outcome of the policy decision logic at or external to the attestation broker may be returned to the web application as one or more application statements or reports.

The identity provider may represent an intermediate single sign on SSO entity or function that may use identity stores or caches to manage passwords and may perform authentication ceremonies on behalf of the user . The authentication may be performed such that it is transparent to the user .

Referring to an exemplary network may include an instrumented target platform a runtime monitor an attestation broker collaboration services an interactive user and or a network access enforcer . The user may establish a physical connection over network and may initiate an application access request to commence or initiate a transaction with a target application hosted on the instrumented target platform .

Applications running on the instrumented target platform may be inspected by the runtime monitor for application execution context and state changes. The operational flow may be an exemplary mechanism to apply during or at the connection establishment phase of a session e.g. an Internet Protocol IP or non IP session authorization controls at an intermediate system or apparatus in the data path.

The runtime monitor may inspect the instrumented target platform for application epochs e.g. process and or socket events . Responsive to detection of an application process start by the run time monitor the runtime monitor may generate a runtime application execution context e.g. metadata which may include for example the file hash digests and or file attributes for loaded components of the running target application. The running target application may be registered by the runtime monitor with the attestation broker via a start notification and the runtime application execution context e.g. that may include the metadata may be sent by the runtime monitor to the attestation broker via an application execution context change notification . In certain exemplary embodiments the notifications and may occur together.

In certain exemplary embodiments the attestation broker may verify the authenticity of the running application on the instrumented target platform with a real time or near real time exchange of the received metadata with one or more collaboration services and the return of the application security context based on the exchanged metadata. The attestation broker may also request on or more collaboration services to perform a static dynamic and or virtual execution analysis of the executable file binary for example by a malware analysis system.

In certain exemplary embodiments the attestation broker may remediate an instrumented target platform using manual or automated methods in response to a requested analysis performed by one or more collaboration services .

The attestation broker may generate a dynamic application artifact e.g. that may be globally unique and may be time sensitive and may issue the application artifact to the runtime monitor . The runtime monitor may inspect running applications on the instrumented target platform for contextual state changes including for example active listening and or open network ports e.g. at the transport layer of the OSI stack and terminations of applications.

In certain exemplary embodiments other types of state changes may be inspected such as elements related to the execution context. Contextual or state changes e.g. any contextual changes may be notified in real time or near real time to the attestation broker . The attestation broker may store persistent and transient state information in a local database or remote repository see for registered running applications on a plurality of instrumented target platforms .

A network access enforcer may register or subscribe with the attestation broker as a web service over a web services protocol interface for notifications e.g. publications of application statements or reports e.g. claims for running applications e.g. all running applications on a plurality of instrumented target platforms . The attestation broker may publish in real time or near real time up to date application statements or reports to a plurality of subscribers or users . The application statements or reports may include 1 an application identifier such as a registered name e.g. a globally unique service principle name 2 a machine identifier 3 a product identifier 4 a product version 5 active listening and or open network ports 6 network addresses used by the target application and or 7 confidence metrics based on security context assessments performed by one or more collaboration services . The confidence metrics may be based on 1 recent e.g. the most recent security context assessments performed by one of the collaboration services 2 correlated data from different collaboration services and or 3 weighed averages associated with each security context assessment among others.

The network access enforcer may query the attestation broker for user specific application bindings configured for the attestation broker to determine authorization controls based on dynamic multi factor application attestation and real time or near real time confidence metrics based on the local execution context and assessed security context . For example the network access enforcer such as a virtual or physical network firewall appliance may deny access to an authenticated user based on the level of concern high for example from a three level ranking system of high medium and low in the confidence metrics for a specific classification e.g. patch level as expressed in the user to application policy bindings provisioned for the attestation broker . Although a three level ranking system is illustrated it is contemplated that ranking systems with more or less levels are possible.

Referring to an exemplary network may include a client application a server application an attestation broker a collaboration service and or an application programming interface API library .

Although a Simple Authentication Security Layer SASL protocol is illustrated it is contemplated that any application layer protocol between client server and peer to peer applications or network security protocols for example IPSec Authenticated Internet Protocol AuthIP or Internet Key Exchange IKE may be extended and or used to provide the functions of the client application and the server application .

In certain exemplary embodiments the client application and the server application may be statically or dynamically linked to the API library e.g. a Trust as a Service TAAS API library . The API library may implement a set of procedure calls for applications to exchange messages e.g. opaque and or secure messages with an attestation service or broker that may hide the implementation details from the higher level application.

Although one exemplary embodiment is illustrated for the API library it is contemplated that any application framework may be extended to implement the set of procedure calls provided by the API library .

The server application may send a runtime server application execution context may request a server application artifact and may receive the server application artifact from the attestation service e.g. the attestation broker or the attestation server . The application execution context may include the file hash digests and file attributes of components of the running server application including parent child process associations and loader dependencies.

The client application may establish a network connection to the server application and may initiate a profile exchange for authentication.

Subsequent to completing an authentication exchange for example to authenticate the user associated with the client application the client application may send a runtime client application execution context and may request a client application artifact from the attestation broker or service or server . The client application execution context may include the file hash digests and file attributes of components of the running client application including parent child process associations and loader dependencies. Responsive to or after receiving a client application artifact the client application may transmit the received application artifact indicated as to the server application . The server application may send the received client application artifact to the attestation server for client artifact validation and may request a client application statement or report for the client application .

In certain exemplary embodiments the attestation broker may initiate a request for an introspection based security context for the client application from one or more of the collaboration services . The requested collaboration services may collect and may generate the client application security context and may send the client application security context to the attestation broker . The client application statement or report may be generated by the attestation broker from the client application security context and may include assertions about the runtime execution context and intelligence based security context for the client application . Responsive to receiving the client application statement or report from the attestation server the server application may determine whether the attestation of the client application is adequate.

In certain exemplary embodiments the confidence metrics may be included in the client application statements or reports and may be analyzed for example by the server application to determine whether to transact data exchanges with the client application .

Upon or after receiving the client application statements and determining to transact data exchanges with the client application the server application may transmit the received server application artifact indicated as to the client application . The client application may send the received server application artifact to the attestation server for validation of the server artifact and may request an application statement or report for the server application .

In certain exemplary embodiments the attestation broker may initiate a request for an introspection based security context for the server application from one or more of the collaboration services . The requested collaboration services may collect and may generate the server application security context and may send the server application security context to the attestation broker . The server application statement or report generated by the attestation broker may include assertions about the runtime execution context and intelligence based security context for the server application . Responsive to or after receiving the server application statement or report from the attestation broker or service the client application may determine whether the attestation of the server application is adequate. In certain exemplary embodiments the confidence metrics included in the server application statement may be analyzed for example by the client application to determine whether to transact data exchanges with the server application .

Although confidence metrics included in the application statements may be analyzed by the requesting application in certain exemplary embodiments the API library may provide standard and or custom pluggable filters to normalize the classifications based confidence metrics such that a standard rating scale may be provided to each requesting application and the requesting application may predetermine settings for denying access to an application with a particular rating exceeding a risk threshold and or granting access to the application with the particular rating equal to or not exceeding the risk threshold. In certain exemplary embodiments application at or near the risk threshold may be temporarily denied access pending further analysis based on additional collaborative services or based on user of system administrator input granting or denying such access.

Referring to the exemplary security administration console may visually display the integrity dashboard or display window . The integrity dashboard or display window may include information fields including a dashboard clock discovered and identified applications service realms instrumented target platforms product vendors product versions active network service ports and confidence metrics .

The information fields may be displayed and or updated in real time or near real time. For example the identified and attested application running on the instrumented target platform service realms product vendors product versions current classifications based confidence metrics and currently active network service ports for the application may be displayed on an integrity dashboard in near real time as indicated by the dashboard clock . The dashboard may include administrative controls not shown to create filters for perspective views and issue security alerts based on a plurality of defined criteria and or provide companion reporting services.

Although the integrity dashboard is shown with specific information fields and in a particular arrangement it is contemplated that other information fields and arrangements are possible. For example additional attributes included in the application statements or reports or other network management information available from network management systems may also be displayed.

Referring to the authorization dashboard or controls window may include information fields provisioned and parsed by for example a cloud client or tenant and may include users roles authentication realms authentication types instrumented service hosts or target platforms service realms identified and attested applications product versions and or product vendors .

The authorization dashboard for each cloud client may include a plurality of policy components or rules for defining a policy or rule set for the user a plurality of users roles or a plurality of roles and an attested application instance . The dashboard may include administrative controls not shown to create filters for perspective views and issue security alerts based on a plurality of defined criteria and or provide companion reporting services. The filters may enable for example filtering of an authenticated user by an authentication type or authentication method for a runtime access control decision. Each row of the illustrated authorization dashboard includes information fields e.g. contents that may represent or correspond to a statement of policy created by the system administrator for the cloud client .

In certain exemplary embodiments federation of services across different hosting realms may be displayed such that a user authenticated in one authentication domain or realm may be provisioned with policy based access to an application hosted in a different target services domain or realm .

In certain exemplary embodiments the attestation broker for example may be configured to service requests for application artifacts and application statements across a plurality of hosting realms.

Although the integrity and authorization dashboard is shown with specific information fields and in a particular arrangement it is contemplated that other information fields and arrangements are possible and that these dashboards may be parsed using any one of the information fields to generate a different perspective view.

The access control policies created by the system administrator of the cloud client using the authorization dashboard or console may be based on runtime context aware logical attributes pertaining to an attested running application instance such that the contextual information for the attestation may include the runtime local execution context and an introspected security context. There are no physical constraints wherein rules may require network topology based static attributes including at least one of an IPv4 IPv6 address a port number a MAC address a network identifier a subnet a VLAN identifier or combinations or variants thereof.

Although various embodiments have been described in terms of creating context aware policies in a cloud environment it is not limited thereto. The methods may be carried out for example between any numbers of computer systems maintaining secure transactions among themselves.

Referring to the method may provide an attestation service or broker for an application at runtime executing on a computing platform using an attestation server . At block the attestation server remote from the computing platform may receive 1 a runtime execution context indicating attributes of the application at runtime and 2 a security context providing security information about the application. At block the attestation server may generate a report indicating security risks associated with the application based on the received runtime execution context and the received security context as an attestation result. At block the attestation server may send the attestation result associated with the application.

In certain exemplary embodiments at block the attestation server may also send an automated remediation request to a collaboration service for example an orchestration service to initiate operations on an instrumented platform for example to reimage snapshot or quarantine the instrumented platform based on the attestation result associated with one or more applications .

In certain exemplary embodiments the attestation server may generate an application artifact as a reference for changes in a subsequent execution context and may send the generated application artifact such that subsequent changes to the runtime execution context are tracked based on the generated application artifact .

In certain exemplary embodiments the attestation results and the application artifact may be digitally signed.

In certain exemplary embodiments the received security context may be an introspective security context and the attestation server may generate one or more security assertions that pertain to the received runtime execution context and the received introspective security context .

In certain exemplary embodiments a user s transaction with the application may be controlled by applying a set of authorization rules in accordance with the attestation results. In these and other exemplary embodiments a user s network access to the application may be controlled based on the set of authorization rules and the attestation results.

In certain exemplary embodiments confidence metrics in the attestation results may be provided which indicate a level of security risk by different classifications such that a restriction on a user s transaction with the application may be applied based on the level of security risk indicated by the confidence metrics in the attestation results.

In certain exemplary embodiments the restriction on the user s transaction may include the application of routing decisions and the redirection of the user to an alternate computer platform.

Referring to the method may provide an attestation service for an application at runtime executing on a computing platform using a runtime monitor . At block the runtime monitor at the computing platform may generate a runtime execution context indicating attributes of the application at runtime. At block the runtime monitor may send the runtime execution context to the attestation server . At block the runtime monitor may receive an application artifact for tracking subsequent changes to the runtime execution context . At block the runtime monitor using an application artifact may update and may send the runtime execution context as an updated execution context responsive to the attributes of the application indicating a change.

In certain exemplary embodiments the generation of the runtime execution context may include the runtime monitor inspecting running application processes on the computing platform and generating metadata that includes at least a local runtime execution context.

Referring to the method may provide mutual attestation for first and second interrelated applications and at runtime using an attestation server . The first application may run on a first computing platform and the second application may run on a second computing platform . At block the attestation server remote from the first and second computing platforms and may receive a first runtime execution context of the first application indicating attributes of the first application at runtime and a second runtime execution context of the second application indicating attributes of the second application at runtime. At block the attestation server may generate 1 a first report indicating security risks associated with the first application based on the received first runtime execution context as a first attestation result and 2 a second report indicating security risks associated with the second application based on the received second runtime execution context as a second attestation result. At block the attestation server may send the first attestation result associated with the first application to the second computing platform and the second attestation result associated with the second application to the first computing platform for mutual attestation.

In certain exemplary embodiments a web browser may render an icon indicating that the first attestation result has been sent and responsive to user selection of the icon may render the attestation result about the first application which is a web application accessed via the web browser.

In certain exemplary embodiments the attestation server may generate a first application artifact as a reference for changes in a subsequent execution context of the first application and a second application artifact as a reference for changes in a subsequent execution context of the second application and may send the generated application artifacts and such that subsequent changes to the first and second runtime execution contexts and may be tracked in the first and second interrelated applications and based on the generated first and second application artifacts and respectively.

In certain exemplary embodiments access by a requestor for example a user to the first application may be controlled based on the first attestation results and independently based on the second attestation results.

Referring to the method may provide attestation of a running application e.g. web or non web applications . At block the attestation server may register subscriptions for a plurality of subscribers or users for context change notifications of the running application. At block the attestation service or server may generate assertions about the running application. At block the attestation service or server may send to the plurality of subscribers or users the assertions of the running application in response to reception of the context change notification . The assertions may include at least confidence metrics indicating a level of security risk of the running application.

Referring to the method may provide mutual attestation of applications in client server or peer to peer transactions using an attestation server. At block the attestation server may generate 1 a first application artifact for tracking changes in a runtime execution context associated with a client in the client server transaction and 2 a second application artifact associated with a server in the client server transaction. At block the attestation server may send the first application artifact to the client and the second application artifact to the server . At block the first and second application artifacts and may be exchanged such that the client and the server each have the first and second application artifacts and to mutually track changes in runtime execution contexts and associated with the client and the server for client server transactions.

Although a client server transaction between a client and a server is shown it is contemplated that mutual attestation may be provided by an attestation server between first and second peers or among first second and or further peers in a peer to peer environment.

Referring to the method may provide mutual attestation of applications in client server or peer to peer transactions using an attestation server. At block the attestation server may generate and send a first application artifact . At block the attestation server may receive and validate from a server in the client server transaction the first application artifact sent by the attestation server to a client in a client server transaction. At block the attestation server may generate and send application statements and to the client and the server about interrelated applications and used in the client server transaction. For example the sending of the application statements and to the client and the server may include sending by the attestation server 1 the application statement regarding a client application of the interrelated applications to the server of the client server transaction and the application statement regarding a server application of the interrelated applications to the client of the client server transaction.

In certain exemplary embodiments the attestation server may generate and send a second application artifact may receive the second application artifact from a client in the client server transaction and may validate the second application artifact sent by the attestation server to a server in a client server transaction.

In certain exemplary embodiments a method of providing attestation services for applications at runtime may include one or more of the following steps hosting by an instrumented target platform a target user or service program generating by an application attestation service 1 a globally unique opaque time sensitive application artifact and 2 at least one application statement including a plurality of assertions pertaining to an inspection based runtime local execution context and an introspection based security context inspecting by a runtime monitor running application processes on the instrumented target platform generating by the runtime monitor metadata that includes at least the runtime local execution context authenticating by an identity provider a user to a web application providing an attestation of the local execution and introspected security context of the web application based on a web services request controlling by a network access enforcer access of an authenticated user to a target application using a subscription based application attestation service and or providing by a collaboration service the introspected based security context for the target application running on the instrumented target platform.

In certain exemplary embodiments a method for providing attestation of the authenticity of a running web application or web servlet may include one or more of the following steps requesting an application artifact for a running web application or servlet instance establishing a secure channel between the web server and the attestation server generating at least one hash file digest corresponding to the execution context of the web application or servlet instance determining at least one file attribute corresponding to at least one element or the execution context of the web application or web servlet instance sending an application report to an identity provider generating assertions based on a received security context and a received local execution context transmitting confidence metrics in the report to the identity provider and or providing attestation of the running web application or web servlet as a digital icon for rendering by a web browser.

In certain exemplary embodiments the attestation may be provided prior to 1 commencing any data exchange in an established connection with a user and or 2 establishing a network connection with a user.

In certain exemplary embodiments the rendering of attestation information about a web application to be accessed may be responsive to user input.

In certain exemplary embodiments a system for continuously monitoring running applications hosted on self managed and on premise or on outsourced service provider managed infrastructure may include one or more of the following an instrumented target platform for hosting a target user or service program an application attestation service for generating a globally unique opaque and time sensitive application artifact and application statements including a plurality of assertions pertaining to inspection based runtime local execution context and introspection based security context a runtime monitor for discovering identifying and inspecting running application processes on the instrumented target platform and for generating metadata that includes at least the runtime local execution context a collaboration service to provide introspected security context for a target application running on the instrumented target platform and or a graphical user interface for 1 requesting and receiving dynamic assertions from a metadata repository of the attestation service the dynamic assertions pertaining to the local execution context the introspected security context of running application instances on instrumented target platforms 2 for continuously displaying the dynamic assertions to a system administrator and for provisioning and dispatching alerts based on the dynamic assertions and predefined criteria.

In certain exemplary embodiments the network access enforcer may subscribe for and receives dynamic application statements from the attestation service to analyze the contextual assertions and to determine whether an authenticated user is permitted or denied network access to an attested application instance.

In certain exemplary embodiments the graphical user interface may display the applications running on instrumented target platform on a client specific dashboard or portal and may present for each associated application execution context at least one of 1 a service hostname 2 a service realm 3 a service principal name 4 a product version 5 product vendor 6 one or more classifications based confidence metrics or 7 an active network service port.

In certain exemplary embodiments the identity provider may query for dynamic application statements from the attestation server to analyze the contextual assertions and to determine whether an authenticated user is permitted or denied authorization to transact data exchanges with an attested application instance in an established connection.

In certain exemplary embodiments the network access enforcer may analyze classifications based confidence metrics included in received dynamic application statements based on a subscription from the attestation service to determine whether an authenticated user is permitted or denied network access to an attested application instance.

In certain exemplary embodiments the identity provider may analyze classifications based confidence metrics included in received dynamic application statements based on a subscription from the attestation service to determine whether an authenticated user is permitted or denied authorization to transact data exchanges with an attested application instance in an established connection.

In certain exemplary embodiments a method for creating context aware policies for network connections or data exchange transactions between authenticated users and attested running applications hosted on self managed and on premise or on outsourced service provider managed infrastructures may include one or more of the following steps hosting by an instrumented target platform a target user or service program generating by an application attestation service a globally unique opaque and time sensitive application artifact and application statements comprising of a plurality of assertions pertaining to inspection based runtime local execution context and introspection based security context discovering identifying and inspecting by a runtime monitor running application processes on the instrumented target platform generate by a runtime monitor metadata that includes at least the runtime local execution context authenticating by an identity provider a user to a web application based on a web services request to provide attestation of the local execution and introspected security context of the web application controlling by a network access enforcer access of an authenticated user to a target application using the application attestation service that is subscription based providing by a collaboration service an introspected security context for the target application running on the instrumented target platform and or creating using a graphical user interface access control rules for users annotated by a distinguished name in a user directory or database and applications annotated by a registered globally unique security principal name.

In certain exemplary embodiments context aware access control policies may be created that stipulate acceptable thresholds for authorizations on the basis of dynamic classifications based confidence metrics.

Although exemplary embodiments have been described in terms of a computing device or instrumented platform it is contemplated that it may be implemented in software on microprocessors general purpose computers such as the computer system illustrated in . In various embodiments one or more of the functions of the various components may be implemented in software that controls a computing device such as computer system which is described below with reference to .

Aspects of the present invention shown in or any part s or function s thereof may be implemented using hardware software modules firmware non transitory computer readable media having instructions stored thereon or a combination thereof and may be implemented in one or more computer systems or other processing systems.

If programmable logic is used such logic may execute on a commercially available processing platform or a special purpose device. One of ordinary skill in the art may appreciate that embodiments of the disclosed subject matter can be practiced with various computer system configurations including multi core multiprocessor systems minicomputers mainframe computers computers linked or clustered with distributed functions as well as pervasive or miniature computers that may be embedded into virtually any device.

For instance at least one processor device and a memory may be used to implement the above described embodiments. A processor device may be a single processor a plurality of processors or combinations thereof. Processor devices may have one or more processor cores. 

Various embodiments of the invention are described in terms of this example computer system . After reading this description it will become apparent to a person skilled in the relevant art how to implement the invention using other computer systems and or computer architectures. Although operations may be described as a sequential process some of the operations may in fact be performed in parallel concurrently and or in a distributed environment and with program code stored locally or remotely for access by single or multi processor machines. In addition in some embodiments the order of operations may be rearranged without departing from the spirit of the disclosed subject matter.

Processor device may be a special purpose or a general purpose processor device. As will be appreciated by persons skilled in the relevant art processor device may also be a single processor in a multi core multiprocessor system such system operating alone or in a cluster of computing devices operating in a cluster or server farm. Processor device is connected to a communication infrastructure for example a bus message queue network or multi core message passing scheme.

Computer system also includes a main memory for example random access memory RAM and may also include a secondary memory . Secondary memory may include for example a hard disk drive removable storage drive . Removable storage drive may comprise a floppy disk drive a magnetic tape drive an optical disk drive a flash memory or the like.

The removable storage drive reads from and or writes to a removable storage unit in a well known manner. Removable storage unit may comprise a floppy disk magnetic tape optical disk etc. which is read by and written to by removable storage drive . As will be appreciated by persons skilled in the relevant art removable storage unit includes a non transitory computer usable storage medium having stored therein computer software and or data.

In alternative implementations secondary memory may include other similar means for allowing computer programs or other instructions to be loaded into computer system . Such means may include for example a removable storage unit and an interface . Examples of such means may include a program cartridge and cartridge interface such as that found in video game devices a removable memory chip such as an EPROM or PROM and associated socket and other removable storage units and interfaces which allow software and data to be transferred from the removable storage unit to computer system .

Computer system may also include a communications interface . Communications interface allows software and data to be transferred between computer system and external devices. Communications interface may include a modem a network interface such as an Ethernet card a communications port a PCMCIA slot and card or the like. Software and data transferred via communications interface may be in the form of signals which may be electronic electromagnetic optical or other signals capable of being received by communications interface . These signals may be provided to communications interface via a communications path . Communications path carries signals and may be implemented using wire or cable fiber optics a phone line a cellular phone link an RF link or other communications channels.

In this document the terms computer program medium non transitory computer readable medium and computer usable medium are used to generally refer to media such as removable storage unit removable storage unit and a hard disk installed in hard disk drive . Signals carried over communications path can also embody the logic described herein. Computer program medium and computer usable medium can also refer to memories such as main memory and secondary memory which can be memory semiconductors e.g. DRAMs etc. . These computer program products are means for providing software to computer system .

Computer programs also called computer control logic are stored in main memory and or secondary memory . Computer programs may also be received via communications interface . Such computer programs when executed enable computer system to implement the present invention as discussed herein. In particular the computer programs when executed enable processor device to implement the processes of the present invention such as the stages in the methods illustrated by the flowcharts and of discussed above. Accordingly such computer programs represent controllers of the computer system . Where the invention is implemented using software the software may be stored in a computer program product and loaded into computer system using removable storage drive interface and hard disk drive or communications interface .

Embodiments of the invention also may be directed to computer program products comprising software stored on any computer useable medium. Such software when executed in one or more data processing device causes a data processing device s to operate as described herein. Embodiments of the invention employ any computer useable or readable medium. Examples of computer useable mediums include but are not limited to primary storage devices e.g. any type of random access memory secondary storage devices e.g. hard drives floppy disks CD ROMS ZIP disks tapes magnetic storage devices and optical storage devices MEMS nanotechnological storage device etc. and communication mediums e.g. wired and wireless communications networks local area networks wide area networks intranets etc. .

It is to be appreciated that the Detailed Description section and not the Summary and Abstract sections is intended to be used to interpret the claims. The Summary and Abstract sections may set forth one or more but not all exemplary embodiments of the present invention as contemplated by the inventor s and thus are not intended to limit the present invention and the appended claims in any way.

Embodiments of the present invention have been described above with the aid of functional building blocks illustrating the implementation of specified functions and relationships thereof. The boundaries of these functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternate boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed.

The foregoing description of the specific embodiments will so fully reveal the general nature of the invention that others can by applying knowledge within the skill of the art readily modify and or adapt for various applications such specific embodiments without undue experimentation without departing from the general concept of the present invention. Therefore such adaptations and modifications are intended to be within the meaning and range of equivalents of the disclosed embodiments based on the teaching and guidance presented herein. It is to be understood that the phraseology or terminology herein is for the purpose of description and not of limitation such that the terminology or phraseology of the present specification is to be interpreted by the skilled artisan in light of the teachings and guidance.

Although the invention is illustrated and described herein with reference to specific embodiments the invention is not intended to be limited to the details shown. Rather various modifications may be made in the details within the scope and range equivalents of the claims and without departing from the invention.

