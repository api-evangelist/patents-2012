---

title: Geometrical pattern based application passcode
abstract: To authorize an access to an application, a user interface renders a geometrical pattern on receiving a trigger to access the application. The rendered geometrical pattern includes an instance of an arrangement of one or more first nodes and one or more second nodes. The rendered geometrical pattern is associated with an input type to receive a selection of the first nodes and the second nodes. The selection of the first nodes and the second nodes is received as an authorizing key. The authorizing key is matched with an authorizing passcode stored in memory to provide access to the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08925071&OS=08925071&RS=08925071
owner: Business Objects Software Limited
number: 08925071
owner_city: Dublin
owner_country: IE
publication_date: 20121212
---
Portable electronic devices include customized applications that may be operable to access and store information on them. This information may include personal or enterprise information like electronic mails confidential enterprise data etc. Unauthorized access to such information may be prevented by customizing a password or a passcode to access the applications. Conventional password schemes include presenting on a touch screen generic numeric keypad layouts to enter numeric characters or a static grid of nodes to enter a visual pattern as the password. Therefore conventional password schemes are vulnerable to be hacked. Hence there is a need for a password scheme that is not vulnerable to be hacked.

Embodiments of techniques for systems and methods for geometrical pattern based application passcode generation are described herein. In the following description numerous specific details are set forth to provide a thorough understanding of the embodiments. One skilled in the relevant art will recognize however that the embodiments can be practiced without one or more of the specific details or with other methods components materials etc. In other instances well known structures materials or operations are not shown or described in detail.

Reference throughout this specification to one embodiment this embodiment and similar phrases means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one of the one or more embodiments. Thus the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

A multifunction electronic device MED herein referred to as a mobile device may include a handheld computing device an enterprise digital assistant EDA a personal digital assistant PDA a tablet computer a smartphone an internet appliance and the like. The mobile device includes a memory for e.g. flash memory memory card and the like for storing data and a touch screen to display and enable user interaction. The mobile device can access internet services such as World Wide Web www or electronic mails E mails and exchange information with a general purpose computer by using known wired or wireless technologies for e.g. Bluetooth Wi Fi Universal Serial Bus USB infrared and the like . The mobile device accesses information and data using internet services which is provided for consumption through mobile applications.

Mobile applications herein referred to as app or apps are customized software applications developed to be deployed or installed on the mobile devices. Apps may be developed and distributed through application distribution platforms owned by mobile operating system providers or corporate enterprises to provide access to data on the go. The data accessible through apps may include personal data business or corporate related data including contacts e mails calendar subscriptions to journal and magazine publications and the like. These apps can be configured to download data on the mobile device and stored in memory.

The data stored on the mobile device may include confidential and privileged information. Such confidential and privileged information may need to be provided with access restrictions to prevent unauthorized use. Access restrictions can be provided by configuring the app with an authorizing mechanism. The authorizing mechanism includes configuring the app with an authorizing passcode and storing the authorizing passcode in the memory of the mobile device. On triggering the app the authorizing mechanism provides a user interface UI that renders a geometrical pattern including an instance of arrangement of a plurality of nodes. The nodes may be associated with distinct values. In an embodiment a type of the rendered geometrical pattern is associated with a unique input type to receive a selection of the nodes. The selection of nodes is received as an authorizing key and the access to the app is authorized by matching the authorizing key with the authorizing passcode stored in the memory. In an embodiment this authorizing mechanism is used to lock and or un lock an application a service and a system or a device . The authorizing mechanism may include a process or a program containing a sequence of instructions that are executed by a processor of an associated computer.

In an embodiment the rendered geometrical pattern is associated with an input type to receive a user selection of the first nodes and the second nodes. In an embodiment the input type may include a swipe gesture one or more tap gestures a drag and drop gesture or the like. A drag gesture of the drag and drop gesture includes additional attributes like a direction of movement for example a clockwise direction a counter clockwise direction an angular direction a linear direction or a combination thereof. In an embodiment for each instance of the arrangement each first node is associated with a distinct value for example numeric alphanumeric an alphabet character or the like. Each second node may be configured to include a distinct value or a function and is based on the rendered geometrical pattern. For instance the second nodes may be configured to include a null value or configured as a drop zone or configured to include distinct patterns colors semantically distinct characters or a combination thereof.

In an embodiment based on the corresponding input type the user selection of first nodes and the second nodes is received as an authorizing key. The authorizing key is received and stored in a data structure. The authorizing key is compared with the authorizing passcode to find a correlation between each other. If the authorizing key matches the authorizing passcode the access to the app is authorized and the user is allowed to access the app . If the authorizing key fails to match the authorizing passcode the UI renders the geometrical pattern with another instance of the arrangement of the first nodes and the second nodes.

In an embodiment upon a mismatch between the authorizing key and the authorizing passcode the authorizing mechanism repeats rendering the geometrical pattern with distinct instances of the arrangement of the first nodes and the second nodes for a determined number of times for example three. Upon exceeding the determined number of times of rendering the geometrical pattern for a mismatch the authorizing mechanism may prevent access to the app by locking the app . In another embodiment upon exceeding the determined number of times of rendering the geometrical pattern for the mismatch the authorizing mechanism deletes the data associated with the app from the memory of the mobile device . In another embodiment on receiving the trigger to access the app the UI may render a randomly selected geometrical pattern from the plurality of geometrical patterns. Each geometrical pattern includes a plurality of instances of arrangements of the first nodes and the second nodes.

In an embodiment the input type corresponding to the decagon pattern includes for example a swipe gesture. The swipe gesture enables a user to select the first nodes and the second node without lifting a finger or a stylus not shown in the figure or any such navigation tool not shown in the figure from the touch screen of the mobile device . The selection of the first nodes and the second nodes is received as authorizing key. The authorizing key is then matched with an authorizing passcode stored in the memory of the mobile device . On matching the authorizing key with the authorizing passcode the access to the app is authorized.

In an embodiment the selection of second node enables the user to repeat selection of the first nodes in succession without lifting their finger or the stylus not shown in the figure from the UI . For example consider an authorizing key to be entered by a user includes 5661 . The user selects a first node with value 5 and a first node with value 6 . Since the first node with value 6 repeats in succession the user selects the second node and then selects a first node with value 6 . In this manner the user is able to repeat selecting the first node in succession by selecting the second node in between the successive selections of the first node. The user may further select the first node with value 1 to complete the selection of the first nodes and which is received as the authorizing key. The user selection of the above first nodes are shown in by arrows a b and c. All the above selections of the first and the second nodes are executed by swiping on the touch screen of the mobile device without lifting the navigation tool for e.g. finger stylus not shown in the figure or the like .

In an embodiment the user selection of the first nodes and the second nodes by the swipe gesture creates a visual swipe pattern. The authorizing mechanism interprets the selection of values of the first nodes and the second node as the authorizing key and not the swipe pattern itself. In an embodiment the visual swipe pattern of the selection the first nodes and the second node is dynamic and is based on the instance of the arrangement of the first nodes and the second node for the rendered decagon pattern A on the UI . For example at a first instance the arrangement of the first nodes and respectively represent the values 1 4 7 2 3 5 8 6 9 and 0 as shown in at a second instance the arrangement of the first nodes and respectively represent the values 3 2 5 9 0 7 4 8 6 and 1 as shown in . Hence the swipe pattern for each instance of the arrangement of the first nodes and the second nodes for the rendered geometrical pattern A is distinct and is not vulnerable to be easily interpreted by another user thus making the authorizing mechanism robust.

In an embodiment the input type corresponding to the 3 D hexahedron pattern A includes a swipe gesture. The swipe gesture enables a user to select the first nodes and the second node without lifting a finger or a stylus not shown in the figure or any such navigation tool not shown in the figure from the touch screen of the mobile device . The selection of the first nodes and the second nodes is received as authorizing key. The authorizing key is then matched with an authorizing passcode stored in the memory of the mobile device. On matching the authorizing key with the authorizing passcode the access to the app is authorized.

In an embodiment the selection of second node enables the user to repeat selection of the first nodes in succession without lifting their finger or the stylus not shown in the figure from the UI . For example consider an authorizing key to be entered by a user includes 5543 . The user selects a first node with value 5 and a first node with value 5 . Since the first node with value 5 repeats in succession the user selects the second node and then selects a first node with value 5 . In this manner the user is able to repeat selecting the first node in succession by selecting the second node in between the successive selections of the first node. The user may further select the first node with value 4 and a first node with value 3 to complete the selection of the first nodes and which are received as the authorizing key. The user selection of the above first nodes are shown in by arrows a b and c. All the above selections of the first and the second nodes are executed by swiping on the touch screen of the mobile device without lifting the navigation tool for e.g. finger stylus not shown in the figure or the like .

In an embodiment the drag gesture for the rotary dial pattern A may include a first direction and a second direction of movement along the rotary dial. For instance the drag gesture includes selecting a first node on the UI via the touch screen and dragging the selected first node along the rotary dial A in the first direction for example clockwise direction shown by arrow a and dropping the selected first node at the drop zone . In another embodiment the drag gesture includes selecting the first node on the UI via the touch screen and dragging the selected first node along the rotary dial A in the second direction for example counter clockwise direction shown by arrow b and dropping the first node at the drop zone . In an embodiment upon the user selection of the first node the value of the first node is blurred until the drop gesture is completed. Upon completion of the drop gesture to drop the selected first node the value associated with the first node re appears on the DT .

For example consider the authorizing passcode for an app that is stored in the memory of the mobile device to be 56673 . Each value of the authorizing passcode may be configured with a direction of movement. For example for the authorizing passcode above a first node with value 5 is configured with clockwise direction of movement a first node with value 6 is configured with counter clockwise direction of movement a first node with value 6 is configured with clockwise direction of movement a first node with value 7 is configured with counter clockwise direction of movement and the first node with value 3 is configured with counter clockwise direction of movement. To enter the authorizing key for accessing the app the user selects a first node with value 5 on the UI via a touch screen and drags the selected first node in a clockwise direction along the rotary dial indicated by arrow a and drops the selected first node at the drop zone . Subsequently a first node with value 6 is selected dragged in a counter clockwise direction along the rotary dial indicated by arrow t and dropped at the drop zone a first node with value 6 is selected dragged in a clockwise direction along the rotary dial indicated by arrow a and dropped at the drop zone a first node with the value 7 is selected dragged in a counter clockwise direction along the rotary dial indicated by arrow b and dropped at the drop zone and a first node with value 3 is selected dragged in a counter clockwise direction along the rotary dial indicated by arrow b and dropped at the drop zone . The drag gesture including a combination of the values and the direction of movement of the first nodes and of the drag and drop gesture is received as the authorizing key. The authorizing key is matched with the authorizing passcode stored in the memory. Upon matching the authorizing key with the authorizing passcode access to the app is authorized.

In an embodiment the authorizing key fails to match with the authorizing passcode if there is a mismatch in the direction of movement for selecting the first nodes. For instance in the example above if the first node with value 5 was selected and dragged in the counter clockwise direction indicated by arrow b and dropped at the drop zone the authorization key would mismatch with the authorization passcode. Hence the combination of the value of the first node and the associated direction of movement for selecting the first node is a criterion for matching the authorizing passcode and the authorizing key.

For instance consider the authorizing passcode for an app stored in the memory of the mobile device to be 56673 . To enter the authorizing key to access the app a user selects a first node with value 5 on the UI via the touch screen drags the selected first node and drops it at the drop zone a first node with value 6 is selected dragged and dropped at the drop zone subsequently first nodes with values 6 7 3 are sequentially selected dragged from their current location and dropped at the drop zone . The user selection of the above first nodes are shown in by arrows a b c and d. The drag and drop gesture of the selection of the first nodes and as explained above is received as the authorizing key. The authorizing key is matched by correlating with an authorizing passcode stored in the memory. Upon matching the authorizing key with the authorizing passcode access to the app is authorized. In an embodiment upon the user selection of the first node the value of the first node is blurred until the drop gesture is completed. Upon completion of the drop gesture to drop the selected first node the value associated with the first node re appears on the UI .

For instance consider the authorizing passcode for an app that is stored in the memory of the mobile device to be 56673 . To enter an authorizing key to access the app a user selects the first node with value 5 via a touch screen drags the selected first node and drops it at the drop zone subsequently first nodes with value 6 6 7 and 3 are sequentially selected dragged from their current location and dropped at the drop zone . The user selection of the above first nodes are shown in by arrows a b c and d. The drag and drop gesture of the selection of the first nodes and as explained above is received as the authorizing key. The authorizing key is matched with an authorizing passcode stored in the memory. Upon matching the authorizing key with the authorizing passcode access to the app is authorized. In an embodiment upon the user selection of the first node the value of the first node is blurred until the drop gesture is completed. Upon completion of the drop gesture to drop the selected first node the value associated with the first node re appears on the UI .

For instance consider the authorizing passcode for an app that is stored in the memory of the mobile device is 56673 . To enter the authorizing key to access the app the user pops the bubble corresponding to the second node the popping of the bubble corresponding to the second node indicates the beginning of selection of the first nodes to receive the authorizing key. Subsequently the user selects the first node with value 5 by popping the corresponding bubble. In a similar manner the user selects the first nodes with values 6 6 7 and 3 by popping the corresponding bubbles. The user ends the selection of the first nodes and by popping the bubble corresponding to the second node . The popping of the bubbles corresponding to the first nodes and the second nodes is received as the authorizing key. The authorizing key is matched with an authorizing passcode stored in the memory. Upon matching the authorizing key with the authorizing passcode access to the app is authorized. In an embodiment the user selects the first nodes by popping the corresponding bubble. The popped bubble re appears and floats randomly on the UI . In an embodiment the user can repeat selection of the value of the first nodes by popping the corresponding bubble several times the corresponding bubbles re appear and randomly float on the UI .

Some embodiments may include the above described methods being written as one or more software components. These components and the functionality associated with each may be used by client server distributed or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as functional declarative procedural object oriented lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively the components maybe implemented in server and client applications. Further these components may be linked together via various distributed programming protocols. Some example embodiments may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level e.g. a graphical user interface . These first and second computer systems can be configured in a server client peer to peer or some other configuration. The clients can vary in complexity from mobile and handheld devices to thin clients and on to thick clients or even other servers.

The above illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term computer readable storage medium should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term computer readable storage medium should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store encode or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described represented or illustrated herein. Examples of computer readable storage media include but are not limited to magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROMs DVDs and holographic devices magneto optical media and hardware devices that are specially configured to store and execute such as application specific integrated circuits ASICs programmable logic devices PLDs and ROM and RAM devices. Examples of computer readable instructions include machine code such as produced by a compiler and files containing higher level code that are executed by a computer using an interpreter. For example an embodiment may be implemented using Java C or other object oriented programming language and development tools. Another embodiment may be implemented in hard wired circuitry in place of or in combination with machine readable software instructions.

A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases such as relational transactional hierarchical multi dimensional e.g. OLAP object oriented databases and the like. Further data sources include tabular data e.g. spreadsheets delimited text files data tagged with a markup language e.g. XML data transactional data unstructured data e.g. text files screen scrapings hierarchical data e.g. data in a file system XML data files a plurality of reports and any other data source accessible through an established protocol such as Open Data Base Connectivity ODBC produced by an underlying software system e.g. ERP system and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams broadcast data and the like. These data sources can include associated data foundations semantic layers management systems security systems and so on.

In the above description numerous specific details are set forth to provide a thorough understanding of embodiments. One skilled in the relevant art will recognize however that the embodiments can be practiced without one or more of the specific details or with other methods components techniques etc. In other instances well known operations or structures are not shown or described in detail.

Although the processes illustrated and described herein include series of steps it will be appreciated that the different embodiments are not limited by the illustrated ordering of steps as some steps may occur in different orders some concurrently with other steps apart from that shown and described herein. In addition not all illustrated steps may be required to implement a methodology in accordance with the one or more embodiments. Moreover it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.

The above descriptions and illustrations of embodiments including what is described in the Abstract is not intended to be exhaustive or to limit the one or more embodiments to the precise forms disclosed. While specific embodiments of and examples for the one or more embodiments are described herein for illustrative purposes various equivalent modifications are possible within the scope as those skilled in the relevant art will recognize. These modifications can be made in light of the above detailed description. Rather the scope is to be determined by the following claims which are to be interpreted in accordance with established doctrines of claim construction.

