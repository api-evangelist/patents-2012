---

title: System, method, and computer-readable medium for automatic query and order processing via the internet
abstract: A system, method, and computer readable medium for facilitating user interaction with numerous product suppliers to determine which supplier to utilize for ordering a product based on various parameters are provided. A user may interact with one or more suppliers using similar or different parameters for each supplier within the same application without having to switch to another external application. Results are provided in a visually appealing and logical manner and automate the ordering of an item if that item is found at a particular supplier within predefined thresholds specified by the user. In this manner, orders may be submitted at the moment order thresholds are met, and decisions may be made automatically by one or more of the system, the user, or on an interaction by the user and another individual.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08655745&OS=08655745&RS=08655745
owner: Open Invention Network, LLC
number: 08655745
owner_city: Durham
owner_country: US
publication_date: 20121001
---
This application is a continuation of U.S. application Ser. No. 12 505 109 filed Jul. 17 2009 entitled SYSTEM METHOD AND COMPUTER READABLE MEDIUM FOR AUTOMATIC QUERY AND ORDER PROCESSING VIA THE INTERNET now issued U.S. Pat. No. 8 280 780 issued on Oct. 2 2012 which is incorporated herein in its entirety.

The present invention is generally related to network technologies and more particularly to mechanisms for processing product orders via network systems.

Various contemporary mechanisms exist that allow users to connect with companies via the Internet. For example U.S. Pat. No. 6 125 391 to Meltzer et al. describes a system that allows businesses to connect with potential customers. In the described system XML based documents or schemas describe how two or more entities such as a manufacturer and a supplier communicate to initiate and conclude certain transactions for goods and or services. A Business Information Document BID provides a common format that describes how the parties will communicate. Each of the entities interested in communicating via the Internet must adhere to the BID to ensure compliance with a process that must be agreed to ahead of time.

Microsoft Corporation has made significant investments for many years on business to business e commerce applications. For example Microsoft has defined an Application Integration Framework AIF that defines how data is exchanged. Also in a related field Microsoft has produced systems and methods for the design of electronic forms that pertain to visual elements and the creation of hierarchical schemas in creation of forms. However no current applications exist that pertain to the interaction of remote websites and an application that is able to process data that has been entered into a form.

Various other patents patent applications and white papers relating to buyers and sellers and communications therebetween exist. For example U.S. Pat. No. 6 976 006 to Verma et al. describes a method and apparatus designed to facilitate price comparison via a buyer and that is presented to the buyer via the World Wide Web. U.S. Pat. No. 5 592 375 to Salmon et al. describes a computer implemented system of displaying products to potential sellers via the World Wide Web thereby allowing the user to select and review the product description. U.S. Patent Application Publication No. 2007 0130044 to Rowan et al. describes a system that takes in a buyer s requirements and immediately constructs options specific to the buyer s needs based on broader inputs from any number of sellers. Any of these options can then be purchased immediately.

While these documents address connecting buyers with sellers none of the cited references address communications between a buyer and seller once the seller has sent responses to the buyer or address a process whereby a user can enter values and wherein an item can be automatically ordered if the results from the seller fall within the values.

The present invention provides a system method and computer readable medium that provide mechanisms to enable a user to interact with numerous product suppliers to determine which supplier to utilize for ordering a product based on various parameters and in situations where product query results are incomplete. A user may interact with one or more suppliers using similar or different parameters for each supplier within the same application without having to switch to another external application. Results are provided in a visually appealing and logical manner and automate the ordering of an item if that item is found at a particular supplier within predefined thresholds specified by the user. In this manner orders may be submitted at the moment order thresholds are met and decisions may be made automatically by one or more of the system the user or on an interaction by the user and another individual.

In one embodiment of the disclosure a method of processing product queries in a network system is provided. The method includes providing a graphical user interface at a client data processing system entering by a user of the client data processing system parameters associated with a product desired to be ordered by the user in the graphical user interface issuing by the client data processing system a query to a plurality of data processing systems of respective product suppliers wherein the query is derived from the parameters entered by the user receiving by the client data processing system results of the query issued by the plurality of supplier data processing systems and organizing by the client data processing system the results according to results satisfying the parameters.

In a further embodiment of the disclosure a computer readable medium having computer executable instructions for execution by a processing system the computer executable instructions for processing product queries in a network system is provided. The instructions when executed by the processing system cause the processing system to provide a graphical user interface at a client data processing system receive parameters associated with a product desired to be ordered by a user in the graphical user interface wherein at least one or more of the parameters includes a respective equality condition associated therewith issue by the client data processing system a query to a plurality of data processing systems of respective product suppliers wherein the query is derived from the parameters receive by the client data processing system results of the query issued by the plurality of supplier data processing systems and organize by the client data processing system the results according to results satisfying the parameters.

In a further embodiment of the disclosure a system for processing product queries is provided. The system includes a network system a client data processing system communicatively coupled with the network system and a plurality of product supplier data processing system communicatively coupled with the network system. The client data processing system provides a graphical user interface for entry of parameters associated with a product desired to be ordered wherein at least one or more of the parameters includes a respective equality condition associated therewith. The client data processing system issues a query to the plurality of product supplier data processing systems that is derived from the parameters entered receives results of the query issued by the plurality of supplier data processing systems and organizes the results according to results satisfying the parameters.

It is to be understood that the following disclosure provides many different embodiments or examples for implementing different features of various embodiments. Specific examples of components and arrangements are described below to simplify the present disclosure. These are of course merely examples and are not intended to be limiting.

Various developments have been made on business to business e commerce applications. An Application Integration Framework AIF has been introduced that defines how data is exchanged and formatted in XML. The AIF provides a format for exchanging data both internally within an organization as well as externally with other entities. To facilitate integration with external systems it has been recommended to utilize a Web Service. AIF includes support for Windows Communication Foundation WCF Web services that allow Microsoft Dynamics AX to exchange data with external systems. Current applications make integration between different entities easier but however do not assist a user in deeper integration once an initial communication has taken place. Further the AIF must be adopted by all participants.

In accordance with disclosed embodiments mechanisms are provided that facilitate querying for specific data from a user s input and processes surrounding the received results. The processes of the disclosed embodiments allow for easy communication with a remote entity to gather more details about missing data in the results or to automatically place an order if one or more results fall within a predetermined range as described more fully hereinbelow.

A client data processing system such as a mobile laptop device a personal desktop computer a cellular device or any other suitable data processing system adapted to communicatively interface with network may be utilized for implementations of disclosed embodiments. Further a server is communicatively interfaced with network . In the event a client data processing system is implemented as a cellular device the client data processing system may be communicatively coupled with network via a cellular network that is interfaced with network . An application implemented in accordance with the disclosed embodiments may be hosted by a data processing system such as server that is interfaced with network .

In accordance with disclosed embodiments a user of a client data processing system may access a supplier data processing system . The supplier data processing system may be implemented as for example a mobile laptop device a personal desktop or server computer or a cellular device . The supplier device is communicatively coupled with the network . If the client data processing system comprises a cellular device the server may be accessed via network or alternatively the cellular network . It should be noted that the client and supplier devices depicted in are exemplary only and are descried only to facilitate an understanding of the disclosed embodiments and any variety of device types may be suitably substituted therefor. For example a PDA an MP3 player a gaming device such as a hand held system or home based system and the like that may also transmit and receive information may be used in accordance with the disclosed embodiments.

In the depicted example network may comprise the Internet and thus comprises a worldwide collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another. To this end network comprises high speed data communication lines between major nodes or host computers comprising thousands of commercial government educational and other computer systems that route data and messages. Of course network also may be implemented as a number of different types of networks such as for example an 808.11x network a wide area network WAN or other suitable network implementation. is intended as an example and not as an architectural limitation for the disclosed embodiments.

Peripheral component interconnect PCI bus bridge connected to I O bus provides an interface to PCI local bus . A number of modems may be connected to PCI local bus . Communications links to client systems may be provided through modem and network adapter connected to PCI local bus through add in connectors.

Additional PCI bus bridges and provide interfaces for additional PCI local buses and from which additional modems or network adapters may be supported. In this manner data processing system allows connections to multiple network computers. A memory mapped graphics adapter and hard disk may also be connected to I O bus as depicted either directly or indirectly.

Those of ordinary skill in the art will appreciate that the hardware depicted in is exemplary only. The depicted example is not meant to imply architectural limitations with respect to the disclosed embodiments.

An operating system runs on processor and is used to coordinate and provide control of various components within data processing system in . The operating system may be a commercially available operating system such as a Windows operating system. Instructions for the operating system and applications or programs are located on storage devices such as hard disk drive and may be loaded into main memory for execution by processor .

Those of ordinary skill in the art will appreciate that the hardware in may vary depending on the implementation. The depicted example is not meant to imply architectural limitations with respect to the disclosed embodiments. For example data processing system also may be a notebook computer or hand held computer in addition to taking the form of a PDA cellular device or other suitable data processing system.

In the depicted example the advanced search window includes a description textbox a details textbox a price textbox a quantity textbox and a shipping textbox although any variety of textboxes may be included in the advanced search window. For example textboxes providing fields pertaining to Discounts Recalls Manufacturing or Operating Instructions and the like may be included. Empty fields are an indication by the user that such information is not important. For example a purchaser may want to understand prices or quantities of various items prior to making a purchase decision. As such those fields may be left empty and all results would be provided to the user in an appropriate format to enable the user to make an informed decision.

The user may select the submit button displayed in the advanced search window. Responsive thereto the advanced search window may close and the contents of the individual textboxes are then used for the different parameters of the outgoing query message. The user may select the clear button displayed in the advanced search window to clear all of the text input fields and may select the cancel button displayed in the advanced search window to close out the search window and return to the previous window of the application.

Once a user submits the query the application generates a query message. The query message is internal to the application and in one embodiment will not be altered by the user. The generated query message will utilize the Web Services that interact with the application according to disclosed embodiments. In another embodiment users may alter the query message using available Web Services that allow the user to call specific objects on the Web Service with parameters and data provided by the user.

Implementations of disclosed embodiments may utilize knowledge of existing Web Services. Web services are based on standard protocols that serve to ensure that any Web service can be accessed by any client program no matter what language the program is written in and no matter what platform the application is running on. Thus for example a client program written in Java may access and use a Web service written in VB.NET and that is deployed on a Windows server just as easily as a Windows program can use a Web service written in Java and running on a Linux Web server. Utilizing Web Services a company may create and deploy on a server a set of services that any client can utilize to connect their client application with the server application. Since the Web Service uses a standard protocol interworking the two separate applications is expedited. The published Web Services of each of the connecting companies will be utilized and interworking will be needed. The details of interworking with Web Services of various companies are known and well documented and thus will not be described in detail herein.

For the purposes of providing an example the Amazon Web Service version 4.0 will be used to describe certain functions. The Amazon Web Service is a widely utilized Web Service to query remote databases and is reflective of the published Web Services available today. In developing the client code to query the Amazon web site various applications may be used that will interwork with the server Application Programming Interface API . As an example Microsoft s Visual Studio.NET is used. Once a new Web application is created a Web reference to Amazon Web Services is added and the address of the Web Services Description Language WSDL for the Amazon service is entered. Utilizing the GUI windows described hereinabove with reference to to receive input from the user the service to query the Amazon database is connected to the submit button e.g. button of or button of of the respective GUI window such that certain actions occur when the button is selected e.g. clicked on or otherwise accessed.

A user supplies various query input data to an application running at the client system step e.g. via data input through one or more GUI windows as depicted in . For example the user may input a query item desired price and a desired quantity. The application that provides the GUI window then formulates a query based on the user input step . The application then submits the generated query to one or more remote sites e.g. vendor servers steps and . The application then awaits a response from the queried servers steps and . The application then builds a response from the results received from the queried vendor servers step . The response is then returned to the client application for display to the user step .

Upon reception of the results from the remote applications the results are sorted and displayed to the user. The results window may include a query pane that displays characteristics of the query e.g. an item description a desired quantity and a desired price . Further a response table displays results of the query. In the illustrative example the results table includes a supplier column an item description column a quantity on hand column a price column and a shipping terms column .

In accordance with an embodiment the results display is provided such that the closest matching results are displayed at the top of the response table . For example if the user searched for a large quantity of a particular item and requires the desired items in a certain amount of time e.g. 5 days the response table displayed to the user may place the closest matching results at the top of the table followed by the results that next matched the query in descending order.

When searching remote inventories the search application may prioritize the order in which an item can be found. For instance the data in the item description column is first searched. If the particular item is found then the application may attempt to match a second criteria for instance the Details data followed then by a third criteria for instance Color . This process may continue to attempt to find as close a match and as many matches as possible.

When returning results from a query the data returned is formatted into the results table which is logically ordered and visually appealing to the user. This allows the user to obtain a quick understanding of the results from the previously submitted query. Each of the columns of the results table in the result window may be sorted. For instance the user may select a heading of an individual column and the selected column may be sorted in ascending order. If the user selects the heading of the column again the results may be displayed in a descending order of the selected column.

Assuming that exact matches will at times not be found the results that most closely match the search string are displayed to the user. For instance if the Item Description and Price are matched but the Quantity on Hand data is not the results table may contain the result with the matched columns and the closest approximation of the quantity available from the inventory for that item.

The sorting is performed through the values sent via the Web Service. For example if the ItemSearch object is used in a Web Service the Sort field of that object can be set to order the sorting of the resulting data returned from the Web Service call.

In accordance with disclosed embodiments there are many possible parameters for sorting results according to what the user is searching for. For example assume the user is searching for video games. Table 2 depicts possible sorting values that may be set for sorting the results of the query. The various sorting options are implemented in accordance with disclosed embodiments to facilitate the display of the results in the order desired by the user.

When processing results from the remote applications there exists a possibility that a field is not present in the result. For example the quantity column may not be present in the result. depicts an exemplary result window for display of query results when a particular query parameter is not returned by a remote application implemented in accordance with disclosed embodiments.

In the depicted example the results from the Central Parts supplier do not have a Quantity on Hand element and results from the Falworth Auto supplier do not include a Shipping Terms element. Request buttons and may be displayed for each of the elements that were not returned in the result. These buttons allow the user to request the missing data from the supplier giving the supplier the opportunity to interact with the user and provide any additional missing information that was not present in the results provided to the user. Although not depicted a Request All button may also be displayed that provides the user with the ability to select one button to request missing data from any number of suppliers.

In accordance with disclosed embodiments upon selection of the Request button the pop up window is displayed that includes a missing element request box that specifies the requested missing element for which the user is making a request e.g. Missing Element Quantity . The pop up window may include various user selectable controls that allow the user to select a mechanism for issuing a request for the missing element. In the illustrative example the user may issue a request for the missing element by email by way of selecting the email button by an instant message by way of selecting the IM button or by a phone call by way of selecting the phone button . Alternatively the user may close the missing element request by selecting the Cancel button . In response to issuing a missing element request a response provided by the remote supplier may be displayed in a window that displays the successful results of the missing element.

In response to selecting the Email button an email is sent to the supplier containing in an embodiment a Customer ID which contains information that identifies the customer such as a customer name a customer account number or other information associated with the customer. Further the email may contain response elements that were obtained from the supplier s database in the original response and a missing element that specifies the missing information that the customer is requesting.

In response to selecting the IM button an IM chat window may be invoked with the supplier thereby allowing the customer to chat with a supplier s representative.

In response to selecting the Phone button a phone number of the supplier may be displayed to the user or if enabled a voice call may be initiated through the current application. Selection of the Cancel button results in closing the Missing Element Request popup window .

Mechanisms of communication may be configured via configuration screens in accordance with disclosed embodiments and the types of communication may be implemented as any of the mechanism described herein or any other suitable communication routines without departing from the scope of the disclosed embodiments. Regardless of the specific communication mechanism chosen for the implementation the data network such as the Internet and or the cellular network may be utilized for transmission of the communication with the external system.

Thus in accordance with disclosed embodiments the query application may configure email IM telephony functionality or other communication mechanisms by incorporating either external third party applications or developing and integrating custom developed software.

Email integration is somewhat less complicated that other communication mechanisms as it is not considered a real time functionality. Email may be integrated by including a form where the To field is automatically determined by the application s setup configuration beforehand and the form is filled out by the user. The email itself may then be submitted by the user selection of a Submit button. As mentioned above any other information may be automatically supplied to the user when creating the email.

IM integration requires open two way communication. At the application s setup configuration the chat ID of the person at the supplier remote end may be configured such that when the IM functionality is invoked by the user of the application the chat program will be invoked with the remote user automatically notified.

Phone integration may be implemented by simply having a phone contact number which was supplied at the application s setup configuration and which is then displayed to the user upon selection of the Phone button . In another embodiment a voice call may be initiated upon selection of the Phone button using for example voice over IP VoIP technology or via the cellular network whereby the called number is determined at the application s setup configuration. Further any of the mechanisms of communication may be implemented sequentially or alternatively asynchronously.

In accordance with another embodiment mechanisms are provided that allow the user to specify automatic product order parameters. These parameters are utilized to automatically place an order at a remote vendor site if a query result falls within bounds of the automatic order parameters.

The product order GUI allows automatic order parameters to be set on a particular supplier and item. The order GUI may be displayed to the user at the application s setup configuration where the user can configure the parameters to enable the item to be automatically ordered if query results of a product search are within the set parameters. The configuration allows the user to setup shipping terms as well as payment options that will be utilized when automatically ordering an item.

The correspondence for the automatic ordering is implemented either by configuration of a particular Web Service or may also be implemented as having an email sent to the ordering department which may be predetermined at the application s setup configuration. If a Web Service is utilized for the automatic ordering the parameters of the order will be determined by the values in the application s setup configuration for the automatic ordering.

The automatic product order GUI includes various controls that facilitate specification of order parameters. In the illustrative example the product order GUI includes a price drop down menu that allows the user to select a price equality constraint e.g. equals less than or greater than that specifies an equality condition for a price entered by the user in an associated price textbox . For example depicts a diagrammatic representation of the product order GUI with the menu items of the price drop down menu displayed responsive to the user selecting the price drop down menu . The product order GUI may additionally include a quantity down menu that allows the user to select a quantity equality constraint e.g. equals less than or greater than that specifies an equality condition for a quantity value entered by the user in an associated quantity textbox . Further the product order GUI may additionally include a shipping drop down menu that allows the user to select a shipping equality constraint e.g. equals less than or greater than that specifies an equality condition for a shipping constraint entered by the user in an associated shipping textbox . A drop down menu may further be associated with the shipping textbox that specifies the time unit e.g. hours days etc. of the shipping constraint entered in the text box . For example depicts a diagrammatic representation of the product order GUI with the menu items of the time unit drop down menu displayed responsive to the user selecting the time unit drop down menu . The GUI may include a Submit button that allows the user to submit the automated product order request specified by the data entered into the GUI and a Cancel button that allows the user to cancel the automated product order request. depicts a diagrammatic representation of the product order GUI after entry of a product price and corresponding price equality constraint a product quantity and corresponding quantity equality constraint and a shipping time and corresponding shipping time equality constraint.

An automatic product order verification popup window may be displayed to the user e.g. upon selection of the Submit button of the product order GUI as depicted by the diagrammatic representation of the verification popup window of . The verification window depicts the product order that will be submitted for ordering. To submit the order summarized in the verification window the user may select the Submit button . Alternatively the user may cancel the order by selecting the Cancel button .

The current invention provides many improvements over contemporary systems and applications by implementing functionality that make Internet commerce easier and more efficient for the user.

The present invention provides a robust method to enable the user or client to interact with numerous suppliers to determine which supplier or suppliers to utilize based on various parameters and in situations where results are incomplete. A user may interact with one or more suppliers using similar or different parameters for each supplier within the same application without having to switch to another external application.

The present invention provides results in a visually appealing and logical manner and automates the ordering of an item if that item is found at a particular supplier within the predefined thresholds setup by the user. In this manner orders may be submitted at the moment the thresholds are met and decisions may be made automatically by one or more of the system the user or based on an interaction by the user and another individual.

The illustrative block diagrams depict process steps or blocks that may represent modules segments or portions of code that include one or more executable instructions for implementing specific logical functions or steps in the process. Although the particular examples illustrate specific process steps or procedures many alternative implementations are possible and may be made by simple design choice. Some process steps may be executed in different order from the specific description herein based on for example considerations of function purpose conformance to standard legacy structure user interface design and the like.

Aspects of the present invention may be implemented in software hardware firmware or a combination thereof. The various elements of the system either individually or in combination may be implemented as a computer program product tangibly embodied in a machine readable storage device for execution by a processing unit. Various steps of embodiments of the invention may be performed by a computer processor executing a program tangibly embodied on a computer readable medium to perform functions by operating on input and generating output. The computer readable medium may be for example a memory a transportable medium such as a compact disk a floppy disk or a diskette such that a computer program embodying the aspects of the present invention can be loaded onto a computer. The computer program is not limited to any particular embodiment and may for example be implemented in an operating system application program foreground or background process driver network stack or any combination thereof executing on a single processor or multiple processors. Additionally various steps of embodiments of the invention may provide one or more data structures generated produced received or otherwise implemented on a computer readable medium such as a memory.

Although embodiments of the present invention have been illustrated in the accompanied drawings and described in the foregoing description it will be understood that the invention is not limited to the embodiments disclosed but is capable of numerous rearrangements modifications and substitutions without departing from the spirit of the invention as set forth and defined by the following claims. For example the capabilities of the invention can be performed fully and or partially by one or more of the blocks modules processors or memories. Also these capabilities may be performed in the current manner or in a distributed manner and on or via any device able to provide and or receive information. Further although depicted in a particular manner various modules or blocks may be repositioned without departing from the scope of the current invention. Still further although depicted in a particular manner a greater or lesser number of modules and connections can be utilized with the present invention in order to accomplish the present invention to provide additional known features to the present invention and or to make the present invention more efficient. Also the information sent between various modules can be sent between the modules via at least one of a data network the Internet an Internet Protocol network a wireless source and a wired source and via plurality of protocols.

