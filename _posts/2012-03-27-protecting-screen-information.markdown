---

title: Protecting screen information
abstract: A method, computer program product, and system for protection screen information is described. A method may comprise determining, via a computing device, if there is a screen protection rule, the screen protection rule based upon, at least in part, at least one of an application rule for protecting a portion of a screen region, and a process rule for protecting the portion of the screen region. The method may further comprise modifying, via the computing device, the portion of the screen region based upon, at least in part, at least one of the application rule, and the process rule.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08836722&OS=08836722&RS=08836722
owner: International Business Machines Corporation
number: 08836722
owner_city: Armonk
owner_country: US
publication_date: 20120327
---
The subject application is a continuation application of U.S. patent application with Ser. No. 12 982 567 filed 30 Dec. 2010 the entire content of which is herein incorporated by reference.

Information on a computer screen may be visible if left unprotected. Some of this information may not be public. Further when making a screenshot of the computer screen information that is not public may be included in the screenshot. Some of this information may include bookmarks open tabs in a web browser and confidential information in an email. Users may take a screenshot and edit it to remove non public information prior to making the screenshot available.

In a first embodiment a method may include determining via a computing device if there is a screen protection rule the screen protection rule based upon at least in part at least one of an application rule for protecting a portion of a screen region and a process rule for protecting the portion of the screen region. The method may further include modifying via the computing device the portion of the screen region based upon at least in part at least one of the application rule and the process rule.

One or more of the following features may be included. The method may include determining if the screen region is visible. At least one of the determining if there is a screen protection rule and the modifying the portion of the screen region may be performed in response to a request for a screenshot. Modifying the portion of the screen region may include regenerating the screen region based upon at least in part the application rule. Modifying the portion of the screen region may further include sending a request to an application based upon at least in part the process rule.

In some implementations modifying the portion of the screen region may include obfuscating the portion of the screen region based upon at least in part the process rule. Modifying the portion of the screen region may further include removing an object from the screen region. The method may further include defining at least one of the application rule and the process rule. The screen region may include a window. Modifying the portion of the screen region may also include minimizing the window.

In a second embodiment a computer program product may reside on a computer readable storage medium and may have a plurality of instructions stored on it. When executed by a processor the instructions may cause the processor to perform operations including determining if there is a screen protection rule the screen protection rule based upon at least in part at least one of an application rule for protecting a portion of a screen region and a process rule for protecting the portion of the screen region. The operations may further include modifying the portion of the screen region based upon at least in part at least one of the application rule and the process rule.

One or more of the following features may be included. The operations may include determining if the screen region is visible. At least one of the determining if there is a screen protection rule and the modifying the portion of the screen region may be performed in response to a request for a screenshot. Modifying the portion of the screen region may include regenerating the screen region based upon at least in part the application rule. Modifying the portion of the screen region may further include sending a request to an application based upon at least in part the process rule.

In some implementations modifying the portion of the screen region may include obfuscating the portion of the screen region based upon at least in part the process rule. Modifying the portion of the screen region may further include removing an object from the screen region. The operations may further include defining at least one of the application rule and the process rule. The screen region may include a window. Modifying the portion of the screen region may also include minimizing the window.

In a third embodiment a computing system is provided. The computing system may include at least one processor and at least one memory architecture coupled with the at least one processor. The computing system may also include a first software module executed on the at least one processor and the at least one memory architecture wherein the first software module is configured to determine if there is a screen protection rule the screen protection rule based upon at least in part at least one of an application rule for protecting a portion of a screen region and a process rule for protecting the portion of the screen region. Further the computing system may include a second software module configured to modify the portion of the screen region based upon at least in part at least one of the application rule and the process rule.

One or more of the following features may be included. The computing system may also include a third software module configured to determine if the screen region is visible. At least one of the first software module configured to determine if there is a screen protection rule and the second software module configured to modify the portion of the screen region may be configured to be executed in response to a request for a screenshot. The computing system may additionally include a fourth software module that may be configured to regenerate the screen region based upon at least in part the application rule. The second software module which may be configured to modify the portion of the screen region may be further configured to send a request to an application based upon at least in part the process rule.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features and advantages will become apparent from the description the drawings and the claims.

Referring to there is shown a screen information protection process . As will be discussed below screen information protection process may determine if there is a screen protection rule. The screen protection rule may be based upon at least in part at least one of an application rule for protecting a portion of a screen region and a process rule for protecting the portion of the screen region. Screen information protection process may also modify the portion of the screen region based upon at least in part at least one of the application rule and the process rule.

The screen information protection SIP process may be a server side process e.g. server side SIP process a client side process e.g. client side SIP process client side SIP process client side SIP process or client side SIP process or a hybrid server side client side process e.g. the combination of server side SIP process and one or more of client side SIP processes .

Server side SIP process may reside on and may be executed by server computer which may be connected to network e.g. the Internet or a local area network . Examples of server computer may include but are not limited to a personal computer a server computer a series of server computers a mini computer and or a mainframe computer. Server computer may be a web server or a series of servers running a network operating system examples of which may include but are not limited to Microsoft Windows Server Novell Netware or Red Hat Linux for example.

The instruction sets and subroutines of server side SIP process which may be stored on storage device coupled to server computer may be executed by one or more processors not shown and one or more memory architectures not shown incorporated into server computer . Storage device may include but is not limited to a hard disk drive a tape drive an optical drive a RAID array a random access memory RAM and a read only memory ROM .

Server computer may execute a web server application examples of which may include but are not limited to Microsoft IIS Novell Web Server or Apache Web Server that allows for access to server computer via network using one or more protocols examples of which may include but are not limited to HTTP i.e. HyperText Transfer Protocol SIP i.e. session initiation protocol and the Lotus Sametime VP protocol. Network may be connected to one or more secondary networks e.g. network examples of which may include but are not limited to a local area network a wide area network or an intranet for example.

Client side SIP processes may reside on and may be executed by client electronic devices and or respectively examples of which may include but are not limited to personal computer laptop computer a data enabled mobile telephone notebook computer personal digital assistant not shown smart phone not shown and a dedicated network device not shown for example. Client electronic devices may each be coupled to network and or network and may each execute an operating system examples of which may include but are not limited to Microsoft Windows Microsoft Windows CEO Red Hat Linux or a custom operating system.

The instruction sets and subroutines of client side SIP processes which may be stored on storage devices respectively coupled to client electronic devices respectively may be executed by one or more processors not shown and one or more memory architectures not shown incorporated into client electronic devices respectively . Storage devices may include but are not limited to hard disk drives tape drives optical drives RAID arrays random access memories RAM read only memories ROM compact flash CF storage devices secure digital SD storage devices and memory stick storage devices.

Client side SIP processes and or server side SIP process may be processes that run within i.e. are part of an operating system such as for example Microsoft Windows . Alternatively client side SIP processes and or server side SIP process may be stand alone applications that work in conjunction with the operating system. One or more of client side SIP processes and server side SIP process may interface with each other via network and or network .

Users may access server side SIP process directly through the device on which the client side SIP process e.g. client side SIP processes is executed namely client electronic devices for example. Users may access server side SIP process directly through network and or through secondary network . Further server computer i.e. the computer that executes server side SIP process may be connected to network through secondary network as illustrated with phantom link line .

The various client electronic devices may be directly or indirectly coupled to network or network . For example personal computer is shown directly coupled to network via a hardwired network connection. Further notebook computer is shown directly coupled to network via a hardwired network connection. Laptop computer is shown wirelessly coupled to network via wireless communication channel established between laptop computer and wireless access point i.e. WAP which is shown directly coupled to network . WAP may be for example an IEEE 802.11a 802.11b 802.11g 802.11n Wi Fi and or Bluetooth device that is capable of establishing wireless communication channel between laptop computer and WAP . Data enabled mobile telephone is shown wirelessly coupled to network via wireless communication channel established between data enabled mobile telephone and cellular network bridge which is shown directly coupled to network .

As is known in the art all of the IEEE 802.11x specifications may use Ethernet protocol and carrier sense multiple access with collision avoidance i.e. CSMA CA for path sharing. The various 802.11x specifications may use phase shift keying i.e. PSK modulation or complementary code keying i.e. CCK modulation for example. As is known in the art Bluetooth is a telecommunications industry specification that allows e.g. mobile phones computers and personal digital assistants to be interconnected using a short range wireless connection.

For the following discussion server side SIP process will be described for illustrative purposes. It should be noted that a client side SIP process e.g. one or more of client side SIP process may be incorporated into server side SIP process and may be executed within one or more applications that allow for communication with a client side SIP process e.g. client side SIP process . However this is not intended to be a limitation of this disclosure as other configurations are possible e.g. stand alone client side SIP processes and or stand alone server side SIP processes. For example some implementations may include one or more of client side SIP processes in place of or in addition to client side SIP process .

Referring now to a user e.g. one or more of users may desire to protect information and or data on a computer screen e.g. computer screen which may be associated with a client electronic device e.g. one or more of client electronic devices . For example user may wish to obfuscate the information and or data so that an individual may not be able to view the information and or data when near computer screen . The term obfuscate as used herein may refer to blurring blotching masking or otherwise blocking the information and or data from being viewed. Obfuscating may be accomplished by covering the information and or data with solid rectangles e.g. black rectangles to prevent the information and or data from being viewed.

In another example user may wish to obfuscate the information and or data in order to provide a screenshot of computer screen . In other words there may be non public information on computer screen that a user e.g. user and or user may wish to prevent other people from seeing either physically on computer screen or via a screenshot of computer screen . Users and or may wish to protect one or more of a desktop an email message a bookmark a web browser tab an image a spreadsheet a document and or text that may appear on computer screen when physically visible to others or when visible via a screenshot.

Referring now to SIP process may determine if there is a screen protection rule e.g. process rule and or application rule . The screen protection rule may be based upon at least in part at least one of an application rule e.g. application rule for protecting a portion e.g. portion of a screen region e.g. screen region and a process rule e.g. process rule for protecting the portion e.g. portion and or of the screen region e.g. screen region . Portions and or may be for example tabs on a web browser viewed on a computer screen e.g. computer screen . The screen region e.g. screen region may be a window. For example screen region may be a window associated with the web browser. SIP process may further modify the portion e.g. portions and or of the screen region e.g. screen region based upon at least in part at least one of the application rule e.g. application rule and the process rule e.g. process rule . The modifying may be done at an operating system level an application level or by communicating with one or more applications. An application rule e.g. application rule may be supported by an application running on a client electronic device e.g. one or more of client electronics devices and that may interface with computer screen . A process rule e.g. process rule may be supported by an operating system application running on a client electronic device e.g. one or more of client electronics devices and that may interface with computer screen .

At least one of the determining if there is a screen protection rule e.g. process rule and or application rule and the modifying the portion e.g. portions and or of the screen region e.g. screen region may be performed in response to a request for a screenshot. For example user may utilize a print screen function available on an operating system that may allow user to take a screenshot image of computer screen . Alternatively at least one of the determining if there is a screen protection rule e.g. process rule and or application rule and the modifying the portion e.g. portions and or of the screen region e.g. screen region may be performed in response to a request by user to protect information on computer screen . For example user may be a manager and may wish to show computer screen to an employee but may not want protected information to be displayed to the employee. User may invoke a program keystroke and or hotkey in order to initiate SIP process in connection with computer screen to protect information on computer screen from being viewed by the employee.

SIP process may determine if one or more screen regions e.g. one or more of screen regions and are visible via computer screen . One or more of screen regions and may be windows. For example and as discussed above screen region may be a window associated with a web browser. Screen region may be a window associated with a picture and fax viewing application. Screen region may be a window associated with a spreadsheet application. Screen region may be a window associated with an email application and may be for example an email message. While various screen regions of computer screen are discussed herein as being windows this is for exemplary purposes only as a screen region may be any region of computer screen . For example screen region may be a visible desktop region and screen region may be a visible taskbar region.

In an implementation in response to a request for a screenshot SIP process may determine a location and or size of each screen region e.g. window in the illustrated example that may be part of the screenshot. SIP process may do so by retrieving a list of all windows their locations and or sizes as well as their z order on the computer screen. SIP process may use this information to determine which portions and or screen regions of which applications are exposed on the screenshot.

For example assume for illustrative purposes that SIP process determines that screen region e.g. an email message window is visible via computer screen . Referring now to SIP process determine e.g. by querying database if there is a screen protection rule e.g. process rule and or application rule corresponding to an email application associated with screen region . SIP process may match an application s process name path message digest algorithm and or other information with that of an application in database . If an application matches one or more rules for that application may be used. Database may include a number of application rules and or process rules which may be used in connection with SIP process to protect screen information.

SIP process may find process rule in database corresponding to the email application which may be to minimize the email message window e.g. screen region . Referring now SIP process may modify the email message window e.g. screen region by minimizing the email message window i.e. screen region . As shown in the email message window e.g. screen region may be minimized in response to a request by user for a screenshot. SIP process may minimize the email message window e.g. screen region via an application programming interface API a SendMessage command and or an X mechanism that may be associated with the application and or operating system.

In an implementation one or more tags may exist in an application and may designate what information is private and or public. Further an element and or object in an application may have an attribute set that may designate the element and or object as private and or public e.g. with respect to SIP process . SIP process may also use pattern matching in connection with an application rule to obfuscate any information text and or other data that matches a certain pattern. For example social security numbers may have a fixed number of digits e.g. nine digits and may take the form of . Further telephone numbers may have a fixed number of digits e.g. ten digits and may take the form of . SIP process may be configured to match such patterns visible on computer screen and obfuscate corresponding information text and or other data that matches such patterns. For example SIP process may determine the bounding box of a matched string e.g. x digit number and or a text area object and then obfuscate the string and or text area object via black rectangles.

Assume for illustrative purposes that SIP process may determine that screen region e.g. a web browser window is visible via computer screen . Referring now to SIP process may determine e.g. by querying database if there is a screen protection rule e.g. process rule and or application rule corresponding to a web browser application associated with the web browser window e.g. screen region . SIP process may find application rule corresponding to the web browser application which may be to regenerate the web browser window e.g. screen region without one or more bookmarks e.g. one or more of portions of screen region being visible. Further SIP process may also find one more of application rule and or process rule which may correspond to the web browser application. Application rule may be to regenerate the web browser window e.g. screen region without one or more web browser tabs e.g. one or more of portions and of screen region being visible. Process rule may be to obfuscate one or more images e.g. portion of screen region visible in the web browser window i.e. screen region .

Referring now to SIP process may modify the web browser window e.g. screen region by regenerating the web browser window e.g. screen region based upon at least in part application rule . As shown in the web browser window e.g. screen region may be regenerated in response to a request by user for a screenshot without one or more bookmarks e.g. one or more of portions of screen region being visible. SIP process may regenerate the web browser window e.g. screen region via an API a SendMessage command and or an X mechanism that may be associated with the application and or operating system.

Continuing with the above example SIP process may modify the web browser window e.g. screen region by regenerating the web browser window e.g. screen region based upon at least in part application rule . As shown in the web browser window e.g. screen region may be regenerated in response to a request by user for a screenshot without web browser tabs e.g. one or more of portions and being visible. SIP process may regenerate the web browser window e.g. screen region via an API a SendMessage command and or an X mechanism that may be associated with the application and or operating system.

Further SIP process may modify the web browser window e.g. screen region by obfuscating one or more images e.g. portion of screen region visible in the web browser window e.g. screen region based upon at least in part process rule . As shown in portion of screen region e.g. an image may be obfuscated in response to a request by user for a screenshot such that portion of screen region e.g. an image is not visible via computer screen . SIP process may obfuscate portion of screen region e.g. an image by determining a bounding box of portion within the web browser window e.g. screen region .

Assume further for exemplary purposes only that SIP process determines that screen region e.g. a spreadsheet is visible via computer screen . Referring now to SIP process may determine e.g. by querying database if there is a screen protection rule e.g. process rule and or application rule corresponding to a spreadsheet application associated with screen region . SIP process may find process rule corresponding to the spreadsheet application which may be to remove an object e.g. portion of screen region e.g. the spreadsheet . Further SIP process may modify the spreadsheet e.g. screen region by removing one or more objects e.g. portion of screen region visible in the spreadsheet e.g. screen region based upon at least in part process rule . As shown in portion of screen region e.g. an image may be removed in response to a request by user for a screenshot. SIP process may send a request to the spreadsheet application associated with the spreadsheet e.g. screen region based upon at least in part process rule . The request may be sent via a SendMessage and or X mechanism and may be to remove one or more visible objects e.g. portion from the spreadsheet e.g. screen region .

SIP process may further determine that screen region e.g. a picture and fax viewer is visible via computer screen . Referring now to SIP process may determine e.g. by querying database if there is a screen protection rule e.g. process rule and or application rule corresponding to a picture and fax viewing application associated with screen region . SIP process may find process rule corresponding to the picture and fax viewing application which may be to obfuscate an image name e.g. portion of screen region with a bounding box. As shown in portion of screen region may be obfuscated in response to a request by user for a screenshot. SIP process may send a request to the picture and fax viewing application associated with screen region based upon at least in part process rule . The request may be sent via a SendMessage and or X mechanism and may be to obfuscate the image name e.g. portion of screen region with a bounding box. For example SIP process may obfuscate a portion of a screen region by introspecting elements at an operating system level e.g. by enumerating top level and non top level windows by class name and or text or by using predefined regions such as rectangles to mask the portion.

In an implementation SIP process may determine that screen region e.g. a desktop is visible via computer screen . Referring now to SIP process may determine e.g. by querying database if there is a screen protection rule e.g. process rule and or application rule corresponding to a desktop associated with screen region . SIP process may find process rule corresponding to the desktop which may be to obfuscate the visible desktop e.g. portions and or of screen region . Portion and or portion of screen region may be one or more desktop icons. As shown in screen region including one or more of portions and or may be obfuscated in response to a request by user for a screenshot. SIP process may calculate the visible desktop region using for example intersecting elements of the one or more screen regions on computer screen based upon at least in part process rule .

Similarly in an implementation SIP process may determine that screen region e.g. a task bar is visible via computer screen . Referring now to SIP process may determine e.g. by querying database if there is a screen protection rule e.g. process rule and or application rule corresponding to a task bar associated with screen region . SIP process may find process rule corresponding to the task bar which may be to obfuscate the visible task bar. As shown in screen region may be obfuscated in response to a request by user for a screenshot. SIP process may calculate the visible task bar region using for example intersecting elements of the one or more screen regions on computer screen based upon at least in part process rule . In an implementation SIP process may be configured to crop out the obfuscated portion e.g. the obfuscated task bar in to ensure a size optimal screenshot. For example the obfuscated e.g. blacked out portions of computer screen as shown around the edges of may be removed in order to allow the visible screen regions remaining on computer screen to optimally fit in the screenshot.

Once SIP process has enforced any screen protection rules related to content visible on computer screen may represent the one or more visible screen regions remaining on computer screen . A request for a screenshot by e.g. user may result in a screenshot image including the visible screen regions shown in . After the screenshot image is grabbed user may have an opportunity to override any of the screen protection rules that may have been enforced on computer screen by SIP process . Assume for example that user wishes for portion of screen region e.g. an image that was obfuscated under process rule to be visible in the screenshot of computer screen . As shown in SIP process may override process rule and restore portion of screen region in response to a request from user . Further SIP process may allow user to make additional modifications such as blurring and or removing contents watermarking etc. Also once the screenshot image is grabbed the original status of all the visible screen regions may be returned such that computer screen is fully visible as shown in .

In an implementation SIP process may define at least one of the application rule e.g. application rule and the process rule e.g. process rule . User may create one or more rules in database corresponding to various modifications that may be desired when taking screenshots. Further SIP process may learn one or more elements that are commonly obfuscated and may define rules for obfuscating those elements. For example SIP process may learn that open tabs in a web browser should be blurred when taking a screenshot based upon at least in part one or more rules previously defined in database .

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system apparatus method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer i.e. a client electronic device partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server i.e. a server computer . In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention may be described with reference to flowchart illustrations and or block diagrams of methods apparatus systems and or computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the figures may illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. Further one or more blocks shown in the block diagrams and or flowchart illustration may not be performed in some implementations or may not be required in some implementations. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

A number of embodiments and implementations have been described. Nevertheless it will be understood that various modifications may be made. Accordingly other embodiments and implementations are within the scope of the following claims.

