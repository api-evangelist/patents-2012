---

title: Method and apparatus to develop an application of an image forming apparatus
abstract: A solution providing tools for developing an application of an image forming apparatus is stored in the image forming apparatus, and functions of the image forming apparatus are displayed according to execution of the solution. An application corresponding to input information of a user is generated by combining functions of the image forming apparatus based on the input information of the user and is stored in the image forming apparatus.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09632767&OS=09632767&RS=09632767
owner: SAMSUNG ELECTRONICS CO., LTD.
number: 09632767
owner_city: Suwon-si
owner_country: KR
publication_date: 20120531
---
This application claims the benefit of Korean Patent Application No. 10 2011 0054137 filed on Jun. 3 2011 in the Korean Intellectual Property Office the disclosure of which is incorporated herein in its entirety by reference.

The present general inventive concept relates to a method and apparatus to develop an application of an image forming apparatus.

Recently the popularization of smart phones in which a cellular phone function and a computer function are combined has increased focus on application development with respect to smart phones. In particular to encourage the application development most smart phone manufacturers and vendors employ an open architecture in which an internal structure e.g. an application programming interface API of each type of smart phone is open to the public. The successful progress of such a smart phone application development policy encourages application development on smart televisions TVs similar to the smart phones even in a TV field. However application development in an image forming apparatus field such as printers needs more research.

The present general inventive concept provides a method and apparatus to develop an application of an image forming apparatus whereby an environment in which general users who lack computer knowledge can easily develop the application without having to perform an upload or download process of the application. The present general inventive concept also provides a recording medium to implement the apparatus to develop an application. The present general inventive concept is not limited to the technical aspects and other technical aspects may be deduced from the contents of the specification.

Additional features and utilities of the present general inventive concept will be set forth in part in the description which follows and in part will be obvious from the description or may be learned by practice of the general inventive concept.

According to the present general inventive concept there is provided a method of developing an application of an image forming apparatus the method including executing a solution that is stored in the image forming apparatus the solution providing tools for developing the application of the image forming apparatus displaying functions of the image forming apparatus according to the execution of the solution generating an application corresponding to input information of a user by combining the functions based on the input information and storing the generated application in the image forming apparatus.

The present general inventive concept also provides an image forming apparatus including hardware elements having a plurality of functions including at least an image forming function a storage for storing a solution the solution providing tools for developing an application of the image forming apparatus and at least one application developed by using the solution and a processor for controlling operations of the hardware elements according to the application by executing the application stored in the storage wherein the application is generated from combining the functions of the image forming apparatus displayed according to the execution of the solution.

The present general inventive concept also provides a recording medium of an image forming apparatus on which data blocks in a hierarchical structure are recorded the data blocks including a firmware block corresponding to firmware including native functions of the image forming apparatus a wrapper block corresponding to a set of wrapper functions connecting the native functions to application programming interface API functions of the image forming apparatus an API block corresponding to a set of the API functions of the image forming apparatus and a solution block corresponding to a solution providing tools for developing an application of the image forming apparatus.

The foregoing and or other aspects and utilities of the present general inventive concept may also be achieved by providing a method of developing an application of an image forming apparatus the method including executing a solution stored in the image forming apparatus the solution providing tools to develop an application of the image forming apparatus displaying functions of the image forming apparatus combining functions in accordance with information input by a user and generating an application in accordance with the input information.

The method may further comprise setting an environment of the image forming apparatus required to develop an application by securing a memory space of a storage of the image forming apparatus and storing the generated application in the storage.

The foregoing and or other aspects and utilities of the present general inventive concept may also be achieved by providing an image forming apparatus including hardware elements including functions of an image forming apparatus a storage to store a solution the solution providing tools to develop an application and a processor to control operations of the hardware elements according to the solution stored in the storage an application being generated by combining functions arranged in accordance with information input by a user the generated application being stored in the storage.

The tools may be described with binary codes executable in an operating system of a host and the solution being executed by any one of the host or the image forming apparatus.

Reference will now be made in detail to the embodiments of the present general inventive concept examples of which are illustrated in the accompanying drawings wherein like reference numerals refer to the like elements throughout. The embodiments are described below in order to explain the present general inventive concept while referring to the figures.

In particular as an example of an image forming apparatus disclosed in the claims a printer having a print function for forming a physical image on paper and a scan function for detecting an image recorded on paper will be described as an embodiment of the present general inventive concept. However the printer may represent a multifunctional peripheral MFP . In addition the image forming apparatus disclosed in the claims may be applied to other types of image forming apparatuses besides the printer described below.

Since the printer has to basically perform a function of printing content such as text and images transmitted from the host the printer and the host are almost always connected to each other in a wired or wireless manner. Thus the host can more easily access the printer than other electronic devices such as a smart phone or a TV. The easy access to the printer can provide an excellent environment required to develop an application of the printer in the host .

Meanwhile in a case of embedded systems such as smart phones to encourage application development hardware manufacturers and vendors employ an open architecture in which application programming interfaces APIs are opened to the public. In general the application development is performed not in the embedded systems but in PCs supporting hardware performance required for the application development. To develop an application of smart phones in a PC a cross compiler for translating the application into a binary file consisting of codes executable in the smart phones and an emulator for virtually executing the application in the PC have to be installed in the PC. Such an application developed in a PC is uploaded to an online application store. A user downloads the uploaded application to a smart phone of the user and uses the downloaded application.

As described above in a conventional application development environment an application developer has to install and use programs such as a cross compiler and an emulator in a PC and this is an obstacle when most people who lack computer knowledge develop an application. In addition the process of uploading an application to an online application store or downloading an application from the online application store requires a process of connecting the PC or a smart phone to a universal serial bus USB or a network resulting in inconvenience to users. In particular for general users who lack computer knowledge when certain requirements arise in an embedded system such as a smart phone they have to wait for firmware updating or application launching to satisfy the requirements.

In the embodiments described below by using easy access to the printer an environment in which general users who lack computer knowledge may be provided in which the general users can easily develop an application by using graphic tools on a screen of a PC without having to install programs such as a cross compiler and an emulator in the PC. Accordingly user requirements of the printer can be immediately satisfied. In addition in the embodiments described below user inconvenience can be minimized by removing the processes of uploading an application to an online application store and downloading an application from the online application store.

The processor controls operations of hardware elements of the printer according to an application stored in the storage by executing the application. In more detail the processor controls operations of the hardware elements e.g. the storage the communication unit the printing unit the scanning unit and the UI panel of the printer according to instructions of the application by executing the instructions of the application based on firmware such as an operating system OS and a device driver of the printer . Accordingly the application may perform a certain function of the printer . In the current embodiment the term execution indicates that the processor carries out instructions of an application and the term performing indicates that a certain function of the printer is performed by executing a computer program such as an application. The processor may be implemented with a single chip or with a plurality of chips such as a central processing unit CPU and a dedicated processor. The dedicated processor may be a processor taking full charge of a specific work of the printer for example a network processor for processing data packets transmitted and received through a network.

The storage stores or provides data according to control of the processor . The storage stores various kinds of data such as firmware e.g. an OS and a device driver execution files e.g. an application and content e.g. text and images requested to be printed by the printing unit . The storage may be implemented with a single storage medium such as a flash memory or with a plurality of storage media such as random access memory RAM read only memory ROM a hard disk and a flash memory. Furthermore the storage may include a memory device detachable from the printer . For example a program called an application development solution described below may be stored in the memory device detachable from the printer .

The printing unit prints content such as text and images input from the processor according to a control of the processor . The printing unit may be divided into a mechanical part to deliver paper and an engine part to form an image on the paper. The scanning unit detects an image on paper inserted into the scanning unit according to a control of the processor . The scanning unit may be divided into an image sensor to detect an image on paper and a mechanical part to traverse the image sensor. Since detailed structures and operations of the printing unit and the scanning unit do not correspond to the features of the current embodiment and are well known in the technical field to which the embodiment illustrated in belongs a detailed description thereof will be omitted.

The communication unit communicates with another device such as the host according to a control of the processor . The communication unit may receive content and a print command about the content from the host and transmit a response indicating a processing result to the host . The communication unit may be divided into a mechanical part such as a connector into which communication cables such as a USB cable and a network cable are plugged and a circuit part to control data transmission according to various communication methods such as a USB standard and a network communication standard. The above described USB and network are only examples of currently used various communication methods and the communication unit may support other communication methods e.g. Bluetooth.

In the current embodiment to directly store an application developed in the host in the storage without uploading or downloading the application the host may read and execute an application development solution providing tools for developing an application of the printer from the storage and store an application developed by using the application development solution in the storage . To do this the communication unit may have a function of connecting the storage to the host so that the host can recognize the storage . If an application is not developed in the host but developed in the printer the communication unit does not have to have the connecting function.

Unlike a PC for performing general data processing work such as word processing and web surfing since the printer is designed as a type of an embedded system having limited resources to print work or to scan work general input and output devices such as a mouse a keyboard and a monitor are not generally included in the printer . According to the embodiments to be described below since tools for developing an application are provided in a form of a graphic user interface GUI so as not to require a text input an application can be developed by using a touch screen of the UI panel . In this case a sufficient hardware performance of the printer to develop an application e.g. performance of the processor and a capacity of the storage has to be supported.

When the communication unit has the function of connecting the storage to the host the application development solution stored in the storage is read and executed by the host via the communication unit . For example when the printer is connected to the host via a USB the communication unit connects the storage to the host by using a Mass Storage Class MSC protocol of the USB. In this case the storage may be recognized as a removable disk by the host through the MSC protocol. As another example when the printer is connected to the host via a network the communication unit connects the storage to the host by using a Server Message Block SMB protocol of the network. In this case the storage may be recognized as a network drive by the host through the SMB protocol.

The USB and the network are only examples of currently used various communication media and the storage of the printer may be connected to the host via another communication medium. Data used to develop an application of the printer e.g. the application development solution and user input information and the application generated by using the data are transmitted through a communication medium for connecting the storage of the printer to the host . In addition a communication medium for transmitting data for performing a certain function of the printer such as content to be desired by the host to print is also required. The former communication medium and the latter communication medium may exist separately or may be the same communication medium. For example the host and the printer may transmit and receive data associated with application development via a USB and simultaneously transmit and receive data associated with a print job of the printer via a network. Alternatively the host and the printer may simultaneously transmit and receive data associated with application development and data associated with a print job of the printer via a single USB. In this case the communication unit connects the printer to the host by using a Printer Class protocol of the USB and the host transmits the data associated with the print job of the printer by using the Printer Class protocol.

The UI panel interfaces between a user and the printer according to control of the processor . For example the UI panel may display in graphic form tools that may be used by the user to select and combine functions of the printer according to control of the processor . When the user inputs a certain instruction or information into the UI panel by using the tools the UI panel transmits the instruction or information to the processor . The UI panel may display the functions of the printer in a form of icons to display the tools for using the functions of the printer to the user in the graphic form. The functions of the printer may be functions of API functions or functions of modules corresponding to combinations of the API functions. As described above since the printer is designed in a type of an embedded system having limited resources for processing a print work or a scan work general input and output devices such as a mouse a keyboard and a monitor are not generally included in the printer . Accordingly the UI panel is generally implemented with a touch screen or a small liquid crystal display LCD screen and several input buttons.

The F W block is a data block corresponding to firmware to perform various functions of the printer by being executed by the processor and driving hardware elements of the printer . Representative examples of the firmware are an OS and a device driver forming a platform of the printer . Examples of the hardware elements of the printer are the communication unit the printing unit the scanning unit and the UI panel . The firmware describes operations of the hardware elements of the printer to respectively perform the various functions of the printer with binary codes executable in the processor and the processor controls the operations of the hardware elements of the printer according to the firmware. The F W block includes native functions to perform respective unit functions of the printer which are executed by the processor . A single native function describes operations of the hardware elements of the printer to perform a corresponding unit function of the printer with binary codes. For example a single native function may perform a big function such as a scan start of the scanning unit or a small function such as a rotation of a motor for delivering paper at a 1 angle. The processor controls at least one hardware element of the printer to perform a function corresponding to each of the native functions included in the F W block .

The wrapper block is a data block corresponding to a set of wrapper functions to one to one connect the native functions of the F W block and API functions of the API block . The API block is a data block corresponding to a set of API functions to perform unit functions of the printer by being one to one connected to the native functions of the F W block through the wrapper functions of the wrapper block and being executed by the processor . Since the API functions exist in an upper layer of the native functions unlike the native functions the API functions can be directly called in an application and can be used regardless of any OS of any computer system. Accordingly an application developer can develop an application of any embedded system other than a PC by using the API functions in the PC. That is in the current embodiment an API function interfaces between firmware and an application so that the application can request the firmware of the printer to perform a predetermined function.

The module block is a data block corresponding to a set of modules that are executed by the processor and perform functions corresponding to combinations of some of the API functions of the API block . Conventionally an application developer makes an application of an embedded system such as a smart phone by combining API functions provided by a hardware manufacturer or a vendor with a programming language designated as a development language in a PC. Accordingly cross compiling to translate the application made with the programming language into a binary file executable in the embedded system is required. In the current embodiment to remove such a cross compiling process each of the modules is a binary file obtained by previously cross compiling a combination of some of the API functions of the API block . That is in each of the modules in the current embodiment a function of the printer corresponding to a combination of some of the API functions of the API block is described with binary codes executable in the printer by using the combination of some of the API functions of the API block . The binary codes executable in the printer indicate binary codes executable in the firmware of the printer and eventually indicate binary codes executable by the processor .

Referring back to the solution block is a data block corresponding to an application development solution providing tools for developing an application of the printer in a form of a GUI by using the API functions of the printer . In the embodiment shown in the application development solution provides graphic tools for a user to select and combine some modules corresponding to combinations of API functions. In more detail the application development solution may be the uppermost layer taking charge in interaction with the user and by executing the application development solution information regarding modules can be read from the module block and the information regarding the modules can be provided to the user. For example the application development solution may display the information regarding the modules to the user in a form of icons. The user may develop various applications by variously combining modules with reference to the information regarding the modules. Furthermore the application development solution may provide a function allowing the user to modify modules or create new modules. For example the application development solution may read information regarding the API functions from the API block and provide the information regarding the API functions to the user. The user may modify modules or create new modules by referring to the information regarding the API functions.

According to the application development solution in the embodiment shown in the tools to develop an application of the printer can be described with binary codes executable in an OS of the host whereby the application development solution can be executed by the host . Alternatively according to the application development solution the tools to develop an application of the printer can be described with binary codes executable in an OS of the printer whereby the application development solution can be executed by the printer .

The compiler block is a data block corresponding to a cross compiler for translating programming codes of an application developed by using an application development solution to binary codes executable in the printer . The solution block is a data block corresponding to an application development solution providing tools for developing an application of the printer in a form of a GUI by using the API functions of the printer . In the embodiment shown in the application development solution provides graphic tools for a user to select and combine some modules corresponding to combinations of API functions. In more detail the application development solution may be the uppermost layer taking charge in an interaction with the user and by executing the application development solution information regarding APIs can be read from the API block and the information regarding the APIs can be provided to the user. For example the application development solution may display the information regarding the APIs to the user in a form of icons. The user may develop various applications by variously combining APIs with reference to the information regarding the APIs.

According to the application development solution in the embodiment shown in the tools for developing an application of the printer can be described with binary codes executable in the OS of the host whereby the application development solution can be executed by the host . Alternatively according to the application development solution the tools for developing an application of the printer can be described with binary codes executable in the OS of the printer whereby the application development solution can be executed by the printer .

In operation when a user turns the printer on power is supplied to the hardware elements of the printer . The printer is connected to the host via a communication cable such as a USB cable or a network cable. In operation the host recognizes the printer . For example a driver of the printer is installed in the host and the OS of the host can recognize the printer by means of the driver. If the host is one to one connected to the printer the host recognizes the printer as a local printer. If the host is connected to the printer via a network the host recognizes the printer as a network printer.

According to the embodiment shown in data to develop an application of the printer such as the application development solution of the printer is stored in the storage of the printer . The host reads the application development solution of the printer from the storage of the printer and executes the application development solution of the printer . The host stores an application generated by using the application development solution of the printer in the storage of the printer . As such in order for the host to read or store certain data from or in the storage of the printer the host has to be able to recognize the storage of the printer as if it is a local storage of the host . That is in the embodiment shown in the host recognizes the printer as a local printer or a network printer and simultaneously recognizes the storage of the printer .

In order for the host to recognize the storage of the printer the host has to identify a communication medium to connect the host to the storage of the printer and a communication protocol for connecting the host to the storage of the printer depends on a type of the communication medium. Accordingly in operation the host identifies a connection scheme between the host and the storage of the printer . For example if the host is connected to the storage of the printer via a USB the host identifies the connection scheme between the host and the storage of the printer as a USB in operation and proceeds to operation if the host is connected to the storage of the printer via a network the host identifies the connection scheme between the host and the storage of the printer as a network in operation and proceeds to operation . In operation the host recognizes the storage of the printer as a removable disk through the MSC protocol of the USB. In operation the host recognizes the storage of the printer as a network drive through the SMB protocol.

In operation when the host receives an execution command of the application development solution of the printer from a user and transmits the execution command to the printer the printer sets an environment of the printer required for application development by securing a memory space of the storage required for execution of the API functions included in the API block of the storage execution of the modules included in the module block of the storage and execution of the application development solution included in the solution block of the storage and initializing the API functions the modules and the application development solution. For example an icon indicating the application development solution of the printer may be displayed on a screen of the host . If the user clicks this icon by using an input device such as a mouse the host receives an execution command of the application development solution of the printer from the user and transmits the execution command to the printer . An example of the initialization of the API functions the modules and the application development solution is combining program internal variables of the API functions the modules and the application development solution to initial values. If the environment setup of the printer in operation is completed the application development solution stored in the storage of the printer can be read by the host . The process of setting the environment of the printer in operation may be omitted according to hardware performance of the printer characteristics of the API functions of the printer etc.

In operation the host reads and executes the application development solution of the printer from the storage of the printer recognized in either operation or operation . That is according to the execution of the application development solution a window on which graphic tool to develop an application of the printer are displayed is displayed on the screen of the host . In operation the host reads modules indicating functions of the printer from the storage of the printer recognized in either operation or operation in the window including the graphic tools for developing an application of the printer and displays the modules as icons.

In operation the host generates an application corresponding to input information of the user by combining some of the modules displayed in operation according to the information input from the user. When the user recognizes functions of the icons corresponding to the modules in the window displayed in operation the user combines modules corresponding to components of an application desired by the user by using an input device such as a mouse. As described above each of the modules describes a function of the printer corresponding to a specific combination of API functions with binary codes executable in the printer . The host may generate an application described with binary codes by combining functions of the printer described with binary codes by the modules according to the combination of the modules designated by the user. In operation the host stores the application generated in operation in the storage of the printer recognized in either operation or operation .

On the other hand if an application is developed in the printer instead of the host since the host does not have to recognize the printer and the storage of the printer operations to are omitted and operations to are performed by the printer instead of the host . For example when the printer receives an execution command of the application development solution of the printer from the user the printer sets an environment of the printer required for application development and executes the application development solution.

In operation the printer displays applications stored in the storage of the printer . The applications may be displayed in a form of icons on the UI panel . In operation when the printer receives information indicating any one of the applications displayed in operation from a user the printer executes the application selected by the user. The user may select an application by touching or initiating via the UI panel any one of the icons displayed on the UI panel . In operation the printer sequentially reads and executes modules included in the application from the module block in a combination order of the modules according to the execution of the application in operation . In operation the printer sequentially reads and executes API functions included in each of the modules from the API block in a combination order of the API functions according to the execution of the modules in operation . In operation the printer drives the hardware elements of the printer by sequentially reading and executing native functions respectively corresponding to the API functions from the F W block through wrapper functions that respectively connect the API functions to the native functions according to the execution of the API functions in operation . By driving the hardware elements of the printer a function of the printer indicated by the selected application is performed.

Since the process of recognizing the printer and the storage of the printer is the same as the method shown in operations to are identical to operations to . In addition for the remaining operations only parts that are different from the method shown in are described.

In operation when the host receives an execution command of the application development solution of the printer from a user and transmits the execution command to the printer the printer sets an environment of the printer required for application development by securing a memory space of the storage required for execution of the cross compiler included in the compiler block of the storage of the printer execution of the API functions included in the API block of the storage and execution of the application development solution included in the solution block of the storage and initializing the cross compiler the API functions and the application development solution. In operation the host reads and executes the application development solution of the printer from the storage of the printer recognized in either operation or operation . In operation the host reads APIs indicating functions of the printer from the storage of the printer recognized in operation or in a window including graphic tools for developing an application of the printer and displays the APIs as icons. In operation the host generates an application corresponding to input information of the user by combining some of the APIs displayed in operation according to the information input from the user. In operation the host stores the application generated in operation in the storage of the printer recognized in operation or . In operation the printer generates an application having binary codes executable in the printer by cross compiling the application stored in operation and stores the generated application in the storage of the printer .

Like the method shown in if an application is developed in the printer instead of the host since the host does not have to recognize the printer and the storage of the printer operations to are omitted and operations to are performed by the printer instead of the host .

Since the process of selecting an application by a user is the same as the method shown in operations and are identical to operations and . In addition for the remaining operations only parts that are different from the method shown in will be described.

In operation the printer sequentially reads and executes API functions included in the application from the API block in a combination order of the API functions according to the execution of the application in operation . In operation the printer drives the hardware elements of the printer by sequentially reading and executing native functions respectively corresponding to the API functions from the F W block through wrapper functions that respectively connect the API functions to the native functions according to the execution of the API functions in operation .

As shown in examples of the icons displayed in the module area are an icon of a Document Scan module to describe a function of scanning a document put into the printer an icon of a Data Print module to describe a function of printing data e.g. text and images stored in the printer and an icon of a Document Copy module to describe a function of copying a document put into the printer by scanning and printing the document.

Other examples of the icons displayed in the module area are an icon of a Mail Make module to describe a function of making an e mail including data e.g. text and images stored in the printer an icon of a Mail Transmit module to describe a function of transmitting an e mail to an e mail address of at least one user predetermined from among users of the printer and an icon of a Mail Receive module to describe a function of detecting an e mail received through an e mail address of at least one user predetermined from among users of the printer .

Since icons are generally displayed having a specific shape such as a same sized rectangle or circle it is limited to display information regarding a module corresponding to an icon on the icon. Thus when a certain icon is double clicked by a user detailed information or additional information of a module corresponding to this icon may be separately displayed in a form of a balloon around the icon. Alternatively when a certain icon is double clicked by the user detailed information of a module corresponding to this icon may be displayed in a specific area of the window instead of around the icon. For example when the icon of the Mail Transmit module for performing the function of transmitting an e mail to an e mail address of at least one user predetermined from among users of the printer is double clicked e mail addresses of users registered in the address book of the printer may be displayed in a form of a balloon.

An application developer of the printer i.e. a user of the host may generate an application by moving icons displayed in the module area to the work area in a clicking state arranging the moved icons in an order desired by the user and clicking the OK button . An arrangement order of icons in the work area of the window shown in indicates a data input output relationship between modules corresponding to the icons. For example a data input output relationship between modules corresponding to icons may be defined as follows. If an icon B is located on the left of or above an icon A data output from a module corresponding to the icon B is input to a module corresponding to the icon A and if an icon C is located on the right of or below the icon A data output from the module corresponding to the icon A is input to a module corresponding to the icon C. Arrows indicating the data input output relationship may be displayed between the icons so that the user can easily identify the data input output relationship between the modules corresponding to the icons.

Thereafter to generate the application for performing the functions described above the user of the host moves the icon of the Document Scan module the icon of the Mail Make module and the icon of the Mail Transmit module to the work area arranges them and clicks the OK button . In more detail as shown in the user of the host disposes the icon of the Mail Make module on the right of the icon of the Document Scan module so as to make an e mail including a scanned image of the document put into the printer . Accordingly the scanned image of the document output from the Document Scan module is input to the Mail Make module and the Mail Make module makes the e mail including the scanned image of the document. In addition the user of the host disposes the icon of the Mail Transmit module on the right of the icon of the Mail Make module so as to transmit the e mail including the scanned image of the document put into the printer to an e mail address of at least one user designated by the user of the host from among users registered in the address book of the printer . If the user of the host double clicks the Mail Transmit module e mail addresses of the users registered in the address book of the printer are displayed. Thereafter the user of the host may select at least one e mail address corresponding to a destination of the e mail by clicking at least one of the e mail addresses. Accordingly the e mail output from the Mail Make module is input to the Mail Transmit module and the Mail Transmit module transmits the e mail to the at least one e mail address selected by the user.

Thereafter the user of the host clicks the OK button to complete the generation of the application for performing the functions described above and displaying a new application in the work area of the window . If the user of the host double clicks the application displayed in the work area of the window a box for inputting a name of the application may be generated so as for the user of the host to input the name of the application in the box. For example if users selected by the user of the host belong to a group A a name group A document transmission may be input. Thereafter the user of the host may add the new application to the application list by clicking the Add Item button . If the new application is added to the application list the new application is displayed on the UI panel of the printer . The user of the printer may execute the new application through the UI panel of the printer .

For example the UI panel of the printer may be implemented with a touch screen wherein the user may execute the new application by touching the new application on the touch screen with a finger. Only if the user of the printer puts a certain document into the printer and touches the new application displayed on the UI panel of the printer then a copy of the document is automatically transmitted to the pre designated users.

To generate the application for performing the function described above the user of the host moves the icon of the Mail Receive module and the icon of the Data Print module to the work area arranges them and clicks the OK button . In more detail as shown in the user of the host disposes the icon of the Data Print module on the right of the icon of the Mail Receive module so as to print the e mail received by the printer through the pre defined e mail address. Accordingly the e mail output from the Mail Receive module is input to the Data Print module and the Data Print module prints the e mail.

The application development examples shown in may also be applied to the application development apparatus shown in and the application developing method shown in . For example the window may include an API area in which icons indicating API functions to describe functions of the printer are displayed instead of having the module area in which icons indicating modules for describing the functions of the printer are displayed. Since such developed applications can be executed in other types of products using the same processor or firmware as that of the printer applications secured in the printer may be shared with other types of products by using Digital Living Network Alliance DLNA technology.

According to the above described embodiments the application development solution may be stored in the printer and an application developed by using the application development solution may be directly stored in the printer so the processes of uploading and downloading the application are unnecessary. In addition since a user can develop an application by combining functions of the printer which are displayed in graphic form an environment may be provided in which general users who lack computer knowledge can easily develop an application. In addition by generating an application by combining modules that are previously cross compiled binary files or compiling the application by using a cross compiler stored in the printer the host does not have to install any cross compiler or emulator and an environment may be provided in which general users who lack computer knowledge can easily develop an application. Accordingly user requirements of the printer can be immediately satisfied.

The application developing method and the application executing method can be written as computer programs and can be implemented in general use digital computers that execute the programs using a computer readable recording medium. Examples of the computer readable recording medium include storage media such as magnetic storage media e.g. ROM floppy disks hard disks etc. and optical recording media e.g. CD ROMs or DVDs .

Although a few embodiments of the present general inventive concept have been shown and described it will be appreciated by those skilled in the art that changes may be made in these embodiments without departing from the principles and spirit of the general inventive concept the scope of which is defined in the appended claims and their equivalents.

