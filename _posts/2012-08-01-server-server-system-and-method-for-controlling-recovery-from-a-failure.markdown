---

title: Server, server system, and method for controlling recovery from a failure
abstract: A server includes a monitoring unit that monitors operation states of one or more physical servers in use on which same applications operate, a synchronization unit that synchronizes the data between one of the physical servers in use and one of virtual servers in a standby physical server, and a switching unit that, when the monitoring unit has detected that a failure has occurred in the operation of one of the physical servers in use, that operates a second application of the same applications while referring to a piece of the data on the one of the virtual servers synchronized by the synchronization unit with the data on the one of the physical servers in use, and that switches operation from the one of the virtual servers to the standby physical server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09032241&OS=09032241&RS=09032241
owner: Fujitsu Limited
number: 09032241
owner_city: Kawasaki
owner_country: JP
publication_date: 20120801
---
This application is based upon and claims the benefit of priority of the prior Japanese Patent Application No. 2011 171028 filed on Aug. 4 2011 the entire contents of which are incorporated herein by reference.

The embodiments discussed herein are related to a server system including a redundant configuration in which a plurality of servers are included and a redundant switching method for the servers.

Currently apparatuses such as a security gateway a load balancer a network device operation control apparatus are configured by combining a plurality of servers. An apparatus configured by combining a plurality of servers typically has high reliability such as durability of service. Nowadays corporate activity largely depends on machines and a potential loss from a stop of a machine system is significant which has prompted a call for high reliability. In particular the popularization of the Internet and the emergence of new services such as a moving image service are increasing the traffic of the Internet and apparatuses are expected to economically construct and operate a communication system at high speed that can execute high speed processing and enable various services.

Among these apparatuses apparatuses provided at positions that are supposed to offer smooth service such as a data center and a carrier especially a server system might adopt a redundant configuration in which redundant apparatuses and servers are included in addition to apparatuses that are actually operated in order to reduce a period of time for which communication stops during maintenance work or upon occurrence of a failure.

As one of methods for realizing a redundant configuration a server system may have an N 1 redundant configuration in which a standby server is prepared in addition to N servers in use. By adopting the N 1 redundant configuration the reliability of the server system especially the availability of the server system can be improved.

For example a blade system is known in which a plurality of central processing unit CPU blades are stored in a chassis a virtual machine VM system realized by a virtual machine method is operated in each CPU blade and a given server stands by as a redundant server in order to achieve load leveling and avoid a stop of the system due to a failure. In such a system by migrating a virtual system from a server in use to a redundant server when a failure or the like has occurred smooth system operation can be realized.

In addition a system is known in which when a system operating in a certain CPU blade that is for example a virtual system is to be migrated to another CPU blade the destination CPU blade is not limited to a given one and an optimal blade system can be selected while taking into consideration the characteristics of blades the operation states of fans power supplies and the like a failure occurrence condition and the like. In such a system a redundant blade does not have to be prepared in advance. Furthermore by digitizing the system operation condition of each CPU blade and configuring the system such that a CPU blade including the same or better operation condition as or than an original CPU blade is selected when a failure has occurred in the original CPU blade it is possible to reduce the time taken to complete the migration after the occurrence of the failure.

In addition a system is known in which servers in use configured by a plurality of physical servers on which a plurality of virtual machines realized by the virtual machine method can operate and a single standby server on which virtual machines operate are included and when a failure has occurred in one of the physical servers in use an operating system OS that has operated in the physical server is activated as a standby virtual server or when a failure has occurred in one of the physical servers on which one of the virtual machines operates a virtual OS of the virtual machine is activated as a standby virtual server. In a process for recovering from a failure executed by this system when a failure event has occurred in one of the servers in use an activation disk used by the server in which the failure event has occurred is assigned to the standby server and the power of the standby server is turned on.

In addition a method for updating a file is known that in a virtual server condition in which a plurality of VM systems operate in a single physical server as servers and duplex operation is realized by one of blades that operates as a server in use and another blade that operates as a standby server does not affect another virtual server operating on the same physical server when the operation is switched from one blade to another blade.

In general when a plurality of virtual servers have been constructed on a physical server all the virtual servers operating on the physical server stop if a failure occurs in the physical server and therefore there has been a problem in that it is difficult to achieve high reliability for the system. On the other hand when a plurality of independent servers configure a server system the entirety of the system does not stop even if a failure occurs in a single physical server but there has been a problem in that cost is large.

In addition when a virtual server is used as a server in use on a physical server there has been a problem in that there is overhead because input output I O operations of guest OSs are executed parallel to one another.

In addition when a standby server operates in a cold standby state during the normal operation in a pair of physical servers including a duplex configuration including a server in use and the standby server communication and service stop for an extended period of time after a failure occurs because an application for communication is activated after configuration information is transferred to the standby server. In addition there has been a problem in that it takes time to begin the operation of the standby server after the occurrence of the failure.

Furthermore in a method for realizing an N 1 redundant configuration according to the related art cold standby is conducted after a failure occurs or each application is supposed to be able to support the N 1 redundant configuration. However although increasingly varying applications may support a hot standby duplex configuration there has been a difficulty in that it costs a lot to support an host standby N 1 duplex configuration.

In addition although a method is possible in which a standby server corresponds to N servers in use it is difficult in terms of cost to incorporate into varying communication applications a code that takes into consideration a redundant configuration for supporting an N 1 duplex configuration. This also decreases the reliability of the standby server.

Therefore in the N 1 duplex configuration of a server system including a plurality of servers a reliable redundant computer system that can suppress cost without sacrificing CPU performance and I O performance is expected.

In addition in order to improve reliability a method for switching the operation especially a method for recovering from a failure is expected for a server system including an N 1 redundant configuration including a plurality of servers in a single chassis.

Japanese Laid open Patent Publication Nos. 2008 276320 2010 211819 and 2010 003022 are examples of related art.

According to an aspect of the embodiments a server includes a monitoring unit that monitors operation state of one or more physical servers in use on which same applications operate while generating deleting or referring to data a synchronization unit that synchronizes the data between one of the physical servers in use and one of virtual servers in a standby physical server which includes the same number of the virtual servers as the physical servers in use corresponding to the one of the physical servers in use and a switching unit that when the monitoring unit has detected that a failure has occurred in the operation of one of the physical servers in use activates a first application of the same applications that has operated on the one of the physical servers in use on the one of the virtual servers corresponding to the one of the physical servers in use that operates a second application of the same applications while referring to a piece of the data on the one of the virtual servers synchronized by the synchronization unit with the data on the one of the physical servers in use and that switches operation from the one of the virtual servers to the standby physical server.

The object and advantages of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the claims.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and are not restrictive of the invention as claimed.

In the following description first a server system and a method for recovering from a failure according to a comparative example using an N 1 redundant configuration hereinafter also referred to simply as the redundant configuration will be described with reference to . Thereafter a server system and a method for recovering from a failure according to the embodiment will be described with reference to . is a diagram illustrating a system in which internetwork gateway servers and network device operation control servers are used.

According to the embodiment in a redundant configuration including one or more physical servers in use and a standby physical server a plurality of OSs corresponding to the physical servers in use are operated by virtual servers on the standby physical server using a virtualization mechanism virtualization unit . By synchronizing data on the physical servers in use and data in the corresponding standby servers with each other it is possible to provide reliable apparatuses the internetwork gateway servers and the network device operation control servers including high availability that can promptly recover when a failure has occurred while suppressing cost without sacrificing CPU performance and I O performance.

When a terminal in an intranet or collectively referred to as the intranets is to access a service on an Internet an internetwork gateway server or respectively is passed through. The internetwork gateway servers and collectively referred to as the internetwork gateway servers used in such an environment typically have high capacity for processing packets and therefore a server system used as the internetwork gateway servers typically has high CPU power.

Network device operation control servers and operate and control multiple network devices on the Internet and a network device operation control server operates and controls multiple network devices on the intranet . The network device operation control servers and collectively referred to as the network device operation control servers used in such an environment also typically have a high capacity for processing packets and therefore apparatuses used as the network device operation control servers have high CPU power.

The server system illustrated in includes communication servers operated by OSs and respectively that make up the redundant configuration and a control server . The communication servers and the control server are stored in a single chassis. Among the plurality of servers operated by the OSs and the servers operated by the three OSs and are servers in use and the other which can be operated by the OS is a standby server. The standby redundant server is in a cold standby state while the server system is operating normally and therefore the OS is indicated by a broken line in which illustrates a state immediately after occurrence of a failure. Communication applications and are operating on the OSs and respectively. These communication applications and generate and use pieces of communication application data and respectively during the operation thereof.

The control server monitors the communication servers operated by the OSs and respectively and controls switching of the operation between the communication servers. For this reason the control server holds configuration information regarding each communication server monitored thereby.

In the cold standby state of the redundant server is released and the OS that operates the server and the communication application that operates on the OS are activated. Upon the activation of the OS the configuration information regarding the server in which the failure has occurred is transferred from the control server . At the same time the server in which the failure has occurred that is the server operated by the OS stops.

In the communication server that has originally been the standby server is operated as a server in use.

In the above described method a communication application is activated after the control server detects a failure in one of the servers in use and the configuration information is transferred to the standby server. Therefore communication and service are not available for an extended period of time.

Although a method is also possible in which the standby server is configured to correspond to N servers in use it is difficult in terms of cost to incorporate an N 1 duplexing code that takes an N 1 redundant configuration into consideration into varying communication applications and the reliability of the standby server decreases.

The configuration of a server system an internetwork gateway server or a network device operation control server according to the embodiment will be described with reference to . The server system hereinafter also referred to simply as the apparatus has an N 1 redundant configuration hereinafter also referred to simply as the redundant configuration . The server system may be used as the server system or the network device operation control server illustrated in .

As a method for realizing the N 1 redundant configuration a virtualization technique that is a virtualization mechanism is known in which a virtual machine is configured on a single physical machine and a plurality of OSs are executed parallel to one another. This virtualization mechanism is also referred to as the virtualization method herein. Such a technique may be a virtual machine method or a logical partitioning method. A machine adopting such a technique is referred to as a machine utilizing a virtualization function or a virtual machine. If the virtual machine is a server the machine is also called a virtual server . An OS that operates on the virtualization mechanism is referred to as a guest OS . An OS on which the virtualization mechanism operates is referred to as a host OS . That is N 1 guest OSs are executed parallel to one another on a single physical machine operated by a host OS in order to realize a configuration as if there are N 1 machines. The redundant configuration is realized by using N machines as servers in use and the other as a standby redundant server.

In the virtual machine method control software called virtual machine monitor VMM virtualizes registers and the like for controlling the operation of hardware and processors of machines in order to realize a plurality of VMs on a single physical machine. At this time guest OSs operate on the virtual machines generated by the VMM. More specifically the VMM creates virtual machines by trapping privileged instructions from a CPU executed by the guest OSs such as an I O instruction and a control register and by converting the privileged instructions into access to actual physical devices to emulate process the physical devices. In the virtual machine method a plurality of guest OSs can share a single physical I O device.

In the I O control of the virtual machine method the VMM emulates the I O control of the guest OSs and therefore overhead is generated. If there are a plurality of operating guest OSs the VMM simultaneously executes the I O control of the plurality of guest OSs parallel it might not be easy to predict the amount of overhead.

On the other hand in the logical partitioning method control software called hypervisor logically partitions the resource of a physical machine in order to realize a plurality of VMs on the single physical machine. That is the hypervisor logically partitions the single physical machine by controlling registers and tables referred by hardware such as a processor. A guest OS is executed within each division logical partition obtained as a result of the partitioning by the hypervisor. That is privileged instructions such as an I O instruction executed by the guest OSs is not emulated but directly executed by the processor of the physical machine. In the logical partitioning method because of the configuration of this method the operation of a certain guest OS is hardly affected by the operation of another guest OS running on the same physical machine. On the other hand a plurality of guest OSs do not share a single physical I O device. The hypervisor will also be referred to simply as the host OS herein.

In general the virtualization mechanism is suitable when in a communication control telecommunication server or a communication computer system that has high availability and good cost performance a blade server is used as a computer system including a redundant configuration or when among boards used in an Advanced Telecommunications Computing Architecture AdvancedTCA trademark chassis packet processing boards whose unit cost is high and whose quantity used affects packet processing capacity as an apparatus are used in a redundant configuration. The virtualization unit in the apparatus according to the embodiment may be a unit that uses the virtual machine method or a unit that uses the logical partitioning method.

In the server system among a plurality of physical servers included in the redundant configuration virtual machines virtual servers are realized only in a single standby physical server hereinafter also referred to simply as the standby server .

The server system illustrated in includes communication servers include a standby physical server operated by OSs and respectively that make up the redundant configuration and a control server and the communication servers and the control server are stored in a single chassis. However the communication servers and the control server don t have to be stored in a single chassis. Among the plurality of servers operated by the OSs and the servers operated by the three OSs and are physical servers in use hereinafter also referred to simply as the servers in use and the other server operated by the OS is a standby server. The standby server includes the virtualization unit and virtual servers are constructed by virtualizing the standby server using the virtualization unit. The OS is a host OS of the standby server and guest OSs can operate thereon. The server system is different from the comparative example illustrated in in that the virtual servers corresponding to the servers in use are constructed on the standby server. Each virtual server communicates with the corresponding server in use and pieces of data regarding applications that is for example communication applications are synchronized with each other.

The virtualization unit that provides virtual machines is included not only in the standby server but also in each server in use and each server in use is configured to be able to operate guest OSs on a host OS thereof.

The control server has a monitoring unit that monitors the operation states of the plurality of servers operated by the OSs and and has configuration information regarding each communication server monitored by the monitoring unit. The control server has a synchronization unit that synchronizes data regarding communication applications between the servers in use and the standby server. The synchronization unit synchronizes the data regarding the communication applications between the servers in use and the standby server but the server in which virtual machines have been constructed by the virtualization unit may have a function of synchronizing the data between the guest OSs and the host OS. The function of synchronizing the data between the guest OSs and the host OS may be prepared separately from the synchronization unit a first synchronization unit as a transfer unit a second synchronization unit . The transfer unit may be included in the virtualization unit.

The control server also has a switching unit that controls the switching of the operation from a server in which a failure has occurred to a standby server when the failure has occurred in any of the servers in use. The switching unit a first switching unit controls the switching of the operation between a server in use and a standby server that are physically separate from each other. However for example when a virtual machine operated by a guest OS serves as a server in use and a server operated by a host OS serves as a standby server on a single physical server in which virtual machines are realized by the virtualization mechanism the operation might be switched from the server in use to the standby server. This function of switching may be included in the switching unit or may be included in a movement unit a second switching unit that is separate from the switching unit. The movement unit may be included in the virtualization unit.

In the server system normally a plurality of guest OSs are activated by the virtualization unit only on the standby server. In general the standby server does not use large CPU power and overhead does not matter as a machine that uses the virtualization function. On the other hand the servers in use large CPU power for the normal operation. However by adopting the configuration according to the embodiment the servers in use that waste CPU power do not include overhead that would otherwise accompany the use of the virtualization mechanism and therefore high processing capacity can be achieved.

In the server system the control server includes the monitoring unit that monitors the operation states of the servers in use and the synchronization unit that synchronizes data on the servers in use and data on the standby virtual server with each other. That is the operation states of the servers in use and the standby server are monitored by the monitoring unit of the control server and the data on the servers in use and the data on the standby virtual server are synchronized with each other by the synchronization unit of the control server . The operation of each server in use is also monitored by the corresponding virtual server. That is the virtualization unit may include the monitoring unit the synchronization unit and the switching unit.

When a failure has occurred in a server in use the communication server operated by the server in use is backed up by the corresponding OS in the standby server. The host OS and the guest OSs in the standby server operated by the virtualization mechanism provide the same application programming interface API for applications but applications operating on the servers in use don t have to be the same. Needless to say the host OS and the guest OSs on the standby server may be the same and Linux trademark may be used.

The API provided by the host OS operating on each server in use and the host OS and the guest OSs operating on the standby server may be one that can be used by all applications operating on the OSs. However APIs to be uniquely used by the OSs upon switching between the OSs are not limited to this.

It is sufficient for the applications to be able to operate on the two types of servers namely the servers in use and the standby server that is for example the virtual servers constructed on the standby server and don t have to take the redundant configuration into consideration. Therefore the applications operating on each server in use don t have to be the same. Furthermore a plurality of applications may operate on a single server in use.

Examples of data to be synchronized can include the following 1 path information a Link State Advertisement LSA or the like 2 an ARP cache table 3 a neighbor cache table 4 Transmission Control Protocol TCP User Datagram Protocol UDP session information 5 Hypertext Transfer Protocol HTTP Hypertext Transfer Protocol Secure HTTPS connection information 6 Network Address Translation NAT address mapping information 7 Quality of Service QoS uniform allocation bandwidth information 8 access prohibition information for a firewall filtering information 9 a flow table 10 various pieces of statistical information and 11 apparatus states.

The TCP UDP session information is information relating to a session according to the TCP or the UDP which is a protocol used for a one to one communication process.

The HTTP HTTPS connection information is information relating to connection according to the HTTP or the HTTPS which is a protocol whose security is reinforced from the communication according to the HTTP.

The NAT address mapping information is information relating to correspondence between addresses using NAT. In general the NAT address mapping information is information for associating a private IP address and a global IP address. illustrate examples of data including the NAT address mapping information according to IPv4 and IPv6 respectively.

The QoS uniform allocation bandwidth information is information relating to a bandwidth preserved for a particular type of communication to assure a certain communication speed in a network.

The flow table is information that represents the flow of data by combining a particular IP address a port number a MAC address a Multiprotocol Label Switching MPLS label an input port and the like.

The apparatus states may be arbitrary amounts so long as the apparatus states are amounts that characterize the operation of a server such as power consumption the operation rate of a CPU and the temperature of the CPU.

The hardware configuration of the server system is not limited to the configuration illustrated in . More specifically any configuration may be adopted so long as the server system has a redundant configuration in which a plurality of servers are included and in which an application is operated on each server while referring to data at least one of the plurality of servers operates as a standby server the other servers operate as servers in use the standby server is virtualized using a virtualization unit to realize a plurality of virtual servers virtual machines OSs corresponding to OSs of the servers in use operate in the virtual servers and pieces of data regarding applications operated on the servers in use are synchronized between the servers in use and the corresponding virtual servers on the standby server. The server system may or do not be stored in a single chassis. In the configuration illustrated in the server system is stored in a single chassis.

In addition the standby server at least includes a transfer unit that synchronizes pieces of data on a host OS and guest OSs with each other in the virtual servers.

By realizing such a configuration the server system obtains an advantage in that the entirety of the system does not stop due to a failure in a single physical server. In addition since the servers in use are not virtualized there is an advantage in that no overhead is generated by the virtualization in the normal operation. Furthermore in the normal operation since the guest OSs operate in the standby server and pieces of data regarding applications are synchronized with each other between the standby server and the servers in use power consumption can be suppressed compared to in the case of host standby. In addition high availability can be realized. Furthermore since it is sufficient for the application to take only the duplex configuration into consideration it is easy to develop application cost thereby increasing the reliability of the applications themselves and the system in which the applications operate. In addition there is an advantage in cost because of the redundant configuration and the reliability of a network can be increased.

A process for recovering from a failure executed by the server system including the redundant configuration realized by the virtualization function will be described with reference to .

In since the control server has detected the failure in one of the servers in use the operation is switched from the server in use in which the failure has been detected to the corresponding guest OS or OS in this case in the standby server and the standby server begins communication and service. At the same time the server in use in which the failure has been detected that is the server operated by the OS is stopped.

In the control server judges whether or not performance decreases when the communication application operates on the guest OS . If performance decreases the application is activated on the host OS as a new standby server and data on the new standby server is synchronized with the data on the same physical server. This switching of the operation may be executed by the switching unit included in the control server or may be executed by the movement unit which is separate from the switching unit included in the control server .

In all the guest OSs and are shut down. Thus the communication applications and operate on the host OS as the servers in use and it is possible to keep performance from decreasing that would otherwise occur due to the parallel operation of the virtual machines.

The switching from the state illustrated in to the state illustrated in is executed on the same physical server and therefore there are several methods for synchronizing pieces of data. For example the methods include the following 1 synchronization through a network in the virtual servers 2 synchronization by a memory map 3 synchronization by a shared disk and 4 synchronization by a combination between at least two of the above 1 to 3 .

In the first synchronization method that is the synchronization through a network in the virtual servers data is synchronized from a virtual server operated by a guest OS to the physical server operated by the host OS through a virtual network using the same method as that for switching from the server in use to the standby virtual server in the opposite procedure. This method for synchronizing data can be executed by the synchronization unit included in the control server and or the standby server.

The second synchronization method in which a memory map is used is a method for synchronizing data by mapping a region of a memory space in a virtual server and a region of a memory space of an application operating on a physical server in which data to be synchronized is held. By using this method switching can be executed at high speed.

The third method in which a shared disk is used includes the following operations. First a shared disk is set between the virtual servers and the physical server. For example a Network File System NFS server is activated on the physical server side and the virtual server side shares the disk as an NFS client. Next applications operating on the virtual servers write data to be synchronized to the disk. After the operation is switched from the virtual servers to the physical server an application operating on the physical server uses the data written to the shared disk.

The above three methods other than the first method may be executed by the transfer unit which is separate from the synchronization unit that synchronizes data between the servers in use and the standby server. That is the transfer unit synchronizes data on the host OS and data on the guest OSs with each other in the virtualized servers.

The units included in the control server that is the monitoring unit the synchronization unit and the switching unit are executed by software programs or dedicated pieces of hardware.

In the past communication would sometimes stop for tens of seconds to several minutes until restart after data is set from the servers in use to the standby server upon occurrence of a failure but by using the above described methods switching can be completed within several seconds without decreasing performance.

A server system and a method for recovering from a failure executed by the server system will be described with reference to .

In the following description a server system including four blades in a chassis will be described. Three blades serve as physical servers in use hereinafter also referred to simply as the servers in use and the other blade serves as a standby redundant physical server hereinafter also referred to simply as the standby server . However it is obvious to one skilled in the art that the number of blades is not limited to this value and may be an arbitrary number.

First the configuration of the server system will be described with reference to . The server system servers as the internetwork gateway server or the network device operation control server illustrated in .

The OSs and in the standby server correspond to the guest OSs and respectively illustrated in and virtual machines operated by the guest OSs and correspond to the virtual machines operated by the guest OSs and respectively illustrated in .

The three virtual machines virtual servers constructed on the standby server are connected to the switch through a soft switch . In the normal operation of the servers in use and the three virtual machines don t have to be connected to the switch .

The servers in use and and the standby server correspond to the communication servers operated by the OSs and respectively illustrated in .

The switch is provided between a set of the servers and and an external Internet and intranet . Class A IP addresses 10.23.4.121 10.23.4.122 and 10.23.4.123 are assigned to the servers and respectively. These class A IP addresses are also provided for the servers operated by the host OSs and and respectively operating on the standby server or the standby guest OSs and respectively. A class A IP address 10.23.4.124 is assigned to the host OS of the standby server.

The switch is a switch of an internal maintenance Ethernet network. Class C IP addresses 192.168.1.1 192.168.1.2 and 192.168.1.3 are assigned to the servers in use and respectively. 192.168.1.4 is assigned to the standby server operated by the host OS . 192.168.1.41 192.168.1.42 and 192.168.1.43 are assigned to the OSs of the virtual machines realized on the standby server by using the virtualization unit that is the guest OS and and respectively.

Data accompanying the applications and operating on the servers in use and respectively is synchronized with data on the three virtual servers through the internal maintenance Ethernet network that connects the servers in the server system to one another.

The switch or serves as the control server . That is the switch or includes the monitoring unit the synchronization unit and the switching unit. The monitoring unit monitors whether or not a failure occurs in the servers in use and . The synchronization unit synchronizes data regarding applications between the servers in use and and the standby server. The switching unit appropriately controls the switch and also has functions of controlling the operation of the servers in use and and the standby server especially a function of switching the operation between the servers in use and and the standby server . The switch is electrically connected to the servers in use and and the standby server through the internal maintenance Ethernet network.

When a network card that supports the virtualization such as Single Root Input Output Virtualization SR IOV is used the soft switch may be included in the network card.

The server system includes the servers in use and and the standby redundant server . The host OSs and operate on these servers respectively. In the servers in use and applications and to and directly operate on the host OSs and respectively. On the other hand in the standby server three virtual machines and are realized on the host OS using the virtualization mechanism and operated by the guest OSs and respectively. Furthermore flow engines middleware and and the applications and to and operate on the three guest OSs and respectively. That is the applications and to and are operable in the duplex configuration. In the present embodiment the host OS is Linux. However the host OS is not limited to Linux. In addition the host OSs of the servers in use and the standby server don t have to be the same and the host OSs of the plurality of servers in use don t have to be the same so long as these host OSs offer the same API.

The AdvancedTCA server can include an AdvancedTCA chassis single board computer SBC blades or packet processing board PBB blades and a CMM a Rear Transition Module RTM which is not illustrated and the like. An SBC blade is a blade on which a CPU is mounted and a PBB blade executes packet processing. The AdvancedTCA server illustrated in has eight SBC blades or PBB blades and these blades make up the N 1 redundant configuration. The RTM is an extension module mounted together with the blades and includes a hard disk a fiber channel and an I O circuit such as an IP circuit. The AdvancedTCA chassis is a chassis into which the above described units are incorporated. The CMM monitors and controls the state of each unit incorporated into the AdvancedTCA chassis . The CMM can execute the function of the control server .

Although the CMM is included to execute the function of the control server in this example the standby server in the N 1 redundant configuration may execute the function of the control server instead.

In an AdvancedTCA server illustrated in only a part of a plurality of SBC or PBB blades and incorporated into an AdvancedTCA chassis make up the N 1 redundant configuration. More specifically the SBC or PBB blades and make up a server including a duplex configuration and the SBC or PBB blades and make up the N 1 redundant configuration.

A process for recovering from a failure executed by the server system will be described with reference to .

In S the servers in use and synchronize data with the guest OSs and respectively on the standby server or the virtual servers and respectively operated by the guest OSs and respectively.

In S suppose that a failure occurs in the server in use . The failure is detected in S or S. More specifically in S the control server detects the failure in the server in use . In S the standby virtual server which corresponds to the server in use detects the failure in the server in use .

Next in S the standby virtual server which corresponds to the server in use begins to operate as a virtual server in use. The system at this time is illustrated in a system diagram of and a block diagram of .

In S that follows S the operation is switched from the standby virtual server to the standby server and the standby server which is operated by the host OS begins to operate as a new server in use. The system at this time is illustrated in a system diagram of . The switching from the standby virtual server to the standby server may be executed by the switching unit in the control server . However since the switching of the operation is switching on the same physical server the switching may be executed by the movement unit a second switching unit included in the virtualization unit separate from the switching unit a first switching unit included in the control server instead.

The switching from the standby virtual server to the standby server may be executed by the above described transfer unit.

In S the standby server shuts down the virtual servers and operating on the host OS . The shutdown of these virtual servers is executed by a shutdown unit included in the control server or the virtualization unit.

Although not illustrated in the server may be restarted after S and a new standby server including the same configuration as the server before the failure may be constructed in the server using the virtualization mechanism . is a block diagram illustrating the server system including the N 1 redundant configuration according to this embodiment after the transfer of the host OS illustrated in . is a block diagram illustrating the server system according to this embodiment after recovery to the normal operation. The block diagram of is the same as that before the occurrence of the failure.

The timing of the switching of the operation from the standby virtual server to the standby server may be determined by the first or the second switching unit. For example the switching of the operation from the standby virtual server to the standby server may be executed only when the processing speed of the standby virtual server has been judged to be insufficient on the basis of data regarding the operation states of the servers obtained by the control server that is the servers and and the standby virtual server in this case. For example the operation may be switched on the basis of the operation rate of the CPU of the server . Alternatively the switching may be executed when it has been judged on the basis of the data regarding the operation state of the standby virtual server that the switching of the operation from the standby virtual server to the standby server does not affect the processing executed by the standby virtual server . For example the switching of the operation may be executed when the amount of traffic of the standby virtual server is small.

By adopting the above configuration and by synchronizing data on a server in use and data on a corresponding standby server with each other in a server system in which an OS of the physical server in use operates on a virtual server on the standby physical server a control server for controlling a reliable server system that has high availability and that can recover from a failure in a short period of time when the failure has occurred can be obtained while suppressing cost without sacrificing the CPU performance and the I O performance.

In addition a reliable method for recovering from a failure can be obtained that has high availability that can be executed by the control server and that makes it possible to recover from a failure in a short period of time when the failure has occurred while suppressing cost without sacrificing the CPU performance and the I O performance.

All examples and conditional language recited herein are intended for pedagogical purposes to aid the reader in understanding the invention and the concepts contributed by the inventor to furthering the art and are to be construed as being without limitation to such specifically recited examples and conditions nor does the organization of such examples in the specification relate to a showing of the superiority and inferiority of the invention. Although the embodiment of the present invention has been described in detail it should be understood that the various changes substitutions and alterations could be made hereto without departing from the spirit and scope of the invention.

