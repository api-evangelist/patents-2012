---

title: Social-based information recommendation system
abstract: Techniques are described herein that are capable of recommending information that is contextually related to code using a social data graph. A machine learning technique is used to determine that the information is contextually related to the code. A social data graph is a graph database that stores information associated with users in a social networking environment. For instance, such information may be retrieved from user profiles, social updates, etc. of the users. A social networking environment is an online service, platform, or domain (e.g., Web site) that facilitates the building of social networks (e.g., social relations) among people who share interests, activities, backgrounds, real-life connections, etc.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09092211&OS=09092211&RS=09092211
owner: Microsoft Technology Licensing, LLC
number: 09092211
owner_city: Redmond
owner_country: US
publication_date: 20121213
---
Software developers continue to seek more efficient and effective techniques for developing software a.k.a. code . For instance software developers often use developer tools to facilitate the development of their software. Such developer tools may perform diagnostic operations e.g. identifying source of problem debugging profiling controlling etc. with respect to the software that is being developed. Examples of a developer tool include but are not limited to a web development platform e.g. Windows Azure Platform Amazon Web Services Google App Engine VMWare Force.com etc. and an integrated development environment e.g. Microsoft Visual Studio JDeveloper NetBeans Eclipse Platform etc. .

With the increased availability and usage of open source software and other scaffolding solutions developers have begun to seek grab and go solutions in which pieces of pre developed code may be assembled to reduce an amount of time that the developers take to develop their software. However conventional grab and go solutions typically provide static lists on websites or in developer tools that advertise available libraries and controls. In the case of conventional open source grab and go solutions a repository may be available via the Web such that the repository may be browsed via a Web interface to explore code for copy and paste and or files that are available for download or to obtain a local copy of the repository via download or via a distributed version control system.

Various approaches are described herein for among other things recommending information that is contextually related to code using a social data graph. A machine learning technique is used to determine that the information is contextually related to the code. Examples of a machine learning technique include but are not limited to a neural network a support vector machine etc. A social data graph is a graph database that stores information associated with users in a social networking environment. For instance such information may be retrieved and or inferred from user profiles social updates etc. of the users. A social networking environment is an online service platform or domain e.g. Web site that facilitates the building of social networks e.g. social relations among people who share interests activities backgrounds real life connections etc. Examples of a social networking environment include but are not limited to Badoo Bebo Facebook Yammer Google Linkedin Myspace Orkut Renren Twitter Vkontakte Microsoft Team Foundation Server etc.

An example method is described in which a determination is made that a developer performs an operation with regard to development of designated code. Information that is contextually related to the designated code is determined using a machine learning technique. The information is associated with users in a social networking environment in a social data graph. At least a portion of the information is recommended for use with regard to the designated code based on at least the portion of the information being associated with at least one user who is included in a social network of the developer in the social data graph.

A system is described that includes operation determination logic information determination logic and recommendation logic. The operation determination logic is configured to determine whether a developer performs an operation with regard to development of designated code. The information determination logic is configured to determine information that is contextually related to the designated code using a machine learning technique. The information is associated with users in a social networking environment in a social data graph. The recommendation logic is configured to recommend at least a portion of the information for use with regard to the designated code based on at least the portion of the information being associated with at least one user who is included in a social network of the developer in the social data graph.

A computer program product is described that includes a computer readable medium having computer program logic recorded thereon for enabling a processor based system to recommend information that is contextually related to code using a social data graph. The computer program product includes a first program logic module a second program logic module and a third program logic module. The first program logic module is for enabling the processor based system to determine whether a developer performs an operation with regard to development of designated code. The second program logic module is for enabling the processor based system to determine information that is contextually related to the designated code using a machine learning technique. The information is associated with users in a social networking environment in a social data graph. The third program logic module is for enabling the processor based system to recommend at least a portion of the information for use with regard to the designated code based on at least the portion of the information being associated with at least one user who is included in a social network of the developer in the social data graph.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Moreover it is noted that the invention is not limited to the specific embodiments described in the Detailed Description and or other sections of this document. Such embodiments are presented herein for illustrative purposes only. Additional embodiments will be apparent to persons skilled in the relevant art s based on the teachings contained herein.

The features and advantages of the disclosed technologies will become more apparent from the detailed description set forth below when taken in conjunction with the drawings in which like reference characters identify corresponding elements throughout. In the drawings like reference numbers generally indicate identical functionally similar and or structurally similar elements. The drawing in which an element first appears is indicated by the leftmost digit s in the corresponding reference number.

The following detailed description refers to the accompanying drawings that illustrate exemplary embodiments of the present invention. However the scope of the present invention is not limited to these embodiments but is instead defined by the appended claims. Thus embodiments beyond those shown in the accompanying drawings such as modified versions of the illustrated embodiments may nevertheless be encompassed by the present invention.

References in the specification to one embodiment an embodiment an example embodiment or the like indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may not necessarily include the particular feature structure or characteristic. Moreover such phrases are not necessarily referring to the same embodiment. Furthermore when a particular feature structure or characteristic is described in connection with an embodiment it is submitted that it is within the knowledge of one skilled in the relevant art s to implement such feature structure or characteristic in connection with other embodiments whether or not explicitly described.

Example embodiments described herein are capable of recommending information that is contextually related to code using a social data graph. A machine learning technique is used to determine that the information is contextually related to the code. Examples of a machine learning technique include but are not limited to a neural network a support vector machine etc. A social data graph is a graph database that stores information associated with users in a social networking environment. For instance such information may be retrieved from user profiles social updates etc. of the users. A social networking environment is an online service platform or domain e.g. Web site that facilitates the building of social networks e.g. social relations among people who share interests activities backgrounds real life connections etc. Examples of a social networking environment include but are not limited to Badoo Bebo Facebook Google Linkedin Myspace Orkut Renren Twitter Vkontakte etc.

Example techniques described herein have a variety of benefits as compared to conventional software development techniques. For instance the example techniques are capable of using social relationships of a developer to recommend information that is contextually related to code that the developer is writing. Such information may help the developer find existing components to incorporate into the code determine which reusable software to use determine who to hire for a job determine quality of available code snippets for use in the code determine what people are doing with the code make targeted marketing opportunities with consumers who use the code etc. Utilizing contextual relationships may address discoverability issues that are associated with conventional techniques.

The example techniques are capable of leveraging developer to developer social relationships and developer to end user social relationships. For instance in developer to developer scenarios a developer who is fixing code may be socially connected to previous owner s and or check in s of the code. The developer may leverage resumes real contributions and skills in the social data graph to determine who to hire to solve a technical problem. The developer may leverage reputations of users and code snippets that are written by the users as provided in the social data graph to find a person to fill a new developer position. Communications between developers regarding code are included in a history of the code that is included in the social data graph. Such history may be used to make inferences about the types of problems the developers are solving and the resources that the developers may use to solve those problems.

In developer to end user scenarios the social data graph provides access to information regarding quality of code and consumer feedback regarding the code. Such information may be used to make informed decisions about code reuse and future enhancements to the code. For instance the information may indicate performance of the code a number of bugs filed profiling hot spots how many other people are actively using the code and their feedback or opinions regarding the code . The example techniques may be used to attract new users to applications. For instance social data graph may include information about which types of applications a user purchases. The example techniques may use preferences and or demographics of the user information regarding which applications are used by people in a social network of the user etc. to recommend additional applications or open source to the user. For example the user may be notified about a specified application because people in the social network of the user use the specified application.

The example techniques are capable of connecting data pertaining to source code control and check ins to social relationships. The social data graph may include information beyond classic Source Configuration Management data. For instance the social data graph may include data from conversations in Skype and or messaging services e.g. email short message service SMS instant message IM etc. discovery patterns and or usage patterns from technical forums code sample galleries and or expert websites e.g. www.stackoverflow.com documents from any suitable local or cloud based source etc. Using the social data graph as described herein may provide a software development solution that is more efficient performant and or scalable as compared to conventional techniques.

User systems A M are processing systems that are capable of communicating with servers A N. An example of a processing system is a system that includes at least one processor that is capable of manipulating data in accordance with a set of instructions. For instance a processing system may be a computer a personal digital assistant etc. User systems A M are configured to provide requests e.g. hypertext transfer protocol HTTP requests to servers A N for requesting information stored on or otherwise accessible via servers A N.

For instance a user e.g. a developer may initiate a request for such information using a client e.g. a Web browser Web crawler or other type of client deployed on a user system that is owned by or otherwise accessible to the user. In accordance with some example embodiments user systems A M are capable of accessing domains e.g. Web sites hosted by servers A N so that user systems A M may access information that is available via the domains. Such domains may include Web pages which may be provided as hypertext markup language HTML documents and objects e.g. files that are linked therein for example.

It will be recognized that any one or more user systems A M may communicate with any one or more servers A N. Although user systems A M are depicted as desktop computers in persons skilled in the relevant art s will appreciate that user systems A M may include any client enabled system or device including but not limited to a desktop computer a laptop computer a tablet computer a personal digital assistant a cellular telephone or the like.

Servers A N are processing systems that are capable of communicating with user systems A M. Servers A N are configured to execute computer programs e.g. developer tools that provide information to users in response to receiving requests from the users. For example the information may include documents e.g. Web pages images video files etc. output of executables raw data or any other suitable type of information. In accordance with some example embodiments servers A N are configured to host respective Web sites so that the Web sites are accessible to users of social based information recommendation system .

First server A is shown to include an information recommendation module for illustrative purposes. Information recommendation module is configured to recommend information that is contextually related to code using a social data graph. For example information recommendation module is capable of determining that a developer performs an action with respect to the code. For instance information recommendation module may determine that the developer acquires ownership of the code e.g. for purposes of writing the code or fixing a bug in the code that the developer checks in to the code e.g. for purposes of fixing a bug that affects a feature of the code even though the developer is not necessarily fixing that feature that the developer scrolls through and or moves a cursor through and or clicks within a method within the code that the developer pauses on a method within the code for a period of time that reaches a threshold etc. Upon determining that the developer performs the action information recommendation module may traverse a social data graph to determine information that is contextually related to the code. For instance the social data graph may be configured to associate e.g. define relationships between such information and users in a social networking environment. The social data graph may be stored in the cloud though the scope of the example embodiments is not limited in this respect.

Information recommendation module may determine that some portion of the information that is contextually related to the code is associated with user s who are in a social network of the developer. Information recommendation module may recommend that portion of the information to the developer for use with regard to the code. It will be recognized that information recommendation module may recommend less than all of the aforementioned portion of the information all of the aforementioned portion other information in addition to the aforementioned portion etc. For instance such other information may include information synthesized from available data based on machine learning heuristics analytics etc. For example assume for purposes of illustration that Alice and Bob have recently worked on code and Alice and Bob are friends with Carl whom the developer does not know but whose profile shows him to be knowledgeable in the type of code on which the developer is working. Information recommendation module may recommend that the developer obtain a review of the code from Carl and may help automate the process of doing so. It will be further recognized that information recommendation module may be or may be included in a developer tool. It will be further recognized that if someone in the future is searching for a person to provide a code review with regard to the code information recommendation module may recommend that the developer provide the requested code review based on knowledge that the developer has performed the previous action with respect to the code. Example techniques for recommending information that is contextually related to code using a social data graph are discussed in greater detail below with reference to .

Second server B is shown to include social networking module for illustrative purposes. Social networking module is configured to provide a social networking environment and to facilitate the building of social networks among users in the social networking environment who share interests activities backgrounds real life connections etc. For instance each social network may include a respective subset of the users in the social environment. The subset of users in each social network may communicate using any of a variety of techniques such as social updates. Each user may have a personal profile that includes information about the user and or topics that are of interest to the user. Social networking module may provide any such communications personal profile information and or other information that is available in the social networking environment to information recommendation module for analysis. For instance social networking module may provide such information to information recommendation module e.g. via an application programming interface API for association with the corresponding user s in the social data graph though it will be recognized that social networking module may associate the information with the corresponding user s in the social data graph.

Information recommendation module and social networking module are shown to be included in separate servers or respective groups of servers in for illustrative purposes and are not intended to be limiting. It will be recognized that information recommendation module and social networking module or any respective portions thereof may be included in a common server or a common group of servers .

Information recommendation module and or social networking module may be implemented in various ways to recommend information that is contextually related to code using a social data graph including being implemented in hardware software firmware or any combination thereof. For example information recommendation module and or social networking module may be implemented as computer program code configured to be executed in one or more processors. In another example information recommendation module and or social networking module may be implemented as hardware logic electrical circuitry. In an embodiment information recommendation module and or social networking module may be implemented in a system on chip SoC . Each SoC may include an integrated circuit chip that includes one or more of a processor e.g. a microcontroller microprocessor digital signal processor DSP etc. memory one or more communication interfaces and or further circuits and or embedded firmware to perform its functions.

Data graph includes nodes and and properties and . Node represents Alex who is a user in a social network of the developer. Node represents an engine Engine B which is written by Alex. Property indicates that Alex has received fifteen likes from other users in the social network. Property indicates that ten bugs have been fixed in Engine B. Property indicates that Engine B has been downloaded one million times. It will be recognized that data graph need not necessarily include all of the nodes and and the properties shown in . Moreover data graph may include node s and or properties in addition to or in lieu of those described herein.

The social based information recommendation system determines whether to recommend information that is included or referenced in data graph for use with regard to Engine A based on criteria such as whether the information is contextually related to Engine A whether the provider of the information is in a social network of the developer and or other suitable criteria. In this example the social based information recommendation system determines that Engine B is contextually related to Engine A and that Alex is in a social network of the developer. Accordingly the social based information recommendation system recommends Engine B to the developer.

As mentioned above the determination whether to recommend Engine B to the developer may be based on additional criteria. For instance in this example traversal of data graph reveals that Alex has received fifteen likes that ten bugs have been fixed in Engine B and that Engine B has been downloaded one million times. The aforementioned additional criteria may include whether a number of likes that Alex has is greater than a first threshold whether the number of bugs that have been fixed in Engine B is less than a second threshold whether the number of times that Engine B has been downloaded is greater than a third threshold etc.

As shown in the recommendation of Engine B to the developer is in the form of an inquiry for illustrative purposes. The inquiry indicates that Alex has been working on a library that is similar to the one in which the developer has begun to write Engine A and the inquiry asks whether the developer would like to download Alex s library which includes Engine B. For instance Alex s library may be downloaded so that the developer may replace Engine A with Engine B or so that the developer may use Engine B as a template for writing Engine A.

As shown in the method of flowchart begins at step . In step a determination is made that a developer performs an operation with regard to development of designated code. The phrase development of designated code as used herein is intended to include any one or more of designing coding testing etc. of the designated code. Examples of an operation that may be performed with regard to development of designated code include but are not limited to creating a coding project to contain the designated code e.g. typing a name of the coding project in a development tool obtaining information regarding a status and or progress of the coding project writing the designated code testing the designated code interacting with other person s e.g. team members regarding the designated code e.g. a concept of the designated code even before the designated code exists using any suitable electronic communication technique e.g. instant messaging IM persistent chat Yammer Facebook etc. searching for content and or data to be incorporated into the designated code e.g. making a call from the designated code to the content and or data placing the content e.g. code snippet in line with the designated code searching for person s to assist with the development e.g. design coding testing etc. of the designated code requesting feedback regarding the designated code performing a search regarding an issue that is encountered with regard to the designated code e.g. during writing testing building and or deploying the designated code composing an architectural diagram e.g. an architectural component diagram an architectural class diagram etc. data flow diagram sequence diagram use case diagram etc. with regard to the designated code e.g. even before the designated code exists creating and or running a build of the designated code responding to an issue regarding a test a build and or deployment of the designated code creating updating and or closing a work item e.g. an item in a to do list with regard to the designated code performing ideation with regard to the designated code e.g. introducing a concept of the designated code to determine subject matter to which the designated code is to be directed creating and or editing a story board sketch and or design e.g. user interface design regarding the designated code e.g. before the designated code is written generating a report of work that is performed on the designated code e.g. activities changes categorization of the nature of the work performed on the work in a specified time period and so on etc.

In an example implementation operation determination logic determines that the developer performs the operation. For instance operation determination logic may determine that the developer performs the operation in response to receipt of an operation indicator which specifies that the operation is performed. Operation determination logic may generate a determination instruction in response to determining that the developer performs the operation. The determination instruction instructs information determination logic to determine information that is contextually related to the designated code.

In an example embodiment step includes determining that the developer acquires ownership of the designated code. For instance the developer may acquire ownership to write the designated code or a portion thereof to fix a bug in the designated code etc.

In another example embodiment step includes determining that the developer checks in to the designated code. For example the developer may check in to the code to fix a bug that affects a feature of the designated code even though the developer is not fixing the feature. In accordance with this example the developer may check in to the code to change a string a comment or some other piece of the code while fixing the bug.

At step information that is contextually related to the designated code is determined using a machine learning technique. For instance the information may be determined in response to determining that the developer performs the operation. The information is associated with a plurality of users which are included in a social networking environment in a social data graph. The information may include code snippet s a SDK or Virtual Studio extension e.g. a Resharper product a user s name e.g. a recommendation of a user to work on the designated code file s with regard to which an issue occurs e.g. code file s external to the designated code that encounter a same performance issue as the designated code search results based on subject matter for which users in the social network of the developer have performed operations etc. In an example implementation information determination logic determines the information that is contextually related to the designated code. For instance information determination logic may determine the information that is contextually related to the designated code in response to receipt of the determination instruction . Information determination logic may generate a relation indicator to specify the information that is contextually related to the designated code.

At step at least a portion of the information is recommended for use with regard to the designated code based on at least the portion of the information being associated with user s of the plurality of users who are included in a social network of the developer in the social data graph. In an example implementation recommendation logic recommends at least the portion of the information for use with regard to the designated code. For instance recommendation logic may recommend at least the portion of the information based on the relation indicator . Recommendation logic may provide recommendation s to specify at least the portion of the information that is recommended for use with regard to the designated code. It will be recognized that recommendation logic may recommend at least the portion of the information further based on association information code information and or user information all of which are included in social data graph . Store stores social data graph .

Association information specifies which users in the social networking environment are associated with which information or portion s thereof . For instance a user may be associated with information in response to the user providing the information in response to the user being mentioned in the information in response to the information being provided to the user in response to the user discussing the information e.g. in a forum or in social update s in response to the user sharing the information with another user in response to the user accessing the information in response to the user rating the information etc. If the information includes code snippet s the user may be associated with the information in response to the user being a current owner or a former owner of the code snippet s in response to the user checking in to the code snippet s in response to the user working on the code snippet s in response to the user retrieving e.g. downloading consuming using etc. the code snippet s etc.

Code information describes the designated code and code snippets that are available to be recommended for use with regard to the designated code. For example the code information may specify a number of bugs in the designated code and or in any one or more of the code snippets a number of times any one or more of the code snippets is downloaded e.g. by users in the social networking environment or in social network s of the developer an indication of dependencies in the designated code and or in any one or more of the code snippets e.g. erroneous dependencies which are capable of breaking the designated code and or any one or more of the code snippets a history of the designated code and or any one or more of the code snippets etc. In accordance with this example the code information may correlate a history of the designated code and or any one or more of the code snippets with performance data regression data and or other data that is associated with the designated code and or any one or more of the code snippets.

User information describes the users in the social networking environment. For instance the user information may specify whether each user in the social networking environment is included in social network s of the developer and if so in which of the social network s the user is included rating s of each user e.g. overall and or in specified categories of subject matter skill s of each user duration of experience of each user with regard to software development and or specified aspect s of software development etc.

In an example embodiment step includes determining one or more code snippets of a plurality of code snippets that are contextually related to the designated code using the machine learning technique. For instance information determination module determines the one or more code snippets. Any one or more of the plurality of code snippets may be an open source code snippet though the scope of the example embodiments is not limited in this respect. In accordance with this embodiment the plurality of code snippets is associated with the plurality of users in the social data graph. In further accordance with this embodiment step includes recommending at least one code snippet of the one or more code snippets for inclusion in the designated code based on the at least one code snippet being associated with the user s who are included in the social network of the developer in the social data graph. For instance recommendation logic may recommend the at least one code snippet.

In an aspect of this embodiment step may include recommending a specified code snippet for inclusion in the designated code further based on skill s of a user who provides the specified code snippet. For example the skill s of the user may be derived from a resume of the user who provides the specified code snippet. In an example implementation recommendation logic recommends the specified code snippet. The user information may specify the skill s of the user. In accordance with this implementation recommendation logic may recommend the specified code snippet in response to receipt of the user information .

It will be recognized that alternatively recommendation logic may recommend that the specified code snippet not be used in response to receipt of the user information . For instance if the developer uses a code snippet that comes from a user who has a relatively low reputation the developer may want to reconsider using that snippet write more unit tests that cover the code snippet get an extra code review on code of the developer that uses the code snippet etc. If the developer ultimately uses the code snippet without needing to change it at all then this occurrence may positively influence the reputation of the user from whom the code snippet came.

In another aspect of this embodiment step may include recommending a specified code snippet for inclusion in the designated code further based on a reputation of a user who provides the specified code snippet within the social network of the developer. For example the reputation of the user may be based on a number of questions regarding software development that are answered by the user. In another example the reputation of the user may be assigned by other users who are in a social network of the developer. In accordance with this example the reputation may be based on a number of approvals e.g. likes that the user receives for answers that the user has provided to questions regarding software development. For instance the reputation may be based on a number of such approvals that the user receives from the providers of the respective questions. In yet another example the reputation of the user may be imported in the social network of the developer from another social network or social networking environment e.g. Stack Overflow The user information may specify the reputation of the user.

In yet another aspect of this embodiment step may include recommending a specified code snippet for inclusion in the designated code further based on a number of bugs that are discovered in the specified code snippet. For example recommending the at least one code snippet may be performed in response to the number of bugs that are discovered in the specified code snippet being less than a first threshold. In another example the code information may specify the number of bugs that are discovered in the specified code snippet and or that the number of bugs is less than the first threshold.

In accordance with this aspect step may include recommending that an identified code snippet not be included in the designated code based on a number of bugs that are discovered in the identified code snippet reaching a second threshold e.g. being greater than the second threshold or being greater than or equal to the second threshold . For example recommending the at least one code snippet may be performed in response to a determination that the identified code snippet is not to be included in the designated code. In another example the code information may specify the number of bugs that are discovered in the identified code snippet and or that the number of bugs that are discovered in the identified code snippet reaches the second threshold.

In still another aspect of this embodiment step may include recommending a specified code snippet for inclusion in the designated code further based on a number of instances of the specified code snippet that are retrieved e.g. downloaded consumed used etc. by users e.g. in the social networking environment or in the social network of the developer . For instance the code information may specify the number of instances of the specified code snippet that are retrieved by the users.

In another aspect of this embodiment step may include recommending a specified code snippet for inclusion in the designated code further based on user feedback from user s who retrieve the specified code snippet. For instance the code information and or the user information may include the user feedback.

In yet another aspect of this embodiment step may include recommending a specified code snippet for inclusion in the designated code further based on retrieval of the specified code snippet by user s in the social network of the developer. For instance such recommendation may be based on a number of users in the social network of the developer who retrieve the specified code snippet an extent to which the specified code snippet is used by users in the social network of the developer etc.

In another aspect if the developer has written code that is similar to open source code on several occasions a notice may be provided to a requestor of a code review specifying that the reviewer has a propensity for looking at open source code if the developer provides the requested code review.

In still another aspect of this embodiment step may include the steps shown in flowchart of . Flowchart may be performed by information determination logic shown in for example. For illustrative purposes flowchart is described with respect to information determination logic shown in which is an example of information recommendation module according to an embodiment. As shown in information determination logic includes review logic indicator determination logic and contextual relation logic . Further structural and operational embodiments will be apparent to persons skilled in the relevant art s based on the discussion regarding flowchart .

As shown in the method of flowchart begins at step . In step a recordation of a communication between the developer and person s is reviewed to determine an issue to be resolved with regard to the designated code. Examples of a recordation include but are not limited to a textual record e.g. email short message service SMS instant message IM etc. an audio record a video record e.g. a Skype record etc. In an example implementation review logic reviews recordation to determine the issue. In accordance with this implementation review logic may generate issue indicator which specifies the issue to be resolved with regard to the designated code.

At step a determination is made that an indicator in the social data graph indicates that a specified code snippet addresses e.g. resolves the issue. In an example implementation indicator determination logic determines that the indicator in the social graph indicates that the specified code snippet addresses the issue. For instance code information may include the indicator in social data graph . In accordance with this implementation indicator determination logic may make the determination in response to receipt of the issue indicator . Indicator determination logic may generate an address indicator which indicates that the specified code snippet addresses the issue.

At step a determination is made that the specified code snippet is contextually related to the designated code. For instance the determination may be made based on the indicator. In an example implementation contextual relation logic determines that the specified code snippet is contextually related to the designated code. For instance contextual relation logic may make the determination in response to receipt of the address indicator . Contextual relation logic may generate a relation indicator which indicates that the specified code snippet is contextually related to the designated code.

In some example embodiments one or more steps and or of flowchart may not be performed. Moreover steps in addition to or in lieu of steps and or may be performed.

It will be recognized that information determination logic may not include one or more of review logic indicator determination logic and or contextual relation logic . Furthermore information determination logic may include logic in addition to or in lieu of review logic indicator determination logic and or contextual relation logic .

Referring back to in some example embodiments one or more steps and or of flowchart may not be performed. Moreover steps in addition to or in lieu of steps and or may be performed. For instance in an example embodiment the information includes code snippet s and the method of flowchart further includes performing test s with regard to the code snippet s to generate performance information that describes performance of the code snippet s with regard to the test s . In accordance with this embodiment step includes recommending at least one of the code snippet s for inclusion in the designated code further based on the performance information.

In another example embodiment the information includes code snippet s and the method of flowchart further includes recommending additional code snippet s to the developer based on retrieval of the additional code snippet s by user s in the social network of the developer.

In yet another example embodiment the method of flowchart further includes filtering social updates that are associated with the plurality of users to determine a subset of the social updates that relate to development of software applications. For instance filter logic may filter social updates to determine a subset of the social updates that relate to development of software applications. In accordance with this embodiment step includes determining the information that is contextually related to the designated code based on the subset. For example information determination logic may determine the information based on the subset . In accordance with this example an indication of the subset may be included in the association information .

In still another example embodiment the method of flowchart further includes adding a previous owner of the designated code to the social network of the developer in response to determining that the developer performs the operation with regard to development of the designated code. In an example implementation user addition logic adds the previous owner of the designated code to the social network of the developer. User addition logic may provide a network update to the social data graph to indicate in the user information that the previous owner of the designated code is included in the social network of the developer.

In yet another embodiment the method of flowchart further includes adding user s who previously checked in to the designated code to the social network of the developer in response to determining that the developer performs the operation with regard to development of the designated code. In an example implementation user addition logic adds the user s who previously checked in to the designated code to the social network of the developer. User addition logic may provide the network update to the social data graph to indicate in the user information that the user s who previously checked in to the designated code are included in the social network of the developer.

In still another example embodiment the method of flowchart further includes recommending code snippet s to the developer based on preference s and or demographic characteristic s of the developer. For instance recommendation logic may recommend the code snippet s to the developer based on the preference s and or the demographic characteristic s of the developer.

It will be recognized that information recommendation module may not include one or more of operation determination logic information determination logic recommendation logic filter logic test logic user addition logic store and or social data graph . Furthermore information recommendation module may include modules in addition to or in lieu of operation determination logic information determination logic recommendation logic filter logic test logic user addition logic store and or social data graph .

Information recommendation module social networking module operation determination logic information determination logic recommendation logic filter logic test logic user addition logic store social data graph review logic indicator determination logic contextual relation logic flowchart and flowchart may be implemented in hardware software firmware or any combination thereof.

For example information recommendation module social networking module operation determination logic information determination logic recommendation logic filter logic test logic user addition logic store social data graph review logic indicator determination logic contextual relation logic flowchart and or flowchart may be implemented as computer program code configured to be executed in one or more processors.

In another example information recommendation module social networking module operation determination logic information determination logic recommendation logic filter logic test logic user addition logic store social data graph review logic indicator determination logic contextual relation logic flowchart and or flowchart may be implemented as hardware logic electrical circuitry.

For instance in an embodiment one or more of information recommendation module social networking module operation determination logic information determination logic recommendation logic filter logic test logic user addition logic store social data graph review logic indicator determination logic contextual relation logic flowchart and or flowchart may be implemented in a system on chip SoC . The SoC may include an integrated circuit chip that includes one or more of a processor e.g. a microcontroller microprocessor digital signal processor DSP etc. memory one or more communication interfaces and or further circuits and or embedded firmware to perform its functions.

As shown in computer includes a processing unit a system memory and a bus that couples various system components including system memory to processing unit . Bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. System memory includes read only memory ROM and random access memory RAM . A basic input output system BIOS is stored in ROM .

Computer also has one or more of the following drives a hard disk drive for reading from and writing to a hard disk a magnetic disk drive for reading from or writing to a removable magnetic disk and an optical disk drive for reading from or writing to a removable optical disk such as a CD ROM DVD ROM or other optical media. Hard disk drive magnetic disk drive and optical disk drive are connected to bus by a hard disk drive interface a magnetic disk drive interface and an optical drive interface respectively. The drives and their associated computer readable storage media provide nonvolatile storage of computer readable instructions data structures program modules and other data for the computer. Although a hard disk a removable magnetic disk and a removable optical disk are described other types of computer readable storage media can be used to store data such as flash memory cards digital video disks random access memories RAMs read only memories ROM and the like.

A number of program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM. These programs include an operating system one or more application programs other program modules and program data . Application programs or program modules may include for example computer program logic for implementing information recommendation module social networking module operation determination logic information determination logic recommendation logic filter logic test logic user addition logic store social data graph review logic indicator determination logic contextual relation logic flowchart including any step of flowchart and or flowchart including any step of flowchart as described herein.

A user may enter commands and information into the computer through input devices such as keyboard and pointing device . Other input devices not shown may include a microphone joystick game pad satellite dish scanner touch screen camera accelerometer gyroscope or the like. These and other input devices are often connected to the processing unit through a serial port interface that is coupled to bus but may be connected by other interfaces such as a parallel port game port or a universal serial bus USB .

A display device e.g. a monitor is also connected to bus via an interface such as a video adapter . In addition to display device computer may include other peripheral output devices not shown such as speakers and printers.

Computer is connected to a network e.g. the Internet through a network interface or adapter a modem or other means for establishing communications over the network. Modem which may be internal or external is connected to bus via serial port interface .

As used herein the terms computer program medium and computer readable medium are used to generally refer to media such as the hard disk associated with hard disk drive removable magnetic disk removable optical disk as well as other media such as flash memory cards digital video disks random access memories RAMs read only memories ROM and the like. Such computer readable storage media are distinguished from and non overlapping with communication media. Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wireless media such as acoustic RF infrared and other wireless media. Example embodiments are also directed to such communication media.

As noted above computer programs and modules including application programs and other program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM. Such computer programs may also be received via network interface or serial port interface . Such computer programs when executed or loaded by an application enable computer to implement features of embodiments discussed herein. Accordingly such computer programs represent controllers of the computer .

Example embodiments are also directed to computer program products comprising software e.g. computer readable instructions stored on any computer useable medium. Such software when executed in one or more data processing devices causes a data processing device s to operate as described herein. Embodiments may employ any computer useable or computer readable medium known now or in the future. Examples of computer readable mediums include but are not limited to storage devices such as RAM hard drives floppy disks CD ROMs DVD ROMs zip disks tapes magnetic storage devices optical storage devices MEMS based storage devices nanotechnology based storage devices and the like.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. It will be apparent to persons skilled in the relevant art s that various changes in form and details can be made therein without departing from the spirit and scope of the invention. Thus the breadth and scope of the present invention should not be limited by any of the above described example embodiments but should be defined only in accordance with the following claims and their equivalents.

