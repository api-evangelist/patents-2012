---

title: Systems and methods for enabling Internet co-browsing experience for multiple users
abstract: Systems and methods for enabling co-browsing are provided herein. A device, such as a web server, may execute a browser application that initiates co-browsing capabilities between a host computing device and one or more guest computing devices. Activatable code is injected and/or otherwise embedded in one or more web pages. Subsequently, using the activatable code, web browser information on the host computing device is obtained and processed for display on the one or more guest computing devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09256691&OS=09256691&RS=09256691
owner: Recursive Labs, Inc.
number: 09256691
owner_city: St. Louis
owner_country: US
publication_date: 20120710
---
Aspects of the present disclosure relate to web browsing and more particularly systems and methods for enabling multiple users to share a web browsing experience.

Collaborative browsing known as co browsing represents the joint navigation of web related content by two or more people accessing one or more web pages at the same time. Co browsing has many practical applications and may be used in a variety of different types of communications such as in customer support social connections business presentations product selection etc. Effectively co browsing allows one or more users to share an identical web browsing experience.

While various co browsing methods have been developed many co browsing systems provide limited capabilities. For example many co browsing systems fail to insure that every user s view of the web content being viewed between a viewer and a host remains the same throughout an entire co browsing session. Moreover many co browsing systems only synchronize the page location i.e. the URL of the page that is intended to be shared. As co browsing becomes more mainstream co browsing systems capable of offering more diverse co browsing functionalities such as supporting the automatic synchronization of a browser s entire state and content including viewport experience frames portlets form fields controls etc. may be needed. It is with these observations in mind among others that the various aspects of the present disclosure were developed.

Aspects of the present disclosure include methods for enabling co browsing. The method may be performed by a processor such as a computing device. The method includes receiving guest data identifying one or more guest computing devices to participate in a co browsing session with a host computing device. The method also includes activating injector code embedded within one or more websites displayed in a first web browser including a viewport on the host computing device the injector code configured to generate a second web browser that captures the viewport. The method further includes transmitting the viewport to the one or more guest devices for display.

Aspects of the present disclosure include systems for enabling co browsing. The system includes at least one processor. The system also includes a co browser application comprising modules executable by the at least one processor. The modules include a graphical user interface module to receive guest data identifying one or more guest computing devices to participate in a co browsing session with a host computing device. The modules also include a processing module to activate injector code embedded within one or more websites displayed in a first web browser including a viewport on a host computing device the injector code configured to generate a second web browser that captures the viewport and transmits the viewport to the one or more guest devices for display.

Finally aspects of the present disclosure include non transitory computer readable mediums for enabling co browsing. The non transitory computer readable medium is encoded with a browser application comprising modules executable by a processor. The modules include a graphical user interface module to received guest data identifying one or more guest computing devices to participate in a co browsing session with a host computing device. The modules also include a processing module to activate injector code embedded within one or more websites displayed in a first web browser including a viewport on a host computing device the injector code configured to generate a second web browser that captures the viewport and transmits the viewport to the one or more guest devices for display.

Aspects of the present disclosure enable co browsing or the sharing of a screen displayed on a host computing device with one or more guest computing devices to enable a co browsing experience. In various aspects program code is integrated into the source code of one or more web pages. The program code may be a set of software instructions and or modules that add functionalities and or modify existing functionalities of the web page to enable co browsing. In particular the program code may be activated to implement a browser within a browser on the host computing device that gathers processes analyzes and or otherwise captures browser information from both the host and guest computing device during a co browsing session. Subsequently the browser information may be provided to one or more guest computing devices and processed for display thereby enabling a co browsing experience between the one or more guest computing devices and the host computing device.

The host computing device and or the guest computing devices may be a personal computer work station server mobile device mobile phone tablet device processor and or other processing device. Each device may include one or more processors that process software or other machine readable instructions and may include a memory to store the software or other machine readable instructions and data. The memory may include volatile and or non volatile memory. Additionally each device may also include a communication system to communicate via a wireline and or wireless communication such as through the Internet an intranet an Ethernet network a wireline network a wireless network a mobile communications network and or another communication network. The host computing device and or the guest computing devices may further include a display not shown for viewing data such as a computer monitor and an input device not shown such as a keyboard or a pointing device e.g. a mouse trackball pen touch pad or other device for entering data and navigating through data including exams images documents structured data unstructured data HTML pages other web pages web forms web application pages and other data.

The host computing device and or the guest computing devices may include a user interface UI and respectively to receive input from a user to enable co browsing. UIs and may include a display not shown such as a computer monitor liquid crystal display for viewing data and or input forms and any combination of input output devices not shown such as a keyboard or a pointing device e.g. a mouse trackball pen or touch pad speaker and or any other type of device for receiving input to enable co browsing.

The host computing device may include a web browser such as Microsoft Internet Explorer Mozilla Firefox Safari Google Chrome etc. capable of presenting various types of web content including web pages images audio video multimedia and or any combination thereof. In one particular embodiment the web browser may be a Java enabled browser and or web browser capable of interpreting and or otherwise processing Java code and or Javascript code. While a browser capable of interpreting Java code has been described it is contemplated that any type of web browser capable of processing web content such as web pages may be included in the host computing device and guest computing devices . The web browser may be capable of executing rendering and or otherwise initiating a browser within a browser i.e. a second browser within the web browser . The browser within a browser may perform various web functions including the same functions capable of being performed by the web browser .

A user may access the UI of the host computing device to perform various web related interactions such as request web pages web content etc. In one particular embodiment a user may access the UI of the host computing device to transmit a request to the application server to initiate a co browsing session or to transmit a web page navigation request to the web server which may be a server and may include various software and or hardware components for processing web page requests such as HTTP requests to access web pages using uniform resource locator s URL . For example the web server may receive an HTTP request via a URL from the host computing device and in response provide a particular web page corresponding to the URL.

The application server may be a server and may include various hardware and or software components for processing web page or other communication requests such as HTTP requests to access web pages using URLs. The application server may also receive various web related requests from various devices e.g. the guest computing devices and may transmit web pages and or web content to the devices in response to such requests. In one particular embodiment the application server may be the processing device used to initiate the co browser application to enable and subsequently manage a co browsing session between the host computing device and the various guest computing devices .

While aspects of the present disclosure have been described as being performed using multiple devices within a computing environment such as computing environment shown in it is contemplated that such aspects may be performed locally using only a single device such as the host computing device . The co browser application may be located on the host computing device and or on the guest computing devices or elsewhere.

The web server may include a processor and or processing system that may be used to process web page requests such as HTTP requests and or access web pages . A webpage is a document or information resource that may be accessed through a web browser and displayed on a monitor or mobile device. The information within the webpage may be in HTML or XHTML format and may provide navigation to other web pages via hypertext links. For example the web server may receive an HTTP request for a particular webpage via a URL from the host computing device and in response provide a particular web page of the web pages corresponding to the URL.

The web server may include injector code which may be a code program code script module applet application and or any other type of executable code capable of being injected and or otherwise embedded into a webpage such as web pages . Once injected the injector code may be activated to generate a browser within a browser such as the browser within a browser and subsequently used to enable a co browsing session.

In one embodiment the injector code may be used to track record and or analyze various data statistics related to the web page. The type of data to be tracked by the injector code and returned to the application server in an anonymous fashion for both host and guest computing devices within a shared session may include but is not limited to user statistics on web page viewed items clicked time of page time on site mouse position mouse movement mouse speed viewport dimensions page scroll GUI module activities co browsing initiation co browsing suspension co browsing end etc.

The application server may include a database . The database may be a general repository of data including web pages web page data web page content and or any other data or information related to providing web pages and or web content etc. The database may include memory and one or more processors or processing systems to receive process query and transmit communications and store and retrieve such data. In another embodiment the database may be a database server.

The application server may include a computer readable medium CRM which may include computer storage media communication media and or another available computer readable medium that can be accessed by the processing system . For example CRM may include non transient computer storage media and communication media. By way of example and not limitation computer storage media includes memory volatile media non volatile media removable media and or non removable media implemented in a method or technology for storage of information such as machine computer readable executable instructions data structures HTML files executable script code images program modules or other data. Communication media includes machine computer readable executable instructions data structures program modules or other data.

The CRM may store executable instructions to implement the co browser application and or associated functions processes etc. Generally program modules include routines programs instructions objects components data structures etc. that perform particular tasks or implement particular abstract data types. The processing system of the application server may launch run execute interpret or otherwise perform the logical instructions and or processes of the co browser application to enable co browsing. For example in one embodiment the co browser application may include a GUI module a processing module and a browser module to enable co browsing. Other modules may also be included.

A GUI module may transmit instructions that may be processed and or executed to display one or more input forms on the host computing device to receive session initiation and or login information. Subsequently a user may interact with the one or more input forms to enter session initiation and or login information such as session expansion or instant messaging information. The session initiation and or login information may include information identifying a particular user and the guest and or guests invited to co browse the web session with the user. Each web session associated with a particular user may be encoded in a markup language such as hypertext markup language HTML LaTex Standard Generalized Markup Language SGML Extensible Markup Language XML etc. It is contemplated that any type of markup language may be used to encode and or otherwise define the web page. For example the configuration information may identify and be established by a business enterprise intending to enable co browsing capabilities for its customers and one or more web pages or all corresponding to the business enterprise such as the business enterprise s home page customer support page etc.

In one particular embodiment the session initiation and or login information may include information that articulates the presentation of a web page component that may be integrated within one of the user s associated web pages which when selected by a user may initiate the activation of program code and or a script which has been injected and or embedded within one or more of the web pages associated with the user. The session initiation and or login information may identify the enterprise s authentication credentials or a specific type of selectable web component such as a button form link icon image multimedia component etc. and may define its size shape color etc. For example referring to the business enterprise example the configuration information may indicate that the business enterprise user would like to integrate a button entitled Start Co Browsing Session with selection functionality e.g. a push button on its home page in the lower right hand corner which when selected i.e. pushed by a user may activate the injector code to enable various co browsing capabilities. In yet another embodiment a pop up window may appear on the business enterprise s home page indicating that a web page viewer of the enterprise s home page may start a co browsing session.

A processing module may process the session initiation and or login information from the injector code and insert additional code in the host computing device web browser to establish a browser within a browser on the host computing device . Once the a browser within a browser session is established all code delivered to the host computing device from the web server may be processed by the browser within a browser code rather than the original web browser . However the display of the browser within a browser experience will remain within the original web browser .

In one particular embodiment when the browser within a browser is activated the web browser renders the viewport of the host browser application e.g. web browser . is an example illustration for rendering viewports within a browser according to aspects of the present disclosure. As shown when the browser within a browser is activated a host browser viewport of a host browser application is rendered. The viewport represents the actual display of information from a web server such as web server on the host computing device and the actual visible area as rendered on the host computing device within the web browser post processing of the HTML from the web server . The viewport may be transmitted to the application server for sharing as an exact reproduction of the viewport with the guest computing devices via the rendered host browser viewport . During an active co browsing session the application server will create a notification element on both host computing device and guest computing devices via GUI module .

Unlike co browsing solutions that may only forward the HTML or document object model DOM or other content based co browsing solutions of the web session the host browser viewport may be delivered and or otherwise transmitted as a pixel by pixel rendering of the web page within the host browser application via the web server to the guest browser application . Subsequently the host browser viewport may be displayed as the rendered host browser viewport within the guest browser viewport and according to the specifications of the host browser viewport ensuring that the experience of the guest computing devices mimics mirrors emulates and or is exactly the same as the experience of the host computing device regardless of differences in the computing environments of the host computing device and the guest computing devices .

Referring back to a browser module may transmit instructions that may be processed and or executed to display one or more co browsing input forms such as an invitation window on the host computing device for initiating and or otherwise hosting a co browsing session. Specifically the browser module may activate the injector code to generate one or more private communication rooms Room at the application server . A Room may be generated on demand from executable code and represents all of the software components and or infrastructure necessary to support communications such as screen sharing and or co browsing between the host computing device and the one or more guest computing devices .

A Room represents a private communications channel enabling the host computing device to transmit its viewport e.g. viewport and all other communications such as mouse position mouse movement page scrolling page refresh chat messages privacy mode when the host computing device transmits a blackened or otherwise obscured version of its corresponding viewport to the application server instead of a live rendering of the viewport to protect the privacy of the host computing device a guest and session end i.e. Room close to and from both the application server and guest computing devices .

The generated Room may be used by the browser module to obtain or capture the viewport and or any corresponding viewport information of the web browser located on the host computing device . A viewport may be the total area within the web browser that is visible on the host computing device . Viewport information may include font information pixilation information resolution information web component coordinate information and or any other type of information related to rendering displaying the web page on the host computing device via the web browser . Accordingly the browser module may access the viewport of the web browser on the host computing device via a JavaScript or other injectible programming code browser within a browser that includes and or otherwise wraps the viewport of the web browser thereby obtaining access to the viewport rendering and control to all of the traditional functionalities of the web browser in the form of a transparent browser within a browser . Access to traditional forward back reload commands in the browser within a browser may either be provided via the GUI module from the application server or transparently passed to the web browser on the host computing device with content from web server delivered in either case to the browser within a browser while the co browsing session is active. The browser within a browser may be provided and or otherwise displayed on the host computing device via the web browser .

Once a co browsing session is established between the host computing device and the one or more guest computing devices the browser within a browser the GUI module and or the web browser may orchestrate the co browsing session between the host computing device and the one or more guest computing devices . In particular the one or more guest computing devices may continuously receive a rendered viewport of captured web pages images text multimedia and or any other type of web page data such as mouse position mouse movement and or scroll position from the host computing device via the browser within a browser and provide such data to the application server . Subsequently the application server may provide such web data to the one or more guest computing devices for display resulting in the one or more guest computing devices viewing exactly what is displayed in the viewport of the host computing device . For example in one particular embodiment the guest computing devices may continuously receive web page image data and screen coordinates corresponding to the web page image data for a portion of the display screen of the host computing device .

During an active co browsing session both the host computing device and the guest computing devices may have a visible status message indicating that the session is being shared for the host computing device the message may indicate that the host computing device is sharing their web session by for example displaying the names of the guests a user at the host computing device invited. For the guest computing devices the message may indicate that they are viewing a web session hosted by host user name. On both the host computing device and guest computing devices the specific device user may have their mouse pointer labeled as You while their pointer is located over co browsing content and the mouse pointers of the other users may be labeled with each user s respective name as identified by the host computing device . Thus the application server facilitates communication between the host computing device and the one or more guest computing devices until the co browsing session is terminated.

Either user i.e. a guest user or host user may terminate a co browsing session by selecting an end session button for example in the shared JavaScript browser window or by closing the browser. In the case a guest terminates the co browsing session the co browsing session will continue for the host and other guest s . In the case when the guest terminating the co browsing session is the last or only guest the host will be informed that the guest terminated the co browsing session and the Room will be closed. In the case the host terminates the co browsing session all guests may be immediately notified that the host terminated the co browsing session and the Room will be closed. When a termination results in a Room being closed the user who did not terminate the session may be provided with several options. For example the user may be enabled to re invite the terminated user back into a co browsing session. When a Room is closed after a successful co browsing termination all of the program modules that were loaded into the memory of the application server will be destroyed. Additionally all tracking data will be stored in the database on the application server and computing resources released for re use. On the successful termination of a co browsing session the browser within a browser on the host computing device will be terminated and the web browsing activities of the web browser on the host computing device will return to normal operations until another co browsing session is initiated on a website with configured injector code .

The description above includes example systems methods techniques instruction sequences and or computer program products that embody techniques of the present disclosure. However it is understood that the described disclosure may be practiced without these specific details. In the present disclosure the methods disclosed may be implemented as sets of instructions or software readable by a device. Further it is understood that the specific order or hierarchy of steps in the methods disclosed are instances of example approaches. Based upon design preferences it is understood that the specific order or hierarchy of steps in the method can be rearranged while remaining within the disclosed subject matter. The accompanying method claims present elements of the various steps in a sample order and are not necessarily meant to be limited to the specific order or hierarchy presented.

The described disclosure may be provided as a computer program product or software that may include a machine readable medium having stored thereon instructions which may be used to program a computer system or other electronic devices to perform a process according to the present disclosure. A machine readable medium includes any mechanism for storing information in a form e.g. software processing application readable by a machine e.g. a computer . The machine readable medium may include but is not limited to magnetic storage medium e.g. floppy diskette optical storage medium e.g. CD ROM magneto optical storage medium read only memory ROM random access memory RAM erasable programmable memory e.g. EPROM and EEPROM flash memory or other types of medium suitable for storing electronic instructions.

It is believed that the present disclosure and many of its attendant advantages will be understood by the foregoing description and it will be apparent that various changes may be made in the form construction and arrangement of the components without departing from the disclosed subject matter or without sacrificing all of its material advantages. The form described is merely explanatory and it is the intention of the following claims to encompass and include such changes.

While the present disclosure has been described with reference to various exemplary embodiments it will be understood that these embodiments are illustrative and that the scope of the disclosure is not limited to them. Many variations modifications additions and improvements are possible. More generally embodiments in accordance with the present disclosure have been described in the context of exemplary implementations. Functionality may be separated or combined in blocks differently in various embodiments of the disclosure or described with different terminology. These and other variations modifications additions and improvements may fall within the scope of the disclosure as defined in the claims that follow.

