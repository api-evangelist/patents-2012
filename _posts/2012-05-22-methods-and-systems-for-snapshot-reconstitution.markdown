---

title: Methods and systems for snapshot reconstitution
abstract: A method, computer readable medium, and a system for reconstituting a virtual snapshot of files in a file virtualization system includes forming at a file virtualization device a virtual snapshot that includes a plurality of physical snapshots associated with one or more file storage devices participating in the virtual snapshot, receiving a request for performing an operation on one or more physical snapshots in the plurality of physical snapshots, providing the one or more physical snapshots in response to the request for performing the operation when the one or more physical snapshots exists in the virtual snapshot, and reconstituting the virtual snapshot by including the one or more physical snapshots to form a reconstituted virtual snapshot in response to the request for performing the operation when the one or more physical snapshots do not exist in the virtual snapshot.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08392372&OS=08392372&RS=08392372
owner: F5 Networks, Inc.
number: 08392372
owner_city: Seattle
owner_country: US
publication_date: 20120522
---
This application is a continuation of U.S. patent application Ser. No. 12 702 849 filed Feb. 9 2010 which is hereby incorporated by reference in its entirety.

This technology generally relates to file virtualization systems and more particularly to systems and methods for reconstituting virtual snapshots in a file virtualization environment.

In a file system environment physical snapshots of the physical file system include a point in time state of the entire network accessible portion of the file system. Client computing devices in such a direct client server environment can directly obtain the physical snapshots from the servers. Unlike non virtualized file systems in which a network accessible file resides on a single storage device accessible directly to client computing devices in a virtualized file system a network accessible file system may exist on multiple storage devices transparent to the client computing devices and managed by a file virtualization device interposed between the client computing devices and the servers. In such virtualized file systems a virtual snapshot that includes an aggregation of physical snapshots may exist on multiple physical storage devices or in some cases on the same storage device but on different physical file systems. The aggregate of all the physical snapshots in a file virtualization device is required to provide the client computing devices with a complete view of the network accessible file system. If one or more of the physical snapshots making up a virtual snapshot is missing the client computing device does not get complete state of the file system via the snapshot. Generating such virtual snapshots and presenting them to requesting client computing devices is disclosed in U.S. patent application Ser. No. 12 334 281 filed Dec. 12 2008 entitled Methods for Generating a Unified Virtual Snapshot and Systems Thereof which is hereby incorporated by reference in its entirety.

However in conventional file virtualization systems if the file virtualization device experiences a catastrophic failure and a complete reconfiguration is required no technology exists that enables the file virtualization device to re learn all the snapshots managed prior to the catastrophic failure. Further the file virtualization device does not have knowledge of translating the physical snapshots into a coherent virtual snapshot after the failure.

In another scenario if a customer deploying the file virtualization device elects to purchase newer faster file virtualization device existing snapshots are difficult to be transferred to the new file virtualization device. Alternatively if the customer wishes to split a virtual volume on a file virtualization device into two or more volumes there is no technique or system that lets the new volumes to be automatically reflected in a new virtual snapshot that provides information about the splitting of the original volume into two or more volumes.

In yet another scenario if a customer is using file server based replication for data and file virtualization device clusters are front ending both primary and disaster recovery or backup sites conventional file virtualization systems fail to efficiently make the replicated snapshots available to client computing devices from the backup site file virtualization device.

The above problems are further intensified if the customer has many years of snapshots that need to be managed. Further the virtual snapshot itself is not shared with a backup recovery site which makes it very difficult to recover the state of the file system in the event of a disaster. Using conventional file virtualization devices usually such recovery if at all possible is a time consuming and tedious manual operation highly prone to errors. Furthermore using current file virtualization devices maintaining the virtual snapshots while at the same time performing operations such as reconfiguring a file switch upgrading renaming mounting and or unmounting a new volume coalescing multiple volumes into a lesser number of volumes splitting one volume into a plurality of volumes preventing accidental removal of snapshot rules and sharing snapshots between two or more file switches or file virtualization devices is complex time consuming and error prone. Unfortunately current file virtualization systems fail to address the above noted and other problems associated with virtual snapshots.

A method for reconstituting a virtual snapshot of files in a file virtualization system includes forming at a file virtualization device a virtual snapshot that includes a plurality of physical snapshots associated with one or more file storage devices participating in the virtual snapshot receiving a request for performing an operation on one or more physical snapshots in the plurality of physical snapshots providing the one or more physical snapshots in response to the request for performing the operation when the one or more physical snapshots exists in the virtual snapshot and reconstituting the virtual snapshot by including the one or more physical snapshots to form a reconstituted virtual snapshot in response to the request for performing the operation when the one or more physical snapshots do not exist in the virtual snapshot.

A computer readable medium having stored thereon instructions for reconstituting a virtual snapshot of files in a file virtualization system comprising machine executable code which when executed by at least one processor causes the processor to perform steps including forming at a file virtualization device a virtual snapshot that includes a plurality of physical snapshots associated with one or more file storage devices participating in the virtual snapshot receiving a request for performing an operation on one or more physical snapshots in the plurality of physical snapshots providing the one or more physical snapshots in response to the request for performing the operation when the one or more physical snapshots exists in the virtual snapshot and reconstituting the virtual snapshot by including the one or more physical snapshots to form a reconstituted virtual snapshot in response to the request for performing the operation when the one or more physical snapshots do not exist in the virtual snapshot.

A file virtualization device includes one or more processors and a memory coupled to the one or more processors by a bus at least one of the one or more processors is configured to execute programmed instructions for reconstituting a virtual snapshot of files in a file virtualization system stored in the memory with logic configured to implement forming at a file virtualization device a virtual snapshot that includes a plurality of physical snapshots associated with one or more file storage devices participating in the virtual snapshot receiving a request for performing an operation on one or more physical snapshots in the plurality of physical snapshots providing the one or more physical snapshots in response to the request for performing the operation when the one or more physical snapshots exists in the virtual snapshot and reconstituting the virtual snapshot by including the one or more physical snapshots to form a reconstituted virtual snapshot in response to the request for performing the operation when the one or more physical snapshots do not exist in the virtual snapshot.

The systems and methods disclosed herein offer many advantages. For example virtual snapshots can be substantially reconstituted in the event of a disaster to form a reconstituted virtual snapshot and presented to requesting client computing devices. By sharing information related to the virtual snapshot with a disaster recovery site on a regular basis reconstitution of the virtual snapshot can be performed at both local file virtualization device and a remote file virtualization device at a backup recovery site. Further the examples disclosed are advantageous in efficiently managing the integrity of the virtual snapshot irrespective of operations being performed at the file virtualization device e.g. reconfiguring a file switch upgrading renaming coalescing multiple volumes into a lesser number of volumes mounting and or unmounting a new volume splitting one volume into a plurality of volumes preventing accidental removal of snapshot rules and sharing snapshot between two or more file switches or file virtualization devices.

An example of a system used in a virtual snapshot reconstitution environment is illustrated in although the examples disclosed herein may be utilized in homogeneous network storage systems with one or more storage devices. The system includes a plurality of client computing devices communicating with a plurality of servers over a network and a LAN via a file virtualization device . According to various examples disclosed herein system is a heterogeneous multi protocol multi vendor and multi platform environment where file operations are carried out between client computing devices and servers .

The file virtualization device can be used to implement a virtualization layer transparent to the client computing devices by storing one or more virtual snapshots describing a state of the complete file system at a point in time. Network can provide responses and requests according to the HTTP based application request for comments RFC protocol or the Common Internet File System CIFS or network file system NFS protocol in this example but the principles discussed herein are not limited to these examples and can include other application protocols. For clarity and brevity in two servers and are shown but it should be understood that any number of server devices can use the exemplary network system . Likewise two client computing devices and are shown in but any number of client devices can also use the exemplary network system as well. The ellipses and the designation n in denote an unlimited number of server devices and client devices respectively.

Servers comprise one or more server computing machines capable of performing operations for example storing files physical snapshots of the file system and data related to a virtual state of the file system operating one or more Web based applications that may be accessed by network devices in the network such as client computing devices via file virtualization device and may provide other data representing requested resources such as particular Web page s image s of physical objects and any other objects responsive to the requests although the servers may perform other tasks and provide other types of resources. It should be noted that one or more of the servers may be a cluster of servers managed by a network traffic management device such as file virtualization device . Servers can be heterogeneous file storage devices or systems provided by independent vendors. Further according to various examples servers can be used to form a tiered storage arrangement where high priority data and or frequently accessed data is stored in a fast more expensive storage device whereas low priority and or relatively less accessed data can be stored in a slow less expensive storage device. Such storage tiering can be for example based upon a time stamp based policy engine although other types of policy e.g. data size based policy may be used.

The client computing devices in this example can request one or more physical snapshots associated with one or more volumes in the servers by sending a request to the file virtualization device . The file virtualization device can store an aggregate of one or more physical snapshots into corresponding one or more virtual snapshots to respond to such requests from client computing devices . In addition client computing devices can be used for other functions for example to run interface applications such as Web browsers that can provide an interface to make requests for and send data to different Web server based applications via the network . A series of applications can run on the servers that allow the transmission of data for example files configuration data cookies descriptor files namespace data and other file system data that is requested by the client computing devices . The servers can provide data or receive data in response to requests directed toward the respective applications on the servers from the client computing devices . As per the TCP packets can be sent to the servers from the requesting client computing devices to send data. It is to be understood that the servers can be hardware and can represent a system with multiple servers which can include internal or external networks. Alternatively servers may be software and can be any version of Microsoft IIS servers or Apache servers although other types of servers can be used. Further additional servers can be coupled to the network and many different types of applications can be available on servers coupled to the network .

Generally the client devices such as the client computing devices can include virtually any computing device capable of connecting to another computing device to send and receive information including Web based information. The set of such devices can include devices that typically connect using a wired and or wireless communications medium such as personal computers e.g. desktops laptops mobile and or smart phones and the like. In this example the client devices can run Web browsers that can provide an interface to make requests to different Web server based applications via the network . A series of Web based applications can run on servers that allow the transmission of data that is requested by the client computing devices . The client computing devices can be further configured to engage in a secure communication with the file virtualization device and or the servers using mechanisms such as Secure Sockets Layer SSL Internet Protocol Security IPSec Tunnel Layer Security TLS and the like.

In this example the network comprises a publicly accessible network for example the Internet which includes client computing devices although the network may comprise other types of private and public networks that include other devices. Communications such as requests from client computing devices and responses from servers take place over the network according to standard network protocols such as the HTTP and TCP IP protocols in this example but the principles discussed herein are not limited to this example and can include other protocols. Further the network can include local area networks LANs wide area networks WANs direct connections and any combination thereof other types and numbers of network types. On an interconnected set of LANs or other networks including those based on different architectures and protocols routers switches hubs gateways bridges and other intermediate network devices may act as links within and between LANs and other networks to enable messages and other data to be sent from and to network devices. Also communication links within and between LANs and other networks typically include twisted wire pair e.g. Ethernet coaxial cable analog telephone lines full or fractional dedicated digital lines including T1 T2 T3 and T4 Integrated Services Digital Networks ISDNs Digital Subscriber Lines DSLs wireless links including satellite links and other communications links known to those skilled in the relevant arts. In essence the network includes any communication medium and method by which data may travel between client computing devices servers and file virtualization device and these examples are provided by way of example only.

LAN can include a private local area network that includes the file virtualization device coupled to the one or more servers although the LAN may comprise other types of private and public networks with other devices. Networks including local area networks besides being understood by those skilled in the relevant arts have already been generally described above in connection with network and thus will not be described further here.

Each of the servers file virtualization device and client computing devices can include a central processing unit CPU controller or processor a memory and an interface system which are coupled together by a bus or other link although other numbers and types of each of the components and other configurations and locations for the components can be used. Since these devices are well known to those skilled in the relevant art s they will not be described in further detail herein.

In addition two or more computing systems or devices can be substituted for any one of the systems in the network system . Accordingly principles and advantages of distributed processing such as redundancy replication and the like also can be implemented as appropriate to increase the robustness and performance of the devices and systems of the network system . The network system can also be implemented on a computer system or systems that extend across any network environment using any suitable interface mechanisms and communications technologies including for example telecommunications in any suitable form e.g. voice modem and the like Public Switched Telephone Network PSTNs Packet Data Networks PDNs the Internet intranets a combination thereof and the like.

As shown in the example environment of network system depicted in the file virtualization device can be interposed between the network and the servers in LAN as shown in . Again the network system could be arranged in other manners with other numbers and types of devices. Also the file virtualization device is coupled to network by one or more network communication links and intermediate network devices such as routers switches gateways hubs and other devices not shown . It should be understood that the devices and the particular configuration shown in are provided for exemplary purposes only and thus are not limiting in number or type.

Generally the file virtualization device is an exemplary data management device that provides a layer of intelligence in the network and LAN eliminating the inflexible mapping which typically ties client computing devices to file servers for example servers . The file virtualization device decouples the logical access to files from their physical location so files are free to move and storage devices e.g. servers are free to change without disrupting users applications or administrators. File virtualization device implements intelligent file virtualization that simplifies data management further by providing automated policy based management across heterogeneous storage environments. File virtualization device is advantageous for example in reducing storage expenditures and management overhead and accelerated business workflows. An example file virtualization device can be the ARX Series devices provided by F5 networks Inc. of Seattle Wash. File virtualization device can be configured to plug directly into existing IP Ethernet network enabled by network and or LAN in substantial real time for virtualizing heterogeneous file storage devices e.g. servers that present file systems via NFS and or CIFS for example. According to one example file virtualization device does not connect directly to a storage area network SAN but can manage SAN data presented through a gateway or server e.g. any of servers without changing existing infrastructure in system . File virtualization device appears virtually as a single data storage device to client computing devices and as a single CIFS or NFS client to servers and is configured to carry out data management rather than storage management although according to some examples file virtualization device may be configured to carry out certain storage management operations depending on specific applications for which file virtualization device may be used for. For example file virtualization device may be configured to automate common storage management tasks e.g. data migration storage tiering and or load balancing which take place without affecting access to the file data or requiring re configuration of file system s on client computing devices . File virtualization device creates a file virtualization layer for managing metadata that tracks the location of files and directories that are distributed across servers in this example. By way of example only file virtualization device presents a global namespace view of the data which is an aggregation of the underlying file systems and masks changes to underlying storage systems from users and applications of client computing devices .

In some examples file virtualization device can handle requests destined for one or more servers and as alluded to earlier may take the form of one or more TCP IP data packets originating from the network passing through one or more intermediate network devices and or intermediate networks until ultimately reaching the file virtualization device for example. In any case the file virtualization device may manage the various physical snapshots associated with individual volumes and shares by aggregating them into virtual snapshots stored in a configuration database attached to the file virtualization device in accordance with the processes and systems described further below in connection with for example.

Referring now to a partly functional and partly schematic block diagram of file virtualization device is illustrated. It is to be noted that although a single file virtualization device is shown in various examples can also include a plurality of file virtualization devices similar to file virtualization device to perform the methods described herein. File virtualization device includes a data plane a control plane an input output device and a display although file virtualization device can include other components for example power backup system power supply and cooling systems and other electronic circuitry to communicate with client computing devices and servers via network and LAN respectively. File virtualization device is utilized by client computing devices to conduct one or more operations with one or more of the servers such as to view one or more physical snapshots of files on servers store a file delete a file create a file and restore a file by way of example only although other numbers and types of systems could be utilizing these resources and other types and numbers of functions could be performed. In some examples file virtualization device is used for reconstituting or rebuilding virtual snapshots comprising a plurality of physical snapshots associated with one or more file storage devices e.g. servers participating in the virtual snapshot as described in more detail below with respect to .

By way of example only data plane functions to provide a data path that handles non metadata operations at wire speed and control plane functions to provide handling of operations that affect metadata and migration of file data on servers . Each path provided by data plane and control plane respectively has dedicated processing and memory resources and each can scale independently based upon varying network and storage conditions. Further by way of example only data plane and control plane enable file virtualization device to provide an enterprise scale functionality for handling greater than two billion files at a throughput greater than 2 GBps in a single switch such as the file virtualization device . According to one example control plane is configured to provide comprehensive logging reporting hosting Simple Network Management Protocol SNMP and other protocols a call home functionality from file virtualization device to a customer support site and port mirroring during various file operations.

In this example data plane includes a data plane processor CPU a data plane memory and an input output interface coupled to each other through an internal data plane bus . Similarly in this example control plane includes a control plane processor CPU a control plane memory and a configuration database for storing one or more virtual snapshots related to the file system managed by file virtualization device all coupled together by an internal control plane bus . Data plane CPU and control plane CPU can be each be characterized by any one or more of the following component configurations computer readable medium and logic circuits that respond to and process instructions fetched from the data plane memory a microprocessor unit such as those manufactured by Intel Corporation those manufactured by Motorola Corporation those manufactured by Transmeta Corporation of Santa Clara Calif. the RS 6000 processor such as those manufactured by International Business Machines a processor such as those manufactured by Advanced Micro Devices or any other combination of logic circuits capable of executing the systems and methods described herein. Still other examples of the data plane CPU can include any combination of the following a microprocessor a microcontroller a central processing unit with a single processing core a central processing unit with two processing cores or a central processing unit with more than one processing core. In some examples control plane CPU can be a SiByte MIPS core processor provided by Broadcom Corporation of Irvine Calif.

In some examples the internal control plane bus and data plane bus can be used by the control plane CPU and data plane CPU respectively to communicate with one or more input output I O devices via input output interface . In some examples the control plane bus and data plane bus can be anyone of the following types of buses a VESA VL bus an ISA bus an EISA bus a Micro Channel Architecture MCA bus a PCI bus a PCI X bus a PCI Express bus or a NuBus. Other examples of the file virtualization device include display that communicates with the data plane CPU and or control plane CPU via an Advanced Graphics Port AGP .

Included within some examples of the data plane and control plane are the data plane memory and control plane memory respectively both of which can be any one of the following types of memory SRAM BSRAM or EDRAM. Other examples include data plane memory that can be anyone of the following types of memory Static random access memory SRAM Burst SRAM or SynchBurst SRAM BSRAM Dynamic random access memory DRAM Fast Page Mode DRAM FPM DRAM Enhanced DRAM EDRAM Extended Data Output RAM EDO RAM Extended Data Output DRAM EDO DRAM Burst Extended Data Output DRAM BEDO DRAM Enhanced DRAM EDRAM synchronous DRAM SDRAM JEDECSRAM PCIOO SDRAM Double Data Rate SDRAM DDR SDRAM Enhanced SDRAM ESDRAM SyncLink DRAM SLDRAM Direct Rambus DRAM DRDRAM Ferroelectric RAM FRAM disk type memory tape memory spinning storage media or any other type of memory device capable of executing the systems and methods described herein. In some examples control plane memory can include a battery backed NV RAM to store transient packet related data and other information related to reconstitution of virtual snapshots thereby enabling integrity of in flight data operations. In some other examples control plane memory can store an operating system used for file virtualization device and log files generated during operation of file virtualization device .

One example of the file virtualization device provides support for anyone of the following installation devices a floppy disk drive for receiving floppy disks such as 3.5 inch 5.25 inch disks or ZIP disks a CD ROM drive a CD R RW drive a DVD ROM drive tape drives of various formats USB device a bootable medium a bootable CD a bootable CD for GNU Linux distribution such as KNOPPIX a hard drive or any other device suitable for installing applications or software. Applications can in some examples include a client agent or any portion of a client agent. The file virtualization device may further include a storage device not shown separately that can be either one or more hard disk drives or one or more redundant arrays of independent disks where the storage device is configured to store an operating system software programs applications or at least a portion of the client agent. A further example of the file virtualization device can include an installation device that is used as the storage device.

Furthermore the file virtualization device may include the input output interface in the data plane to communicate with network LAN a Wide Area Network WAN or the Internet through a variety of connections including but not limited to standard telephone lines LAN or WAN links e.g. 802.11 T1 T3 56 kb X.25 SNA DECNET broadband connections e.g. ISDN Frame Relay ATM Gigabit Ethernet Ethernet over SONET wireless connections or some combination of any or all of the above. Connections can also be established using a variety of communication protocols e.g. TCP IP IPX SPX NetBIOS Ethernet ARCNET SONET SDH Fiber Distributed Data Interface FDDI RS232 RS485 IEEE 802.11 IEEE 802.11a IEEE 802.11b IEEE 802.11g CDMA GSM WiMax and direct asynchronous connections . One version of the file virtualization device includes a network interface e.g. input output interface able to communicate with additional computing devices via any type and or form of gateway or tunneling protocol such as Secure Socket Layer SSL or Transport Layer Security TLS or the Citrix Gateway Protocol manufactured by Citrix Systems Inc. of Fort Lauderdale Fla. Versions of the network interface device can comprise anyone of a built in network adapter a network interface card NIC a PCMCIA network card a card bus network adapter a wireless network adapter a USB network adapter a modem or any other device suitable for interfacing the file virtualization device to a network the file virtualization device being capable of and configured to perform the methods and implement the systems described herein.

In various examples the file virtualization device can include any one of the following input output device a keyboard a pointing device a mouse a gesture based remote control device an audio device track pads an optical pen trackballs microphones drawing tablets video displays speakers inkjet printers laser printers and dye sublimation printers or any other input output device able to perform the methods and systems described herein. Input output device may in some examples connect to multiple input output devices external to file virtualization device . Some examples of the input output device may be configured to provide storage or an installation medium while others may provide a universal serial bus USB interface for receiving USB storage devices such as the USB Flash Drive line of devices manufactured by Twintech Industry Inc. Still other examples of input output device may be a bridge between the data plane bus control plane bus and an external communication bus such as a USB bus an Apple Desktop Bus an RS 232 serial connection a SCSI bus a FireWire bus a FireWire bus an Ethernet bus an AppleTalk bus a Gigabit Ethernet bus an Asynchronous Transfer Mode bus a HIPPI bus a Super HIPPI bus a SerialPlus bus a SCI LAMP bus a FibreChannel bus or a Serial Attached small computer system interface bus. Further file virtualization device can be single powered or dual powered depending upon specific user needs.

In various examples display in the file virtualization device is used to display information such as a status message a power down or power up information a file status or directory status although other types and amounts of information can be displayed in other manners. The display can include a computer display screen such as a CRT or LCD screen although other types and numbers of displays e.g. LED displays could be used.

File virtualization device configured to manage file virtualization and the generation storage presentation and reconstitution of unified virtual snapshots although other numbers and types of systems can be used and other numbers and types of functions can be performed. Data plane CPU and control plane CPU execute one or more programs of stored instructions for one or more aspects of managing file virtualization and the reconstitution of unified virtual snapshots although the data plane CPU and control plane CPU could execute other numbers and types of programmed instructions. File virtualization device can be configured in a manner that data plane CPU and control plane CPU may also include a computer readable medium having instructions stored thereon for one or more aspects of reconstituting a virtual snapshot as described herein which when executed by a processor cause the processor to carry out the steps necessary to implement the methods as described and illustrated herein. The examples of file virtualization device provide numerous advantages. For example file virtualization device can be used to perform real time management of live data dynamic load balancing in line file placement in which files are not placed on the wrong share and then migrated after the error in file placement is detected without reliance on stubs or redirection. Further file virtualization device can reduce data outages and business disruption enable faster migrations with low operational overhead and without any client reconfiguration.

By way of example only data plane and control plane in file virtualization device are configured to translate a client request received from client computing devices over network at the input output interface of data plane into a request from file virtualization device to servers over LAN . Upon receipt of the request data plane communicates with control plane to search for virtual snapshot data related to the request in a configuration database . Control plane returns data related to the request to data plane which then forwards it to file data and metadata stores in servers . Alternatively file virtualization device may be configured to receive responses from file data and metadata stores in servers . In such a scenario file virtualization device can store outcome of various file operations into a virtual snapshot described in more detail in in a configuration table for virtual snapshots in configuration database within control plane . Further file virtualization device can forward data in a virtual snapshot to a requesting client computing device in the client computing devices based upon the request from the client computing device. File virtualization device for example issues such a reply to the client computing devices using information gathered from respective file data and metadata stores in servers .

By way of example only configuration database can be a relational database including various fields records and files used in conjunction with a database management system although other types of databases may also be used as known to one of ordinary skill in the art. In some examples configuration database is within file virtualization device . Alternatively configuration database may be attached physically outside file virtualization device . According to various examples disclosed herein configuration database contains all of the file virtualization device s configuration information which is specific to each customer s needs. For example configuration database has one or more states of the virtual snapshot data related to the network IP addresses to use the usernames passwords to administer the file virtualization device the virtualization layer description the IP addresses client computing device access to get to virtualized file systems for example system and other network and device related information for file virtualization device . In one example configuration database can be an object manager database OMDB that stores one or more virtual snapshots in configuration table as explained in detail in . Further configuration database may be distributed among various rule and policy engines executing on file virtualization device .

Referring to an example of a virtual snapshot stored in configuration table of configuration database is illustrated although configuration table may store a plurality of virtual snapshots similar to virtual snapshot . Virtual snapshot is created by requesting or invoking a capture of physical snapshots of content on various servers using for example an application programming interface API or a command line interface CLI . Once all of the physical snapshots have been captured or otherwise completed by file virtualization device the unified virtual snapshot is generated and storage data communications are resumed. The unified virtual snapshot comprises the captured physical snapshots which are mapped together to form the virtual snapshot . In addition a single physical snapshot can be mapped to a plurality of virtual snapshots similar to virtual snapshot . According to one example virtual snapshot is composed of one or more physical snapshots and can span multiple file systems or file servers e.g. servers depending on configuration of the file system in servers . A physical snapshot is a point in time state of file system that exists on a file server in the plurality of servers . For example the physical snapshot can be created by a file server among servers e.g. via a schedule . Alternatively the physical snapshot may have been created by the file virtualization device when creating the virtual snapshot . According to one example each of the plurality of physical snapshots includes a time dependent state of the files in system .

According to the example shown in virtual snapshot includes records e.g. a virtual snapshot configuration record although the virtual snapshot may include other data and a plurality of records. Virtual snapshot configuration record includes for example a header field that contains data about virtual snapshot name a date and time of creation of virtual snapshot a virtual volume name a total number of member physical snapshots associated with the virtual volume and an identification number for the header field .

In this example virtual snapshot configuration record contains information related to a set of physical snapshots although virtual snapshot configuration record may include a larger or a smaller number of physical snapshots as can be contemplated by one of ordinary skill in the art after reading this disclosure. Physical snapshot includes various fields for example a filer name field indicating which of the servers physical snapshot belongs to a member identification number for the physical snapshot a network address e.g. an IP address for the physical snapshot a physical snapshot name a member share pathname to determine an access to the physical snapshot from a perspective of client computing devices and information about type of data referred to by the physical snapshot although the physical snapshot may include additional or lesser number of fields and data. Similarly physical snapshots and may contain fields similar to physical snapshot and will not be described in detail herein.

It is to be noted that although physical snapshots are shown as part of virtual snapshot one or more of physical snapshots may also be part of other virtual snapshots apart from virtual snapshot . For example various physical snapshots e.g. physical snapshots can be related to various virtual snapshots e.g. virtual snapshot by a mapping table e.g. Table 1 below stored in configuration database shown below although other forms of forming associations between physical snapshots and virtual snapshots could be used.

Accordingly in Table I by way of example only physical snapshot can have a physical snapshot name acopia1 is associated with a virtual snapshot daily.1 and is allotted a path vol vol1 on file virtualization device . According to the relationship column in Table I physical snapshot can be associated with a share sh1 on a volume vol1 on any of servers and has an updating periodicity of once a day daily . Physical snapshot therefore is denoted with a namespace and rule as ns1 vol1 sh1 daily. Similarly other physical snapshots are mapped to virtual snapshots and are allotted namespace and rules.

Referring now to a detailed view of namespace and rules for various physical snapshots with respect to servers are illustrated. In this example configuration database in file virtualization device provides namespace and rule engines for four exemplary physical snapshots associated with four exemplary shares sh1 sh2 sh3 and sh4 on three exemplary volumes vol1 vol3 on servers e.g. vol 1 and vol2 are on server and vol3 is on server although other numbers and types of shares and volumes may be used depending upon a state of the file system as will be apparent to one of ordinary skill in the art after reading this disclosure.

The example arrangement shown in can be stored as a file in configuration database . By way of example only such a file can be written as a code shown in Table 2 below.

In this example configuration database is used to maintain data related to physical snapshots using rule engines that operate to update physical snapshots based upon a scheduler shown as sched1 . Shares are spaces allotted on volumes on respective servers as shown. Each of shares fall under one or more rule engines to form respective physical snapshots. It is to be noted that although two rule engines are shown a higher or a lower number of rule engines may be used.

As discussed above with respect to the namespace shares volumes and rules form one or more physical snapshots that denote a point in time state of a file system for example system of . In this example prior to creation of virtual snapshots e.g. virtual snapshot by file virtualization device a set of descriptor files unique to each of physical snapshots are written on servers . Descriptor files include data about physical snapshots e.g. that enable file virtualization device to reconstitute physical snapshots into a virtual snapshot by relying on existence of data external to the file virtualization device . By way of example only during a scenario where virtual snapshot is not available file virtualization device can rely on descriptor files to rebuild or reconstitute the virtual snapshot into a reconstituted virtual snapshot as will be described in detail in . Alternatively file virtualization device may rely on other forms of external data e.g. data related to physical snapshots encoded onto various local databases in servers to reconstitute virtual snapshot . One exemplary way to maintain and provide external data to file virtualization device is to make it a part of the virtual snapshot the file virtualization device takes. This is accomplished by writing one or more descriptor files to one or more directories of each share among shares participating in the virtual snapshot prior to taking the actual virtual snapshot . When the file virtualization device invokes a snapshot interface of servers the written snapshot descriptor files become a permanent part of each of the physical snapshots e.g. physical snapshots . The information written to descriptor files can be used by the file virtualization device or another switch similar to file virtualization device to re associate or reconstitute the physical snapshots into one or more virtual snapshots e.g. virtual snapshot .

According to one example descriptor files are each unique snapshot files that are created in each of shares that is a part of the virtual snapshot . If the file virtualization device configuration is such that grouping takes place multiple snapshot descriptor files are created each with unique information on different directory paths in the same physical snapshot e.g. physical snapshot . For example if there are two shares in shares that map to a common file server file system in servers there are two unique snapshot descriptor files in two directory path locations on the file system in servers although a higher or lower number of shares and descriptor files may be used. By way of example only each of snapshot descriptor files is written to a specific directory on each of shares participating in the physical snapshot before the virtual snapshot is initiated. Further since each descriptor file is written into each of shares and each of shares can be imported by one file virtualization device there is no chance of a collision. Once the snapshot is initiated the snapshot descriptor file becomes a permanent part of the snapshot. When the file virtualization device has completed the physical snapshot operation to create physical snapshots the snapshot descriptor file may be removed from all relevant shares. The snapshot descriptor files contain information describing how a physical snapshot e.g. physical snapshot relates to a configuration of file virtualization device stored for example in configuration database . By way of example only snapshot descriptor files can be created in a format that is easily parsed and is easily extensible by file virtualization device and servers and can support internationalized character sets and other information useful in rebuilding virtual snapshot into a reconstituted virtual snapshot.

According to one example snapshot descriptor files written for each of shares can contain virtual characteristics associated with shares . For example only these virtual characteristics can include a name of the file virtualization device that initiated the virtual snapshot a version number of software used for file virtualization device graphical user interface GUI of file virtualization device that initiated the virtual snapshot a virtual snapshot time for example in Coordinated Universal Time or UTC a namespace name a volume name for each of volumes a snapshot rule name a snapshot rule schedule name a snapshot instance number a snapshot generation number a snapshot rule presentation name a snapshot rule retain count for trouble shooting purposes for example and a snapshot report prefix and other information for example a location information where a metadata file for a physical snapshot is located shown for example as sh1 share1 in descriptor file in .

According to another example one or more of descriptor files can include a list of all shares for each namespace NS shown in Table 2 volumes and rules in rule engines that make up the virtual snapshot for example for trouble shooting purposes . The share information for each of shares includes for example share name used by file virtualization device object name for each of shares used by respective servers network address for servers e.g. IP address a physical share name for each of shares and a primary share flag for each of shares which flag is set if a particular share in shares is the destination share for the metadata file associated with a corresponding physical snapshot among physical snapshots .

According to one example during creation of virtual snapshot for each physical file system in servers to be snapped or recorded at an instance in time a unique snapshot descriptor file e.g. descriptor file per share for each of shares is created. If a descriptor file e.g. descriptor file already exists then it is overwritten. By way of example only when a grouped physical snapshot including multiple physical snapshots is taken multiple unique snapshot descriptor files can reside on the physical file system being snapped or recorded. When the snapshot operation is successful for all physical snapshots the snapshot information is stored in the configuration table of configuration database e.g. in an OMDB format well known to one of ordinary skill in the art .

According to one example descriptor files can be sent to a backup recovery data storage mirror site on a regular or an as and when required basis. Such backup of descriptor files can be useful for example during reconstituting virtual snapshot in a catastrophic disaster scenario affecting system where data corresponding to physical snapshots and virtual snapshot is destroyed although sending descriptor files and other information from system to backup recovery data storage mirror site may be useful in other scenarios also as described below in additional examples. Backup recovery data storage mirror site can be a site physically separate from system and can be a part of an independent data recovery site that handles requests from client computing devices when system is unavailable for various reasons. By way of example only backup recovery data storage mirror site can be in a separate building from system within a local campus of an organization deploying system which is the primary site and connected to system by a high speed fiber optic link for example. Alternatively backup recovery data storage mirror site may be hundreds of miles away from system in a different city state country or continent for example.

The operation of an example process for reconstituting a virtual snapshot at file virtualization device shown in which may be run on the file virtualization device will now be described with reference back to in conjunction with a flow diagram shown in . The flow diagram in is representative of example machine readable instructions for implementing the file virtualization device and or the process of reconstituting a virtual snapshot using a network device e.g. file virtualization device . In this example the machine readable instructions comprise an algorithm for execution by a a processor b a controller and or c one or more other suitable processing device s . The algorithm may be implemented in software stored on tangible computer readable media such as for example a flash memory a CD ROM a floppy disk a hard drive a digital video versatile disk DVD or other memory devices but persons of ordinary skill in the art will readily appreciate that the entire algorithm and or parts thereof could alternatively be executed by a device other than a processor and or implemented in firmware or dedicated hardware in a well known manner e.g. it may be implemented by an application specific integrated circuit ASIC a programmable logic device PLD a field programmable logic device FPLD a field programmable gate array FPGA discrete logic etc. . For example at least some of the components of the file virtualization device could be implemented by software hardware and or firmware. Also some or all of the machine readable instructions represented by process of the flowchart of may be implemented manually. Further although the example algorithm is described with reference to the flowchart illustrated in persons of ordinary skill in the art will readily appreciate that many other methods of implementing the example machine readable instructions may alternatively be used. For example the order of execution of the blocks may be changed and or some of the blocks described may be changed eliminated or combined.

Referring now to in step file virtualization device receives one or more requests from one or more of client computing devices for reconstituting one or more virtual snapshots e.g. virtual snapshot . The requests from client computing devices can be for a specific physical snapshot e.g. physical snapshot or the requests may include requests for performing an operation on one or more physical snapshots . Further the requests from client computing devices may include requests for viewing a complete virtual snapshot e.g. virtual snapshot including all physical snapshots . Such requests from the client computing devices can arise or can be triggered in response to a variety of situations or events. By way of example only such a request may be received because the file virtualization device experiences a catastrophic failure and a complete reconfiguration of the file virtualization device is required so that the file virtualization device has to re learn all the snapshots managed prior to the failure and a translation of physical snapshots into virtual snapshot is required. In another exemplary scenario a customer deploying file virtualization device may elect to purchase a newer and faster version of file virtualization device for which existing virtual snapshots e.g. virtual snapshot managed by file virtualization device need to be transferred to the newer file virtualization device . Further by way of example only in another scenario that can trigger requests for reconstituting virtual snapshots stored by configuration table of configuration database of file virtualization device a customer using file server based replication with servers for data where the file virtualization device front ends both the primary site of system and backup recovery data storage mirror site may require a file virtualization device at the backup recovery data storage mirror site to make replicated virtual snapshots available to client computing devices .

In yet another exemplary scenario a customer deploying the file virtualization device may desire to change the file storage topology of system by splitting one or more volumes and may need to accordingly reconstitute and transfer data about the virtual snapshot to reflect the newer volumes. Other exemplary scenarios in which virtual snapshot reconstitution requests may be received from client computing devices are discussed in detail below with respect to various exemplary use cases. According to one example request for reconstituting a virtual snapshot from one or more client computing devices can be obtained via a command line interface program that client computing devices can access at the file virtualization device . Alternatively client computing devices may send the request in step via a graphical user interface GUI installed at the client computing devices .

In step based upon the requests from client computing devices file virtualization device checks whether the requested physical snapshot exists in the virtual snapshot . If the requested physical snapshot e.g. physical snapshot exists in the virtual snapshot the flow proceeds to step where file virtualization device provides the virtual snapshot including the requested physical snapshot to the requesting client computing device among client computing devices and the process of flowchart ends.

If the requested physical snapshot does not exist in the virtual snapshot stored in configuration in step file virtualization device initiates a search for a snapshot descriptor file e.g. descriptor file associated with the requested physical snapshot on servers . In order to provide requesting client computing devices with an easy way to see which physical snapshots are available on shares file virtualization device performs a survey of the physical snapshots that are seen through the shares in one or more managed volumes . A physical snapshot survey is used by file virtualization device to determine what physical snapshots are available for reconstitution based upon the reconstitution request from client computing devices . A reporting mechanism reports the information in any snapshot descriptor files available on physical snapshots . To enable the searching in step by the file virtualization device a surveying mechanism to list the visible physical snapshots on one or more shares attached to one or more volumes is provided. The surveying function implemented by the file virtualization device provides the ability to display the contents of any snapshot descriptor files that exist on the visible physical snapshots and a method to trouble shoot and plan reconstitution of virtual snapshot for fulfilling one or more requests from client computing devices .

According to one example the file virtualization device s searching for the requested physical snapshot using the surveying capability can be performed via a command line interface CLI command. By way of example only a CLI command to enable to surveying functionality of file virtualization device can be of the form 

where is the name of a namespace configured on the file virtualization device is a configured volume e.g. volume in a namespace e.g. NS in Table 2 is a configured share in shares in volumes namespace detailed instructs the file virtualization device to report the physical snapshot names shown in for example and the content of any snapshot descriptor files found associated with the physical snapshots origin is a keyword that allows a user of requesting client computing devices to specify a filter for what types of physical snapshots to display on display for example arx instructs the file virtualization device to report only those physical snapshots created by the file virtualization device external instructs the file virtualization device to report only on physical snapshots not created by the file virtualization device and report prefix allows the user to set the report prefix. Alternatively the surveying capability of file virtualization device initiated in response to the request from one or more client computing devices may be via a graphical user interface icon GUI on client computing devices .

Once invoked the CLI command generates a survey report to a standard reports directory in file virtualization device . By way of example only such surveying command can generate two types of physical snapshot reports. The first type may contain a list of physical snapshots presented using shares in given virtual volumes also referred to as a summary report . The second type of report can contain details of the physical snapshots and the contents of associated snapshot descriptor files also referred to as a detailed report . By way of example only a sample survey report of the first type summary report is shown in Table 3 below.

In step each of descriptor files found corresponding to physical snapshots is read and parsed to form a snapshot manage command script file. If a particular descriptor file corresponding to a particular physical snapshot is not found then that physical snapshot is skipped during searching. In this example the snapshot manage command is executed to form a snapshot manage script file. When executed by the file virtualization device based upon information data stored in snapshot descriptor files on physical snapshots the file virtualization device via snapshot manage command automatically imports the physical snapshots . The target of the import operation may be either a namespace volume rule of the same name or of different names. All shares of the target are searched for physical snapshots and each snapshot is searched for a snapshot descriptor file e.g. descriptor file . By way of example only the snapshot manage command can have a format or syntax shown below although other formats may be used as will be apparent to one of ordinary skill in the art after reading this disclosure 

where is the namespace context for the snapshot rule in one or more rule engines is one of volumes in containing the snapshot rule is the name of the snapshot rule in and where the snapshot is managed and is the object managing the physical snapshot requested is the name of the physical snapshot on a particular server in servers .

According to one example the snapshot manage command can be used when a plurality of shares e.g. shares and exist in the target volume . When the snapshot manage command is executed the user specified share for the specified physical snapshot is searched. In this example the created on parameter inputs a date time in the format of for example. This created on parameter determines the virtual snapshot instance that the requested physical snapshot will be part of. The same date time can be used between invocations of the snapshot manage command to ensure that multiple physical snapshots are managed into the same virtual snapshot . Alternatively the snapshot manage command script file of file virtualization device may be executed via a graphical user interface icon GUI on client computing devices . Based on the results of executing the snapshot manage command a report can be generated for errors status of execution of the snapshot manage command in terms of a success or a failed identifier. Further file virtualization device is configured to execute a plurality of snapshot manage command script files for reading and parsing descriptor files and verifying whether physical snapshots exist on shares as parts of volumes on servers .

When a matching physical snapshot e.g. physical snapshot is found the configuration table of configuration database is checked to see if there is a matching record in the target rule of one or more rule engines . If a record in the configuration table for this physical snapshot and target rule does not exist it is created based on the command line options. If the physical snapshot already exists in the configuration table the snapshot command script file executes successfully.

In step file virtualization device executes a snapshot reconstitution script file to form a reconstituted virtual snapshot that includes physical snapshots depending upon information read from descriptor files and is substantially identical to the original virtual snapshot . When the file virtualization device takes a virtual snapshot e.g. virtual snapshot it initiates multiple physical snapshots all of which are uniquely associated with one or more snapshot descriptor files . The snapshot descriptor files provide the configuration state of the file virtualization device that initiated the virtual snapshot . For reconstituting virtual snapshot in step file virtualization device executes the snapshot reconstitute command to know which of shares to search for the supplied physical snapshot name in the request received from user computing devices in step . In one example the file virtualization device is configured to modify this snapshot reconstitution command to re group physical snapshots as they are imported.

Further file virtualization device may execute snapshot reconstitution script to perform the actual reconstitution of a set of physical snapshots into the corresponding or different snapshot rules in rule engines . In one example the snapshot reconstitution script contains the snapshot manage command per rule per share per physical snapshot in system . Furthermore if a physical snapshot has accidentally been reconstituted into a rule the snapshot reconstitution script can be executed to remove one or more physical snapshots from the virtual snapshot without removing the one or more physical snapshots from the servers .

According to one example the snapshot reconstitution command script includes a plurality of snapshot manage commands that when executed by file virtualization device form a reconstituted virtual snapshot. The snapshot reconstitution command script file targets one or more namespaces volumes and or rules. Further as and when new configuration objects e.g. a new physical snapshot a new server or a new volume is added the snapshot reconstitution command script file can be updated to reflect the change. In one example the snapshot reconstitution command script file can be in the Perl programming language although other proprietary open source and or customized programming languages may also be used to create the snapshot reconstitution command script files. An example format of a snapshot reconstitution command is shown below although other formats and syntax may be used for modifying the snapshot reconstitution command script file as will be apparent to one of ordinary skill in the art after reading this disclosure.

where is a source namespace which configured on the file virtualization device is an optional source volume in namespace is a snapshot rule all virtual snapshots are reconstituted into this rule origin is an optional keyword that instructs the file virtualization device to reconstitute virtual snapshots that were originated by another file virtualization device is a name of the origin namespace to match is the name of the origin volume in namespace to match is the name of the origin rule in volume to match output script is an optional keyword that instructs the file virtualization device to write the output script to a user specified script file for use by client computing devices is a user specified file name that the script output is written to report prefix is an optional keyword that instructs the file virtualization device to set a report prefix for all of the generated snapshot manage commands is an optional report file name verbose is an optional keyword that indicates that a detailed output report will be generated when the CLI snapshot reconstitution command script is executed by the file virtualization device. Alternatively the reconstitution script may be implemented using a graphical user interface GUI button on file virtualization device s display or on a display of one or more client computing devices . An example output of an executed snapshot reconstitution command script file is shown in Table 4 below based upon an example snapshot reconstitution command switch snapshot reconstitute ns1 vol1 daily .

In step based upon the physical snapshot names acopia 12008072917004ba36c10 30c6 11dd ba58 b9262f5c441e acopia22008073017004ba36c10 30c6 11dd ba58 b9262f5c441e and acopia32008073117004ba36c10 30c6 11dd ba58 b9262f5c441e corresponding for example to physical snapshots respectively file virtualization device reconstitutes the virtual snapshot into a reconstituted virtual snapshot and provides the reconstituted virtual snapshot with physical snapshots included therein to requesting client computing devices .

The examples presented above provide numerous advantages for automatically reconstituting virtual snapshots without manual intervention. By way of example only various use case scenarios can trigger requests for reconstituting virtual snapshots from users of client computing devices . Some example use case scenarios are listed below although one of ordinary skill in the art can contemplate additional scenarios where the examples above may be used after reading this disclosure.

1. A system administrator downgrades the file virtualization device software leading to the configuration database structure and schemas to be different from that stored in original virtual snapshot and a complete reconfiguration of file virtualization device is to be performed.

2. File virtualization device configuration database corruption In some examples the configuration database can become corrupted. The file virtualization device automatically detects this situation and the customer at client computing devices performs a complete reconfiguration of the file virtualization device . In this exemplary use case scenario virtual snapshot can be rebuilt into a reconstituted virtual snapshot since descriptor files can be used to store information for each of physical snapshots external to the corrupted configuration database .

3. Accidental removal of a snapshot rule If a snapshot rule in rule engines is accidentally removed and the customer wishes to reconfigure the rule they can re associate the physical snapshots to the new rule using the steps of flowchart .

4. Reconfiguration of a managed volume s Virtual Processing Unit VPU assignment on the same file virtualization device When changing the VPU assignment the entire volume configuration must be removed then re entered with the new VPU prior to import of physical snapshots .

5. Virtual volume split within same file virtualization device or among different file virtualization devices For this case the customer has a single managed volume comprising several shares and desires to split it into multiple managed volumes e.g. volumes each comprising two or more shares.

6. Primary and backup sites same file virtualization device configurations i.e. namespace names volume names and snapshot rule names are the same In this case a customer uses file virtualization device at the primary site where system is located and the backup recovery data storage mirror site . File server replication technology is used to mirror data including physical snapshots to backup recovery data storage mirror site . Although physical snapshots are replicated to the backup recovery data storage mirror site file servers the backup site file virtualization device cluster cannot import the physical snapshots into the virtual snapshot rules. Therefore the presentation of these snapshots created at the primary site of system is lost at the backup recovery data storage mirror site and this can trigger snapshot reconstitution requests from client computing device or an administrator of file virtualization device .

7. Many primary sites sending data to a single backup site Some customers may choose to employ a single backup site e.g. backup recovery data storage mirror site for many primary sites for cost savings reasons. This may be where the customer decides to use identical names or different names and relies on filer server replication technology to mirror data. In this example use case scenario reconstitution of virtual snapshots for each primary site is performed at backup recovery data storage mirror site .

8. Coalescing two or more managed volumes into a single managed volume This case involves taking multiple managed volumes removing them and creating a new managed volume with the aggregate of their shares . As a result the topology of file systems on servers is no longer valid and a snapshot reconstitution to incorporate already existing physical snapshots into new or reconstituted virtual snapshots different from original virtual snapshot is to be performed.

9. Catastrophic failure of file virtualization device This event requires a complete reconfiguration of the file virtualization device from saved running configuration and global configuration outputs and requires reconstitution of virtual snapshots.

10. Failure of one or more servers This case requires the data stored on the failed one or more servers or e.g. a network attached storage device attached to servers to be restored by the customer to the state previous to the failure. The restored state matches the file virtualization device s configuration database should match the original virtual state stored in virtual snapshot triggering reconstitution of virtual snapshot .

11. Hardware upgrade of file virtualization device This case may be a combination of several aforementioned cases depending on the customer s approach to the upgrade. For example an upgrade may occur in phases moving a portion of the configuration from the old file virtualization device to the new or it may occur all at once with both cases requiring snapshot reconstitution after the upgrade to match the configuration database prior to the upgrade.

Having thus described the basic concepts it will be rather apparent to those skilled in the art that the foregoing detailed disclosure is intended to be presented by way of example only and is not limiting. Various alterations improvements and modifications will occur and are intended to those skilled in the art though not expressly stated herein. For example different non TCP networks using different types of file virtualization devices may be selected by a system administrator. The order that the measures are implemented may also be altered. These alterations improvements and modifications are intended to be suggested hereby and are within the spirit and scope of the examples. Additionally the recited order of processing elements or sequences or the use of numbers letters or other designations therefore is not intended to limit the processes to any order.

