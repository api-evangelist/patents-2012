---

title: Interaction-based management of contact entries
abstract: Embodiments of the invention relate to interaction-based management of contact entries. In one embodiment, at least one contact in a set of contacts is determined to be associated with an archiving indicator. The archiving indicator indicates that one or more archiving operations are to be performed on the at least one contact. The set of contacts is associated with a user. At least one archiving threshold associated with the at least one contact is identified based on the determination. A determination is made as to whether the at least one archiving threshold has been satisfied. The at least one contact is archived based on the at least one archiving threshold having been satisfied.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09053111&OS=09053111&RS=09053111
owner: International Business Machines Corporation
number: 09053111
owner_city: Armonk
owner_country: US
publication_date: 20121231
---
This application is a continuation of and claims priority from U.S. patent application Ser. No. 13 730 203 filed on Dec. 28 2012 the entire disclosure of which is herein incorporated by reference in its entirety.

Embodiments of the present invention generally relate to contact management and more particularly relates to interaction based management of contact entries.

Electronic address books and contact lists allow users to digitally maintain details associated with various individuals. However effectively managing contact entries is becoming a difficult task especially in view of the numerous sources from which contacts can originate. Conventional address book applications are generally inadequate for effectively managing large numbers of contacts and the lightweight and transient interactions that people engage in.

In one embodiment a system for managing contacts is disclosed. The system comprises memory and a processor that is communicatively coupled to the memory. A contact manager is communicatively coupled to the memory and the processor. The contact manager is configured to perform a method. The method comprises determining that at least one contact in a set of contacts is associated with an archiving indicator. The archiving indicator indicates that one or more archiving operations are to be performed on the at least one contact. The set of contacts is associated with a user. At least one archiving threshold associated with the at least one contact is identified based on the determination. A determination is made as to whether the at least one archiving threshold has been satisfied. The at least one contact is archived based on the at least one archiving threshold having been satisfied.

In another embodiment a computer program product for managing contacts is disclosed. The computer program product comprises a computer readable storage medium having program code embodied therewith. The program code is readable executable by a processor to determine that at least one contact in a set of contacts is associated with an archiving indicator. The archiving indicator indicates that one or more archiving operations are to be performed on the at least one contact. The set of contacts is associated with a user. At least one archiving threshold associated with the at least one contact is identified based on the determination. A determination is made as to whether the at least one archiving threshold has been satisfied. The at least one contact is archived based on the at least one archiving threshold having been satisfied.

As illustrated in the information processing system is in the form of a general purpose computing device. The components of the information processing system can include but are not limited to one or more processors or processing units a system memory and a bus that couples various system components including the system memory to the processor .

The bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnects PCI bus.

The system memory in one embodiment comprises a contact manager contact information contact interaction history information and contact management rules . Each of these components is discussed in greater detail below. It should be noted that even though shows the contact manager residing in the main memory the contact manager can reside within the processor to be a separate hardware component. Also the contact information is not required to reside within the information processing system . For example at least a portion of the contact information can reside within one or more other information processing systems and be provided to the information processing system over one or more networks.

The system memory can include computer system readable media in the form of volatile memory such as random access memory RAM and or cache memory . The information processing system can further include other removable non removable volatile non volatile computer system storage media. By way of example only a storage system can be provided for reading from and writing to a non removable or removable non volatile media such as one or more solid state disks and or magnetic media typically called a hard drive . A magnetic disk drive for reading from and writing to a removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from or writing to a removable non volatile optical disk such as a CD ROM DVD ROM or other optical media can be provided. In such instances each can be connected to the bus by one or more data media interfaces. The memory can include at least one program product having a set of program modules that are configured to carry out the functions of an embodiment of the present invention.

Program utility having a set of program modules may be stored in memory by way of example and not limitation as well as an operating system one or more application programs other program modules and program data. Each of the operating system one or more application programs other program modules and program data or some combination thereof may include an implementation of a networking environment. Program modules generally carry out the functions and or methodologies of embodiments of the present invention.

The information processing system can also communicate with one or more external devices such as a keyboard a pointing device a display etc. one or more devices that enable a user to interact with the information processing system and or any devices e.g. network card modem etc. that enable computer system server to communicate with one or more other computing devices. Such communication can occur via I O interfaces . Still yet the information processing system can communicate with one or more networks such as a local area network LAN a general wide area network WAN and or a public network e.g. the Internet via network adapter . As depicted the network adapter communicates with the other components of information processing system via the bus . Other hardware and or software components can also be used in conjunction with the information processing system . Examples include but are not limited to microcode device drivers redundant processing units external disk drive arrays RAID systems tape drives and data archival storage systems.

Distinguishing between permanent and transient contacts allows the lightweight capture of contact information e.g. name address phone numbers email addresses etc. for weak ties that are likely to be of limited importance to a user or that have a temporal length of interaction with a user. Also marking contact entries as transient allows these entries be automatically removed from the contact information or archived thereby providing a more organized and efficient set of contact information . It should be noted that throughout this discussion the terms contact entries and contacts are used interchangeably.

In one embodiment the contact manager manages contact entries based on a user s interactions therewith. For example the contact manager assigns associates a contact status or type to each of the contact entries of the contact information based on a user s interactions or lack thereof with the contact entries. A first contact status type referred to herein as a permanent contact or a non archiving indicator is associated with contacts that are to remain within the contact information until a user manually deletes these contacts. A second contact status type referred to herein as a transient contact or an archiving indicator is associated with contacts that are to be automatically archived or deleted from the contact information after a given threshold has been satisfied or has failed to be satisfied .

A contact can be designated as a permanent contact or a transient contact either manually by a user of the information processing system or automatically by the contact manager . The contact manager assigns a permanent or transient contact status to a given contact based on one or more contact management rules . These rules in one embodiment are predefined rules and or are created by the user. shows one example of the contact management rules with a unique identifier being associated with each rule. In the example shown in each row corresponds to a given rule. In this example each rule is associated with one or more conditions to be satisfied for the rule to be applied one or more actions to be performed based on the associated conditions being satisfied and one or more optional thresholds . It should be noted that the rules shown in are only examples of rules applicable to various embodiments of the present invention. For example any rule based on time interaction history and or the like is applicable to various embodiments of the present invention.

One example a threshold is as follows Number of interactions with Contact is less than 5 within 30 days. Based on this threshold and Rule B the contact manager archives a given contact with a contact status of Transient if the number of interactions with this contact is less than 5 within a 30 day period. It should be noted that a threshold can have various levels of granularity. For example in the example above Threshold A is associated with any contact and any type of interaction. However different thresholds can apply to different contacts for a given rule. For example Rule B can have one threshold e.g. Number of interactions with Contact A is less than 5 within 30 days that is associated with a first contact and another threshold e.g. Number of interactions with Contact B is less than 15 within 30 days that is associated with a second contact. Also the threshold can identify one or more specific interactions of interest. For example the threshold can indicate that the combined number of phone calls and text messages associated with Contact A needs to be less than 5 to perform an archiving operation.

The contact manager can archive a contact in various ways. In one embodiment the contact manager archives a contact by hiding the contact from view when the contact information is displayed to the user. In this embodiment the archived contact remains stored within the contact information but is not displayed to the user unless requested by the user . In another embodiment the contact manager deletes the archived contact from the contact information . The archived contact can be deleted automatically by the contact manager or the contact manager can prompt the user to determine whether the contact should be deleted. In yet another embodiment a contact can be deleted from the contact information and stored within a separate set of contact information for archived contacts. This allows for the archived contact to be retrieved when needed. The contact manager can reactivate de archive an archived contact upon receiving a request from the user or detecting an interaction between the user and the archived contact.

Also Rule C or another rule can be associated with an action that sets an archiving date or time interval for a contact entry associated with a Transient status. For example when a contact entry is associated with a Transient status a rule can instruct the contact manager to assign an archiving date or time interval e.g. 30 days to the contact entry. Upon the expiration of this time interval or upon reaching the set date the contact manager archives or deletes the contact entry. The contact manager can automatically assign a default archiving date or time interval and or prompt the user to enter this information. In one embodiment different archiving dates or time intervals can be assigned to different contact entries based on various factors. For example different archiving dates or time intervals can be assigned based on contact type e.g. business contact personal contact etc. temporal event type etc. Also one or more additional rules can also define how this archiving date or time interval is to be extended for a Transient contact entry. For example one or more rules can indicate that if a given number of interactions are performed by a user with a Transient contact the archiving date or time interval is to be extended a given amount of time. These rules can also be configured such that different interactions result in different archival date time extensions. For example voice calls can result in extending the archiving date or time interval by 5 days while a text message can result in extending the archiving date or time interval by 2 days.

A fourth rule Rule D is associated with a Condition that is satisfied when a Transient contact has an interaction history satisfying a given threshold Threshold C . For example if Threshold C is defined as Number of interactions 30 within 30 days the Action associated with Rule D instructs the contact manager to change the contact status of a given contact from Transient to Permanent if the user has interacted with the given contact 30 or more times in 30 days.

A fifth rule Rule N is associated with a Condition that is satisfied when a contact is associated with a temporal event. A temporal event for example is an event that only occurs for a specific amount of time such as but not limited to a meeting conference a wedding etc. For example contacts such as wedding planners florists etc. can be associated with a wedding. The user may only need to be in contact with these individuals for the duration of the wedding planning and the wedding day. Therefore Rule N is associated with an Action that instructs the contact manager to archive a contact s associated with a temporal event upon the conclusion of the event.

In one embodiment the contact manager detects when a new contact entry is added to the contact information either by the user an application etc. the contact manager . shows one example of a new contact entry created by a user. This contact entry comprises Contact Name information Telephone Number information Email Address information Physical Address information and optional Contact Status information . It should be noted that other information can be included within the contact entry as well. The contact manager analyzes the new contact entry to determine if the user has associated a contact status with the new contact entry. For example in this example shows that the user has assigned a Permanent contact status to this contact. Therefore the contact manger does not need to assign a contact status since this status was already provided by the user.

If the user does not provide a contact status for the new entry the contact manager analyzes the contact management rules to determine if any rules are applicable to this situation. For example the contact manager determines that Rule A in applies since this is a new contact entry without any contact status set by the user. Therefore the contact manager sets the contact status for this new contact entry to Permanent . The contact manager creates an interaction profile similar to that shown in . It should be noted that when a new contact entry is created it does not need to be initially associated with a contact status. For example the contact manager can wait a given period of time to assign a contact status to the entry. During this period of time the contact manager monitors the interactions between the user and the contact to determine if the contact should be assigned a Permanent or a Transient status.

In another embodiment even though a user may not provide a contact status for the new contact entry the user may provide information that the contact manager can use to determine which contact status should be assigned to the contact. For example shows another example of a contact entry in which the user has indicated that this contact is associated with a meeting within a Temporal Event column of the entry . When the contact manager analyzes this contact entry the manager determines that the contact is associated with a meeting which is a temporal event. Therefore the contact manager sets the contact status of this contact to Transient based on Rule N in .

The contact manager in one embodiment determines if an event is a temporal event based on the location of the information entered into the contact entry . For example in the user entered information under a Temporal Event section of the entry . In another embodiment the contact manager determines if an event is a temporal event based on the name or type associated with the event e.g. wedding meeting etc. . In yet another embodiment scheduling and or calendar information is associated with the event. For example a specific date time a range of date times etc. can be associated with the event. This scheduling and or calendar information can be provided by the user in the contact entry or obtained from scheduling calendar information. For example the contact manager is able to interface with various scheduling calendar applications or information associated with the user.

The scheduling calendar applications or information can reside within the information processing system or on other systems email servers social networking servers etc. accessible by the information processing system . The contact manager in one embodiment searches the scheduling calendar applications or information of the user for events associated with the new contact. When the contact manager identifies scheduling calendar information associated with the new contact the contact manager records at least the starting and or end times dates of the event so that the manager can automatically archive delete the contact when the event ends.

For each of the contact entries in the contact information the contact manager creates one or more interaction profiles which are stored in the contact interaction history information . It should be noted that the user can also select specific contact entries for which contact management is to be performed on. In this embodiment only the selected contact entries are assigned a contact status and have their interactions monitored. shows one example of an interaction profile associated with Contact A of . In the example of the interaction profile comprises a Contact ID associated with the contact that uniquely identifies the contact or contact entry . The interaction profile also comprises Interaction information identifying each interaction performed by the user with the given contact. For example shows that a plurality of interactions have been recorded for Contact A. The interaction profile further comprises date information and time information that identifies the date and time respectively when the interaction with the contact was performed. It should be noted that other information can be included within the interaction profile as well.

In one embodiment the interaction monitor of the contact manager monitors each interaction or a user specified set of interaction types between the user and the contact. The interaction monitor detects each interaction between the user and the contact. Interactions include but are not limited to sending receiving text messages sending receiving phone calls sending receiving video calls sending receiving Voice over IP calls sending receiving social network messages sending receiving emails playing a game with the contact etc. The interaction monitor in one embodiment identifies the contact associated with the interaction based on the to from information of a message or call or from any other data associated with the interaction that identifies the parties of the interaction.

The interaction manager then records the interaction event or type within the interaction profile associated with the contact. The interaction manager also records the data and time associated with the interaction even as well. For example shows that the user sent a text message to Contact A on Date  at Time  received a text message from Contact A on Date  at Time  received a text message from Contact A at Time  and called Contact A on Date  at Time . It should be noted that the interaction monitor can also record additional information associated with an interaction than what is shown in . Also the interaction monitor is not required record information identifying the event or event type. For example the interaction monitor can keep a generic or event type interaction count that is increased each time the user interacts with the given contact.

In one embodiment the contact manager utilizes the interaction profiles to determine whether a given contact status is to be associated with a contact and or whether a contact is to be archived based on the contact management rules . For example the status updater of the contact manager monitors the interaction profiles associated with one or more of the contacts to determine if the contact status should be updated changed. The status updater compares the information in the interaction profile to one or more of the contact management rules associated with updating contact status. If any of these rules apply the status updater performs the action associated with the rule.

For example in one embodiment a Transient contact status associated with a contact can be updated changed to a Permanent contact status based on the user s interaction with the contact. A contact management rule can indicate that a Transient contact status is to be changed to a Permanent contact status if the number of interactions satisfies or fails to satisfy a given threshold as discussed above. For example Rule D shown in indicates that for a contact status to be changed from Transient to Permanent the number of interactions has to satisfy a given threshold. The threshold can be a given number of interactions e.g. 5 interactions a given number of interactions of a given type a given number of interactions within a given period of time e.g. 5 interactions within 30 days a given number of interactions of a given type within a given period of time etc.

For example consider an interaction profile associated with Contact C of who is currently associated with a Transient contact status. In this example an interaction profile for Contact C currently indicates that the user has interacted with Contact C seven 7 times in the last 15 days. Also an applicable contact management rule has the following threshold Number of Interactions 5 in 30 days . Therefore since the user has interacted with Contact C 7 times in the last 15 days the status updater changes the contact status of Contact C to Permanent based this rule and the interaction profile for Contact C.

In another embodiment a Transient contact status is not changed to a Permanent contact status but the archival expiration date or interval associated with the contact is extended based on the interaction profile associated therewith. For example the archiving module can extend the archival expiration date associated with a Transient contact based on the frequency of interaction type of interaction date time of interaction a combination thereof and or the like. It should also be noted that different extension rules can apply to different contacts. For example a given frequency of interactions associated with a first Transient contact may extend the archival expiration date associated with the first Transient contact differently than the same frequency of interactions associated with a second Transient contact.

In yet another embodiment a Permanent contact status can be changed to a Transient contact status based on the interaction profile and one or more contact management rules . For example consider Contact N of who is associated with a Permanent contact status. In this example an interaction profile associated with Contact N indicates that the user has interacted with Contact N three 3 times in the last 30 days. Also an applicable contact management rule indicates that Permanent contact status is to be updated to a Transient contact status if the user interacts with a contact less than 5 times in 30 days. Therefore the status updater the contact status of Contact N to Transient based on the interaction profile for Contact N and the applicable contact management rule s .

In addition to changing the contact status the contact management rules and the interaction history information are also used to determine when to archive Transient contacts. For example the archiving module of the contact manager analyzes the interaction profiles in the interaction history information and identifies when a Transient contact is to be archived based on the contact management rules . For example based on Rule B in the example of a Transient contact is to be archived after Threshold A has been satisfied. As discussed above this threshold can be a time threshold an interaction threshold a combination thereof and or the like. For example Threshold A can indicate that a Transient is to be archived if the contact is Transient for at least 30 days.

In this example the archiving module determines how long a contact has been associated with a Transient status based on the contact information associated with the contact. For example the contact manager stores a date time stamp associated with a given contact whenever a contact status is assigned to a contact or is changed. The archiving module identifies the date time associated with the stamp and determines the number of days or amount of time that the contact has been associated with the Transient status. If the number of days or amount of time satisfies the threshold the archiving module archives the contact.

As discussed above archiving can include removing the contact from the contact information and storing the contact in a set of archived contact information. Therefore the presentation module of the contact manager does not present an archived contact to the user when the user interacts with the contact information . However the presentation module can present the archived contacts in the archived information to a user upon receiving a request from the user. In another embodiment an archived contact is kept within the contact information but is marked flagged as archived as shown in . For example shows that Contact B has been marked as Archived under an Archive Status column . In this embodiment even though the archived contact still remains within the contact information the presentation module identifies the Archived flag and hides prevents this contact from being displayed to the user.

In one embodiment when the archiving module determines that a contact is to be archived the contact manager prompts the user to select whether the contact should be archived or have its expiration archival date e.g. threshold extended. If the user selects to extend the expiration archival date extended the user can enter select the number of days e.g. 30 days 90 days 365 days or amount of time to extend the expiration archival. Alternatively the contact manager can extend the expiration archival date by a default amount. In another embodiment a contact determined to be archived can be deleted from the information processing system . In this embodiment the contact manager automatically deletes the contact when the archiving module determines that the contact is to be archived or prompts the user. For example the contact manager prompts the user if the contact should be deleted or archived as discussed above.

In an embodiment where a contact is assigned with a Transient status based an association with a temporal event the archiving manager performs the archiving deleting operations discussed above upon determining that the temporal even has completed. For example Contact B of is associated with a temporal event Meeting A that is scheduled for Date A from Time A to Time B. Therefore based on Rule N of the archiving module monitors for Date A and Time B. Once Date A and Time B occur the archiving module archives deletes the contact as discussed above.

In one embodiment the contact manager groups sorts the contacts based on their associated contact status. For example the contact manager identifies each Permanent contact status and groups these contacts together and also identifies each Transient contact and groups these contacts together. The presentation module can then present these grouped contacts to the user via an application web browser Application Programming Interface API etc. of the information processing system as shown in . For example shows that a set of Permanent contacts have been grouped together and a set of Transient contacts have been grouped together and displayed to the user via the display of the information processing system .

It should be noted that the contact manager in one embodiment can group sort Transient contacts into clusters e.g. by tag by manual grouping by temporal events other factors etc. . When associated with a cluster entries by default share the expiration archival date of the containing cluster. For example consider two clusters of Transient contacts Cluster A and Cluster B. Cluster A is associated with an expiration archival date of Date A and Cluster B is associated with an expiration archival date of Date B. Each Transient contact in Cluster A is associated with the expiration archival date of Date A while each of the Transient contact in Cluster B is associated with the expiration archival date of Date B. The user can override the expiration date associated with the cluster on a per entry basis. For example based on a cluster the user is able to identify all contacts with a given an expiration archival date. The user can then change the expiration archival date of one or more individual contacts within a cluster. The contact manager can also identify transient windows for permanent contacts for clustering these contacts together with transient entries for e.g. searching across all entries.

In addition to the above the contact manager allows the user to search the contact information . The search results can be organized by class permanent vs. transient entry by transient cluster by expiration date degree of transience etc. to allow users to be able to quickly locate both strong and weak contacts. For example the user can indicate that he she wants to view all Transient contacts. Therefore the searching module of the contact manager identifies each contact entry associated with a Transient contact status and displays these contacts to the user.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The flowcharts and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

Aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention have been discussed above with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiments above were chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

