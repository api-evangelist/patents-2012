---

title: Event-driven approach for collecting monitoring data of messaging systems
abstract: The present disclosure relates to software, computer systems, and computer implemented methods for providing centralized process integration (PI) domain alert monitoring. One process includes identifying at least one alert rule at a central rules repository, the at least one alert rule associated with at least one message inter-communication within a process integration (PI) domain, where the PI domain includes at least one PI component, and where the message inter-communications within the PI domain occur between PI components. At least one alert consumer registration associated with at least one alert consumer system for an identified alert rule is identified. Information associated with the at least one identified alert rule from the central rules repository is distributed to the corresponding PI component associated with the message inter-communication linked to the alert rule and to the at least one registered alert consumer system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09135093&OS=09135093&RS=09135093
owner: SAP SE
number: 09135093
owner_city: Walldorf
owner_country: DE
publication_date: 20120831
---
The present disclosure relates to software computer systems and computer implemented methods for providing centralized process integration PI domain alert monitoring and distributed collection of alert messages.

Today s companies and entities employ multiple disparate computing systems in various enterprise and inter enterprise organizations where certain computing systems perform different parts of an overall business function. As an example a scenario such as processing an incoming order may involve the participation of a customer relationship management CRM system an enterprise resource management ERM system a supply chain management SCM system and one or more financial management FM systems as well as others. The integration of the systems to perform one or more processes is referred to as process integration. In some instances a set of systems used to perform specific functionality and operations may be defined to represent a specific process integration PI domain.

To monitor the various systems included in a PI domain PI runtime components or PI components may run on along with or in combination with the systems to capture technical information about the overall operations of the PI domain as well as to determine the process and success of messages and events occurring on or in connection with those PI components. Each PI component can collect a set of information associated with the messages and events that occur on the PI component s associated system.

The present disclosure relates to software computer systems and computer implemented methods for providing centralized process integration PI domain alert monitoring. One process includes identifying at least one alert rule at a central rules repository the at least one alert rule associated with at least one message inter communication within a process integration PI domain where the PI domain includes at least one PI component and where the message inter communications within the PI domain occur between PI components. At least one alert consumer registration associated with at least one alert consumer system for an identified alert rule is identified. Information associated with the at least one identified alert rule from the central rules repository is distributed to the corresponding PI component associated with the message inter communication linked to the alert rule and to the at least one registered alert consumer system.

While generally described as computer implemented software embodied on tangible media that processes and transforms the respective data some or all of the aspects may be computer implemented methods or further included in respective systems or other devices for performing this described functionality. The details of these and other aspects and embodiments of the present disclosure are set forth in the accompanying drawings and the description below. Other features objects and advantages of the disclosure will be apparent from the description and drawings and from the claims.

This disclosure generally describes computer systems software and computer implemented methods for providing centralized process integration PI domain message processing status monitoring centralized message alert rules and staged event driven alert event collection in distributed systems involved in message processing. Previously PI monitoring operations were performed on a PI component by component basis requiring users to access each PI component in a distributed system to review monitoring and other status information collected during the operation of those components. Further alert rules for message processing errors and other events during message processing previously required rules to be set individually at each PI component and any related messages associated with those rules needing to be accessed at the corresponding PI component. In other words previous systems provided local monitoring and alerting applications for different components but failed to provide a centralized monitoring system allowing users technical analysts and system administrators to be provided an overall view and status of complex systems. Some systems may have numerous PI components collecting information through various local monitoring applications making system wide monitoring and collection of alert information related to messages and messaging processes of system administrators difficult.

The present disclosure describes a system where centrally orchestrated calls to PI components associated with a particular PI domain are used to retrieve information on processed messages and events previously monitored at the various PI components. In some instances a central monitoring application can access the information through one or more application programming interfaces APIs associated with the various PI components. The information collected by the central monitoring application may include some all or none of the following details 1 message and event metadata e.g. message header data such as the integration scenario a particular message or event is associated with the technical channels through which a message was sent etc. 2 statistics associated with one or more monitored messages and 3 status information on the relative success or failure of particular monitored messages. Additional information may be collected in some implementations including some or all of the message content payload included in or associated with particular messages or events. The data once collected can be stored at the central system or made accessible thereto and aggregated for reporting and monitoring purposes. One or more alert rules associated with particular message patterns can be defined at a central administration system. Those alert rules can identify the particular PI components with which the message pattern is associated and the central administration system can assist in deploying those alert rules to those PI components at which they can be stored and evaluated during message processing. Further one or more systems internal to or external from the PI domain can register as alert consumers associated with particular alerts with listeners and other agents used to monitor one or more queues at the particular PI components. Each PI component can identify those alert consumers and the alert rules associated with their registration and create one or more sub queues associated with each particular alert consumer. The listeners and other agents of the alert consumers can collect the alert related messages stored in queues which are consumer specific allowing for alert information to be securely efficiently and easily collected by alert consumers directly from the PI components associated with the corresponding alert rule.

In some implementations aggregation and association of particular messages and events by the central monitoring application may be based not on a message globally unique identifier GUID basis but instead on certain metadata attributes associated with the collected messages. By aggregating correlating individual messages processing events based on the metadata usually generated by the local monitoring applications the procedure helps to save valuable systems resources memory load and storage on the consumer side. Further the content of particular messages becomes less important allowing technical users to take a macro level view of the PI domain and its associated operations to identify and address system wide issues unrelated to the particular content within individual messages. In addition this helps in avoiding the creation of too many individual notifications alerts as only if an event is received which is different from the known combinations of certain meta attributes a new alert group would be created which then results in new notifications. This mechanism helps to avoid getting spammed with notifications for already known alert groups respectively patterns.

To address the issues algorithms determining the success temporary success or failure of particular messages and events sent or existing within the PI domain and among various PI components are used. In some instances a message may be considered successful from the aspect of a first PI component in the fact that it was successfully sent by the first PI component s associated system while as a whole the message was a failure as a later system monitored by a second PI component failed to process or forward the message at a later time Alert messages can be centrally configured for various end to end message paths and once activated can be automatically distributed to the corresponding PI components associated with those end to end message paths. The messages can be evaluated at each local PI component based on the activated rules with alert messages being generated when an issue arises. Those alert messages can then be collected by one or more registered consumer systems who register for a particular alert rule of interest to that system. In some instances the consumer systems can register their interest in a particular rule at a centralized administration system with the consumer systems then provided with information on the PI component associated with the particular alert rule. Those consumer systems or agents thereof can monitor the appropriate PI components at which the alerts are generated without needing to monitor other systems or components that are not associated with the alert rules of interest.

Information on the relative success or failure of certain messages can be presented to technical users through various dashboards presenting summary information on the status of one or more PI domains and their associated PI components. Further users can be provided additional details as to specific message types interactions and other information included in or derived from the collected sets of information. The presented information can be used to locate specific areas of concern including information on messages PI components and other portions of the PI domain and related systems in which errors warnings exceptions and other issues have occurred. Once those areas are located the dashboard can provide functionality allowing users to attempt to resend or initiate a failed message such as to test whether an error associated with the message and its message path components continues. The dashboard may also allow technical users to generate one or more helpdesk tickets based on observed issues occurring within the system allowing the person s or organization s associated with observed issues to be notified and address the issues as soon as possible. In other words the collected information and the generated dashboard allow users to view the statistics and information associated with particular PI domains in a single location as opposed to requiring users to access each PI component individually. Additionally the described dashboard can provide an export functionality that for example can be used to report upon processed message volume for a given time period i.e. Last Month Last Week etc. which can provide detailed information and reports on the messages. The export functionality can generate forms and customized reports for use in analyzing the associated systems providing users and administrators with detailed information on the status of multiple PI domains and their systems.

Various dashboards and user interfaces UIs associated with viewing information regarding alert rules and messaging status may be provided as well as configuration dashboards UIs for creating and activating new alert rules. The dashboards can be used by both technical and non technical users to determine which messaging exchanges to be monitored in a particular PI domain and with which particular PI components. As the system provides a centralized location dashboards and UIs for managing the alert rules the difficulties identified with prior systems can be minimized.

Turning to the illustrated example illustrates an example environment for collecting and managing monitoring data from a distributed business process using various process integration PI components. The illustrated environment includes or is communicably coupled with one or more application systems a solution manager server an integration server one or more clients and an integration directory and or administration module hereafter integration directory . At least some of the components can communicate across or via network . In general environment depicts an example configuration of a system capable of collecting at the solution manager server information associated with messages and events occurring at a plurality of application systems including the messages sent between those systems . Additionally each application system can also locally evaluate messages including their payload data and contents received and or sent by corresponding business applications based on one or more local alert rules distributed from the central integration directory . Without the described solution users must be present at or logged into the individual application systems to access the stored messages and to define individual alert rules. The present solution may allow the users and administrators to define one or more centralized alert rules to be associated with particular end to end messaging sent between various PI components where the alert rules are then automatically distributed to each of the PI components associated with the end to end messaging. Those rules can be stored locally as local rules and evaluated on a local runtime component basis to generate a local set of alerts and events at each component. Consumer systems in some instances e.g. solution manager server can register with the integration directory for particular alert rules of interest Once registered the consumer systems can receive information on which PI components the alert rules affect so that the consumer systems can listen to or follow the particular PI components for retrieving messages and alerts generated at those particular components The consumer systems such as the solution manager server may further include or be associated with an alert inbox where the collected alert and messaging information from the PI components can be managed and processed.

The application systems may each represent a single system within a distributed business process where each system performs a particular task associated with the business process. For example application system A and application system N may each comprise a portion of a CRM system for receiving and processing customer orders. In other instances application system A may be part of a CRM system while application system N may be a part of an ERP system performing tasks related to or associated with the CRM system. Based on their relationship the two application systems may be defined as two parts of the same PI domain. Still further in some instances the application systems may represent different portions of the same physical system virtually distinguished or separated based on the functionality and or operations they perform. While only two application systems are illustrated other implementations may include only one or more than two application systems. In alternative implementations some or all of the illustrated elements may be included in or associated with different and or additional systems servers clients networks or locations other than those illustrated in FIG. A. For example the components illustrated within the solution manager server may be included in multiple servers parts of one or more cloud based networks or other locations accessible to the solution manager server e.g. either directly or via network .

In general the solution manager server is any server or system that stores and executes a central monitoring application used to monitor one or more application systems e.g. associated with or included in one or more PI domain models or definitions and or monitoring use scenarios . For example the solution manager server may be a Java 2 Platform Enterprise Edition J2EE compliant application server that includes Java technologies such as Enterprise JavaBeans EJB J2EE Connector Architecture JCA Java Messaging Service JMS Java Naming and Directory Interface JNDI and Java Database Connectivity JDBC . In some instances the solution manager server may store a plurality of various other applications while in other instances the solution manager server may be a dedicated server specifically meant to store and execute the central monitoring application and its related functionality. In some implementations the solution manager server may also provide other monitoring and system administration tools. In some instances the solution manager server may comprise a web server or be communicably coupled with a web server where the central monitoring application represents a web based or web accessible application accessed and executed on one or more of the associated clients to perform the programmed tasks or operations of the central monitoring application . In still other instances the solution manager server may be a consumer that registers with the integration directory for monitoring one or more alert rules . As a consumer the integration directory can provide the solution manager server information on the alert rules including which PI components and systems are involved or associated with the particular alert rule . Those components and or systems can then be monitored by the solution manager server to identify alert and event messages associated with particular alert rules .

At a high level the solution manager server comprises an electronic computing device operable to receive transmit process store or manage data and information associated with the environment . The solution manager server illustrated in can be responsible for receiving requests from one or more clients as well as any other entity or system interacting with the central monitoring application responding to the received requests by processing said requests through the inherent functionality and components of the central monitoring application and sending the appropriate responses from the central monitoring application including a generated or updated dashboard visualization back to the requesting client or other system. The central monitoring application can also process and respond to local requests from a user locally accessing the solution manager server . In some instances the central monitoring application can actively access one or more local PI monitors associated with one or more application systems to perform one or more functions related to message retrieval or monitoring. Accordingly in addition to requests from the clients illustrated in requests may also be sent from internal users external or third party customers and other applications as well as any other appropriate entities individuals systems or computers. In some instances the central monitoring application may be a web based application executing monitoring functionality associated with a networked or cloud based distributed business process. In many instances the solution manager server may act as a consumer for collecting messaging alerts and events and may interact with one or more of the application systems and their corresponding PI components.

As used in the present disclosure the term computer is intended to encompass any suitable processing device. For example although illustrates a single solution manager server environment can be implemented using any number of servers as well as computers other than servers including a server pool. Indeed the solution manager server may be any computer or processing device such as for example a blade server general purpose personal computer PC Mac workstation UNIX based workstation or any other suitable device. In other words the present disclosure contemplates computers other than general purpose computers as well as computers without conventional operating systems. Further the illustrated solution manager server may be adapted to execute any operating system including Linux UNIX Windows Mac OS or any other suitable operating system. According to one implementation the solution manager server may also include or be communicably coupled with a mail server.

In the illustrated implementation of the solution manager server includes an interface a processor a memory and a central monitoring application . The interface is used by the solution manager server to communicate with other systems in a client server or other distributed system environment including within environment connected to the network e.g. an associated client application systems as well as other systems communicably coupled to the network . depicts both a server client environment but could also represent a cloud computing network. The interface generally comprises logic encoded in software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interface may comprise software supporting one or more communication protocols associated with communications such that the network or the interface s hardware is operable to communicate physical signals within and outside of the illustrated environment .

Generally the solution manager server may be communicably coupled with a network that facilitates wireless or wireline communications between the components of the environment i.e. between the solution manager server and one or more of the clients or between different application systems as well as with any other local or remote computer such as additional clients servers or other devices communicably coupled to network including those not illustrated in . In the illustrated environment the network is depicted as a single network but may be comprised of more than one network without departing from the scope of this disclosure so long as at least a portion of the network may facilitate communications between senders and recipients. In some instances one or more of the components associated with the solution manager server may be included within the network as one or more cloud based services or operations. For example the integration server is illustrated as within the network and may be operated at least partially within a cloud based system in network . The network may be all or a portion of an enterprise or secured network while in another instance at least a portion of the network may represent a connection to the Internet. In some instances a portion of the network may be a virtual private network VPN . Further all or a portion of the network can comprise either a wireline or wireless link. Example wireless links may include 802.11a b g n 802.20 WiMax and or any other appropriate wireless link. In other words the network encompasses any internal or external network networks sub network or combination thereof operable to facilitate communications between various computing components inside and outside the illustrated environment . The network may communicate for example Internet Protocol IP packets Frame Relay frames Asynchronous Transfer Mode ATM cells voice video data and other suitable information between network addresses. The network may also include one or more local area networks LANs radio access networks RANs metropolitan area networks MANs wide area networks WANs all or a portion of the Internet and or any other communication system or systems at one or more locations. The network however is not a required component in all implementations of the present disclosure.

As illustrated in the solution manager server includes a processor . Although illustrated as a single processor in the solution manager server two or more processors may be used in the solution manager server according to particular needs desires or particular embodiments of environment . The processor may be a central processing unit CPU a blade an application specific integrated circuit ASIC a field programmable gate array FPGA or another suitable component. Generally the processor executes instructions and manipulates data to perform the operations of the solution manager server and specifically the functionality associated with the corresponding central monitoring application . In one implementation the server s processor executes the functionality required to receive and respond to requests and instructions from the one or more clients using the central monitoring application as well as the operations used to access processed message information from the one or more application systems and their PI components.

Regardless of the particular implementation software may include computer readable instructions firmware wired or programmed hardware or any combination thereof on a tangible and non transitory medium operable when executed to perform at least the processes and operations described herein. Indeed each software component may be fully or partially written or described in any appropriate computer language including C C Java Visual Basic assembler Perl any suitable version of 4GL as well as others. It will be understood that while portions of the software illustrated in are shown as individual modules that implement the various features and functionality through various objects methods or other processes the software may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate. In the illustrated environment the processor executes the central monitoring application and its associated functionality on the solution manager server . In some instances a particular solution manager server may be associated with the execution of two or more central monitoring applications as well as two or more instances of a single central monitoring application as appropriate.

At a high level the central monitoring application is any application program module process or other software that may execute change monitor and manage information associated with one or more application systems and those systems associated PI components. In some instances portions of the central monitoring application may operate in response to and in connection with one or more requests received from a client via network . Additionally the central monitoring application may operate independently based on a set of monitoring use scenarios one or more defined PI domain models a set of monitoring settings a set of rule information associated with one or more alert rules and defining one or more PI components for analysis monitoring and information collection. In some instances portions of the central monitoring application may represent a web based application accessed and executed at least in part by one or more external clients or other suitable entities via network e.g. through the Internet . In general the central monitoring application may perform three functions as well as any number of additional and or related operations. First the central monitoring application can retrieve sets of messaging and event information from one or more application systems associated with a particular alert rule for which the solution manager server has registered and is consuming and store those sets of retrieved information in an alert inbox used to store aggregate and present alert rule data at the solution manager server . By defining the alert rules at a centralized location i.e. the integration directory and allowing the solution manager server and its central monitoring application to access the particular systems associated with a previously registered alert rule. Thus the central monitoring application can access sets of relevant alert data and other related information from the several PI components associated with the alert rules without needing to access or poll each message received or processed at each application system thus saving time and resources on the production systems or machines. Instead statistics on various messages events and alerts within particular message scenarios can be accessed which can then be correlated to one or more related messages.

Second the central monitoring application can in response to requests from technical users analysts and other suitable and or authorized users generate and present the aggregated alert inbox providing an overview of the statuses associated with various message alerts and events occurring throughout a system or environment such as environment as well as the results of particular registered alert rules and related issues. In some instances the central monitoring application or a related application can generate update and maintain different dashboards and other visualizations presenting the collected information requested. Among other functionality the central monitoring application may also be used to fix errors identified once the alert rule results are analyzed or reviewed. For example the central monitoring application may be used to generate a helpdesk ticket for technical support or in some cases attempt to resend or re execute one or more messages or events that have experienced errors or have otherwise failed or been associated with a particular alert rule. The central monitoring application may perform other operations to assist in monitoring various systems and the messages and events occurring therein.

While illustrated as internal to the solution manager server one or more processes associated with the central monitoring application may be stored referenced or executed remotely. For example a portion of the central monitoring application may be a web service associated with the central monitoring application that is remotely called while another portion of the central monitoring application may be an interface object or agent bundled for processing at a remote client . Moreover any or all of the central monitoring application may be a child or sub module of another software module or enterprise application not illustrated without departing from the scope of this disclosure. Still further portions of the central monitoring application may be executed or accessed by a user working directly at the solution manager server as well as remotely at a corresponding client . The central monitoring application is illustrated as including a PI monitor retrieval module a PI dashboard controller a component access module and an alert inbox module . All some none or different modules may be included in different implementations of the central monitoring application . Additionally some or all of the modules may be combined with each other as well as integrated into the functionality provided by another component.

The PI monitor retrieval module accesses the local logs and monitoring information of the PI monitoring data stored at individual application systems i.e. and retrieves that information for storage at one or more centralized locations. In some instances the retrieved information may be stored as part of the alert inbox . The PI monitor retrieval module can access the information stored on the application systems through APIs defined and exposed at the individual systems such as the PI API illustrated within a local PI monitor located on application system A or one or more APIs exposed by the adapter engine also located on the application system A . Alternative and or additional methods of retrieving the information from the different application systems may also be used. In some instances information may be sent from the application systems to the central monitoring application such as in response to a request from the central monitoring application . The application systems associated with a particular PI monitor retrieval module as well as the frequency and type of information retrieved may be determined based on one or more parameters defined at the solution manager server . In the alert rule environment the central monitoring application may use one or more listening or other monitoring agents not shown to monitor and retrieve alert rule related information generated by one or more of the application systems and their respective PI components. These agents may be activated or initialized upon registration with the integration directory for a particular alert rule .

As previously described the alert information and data that includes information retrieved from the various application systems is located in memory of the solution manager server and may be associated with an alert inbox . Memory is used for storing data and program instructions associated with the solution manager server and more specifically the central monitoring application . The memory may include any memory or database module and may take the form of volatile or non volatile memory including without limitation magnetic media optical media random access memory RAM read only memory ROM removable media or any other suitable local or remote memory component. The memory may store various objects or data including classes frameworks applications backup data business objects jobs web pages web page templates database tables process contexts and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto associated with the purposes of the solution manager server and its central monitoring application . In some implementations including cloud based systems some or all of the memory may be stored remote from but communicably coupled to the solution manager server . As illustrated memory includes one or more monitoring use scenarios one or more PI domain model definitions one or more monitoring settings an alert inbox and a set of rule information associated with any registered alert rules associated with the solution manager server .

The set of PI domain model definitions describes or defines one or more PI components that are included in one or more PI domains. Each PI domain can be defined to include a set of PI components associated with one or more business components performing a particular task or set of tasks. The PI components included in a particular PI domain may be automatically associated with one another in some instances or manually assigned in others. In some instances the PI components in different PI domains may overlap such that some PI components are included in different PI domains. Examples may include PI domains associated with related business processes where some of the PI components may be used in both situations i.e. creating a purchase order and fulfilling a purchase order . A set of PI components is logically grouped into a PI domain based on the processes and operations being monitored. The PI components making up a particular PI domain can include various runtime components that monitor and capture message and event information during execution of a system and its business processes. Some PI components may be involved in message processing while other PI components may be involved in other processing. Each PI component is executing or running on a technical system such as a system executing ABAP based programs and tools or a system executing Java based programs and tools including the application systems illustrated in . In some instances more than one PI component may be running on a single technical system. Examples of PI components include adapter engines e.g. adapter engine of application system A and proxies i.e. Java ABAP proxy although other components can also be used as PI components.

Returning to the set of PI domain model definitions can provide the central monitoring application with information on what PI domains exist in an environment as well as the PI components and their associated application systems or components that make up the PI domain. The central monitoring application can determine from a particular PI domain model the PI components to be accessed for information regarding a particular PI domain . As an example one PI domain associated with environment may include the two illustrated application systems as well as one or more other components systems. The set of monitoring use scenarios may be used to determine the type of information to be retrieved from the PI components associated with a particular PI domain. Alternatively the set of monitoring use scenarios may be used to determine the type of information that is relevant in a particular use case. In some monitoring use scenarios a portion of the metadata stored at some PI components may not be necessary or relevant to the scenario and therefore may not be collected by the PI monitor retrieval module . In some instances administrators and other users may specify that a particular monitoring use scenario is to be associated with a particular PI domain . That association can be read by the PI monitor retrieval module to determine the information to be accessed and collected in a particular monitoring situation. The monitoring use scenario associated with a particular PI domain can be changed at different intervals or in response to particular events or other triggers including a threshold number of errors identified for messages wherein a more detailed monitoring use scenario may be applied. In some instances the monitoring use scenario may be manually selected while in others a default or dynamically determined monitoring use scenario can be applied to a particular PI domain . The monitoring settings may also be associated with different PI domains as well as individual PI components. The monitoring settings can be used to determine the frequency of information and data collection performed by the central monitoring application and may provide different collection frequencies on a per PI domain basis as well as on a per PI component basis. The specific parameters defined by the monitoring settings can be defined manually provided a default value or dynamically determined based on information associated with or related to the different technical systems i.e. the application systems and or the monitoring use scenario .

The central monitoring application is also illustrated as including a PI dashboard controller . The PI dashboard controller uses the collected data to generate and provide one or more dashboards presenting the human readable results to technical users administrators and other entities. The generated dashboards can be used to display information regarding different subsets of information such as general monitoring information and messaging data not shown as well as the alert related event and messaging data associated with the alert inbox and the registered alert rules monitored by the central monitoring application . In some instances the information included in the generated dashboards can initially begin at a high level of data providing general information on the types of messages and events occurring in a particular domain. Still further the initial step in using the generated dashboards may be determining a particular PI domain where multiple PI domains are monitored for which to view relevant data. Once a particular PI domain is selected relevant information associated with that PI domain can be displayed in the generated dashboard. The PI dashboard controller can provide tools in the generated display to allow technical users to define one or more filters on the data to be presented as well as allowing users to focus on different aggregated data sets or analyses performed on the different aggregated data sets. The PI dashboard controller can interpret the filter request and generate the appropriate dashboard in response to the filter selection. The types of dashboard views available may include dashboards providing general information about the operations of the messaging components as well as dashboards specific to the alert rules registered for consumption by the solution manager server . Those alert rule related dashboards may include among others an alert rules configuration dashboard associated with the solution manager an example alert inbox dashboard and a second example alert inbox dashboard . illustrates an example alert email generated using one of the example alert inbox dashboards. Other suitable dashboards and interfaces may also be provided in various implementations. In general the PI dashboard controller can generate maintain and manipulate one or more dashboards associated with the alert rule related information collected by the central monitoring application usually in response to specific user requests and interactions.

The central monitoring application is further illustrated as including a component access module . The component access module is used to access various exposed APIs associated with different systems within a PI domain and associated with one or more PI components in order to interact with the systems in the PI domain. For example the component access module can take input received via a presented dashboard and in response request that a particular message alert or event for which information is presented within the dashboard be re initiated or cancelled. This interaction with the various technical systems i.e. the application systems may be available because the solution manager server and its components are provided information for each of the technical systems associated with a particular PI component. During a setup procedure connections may be established between the central monitoring application and specifically the component access module and the technical systems to allow the central monitoring application to perform certain actions on the technical systems. In some instances remote function call RFC destinations for one or more applications on the remote technical system may be identified and stored on the solution manager server . When a particular action associated with a technical system is identified in the dashboard the component access module can identify the connection associated with the technical system and use that connection through exposed APIs for example to pass the values and information necessary to execute the requested action. The component access module is the component of the central monitoring application that performs the calls to these APIs and that controls the actions and events in response to input received through a presented dashboard and interpreted by the PI dashboard controller . In some instances the component access module can act as an agent of the central monitoring application to access and retrieve alert messages and related events from one local queues associated with PI components for which the solution manager server has registered to consume related messages. The component access module can access the set of rule information which defines the one or more alert rules for which the solution manager server has registered as well as the corresponding PI components and or their associated application systems where the relevant alert information is stored.

The central monitoring application also includes an alert inbox module . The alert inbox module provides the central monitoring application with the ability to manage and assist in the presentation of the various information on registered alert rules being consumed by the solution manager server . The alert inbox module can organize one or more stored set of alert information not illustrated stored in memory and can allow users to view sort and review alert information. In some instances the stored set of alert information may be stored in an alert inbox and can be stored in a sorted manner according to the one or more related alert rules. In some instances the alert inbox module may be a part of or associated with the PI dashboard controller to present alert rule related information. In some instances the alert inbox module may also be used to define one or more new alert rules for the solution manager server to consume as well as to manage and configure currently registered alert rules.

As described the central monitoring application of the solution manager server collects information from different application systems included in different defined PI domains . The application systems themselves may be any system or server involved in executing one or more business processes via one or more business applications . Similar to the solution manager server the applications systems may be J2EE compliant application servers that include various Java technologies. In some instances the application systems may include and execute two or more business applications while in other instances the application systems may execute a single dedicated business application. Each of the application systems may be comprised at least in part of a web server where the business applications or portions thereof represent web based applications or processes that can be executed on a remote client . Each of the application systems may be systems for executing different processes associated with one or more business processes and further the different application systems may be related to each other in that the business applications may be used together to complete different end to end business processes or events. Each application system may be operable by a user local to the systems as well as through one or more clients communicably coupled to the systems via the network . Each application system may represent different hardware configurations as well as a single server or system using virtualized systems such that application system and application system are co located on a single server or overall system.

As illustrated each application system includes an interface a processor the business applications a local PI monitor sometimes including a PI API and a memory . The interfaces processors and memories may be similar to or different than those described in the solution manager server i.e. interface processor and memory . The local PI monitors illustrated on the application systems may be components used to perform local monitoring operations in association with the operations on each application system . In some instances the local PI monitors may be legacy monitoring components previously used to collect relevant monitoring information associated with the messages and events of the business applications and or the application systems as a whole. In some instances the local PI monitors may be capable of evaluating one or more local rules to determine whether a specific alert rule as distributed by the integration directory is satisfied. In some instances the PI APIs can be used by the component access modules of the solution manager server or other suitable consumers of alert messages to access the local queues of alert information stored locally at each application system via the corresponding local PI monitors . The information collected by the local PI monitors may include any information relevant to the events or messages performed received sent or executed at each application system as well as alert specific information collected based on the set of local rules . The relevant information can be stored by the local PI monitors into the corresponding memory i.e. in the set of PI monitoring data included in memory of application system A or the illustrated local message stores not illustrated in application system N or the local queues . Local PI monitoring settings may determine or define the type and sets of information to be monitored by the local PI monitor . Although not illustrated in application system N application system N may include the same or similar information and data sets as those illustrated in application system A . As illustrated the local PI monitor of application system A may include a PI API exposing various methods for accessing the monitored information associated with the system . In some instances the PI monitor retrieval module may use these APIs to access the information stored with the set of PI monitoring data . Alternatively the PI monitor retrieval module may directly access the sets of PI monitoring data without using the APIs in some instances.

As illustrated the respective memories can also include a local message store although it is not illustrated in application system N . The local message stores store information associated with each message received at and or sent by the respective application system including at least a portion of the payload data for at least some of the messages. The local message stores may comprise a single location or a plurality of locations within a particular application system. Further the memories are illustrated as including the local alert rules that are received from the integration directory in response to particular alert rules associated with those application systems corresponding PI components. Any messages and alerts generated at the runtime components can be evaluated with respect to the alert rules that are active at the respective components where any alerts and or messages satisfying those rules can be placed in the local queues and thus be available for further processing or review. While not illustrated in each of the local queues may be comprised of a master queue and one or more sub queues. A component associated with the local queues may review the master queue and identify a particular sub queue in which the alert messages relate. In many instances the sub queues may correspond to the consumers and other systems monitoring the PI component for alerts and events related to a particular and activated alert rule . Additional information on the operations of the local queues is described in relation to .

Application system A is illustrated as including an adapter engine . The adapter engine may be considered a PI component associated with a particular PI domain. The adapter engine may be a separate software component used by a particular system to communicate and exchange information with one or more other systems such as application system N and or the integration server . The adapter engine can be used to translate incoming messages received at and outgoing messages sent from the application system A to one or more other systems. In some instances the adapter engine may be used to translate messages and events sent to and received from the integration server where the integration server controls or manages the sending of messages within the system and a particular PI domain . Using the adapter engine in combination with the execution of the business application information relevant to a distributed process including messages sent between different systems can be monitored. In some instances the local PI monitor can be associated with the adapter engine to identify and monitor incoming and outgoing messages as appropriate storing the relevant information in the set of PI monitoring data .

Application system N is illustrated as including a Java or ABAP proxy . Similar to the adapter engine described above the proxy allows for messages to be sent and received by application system N through a message protocol or language readable by application system N and its business application as well as for other applications and systems in a particular environment. In general the proxy can be used to encapsulate the creation or parsing of XML messages and the communication with the relevant runtime components required to send or receive messages. The proxy allows systems to exchange messages with different communication parties as well as through the use of the adapter engine and the integration server .

The integration server is a runtime system for receiving processing and forwarding messages between different systems within an environment such as environment . In some instances all messages sent between the different systems may be sent via the integration server while in other instances some or all of the messages may be sent directly between the different systems without using the integration server . As illustrated in the integration server includes interface processor memory and an integration engine . The interface processor and memory may be similar to or different than those described for the solution manager server with the components associated with the operations of the integration engine . In general the integration server may facilitate interaction between diverse operating systems and application systems across internal and external networks e.g. . In some instances messages between different application systems can be sent to the integration server first where the integration engine interprets the messages determines the corresponding receiver of the message and forwards or relays the message to the corresponding receiver system. Information on the messages sent via the integration server can be stored in the set of collected message information . The information can be viewed locally on the integration server or collected by the PI monitor retrieval module and included in the local data sets stored at the various application systems for processing display and analysis. Memory stores information used by the integration engine to perform its operations including the information in the integration repository . The integration repository includes information defining integration scenarios integration processes interfaces and proxy information and messaging mappings between different components in the system. The interfaces and proxy information may be used to create interfaces adapters and proxies within the environment as well as to determine the appropriate messaging schema and format for exchanging messages between systems. The messaging mappings may define the paths different types of messages may take between components allowing the integration engine to analyze a particular message and determine the appropriate receiver system using the interface and proxy information to modify the particular message into the appropriate format where needed. The integration engine or a monitoring component not illustrated can extract and store information associated with the received sent and forwarded messages and events occurring at or performed by the integration server to the set of collected message information . As illustrated in the integration server may be located in a cloud based system within network . Alternatively the integration server may be a component within an on premise or other conventional system as well.

Returning to the illustrated environment includes one or more clients . The clients may be associated with a particular application system or the solution manager server and its central monitoring application as well as other systems including systems for monitoring alert rules similar to the solution manager server . Each client may be any computing device operable to connect to or communicate with at least one of the application systems or solution manager server using a wireline or wireless connection via the network or another suitable communication means or channel. In some instances the client may be a part of or associated with a business process involving one or more of the application systems while in other instances the client may be associated with an administrator or monitoring account used in association with the central monitoring application or other suitable portion of the environment . In general each client includes a processor an interface a client application a graphical user interface GUI and a memory . In general client comprises an electronic computing device operable to receive transmit process and store any appropriate data associated with the environment of . It will be understood that there may be any number of clients associated with or external to environment . For example while illustrated environment includes a single client alternative implementations of environment may include multiple clients communicably coupled to the one or more of the systems illustrated. In some instances at least one client may be associated with an administrator of the environment and may be capable of accessing and interacting with the central monitoring application and in many instances the integration directory where one or more alert rules can be defined and configured by modifying the rules configuration . Additionally there may also be one or more additional clients external to the illustrated portion of environment capable of interacting with the environment via the network . Further the terms client and user may be used interchangeably as appropriate without departing from the scope of this disclosure. Moreover while each client is described in terms of being used by a single user this disclosure contemplates that many users may use one computer or that one user may use multiple computers.

The GUI associated with each client may comprise a graphical user interface operable to for example allow the user of a client to interface with at least a portion of the central monitoring application and its associated operations and functionality including the one or more dashboards generated by the PI dashboard controller . Generally the GUI provides the particular user with an efficient and user friendly presentation of business data provided by or communicated within the system. The GUI may comprise a plurality of customizable frames or views having interactive fields pull down lists and buttons operated by the user. For example the GUI may provide interactive elements that allow a user to interact with a particular business application the central monitoring application or the integration directory as well as other components within and or external to environment . The different portions of functionality provided by the central monitoring application and the integration directory may be presented and accessible to the user through the GUI such as through a client application e.g. a web browser . Generally the GUI may also provide general interactive elements that allow a user to access and utilize various services and functions of a particular business application . In some instances the client application may be used to access various portions of different application systems including the PI monitoring data and or local messages and local queues collected on a specific application system as well as the alert rules on the integration directory . In some instances the client application may be used to access and the GUI used to view information retrieved directly from an application system . Alternatively the client application may be used to access and manipulate the central monitoring application and or the integration directory including as an administrator capable of modifying the operations and parameters associated with the monitoring of one or more PI domains the various alert rules as well as the definitions and boundaries of a particular PI domain. In some instances the client application may be an agent or client side version of the central monitoring application and or the integration directory and its alert configuration module . The GUI may present the information of the client application for viewing and interaction. In general the GUI is often configurable supports a combination of tables and graphs bar line pie status dials etc. and is able to build real time portals where tabs are delineated by key characteristics e.g. site or micro site . Therefore the GUI contemplates any suitable graphical user interface such as a combination of a generic web browser intelligent engine and command line interface CLI that processes information in the platform and efficiently presents the results to the user visually.

As used in this disclosure each client is intended to encompass a personal computer touch screen terminal workstation network computer kiosk wireless data port smart phone personal data assistant PDA one or more processors within these or other devices or any other suitable processing device. For example each client may comprise a computer that includes an input device such as a keypad touch screen mouse or other device that can accept user information and an output device that conveys information associated with the operation of one or more application systems those system s business applications the central monitoring application the alert configuration module of the integration module and or the client itself including digital data visual information or the GUI . Both the input and output device may include fixed or removable storage media such as a magnetic storage media CD ROM or other suitable media to both receive input from and provide output to users of client through the display namely the GUI . The client s processor interface and memory may be similar to or different from those described in connection with the other components illustrated in although alternative implementations of one or more of these components may be used as well as implementations where additional components may also be included.

As described further includes the integration directory . The integration directory is generally meant to provide a central location and system for managing a plurality of alert rules defined throughout a particular one or more PI domains. In general the integration directory may be similar in physical definition to the solution manager server in that it may be a server workstation or other suitable computer system. As illustrated the integration directory includes an interface a processor an alert configuration module a distribution module and a memory . The interface processor and memory may be similar to or different from the other memories previously described.

Memory specifically includes a set of alert rules and a set of alert rule configurations . The alert rules as described can be defined to identify particular alerting related events associated with one or more PI components as well as threshold criteria or requirements for an alert to be triggered or identified at runtime. The rules configuration can store information defining one or more consumers of the alert rules allowing the rules to be distributed to interested and registered consumer systems and the PI components associated with those rules. The alert configuration module can be an application program or other software that allows one or more users to create modify delete and activate specific alert rules as well as to register for specific alert rules to follow. The alert configuration module may be associated with one or more UIs that allow users to specify their alert related rules and configurations. The rules configuration can store information on which systems and runtime components are associated to specific rules as well as information defining the specific rule registrations of consuming systems. The registration information can be used to distribute the alert rules to the proper PI components and to the proper registered alert consumers. The distribution module can perform operations associated with the distribution of the alert rules to the appropriate locations i.e. PI components application systems solution manager server or other alert consumers.

In the illustrated example various systems are illustrated namely a SOAP backend server a JDBC database system a JMS system and a file system . These systems are each associated with adapter engines adapter engine A with the SOAP backend server and the JDBC database system adapter engine B associated with the JMS system and adapter engine C associated with the file system . The relationships between these components are illustrated by the arrows . In some instances the adapter engines may be located within the system they are associated with while in others the adapter engines may be located separately from those systems. For purposes of the illustration in the adapter engines are illustrated separately from the associated systems for purposes of distinction. Further the PI domain is considered to include the adapter engines themselves but not the associated systems. Each of the adapter engines are considered PI components within the PI domain where messages messaging information and message metadata are stored and available for access.

The PI domain also includes three ABAP proxies ABAP proxy A ABAP proxy B and ABAP proxy C . In alternative implementations one or more of the proxies may be Java based proxies as appropriate. The proxies may be used in association with a system to create XML based or other standard language or protocol messages for sending among heterogeneous systems. The systems associated with the proxies in are not illustrated but may perform and send messages through the PI domain similar to the systems associated with the adapter engines. As described above the proxies whether Java or ABAP based as well as the adapter engines are used to send and receive messages between heterogeneous systems in the illustrated environment . As illustrated the adapter engines and proxies exchange messages with the integration server which can interpret the messages to determine the location or entity to which the messages are to be delivered. The integration server can modify the messages as needed including translation and or addressing based on defined message mappings prior to sending the messages on. Information regarding the messages being sent via the integration server can be locally monitored with the relevant information stored at the integration server or a communicably coupled location for later use and analysis.

As illustrated by arrows messages are sent between the various PI components i.e. the adapter engines and proxies . Each of the messages illustrated in are sent to the integration server where those messages are relayed to the appropriate recipient. Although not illustrated the adapter engines and proxies can send some or all of the messages directly to their respective recipients. Each of the PI components as well as the integration server can locally collect information and metadata associated with the information from the messages passing through or by the components as well as copies of the messages and or the messages payload data. Users can access the information on a component by component basis to view or review the messages sent through the PI domain. However as illustrated by the arrows the solution manager server can access each of the PI components and the sets of monitored information in order to pull that information into a single repository located at or accessible to the solution manager server and its associated central monitoring application. Additionally the solution manager server can access local message stores associated with each PI component to access the actual messages themselves. In some instances the solution manager server can also access one or more message archives where archived messages associated with particular PI components are stored. The solution manager server can access the information stored at or associated with the various PI components using APIs exposed by the PI components or their associated systems as described in . The collected information can be aggregated and or correlated in order to match outgoing messages from one system to incoming messages from another system. In some instances the solution manager server may perform various aggregation and correlation applications and functionality in order to match related messages. The solution manager server can also use local functionality associated with each PI component i.e. via one or more APIs to use or request the execution of local search functionality of the respective PI component.

A group of related messages may be considered successful when the final message of the group leaves the PI domain . For example a message may be sent from the JMS system via the adapter engine to the file system via the adapter engine . Once the message is provided to the file system which is considered external to the PI domain the message may be considered a success. If no errors have been identified for a particular group of related messages but the final message has not left the PI domain the group of related messages may be considered temporarily successful. Temporarily successful messages may represent messages that have not completed their processing and routing through the PI domain as well as messages that are stalled at some point in their path but that have not yet been identified as unsuccessful or that have not yet resulted in an error or exception. In some instances once temporarily successful groups of messages have exceeded a particular time period or threshold they may be considered unsuccessful and the system may return an error. If an error has occurred and been identified for a particular group of related messages those messages may be considered unsuccessful. 

As illustrated the information stored at each individual component can be accessed and retrieved by the solution manager server illustrated by arrows . The solution manager server may be associated with a plurality of PI domains other than the illustrated PI domain . In those instances information about the other PI domains may be stored in the same or a different repository than the collected and retrieved information associated with the illustrated PI domain . When a technical user first accesses a monitoring application dashboard on the solution manager server i.e. associated with the central monitoring application of the first action for the user may be to select a particular PI domain for viewing. The solution manager server can then prepare a corresponding dashboard or other manner of presenting information specific to the selected PI domain. In this manner the solution manager server can be used in association with different PI domains and their associated components including some PI domains where some physical components may be shared across the PI domains.

Additionally includes an integration directory which may be similar to the integration directory of . The integration directory can be used to define one or more alert rules associated with one or more of the systems and adapter engines and or ABAP proxies of the PI domain . Once an alert rule is initiated the integration directory can distribute the alert rules to the particular PI components associated with that alert rule to allow those components to evaluate the alert rules at runtime. Further the integration directory can allow systems to register for one or more of the alert rules. Upon registration those systems receive information regarding which PI components and corresponding systems are involved in the messaging associated with the alert rule. Those systems can then monitor the set of PI components associated with the alert rule to determine if any alerts are triggered during runtime evaluation and are available for consumption and retrieval.

Specifically illustrates an example PI domain where alert rules are created and distributed to one or more PI runtime components e.g. associated with the alert rules while one or more consumer systems such as a solution manager can register to monitor at least one alert rule and consume the results directly from the PI runtime components where the created alert rules have been distributed and where those alert rules are evaluated as messages are received.

The alert rules are initially defined at a configuration system such as a networked administration system or an integration directory e.g. integration directory of . The alert rules define a set of alert criteria to be used to determine whether an alert associated with messages passed to particular PI components experience issues or errors meeting the criteria of the alert rules. In addition to the alert criteria the alert rules may define the particular PI components with which they are related. In some instances the alert rules may be distributed to each of the PI components within the PI domain while in other instances individual alert rules may only be distributed to the particular PI components that are directly associated with that individual alert rule . Arrow illustrates the integration directory distributing the alert rules to the appropriate PI components. Additional arrows from the integration directory show the distribution of alert rules to other PI components.

The PI component receives one or more alert rules from the integration directory and can store them locally i.e. local rules for later processing. During runtime operations one or more messages are passed between the various PI components as described in . As messages are received at the PI component a determination may be made as to whether any of those messages meet or satisfy a particular alert rule that is evaluated at the PI component . When a message meets or satisfies a particular alert rule those messages can be placed in a master queue . A background job or any other suitable module agent program etc. executing at the PI component can evaluate the messages placed into the master queue and place copies of those messages and any related alert into one or more of the message sub queues .

Message sub queues in general can be created at the PI component in response to receiving a notice of one or more consumer systems registering to consume a particular alert rule . As illustrated by line the solution manager may be a consumer system and can register with the integration directory to retrieve one or more of the alert rules . When a consumer registers for an alert rule the integration directory can notify the affected PI components of the registration as also shown via line of the registration. Upon notification the affected PI components can create message sub queues to be used by the registering system. As illustrated in message sub queues have been generated for three consuming systems Consumer XYZ Solution Manager and Consumer ABC respectively. The background job as mentioned above can monitor the alert messages and events collected in the master queue and determine one or more sub queues associated with particular items in the master queue . Those items can then be copied into the appropriate sub queue for later collection. In some instances once a message is evaluated in the master queue by the background job the message can be deleted or moved to an appropriate archive not shown where the alert message may be archived.

As illustrated the PI component includes a housekeeping module . The housekeeping module can assist in removing consumed alert messages from the local stores as those locations fill with a large number of events and messages and to avoid queue overflows. The housekeeping module can perform a housekeeping check after a predefined number N of events which may be called e.g. a chunk . The time T in which the chunk of messages events is received is measured. If the time of two consecutive chunks is too short i.e. below a predetermined threshold the PI component may switch to an emergency mode. An emergency mode may mean that no single events are placed into the queue but only a general emergency message at the end of each chunk is written into the log detailing that on the particular system a certain number of events N occurred in a certain amount of time T. The values of N and T can be dynamically determined based on the available system resources and or user or administrative settings e.g. memory storage space settings etc. . If for two consecutive chunks the sending time is again above the threshold T or the threshold T is reached before the end of a chunk normal mode may be switched on again allowing each event to be placed into the queue.

Additionally the housekeeping module may assist in aggregating one or more alert messages or events if those events have not been processed by a potential consumer in a predetermined time threshold. If a consumer is slow or not available or if too many alert related events are created e.g. based on significant issues in the system or based on many active alert rules matching many alert events the queues may quickly overflow. To address this issue the housekeeping module may be used to save the already evaluated results as much as possible. For instance after a chunk of size N is complete the age of the first entry Tin the queue is determined. If Tis older than a certain age i.e. if T T where Tis the maximum allowed age of an entry then the content of the queue can be read and aggregated for each consumer into one or several aggregated alert messages or events which can combine at least a subset of the information stored in the to be aggregated entries of the respective queue. The aggregated alert messages can be consumed similar to the individual messages by the consumers. The content that is aggregated can then be deleted from respective queues and replaced by the aggregated alert message.

As illustrated a diagnostic agent can monitor the various queues to determine when alerts relevant to a particular consumer are added to a sub queue after which the relevant alerts can be retrieved and added to the consumer s systems i.e. their alert inbox . The diagnostic agent may be any program agent module or other software capable of monitoring a particular queue. In some instances a diagnostic agent may monitor one or more sub queues for a single consumer or alternatively for several different consumers. In some instances multiple diagnostic agents or similar software may be used in a single PI domain. The diagnostic agent may monitor a single PI component or multiple PI components as appropriate and may be located external from or internal to a particular PI component. In many cases the diagnostic agent may be managed or controlled by its associated consumer system.

The solution manager may be similar to the solution manager server described in . In the present illustration the solution manager includes a configuration of registered rules and an alert inbox . The configuration stores information associated with the one or more alert rules for which the solution manager is registered. This configuration can be used to determine one or more PI components for which to assign diagnostic agents associated with the solution manager . The alert inbox of the solution manager can be used to store analyze and interpret the various collected alert events and messages from the PI components associated with the alert rules for which the solution manager is registered. Those results can be presented in various dashboards UIs and other presentations associated with the alert inbox .

The message processing runtime processes the messages sent and received at the PI component and raises the alert related events which are relevant for monitoring. These alert events are stored into an event store which typically is a queue. The event processing engine which can run in several parallel processes depending on the amount of events to be processed fetches the events from this event store and evaluates the alert rules associated with each event. The centrally configured rules possibly defined at an integration directory or central configuration system are cached locally in the local rule cache to improve the performance of the rule access. Depending on the result of the evaluation events will be put into the monitoring data store and its respective sub queues for all registered consumers . There the event can be converted to a consumer specific format and enriched with other data as is suitable. From the monitoring data store the consumers can read and or retrieve their data without influencing the other consumers and affecting any queue other than that associated with the particular consumer associated with that particular sub queue. For more complex scenarios the consumer itself can be another event processing engine which for instance can aggregate the data correlate events and messages and perform other high level functions. The event processing operations can be repeated multiple times as necessary. In some instances one event can be placed in two or more sub queues e.g. and if the associated alert rules and registered consumers require it.

Initially the runtime component can perform its normal operations. At a determination as to whether an error has occurred in association with a particular message or message interaction is determined. If no error occurs the runtime component can continue its operations. If however an error is identified at a set of error information and in some cases the message itself is placed into an event queue associated with the runtime component and an event may be defined at .

At the local alert engine can read the error information from the event queue particularly in light of the one or more alert rules associated with the runtime component . At a determination is made as to whether any alert consumers are registered with the particular alert rule or rules that may be associated with the particular error information. As previously described two or more alert rules may be triggered by one set of error information in the event queue. If no alert consumers are registered for the alert rule s associated with the error in the event queue then the runtime component can return to normal processing as no alerts may be generated. Alternatively an alert may be generated but the alert will not be placed in an alert consumer specific messaging queue.

At a determination as to whether an alert will be fired or generated is determined based on the contents of the event error information in light of the one or more alert rules associated with the runtime component . The local alert engine can perform the evaluation. If no alerts are to be generated the runtime component can return to its normal operations. If an alert rule is to be generated however then at the local alert engine can generate a suitable alert for inclusion in the general alert or message queue. At the generated alert can further be placed into an alert queue associated with one or more particular alert consumers such as an alert consumer related sub queue. At the generated alert is available for collection by the various alert consumers .

At the alert in the corresponding alert consumer related alert queue or sub queue can be read and or retrieved by the corresponding alert consumer . The alert consumer can use various suitable agents modules programs daemons and other software to monitor specific sub queues to determine if new alert information is available as well as to collect the alert message information when indication of an available set of alert information is identified. At the alert consumer can forward at the collected alerts to the alert inbox as appropriate. At the alert inbox associated with the particular alert consumer can be used to process the alert information generate related analyses and display information associated with the alert e.g. via one or more suitable dashboards or other UIs .

At a particular PI domain of interest can be identified. In some instances multiple PI domains may available for identification such as where various PI domains have been defined for various operations networks and communications.

At configuration information associated with at least one alert rule for the identified PI domain is received. The configuration information can in some instances be received via a rule definition and configuration UI dashboard wizard or other suitable interface. In some instances an alert rule identified for another PI domain may be migrated or copied over from that other PI domain for use in the identified PI domain. In some instances the migrated or copied alert rule can then be modified for use in the identified PI domain.

At at least one registration from one or more alert consumer systems is received identifying the at least one alert consumer system as a consumer of information relating to a particular alert rule. The alert consumer system can register with a central system to ensure that messages and alerts associated with the alert rule are made available to the alert consumer system. In some instances in response to receiving the at least one registration the centralized system may provide information regarding the alert rule to the alert consumer system including information on one or more systems at which information associated with the alert rule may be made available. The alert consumer system can then monitor those systems to identify and collect alert rule relevant information from the corresponding PI component s associated with the alert rule for further processing.

At the configured alert rules can be distributed to at least one runtime component associated with the particular alert rule. For example if the alert rule relates to a message choreography or exchange between systems A and B the alert rule criteria associated with those rules can be distributed directly to an alert engine or store associated at each of system A and system B allowing those systems to evaluate messages exchanged and errors occurring at those particular systems. The rules can be evaluated by those systems with information satisfying the alert rules turned into a corresponding alert. In some instances alert rules may not be distributed until they are specifically activated. Additionally in alternative instances the alert rules may be distributed to all systems in a particular PI domain not just those systems specifically associated with the alert rules.

At a specific alert rule configuration is received from a central system where alert rules are created and defined. The received alert configuration may be a specific set of alert rule criteria to be evaluated when alerts and errors occur at the local runtime component. The configuration may also include information on which alert consumer systems may have registered for the alert rule in some instances.

At the received alert rules associated with the received alert configuration may be activated so that those alert rules can be properly evaluated at the local component. In some instances the received alert rules may be activated upon receipt from the central system while in other instances the alert rules may be activated by a second notification from the central system such as when one or more alert consumer systems register to consume the alert rule.

At the message interactions and operations can be evaluated at the runtime component based upon the one or more activated rules to determine if one or more of the alert rules are satisfied. In some instances similar evaluations can be performed in parallel for a plurality of message interactions and operations occurring at the runtime component. At a determination is made as to whether one or more alert rules were satisfied during the evaluation of . If not method returns to for further evaluation. If so then information associated with the at least one alert rule and the associated message and its current status along with any other suitable alert information can be added to the local master queue at . The master queue can store a plurality of alert related events and associated data as needed.

At a master queue storing alerts at a local runtime component is identified. The master queue can be the initial storage location for any generated alerts and alert events in response to issues with messages and message interactions identified based on the evaluation of the alert rules at the runtime component. The master queue can be used as a staging point where alert events are stored prior to providing or making available those alert rules to specific alert consumers.

At at least one consumer registration associated with the alerts in the master queue and specific alert rules in general can be identified. As previously discussed alert consumers can register to follow and collect information associated with various alert rules from the central system and can then monitor the local runtime components for new alert events and messages associated with those alert rules. The local runtime components can also receive information on which alert consumers are registered to specific alert rules. Using that information the local runtime components can create and use sub queues specific to particular alert consumers moving alert messages and alert events in the master queue to the sub queues as appropriate upon further review.

Specifically the alert messages and events in the master queue can be evaluated at to determine their relevance to one or more of the alert consumer registrations. At at least one event from the master queue can then be assigned to at least one consumer registration related sub queue as described above. A single message or event from the master queue can be moved to two or more alert consumer sub queues as needed. Further upon moving the message or event out of the master queue the corresponding message and event can be deleted from the master queue to keep the size of the master queue at a reasonable and manageable size.

At a determination is made as to whether additional messages remain in the master queue. If no additional messages remain then method waits until new messages are received. If additional messages do remain in the master queue then method returns to to evaluate those alert messages and events for relation to at least one alert consumer.

At a set of housekeeping rules are determined and or identified where the housekeeping rules describe one or more rules for maintaining the size and relative age of entries in a particular master queue or sub queue associated with a particular runtime component. The size of the queue and the age of particular entries in the queue as well as other suitable factors can be used to identify one or more entries to be removed and or aggregated in order to avoid performance issues before they occur. In some instances a particular housekeeping rule may keep an older alert entry where the corresponding queue is relatively empty or where the queue has substantial space for additional entries. Also a relatively newer entry may be deleted or aggregated where the queue is relatively full and may need additional space to store incoming alert information and entries.

At the contents of the master queue and sub queues are evaluated based on the identified housekeeping rules. First at consumed queue entries may be removed from specific queues. For example if the entries from a particular sub queue have been retrieved by the corresponding alert consumer those entries if not deleted upon retrieval can be removed and or archived as appropriate. In some instances entries in the master queue may also be removed. For example if the entries have been evaluated for each potential alert consumer and have been moved copied to the appropriate location then the entries may be removed and or archived.

At the remaining contents of a particular queue may be evaluated and in particular their relative size and age of the entries. A determination may be made at as to whether the size of the queue and the age of the one or more queue entries satisfies or exceeds a particular threshold or dynamic determination from the housekeeping rules. This may occur where entries are not deleted immediately upon retrieval or where the threshold is reached or housekeeping rule is satisfied before the entries are collected. If the rules are not met method returns to . If however the rules are met method continues at . At a housekeeping event can be created where the housekeeping event can collect and aggregate the information included within the alert messages within the specific queue collecting a subset of the data and information of the entries remaining when the housekeeping event is to be created. In some instances only the oldest entries may be added to the housekeeping event while the newer entries are kept until a later time. This can be determined on the particular housekeeping rules as well as the dynamic status of the respective queue. Example rules are described above in relation to .

At the summary of the aggregated entries can be added to the housekeeping event with the summaries containing a subset of the information included in the aggregated entries. The housekeeping event can remain in the queue and can be used by the alert consumers in lieu of the individual messages and events. Once the housekeeping event is populated the queue entries included in the housekeeping event can be deleted at .

The preceding figures and accompanying description illustrate example processes and computer implementable techniques. But environment or its software or other components contemplates using implementing or executing any suitable technique for performing these and other tasks. It will be understood that these processes are for illustration purposes only and that the described or similar techniques may be performed at any appropriate time including concurrently individually or in combination. In addition many of the steps in these processes may take place simultaneously concurrently and or in different orders than as shown. Moreover environment may use processes with additional steps fewer steps and or different steps so long as the methods remain appropriate.

In other words although this disclosure has been described in terms of certain embodiments and generally associated methods alterations and permutations of these embodiments and methods will be apparent to those skilled in the art. Accordingly the above description of example embodiments does not define or constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure.

