---

title: Method and a portable computing device (PCD) for exposing a peripheral component interface express (PCIE) coupled device to an operating system operable on the PCD
abstract: In a portable computing device having a system-on-chip (SoC) Acorn RISC Machine (ARM)-based resource architecture, a peripheral component interconnect express (PCIe) bus is used to insert PCIe device memory into system memory absent a PCIe driver. During a PCIe initialization, the contents of PCIe base address registers (BARs) are mapped or otherwise updated to coincide with values assigned to the PCIe device in the advanced configuration and power interface (ACPI) tables.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08984174&OS=08984174&RS=08984174
owner: QUALCOMM Incorporated
number: 08984174
owner_city: San Diego
owner_country: US
publication_date: 20120116
---
Priority under 35 U.S.C. 119 e is claimed to the U.S. provisional application entitled Method and a Portable Computing Device PCD For Exposing A Peripheral Component Interface Express PCIE Coupled Device To An Operating System Operable On The PCD filed on Dec. 6 2011 and assigned application Ser. No. 61 567 425 the entire contents of which are hereby incorporated by reference.

The development of cheaper smaller and more capable integrated circuits has enabled the development of portable computing systems featuring smaller designs while retaining relatively sophisticated functionality. These computing systems refer primarily to laptops netbooks and tablets but also include smart phones portable audio devices portable video devices and portable video game consoles. However as the recent trend of miniaturizing portable computing systems continues the space available for hardware for these designs has progressively decreased. As a result the optimization of hardware design and architecture has become of primary importance.

Conventional portable computing devices include at least a collection of microprocessors or a central processing unit CPU memory a motherboard e.g. central printed circuit board featuring a chipset and at least one graphics processing unit for generating video output to a display. In some conventional motherboard designs the chipset is arranged into two separate component hubs. A first hub which operates in accordance with a first controller typically handles communications among the CPU random access memory RAM video output interfaces and a second controller. In many contemporary portable computing device implementations the video output interface is implemented as an integrated graphics processing unit. The second controller supports communications between the CPU and or RAM with peripheral components such as input output devices and mass storage devices. In many implementations the second controller may also include integrated peripherals such as audio controllers network interface cards universal serial bus USB and PCI express PCIe connections etc.

Traditionally netbooks and laptops have used integrated graphics solutions such as integrated graphics processing units GPUs coupled to the first controller. Integrated graphics processing units are graphics processors that utilize a portion of a computer s system memory rather than having its own dedicated memory. In general integrated GPUs are cheaper to implement than dedicated or discrete GPUs and offer relatively improved battery life and lower power usage but at the cost of reduced capability and performance levels relative to discrete GPUs. Advantageously manufacturers of netbooks and laptops have begun to offer configurations with higher graphics processing capabilities by providing computer systems that include additional discrete graphics processing units in addition to the integrated graphics processors.

Discrete or dedicated GPUs are distinguishable from integrated GPUs by having higher performance and also having local memory dedicated for use by the GPU that the GPU does not share with the underlying computer system. Commonly discrete GPUs are implemented on discrete circuit boards called video cards which include among other components a GPU the local memory communication buses and various output terminals. In conventional applications these video cards typically interface with the main circuit board e.g. a motherboard of a computing system through a PCIe interface upon which the video card may be mounted. In general discrete GPUs are capable of significantly higher performance levels relative to integrated GPUs but typically require and consume higher levels of power relative to integrated graphics solutions. Portable computing devices with both integrated and discrete graphics processing solutions often offer a mechanism or procedure that enables the user to alternate usage between the particular solutions so as to manage performance and battery life according to situational needs or desired performance levels.

As mentioned above in typical netbooks and laptops the PCIe interface is a component of the secondary controller. However unlike PCIe interfaces in other computing systems such as desktops the PCIe interface of a portable computing device is often of a reduced size and consequently of a reduced capacity. For some portable computing device designs that focus on both compact design and battery life there may be no operating system support for a PCIe interface. Such an operating system is not preconfigured with PCI or PCIe drivers. However there may still be a need to communicate with PCIe devices despite the absence of PCI and PCIe drivers in the operating system. For example a need to communicate with such a device could exist where a peripheral device is known non removable and connected before initialization or boot of the operating system and where the portable computing device is not configured to support automatic configuration of such peripheral devices.

This Summary introduces a selection of concepts in a simplified form that is further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter in any way.

Embodiments of the claimed subject matter are directed to systems and methods that expose a PCIe compatible device to an operating system on a portable computing device without using a PCI or PCIe driver. In an example embodiment a method for exposing a peripheral component interconnect express PCIe compatible device to an operating system on a portable computing device comprises the steps of determining content for a set of PCIe base address registers that describe a PCIe compatible device integrating the content for the set of PCIe base address registers to an advanced configuration power interface ACPI and using firmware to initialize a PCIe device coupled to the portable computing device by matching the content for the set of PCIe base address registers as integrated to the ACPI. Using firmware to initialize a PCIe bus may include using a unified extensible firmware interface UEFI .

In another example embodiment a portable computing device PCD that exposes a peripheral component interconnect express PCIe compatible device to an operating system operable on the PCD. The PCD comprises a processor coupled to a memory element having an operating system and an advanced configuration and power interface ACPI stored therein an extensible host controller interface xHCI coupled to the processor via a PCIe bus and a firmware element coupled to the processor and the memory element via a first bus. The firmware element includes a PCIe base address register set store with a plurality of addressable memory elements each having a respective content stored therein that match a resource as described by information in one or more of the tables in the ACPI. The content as forwarded to the operating system exposes the device identified therein to the operating system.

In still another example embodiment a portable computing device exposes a peripheral component interconnect express PCIe compatible device to an operating system without using a driver. The portable computing device comprises means for providing content to a set of PCIe base address registers that describe a PCIe compatible device means for providing an advanced configuration power interface ACPI having the content for the set of PCIe base address registers therein and means for initializing a PCIe device within the portable computing device to match the content for the set of PCIe base address registers as contained in the ACPI.

In yet another embodiment a computer program product includes a computer usable medium having a computer readable program code embodied therein. The computer readable program code is adapted to be executed to implement a method for configuring a portable computing device having a plurality of resources. The method comprises the steps of determining content for a set of PCIe base address registers that describe a PCIe compatible device comparing the content for the set of PCIe base address registers to an advanced configuration power interface ACPI and when the content for the set of PCIe base address registers and information in the ACPI identify a PCIe device using firmware to initialize a PCIe bus coupled to the portable computing device and the PCIe device.

The word exemplary is used herein to mean serving as an example instance or illustration. Any aspect described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects.

In this description the term application may also include files having executable content such as object code scripts byte code markup language files and patches. In addition an application referred to herein may also include files that are not executable in nature such as documents that may need to be opened or other data files that need to be accessed.

The term content describes data or information and may also include files having executable content such as object code scripts byte code markup language files and patches. In addition content referred to herein may also include files that are not executable in nature such as documents that may need to be opened or other data files that need to be accessed.

As used in this description the terms component database module system and the like are intended to refer to a computer related entity either hardware firmware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a computing device and the computing device may be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers. In addition these components may execute from various computer readable media having various data structures stored thereon. The components may communicate by way of local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems by way of the signal .

In this description the terms communication device wireless device wireless telephone wireless communication device and wireless handset are used interchangeably. With the advent of third generation 3G and fourth generation 4G wireless technology greater bandwidth availability has enabled more portable computing devices with a greater variety of wireless capabilities.

In this description the term portable computing device PCD is used to describe any device operating on a limited capacity power supply such as a battery. Although battery operated PCDs have been in use for decades technological advances in rechargeable batteries coupled with the advent of third generation 3G and fourth generation 4G wireless technology have enabled numerous PCDs with multiple capabilities. Therefore a PCD may be a cellular telephone a satellite telephone a pager a personal digital assistant PDA a smartphone a navigation device a smartbook or reader a media player a combination of the aforementioned devices a tablet computer with a wireless connection and a laptop computer with a wireless connection among others.

The CPU the graphics processor and the analog signal processor may comprise a zerocore a first core etc. through an Ncore all not shown as understood by one of ordinary skill in the art. In alternative embodiments instead of CPU and a graphics processor one or more digital signal processors DSPs may also be employed as understood by one of ordinary skill in the art. Further in alternative embodiments two or more multi core processors may be included.

As shown in a memory element and a programmable read only memory PROM are coupled to the central processing unit . The PROM includes fixed programs and data structures that support and enable control among the various hardware elements of the PCD . The memory element includes adaptable programs data structures and an operating system.

As illustrated in a display controller and a touchscreen controller are coupled to the multi core CPU . A touchscreen display external to the on chip system is coupled to the display controller and the touchscreen controller . Also included in PCD is a video coder decoder codec e.g. a phase alternating line PAL encoder a sequential couleur avec memoire SECAM encoder a national television system s committee NTSC encoder or any other type of video encoder coupled to the multi core central processing unit CPU . A video amplifier is coupled to the video encoder and the touchscreen display . A video port is coupled to the video amplifier . As depicted in a universal serial bus USB controller is coupled to the CPU . Also a USB port is coupled to the USB controller . A subscriber identity module SIM card may also be coupled to the CPU . Further as shown in a digital camera may be coupled to the CPU . In an exemplary aspect the digital camera is a charge coupled device CCD camera or a complementary metal oxide semiconductor CMOS camera.

As further illustrated in a stereo audio CODEC may be coupled to the analog signal processor . Moreover an audio amplifier may be coupled to the stereo audio CODEC . In an exemplary aspect a first stereo speaker and a second stereo speaker are coupled to the audio amplifier . shows that a microphone amplifier may be also coupled to the stereo audio CODEC . Additionally a microphone may be coupled to the microphone amplifier . In a particular aspect a frequency modulation FM radio tuner may be coupled to the stereo audio CODEC . Also an FM antenna is coupled to the FM radio tuner . Further stereo headphones may be coupled to the stereo audio CODEC .

Some of the above described elements of the PCD may comprise hardware while others may comprise software and still others may comprise a combination of hardware and software. The term resource is used herein to refer to any such element whether hardware software or a combination thereof that is controllable by a processor. A resource may be defined in one aspect as an encapsulation of the functionality of such an element. Except where it may otherwise be indicated the term processor is used herein to refer to a processor such as the CPU graphics processor the analog signal processor or to any other processor controller or similar element that operates under the control of software firmware or similar control logic. A reference to two or more processing entities includes processors on different chips different processing cores of the same processor chip threads of execution on the same core or any other processing entities between which there may be a data transport penalty or inefficiency.

As described in further detail below an example of a resource is a software element that executes on a processor. A thread of execution on a processor such as for example a thread relating to an executing application program may access a resource by causing a request to be issued on the resource. As described below resource requests are processed through a software based system referred to in this disclosure as a framework. The term client is used broadly in this disclosure to refer to an element that affects the function of requesting a resource. Thus as the terms are used herein a thread may create or make use of a client for the purpose of issuing resource requests. It should be noted that in some instances a resource may create or use a client such that a resource may cause a resource request to be issued against another resource. As described in further detail below such other resource may be referred to herein as a dependent resource due to a dependency relationship between the requesting resource and requested resource. Resources and clients may be represented by data structures in memory. Since resources are controlled by specific processors in a multi processor PCD not every processor in PCD has access to every resource in PCD .

As known in the art the memory element includes an operating system O S and an advanced configuration and power interface ACPI not shown . The operating system is a program or set of programs that manage all other programs in the PCD . The other programs or applications use the operating system by making requests for services through a defined interface. In addition users of the PCD can interact with the operating system through a user interface such as a command language a graphical user interface etc. The operating system manages the sharing of memory resources and priority of execution among multiple applications as well as the input to and output from attached hardware devices. In operation the ACPI is used by the O S for hardware discovery configuration power management and monitoring.

As will be explained in greater detail in association with the embodiments illustrated in and the PROM includes content i.e. data and or data structures that describes a PCIe compatible resource that is coupled to the PCD . When executed an application program or the operating system stored in the memory directs the central processing unit or processor to access and deliver the content i.e. values associated with PCIe base address registers which may be stored in a read only memory element e.g. PROM or in other locations within the memory to the operating system. When the content is available to the operating system executing on the central processing unit or processor and the content describes and coincides with values assigned in ACPI tables also available to the operating system the PCIe compatible resource is exposed and available for use. Note that this exposure and availability for nominal use by the PCD is accomplished without support of a PCI or PCIe driver.

Accordingly a method for exposing a PCIe compatible device to an operating system operable on the PCD may include the steps of determining content for a set of PCIe base address registers that describe a PCIe compatible device integrating the content for the set of PCIe base address registers in the ACPI stored on the PCD and initializing a PCIe bus on the PCD to match the content for the set of PCIe base address registers as integrated in the ACPI. In an example system firmware such as firmware stored in the PROM is accessed by software to read ACPI tables at run time to determine the appropriate PCIe content to ACPI AML mapping. In another example software determines the appropriate PCIe content to ACPI AML mapping at compile time. Regardless of the method chosen the PCIe initialization will configure the PCIe base address registers to coincide with values assigned in the ACPI tables. Since PCIe is a memory mapped point to point bus for desired operation the memory mapping operation should match the system hardware description defined in the ACPI.

As illustrated in the portable computing device includes a processor SoC system on chip an extensible host controller interface xHCI a universal serial bus 3.0 connector a memory element and a firmware element . The memory element and the firmware element are coupled to the processor SoC by a first bus . The processor SoC which in some embodiments is constructed using an Acorn RISC Machine ARM based resource architecture is coupled to the xHCI by a PCIe compatible bus . The xHCI provides high speed differential signals over bus to the USB 3.0 connector . The USB 3.0 connector provides power and data via connection to a USB 3.0 compatible peripheral device in the portable computing device . Alternatively the USB 3.0 connector provides power and data via connection to a USB 3.0 compatible peripheral device separate from the portable computing device .

As known in the art the memory element includes an operating system O S and an advanced configuration and power interface ACPI . In operation the ACPI is used by the O S for hardware discovery configuration power management and monitoring. The ACPI defines hardware registers and basic input output system interfaces including interpreted executable function interfaces configuration tables and motherboard device enumeration and configuration. In addition the ACPI defines system and device power states and a thermal model. All of the above can be communicated via operating system independent application programming interfaces to one or more application programs executing on the PCD .

As further illustrated in the firmware element includes a PCIe base address register set store having a plurality of addressable memory elements with respective content stored therein. The content describes a resource e.g. a PCIe compatible device that matches a resource e.g. USB 3.0 peripheral device or USB 3.0 peripheral device as described by information in one or more of the tables in the ACPI . When the content in the plurality of addressable memory elements is communicated from the firmware element to the processor SoC the content exposes the PCIe compatible device to the operating system and application programs executing under the operating system .

As illustrated in the portable computing device includes a processor SoC system on chip an extensible host controller interface xHCI a universal serial bus 3.0 connector a memory element and a firmware element . The memory element and the firmware element are coupled to the processor SoC by a first bus . The processor SoC which in some embodiments is constructed using an Acorn RISC Machine ARM based resource architecture is coupled to the xHCI and the PCIe to Ethernet Converter through a PCIe switch and the PCIe compatible bus . The xHCI and the PCIe to Ethernet Converter are coupled to the PCIe switch on bus . The xHCI provides high speed differential signals over bus to the USB 3.0 connector . The USB 3.0 connector provides power and data via connection to a USB 3.0 compatible peripheral device . In the illustrated embodiment the USB 3.0 peripheral device is separate from the PCD . However in some embodiments the USB 3.0 peripheral device may be integral i.e. within the same housing as the portable computing device . The PCIe to Ethernet Converter provides signals over bus to the Ethernet connector . The Ethernet connector is available to provide power and data via twisted wire pairs in an Ethernet cable not shown to an Ethernet compatible device.

The memory element includes an operating system O S and an advanced configuration and power interface ACPI . In operation the ACPI is used by the O S for hardware discovery configuration power management and monitoring. The ACPI defines hardware registers and basic input output system interfaces including interpreted executable function interfaces configuration tables and motherboard device enumeration and configuration. In addition the ACPI defines system and device power states and a thermal model. All of the above can be communicated via operating system independent application programming interfaces to one or more application programs executing on the PCD .

As further illustrated in the firmware element includes a PCIe base address register set store having a plurality of addressable memory elements with respective content stored therein. The content describes a resource e.g. a PCIe compatible device that matches a resource e.g. the PCIe to Ethernet Converter as described by information in one or more of the tables in the ACPI . When the content in the plurality of addressable memory elements is communicated from the firmware element to the processor SoC the content exposes the PCIe to Ethernet Converter to the operating system and application programs executing under the operating system .

In block the content for the set of PCIe base registers is integrated communicated to or otherwise confirmed in an ACPI. The ACPI is an industry standard interface for enabling operating system directed configuration power management and thermal management of mobile desktop and server computing platforms. The ACPI replaced a collection of power management code in basic input output systems BIOS application programming interfaces directed to power management application programming interfaces directed to plug n play BIOS and multiprocessor specification information. ACPI devices are described in ACPI source language which is subsequently compiled into ACPI machine language AML . An operating system reads AML to discover or enumerate ACPI devices.

In block firmware in the PCD is used to initialize a PCIe bus to match information in the AML e.g. information in Tables through . For example and as described in association with the portable computing device and the portable computing device the content stored in a store of the firmware is communicated at appropriate times to one or both of the processor and the memory to support these elements in establishing a PCIe connection between the processor and one or more defined PCIe compatible devices. As indicated above software is used to initialize the PCIe bus to match the resources described in the ACPI AML tables. As further indicated above software may direct a read operation of the ACPI tables at runtime to determine the appropriate ACPI to PCIe mapping. Alternatively the ACPI to PCIe mapping may be determined at compile time. Regardless of the timing PCIe initialization configures the PCIe base address registers to coincide with values assigned in the ACPI tables.

In block an ACPI is provided that includes AML that matches the content for the set of PCIe base registers provided in block . The ACPI is an industry standard interface for enabling operating system directed configuration power management and thermal management of mobile desktop and server computing platforms. ACPI devices are described in ACPI source language which is subsequently compiled into ACPI machine language AML . As indicated above an operating system operable on the PCD reads the AML to discover or enumerate ACPI devices.

In block a PCIe bus on the PCD is initialized with content that matches information in the AML e.g. information in Tables through . For example and as described in association with the portable computing device and the portable computing device the content stored in a store of the firmware is communicated at appropriate times to one or both of the processor and the memory to support these elements in establishing a PCIe connection between the processor and one or more defined PCIe compatible devices. As indicated above software is used to initialize the PCIe bus to match the resources described in the ACPI AML tables. As also indicated above software may direct a read operation of the ACPI tables at runtime to determine the appropriate ACPI to PCIe mapping. Alternatively the ACPI to PCIe mapping may be determined at compile time. Regardless of the timing PCIe initialization configures the PCIe base address registers to coincide with values assigned in the ACPI tables.

In decision block a determination or comparison is performed to verify that the content determined in block matches ACPI information regarding defined PCIe compatible devices coupled to the PCD. When it is determined that the content does not match the AML as indicated by the flow control arrow labeled NO exiting decision block the method continues with block where one of the AML or the content are adjusted to define a PCIe compatible device. Otherwise when the content matches the information in the in AML as indicated by the flow control arrow labeled YES exiting decision block the method continues with block where firmware in the PCD is used to initialize a PCIe bus to match information in the AML e.g. information in Tables through . For example and as described in association with the portable computing device and the portable computing device the content stored in a store of the firmware is communicated at appropriate times to one or both of the processor and the memory to support these elements in establishing a PCIe connection between the processor and one or more defined PCIe compatible devices. As indicated above software is used to initialize the PCIe bus to match the resources described in the ACPI AML tables. As further indicated above software may direct a read operation of the ACPI tables at runtime to determine the appropriate ACPI to PCIe mapping. Alternatively the ACPI to PCIe mapping may be determined at compile time. Regardless of the timing PCIe initialization configures the PCIe base address registers to coincide with values assigned in the ACPI tables.

In view of the disclosure above one of ordinary skill in the art is able to write computer code or identify appropriate hardware and or other logic or circuitry to expose a PCIe compatible device coupled to a processor via a PCIe bus to an operating system without using software drivers. One skilled in the art is able to identify appropriate hardware and or software to without difficulty based on the flowcharts and associated description in this specification for example to communicate appropriate base address register content to identify a PCIe device. Therefore disclosure of a particular set of program code instructions or detailed hardware devices is not considered necessary for an adequate understanding of how to make and use the described portable computing devices systems and or methods. The inventive functionality of the claimed computer implemented processes is explained in more detail in the above description and in conjunction with the drawing figures which may illustrate various process flows. Further the processors etc. in combination with the memory and the instructions stored therein may serve as a means for performing one or more of the method steps described herein.

In one or more exemplary aspects the functions described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored on or transmitted as one or more instructions or code on a computer readable medium. Computer readable media include both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage medium may be any available medium that may be accessed by a computer. By way of example and not limitation such computer readable media may comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other optical or magnetic storage devices or any other medium that may be used to carry or store desired program code in the form of instructions or data structures and that may be accessed by a computer. The term disk or disc as used herein includes but is not limited to compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and Blu ray disc. Combinations of the above should also be included within the scope of computer readable media.

Although selected aspects have been illustrated and described in detail it will be understood that various substitutions and alterations may be made therein without departing from the concepts of the present disclosure as defined by the following claims.

