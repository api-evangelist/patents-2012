---

title: Migrating content items
abstract: Disclosed are systems, methods, and non-transitory computer-readable storage media for migrating content items from a source user account to a target user account. A user can specify content items in the source user account to be migrated to an existing or new target user account. A new content entry including an account identifier of the target account and a pointer to the content item can be created for each migrated content item. Further, a determination can be made as to whether a sharing link to each content item exists, and if so, the content pointer of the old content entry is modified to forward or redirect to the new content entry. An active flag associated with the old content entry can be set to false or 0 to indicate that the old content entry is no longer active.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09002815&OS=09002815&RS=09002815
owner: Dropbox, Inc.
number: 09002815
owner_city: San Francisco
owner_country: US
publication_date: 20121227
---
The present technology pertains to migrating content items across user content storage accounts and more specifically pertains to migrating content items from a source user account to a target user account.

Online storage accounts enable users to maintain a variety of content items in a safe and secure location where the user can access the content items at any time from any computing device. Additionally users can easily share content items with friends co workers and family either through shared online storage accounts or the use of generated links to content items stored in the online storage account. While sharing content is easy migrating content to a different online storage account can be time consuming and cumbersome. Users are required to download the content items stored in the online storage to a local storage delete the content items from the online storage and upload the content items to the new online storage account. In addition to having to deal with the long download and upload times users also may have to reorganize the uploaded files into an appropriate file hierarchy in the new user account. Finally links made to share content items are broken because the content items have been moved from their previous location. A user therefore must create new links and distribute them to replace the previous links. Accordingly there exists a need for an improved way to migrate content in an online storage to a different user account.

Additional features and advantages of the disclosure will be set forth in the description which follows and in part will be obvious from the description or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the disclosure will become more fully apparent from the following description and appended claims or can be learned by the practice of the principles set forth herein.

Disclosed are systems methods and non transitory computer readable storage media for migrating content items from a source user account to a target user account. A content management system can include a migration module configured to present users with a migration interface enabling a user to specify content items in a source user account to be migrated to a target user account. The migration interface can allow a user to select an existing account as the target user account or create a new account to be the target user account.

The content management system can be configured to create a new content entry for each content item selected for migration. The new content entry can be associated with an account identifier of the new account and include a content pointer to the content item that is copied from the old content entry associated with the content item. Further the new content entry can include a data path identifying the name of the content item and a file hierarchy. In some embodiments the content path can be copied from the old content entry. In some embodiments a new file hierarchy can be selected by the user and the content path can indicate the new file hierarchy.

The content management system can also determine whether a sharing link has been created to the content item. For example the old content entry can include a link flag indicating whether a sharing link has been created to the content item. If a sharing link has been created the content management system can modify the old content entry to forward or redirect to the new content entry. For example the content pointer of the old content entry can be modified to point to the new content entry. Further upon creating the new content entry an active flag associated with the old content entry can be set to false or 0 to indicate that the old content entry is no longer active.

Various embodiments of the disclosure are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without parting from the spirit and scope of the disclosure.

The disclosed technology addresses the need in the art for an improved way to migrate content in a source online storage account to a target online storage account. This can be useful when personal content items and shared content items have been comingled in a single online storage account. For example an employee may store personal content items along with work related content items in an online storage account provided by their employer. The employee may wish to remove the personal content items because a work administrator may have access to the online storage account and thus the employee s personal content items.

The disclosed technology can provide a migration interface that is configured to migrate selected content items to a target user account. The migration interface can be configured to enable a user to select the content items to be migrated and the target user account. Further the disclosed technology can ensure that any previously created sharing links to the personal content items remain active after the personal content items are migrated.

An exemplary system configuration is illustrated in wherein electronic devices communicate via a network for purposes of exchanging content and other data. The system can be configured for use on a wide area network such as that shown in . However the present principles are applicable to a wide variety of network configurations that facilitate the intercommunication of electronic devices. For example each of the components of system in can be implemented in a localized or distributed fashion in a network.

In system a user can interact with content management system through client devices . . . collectively connected to network by direct and or indirect communication. Content management system can support connections from a variety of different client devices such as desktop computers mobile computers mobile communications devices e.g. mobile phones smart phones tablets smart televisions set top boxes and or any other network enabled computing devices. Client devices can be of varying type capabilities operating systems etc. Furthermore content management system can concurrently accept connections from and interact with multiple client devices .

A user can interact with content management system via a client side application installed on client device . In some embodiments the client side application can include a content management system specific component. For example the component can be a stand alone application one or more application plug ins and or a browser extension. However the user can also interact with content management system via a third party application such as a web browser that resides on client device and is configured to communicate with content management system . In either case the client side application can present a user interface UI for the user to interact with content management system . For example the user can interact with the content management system via a client side application integrated with the file system or via a webpage displayed using a web browser application.

Content management system can make it possible for a user to store content as well as perform a variety of content management tasks such as retrieve modify browse and or share the content. Furthermore content management system can make it possible for a user to access the content from multiple client devices . For example client device can upload content to content management system via network . The content can later be retrieved from content management system using the same client device or some other client device .

To facilitate the various content management services a user can create an account with content management system . The account information can be maintained in user account database . User account database can store profile information for registered users. In some cases the only personal information in the user profile can be a username and or email address. However content management system can also be configured to accept additional user information.

User account database can also include account management information such as account type e.g. free or paid usage information e.g. file edit history maximum storage space authorized storage space used content storage locations security settings personal configuration settings content sharing data etc. Account management module can be configured to update and or obtain user account details in user account database . The account management module can be configured to interact with any number of other modules in content management system .

An account can be used to store content such as documents text files audio files video files etc. from one or more client devices authorized on the account. The content can also include folders of various types with different behaviors or other mechanisms of grouping content items together. For example an account can include a public folder that is accessible to any user. The public folder can be assigned a web accessible address. A link to the web accessible address can be used to access the contents of the public folder. In another example an account can include a photos folder that is intended for photos and that provides specific attributes and actions tailored for photos an audio folder that provides the ability to play back audio files and perform other audio related actions or other special purpose folders. An account can also include shared folders or group folders that are linked with and available to multiple user accounts. The permissions for multiple users may be different for a shared folder.

The content can be stored in content storage . Content storage can be a storage device multiple storage devices or a server. Alternatively content storage can be a cloud storage provider or network storage accessible via one or more communications networks. Content management system can hide the complexity and details from client devices so that client devices do not need to know exactly where the content items are being stored by content management system . In one variation content management system can store the content items in the same folder hierarchy as they appear on client device . However content management system can store the content items in its own order arrangement or hierarchy. Content management system can store the content items in a network accessible storage SAN device in a redundant array of inexpensive disks RAID etc. Content storage can store content items using one or more partition types such as FAT FAT3 NTFS EXT2 EXT3 EXT4 ReiserFS BTRFS and so forth.

Content storage can also store metadata describing content items content item types and the relationship of content items to various accounts folders or groups. The metadata for a content item can be stored as part of the content item or can be stored separately. In one variation each content item stored in content storage can be assigned a system wide unique identifier.

Content storage can decrease the amount of storage space required by identifying duplicate files or duplicate chunks of files. Instead of storing multiple copies content storage can store a single copy and then use a pointer or other mechanism to link the duplicates to the single copy. Similarly content storage can store files more efficiently as well as provide the ability to undo operations by using a file version control that tracks changes to files different versions of files including diverging version trees and a change history. The change history can include a set of changes that when applied to the original file version produce the changed file version.

Content management system can be configured to support automatic synchronization of content from one or more client devices . The synchronization can be platform agnostic. That is the content can be synchronized across multiple client devices of varying type capabilities operating systems etc. For example client device can include client software which synchronizes via a synchronization module at content management system content in client device s file system with the content in an associated user account. In some cases the client software can synchronize any changes to content in a designated folder and its sub folders such as new deleted modified copied or moved files or folders. The client software can be a separate software application can integrate with an existing content management application in the operating system or some combination thereof. In one example of client software that integrates with an existing content management application a user can manipulate content directly in a local folder while a background process monitors the local folder for changes and synchronizes those changes to content management system . Conversely the background process can identify content that has been updated at content management system and synchronize those changes to the local folder. The client software can provide notifications of synchronization operations and can provide indications of content statuses directly within the content management application. Sometimes client device may not have a network connection available. In this scenario the client software can monitor the linked folder for file changes and queue those changes for later synchronization to content management system when a network connection is available. Similarly a user can manually stop or pause synchronization with content management system .

A user can also view or manipulate content via a web interface generated and served by user interface module . For example the user can navigate in a web browser to a web address provided by content management system . Changes or updates to content in the content storage made through the web interface such as uploading a new version of a file can be propagated back to other client devices associated with the user s account. For example multiple client devices each with their own client software can be associated with a single account and files in the account can be synchronized between each of the multiple client devices .

Content management system can include a communications interface for interfacing with various client devices and can interact with other content and or service providers . . . collectively via an Application Programming Interface API . Certain software applications can access content storage via an API on behalf of a user. For example a software package such as an app on a smartphone or tablet computing device can programmatically make calls directly to content management system when a user provides credentials to read write create delete share or otherwise manipulate content. Similarly the API can allow users to access all or part of content storage through a web site.

Content management system can also include authenticator module which can verify user credentials security tokens API calls specific client devices and so forth to ensure only authorized clients and users can access files. Further content management system can include analytics module module that can track and report on aggregate file operations user actions network usage total storage space used as well as other technology usage or business metrics. A privacy and or security policy can prevent unauthorized access to user data stored with content management system .

Content management system can include sharing module for managing sharing content publicly or privately. Sharing content publicly can include making the content item accessible from any computing device in network communication with content management system . Sharing content privately can include linking a content item in content storage with two or more user accounts so that each user account has access to the content item. The sharing can be performed in a platform agnostic manner. That is the content can be shared across multiple client devices of varying type capabilities operating systems etc. The content can also be shared across varying types of user accounts.

In some embodiments content management system can be configured to maintain a content directory identifying the location of each content item in content storage . The content directory can include a unique content entry for each content item stored in the content storage.

A content entry can include a content path that can be used to identify the content item. For example the content path can include the name of the content item and a folder hierarchy associated with the content item. For example the content path can include a folder or path of folders in which the content item is placed as well as the name of the content item. Content management system can use the content path to present the content items in the appropriate folder hierarchy.

A content entry can also include a content pointer that identifies the location of the content item in content storage . For example the content pointer can include the exact storage address of the content item in memory. In some embodiments the content pointer can point to multiple locations each of which contains a portion of the content item.

In addition to a content path and content pointer a content entry can also include a user account identifier that identifies the user account that has access to the content item. In some embodiments multiple user account identifiers can be associated with a single content entry indicating that the content item has shared access by the multiple user accounts.

To share a content item privately sharing module can be configured to add a user account identifier to the content entry associated with the content item thus granting the added user account access to the content item. Sharing module can also be configured to remove user account identifiers from a content entry to restrict a user account s access to the content item.

To share content publicly sharing module can be configured to generate a custom network address such as a uniform resource locator URL which allows any web browser to access the content in content management system without any authentication. To accomplish this sharing module can be configured to include content identification data in the generated URL which can later be used to properly identify and return the requested content item. For example sharing module can be configured to include the user account identifier and the content path in the generated URL. Upon selection of the URL the content identification data included in the URL can be transmitted to content management system which can use the received content identification data to identify the appropriate content entry and return the content item associated with the content entry.

In addition to generating the URL sharing module can also be configured to record that a URL to the content item has been created. In some embodiments the content entry associated with a content item can include a URL flag indicating whether a URL to the content item has been created. For example the URL flag can be a Boolean value initially set to 0 or false to indicate that a URL to the content item has not been created. Sharing module can be configured to change the value of the flag to 1 or true after generating a URL to the content item.

In some embodiments sharing module can also be configured to deactivate a generated URL. For example each content entry can also include a URL active flag indicating whether the content should be returned in response to a request from the generated URL. For example sharing module can be configured to only return a content item requested by a generated link if the URL active flag is set to 1 or true. Thus access to a content item for which a URL has been generated can be easily restricted by changing the value of the URL active flag. This allows a user to restrict access to the shared content item without having to move the content item or delete the generated URL. Likewise sharing module can reactivate the URL by again changing the value of the URL active flag to 1 or true. A user can thus easily restore access to the content item without the need to generate a new URL.

The content path includes a file name and folder hierarchy. As illustrated the first entry is associated with a content item named file and located in the photos folder. The second content entry is associated with a content item named file and located in the docs folder and the third content entry is associated with a content item named file and located in the photos folder.

As illustrated the URL flag and the URL active flag of the first content entry are both set to 0 or false indicating that a URL has not been created for the content item associated with the content entry. The second content entry in contrast has a value of 1 for the URL flag and URL active flag indicating that a URL has been created to the content item associated with the content entry and that the URL is active and thus the content item should be returned in response to a user selecting the URL. Finally the third content entry has a value of 1 or true for the URL flag and a value of 0 for the URL active flag. Thus a URL to the content item associated with the content entry has been created however the URL has been deactivated and thus the content item should not be returned in response to selection of the URL.

The content pointer value indicates the location in storage memory of the content item associated with each content entry. As illustrated the first content entry has a content pointer of 0001 indicating that the content item associated with the content entry is located at memory location 0001. The content pointer for the second and third content pointers point to different locations in memory.

Returning to the discussion of in some embodiments the content management server can include migration module configured to migrate content associated with a first user account to a second user account. This can be useful in situations when a user wishes to remove content associated with a shared user account and put it into a personal user account or vice versa.

To accomplish this migration module can be configured to present a migration interface configured to enable a user to select content items in a source user account to be migrated to a target user account. For example the migration interface can be configured to display the content items associated with the source account and enable a user to select content items to be migrated to the target user account.

Further the migration interface can be configured to prompt a user to enter or select a target user account to which the selected content items will be migrated. In some embodiments the user can select an existing user account as a target account. For example the migration interface can include text fields prompting a user to enter a username and password of the target user account. Migration module can be configured to communicate with authentication module to authenticate the provided user name and password and access the target account to retrieve account data associated with the target user account. For example migration module can retrieve the user account identifier associated with the target account data indicating the contents of the target account etc.

In some embodiments migration interface can be configured to enable a user to create a new user account that serves as the target user account. For example the migration interface can be configured to prompt a user for user data to create a new user account. Migration module can gather account data while creating the new target account that can be used to migrate the content items to the target account. For example migration module can gather the user account identifier associated with the newly created target account.

To migrate the selected content items to the target user account migration module can be configured to create a new content entry for each selected content item using the account identifier associated with the target user account and the data stored in the existing source content entry including the content pointer. Thus the new entry can point to the same content item as the previous content entry but have the account identifier associated with the target user account rather than the account identifier associated with the source user account.

In some embodiments the content item can be moved to a different location in memory upon being migrated to a target user account. For example each user account can have a specified allocation of memory for content items stored in the user account. A content item that is migrated to a target user account can be copied to a new memory location associated with the target user account. Further the content item can be deleted from the memory location associated with the source user account. The new content entry created for the migrated content item can included a content pointer pointing to the memory location of the content item stored in the memory allocated to the target user account.

Returning to the discussion of upon creating the new content entry in some embodiments migration module can be configured to delete the old content entry. In some embodiments each content entry can include an active entry flag and migration module can be configured to set the flag 0 or false to indicate that the content entry is no longer active. This type of embodiment enables records of changed content entries to be maintained if ever needed.

One problem that arises from migrating content items is that a previously created URL to the migrated content item will no longer be able to access the content item because the URL is configured for the original user account. To avoid this problem the migration module can be configured to determine whether a URL has been previously generated for each content item to be migrated. For example migration module can be configured to check the URL flag associated with the content item to determine whether a URL to the content item has been created. If a URL has been created the migration module can modify the old content entry associated with the content item to forward or redirect to the new content entry. For example the content pointer of the old content entry can be modified to point or direct to the new content entry. Requests for the migrated content item originating from a URL created prior to the content item being migrated will thus access the content item through the old content entry even though the content item is associated with the target user account. Thus a previously created URL can still be used to access a migrated content item and the content item will be associated with the target user account.

While content management system is presented with specific components it should be understood by one skilled in the art that the architectural configuration of system is simply one possible configuration and that other configurations with more or less components are also possible.

At block the target user account data can be received. For example the user can use the provided user interface elements to enter a target user account. This can include a user name and password of an existing account or account information used to create a new account.

Upon receiving the target user account data the method continues to block where it is determined whether the target user account is a new account. If the target user account is a new account the method continues to block where a new account can be created. For example the target user account data can include necessary data to create the new account. Alternatively in some embodiments the user can be prompted for additional information necessary to create the new user account. Once created the new user account can be the target user account to which content items will be migrated.

If at block it is determined that the target user account is an existing account the method continues to block where the target user account can be accessed.

The method continues to block where the target user account can be presented to the user. This can include presenting all of the content items in the target user account in their folder hierarchy. The method continues to block where input indicating a content item to be migrated can be received. This can be done in numerous ways. For example in some embodiments the user can select a content item by clicking on the content item or a user interface element such as a checkbox provided next to the content item. In some embodiments the user can select a content item from the source user account and drag it to the target user account.

After a content item is selected the method continues to block where a new content entry including the account identifier of the target user account can be created for the selected content item. This step is disclosed in more detail in .

After a new content entry is created the method continues to block where it can be determined if a URL has been previously created to the old content entry associated with the content item. For example the URL flag can indicate if a URL to the content item has been created. If a URL has been created the method continues to block where the old content entry associated with the content item can be forwarded to the new content item associated with the content entry. This can include modifying the content pointer to point to the new content entry instead of pointing to the content item.

At block it is determined whether the content item is a folder. For example the content entry can include a folder flag indicating whether the content item is a folder. If the content item is a folder the method continues to block where the illustrated method can be repeated for each content item in the folder. Thus a new content entry can be created for the folder and each content item in the folder. To accomplish this the content path can be used to determine all other content items stored in the folder. If at block it is determined that the content item is not a folder the content pointer of the new content entry can be set to be the same as the content pointer of the old content entry. Thus the new content entry can point to the content item to be migrated.

The method continues to block where it can be determined whether the content path has changed. For example in some embodiments the user can select a new folder hierarchy to locate the content item in the target user account. If it is determined that the content path has been changed the method continues to block where the new content path can be set in the new content entry. If at block the content path has not been changed the content path in the new content entry can be set to be the same as the content path from the old content entry.

The interface further includes a text portion with a selectable link that enables the user to indicate that the user does not wish to migrate any content items from the source account . The link can be configured such that upon selection the migration interface will be closed. Finally the migration interface includes a continue button that is enabled to move the user forward to the next view in the migration interface. The user can select the continue button upon having made a selection between whether the content to remain in the source account is personal or shared content items. Alternatively in some embodiments the migration interface will not includes the continue button . For example the personal and shared buttons can be configured to move the user forward to the next view of the migration interface.

To enable user interaction with the computing device an input device can represent any number of input mechanisms such as a microphone for speech a touch sensitive screen for gesture or graphical input keyboard mouse motion input speech and so forth. An output device can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances multimodal systems can enable a user to provide multiple types of input to communicate with the computing device . The communications interface can generally govern and manage the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.

Storage device is a non volatile memory and can be a hard disk or other types of computer readable media which can store data that are accessible by a computer such as magnetic cassettes flash memory cards solid state memory devices digital versatile disks cartridges random access memories RAMs read only memory ROM and hybrids thereof.

The storage device can include software modules for controlling the processor . Other hardware or software modules are contemplated. The storage device can be connected to the system bus . In one aspect a hardware module that performs a particular function can include the software component stored in a computer readable medium in connection with the necessary hardware components such as the processor bus display and so forth to carry out the function.

Chipset can also interface with one or more communication interfaces that can have different physical interfaces. Such communication interfaces can include interfaces for wired and wireless local area networks for broadband wireless networks as well as personal area networks. Some applications of the methods for generating displaying and using the GUI disclosed herein can include receiving ordered datasets over the physical interface or be generated by the machine itself by processor analyzing data stored in storage or . Further the machine can receive inputs from a user via user interface components and execute appropriate functions such as browsing functions by interpreting these inputs using processor .

It can be appreciated that exemplary systems and can have more than one processor or be part of a group or cluster of computing devices networked together to provide greater processing capability.

For clarity of explanation in some instances the present technology may be presented as including individual functional blocks including functional blocks comprising devices device components steps or routines in a method embodied in software or combinations of hardware and software.

In some embodiments the computer readable storage devices mediums and memories can include a cable or wireless signal containing a bit stream and the like. However when mentioned non transitory computer readable storage media expressly exclude media such as energy carrier signals electromagnetic waves and signals per se.

Methods according to the above described examples can be implemented using computer executable instructions that are stored or otherwise available from computer readable media. Such instructions can comprise for example instructions and data which cause or otherwise configure a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Portions of computer resources used can be accessible over a network. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language firmware or source code. Examples of computer readable media that may be used to store instructions information used and or information created during methods according to described examples include magnetic or optical disks flash memory USB devices provided with non volatile memory networked storage devices and so on.

Devices implementing methods according to these disclosures can comprise hardware firmware and or software and can take any of a variety of form factors. Typical examples of such form factors include laptops smart phones small form factor personal computers personal digital assistants and so on. Functionality described herein also can be embodied in peripherals or add in cards. Such functionality can also be implemented on a circuit board among different chips or different processes executing in a single device by way of further example.

The instructions media for conveying such instructions computing resources for executing them and other structures for supporting such computing resources are means for providing the functions described in these disclosures.

Although a variety of examples and other information was used to explain aspects within the scope of the appended claims no limitation of the claims should be implied based on particular features or arrangements in such examples as one of ordinary skill would be able to use these examples to derive a wide variety of implementations. Further and although some subject matter may have been described in language specific to examples of structural features and or method steps it is to be understood that the subject matter defined in the appended claims is not necessarily limited to these described features or acts. For example such functionality can be distributed differently or performed in components other than those identified herein. Rather the described features and steps are disclosed as examples of components of systems and methods within the scope of the appended claims.

