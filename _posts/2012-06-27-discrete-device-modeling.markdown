---

title: Discrete device modeling
abstract: Among other things, one or more techniques and/or systems are provided for modeling a discrete device as a macro device. That is, the discrete device can comprise one or more parasitic elements, such as parasitic resistances and/or capacitances. Because values of the parasitic elements are unknown during pre-simulation of the discrete device, the discrete device can be modeled as a macro device, which can be used during pre-simulation to take into account the parasitic elements. For example, specified parameters, such as channel length, can be used to obtain a set of RC values that specify predicted values for the one or more parasitic elements of the discrete device. The discrete device can be modeled as the macro device using the set of RC values. In this way, the macro device can be used during pre-simulation to take into account the parasitic effects of parasitic elements of the discrete device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08694938&OS=08694938&RS=08694938
owner: Taiwan Semiconductor Manufacturing Company Limited
number: 08694938
owner_city: Hsin-Chu
owner_country: TW
publication_date: 20120627
---
Modeling may be implemented for numerous resource conservation and or other purposes such as to test a device before a physical manifestation of the device is produced. For example a circuit comprising one or more discrete devices e.g. transistors electrical components mechanical components etc. can be designed within a design kit environment such as a process design kit PDK . A design cycle of the circuit can comprise schematic design for the circuit pre simulation of the schematic physical layout design for the circuit verification between the schematic and the physical layout and or simulation of the physical layout.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Among other things one or more systems and or techniques for modeling a discrete device as a macro device are provided herein. A discrete device can comprise a mechanical and or electrical device e.g. a transistor a MOSFET a FinFET etc. within a circuit. The discrete device can have parasitic elements such as parasitic resistances and or parasitic capacitances. As provided herein the discrete device can be modeled as a macro device that comprises predicted values for parasitic elements of the discrete device. The macro device can be used to represent the discrete device within a design kit environment e.g. within a schematic or a physical layout of the circuit . In this way the macro device can be used during a pre simulation phase for a circuit to take into account parasitic effects of the parasitic elements of the discrete device.

In one example one or more specified parameters associated with a discrete device are received e.g. a user can specify a channel length a fin count and or a finger count for a FinFET device . A set of RC values are obtained from an RC data structure e.g. a table mapping user specified parameters to predicted values for parasitic elements based upon the one or more specified parameters. The set of RC values can correspond to one or more parasitic elements for the discrete device. The discrete device is modeled as a macro device based upon the set of RC values. That is the macro device corresponds to the discrete device and the one or more parasitic elements for the discrete device. In this way the macro device can be utilized during pre simulation of a circuit to take into account parasitic effects of the one or more parasitic elements of the discrete device.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and or novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are generally used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are illustrated in block diagram form in order to facilitate describing the claimed subject matter.

Many discrete devices such as transistors produce parasitic capacitances and or resistances. For example a FinFET device e.g. a fin based multi gate transistor can comprise parasitic resistance elements near the source drain and gate and can comprise parasitic capacitance elements between the gate and drain and between the gate and source. The difficulty and time involved with developing a circuit comprising one or more discrete devices can significantly increase because parasitic effects of the parasitic elements are unknown to a developer during design of the circuit such as during pre simulation. Accordingly as provided herein a discrete device is modeled as a macro device that takes into account one or more parasitic elements of the discrete device. The macro device can be utilized during pre simulation of the circuit to take into account the parasitic effects. In this way the developer may efficiently design the circuit e.g. the difficulty and time in developing the circuit can be mitigated because the developer can take into account parasitic effects of the discrete device.

One embodiment of modeling a discrete device as a macro device is illustrated by an exemplary method in . At the method starts. In one example a circuit can be designed within a design kit environment. For example the design kit environment can provide spice simulation functionality layout verse schematic LVS verification functionality RC extraction functionality and or other design functionality. The circuit can comprise one or more discrete devices such as a transistor e.g. a FinFET device . A design cycle of the circuit can comprise various phases such as schematic design for the circuit pre simulation of the schematic of the circuit physical layout design for the circuit verification between the schematic and the physical layout RC extraction for the physical layout e.g. extraction of parasitic elements within the circuit and or simulation of the physical layout based upon the RC extraction. Predicting values for parasitic elements of a discrete device early in the design cycle can mitigate design time of the circuit because a developer of the circuit can take into consideration the parasitic effects of the parasitic elements e.g. during pre simulation schematic design and or physical layout . Accordingly the discrete device can be modeled as a macro device that comprises predicted values for parasitic elements of the discrete device. The macro device can be utilized during pre simulation of the circuit to into account the parasitic effects of the parasitic elements of the discrete device.

Accordingly one or more specified parameters associated with a discrete device to be modeled are received at . For example a developer can specify a channel length a fin count and or a finger count for a FinFET device as specified parameters. It may be appreciated that a variety of other parameters may be specified for the discrete device e.g. which may be other than a FinFET . At a set of RC values e.g. a predicted value for a parasitic resistance element a predicted value for a parasitic capacitance element etc. are obtained from an RC data structure e.g. a table based upon the one or more specified parameters. The RC data structure maps specified parameters to predicted values for parasitic elements of the discrete device. It can be appreciated that one example of an RC data structure is illustrated in . In one example of obtaining the set of RC values one or more callback functions associated with a design kit environment can be invoked to query the RC data structure to obtain the set of RC values. In this way the set of RC values comprise predicted values e.g. an RC value that correspond to one or more parasitic elements for the discrete device. For example an RC value can comprise a predicted value for a parasitic resistance element e.g. an R an R and or an Rparasitic resistance for a FinFET device and or a parasitic capacitance element e.g. a Cand or a Cfor a FinFET device .

At the discrete device is modeled as the macro device based upon the set of RC values. It may be appreciated that one example of modeling a discrete device as a macro device is illustrate in . The macro device corresponds to the discrete device and the one or more parasitic elements for the discrete device. For example the macro device can comprise a gate drain source and or other elements of a transistor device and can comprise a parasitic resistance element associated with the gate R a parasitic resistance element associated with the drain R a parasitic resistance element associated with the source R a parasitic capacitance element between the gate and drain C a parasitic capacitance between the gate and source C and or other parasitic elements for the transistor device.

In one example of modeling the discrete device as the macro device a netlist is created based upon the set of RC values e.g. an asci file describing parameters of nodes wires devices etc. within the discrete device within a circuit representing the discrete device and or within a circuit within which the discrete device is comprised . The netlist comprises a description of the discrete device and the one or more parasitic elements for the discrete device e.g. the netlist can comprise a parasitic RC network netlist for the discrete device . In this way the netlist can be used to model the discrete device as the macro device for use during pre simulation of the circuit or rather a schematic design thereof to take into account the parasitic effects of parasitic elements of the discrete device.

At the macro device can be utilized during pre simulation of a circuit to take into account the one or more parasitic elements of the discrete device. In one example a schematic of the circuit can be pre simulated to obtain a pre simulation functional output describing the circuit. In another example the netlist describing the discrete device can be used during pre simulation of the schematic. In this way the developer may efficiently design the circuit because the parasitic effects of the discrete device can be taken into account during pre simulation of the schematic circuit. The pre simulation functional output can be compared with a physical layout of the circuit to verify functional similarity between the schematic and the physical layout. For example a layout verse schematic LVS technique can be performed upon the physical layout and the pre simulation functional output to verify functional similarity.

RC extraction can be performed for the circuit to obtain extracted RC values such as parasitic values for the circuit and or discrete devices therein. For example the RC extraction can be performed upon the physical layout that was verified as functionally similar to the schematic. In one example the extracted RC values can correspond to parasitic elements between physical layers of the circuit and or of discrete devices therein. Because the macro device takes into account the parasitic elements of the discrete device a Resistor short and Capacitor open configuration can be utilized for the one or more parasitic elements within the macro device to mitigate double counting such parasitic elements. That is the pre simulation of the schematic e.g. based upon the netlist describing the parasitic elements of the discrete device took into account the parasitic elements defined within the macro device. In this way the circuit can be simulated based upon the extracted RC values without double counting parasitic elements of the discrete device that were taken into account during pre simulation of the schematic. At the method ends.

One embodiment of modeling a discrete device such as a FinFET device for example as a macro device is illustrated by an exemplary method in . That is while is discussed with regard to a FinFET device the disclosure is not meant to be so limited. For example FinFET device could be replaced with discrete device and FinFET parameters could be replaced with specified parameters for example in the following description of . At the method starts. At one or more FinFET parameters associated with a FinFET device to be modeled are received. For example a developer can specify a channel length a fin count a finger count and or other parameters for the FinFET device. At a set of parasitic RC values are obtained from an RC data structure e.g. a table comprising mappings of FinFET parameters to predicted values of parasitic elements based upon the one or more FinFET parameters. In this way the set of parasitic RC values can correspond to one or more parasitic elements for the FinFET device. For example the set of parasitic RC values can comprise predicted values for an Rresistance element e.g. a parasitic resistance for a gate of the FinFET device an Rresistance element e.g. a parasitic resistance for a drain of the FinFET device an Rresistance element e.g. a parasitic resistance for a source of the FinFET device a Ccapacitance element e.g. a parasitic capacitance between the gate and drain of the FinFET device a Ccapacitance element e.g. a parasitic capacitance between the gate and source of the FinFET device and or other parasitic elements.

At a netlist can be created based upon the set of parasitic RC values. For example a netlist procedure can be invoked to create the netlist to describe a circuit e.g. nodes wires devices and or other elements of the circuit . The netlist can comprise a description of the FinFET device and the one or more parasitic elements for the FinFET device. At the FinFET device can be modeled as a macro device based upon the netlist e.g. the netlist can be used to describe the macro device during pre simulation . The macro device corresponds to the FinFET device e.g. a source a drain a gate and or other elements of the FinFET device and the one or more parasitic elements for the FinFET device e.g. predicted values for the parasitic elements . In this way a developer can efficiently design a circuit e.g. a schematic of the circuit a physical layout of the circuit etc. by taking into account the parasitic effects of parasitic elements of the FinFET device. At the macro device can be utilized during pre simulation of a circuit e.g. a schematic of the circuit to take into account the one or more parasitic elements of the FinFET device. A pre simulation functional output describing the circuit such as behavior of the circuit can be obtained from the pre simulation. At the method ends.

The system comprises a modeling component . The modeling component is configured to model the discrete device as the macro device which can be used during pre simulation of the circuit. In one example the discrete device can comprise a transistor such as a FinFET device. The discrete device can comprise a drain a source a gate and or other elements. However parasitic elements for the discrete device may be unknown due to the complexity in modeling such parasitic elements. Accordingly the modeling component is configured to create the macro device to take into account one or more predicted parasitic elements of the discrete device . In this way the macro device represents the discrete device and the one or more predicted parasitic elements of the discrete device .

In one example the modeling component is configured to receive one or more specified parameters associated with the discrete device . The modeling component is configured to query an RC data structure e.g. a table mapping specified parameters to RC values such as predicted values for parasitic elements using the specified parameters to obtain a set of RC values for one or more parasitic elements of the discrete device . For example the set of RC values can comprise predicated parasitic values for an Rresistance element an Rresistance element an Rresistance element a Ccapacitance element a Ccapacitance element and or other predicted parasitic elements not illustrated. In one example the modeling component is configured to model the discrete device as the macro device using the set of RC values . In another example the modeling component is configured to create a netlist describing the discrete device and the one or more predicted parasitic elements based upon the set of RC values. The modeling component can model the discrete device as the macro device based upon the netlist. In this way the macro device corresponds to the discrete device e.g. drain source gate and the one or more predicted parasitic elements e.g. Rresistance element Rresistance element Rresistance element Ccapacitance element and Ccapacitance element .

The system comprises a simulation component configured to pre simulate the schematic of the circuit to obtain a pre simulation functional output for the circuit. The pre simulation functional output can describe the behavior of the circuit. In one example the simulation component can invoke spice analysis techniques to pre simulate the schematic . In another example the simulation component can utilize a netlist describing the circuit e.g. the macro device and or the other devices to pre simulate the circuit. In this way the pre simulation functional output can describe the functionality of the circuit designed within the schematic which can comprise parasitic effects of the one or more predicted parasitic elements represented by the macro device .

The simulation component is configured to perform RC extraction for the circuit to obtain extracted RC values for the circuit. The simulation component can perform RC extraction upon the physical layout to obtain extracted RC values corresponding to parasitic values for the circuit e.g. parasitic values between physical layers such as routing layers . In one example the simulation component can invoke a 2D solver and or a 3D solver to perform RC extraction. Because the macro device represents the discrete device and the one or more predicted parasitic elements e.g. which were taken into account during pre simulation a Resistor short and Capacitor open configuration can be utilized for the macro device to discount the one or more predicted parasitic elements during RC extraction so that such predicted parasitic elements e.g. which were taken into account during pre simulation are not counted again during RC extraction. That is the Resistor short and Capacitor open configuration shorts the parasitic resistance elements and opens the parasitic capacitance elements within the macro device so that the RC extraction does not take such predicted parasitic elements into account.

The simulation component is configured to simulate the circuit. For example the simulation component can simulate the physical layout based upon the extracted RC values. Design cycle time and or difficulty e.g. schematic design physical layout design functional similarity verification RC extraction and or simulation can be mitigated because the developer can utilize the macro device during the design cycle e.g. during schematic design to take into account parasitic effects of the discrete device.

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R flash drive a platter of a hard disk drive etc. on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to one or more of the principles set forth herein. In one such embodiment the processor executable computer instructions may be configured to perform a method such as at least some of the exemplary method of and or at least some of exemplary method of for example. In another such embodiment the processor executable instructions may be configured to implement a system such as at least some of the exemplary system of at least some of the exemplary system of and or at least some of the exemplary system of for example. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device . Device may also include communication connection s to facilitate communications with one or more other devices.

According to one aspect of the instant disclosure a system for modeling a discrete device as a macro device is provided. The system comprises a modeling component configured to model a discrete device as a macro device for simulation during a pre simulation phase of a schematic for a circuit comprising the discrete device where the macro device represents the discrete device and one or more predicted parasitic elements of the discrete device.

According to one aspect of the instant disclosure a method for modeling a discrete device as a macro device is provided. The method comprises receiving one or more specified parameters associated with a discrete device to be modeled and obtaining a set of RC values from an RC data structure based upon the one or more specified parameters where the set of RC values corresponds to one or more parasitic elements for the discrete device. The method also comprises modeling the discrete device as a macro device based upon the set of RC values where the macro device corresponds to the discrete device and the one or more parasitic elements for the discrete device and utilizing the macro device during pre simulation of a circuit comprising the discrete device to take into account the one or more parasitic elements of the discrete device.

According to one aspect of the instant disclosure a computer readable medium comprising processor executable instructions that when executed perform a method for modeling a discrete device as a macro device is provided. The method comprises receiving one or more specified parameters associated with a discrete device to be modeled and obtaining a set of parasitic RC values from an RC data structure based upon the one or more specified parameters where the set of parasitic RC values corresponds to one or more parasitic elements for the discrete device. The method also comprises creating a netlist based upon the set of parasitic RC values where the netlist comprises a description of the discrete device and the one or more parasitic elements for the discrete device and modeling the discrete device as a macro device based upon the netlist where the macro device corresponds to the discrete device and the one or more parasitic elements for the discrete device. The method also comprises utilizing the macro device during pre simulation of a circuit comprising the discrete device to take into account the one or more parasitic elements of the discrete device.

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form. Also at least one of A and B and or the like generally means A or B or both A and B.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and or advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

