---

title: Sequence indicator for command communicated to a sequential access storage device
abstract: A command is communicated by a computer and received by a sequential storage access device. The command includes a sequence indicator. The sequential storage access device uses the sequence indicator, in a communication path failure recovery operation, to at least determine whether a command has been confirmed by the device driver as being processed by the sequential access storage device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09135124&OS=09135124&RS=09135124
owner: Hewlett-Packard Development Company, L.P.
number: 09135124
owner_city: Houston
owner_country: US
publication_date: 20120430
---
A tape drive may be used for such purposes as storing backup data for a computer and providing data to the computer in a recovery operation in the event that the computer experiences data corruption data loss and so forth. The tape drive typically reads data from writes data to media that is formed from a strip or tape of magnetically sensitive material which is moved by the tape drive s motor relative to the tape drive s read write head. In this manner the read write head contacts the tape at different positions as the tape moves relative to the head to read data from or write data to these different positions. The tape drive is an example of a sequential access storage device data is written to read from the tape in a sequential fashion from the starting position to the end of the tape or until the operation is complete.

Referring to in accordance with example implementations a computer based system includes a computer that for such purposes as storing restoring backup data and other purposes may access one or multiple sequential access storage devices such as a sequential storage access device a tape drive for example . More specifically for the examples which are disclosed herein the computer may access the sequential access storage device over a selected communication path which may be formed in part by a network and this access may involve the communication of commands and data over the selected communication path.

For example the computer may via the selected communication path communicate data to be stored on the sequential storage access device and communicate commands to the device for such purposes as instructing the device to perform actions or inquire about a status of device . As a more specific example the commands that are generated by the computer and communicated to the sequential storage access device may include commands to read data from the device erase data from the device write data to the device format media of the device rewind media of the device and so forth. As further described herein the computer may communicate commands to the sequential storage access device . One type of command is a notification to change the selected communication path. The sequential storage access device may communicate data and various responses over the selected communication path to the computer to inform the computer about statuses errors and so forth.

For purposes of issuing the commands responding to statuses and in general controlling operation of the sequential storage access device from the standpoint of the computer the computer includes a set of machine executable instructions which when executed by the computer form a device driver .

The device driver may communicate with the sequential access storage device using one of one or multiple communication paths. For purposes of maintaining the computer based system in a stable state techniques and systems are disclosed herein to address failover concerns should the currently selected communication path fail a fiber optic line may be cut a switch may fail and so forth .

The failure of the currently selected communication path may occur at an inopportune time such as after the device driver issues a command to the sequential access storage device but before the device driver receives confirmation from the device that the command was successfully processed by the device during the communication of data over the failed communication between the device driver and the device before the device receives a command sent by the device driver and so forth.

As a more specific example the driver may generate or issue a write command which is communicated to the network for purposes of writing data to the sequential access storage device and the currently selected communication path for this example may fail before the device confirms to the device driver that the write command has been processed by the device . Although the driver may in response to the communication path failure select an alternative communication path for communications with the sequential access storage device the mere communication or re communication of the write command does not ensure that the device has received and or actually processed the write command. Therefore the position of the sequential storage access device s media is undetermined and the device driver and the sequential access storage device may share different statuses regarding the processing of the write command if not for the features that are described herein.

In accordance with example implementations that are disclosed herein to permit failover recovery should the currently selected communication path between the driver and the sequential access storage device fail the driver includes a sequence indicator in each media access command that is communicated to the device . In this context a media access command refers to a command for the sequential access storage device which causes media of the sequential access storage device to move or be modified. In this manner unlike a random access device the sequential access storage device cannot jump from one position on the media to a different position without first properly positioning the media before a media access command is executed by the sequential storage access device . Therefore due to the movement in media position if the command status shared by the device driver differs from the command status that is shared by the sequential access storage device after a communication path failure errors may result due to media position discrepancies.

In accordance with some implementations whether or not a command is a media access command depends on the action to be taken by the sequential access storage device in response to completing the command. For example a write attribute command may cause a particular sequential access storage device to write an attribute to its media and as such is considered to be a media access command for the device. However another sequential access storage device may in response to a write attribute command write an attribute to its flash memory instead of writing the attribute to its media and therefore the write attribute command for this sequential access storage device is not considered to be a media access command.

In addition to media access commands the driver may communicate non media access commands a status inquiry command for example to the sequential access storage device which does not cause the media of the sequential access storage device to move or be modified.

To further illustrate how these errors may occur due to media position discrepancies a write command may be issued by the device driver to write a certain number of bytes to the media of the sequential access storage device . In the absence of a communication path failure the sequential access storage device responds to the write command and begins writing the received data as the media is moved underneath the device s read write head. The sequential access storage device notifies the device driver upon the successful completion of the write command. However if a failure occurs in the communication path occurs before the sequential access storage device completes processing the write command the media may be left in an indeterminate position.

For example the communication path may fail immediately after the write command is sent but before the device driver sends any data. Therefore no data is received by the sequential access storage device in this scenario and the media remains in its initial position although without the benefit of the command response the device drive is unaware of the media being in the initial position. As another example the selected communication path may fail after all of the data is written to the media but before the device driver receives a response indicating successful completion of the write command. As a result of this scenario the media may be in the same position as it would have been had the command completed successfully although without the benefit of the command response the device drive is unaware of the successful completion. As another example the selected communication path may fail after some but not all of the data has been written to the media . Under this scenario the communication path failure leaves the media in an indeterminate position between the initial position and the successfully completed position.

The sequence indicator indicates a particular order in which the media access commands are communicated to the sequential access storage device . This order in turn allows the sequential access storage device to detect whether a sequence counter is a duplicate to identify whether a given media access command has been received by the device . The sequential access storage device receives the next sequence count which allows the device to further identify whether a media access command that has been received by the sequential access storage device has been confirmed at the device driver as being processed by the sequential access storage device . With such knowledge of the sequence of the media access commands and the command status as conveyed through the sequence indicator if a path failure occurs the sequence indicator allows the sequential access storage device to undertake an appropriate failover recovery operation to ensure that both the device drive and the sequential access storage device share the same command status.

It is noted that although implementations are disclosed specifically herein in which the sequential access storage device performs the failover recovery operation in further implementations the device driver may perform the failover recovery operation. In this manner for these implementations the device driver uses its knowledge of the position information and the existing standard commands for managing the position on the sequential access storage device to send commands to the device to cause the device to change to the position necessary for resuming operation. Thus regardless of whether the sequential access storage device or the device driver initiates the actions to perform the failover recovery operation the failover recovery operation uses the command status synchronization that is allowed by the sequence indicator .

It is noted that recovery from a communication path failure may not be achieved by the device driver merely resending any outstanding commands i.e. commands for which the device driver has not received processing confirmation from the sequential storage access device as the actual position of the media by the device driver is unknown without other measures being undertaken. Moreover the device driver may be unaware of the type of failure that has occurred and also may not be aware of the current position of the sequential storage access device s media . Furthermore the device driver may not be able to reposition the media to the correct position without additional information or interaction with the sequential storage access device .

Due to the use of the sequential indicator for media access command however the sequential access storage device and the device driver are able to detect differences in the command status thereby allowing the sequential access storage device or the device driver to perform a failover recovery operation when the sequential access storage device is notified about a communication path failure.

As a non limiting list of examples a media access command may be any of the following commands that cause the sequential access storage device to move the media an ERASE command a FORMAT medium command a LOCATE command a READ command a REWIND command a SPACE command a VERIFY command a WRITE command and a WRITE FILE MARKS command.

Referring to in accordance with example implementations a technique includes using a device driver to communicate commands to a sequential access storage device via a communication path pursuant to block . The technique includes the device driver receiving block a command from an application and determining decision block whether a sequence is to be added to the command. In this regard if the command is a media access command then the device driver adds block a sequence indicator to the command. The command with or without the sequence indicator has been sent over the communication path pursuant to block . As further disclosed herein the sequence indicator allows the sequential access storage device to in a communication path failure recovery operation also called a failover recovery operation identify at least whether one of the commands has not been confirmed at the device driver as being processed by the sequential access storage device. Moreover as further described herein the sequential indicator also permits the sequential access storage device to determine whether a given command has not been received by the device.

Referring back to in general the computer may be a physical machine or an actual machine that is made up of machine executable instructions i.e. software and hardware . Although the computer is represented in as being contained within a box the computer may be a distributed machine which has multiple nodes that provide a distributed and parallel processing system. In accordance with some implementations the physical machine may be located within one cabinet or rack or alternatively the physical machine may be located in multiple cabinets or racks .

The computer may include such hardware as one or more central processing units CPUs and a memory that stores the machine executable instructions application data configuration data and so forth. In general the memory is a non transitory memory which may include semiconductor storage devices magnetic storage devices optical storage devices and so forth. The computer further includes one or multiple host bus adaptors which the computer uses to communicate with one or multiple sequential access storage devices such as the sequential access storage device . It is noted that the computer may include various other hardware components such as one or more of the following mass storage devices display devices input devices a mouse and a keyboard for example and so forth. In accordance with example implementations at least part of the machine executable instructions may be executed in one or multiple virtual machines of the computer .

For implementations that use the network the network may be a network fabric which may include one or more buses or fast interconnects. In this regard the network may include wide area network WAN connections local area network LAN connections wireless connections Internet connections and so forth. In general one or multiple protocols may be used in the communications over the network and these communications may involve such protocols as a serial attach Small Computer System Interface SCSI bus protocol a parallel SCSI protocol a SCSI for Internet iSCSI protocol a Universal Serial Bus USB protocol a Fibre Channel protocol an Ethernet protocol and so forth.

The machine executable instructions of the computer in general may include device drivers other than the device driver as well as other sets of machine executable instructions that form corresponding applications . In general one or multiple applications may generate data through an application programming interface API of an operating system of the computer for purposes of causing the device driver to respond by communicating with the sequential access storage device .

In general the sequential access storage device includes one or multiple ports which are coupled to the network to communicate commands data and statuses with the device driver over a selected communication path. In this manner the device driver may communicate with the sequential access storage device over a selected communication path that is formed by one of the host bus adaptors the network and one of the ports . Thus in accordance with example implementations the particular combination of a host bus adaptor and port defines a given communication path between the device driver and the sequential access storage device .

As a non limiting example in accordance with some implementations the SCSI protocol may be used for communications over the network . For these communications an initiator such as a given host bus adapter port under the control of the device driver for example issues a given SCSI command to request services from a target of the command. The target in turn includes a logical unit LU which accepts and processes the SCSI command. It is noted that given target may include multiple LUs. In general a communication path is defined by a given initiator target logical unit nexus herein called an ITL nexus .

Thus a different combination of the host bus adaptor and port specifies a different ITL nexus and correspondingly specifies a different communication path. The device driver may deem that the currently selected communication path has failed by as examples waiting for a predetermined time interval without receiving an expected response from the sequential access storage device or receiving an error indication from the host bus adaptor . When this occurs the device driver selects another ITL nexus i.e. selects an alternate communication path for communications between the device driver and the sequential access storage device .

A controller of the sequential access storage device receives media access commands and other commands that are issued by the device driver and controls a media access module accordingly for purposes of moving the media to the appropriate position and performing the commands writing data reading data and so forth . As a non limiting example the sequential access storage device may be a tape storage device the media may be magnetic tape media of the sequential access storage device and the media access module may include the motor read write head and so forth of the sequential storage access device .

In accordance with some implementations the sequence indicator is a two bit code whose value indicates a cyclical count to identify an order of the three most recently communicated media access commands and as a more specific example the two bit code may have one of the following three values 01b 10b and 11 b where b represents a binary representation.

In general the device driver regulates the issuing of the media access commands to the sequential access storage device such that a single media access command is outstanding at any one time. When the outstanding media access command is acknowledged as being completed via a status reply from the sequential access storage device the device driver increments a sequential indicator counter that is maintained by the device driver and stores the corresponding value i.e. the value indicated by the sequence indicator in the next media access command that is issued by the device driver . Other variations are contemplated which are within the scope of the appended claims. For example in further implementations the sequence indicator may be a three bit counter that allows two or three commands at one time to be outstanding.

In accordance with an example implantation the controller stores an expected value for the sequence indicator of the next received media access command and uses the expected value to detect errors as well as perform a failover recovery operation in the event of a communication path failure as further described herein. The expected value cycles according to the sequence used for the sequence indicator 01b 10b and 11b.

The controller compares the expected value of its sequential access counter to the sequence indicator of a given media access command for purposes of determining whether a particular media access command has been lost. In this manner if the expected value agrees with the value indicated by the sequence indicator of the most recently received media access command then the controller proceeds to process the command and increment its expected value to be used in the processing of the next received media access command . If however the expected value is different from the value that indicated by the sequence indicator the controller replies with an error status to the device driver .

The sequence indicator and the expected value are further used in a failover recovery operation that is performed by the sequential storage access device . In this manner the controller uses the expected value in conjunction with a sequence indicator of a communication path change notification command as further described below for purposes of determining whether the device driver and the sequential access storage device share the command status and for purposes of performing a failover recovery operation to restore the status to a common state.

As a more specific example depicts an example of a technique used by the device driver to process commands. Pursuant to the technique the device driver determines decision block whether a given command to be issued to the sequential access storage device is a media access command. If so the device driver includes block a sequence indicator into the command. Otherwise the device driver does not include the sequence indicator in a non media access command i.e. a command that does not cause the media of the sequential storage access device to move when the command is processed as merely repeating a non media access command does not change the position of the media and as such may be resubmitted after a communication path failure without introducing error into the system. It is noted that the non media access commands do not include the sequence counter . Pursuant to the technique after the selective inclusion of the sequence indicator into the command the command is communicated block by the device driver to the sequential storage access device.

In accordance with example implementations the device driver regulates the issuance of the media access commands to the sequential access storage device one at a time although one or multiple non media access commands may be issued to the sequential access storage device between two successively issued media access commands or while a media access command is being processed in accordance with some implementations.

After issuing a media access command the device driver waits for a confirmation from the sequential access storage device regarding whether the device has successfully processed the command . If the device driver determines decision block that the media access command was successfully processed then the device driver updates block its count for the sequence indicator . Otherwise if the device driver determines decision block that the sequential access storage device did not process the media access command the device driver receives an error message from the host bus adaptor for example then the device driver performs the appropriate corrective action pursuant to block .

Otherwise the controller communicates block the error status to the device driver . It is noted that pursuant to the technique if the received command is not a media access command the controller proceeds to processing the command pursuant to block . After the controller processes the command including processing any data associated with the command the controller communicates block the processed status to the device driver .

Upon detecting a communication path failure the device driver performs a technique that is generally depicted in in accordance with example implementations. Pursuant to the technique the device driver determines block an alternate communication path for communications with the sequential access storage device and using this alternate communication path the device driver communicates block a communication path change notification command to the sequential access storage device which includes the current sequence indicator.

In this manner referring also to in conjunction with in accordance with example implementations a communication path change notification command includes a current sequence indicator which is the sequence indicator associated with the last command issued by the device driver . It is noted that the communication path change notification command may include data indicative of other instruction such as a key or identifier that identifies the failed ITL nexus between the sequential access storage device and device driver a header identifying the command and so forth. As another example the communication path change notification command may indicate a value such as a key registered with the drive which may be used to identify the host or may be a value such as a worldwide name that identifies the previous nexus.

Depending on the timing of the failure the device driver may or may not have received confirmation from the sequential access storage device that the device processed the associated media access command. As a result the communication path change notification command may or may not indicate via a resend field of the command whether or not the device driver is resending the command associated with the sequence indicator .

For example if the device driver did not receive confirmation then the resend field indicates device driver will be resending the command in accordance with example implementations. As another example if the device driver has received confirmation of the most recent media access command then the device driver indicates via the resend field that the command will not be resent and that the indicated sequence count is the sequence count for the next command that will be sent.

Still referring to thus pursuant to the technique if the device driver determines decision block that a media access command is outstanding i.e. the device driver has not received a confirmation that the media access command has been processed by the sequential access storage device then the device driver resends block the outstanding media access command to the sequential storage access device and this resent command includes an unupdated sequence indicator as part of the command.

If a media command is not outstanding the device driver determines diamond whether a non media access command is outstanding pursuant to decision block and if so resends block the non media access command . It is noted that in accordance with some implementations a media access command as well as a non media command may be outstanding and the device driver may correspondingly resend both of these commands. Thus many implementations are contemplated which are within the scope of the appended claims.

In accordance with example implementations the sequential access storage device performs a technique see in response to receiving a communication path change notification command see . As part of processing this command the storage controller processes the sequence indicator of the command and the resend field see of the communication path change notification command in accordance with exemplary implementations. In this manner pursuant to the technique the storage controller determines decision block whether the communication path change notification command indicates whether the command that is associated with the sequence indicator will be resent.

If the communication path change notification command indicates that a command will not be resent the storage controller terminates its failover processing as no further action is needed on behalf of the sequential storage access device . Otherwise if the communication path change notification command indicates that a command will be resent the storage controller determines decision block whether a media access command did not complete as also indicated by the resend field .

If a media access command did not complete the storage controller determines decision block whether the expected count value maintained by the controller agrees with the sequence indicator of the communication path charge notification command . If so then the failed command was not received by the sequential access storage device and no further action is taken by the storage controller . If however the expected and actual count values do not agree pursuant to decision block then the storage controller determines decision block whether the actual count corresponds to the immediately previous command. If so the storage controller performs block a failure recovery operation based on the class type of the sequential access storage device .

For example in accordance with some implementations if the sequential access storage device is a SCSI stream command SSC device the storage controller repositions the device to the starting position.

Otherwise pursuant to the technique if the storage controller determines decision block that the actual count does not correspond to the previous command then the storage controller communicates block the corresponding error status to the device driver .

If pursuant to the technique the storage controller determines decision block that the resend field indicates that the non media access command completed with an error to be reported then the storage controller sets block a previous error notification as active ready to be reported on the next command if applicable. If the storage controller determines decision block that the resend field indicates that both a media access and a non media access command did not complete the storage controller performs block blocks and block for purposes of processing these commands.

While a limited number of examples have been disclosed herein those skilled in the art having the benefit of this disclosure will appreciate numerous modifications and variations therefrom. It is intended that the appended claims cover all such modifications and variations.

